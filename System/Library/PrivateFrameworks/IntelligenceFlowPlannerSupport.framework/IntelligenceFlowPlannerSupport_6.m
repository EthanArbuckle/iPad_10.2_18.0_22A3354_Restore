uint64_t assignWithTake for TranscriptProtoPayloadEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *StepResults;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *DecorationResult;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  int *v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t Step;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  _DWORD *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  _DWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _DWORD *v139;
  _DWORD *v140;
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  _DWORD *v145;
  _DWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  _OWORD *v155;
  _OWORD *v156;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v158;
  uint64_t v159;
  _DWORD *v160;
  _DWORD *v161;
  uint64_t v162;
  uint64_t v163;
  __int128 v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD *v170;
  _OWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  _DWORD *v222;
  _DWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _DWORD *v232;
  _DWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _DWORD *v255;
  _DWORD *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  _DWORD *v264;
  _DWORD *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  _DWORD *v272;
  _DWORD *v273;
  uint64_t v274;
  uint64_t v275;
  void *v276;
  const void *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _DWORD *v281;
  _DWORD *v282;
  uint64_t v283;
  __int128 v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v297;
  uint64_t v298;
  _DWORD *v299;
  _DWORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  _DWORD *v326;
  _DWORD *v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  char *v354;
  __int128 v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  int EnumCaseMultiPayload;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  char *v379;
  uint64_t v380;
  char *v381;
  char *v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  _BYTE *v386;
  _BYTE *v387;
  uint64_t v388;
  uint64_t v389;
  _BYTE *v390;
  _BYTE *v391;
  uint64_t v392;
  uint64_t v393;
  _DWORD *v394;
  _DWORD *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  _QWORD *v403;
  _QWORD *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  int v409;
  uint64_t v410;
  uint64_t v411;
  _DWORD *v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  char *v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  char *v420;
  uint64_t v421;
  uint64_t v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  char *v440;
  uint64_t v441;
  char *v442;
  uint64_t v443;
  char *v444;
  char *v445;
  int *v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  char *v450;
  uint64_t v451;
  uint64_t v452;
  __int128 v453;
  __int128 v454;
  uint64_t v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  char *v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  char *v467;
  char *v468;
  uint64_t v469;
  uint64_t v470;
  char *v471;
  char *v472;
  uint64_t v473;
  uint64_t v474;
  _DWORD *v475;
  _DWORD *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  _DWORD *v484;
  _DWORD *v485;
  uint64_t v486;
  uint64_t v487;
  char *v488;
  char *v489;
  uint64_t v490;
  uint64_t v491;
  _DWORD *v492;
  _DWORD *v493;
  uint64_t v494;
  uint64_t v495;
  char *v496;
  char *v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  char *v510;
  uint64_t v511;
  char *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  _QWORD *v516;
  _QWORD *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  char *v521;
  char *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  char *v536;
  uint64_t v537;
  uint64_t v538;
  _QWORD *v539;
  _QWORD *v540;
  int *v541;
  uint64_t v542;
  uint64_t v543;
  char *v544;
  char *v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  char *v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  uint64_t v555;
  char *v556;
  char *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  char *v561;
  uint64_t v562;
  char *v563;
  char *v564;
  uint64_t v565;
  uint64_t v566;
  char *v567;
  char *v568;
  uint64_t v569;
  uint64_t v570;
  _DWORD *v571;
  _DWORD *v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  char *v576;
  char *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  char *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  char *v592;
  char *v593;
  char *__srca;
  char *__src;
  int *__dst;
  char *__dsta;
  int *v598;
  char *v599;
  _DWORD *v600;
  int *v601;

  if (a1 != a2)
  {
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoPayloadEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        StepResults = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v7 = StepResults[5];
        v8 = (_OWORD *)(a1 + v7);
        v9 = (_OWORD *)(a2 + v7);
        v10 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
        {
          v11 = sub_23F6916B8(&qword_256EA86D0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          v164 = v9[1];
          *v8 = *v9;
          v8[1] = v164;
          v8[2] = v9[2];
          v165 = *(int *)(v10 + 28);
          v166 = (char *)v8 + v165;
          v167 = (char *)v9 + v165;
          v168 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v166, v167, v168);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
        }
        v169 = StepResults[6];
        v170 = (_OWORD *)(a1 + v169);
        v171 = (_OWORD *)(a2 + v169);
        v172 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v171, 1, v172))
        {
          v173 = sub_23F6916B8(&qword_256EA86C0);
          memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
        }
        else
        {
          *v170 = *v171;
          v298 = *(int *)(v172 + 20);
          v299 = (_DWORD *)((char *)v170 + v298);
          v300 = (_DWORD *)((char *)v171 + v298);
          v301 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v300, 1, v301))
          {
            v302 = sub_23F6916B8(&qword_256EA86B0);
            memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
          }
          else
          {
            *v299 = *v300;
            v374 = *(int *)(v301 + 20);
            v599 = (char *)v299 + v374;
            v375 = (char *)v300 + v374;
            v376 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 32))(v599, v375, v376);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v299, 0, 1, v301);
          }
          v377 = *(int *)(v172 + 24);
          v378 = (char *)v170 + v377;
          v379 = (char *)v171 + v377;
          v380 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v380 - 8) + 32))(v378, v379, v380);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v170, 0, 1, v172);
        }
        goto LABEL_236;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v12 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        v13 = v12[6];
        v14 = (_DWORD *)(a1 + v13);
        v15 = (_DWORD *)(a2 + v13);
        v16 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
        {
          v17 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          *v14 = *v15;
          *(_OWORD *)(v14 + 2) = *(_OWORD *)(v15 + 2);
          v174 = *(int *)(v16 + 24);
          v175 = (char *)v14 + v174;
          v176 = (char *)v15 + v174;
          v177 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
        }
        *(_OWORD *)(a1 + v12[7]) = *(_OWORD *)(a2 + v12[7]);
        v178 = v12[8];
        v179 = a1 + v178;
        v180 = a2 + v178;
        v181 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v179, v180, v181);
        goto LABEL_237;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        v18 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v19 = a1 + v18;
        v20 = a2 + v18;
        v21 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        goto LABEL_237;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        DecorationResult = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v23 = DecorationResult[5];
        v24 = (char *)(a1 + v23);
        v25 = (char *)(a2 + v23);
        v26 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v26))
        {
          v27 = sub_23F6916B8(&qword_256EA86A0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v182 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v182))
          {
            v354 = (char *)&loc_23F9D5FE4 + 4 * word_23FB8AE3E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v183 = sub_23F6916B8(&qword_256EB1C50);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
          v499 = *(int *)(v26 + 20);
          v500 = &v24[v499];
          v501 = &v25[v499];
          v502 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v502 - 8) + 32))(v500, v501, v502);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v26);
        }
        v503 = DecorationResult[6];
        v504 = (char *)(a1 + v503);
        v505 = (char *)(a2 + v503);
        v506 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v505, 1, v506))
        {
          v507 = sub_23F6916B8(&qword_256EA8698);
          memcpy(v504, v505, *(_QWORD *)(*(_QWORD *)(v507 - 8) + 64));
        }
        else
        {
          v508 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v505, 1, v508))
          {
            v510 = (char *)&loc_23F9D8F10 + 4 * byte_23FB8AE46[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v509 = sub_23F6916B8(&qword_256EA85F0);
          memcpy(v504, v505, *(_QWORD *)(*(_QWORD *)(v509 - 8) + 64));
          v511 = *(int *)(v506 + 20);
          v512 = &v504[v511];
          v513 = &v505[v511];
          v514 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 32))(v512, v513, v514);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v504, 0, 1, v506);
        }
        *(_OWORD *)(a1 + DecorationResult[7]) = *(_OWORD *)(a2 + DecorationResult[7]);
        v515 = DecorationResult[8];
        v516 = (_QWORD *)(a1 + v515);
        v517 = (_QWORD *)(a2 + v515);
        v518 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v517, 1, v518))
        {
          v519 = sub_23F6916B8(&qword_256EB1C30);
          memcpy(v516, v517, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v516 = *(_OWORD *)v517;
          v516[2] = v517[2];
          v520 = *(int *)(v518 + 24);
          v521 = (char *)v516 + v520;
          v522 = (char *)v517 + v520;
          v523 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v523 - 8) + 32))(v521, v522, v523);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v516, 0, 1, v518);
        }
        goto LABEL_215;
      case 4u:
        v28 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v28;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v29 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v30 = a1 + v29;
        v31 = a2 + v29;
        v32 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        goto LABEL_237;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        v33 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v34 = v33[7];
        v35 = (_DWORD *)(a1 + v34);
        v36 = (_DWORD *)(a2 + v34);
        v37 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v37))
        {
          v38 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          *v35 = *v36;
          *(_OWORD *)(v35 + 2) = *(_OWORD *)(v36 + 2);
          v184 = *(int *)(v37 + 24);
          v185 = (char *)v35 + v184;
          v186 = (char *)v36 + v184;
          v187 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v37);
        }
        *(_OWORD *)(a1 + v33[8]) = *(_OWORD *)(a2 + v33[8]);
        *(_OWORD *)(a1 + v33[9]) = *(_OWORD *)(a2 + v33[9]);
        *(_OWORD *)(a1 + v33[10]) = *(_OWORD *)(a2 + v33[10]);
        v188 = v33[11];
        v189 = a1 + v188;
        v190 = a2 + v188;
        v191 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
        goto LABEL_237;
      case 6u:
        v39 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v39;
        v40 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v40;
        v41 = (int *)type metadata accessor for TranscriptProtoClientAction(0);
        v42 = v41[9];
        v43 = (_DWORD *)(a1 + v42);
        v44 = (_DWORD *)(a2 + v42);
        v45 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v45))
        {
          v46 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          *v43 = *v44;
          *(_OWORD *)(v43 + 2) = *(_OWORD *)(v44 + 2);
          v192 = *(int *)(v45 + 24);
          v193 = (char *)v43 + v192;
          v194 = (char *)v44 + v192;
          v195 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v43, 0, 1, v45);
        }
        goto LABEL_77;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        v48 = *(int *)(Step + 20);
        v49 = (_DWORD *)(a1 + v48);
        v50 = (_DWORD *)(a2 + v48);
        v51 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v51))goto LABEL_16;
        goto LABEL_78;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
        v53 = *(int *)(Step + 20);
        v49 = (_DWORD *)(a1 + v53);
        v50 = (_DWORD *)(a2 + v53);
        v51 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v51))
        {
LABEL_16:
          v52 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
LABEL_78:
          *v49 = *v50;
          *(_OWORD *)(v49 + 2) = *(_OWORD *)(v50 + 2);
          v200 = *(int *)(v51 + 24);
          v201 = (char *)v49 + v200;
          v202 = (char *)v50 + v200;
          v203 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v201, v202, v203);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, v51);
        }
        v204 = *(int *)(Step + 24);
        v205 = a1 + v204;
        v206 = a2 + v204;
        v207 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v205, v206, v207);
        goto LABEL_237;
      case 0xAu:
        v54 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v54))
        {
          v208 = (char *)&loc_23F9D5078 + 4 * word_23FB8AE36[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v55 = sub_23F6916B8(&qword_256EA8668);
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        v433 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v434 = a1 + v433;
        v435 = a2 + v433;
        v436 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v436 - 8) + 32))(v434, v435, v436);
        goto LABEL_237;
      case 0xBu:
        v56 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v56))
        {
          v57 = sub_23F6916B8(&qword_256EA8688);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          v209 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v209))
          {
            v210 = sub_23F6916B8(&qword_256EA8678);
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
          }
          else
          {
            v355 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v355;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            v356 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v357 = a1 + v356;
            v358 = a2 + v356;
            v359 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v357, v358, v359);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v209);
          }
          v360 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v361 = a1 + v360;
          v362 = a2 + v360;
          v363 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v363 - 8) + 32))(v361, v362, v363);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v56);
        }
        v364 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v365 = a1 + v364;
        v366 = a2 + v364;
        v367 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v367 - 8) + 32))(v365, v366, v367);
        goto LABEL_237;
      case 0xCu:
        v58 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v58;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v59 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v60 = a1 + v59;
        v61 = a2 + v59;
        v62 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        goto LABEL_237;
      case 0xDu:
        v63 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v63;
        DecorationResult = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v64 = DecorationResult[6];
        v65 = (_BYTE *)(a1 + v64);
        v66 = (_BYTE *)(a2 + v64);
        v67 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v66, 1, v67))
        {
          v68 = sub_23F6916B8(&qword_256EA8658);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          goto LABEL_170;
        }
        v211 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v66, 1, v211))
        {
          v212 = sub_23F6916B8(&qword_256EB21D0);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
          goto LABEL_169;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 6:
            v384 = sub_23FB2D718();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v384 - 8) + 32))(v65, v66, v384);
            goto LABEL_166;
          case 5:
            *v65 = *v66;
            v385 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            v386 = &v65[v385];
            v387 = &v66[v385];
            v388 = sub_23FB2D718();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v388 - 8) + 32))(v386, v387, v388);
            goto LABEL_166;
          case 1:
            v369 = sub_23FB2EB1C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v369 - 8) + 32))(v65, v66, v369);
LABEL_166:
            swift_storeEnumTagMultiPayload();
            goto LABEL_168;
        }
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
LABEL_168:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v65, 0, 1, v211);
LABEL_169:
        v389 = *(int *)(v67 + 20);
        v390 = &v65[v389];
        v391 = &v66[v389];
        v392 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v392 - 8) + 32))(v390, v391, v392);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v65, 0, 1, v67);
LABEL_170:
        v393 = DecorationResult[7];
        v394 = (_DWORD *)(a1 + v393);
        v395 = (_DWORD *)(a2 + v393);
        v396 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v395, 1, v396))
        {
          v397 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
        }
        else
        {
          *v394 = *v395;
          *(_OWORD *)(v394 + 2) = *(_OWORD *)(v395 + 2);
          v398 = *(int *)(v396 + 24);
          v399 = (char *)v394 + v398;
          v400 = (char *)v395 + v398;
          v401 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v401 - 8) + 32))(v399, v400, v401);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v394, 0, 1, v396);
        }
        v402 = DecorationResult[8];
        v403 = (_QWORD *)(a1 + v402);
        v404 = (_QWORD *)(a2 + v402);
        v405 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v404, 1, v405))
        {
          v406 = sub_23F6916B8(&qword_256EA8648);
          memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
          goto LABEL_215;
        }
        v407 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v404, 1, v407))
        {
          v408 = sub_23F6916B8(&qword_256EB2130);
          memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
          goto LABEL_187;
        }
        v409 = swift_getEnumCaseMultiPayload();
        if (v409 == 1)
        {
          *v403 = *v404;
          v414 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v415 = (char *)v403 + v414;
          v416 = (char *)v404 + v414;
          v417 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v417 - 8) + 32))(v415, v416, v417);
        }
        else
        {
          if (v409)
          {
            memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v407 - 8) + 64));
            goto LABEL_186;
          }
          *(_OWORD *)v403 = *(_OWORD *)v404;
          v410 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v411 = *(int *)(v410 + 20);
          __dst = (int *)v410;
          v600 = (_DWORD *)((char *)v403 + v411);
          v412 = (_DWORD *)((char *)v404 + v411);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v404 + v411, 1, v396))
          {
            v413 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(v600, v412, *(_QWORD *)(*(_QWORD *)(v413 - 8) + 64));
          }
          else
          {
            *v600 = *v412;
            *(_OWORD *)(v600 + 2) = *(_OWORD *)(v412 + 2);
            v422 = *(int *)(v396 + 24);
            __srca = (char *)v600 + v422;
            v423 = (char *)v412 + v422;
            v424 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v424 - 8) + 32))(__srca, v423, v424);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v600, 0, 1, v396);
          }
          v425 = __dst[6];
          v426 = (char *)v403 + v425;
          v427 = (char *)v404 + v425;
          v428 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v428 - 8) + 32))(v426, v427, v428);
        }
        swift_storeEnumTagMultiPayload();
LABEL_186:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v403, 0, 1, v407);
LABEL_187:
        v429 = *(int *)(v405 + 20);
        v430 = (char *)v403 + v429;
        v431 = (char *)v404 + v429;
        v432 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v430, v431, v432);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v403, 0, 1, v405);
LABEL_215:
        v524 = DecorationResult[9];
        v525 = a1 + v524;
        v526 = a2 + v524;
        v527 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v527 - 8) + 32))(v525, v526, v527);
LABEL_237:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v83 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(a1, a2, v83);
        goto LABEL_237;
      case 0xFu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
        v69 = StepResults[6];
        v70 = (_DWORD *)(a1 + v69);
        v71 = (_DWORD *)(a2 + v69);
        v72 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v71, 1, v72))goto LABEL_138;
        goto LABEL_86;
      case 0x11u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
        v73 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v74 = v73[9];
        v75 = (_QWORD *)(a1 + v74);
        v76 = (_QWORD *)(a2 + v74);
        v77 = type metadata accessor for TranscriptProtoParameterSet(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v76, 1, v77))
        {
          v78 = sub_23F6916B8(&qword_256EAB750);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          *v75 = *v76;
          v217 = *(int *)(v77 + 20);
          v218 = (char *)v75 + v217;
          v219 = (char *)v76 + v217;
          v220 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 32))(v218, v219, v220);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v75, 0, 1, v77);
        }
        v221 = v73[10];
        v222 = (_DWORD *)(a1 + v221);
        v223 = (_DWORD *)(a2 + v221);
        v224 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v223, 1, v224))
        {
          v225 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          *v222 = *v223;
          *(_OWORD *)(v222 + 2) = *(_OWORD *)(v223 + 2);
          v303 = *(int *)(v224 + 24);
          v304 = (char *)v222 + v303;
          v305 = (char *)v223 + v303;
          v306 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 32))(v304, v305, v306);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v222, 0, 1, v224);
        }
        v307 = v73[11];
        v308 = a1 + v307;
        v309 = a2 + v307;
        v310 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v308, v309, v310);
        goto LABEL_237;
      case 0x12u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v79 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v80 = a1 + v79;
        v81 = a2 + v79;
        v82 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
        goto LABEL_237;
      case 0x16u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v84 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v85 = a1 + v84;
        v86 = a2 + v84;
        v87 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
        goto LABEL_237;
      case 0x17u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v88 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v89 = a1 + v88;
        v90 = a2 + v88;
        v91 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
        goto LABEL_237;
      case 0x18u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v92 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v93 = a1 + v92;
        v94 = a2 + v92;
        v95 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
        goto LABEL_237;
      case 0x19u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v96 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v97 = a1 + v96;
        v98 = a2 + v96;
        v99 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
        goto LABEL_237;
      case 0x1Au:
        v100 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v100))
        {
          v101 = sub_23F6916B8(&qword_256EA25E0);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          v226 = *(int *)(v100 + 24);
          v227 = a1 + v226;
          v228 = a2 + v226;
          v229 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v227, v228, v229);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v100);
        }
        v230 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v231 = *(int *)(v230 + 20);
        v232 = (_DWORD *)(a1 + v231);
        v233 = (_DWORD *)(a2 + v231);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v231, 1, v100))
        {
          v234 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v232, v233, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
        }
        else
        {
          *v232 = *v233;
          *(_OWORD *)(v232 + 2) = *(_OWORD *)(v233 + 2);
          v311 = *(int *)(v100 + 24);
          v312 = (char *)v232 + v311;
          v313 = (char *)v233 + v311;
          v314 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 32))(v312, v313, v314);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v232, 0, 1, v100);
        }
        v315 = *(int *)(v230 + 24);
        v316 = a1 + v315;
        v317 = a2 + v315;
        v318 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v318 - 8) + 32))(v316, v317, v318);
        goto LABEL_237;
      case 0x1Bu:
        v102 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v102;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v103 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v104 = a1 + v103;
        v105 = a2 + v103;
        v106 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
        goto LABEL_237;
      case 0x1Cu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        v107 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v108 = v107[7];
        v109 = (char *)(a1 + v108);
        v110 = (char *)(a2 + v108);
        v111 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v110, 1, v111))
        {
          v112 = sub_23F6916B8(&qword_256EA7E70);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          v235 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v110, 1, v235))
          {
            v370 = (char *)&loc_23F9D61B4 + 4 * word_23FB8AE16[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v236 = sub_23F6916B8(&qword_256EA7FF8);
          memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
          v534 = *(int *)(v111 + 20);
          v535 = &v109[v534];
          v536 = &v110[v534];
          v537 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v537 - 8) + 32))(v535, v536, v537);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v109, 0, 1, v111);
        }
        v538 = v107[8];
        v539 = (_QWORD *)(a1 + v538);
        v540 = (_QWORD *)(a2 + v538);
        v541 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v540, 1, (uint64_t)v541))
        {
          v542 = sub_23F6916B8(&qword_256EB2570);
          memcpy(v539, v540, *(_QWORD *)(*(_QWORD *)(v542 - 8) + 64));
        }
        else
        {
          v601 = v107;
          *v539 = *v540;
          *((_BYTE *)v539 + 8) = *((_BYTE *)v540 + 8);
          v539[2] = v540[2];
          v543 = v541[7];
          v544 = (char *)v539 + v543;
          v545 = (char *)v540 + v543;
          v546 = type metadata accessor for TranscriptProtoDialogType(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v545, 1, v546))
          {
            v547 = sub_23F6916B8(&qword_256EA85E8);
            memcpy(v544, v545, *(_QWORD *)(*(_QWORD *)(v547 - 8) + 64));
          }
          else
          {
            v548 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v545, 1, v548))
            {
              v550 = (char *)&loc_23F9D9A48 + 4 * byte_23FB8AE2C[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v549 = sub_23F6916B8(&qword_256EB2060);
            memcpy(v544, v545, *(_QWORD *)(*(_QWORD *)(v549 - 8) + 64));
            v551 = *(int *)(v546 + 20);
            v552 = &v544[v551];
            v553 = &v545[v551];
            v554 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v554 - 8) + 32))(v552, v553, v554);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v544, 0, 1, v546);
          }
          v555 = v541[8];
          v556 = (char *)v539 + v555;
          v557 = (char *)v540 + v555;
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v540 + v555, 1, v546))
          {
            v558 = sub_23F6916B8(&qword_256EA85E8);
            memcpy(v556, v557, *(_QWORD *)(*(_QWORD *)(v558 - 8) + 64));
          }
          else
          {
            v559 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v557, 1, v559))
            {
              v561 = (char *)&loc_23F9D9BE4 + 4 * byte_23FB8AE31[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v560 = sub_23F6916B8(&qword_256EB2060);
            memcpy(v556, v557, *(_QWORD *)(*(_QWORD *)(v560 - 8) + 64));
            v562 = *(int *)(v546 + 20);
            v563 = &v556[v562];
            v564 = &v557[v562];
            v565 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v565 - 8) + 32))(v563, v564, v565);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v556, 0, 1, v546);
          }
          v566 = v541[9];
          v567 = (char *)v539 + v566;
          v568 = (char *)v540 + v566;
          v569 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v569 - 8) + 32))(v567, v568, v569);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v539, 0, 1, (uint64_t)v541);
          v107 = v601;
        }
        v570 = v107[9];
        v571 = (_DWORD *)(a1 + v570);
        v572 = (_DWORD *)(a2 + v570);
        v573 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v572, 1, v573))
        {
          v574 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v571, v572, *(_QWORD *)(*(_QWORD *)(v574 - 8) + 64));
        }
        else
        {
          *v571 = *v572;
          *(_OWORD *)(v571 + 2) = *(_OWORD *)(v572 + 2);
          v575 = *(int *)(v573 + 24);
          v576 = (char *)v571 + v575;
          v577 = (char *)v572 + v575;
          v578 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v578 - 8) + 32))(v576, v577, v578);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v571, 0, 1, v573);
        }
        *(_OWORD *)(a1 + v107[10]) = *(_OWORD *)(a2 + v107[10]);
        v579 = v107[11];
        v580 = a1 + v579;
        v581 = a2 + v579;
        v582 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v582 - 8) + 32))(v580, v581, v582);
        goto LABEL_237;
      case 0x1Du:
        v113 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v113;
        v41 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
        v114 = v41[6];
        v115 = (char *)(a1 + v114);
        v116 = (char *)(a2 + v114);
        v117 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v116, 1, v117))
        {
          v118 = sub_23F6916B8(&qword_256EA8638);
          memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        }
        else
        {
          v237 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v598 = (int *)v117;
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v116, 1, v237))
          {
            v238 = sub_23F6916B8(&qword_256EA7E70);
            memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
          }
          else
          {
            v371 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v116, 1, v371))
            {
              v383 = (char *)&loc_23F9D6580 + 4 * word_23FB8AE00[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v372 = sub_23F6916B8(&qword_256EA7FF8);
            memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v372 - 8) + 64));
            v437 = *(int *)(v237 + 20);
            v438 = &v115[v437];
            v439 = v116;
            v440 = &v116[v437];
            v441 = sub_23FB2D718();
            v442 = v440;
            v116 = v439;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v441 - 8) + 32))(v438, v442, v441);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v115, 0, 1, v237);
          }
          v443 = *(int *)(v117 + 20);
          v444 = &v115[v443];
          v445 = &v116[v443];
          v446 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v445, 1, (uint64_t)v446))
          {
            v447 = sub_23F6916B8(&qword_256EA7E60);
            memcpy(v444, v445, *(_QWORD *)(*(_QWORD *)(v447 - 8) + 64));
          }
          else
          {
            __src = v115;
            __dsta = v116;
            *(_QWORD *)v444 = *(_QWORD *)v445;
            v448 = v446[5];
            v449 = &v444[v448];
            v450 = &v445[v448];
            v451 = type metadata accessor for TranscriptProtoResponseDialog(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v450, 1, v451))
            {
              v452 = sub_23F6916B8(&qword_256EA8000);
              memcpy(v449, v450, *(_QWORD *)(*(_QWORD *)(v452 - 8) + 64));
            }
            else
            {
              v453 = *((_OWORD *)v450 + 1);
              *(_OWORD *)v449 = *(_OWORD *)v450;
              *((_OWORD *)v449 + 1) = v453;
              v454 = *((_OWORD *)v450 + 3);
              *((_OWORD *)v449 + 2) = *((_OWORD *)v450 + 2);
              *((_OWORD *)v449 + 3) = v454;
              v455 = *(int *)(v451 + 32);
              v592 = &v449[v455];
              v456 = &v450[v455];
              v457 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v457 - 8) + 32))(v592, v456, v457);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v449, 0, 1, v451);
            }
            v458 = v446[6];
            v459 = &v444[v458];
            v460 = &v445[v458];
            v461 = type metadata accessor for TranscriptProtoResponseVisual(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v460, 1, v461))
            {
              v462 = sub_23F6916B8(&qword_256EA8008);
              memcpy(v459, v460, *(_QWORD *)(*(_QWORD *)(v462 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v459 = *(_OWORD *)v460;
              v463 = *(int *)(v461 + 24);
              v593 = &v459[v463];
              v464 = &v460[v463];
              v465 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v465 - 8) + 32))(v593, v464, v465);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v459, 0, 1, v461);
            }
            *(_OWORD *)&v444[v446[7]] = *(_OWORD *)&v445[v446[7]];
            *(_OWORD *)&v444[v446[8]] = *(_OWORD *)&v445[v446[8]];
            v444[v446[9]] = v445[v446[9]];
            v444[v446[10]] = v445[v446[10]];
            v466 = v446[11];
            v467 = &v444[v466];
            v468 = &v445[v466];
            v469 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v469 - 8) + 32))(v467, v468, v469);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v444, 0, 1, (uint64_t)v446);
            v115 = __src;
            v116 = __dsta;
          }
          v470 = v598[6];
          v471 = &v115[v470];
          v472 = &v116[v470];
          v473 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v473 - 8) + 32))(v471, v472, v473);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v115, 0, 1, (uint64_t)v598);
        }
        v474 = v41[7];
        v475 = (_DWORD *)(a1 + v474);
        v476 = (_DWORD *)(a2 + v474);
        v477 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v476, 1, v477))
        {
          v478 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v475, v476, *(_QWORD *)(*(_QWORD *)(v478 - 8) + 64));
        }
        else
        {
          *v475 = *v476;
          *(_OWORD *)(v475 + 2) = *(_OWORD *)(v476 + 2);
          v479 = *(int *)(v477 + 24);
          v480 = (char *)v475 + v479;
          v481 = (char *)v476 + v479;
          v482 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v482 - 8) + 32))(v480, v481, v482);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v475, 0, 1, v477);
        }
        v483 = v41[8];
        v484 = (_DWORD *)(a1 + v483);
        v485 = (_DWORD *)(a2 + v483);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v483, 1, v477))
        {
          v486 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v484, v485, *(_QWORD *)(*(_QWORD *)(v486 - 8) + 64));
        }
        else
        {
          *v484 = *v485;
          *(_OWORD *)(v484 + 2) = *(_OWORD *)(v485 + 2);
          v487 = *(int *)(v477 + 24);
          v488 = (char *)v484 + v487;
          v489 = (char *)v485 + v487;
          v490 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v490 - 8) + 32))(v488, v489, v490);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v484, 0, 1, v477);
        }
        v491 = v41[9];
        v492 = (_DWORD *)(a1 + v491);
        v493 = (_DWORD *)(a2 + v491);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v491, 1, v477))
        {
          v494 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v492, v493, *(_QWORD *)(*(_QWORD *)(v494 - 8) + 64));
        }
        else
        {
          *v492 = *v493;
          *(_OWORD *)(v492 + 2) = *(_OWORD *)(v493 + 2);
          v495 = *(int *)(v477 + 24);
          v496 = (char *)v492 + v495;
          v497 = (char *)v493 + v495;
          v498 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v498 - 8) + 32))(v496, v497, v498);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v492, 0, 1, v477);
        }
LABEL_77:
        v196 = v41[10];
        v197 = a1 + v196;
        v198 = a2 + v196;
        v199 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v197, v198, v199);
        goto LABEL_237;
      case 0x1Eu:
        v119 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v119;
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        v120 = StepResults[6];
        v121 = (_QWORD *)(a1 + v120);
        v122 = (_QWORD *)(a2 + v120);
        v123 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v122, 1, v123))goto LABEL_217;
        goto LABEL_97;
      case 0x1Fu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        v124 = StepResults[6];
        v121 = (_QWORD *)(a1 + v124);
        v122 = (_QWORD *)(a2 + v124);
        v123 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v122, 1, v123))goto LABEL_217;
        goto LABEL_97;
      case 0x20u:
        v125 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v125))
        {
          v126 = sub_23F6916B8(&qword_256EA86A0);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          v243 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v243))
          {
            v373 = (char *)&loc_23F9D6284 + 4 * word_23FB8ADF8[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v244 = sub_23F6916B8(&qword_256EB1C50);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
          v528 = *(int *)(v125 + 20);
          v529 = a1 + v528;
          v530 = a2 + v528;
          v531 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v531 - 8) + 32))(v529, v530, v531);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v125);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        *(_OWORD *)(a1 + StepResults[5]) = *(_OWORD *)(a2 + StepResults[5]);
        v532 = StepResults[6];
        v121 = (_QWORD *)(a1 + v532);
        v122 = (_QWORD *)(a2 + v532);
        v123 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v122, 1, v123))
        {
LABEL_217:
          v533 = sub_23F6916B8(&qword_256EB1C30);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v533 - 8) + 64));
        }
        else
        {
LABEL_97:
          *(_OWORD *)v121 = *(_OWORD *)v122;
          v121[2] = v122[2];
          v239 = *(int *)(v123 + 24);
          v240 = (char *)v121 + v239;
          v241 = (char *)v122 + v239;
          v242 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v240, v241, v242);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v121, 0, 1, v123);
        }
        goto LABEL_236;
      case 0x21u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v127 = StepResults[5];
        v128 = (_DWORD *)(a1 + v127);
        v129 = (_DWORD *)(a2 + v127);
        v130 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v129, 1, v130))
        {
          v131 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        }
        else
        {
          *v128 = *v129;
          *(_OWORD *)(v128 + 2) = *(_OWORD *)(v129 + 2);
          v245 = *(int *)(v130 + 24);
          v246 = (char *)v128 + v245;
          v247 = (char *)v129 + v245;
          v248 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v246, v247, v248);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v128, 0, 1, v130);
        }
        v249 = StepResults[6];
        v250 = (char *)(a1 + v249);
        v251 = (char *)(a2 + v249);
        v252 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v251, 1, v252))
        {
          v253 = sub_23F6916B8(&qword_256EA7E70);
          memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
        }
        else
        {
          v319 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v251, 1, v319))
          {
            v381 = (char *)&loc_23F9D63E0 + 4 * word_23FB8ADE2[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v320 = sub_23F6916B8(&qword_256EA7FF8);
          memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v320 - 8) + 64));
          v583 = *(int *)(v252 + 20);
          v584 = &v250[v583];
          v585 = &v251[v583];
          v586 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v586 - 8) + 32))(v584, v585, v586);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v250, 0, 1, v252);
        }
        goto LABEL_236;
      case 0x22u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v132 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v133 = a1 + v132;
        v134 = a2 + v132;
        v135 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
        goto LABEL_237;
      case 0x23u:
        v136 = sub_23FB2EBC4();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v136))
        {
          v137 = sub_23F6916B8(&qword_256EA3268);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(a1, a2, v136);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v136);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        v254 = StepResults[5];
        v255 = (_DWORD *)(a1 + v254);
        v256 = (_DWORD *)(a2 + v254);
        v257 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v256, 1, v257))
        {
          v258 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v255, v256, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
        }
        else
        {
          *v255 = *v256;
          *(_OWORD *)(v255 + 2) = *(_OWORD *)(v256 + 2);
          v321 = *(int *)(v257 + 24);
          v322 = (char *)v255 + v321;
          v323 = (char *)v256 + v321;
          v324 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v324 - 8) + 32))(v322, v323, v324);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v255, 0, 1, v257);
        }
        v325 = StepResults[6];
        v326 = (_DWORD *)(a1 + v325);
        v327 = (_DWORD *)(a2 + v325);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v325, 1, v257))goto LABEL_141;
        goto LABEL_144;
      case 0x24u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        DecorationResult = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v138 = DecorationResult[7];
        v139 = (_DWORD *)(a1 + v138);
        v140 = (_DWORD *)(a2 + v138);
        v141 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v140, 1, v141))
        {
          v142 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          *v139 = *v140;
          *(_OWORD *)(v139 + 2) = *(_OWORD *)(v140 + 2);
          v259 = *(int *)(v141 + 24);
          v260 = (char *)v139 + v259;
          v261 = (char *)v140 + v259;
          v262 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 32))(v260, v261, v262);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v139, 0, 1, v141);
        }
        v263 = DecorationResult[8];
        v264 = (_DWORD *)(a1 + v263);
        v265 = (_DWORD *)(a2 + v263);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v263, 1, v141))
        {
          v266 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
        }
        else
        {
          *v264 = *v265;
          *(_OWORD *)(v264 + 2) = *(_OWORD *)(v265 + 2);
          v328 = *(int *)(v141 + 24);
          v329 = (char *)v264 + v328;
          v330 = (char *)v265 + v328;
          v331 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v331 - 8) + 32))(v329, v330, v331);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v264, 0, 1, v141);
        }
        goto LABEL_215;
      case 0x25u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v143 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v144 = v143[6];
        v145 = (_DWORD *)(a1 + v144);
        v146 = (_DWORD *)(a2 + v144);
        v147 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v146, 1, v147))
        {
          v148 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
        }
        else
        {
          *v145 = *v146;
          *(_OWORD *)(v145 + 2) = *(_OWORD *)(v146 + 2);
          v267 = *(int *)(v147 + 24);
          v268 = (char *)v145 + v267;
          v269 = (char *)v146 + v267;
          v270 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(v268, v269, v270);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v145, 0, 1, v147);
        }
        v271 = v143[7];
        v272 = (_DWORD *)(a1 + v271);
        v273 = (_DWORD *)(a2 + v271);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v271, 1, v147))
        {
          v274 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
        }
        else
        {
          *v272 = *v273;
          *(_OWORD *)(v272 + 2) = *(_OWORD *)(v273 + 2);
          v332 = *(int *)(v147 + 24);
          v333 = (char *)v272 + v332;
          v334 = (char *)v273 + v332;
          v335 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v335 - 8) + 32))(v333, v334, v335);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v272, 0, 1, v147);
        }
        v336 = v143[8];
        v337 = a1 + v336;
        v338 = a2 + v336;
        v339 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v339 - 8) + 32))(v337, v338, v339);
        goto LABEL_237;
      case 0x26u:
        v149 = sub_23FB2EB1C();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v149))
        {
          v150 = sub_23F6916B8(&qword_256EA2610);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(a1, a2, v149);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v149);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v275 = StepResults[5];
        v276 = (void *)(a1 + v275);
        v277 = (const void *)(a2 + v275);
        v278 = sub_23FB2EB28();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v277, 1, v278))
        {
          v279 = sub_23F6916B8(&qword_256EA2E00);
          memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v278 - 8) + 32))(v276, v277, v278);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v276, 0, 1, v278);
        }
        v340 = StepResults[6];
        v70 = (_DWORD *)(a1 + v340);
        v71 = (_DWORD *)(a2 + v340);
        v72 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v71, 1, v72))
        {
LABEL_138:
          v341 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v341 - 8) + 64));
        }
        else
        {
LABEL_86:
          *v70 = *v71;
          *(_OWORD *)(v70 + 2) = *(_OWORD *)(v71 + 2);
          v213 = *(int *)(v72 + 24);
          v214 = (char *)v70 + v213;
          v215 = (char *)v71 + v213;
          v216 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 32))(v214, v215, v216);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v70, 0, 1, v72);
        }
        goto LABEL_236;
      case 0x27u:
        v151 = sub_23FB2EB1C();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v151))
        {
          v152 = sub_23F6916B8(&qword_256EA2610);
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(a1, a2, v151);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v151);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
        v280 = StepResults[5];
        v281 = (_DWORD *)(a1 + v280);
        v282 = (_DWORD *)(a2 + v280);
        v257 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v282, 1, v257))
        {
          v283 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
        }
        else
        {
          *v281 = *v282;
          *(_OWORD *)(v281 + 2) = *(_OWORD *)(v282 + 2);
          v342 = *(int *)(v257 + 24);
          v343 = (char *)v281 + v342;
          v344 = (char *)v282 + v342;
          v345 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v345 - 8) + 32))(v343, v344, v345);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v281, 0, 1, v257);
        }
        v346 = StepResults[6];
        v326 = (_DWORD *)(a1 + v346);
        v327 = (_DWORD *)(a2 + v346);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v346, 1, v257))
        {
LABEL_141:
          v347 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v326, v327, *(_QWORD *)(*(_QWORD *)(v347 - 8) + 64));
        }
        else
        {
LABEL_144:
          *v326 = *v327;
          *(_OWORD *)(v326 + 2) = *(_OWORD *)(v327 + 2);
          v350 = *(int *)(v257 + 24);
          v351 = (char *)v326 + v350;
          v352 = (char *)v327 + v350;
          v353 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v353 - 8) + 32))(v351, v352, v353);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v326, 0, 1, v257);
        }
        goto LABEL_236;
      case 0x28u:
        v153 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v153;
        DecorationResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v154 = DecorationResult[8];
        v155 = (_OWORD *)(a1 + v154);
        v156 = (_OWORD *)(a2 + v154);
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v156, 1, DecorationToolRetrievalResponse))
        {
          v158 = sub_23F6916B8(&qword_256EA2DD0);
          memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          v284 = v156[1];
          *v155 = *v156;
          v155[1] = v284;
          *((_DWORD *)v155 + 8) = *((_DWORD *)v156 + 8);
          *(_OWORD *)((char *)v155 + 40) = *(_OWORD *)((char *)v156 + 40);
          v285 = *(int *)(DecorationToolRetrievalResponse + 36);
          v286 = (char *)v155 + v285;
          v287 = (char *)v156 + v285;
          v288 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 32))(v286, v287, v288);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v155, 0, 1, DecorationToolRetrievalResponse);
        }
        goto LABEL_215;
      case 0x2Au:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v159 = StepResults[5];
        v160 = (_DWORD *)(a1 + v159);
        v161 = (_DWORD *)(a2 + v159);
        v162 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v161, 1, v162))
        {
          v163 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
        }
        else
        {
          *v160 = *v161;
          *(_OWORD *)(v160 + 2) = *(_OWORD *)(v161 + 2);
          v289 = *(int *)(v162 + 24);
          v290 = (char *)v160 + v289;
          v291 = (char *)v161 + v289;
          v292 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v292 - 8) + 32))(v290, v291, v292);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v160, 0, 1, v162);
        }
        v293 = StepResults[6];
        v294 = (char *)(a1 + v293);
        v295 = (char *)(a2 + v293);
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v295, 1, DecorationPrePlannerResultPayload))
        {
          v297 = sub_23F6916B8(&qword_256EA8608);
          memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
        }
        else
        {
          DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v295, 1, DecorationPrePlannerPayloadEnum))
          {
            v382 = (char *)&loc_23F9D6470 + 4 * word_23FB8ADD6[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v349 = sub_23F6916B8(&qword_256EB2630);
          memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v349 - 8) + 64));
          v418 = *(int *)(DecorationPrePlannerResultPayload + 20);
          v419 = &v294[v418];
          v420 = &v295[v418];
          v421 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v421 - 8) + 32))(v419, v420, v421);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v294, 0, 1, DecorationPrePlannerResultPayload);
        }
LABEL_236:
        v587 = StepResults[7];
        v588 = a1 + v587;
        v589 = a2 + v587;
        v590 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v590 - 8) + 32))(v588, v589, v590);
        goto LABEL_237;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_23F9DA124()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  result = type metadata accessor for TranscriptProtoSessionStart(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoTextQuery(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoSpeechQuery(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoRequest(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoPlan(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoAction(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for TranscriptProtoClientAction(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for TranscriptProtoQueryStep(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for TranscriptProtoVariableStep(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for TranscriptProtoSessionError(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for TranscriptProtoRecoverableError(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for TranscriptProtoClientCustom(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for TranscriptProtoSystemPromptResolution(319);
                          if (v13 <= 0x3F)
                          {
                            result = sub_23FB2D718();
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for TranscriptProtoQueryStepResults(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for TranscriptProtoActionResolverRequest(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for TranscriptProtoClientInitiatedClientAction(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = type metadata accessor for TranscriptProtoSafetyModeException(319);
                                    if (v18 <= 0x3F)
                                    {
                                      result = type metadata accessor for TranscriptProtoResponseGenerationRequest(319);
                                      if (v19 <= 0x3F)
                                      {
                                        result = type metadata accessor for TranscriptProtoEntitySpanMatchResult(319);
                                        if (v20 <= 0x3F)
                                        {
                                          result = type metadata accessor for TranscriptProtoContextRetrieved(319);
                                          if (v21 <= 0x3F)
                                          {
                                            result = type metadata accessor for TranscriptProtoActionCancellation(319);
                                            if (v22 <= 0x3F)
                                            {
                                              result = type metadata accessor for TranscriptProtoToolRetrievalResponse(319);
                                              if (v23 <= 0x3F)
                                              {
                                                result = type metadata accessor for TranscriptProtoSystemResponse(319);
                                                if (v24 <= 0x3F)
                                                {
                                                  result = type metadata accessor for TranscriptProtoStatementResult(319);
                                                  if (v25 <= 0x3F)
                                                  {
                                                    result = type metadata accessor for TranscriptProtoExternalAgentTextQuery(319);
                                                    if (v26 <= 0x3F)
                                                    {
                                                      result = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(319);
                                                      if (v27 <= 0x3F)
                                                      {
                                                        result = type metadata accessor for TranscriptProtoExternalAgentRequest(319);
                                                        if (v28 <= 0x3F)
                                                        {
                                                          result = type metadata accessor for TranscriptProtoExternalAgentOutcome(319);
                                                          if (v29 <= 0x3F)
                                                          {
                                                            result = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(319);
                                                            if (v30 <= 0x3F)
                                                            {
                                                              result = type metadata accessor for TranscriptProtoToolResolution(319);
                                                              if (v31 <= 0x3F)
                                                              {
                                                                result = type metadata accessor for TranscriptProtoUndoRedoRequest(319);
                                                                if (v32 <= 0x3F)
                                                                {
                                                                  result = type metadata accessor for TranscriptProtoClientUndoRedoRequest(319);
                                                                  if (v33 <= 0x3F)
                                                                  {
                                                                    result = type metadata accessor for TranscriptProtoTypeConversionRequest(319);
                                                                    if (v34 <= 0x3F)
                                                                    {
                                                                      result = type metadata accessor for TranscriptProtoTypeConversionResult(319);
                                                                      if (v35 <= 0x3F)
                                                                      {
                                                                        result = type metadata accessor for TranscriptProtoQueryDecorationResult(319);
                                                                        if (v36 <= 0x3F)
                                                                        {
                                                                          result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(319);
                                                                          if (v37 <= 0x3F)
                                                                          {
                                                                            swift_initEnumMetadataMultiPayload();
                                                                            return 0;
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTranscript(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    v10 = sub_23FB2D718();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoTranscript(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoTranscript(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoTranscript(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoTranscript(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoTranscript(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTranscript()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTranscript()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9DA90C()
{
  sub_23FAC17B0();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTimepoint(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D6D0();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA86E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 32);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D6D0();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2D6D0();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA86E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 32);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoTimepoint(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D6D0();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA86E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = *(int *)(a3 + 32);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoTimepoint(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D6D0();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA86E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 32);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoTimepoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2D6D0();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA86E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = *(int *)(a3 + 32);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTimepoint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9DAF80()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 24));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA86E0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3340();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTimepoint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9DAFE8()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F0850();
  if (v2)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA86E0);
    sub_23F6F07EC();
    if (v2)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC335C();
    }
    v4 = sub_23F6F082C(v3);
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23F9DB044()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, &qword_256EB4AB8, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionStart(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v43;
  char *v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoLocaleSettings(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA86D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = v9[1];
      *v8 = *v9;
      v8[1] = v13;
      v14 = v9[3];
      v8[2] = v9[2];
      v8[3] = v14;
      v15 = v9[5];
      v8[4] = v9[4];
      v8[5] = v15;
      v16 = *(int *)(v10 + 28);
      v43 = (char *)v9 + v16;
      v44 = (char *)v8 + v16;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v44, v43, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v19 = a3[6];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = type metadata accessor for TranscriptProtoDeviceDetails(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA86C0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = v21[1];
      *v20 = *v21;
      v20[1] = v24;
      v25 = *(int *)(v22 + 20);
      v26 = (_DWORD *)((char *)v20 + v25);
      v27 = (_DWORD *)((char *)v21 + v25);
      v28 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
      {
        v29 = sub_23F6916B8(&qword_256EA86B0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *v26 = *v27;
        v30 = *(int *)(v28 + 20);
        v31 = (char *)v26 + v30;
        v32 = (char *)v27 + v30;
        v33 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
      }
      v34 = *(int *)(v22 + 24);
      v35 = (char *)v20 + v34;
      v36 = (char *)v21 + v34;
      v37 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v38 = a3[7];
    v39 = (char *)v4 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoSessionStart(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  v9 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))
    {
      v12 = v10 + *(int *)(v11 + 20);
      v13 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
    v14 = v8 + *(int *)(v9 + 24);
    v15 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + a2[7];
  v17 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
}

_BYTE *initializeWithCopy for TranscriptProtoSessionStart(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA86D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    v13 = v8[5];
    v7[4] = v8[4];
    v7[5] = v13;
    v14 = *(int *)(v9 + 28);
    v44 = v3;
    v15 = (char *)v7 + v14;
    v43 = (char *)v8 + v14;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v15;
    v3 = v44;
    v17(v18, v43, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v19 = *(int *)(v3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_23F6916B8(&qword_256EA86C0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v21[1];
    *v20 = *v21;
    v20[1] = v24;
    v25 = *(int *)(v22 + 20);
    v26 = (_DWORD *)((char *)v20 + v25);
    v27 = (_DWORD *)((char *)v21 + v25);
    v28 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = sub_23F6916B8(&qword_256EA86B0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v30 = *(int *)(v28 + 20);
      v31 = (char *)v26 + v30;
      v32 = (char *)v27 + v30;
      v33 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v34 = *(int *)(v22 + 24);
    v35 = (char *)v20 + v34;
    v36 = (char *)v21 + v34;
    v37 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v38 = *(int *)(v3 + 28);
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoSessionStart(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      v12 = *(int *)(v9 + 28);
      v68 = v3;
      v13 = (char *)v7 + v12;
      v67 = (char *)v8 + v12;
      v14 = sub_23FB2D718();
      v15 = v4;
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = v13;
      v3 = v68;
      v16(v17, v67, v14);
      v4 = v15;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoLocaleSettings);
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA86D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = *(int *)(v9 + 28);
  v32 = (char *)v7 + v31;
  v33 = (char *)v8 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
LABEL_7:
  v19 = *(int *)(v3 + 24);
  v20 = &a1[v19];
  v21 = &v4[v19];
  v22 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22);
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (v24)
    {
      sub_23F93DADC((uint64_t)v20, type metadata accessor for TranscriptProtoDeviceDetails);
      goto LABEL_13;
    }
    *v20 = *v21;
    v20[1] = v21[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v35 = *(int *)(v22 + 20);
    v36 = (_DWORD *)((char *)v20 + v35);
    v37 = (_DWORD *)((char *)v21 + v35);
    v38 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    v39 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v38);
    v40 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v38);
    if (v39)
    {
      if (!v40)
      {
        *v36 = *v37;
        v41 = *(int *)(v38 + 20);
        v42 = (char *)v36 + v41;
        v43 = (char *)v37 + v41;
        v44 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v38);
LABEL_23:
        v54 = *(int *)(v22 + 24);
        v55 = (char *)v20 + v54;
        v56 = (char *)v21 + v54;
        v57 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v40)
      {
        *v36 = *v37;
        v63 = *(int *)(v38 + 20);
        v64 = (char *)v36 + v63;
        v65 = (char *)v37 + v63;
        v66 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
        goto LABEL_23;
      }
      sub_23F93DADC((uint64_t)v36, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    }
    v53 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  if (v24)
  {
LABEL_13:
    v30 = sub_23F6916B8(&qword_256EA86C0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_24;
  }
  *v20 = *v21;
  v20[1] = v21[1];
  v25 = *(int *)(v22 + 20);
  v26 = (_DWORD *)((char *)v20 + v25);
  v27 = (_DWORD *)((char *)v21 + v25);
  v28 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v45 = *(int *)(v28 + 20);
    v46 = (char *)v26 + v45;
    v47 = (char *)v27 + v45;
    v48 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v49 = *(int *)(v22 + 24);
  v50 = (char *)v20 + v49;
  v51 = (char *)v21 + v49;
  v52 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_24:
  v58 = *(int *)(v3 + 28);
  v59 = &a1[v58];
  v60 = &v4[v58];
  v61 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSessionStart(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA86D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v7[2] = v8[2];
    v12 = *(int *)(v9 + 28);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F6916B8(&qword_256EA86C0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v21 = *(int *)(v19 + 20);
    v22 = (_DWORD *)((char *)v17 + v21);
    v23 = (_DWORD *)((char *)v18 + v21);
    v24 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24))
    {
      v25 = sub_23F6916B8(&qword_256EA86B0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *v22 = *v23;
      v26 = *(int *)(v24 + 20);
      v27 = (char *)v22 + v26;
      v28 = (char *)v23 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
    }
    v30 = *(int *)(v19 + 24);
    v31 = (char *)v17 + v30;
    v32 = (char *)v18 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v34 = a3[7];
  v35 = &a1[v34];
  v36 = &a2[v34];
  v37 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSessionStart(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v12 = *((_OWORD *)v8 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v12;
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      v13 = *(int *)(v9 + 28);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoLocaleSettings);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA86D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v30 = v8[1];
  *v7 = *v8;
  v7[1] = v30;
  swift_bridgeObjectRelease();
  v31 = v8[3];
  v7[2] = v8[2];
  v7[3] = v31;
  swift_bridgeObjectRelease();
  v32 = v8[5];
  v7[4] = v8[4];
  v7[5] = v32;
  swift_bridgeObjectRelease();
  v33 = *(int *)(v9 + 28);
  v34 = (char *)v7 + v33;
  v35 = (char *)v8 + v33;
  v36 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
LABEL_7:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (v23)
    {
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoDeviceDetails);
      goto LABEL_13;
    }
    v37 = v20[1];
    *v19 = *v20;
    v19[1] = v37;
    swift_bridgeObjectRelease();
    v38 = *(int *)(v21 + 20);
    v39 = (_DWORD *)((char *)v19 + v38);
    v40 = (_DWORD *)((char *)v20 + v38);
    v41 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    v42 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v41);
    v43 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41);
    if (v42)
    {
      if (!v43)
      {
        *v39 = *v40;
        v44 = *(int *)(v41 + 20);
        v45 = (char *)v39 + v44;
        v46 = (char *)v40 + v44;
        v47 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
LABEL_23:
        v57 = *(int *)(v21 + 24);
        v58 = (char *)v19 + v57;
        v59 = (char *)v20 + v57;
        v60 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v43)
      {
        *v39 = *v40;
        v66 = *(int *)(v41 + 20);
        v67 = (char *)v39 + v66;
        v68 = (char *)v40 + v66;
        v69 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
        goto LABEL_23;
      }
      sub_23F93DADC((uint64_t)v39, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    }
    v56 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_23;
  }
  if (v23)
  {
LABEL_13:
    v29 = sub_23F6916B8(&qword_256EA86C0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_24;
  }
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v24 = *(int *)(v21 + 20);
  v25 = (_DWORD *)((char *)v19 + v24);
  v26 = (_DWORD *)((char *)v20 + v24);
  v27 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, v27))
  {
    v28 = sub_23F6916B8(&qword_256EA86B0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    v48 = *(int *)(v27 + 20);
    v49 = (char *)v25 + v48;
    v50 = (char *)v26 + v48;
    v51 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, v27);
  }
  v52 = *(int *)(v21 + 24);
  v53 = (char *)v19 + v52;
  v54 = (char *)v20 + v52;
  v55 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_24:
  v61 = a3[7];
  v62 = &a1[v61];
  v63 = &a2[v61];
  v64 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSessionStart()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9DC2F8()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3F00();
  if (v0)
  {
    sub_23FAC3AE0();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA86D0);
    sub_23F6F07DC();
    if (v0)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA86C0);
      sub_23F6F07DC();
      if (v2)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0AFC();
      }
    }
    v3 = sub_23F6F08CC(v1);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSessionStart()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9DC384()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC3640();
  if (v0)
  {
    sub_23FAC3D10();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA86D0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA86C0);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0BB8();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F9DC3F8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EB4E08, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLocaleSettings);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB4E10, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetails);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoRequest(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  int *v46;
  _QWORD *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v54;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for TranscriptProtoRequestContent(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA86A0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v13))
      {
        v15 = (char *)&loc_23F9DC5E4 + 4 * byte_23FB8AE4C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v14 = sub_23F6916B8(&qword_256EB1C50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      v16 = *(int *)(v10 + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v20 = v6[6];
    v21 = (char *)v4 + v20;
    v22 = (char *)v3 + v20;
    v23 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_23F6916B8(&qword_256EA8698);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v25))
      {
        v27 = (char *)&loc_23F9DCE80 + 4 * byte_23FB8AE50[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v26 = sub_23F6916B8(&qword_256EA85F0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      v28 = *(int *)(v23 + 20);
      v29 = &v21[v28];
      v30 = &v22[v28];
      v31 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
    }
    v32 = v6[7];
    v33 = v6[8];
    v34 = (_QWORD *)((char *)v4 + v32);
    v35 = (_QWORD *)((char *)v3 + v32);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = (_QWORD *)((char *)v4 + v33);
    v38 = (_QWORD *)((char *)v3 + v33);
    v39 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v39))
    {
      v40 = sub_23F6916B8(&qword_256EB1C30);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = v38[1];
      *v37 = *v38;
      v37[1] = v41;
      v37[2] = v38[2];
      v42 = *(int *)(v39 + 24);
      v43 = (char *)v37 + v42;
      v54 = (char *)v38 + v42;
      v44 = sub_23FB2D718();
      v45 = v4;
      v46 = v6;
      v47 = v3;
      v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48(v43, v54, v44);
      v3 = v47;
      v6 = v46;
      v4 = v45;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v37, 0, 1, v39);
    }
    v49 = v6[9];
    v50 = (char *)v4 + v49;
    v51 = (char *)v3 + v49;
    v52 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v8 = v4 + *(int *)(v7 + 20);
          v9 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
          {
            swift_bridgeObjectRelease();
            v10 = v8 + *(int *)(v9 + 24);
            v11 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          }
          v12 = *(int *)(v7 + 24);
          goto LABEL_32;
        case 1u:
          swift_bridgeObjectRelease();
          v12 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          goto LABEL_32;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v14 = v4 + v13[6];
          v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v15))goto LABEL_19;
          v16 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v16))goto LABEL_18;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 6)
          {
            v18 = sub_23FB2D718();
LABEL_16:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v14, v18);
            goto LABEL_18;
          }
          if (EnumCaseMultiPayload != 5)
          {
            if (EnumCaseMultiPayload != 1)
              goto LABEL_18;
            v18 = sub_23FB2EB1C();
            goto LABEL_16;
          }
          v20 = v14
              + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v21 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
LABEL_18:
          v22 = v14 + *(int *)(v15 + 20);
          v23 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
LABEL_19:
          v24 = v4 + v13[7];
          v25 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v24, 1, v25))
          {
            swift_bridgeObjectRelease();
            v26 = v24 + *(int *)(v25 + 24);
            v27 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
          }
          v28 = v4 + v13[8];
          v29 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v28, 1, v29))goto LABEL_31;
          v30 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v28, 1, v30))goto LABEL_30;
          v31 = swift_getEnumCaseMultiPayload();
          if (v31 == 1)
          {
            swift_bridgeObjectRelease();
            v36 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          }
          else
          {
            if (v31)
              goto LABEL_30;
            swift_bridgeObjectRelease();
            v32 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v33 = v28 + *(int *)(v32 + 20);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33, 1, v25))
            {
              swift_bridgeObjectRelease();
              v34 = v33 + *(int *)(v25 + 24);
              v35 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
            }
            v36 = *(int *)(v32 + 24);
          }
          v37 = v28 + v36;
          v38 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
LABEL_30:
          v39 = v28 + *(int *)(v29 + 20);
          v40 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
LABEL_31:
          v12 = v13[9];
LABEL_32:
          v41 = v4 + v12;
          v42 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          break;
        case 3u:
          v19 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v4, v19);
          break;
        default:
          break;
      }
    }
    v43 = v4 + *(int *)(v5 + 20);
    v44 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
  }
  v45 = a1 + a2[6];
  v46 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v45, 1, v46))
  {
    v47 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v45, 1, v47))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
          goto LABEL_43;
        case 1u:
          swift_bridgeObjectRelease();
          v49 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                       + 20);
          goto LABEL_44;
        case 2u:
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
          goto LABEL_43;
        case 3u:
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
          goto LABEL_43;
        case 4u:
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
          goto LABEL_43;
        case 5u:
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_43:
          v49 = *(int *)(v48 + 24);
LABEL_44:
          v50 = v45 + v49;
          v51 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
          break;
        default:
          break;
      }
    }
    v52 = v45 + *(int *)(v46 + 20);
    v53 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
  }
  swift_bridgeObjectRelease();
  v54 = a1 + a2[8];
  v55 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v54, 1, v55))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = v54 + *(int *)(v55 + 24);
    v57 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
  }
  v58 = a1 + a2[9];
  v59 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
}

_BYTE *initializeWithCopy for TranscriptProtoRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  int *v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  char *v52;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23F9DD7C8 + 4 * byte_23FB8AE60[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = v3[6];
  v19 = &v5[v18];
  v20 = &v4[v18];
  v21 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
  {
    v22 = sub_23F6916B8(&qword_256EA8698);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v23))
    {
      v25 = (char *)&loc_23F9DE064 + 4 * byte_23FB8AE64[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v24 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    v26 = *(int *)(v21 + 20);
    v27 = &v19[v26];
    v28 = &v20[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
  }
  v30 = v3[7];
  v31 = v3[8];
  v32 = &v5[v30];
  v33 = &v4[v30];
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = &v5[v31];
  v36 = &v4[v31];
  v37 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v39 = v36[1];
    *v35 = *v36;
    v35[1] = v39;
    v35[2] = v36[2];
    v40 = *(int *)(v37 + 24);
    v41 = (char *)v35 + v40;
    v52 = (char *)v36 + v40;
    v42 = sub_23FB2D718();
    v43 = v5;
    v44 = v4;
    v45 = v3;
    v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v41, v52, v42);
    v3 = v45;
    v4 = v44;
    v5 = v43;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v47 = v3[9];
  v48 = &v5[v47];
  v49 = &v4[v47];
  v50 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  return v5;
}

_BYTE *assignWithCopy for TranscriptProtoRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  int *v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContent);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23F9DE438 + 4 * word_23FB8AE6E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (v5 != v4)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentEnum);
          v21 = (char *)&loc_23F9DE6F0 + 4 * word_23FB8AE76[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
    v20 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23F9DE4E0 + 4 * byte_23FB8AE6A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EB1C50);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = v3[6];
  v31 = &v5[v30];
  v32 = &v4[v30];
  v33 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v33);
  v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33);
  if (!v34)
  {
    if (v35)
    {
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
      goto LABEL_24;
    }
    v39 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    v40 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v39);
    v41 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        v42 = (char *)&loc_23F9DFE40 + 4 * byte_23FB8AE84[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v41)
      {
        if (v5 != v4)
        {
          sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
          v45 = (char *)&loc_23F9DFF2C + 4 * word_23FB8AE8A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_34;
      }
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
    v44 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_34:
    v50 = *(int *)(v33 + 20);
    v51 = &v31[v50];
    v52 = &v32[v50];
    v53 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
    goto LABEL_35;
  }
  if (v35)
  {
LABEL_24:
    v38 = sub_23F6916B8(&qword_256EA8698);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_35;
  }
  v36 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v36))
  {
    v43 = (char *)&loc_23F9DFE90 + 4 * byte_23FB8AE7E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v37 = sub_23F6916B8(&qword_256EA85F0);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  v46 = *(int *)(v33 + 20);
  v47 = &v31[v46];
  v48 = &v32[v46];
  v49 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v33);
LABEL_35:
  v54 = v3[7];
  v55 = &v5[v54];
  v56 = &v4[v54];
  *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = v3[8];
  v58 = &v5[v57];
  v59 = &v4[v57];
  v60 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v61 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v60);
  v62 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v59, 1, v60);
  if (!v61)
  {
    if (!v62)
    {
      *v58 = *v59;
      v58[1] = v59[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v58[2] = v59[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v76 = *(int *)(v60 + 24);
      v77 = (char *)v58 + v76;
      v78 = (char *)v59 + v76;
      v79 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v77, v78, v79);
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)v58, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_40;
  }
  if (v62)
  {
LABEL_40:
    v70 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_41;
  }
  *v58 = *v59;
  v58[1] = v59[1];
  v58[2] = v59[2];
  v63 = *(int *)(v60 + 24);
  v64 = (char *)v58 + v63;
  v80 = (char *)v59 + v63;
  v65 = sub_23FB2D718();
  v66 = v5;
  v67 = v4;
  v68 = v3;
  v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v69(v64, v80, v65);
  v3 = v68;
  v4 = v67;
  v5 = v66;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v58, 0, 1, v60);
LABEL_41:
  v71 = v3[9];
  v72 = &v5[v71];
  v73 = &v4[v71];
  v74 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
  return v5;
}

_BYTE *initializeWithTake for TranscriptProtoRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23F9E0704 + 4 * byte_23FB8AE96[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
  {
    v22 = sub_23F6916B8(&qword_256EA8698);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v23))
    {
      v25 = (char *)&loc_23F9E0F28 + 4 * byte_23FB8AE9A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v24 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    v26 = *(int *)(v21 + 20);
    v27 = &v19[v26];
    v28 = &v20[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
  }
  v30 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33))
  {
    v34 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[2] = v32[2];
    v35 = *(int *)(v33 + 24);
    v36 = (char *)v31 + v35;
    v37 = (char *)v32 + v35;
    v38 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v33);
  }
  v39 = a3[9];
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoRequestContent(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContent);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23F9E12A8 + 4 * byte_23FB8AEA4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentEnum);
          v21 = (char *)&loc_23F9E14BC + 4 * byte_23FB8AEA8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
    v20 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23F9E133C + 4 * byte_23FB8AEA0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EB1C50);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = a3[6];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v33);
  v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33);
  if (!v34)
  {
    if (v35)
    {
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
      goto LABEL_24;
    }
    v39 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    v40 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v39);
    v41 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        v42 = (char *)&loc_23F9E2A1C + 4 * byte_23FB8AEB2[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v41)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
          v45 = (char *)&loc_23F9E2AF8 + 4 * byte_23FB8AEB8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_34;
      }
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    }
    v44 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_34:
    v50 = *(int *)(v33 + 20);
    v51 = &v31[v50];
    v52 = &v32[v50];
    v53 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
    goto LABEL_35;
  }
  if (v35)
  {
LABEL_24:
    v38 = sub_23F6916B8(&qword_256EA8698);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_35;
  }
  v36 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v36))
  {
    v43 = (char *)&loc_23F9E2A64 + 4 * byte_23FB8AEAC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v37 = sub_23F6916B8(&qword_256EA85F0);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  v46 = *(int *)(v33 + 20);
  v47 = &v31[v46];
  v48 = &v32[v46];
  v49 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v33);
LABEL_35:
  v54 = a3[7];
  v55 = &a1[v54];
  v56 = (uint64_t *)&a2[v54];
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  v59 = a3[8];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v63 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v60, 1, v62);
  v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v61, 1, v62);
  if (!v63)
  {
    if (!v64)
    {
      v75 = v61[1];
      *v60 = *v61;
      v60[1] = v75;
      swift_bridgeObjectRelease();
      v60[2] = v61[2];
      swift_bridgeObjectRelease();
      v76 = *(int *)(v62 + 24);
      v77 = (char *)v60 + v76;
      v78 = (char *)v61 + v76;
      v79 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 40))(v77, v78, v79);
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)v60, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_40;
  }
  if (v64)
  {
LABEL_40:
    v69 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_41;
  }
  *(_OWORD *)v60 = *(_OWORD *)v61;
  v60[2] = v61[2];
  v65 = *(int *)(v62 + 24);
  v66 = (char *)v60 + v65;
  v67 = (char *)v61 + v65;
  v68 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v60, 0, 1, v62);
LABEL_41:
  v70 = a3[9];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v73 - 8) + 40))(v71, v72, v73);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9E3098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA86A0);
  sub_23F6F07DC();
  if (v7)
  {
    sub_23F6F0B94();
  }
  else
  {
    sub_23F6916B8(&qword_256EA8698);
    sub_23F6F07DC();
    if (v7)
    {
      sub_23F6F0B08();
    }
    else
    {
      if (v3 == 2147483646)
      {
        sub_23F6F0880(*(_QWORD *)(v4 + *(int *)(a3 + 28) + 8));
        sub_23F694C84();
        return;
      }
      sub_23F6916B8(&qword_256EB1C30);
      sub_23F6F07DC();
      if (v7)
      {
        sub_23FAC3340();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3508();
      }
    }
  }
  v8 = sub_23F6F08CC(v6);
  sub_23F6F07D0(v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9E3148(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA86A0);
  sub_23F6F07EC();
  if (v7)
  {
    sub_23F6F0BC4();
  }
  else
  {
    sub_23F6916B8(&qword_256EA8698);
    sub_23F6F07EC();
    if (v7)
    {
      sub_23F6F0BD0();
    }
    else
    {
      if (a3 == 2147483646)
      {
        sub_23F878BAC(*(int *)(a4 + 28));
        sub_23F694C84();
        return;
      }
      sub_23F6916B8(&qword_256EB1C30);
      sub_23F6F07EC();
      if (v7)
      {
        sub_23FAC335C();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3534();
      }
    }
  }
  v8 = sub_23F6F082C(v6);
  sub_23F6F07C4(v8, v9, v10, v11);
}

void sub_23F9E31E8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, &qword_256EB4EB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, &qword_256EB4EB8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EB4EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23F9E33AC + 4 * byte_23FB8AEBE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRequestContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v6 = a1 + *(int *)(v5 + 20);
        v7 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
        {
          swift_bridgeObjectRelease();
          v8 = v6 + *(int *)(v7 + 24);
          v9 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        }
        v10 = *(int *)(v5 + 24);
        goto LABEL_31;
      case 1u:
        swift_bridgeObjectRelease();
        v10 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        goto LABEL_31;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v12 = a1 + v11[6];
        v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13))goto LABEL_18;
        v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v14))goto LABEL_17;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 6)
        {
          v16 = sub_23FB2D718();
LABEL_15:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v12, v16);
          goto LABEL_17;
        }
        if (EnumCaseMultiPayload != 5)
        {
          if (EnumCaseMultiPayload != 1)
            goto LABEL_17;
          v16 = sub_23FB2EB1C();
          goto LABEL_15;
        }
        v18 = v12
            + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v19 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
LABEL_17:
        v20 = v12 + *(int *)(v13 + 20);
        v21 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
LABEL_18:
        v22 = a1 + v11[7];
        v23 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v22, 1, v23))
        {
          swift_bridgeObjectRelease();
          v24 = v22 + *(int *)(v23 + 24);
          v25 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        }
        v26 = a1 + v11[8];
        v27 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v27))goto LABEL_30;
        v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v28))goto LABEL_29;
        v29 = swift_getEnumCaseMultiPayload();
        if (v29 == 1)
        {
          swift_bridgeObjectRelease();
          v34 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        }
        else
        {
          if (v29)
            goto LABEL_29;
          swift_bridgeObjectRelease();
          v30 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v31 = v26 + *(int *)(v30 + 20);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v31, 1, v23))
          {
            swift_bridgeObjectRelease();
            v32 = v31 + *(int *)(v23 + 24);
            v33 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
          }
          v34 = *(int *)(v30 + 24);
        }
        v35 = v26 + v34;
        v36 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
LABEL_29:
        v37 = v26 + *(int *)(v27 + 20);
        v38 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
LABEL_30:
        v10 = v11[9];
LABEL_31:
        v39 = a1 + v10;
        v40 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        break;
      case 3u:
        v17 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
        break;
      default:
        break;
    }
  }
  v41 = a1 + *(int *)(a2 + 20);
  v42 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
}

char *initializeWithCopy for TranscriptProtoRequestContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F9E3F9C + 4 * byte_23FB8AEC6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB1C50);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoRequestContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F9E47A0 + 4 * byte_23FB8AECA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
    v11 = (char *)&loc_23F9E488C + 4 * byte_23FB8AECE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoRequestContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F9E57B0 + 4 * byte_23FB8AED2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB1C50);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoRequestContent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F9E5F2C + 4 * byte_23FB8AED6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
    v11 = (char *)&loc_23F9E6008 + 4 * byte_23FB8AEDA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9E6D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB1C50);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9E6D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB1C50);
}

void sub_23F9E6D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB4F68, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoRequestContentEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F9E6DC8 + 4 * byte_23FB8AEDE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoRequestContentEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v4 = a1 + *(int *)(v3 + 20);
      v5 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        v6 = v4 + *(int *)(v5 + 24);
        v7 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      }
      v8 = *(int *)(v3 + 24);
      goto LABEL_29;
    case 1:
      swift_bridgeObjectRelease();
      v8 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      goto LABEL_29;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
      v10 = a1 + v9[6];
      v11 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))goto LABEL_16;
      v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v12))goto LABEL_15;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 6)
      {
        v14 = sub_23FB2D718();
LABEL_13:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
        goto LABEL_15;
      }
      if (EnumCaseMultiPayload != 5)
      {
        if (EnumCaseMultiPayload != 1)
          goto LABEL_15;
        v14 = sub_23FB2EB1C();
        goto LABEL_13;
      }
      v15 = v10
          + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      v16 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
LABEL_15:
      v17 = v10 + *(int *)(v11 + 20);
      v18 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
LABEL_16:
      v19 = a1 + v9[7];
      v20 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v20))
      {
        swift_bridgeObjectRelease();
        v21 = v19 + *(int *)(v20 + 24);
        v22 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v23 = a1 + v9[8];
      v24 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v23, 1, v24))goto LABEL_28;
      v25 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v23, 1, v25))goto LABEL_27;
      v26 = swift_getEnumCaseMultiPayload();
      if (v26 == 1)
      {
        swift_bridgeObjectRelease();
        v31 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      }
      else
      {
        if (v26)
          goto LABEL_27;
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v28 = v23 + *(int *)(v27 + 20);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v28, 1, v20))
        {
          swift_bridgeObjectRelease();
          v29 = v28 + *(int *)(v20 + 24);
          v30 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        }
        v31 = *(int *)(v27 + 24);
      }
      v32 = v23 + v31;
      v33 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
LABEL_27:
      v34 = v23 + *(int *)(v24 + 20);
      v35 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
LABEL_28:
      v8 = v9[9];
LABEL_29:
      a1 += v8;
LABEL_30:
      v36 = sub_23FB2D718();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(a1, v36);
    case 3:
      goto LABEL_30;
    default:
      return result;
  }
}

void initializeWithCopy for TranscriptProtoRequestContentEnum()
{
  char *v0;

  v0 = (char *)sub_23F9E7904 + 4 * byte_23FB8AEE6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23F9E7904(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__dst, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v47;

  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v32 = *(int *)(v31 + 20);
  v33 = (_QWORD *)((char *)v28 + v32);
  v34 = (_QWORD *)((char *)v29 + v32);
  v35 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v35))
  {
    v36 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v37 = v34[2];
    v33[1] = v34[1];
    v33[2] = v37;
    v38 = *(int *)(v35 + 24);
    v39 = (char *)v33 + v38;
    v47 = (char *)v34 + v38;
    v40 = sub_23FB2D718();
    v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v41(v39, v47, v40);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v35);
  }
  v42 = *(int *)(v31 + 24);
  v43 = (char *)v28 + v42;
  v44 = (char *)v29 + v42;
  v45 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  swift_storeEnumTagMultiPayload();
  return v28;
}

uint64_t assignWithCopy for TranscriptProtoRequestContentEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoRequestContentEnum);
    v2 = (char *)&loc_23F9E80D4 + 4 * byte_23FB8AEEA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoRequestContentEnum()
{
  char *v0;

  v0 = (char *)sub_23F9E88C4 + 4 * byte_23FB8AEEE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_23F9E88C4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__dst, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  *v24 = *v25;
  v26 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v27 = *(int *)(v26 + 20);
  v28 = (_DWORD *)((char *)v24 + v27);
  v29 = (_DWORD *)((char *)v25 + v27);
  v30 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30))
  {
    v31 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    *v28 = *v29;
    *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
    v32 = *(int *)(v30 + 24);
    v33 = (char *)v28 + v32;
    v34 = (char *)v29 + v32;
    v35 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
  }
  v36 = *(int *)(v26 + 24);
  v37 = (char *)v24 + v36;
  v38 = (char *)v25 + v36;
  v39 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  swift_storeEnumTagMultiPayload();
  return v24;
}

uint64_t assignWithTake for TranscriptProtoRequestContentEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoRequestContentEnum);
    v2 = (char *)&loc_23F9E8FD4 + 4 * byte_23FB8AEF2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23F9E9678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA159FC(a1, a2, a3, type metadata accessor for TranscriptProtoRequestContentTextContent, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolution, (void (*)(uint64_t))MEMORY[0x24BE5BF10]);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContentStopContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9E96C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23F6B53A4();
  return sub_23F70D620(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContentStopContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContentTextContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9E9720()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContentTextContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9E9738()
{
  sub_23FAB8268();
}

void sub_23F9E9744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestContentSpeechContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestContentSpeechContent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9E9798()
{
  sub_23FABE678();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B50E8();
  v3 = v2;
  sub_23F877920();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F876A58(*v3);
  }
  else
  {
    v5 = sub_23FAC37D8();
    type metadata accessor for TranscriptProtoStatementID(v5);
    sub_23F6B90D8();
    if (sub_23FAC2D30(v1))
    {
      v6 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2D1C(v6);
    }
    else
    {
      *(_DWORD *)v0 = *(_DWORD *)v1;
      v7 = *(_QWORD *)(v1 + 16);
      *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
      *(_QWORD *)(v0 + 16) = v7;
      sub_23F6B53A4();
      sub_23FAC2BD0();
      sub_23FAC2CC8();
      sub_23FAC2C6C(v0);
    }
    v8 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
  }
  sub_23F693DDC();
}

uint64_t _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  destroy for AssetsManager();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_23FAC2B44(v4))
  {
    sub_23FAC3CF4();
    v5 = sub_23F6B53A4();
    sub_23FAC2CE4(v5);
  }
  sub_23F6B53A4();
  v6 = sub_23F87922C();
  return sub_23FAC2C30(v6, v7, v8);
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6B50E8();
  v4 = sub_23FAC34A0(v2, v3);
  type metadata accessor for TranscriptProtoStatementID(v4);
  sub_23F6B90D8();
  if (sub_23FAC2D30(v1))
  {
    v5 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2D1C(v5);
  }
  else
  {
    *(_DWORD *)v0 = *(_DWORD *)v1;
    v6 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
    *(_QWORD *)(v0 + 16) = v6;
    sub_23F6B53A4();
    sub_23FAC2BD0();
    sub_23FAC2CC8();
    sub_23FAC2C6C(v0);
  }
  v7 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D3A90();
  v4 = sub_23FAC34C8(v2, v3);
  type metadata accessor for TranscriptProtoStatementID(v4);
  if (sub_23FAC2D30(v1))
  {
    v5 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2D1C(v5);
  }
  else
  {
    *(_DWORD *)v0 = *(_DWORD *)v1;
    *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
    v6 = sub_23F6B53A4();
    sub_23FAC2C98(v6);
    sub_23FAC2C6C(v0);
  }
  v7 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpeechRequestCandidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9E9A0C()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpeechRequestCandidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9E9A24()
{
  sub_23FAB8268();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentRequest(_QWORD *a1, char *a2, int *a3)
{
  char *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  int *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v39;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TranscriptProtoRequestContent(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v3, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA86A0);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v3, 1, v10))
      {
        v12 = (char *)&loc_23F9E9B38 + 4 * byte_23FB8AEF6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v11 = sub_23F6916B8(&qword_256EB1C50);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v13 = *(int *)(v7 + 20);
      v14 = (char *)a1 + v13;
      v15 = &v3[v13];
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = v6[5];
    v18 = v6[6];
    v19 = (_QWORD *)((char *)a1 + v17);
    v20 = &v3[v17];
    v21 = *((_QWORD *)v20 + 1);
    *v19 = *(_QWORD *)v20;
    v19[1] = v21;
    v22 = (_QWORD *)((char *)a1 + v18);
    v23 = &v3[v18];
    v24 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24))
    {
      v25 = sub_23F6916B8(&qword_256EB1C30);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = *((_QWORD *)v23 + 1);
      *v22 = *(_QWORD *)v23;
      v22[1] = v26;
      v22[2] = *((_QWORD *)v23 + 2);
      v27 = *(int *)(v24 + 24);
      v28 = (char *)v22 + v27;
      v39 = &v23[v27];
      v29 = sub_23FB2D718();
      v30 = a1;
      v31 = v3;
      v32 = v6;
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v28, v39, v29);
      v6 = v32;
      v3 = v31;
      a1 = v30;
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
    }
    v34 = v6[7];
    v35 = (char *)a1 + v34;
    v36 = &v3[v34];
    v37 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoExternalAgentRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v6 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v7 = a1 + *(int *)(v6 + 20);
          v8 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))
          {
            swift_bridgeObjectRelease();
            v9 = v7 + *(int *)(v8 + 24);
            v10 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          }
          v11 = *(int *)(v6 + 24);
          goto LABEL_32;
        case 1u:
          swift_bridgeObjectRelease();
          v11 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          goto LABEL_32;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v13 = a1 + v12[6];
          v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v14))goto LABEL_19;
          v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v15))goto LABEL_18;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 6)
          {
            v17 = sub_23FB2D718();
LABEL_16:
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v13, v17);
            goto LABEL_18;
          }
          if (EnumCaseMultiPayload != 5)
          {
            if (EnumCaseMultiPayload != 1)
              goto LABEL_18;
            v17 = sub_23FB2EB1C();
            goto LABEL_16;
          }
          v19 = v13
              + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v20 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
LABEL_18:
          v21 = v13 + *(int *)(v14 + 20);
          v22 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
LABEL_19:
          v23 = a1 + v12[7];
          v24 = type metadata accessor for TranscriptProtoStatementID(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v23, 1, v24))
          {
            swift_bridgeObjectRelease();
            v25 = v23 + *(int *)(v24 + 24);
            v26 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
          }
          v27 = a1 + v12[8];
          v28 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v27, 1, v28))goto LABEL_31;
          v29 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v27, 1, v29))goto LABEL_30;
          v30 = swift_getEnumCaseMultiPayload();
          if (v30 == 1)
          {
            swift_bridgeObjectRelease();
            v35 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          }
          else
          {
            if (v30)
              goto LABEL_30;
            swift_bridgeObjectRelease();
            v31 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v32 = v27 + *(int *)(v31 + 20);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v32, 1, v24))
            {
              swift_bridgeObjectRelease();
              v33 = v32 + *(int *)(v24 + 24);
              v34 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
            }
            v35 = *(int *)(v31 + 24);
          }
          v36 = v27 + v35;
          v37 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
LABEL_30:
          v38 = v27 + *(int *)(v28 + 20);
          v39 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
LABEL_31:
          v11 = v12[9];
LABEL_32:
          v40 = a1 + v11;
          v41 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
          break;
        case 3u:
          v18 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
          break;
        default:
          break;
      }
    }
    v42 = a1 + *(int *)(v4 + 20);
    v43 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  v44 = a1 + *(int *)(a2 + 24);
  v45 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v44, 1, v45))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = v44 + *(int *)(v45 + 24);
    v47 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
  }
  v48 = a1 + *(int *)(a2 + 28);
  v49 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
}

char *initializeWithCopy for TranscriptProtoExternalAgentRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v37;

  v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23F9EA974 + 4 * byte_23FB8AEFE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = a3[5];
  v16 = a3[6];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = &a1[v16];
  v21 = &a2[v16];
  v22 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
  {
    v23 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v24;
    *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
    v25 = *(int *)(v22 + 24);
    v26 = &v20[v25];
    v37 = &v21[v25];
    v27 = sub_23FB2D718();
    v28 = a1;
    v29 = a2;
    v30 = a3;
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v26, v37, v27);
    a3 = v30;
    a2 = v29;
    a1 = v28;
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
  }
  v32 = a3[7];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

char *assignWithCopy for TranscriptProtoExternalAgentRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;

  v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContent);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23F9EB37C + 4 * byte_23FB8AF06[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
          v18 = (char *)&loc_23F9EB618 + 4 * word_23FB8AF0A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
    v17 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23F9EB418 + 4 * byte_23FB8AF02[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EB1C50);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = a3[5];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[6];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v33);
  v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33);
  if (!v34)
  {
    if (!v35)
    {
      *(_QWORD *)v31 = *(_QWORD *)v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49 = *(int *)(v33 + 24);
      v50 = &v31[v49];
      v51 = &v32[v49];
      v52 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_23;
  }
  if (v35)
  {
LABEL_23:
    v43 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_24;
  }
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
  v36 = *(int *)(v33 + 24);
  v37 = &v31[v36];
  v53 = &v32[v36];
  v38 = sub_23FB2D718();
  v39 = a1;
  v40 = a2;
  v41 = a3;
  v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42(v37, v53, v38);
  a3 = v41;
  a2 = v40;
  a1 = v39;
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v33);
LABEL_24:
  v44 = a3[7];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  return a1;
}

char *initializeWithTake for TranscriptProtoExternalAgentRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23F9ECDD4 + 4 * byte_23FB8AF12[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    v20 = *(int *)(v18 + 24);
    v21 = &v16[v20];
    v22 = &v17[v20];
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

char *assignWithTake for TranscriptProtoExternalAgentRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v6 = type metadata accessor for TranscriptProtoRequestContent(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContent);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23F9ED708 + 4 * byte_23FB8AF1A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
          v18 = (char *)&loc_23F9ED950 + 4 * byte_23FB8AF1E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestContentEnum);
    }
    v17 = sub_23F6916B8(&qword_256EB1C50);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA86A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23F9ED794 + 4 * byte_23FB8AF16[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EB1C50);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = a3[5];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = a3[6];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v35);
  v37 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v35);
  if (!v36)
  {
    if (!v37)
    {
      v48 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v48;
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      swift_bridgeObjectRelease();
      v49 = *(int *)(v35 + 24);
      v50 = &v33[v49];
      v51 = &v34[v49];
      v52 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)v33, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_23;
  }
  if (v37)
  {
LABEL_23:
    v42 = sub_23F6916B8(&qword_256EB1C30);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_24;
  }
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
  v38 = *(int *)(v35 + 24);
  v39 = &v33[v38];
  v40 = &v34[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v35);
LABEL_24:
  v43 = a3[7];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9EEDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA86A0);
  sub_23F6F07DC();
  if (v6)
  {
    v7 = sub_23F876D78();
  }
  else
  {
    if ((_DWORD)v3 == 2147483646)
    {
      sub_23F6F0880(*(_QWORD *)(v4 + *(int *)(a3 + 20) + 8));
      sub_23F694C84();
      return;
    }
    sub_23F6916B8(&qword_256EB1C30);
    sub_23F6F07DC();
    if (v6)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0AFC();
    }
    v7 = v4 + v9;
  }
  sub_23F6F07D0(v7, v3, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9EEE68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA86A0);
  sub_23F6F07EC();
  if (v6)
  {
    sub_23F876DBC();
  }
  else
  {
    if (a3 == 2147483646)
    {
      sub_23F878BAC(*(int *)(a4 + 20));
      sub_23F694C84();
      return;
    }
    sub_23F6916B8(&qword_256EB1C30);
    sub_23F6F07EC();
    if (v6)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BB8();
    }
  }
  sub_23F6F08B0();
  sub_23F6F07C4(v7, v8, v9, v10);
}

void sub_23F9EEEF0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EB4EB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContent);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB4EC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentRequestRewriteMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentRequestRewriteMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9EEFF0()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRequestPrescribedPlan(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23F9EF0CC + 4 * byte_23FB8AF22[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRequestPrescribedPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        v6 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0) + 20);
        goto LABEL_10;
      case 2u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
        goto LABEL_9;
      case 3u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
        goto LABEL_9;
      case 4u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_9:
        v6 = *(int *)(v5 + 24);
LABEL_10:
        v7 = a1 + v6;
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for TranscriptProtoRequestPrescribedPlan(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F9EF3E0 + 4 * byte_23FB8AF2E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA85F0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoRequestPrescribedPlan(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F9EF5B4 + 4 * byte_23FB8AF34[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v11 = (char *)&loc_23F9EF650 + 4 * byte_23FB8AF3A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoRequestPrescribedPlan(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23F9EFAA4 + 4 * byte_23FB8AF40[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA85F0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoRequestPrescribedPlan(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23F9EFC64 + 4 * byte_23FB8AF46[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA85F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v11 = (char *)&loc_23F9EFCF8 + 4 * byte_23FB8AF4C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlan()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F0014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA85F0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlan()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F002C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA85F0);
}

void sub_23F9F0038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB5430, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoRequestPrescribedPlanEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23F9F00A4 + 4 * byte_23FB8AF52[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoRequestPrescribedPlanEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
      v4 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0) + 20);
      goto LABEL_9;
    case 2:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_8:
      v4 = *(int *)(v3 + 24);
LABEL_9:
      v5 = a1 + v4;
      v6 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoRequestPrescribedPlanEnum()
{
  char *v0;

  v0 = (char *)sub_23F9F0450 + 4 * byte_23FB8AF5E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F9F0450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v3 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 24);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = sub_23FB2D718();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoRequestPrescribedPlanEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v2 = (char *)&loc_23F9F05BC + 4 * byte_23FB8AF64[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoRequestPrescribedPlanEnum()
{
  char *v0;

  v0 = (char *)sub_23F9F073C + 4 * byte_23FB8AF6A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23F9F073C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v2 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0) + 24);
  v3 = v0 + v2;
  v4 = v1 + v2;
  v5 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoRequestPrescribedPlanEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v2 = (char *)&loc_23F9F0894 + 4 * byte_23FB8AF70[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23F9F0988()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanSearchTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanSearchTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9F0AB0()
{
  sub_23F6ECB8C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9F0AFC()
{
  sub_23FABE678();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanTextTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanTextTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanConvertTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanConvertTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanDisplayTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanDisplayTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;

  sub_23F877920();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    sub_23FAC3AB4(v1, v2);
    *(_BYTE *)(v0 + 16) = *(_BYTE *)(v4 + 16);
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F878C98();
  }
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwcp_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = sub_23FAC34F8(a1, a2);
  *((_BYTE *)v2 + 16) = *(_BYTE *)(v3 + 16);
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F878C98();
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC2CF8(a1, a2);
  sub_23F6B5908();
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v3 + 16);
  v5 = v4 + *(int *)(v2 + 24);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;

  sub_23FAC39D0(a1, a2);
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC2E50(a1, a2);
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(v3 + 16);
  v5 = v4 + *(int *)(v2 + 24);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanKnowledgeTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRequestPrescribedPlanKnowledgeTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoAction(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v8 = a3[7];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      v15 = *(int *)(v11 + 24);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)((char *)v4 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[10];
    v29 = a3[11];
    v30 = (_QWORD *)((char *)v4 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = (char *)v4 + v29;
    v34 = (uint64_t)a2 + v29;
    v35 = sub_23FB2D718();
    v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 44);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (_QWORD *)(a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[10];
  v27 = a3[11];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = a2 + v27;
  v33 = sub_23FB2D718();
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v32 = *(int *)(v9 + 24);
      v33 = (char *)v7 + v32;
      v34 = (char *)v8 + v32;
      v35 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoAction(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v38 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v38;
      swift_bridgeObjectRelease();
      v39 = *(int *)(v10 + 24);
      v40 = v8 + v39;
      v41 = v9 + v39;
      v42 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
      goto LABEL_7;
    }
    sub_23F93DADC(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v13 = *(int *)(v10 + 24);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v10);
LABEL_7:
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = a3[11];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9F16F8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3C44();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9F1760()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3C78();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23F9F17B8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _WORD *v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoToolParameterValue(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA84D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
      {
        v11 = sub_23F6916B8(&qword_256EAB768);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v12 = sub_23FB2EB1C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        }
        else
        {
          v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v10);
      }
      v14 = *(int *)(v7 + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (_WORD *)((char *)a1 + v18);
    v20 = (_WORD *)((char *)a2 + v18);
    v21 = type metadata accessor for TranscriptProtoPromptSelection(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
    {
      v22 = sub_23F6916B8(&qword_256EA8598);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v19[4] = v20[4];
      v23 = *(int *)(v21 + 20);
      v24 = (char *)v19 + v23;
      v25 = (char *)v20 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
    }
    v27 = *(int *)(a3 + 24);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v6 = sub_23FB2EB1C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v7 = a1 + *(int *)(v4 + 20);
    v8 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))
  {
    v11 = v9 + *(int *)(v10 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + *(int *)(a2 + 24);
  v14 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *initializeWithCopy for TranscriptProtoActionParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _WORD *v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA84D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EAB768);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_23FB2EB1C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v12 = *(int *)(v6 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = (_WORD *)((char *)a1 + v16);
  v18 = (_WORD *)((char *)a2 + v16);
  v19 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[4] = v18[4];
    v21 = *(int *)(v19 + 20);
    v22 = (char *)v17 + v21;
    v23 = (char *)v18 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _WORD *v28;
  _WORD *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValue);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v15 = sub_23FB2EB1C();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v22 = sub_23FB2EB1C();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    }
    v17 = sub_23F6916B8(&qword_256EAB768);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_27:
    v23 = *(int *)(v6 + 20);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA84D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_28;
  }
  v9 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EAB768);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v18 = *(int *)(v6 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_28:
  v27 = *(int *)(a3 + 20);
  v28 = (_WORD *)((char *)a1 + v27);
  v29 = (_WORD *)((char *)a2 + v27);
  v30 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v30);
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30);
  if (!v31)
  {
    if (!v32)
    {
      v44 = *(_QWORD *)v29;
      v28[4] = v29[4];
      *(_QWORD *)v28 = v44;
      v45 = *(int *)(v30 + 20);
      v46 = (char *)v28 + v45;
      v47 = (char *)v29 + v45;
      v48 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
      goto LABEL_34;
    }
    sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoPromptSelection);
    goto LABEL_33;
  }
  if (v32)
  {
LABEL_33:
    v38 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_34;
  }
  v33 = *(_QWORD *)v29;
  v28[4] = v29[4];
  *(_QWORD *)v28 = v33;
  v34 = *(int *)(v30 + 20);
  v35 = (char *)v28 + v34;
  v36 = (char *)v29 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
LABEL_34:
  v39 = *(int *)(a3 + 24);
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

char *initializeWithTake for TranscriptProtoActionParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA84D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EAB768);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v10 = sub_23FB2EB1C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_WORD *)v16 + 4) = *((_WORD *)v17 + 4);
    v20 = *(int *)(v18 + 20);
    v21 = &v16[v20];
    v22 = &v17[v20];
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v24 = *(int *)(a3 + 24);
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

char *assignWithTake for TranscriptProtoActionParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValue);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v15 = sub_23FB2EB1C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 == a2)
          goto LABEL_26;
        sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v22 = sub_23FB2EB1C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
          swift_storeEnumTagMultiPayload();
          goto LABEL_26;
        }
        v17 = *(_QWORD *)(v12 - 8);
LABEL_17:
        memcpy(a1, a2, *(_QWORD *)(v17 + 64));
LABEL_26:
        v23 = *(int *)(v6 + 20);
        v24 = &a1[v23];
        v25 = &a2[v23];
        v26 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
        goto LABEL_27;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    }
    v17 = *(_QWORD *)(sub_23F6916B8(&qword_256EAB768) - 8);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA84D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_27;
  }
  v9 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EAB768);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_23FB2EB1C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v18 = *(int *)(v6 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_27:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v30);
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30);
  if (!v31)
  {
    if (!v32)
    {
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
      v43 = *(int *)(v30 + 20);
      v44 = &v28[v43];
      v45 = &v29[v43];
      v46 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
      goto LABEL_33;
    }
    sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoPromptSelection);
    goto LABEL_32;
  }
  if (v32)
  {
LABEL_32:
    v37 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_33;
  }
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_WORD *)v28 + 4) = *((_WORD *)v29 + 4);
  v33 = *(int *)(v30 + 20);
  v34 = &v28[v33];
  v35 = &v29[v33];
  v36 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
LABEL_33:
  v38 = *(int *)(a3 + 24);
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F2998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA4D23C(a1, a2, a3, &qword_256EA84D8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F29B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA4D2B0(a1, a2, a3, a4, &qword_256EA84D8);
}

void sub_23F9F29CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA4D32C(a1, a2, a3, &qword_256EB59A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValue);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionCancellation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F2A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA98E0C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionCancellation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F2A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA98E64(a1, a2, a3, a4, &qword_256EA25E0);
}

void sub_23F9F2A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA98EB8(a1, a2, a3, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPromptSelection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPromptSelection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9F2A84()
{
  sub_23FABE678();
}

void type metadata accessor for TranscriptProtoPromptSelectionEnum()
{
  sub_23F694C70();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionConfirmation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionConfirmation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _WORD *v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2610);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (_WORD *)((char *)a1 + v10);
    v12 = (_WORD *)((char *)a2 + v10);
    v13 = type metadata accessor for TranscriptProtoPromptSelection(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA8598);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      v11[4] = v12[4];
      v15 = *(int *)(v13 + 20);
      v16 = (char *)v11 + v15;
      v17 = (char *)v12 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoParameterValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6))
  {
    v7 = v5 + *(int *)(v6 + 20);
    v8 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 24);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_WORD *)v9 + 4) = *((_WORD *)v10 + 4);
    v13 = *(int *)(v11 + 20);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

char *assignWithCopy for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v6 = sub_23FB2EB1C();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    if (!v16)
    {
      v28 = *(_QWORD *)v13;
      *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
      *(_QWORD *)v12 = v28;
      v29 = *(int *)(v14 + 20);
      v30 = &v12[v29];
      v31 = &v13[v29];
      v32 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v12, type metadata accessor for TranscriptProtoPromptSelection);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v22 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  v17 = *(_QWORD *)v13;
  *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
  *(_QWORD *)v12 = v17;
  v18 = *(int *)(v14 + 20);
  v19 = &v12[v18];
  v20 = &v13[v18];
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  v23 = *(int *)(a3 + 24);
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

char *initializeWithTake for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for TranscriptProtoPromptSelection(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_WORD *)v9 + 4) = *((_WORD *)v10 + 4);
    v13 = *(int *)(v11 + 20);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

char *assignWithTake for TranscriptProtoParameterValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = sub_23FB2EB1C();
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v14);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    if (!v16)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
      v27 = *(int *)(v14 + 20);
      v28 = &v12[v27];
      v29 = &v13[v27];
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v12, type metadata accessor for TranscriptProtoPromptSelection);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v21 = sub_23F6916B8(&qword_256EA8598);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_WORD *)v12 + 4) = *((_WORD *)v13 + 4);
  v17 = *(int *)(v14 + 20);
  v18 = &v12[v17];
  v19 = &v13[v17];
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_13:
  v22 = *(int *)(a3 + 24);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F3490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA4D23C(a1, a2, a3, &qword_256EA2610);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23F9F34B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA4D2B0(a1, a2, a3, a4, &qword_256EA2610);
}

void sub_23F9F34C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA4D32C(a1, a2, a3, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolDisambiguation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolDisambiguation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9F3520()
{
  sub_23F6ECB8C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContextPrewarmRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContextPrewarmRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContextPrewarmCompleted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContextPrewarmCompleted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoActionResult(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EB5E40);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentOutcome(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v13 = v10[2];
      v9[1] = v10[1];
      v9[2] = v13;
      v14 = *(int *)(v11 + 24);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v19 = a3[6];
    v20 = (char *)v7 + v19;
    v21 = (char *)a2 + v19;
    v22 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v24))
      {
        v26 = (char *)&loc_23F9F3764 + 4 * byte_23FB8AF76[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v25 = sub_23F6916B8(&qword_256EA7FF8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v27 = *(int *)(v22 + 20);
      v28 = &v20[v27];
      v29 = &v21[v27];
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v31 = a3[7];
    v32 = (char *)v7 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoExternalAgentOutcome(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
  {
    v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10))
    {
LABEL_49:
      v49 = v8 + *(int *)(v9 + 20);
      v50 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
      goto LABEL_50;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v11 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v12 = v8 + v11[6];
        v13 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        v14 = v8 + v11[7];
        v15 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v15))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = v14 + *(int *)(v15 + 28);
          v17 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        }
        v18 = v11[8];
        goto LABEL_48;
      case 1u:
        swift_bridgeObjectRelease();
        v19 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_47;
      case 2u:
        swift_bridgeObjectRelease();
        v19 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_47;
      case 3u:
        swift_bridgeObjectRelease();
        v20 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_16;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_48;
      case 5u:
        swift_bridgeObjectRelease();
        v20 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_16:
        v21 = v20;
        v22 = v8 + *(int *)(v20 + 24);
        v23 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v22, 1, v23))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
        v18 = *(int *)(v21 + 28);
        goto LABEL_48;
      case 6u:
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v25 = v8 + *(int *)(v24 + 20);
        v26 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v25, 1, v26))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        v18 = *(int *)(v24 + 24);
        goto LABEL_48;
      case 7u:
        v27 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v27))goto LABEL_46;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v29 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_46;
            v29 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_45:
          v45 = v8 + *(int *)(v29 + 20);
          v46 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
LABEL_46:
          v19 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_47:
          v18 = *(int *)(v19 + 20);
LABEL_48:
          v47 = v8 + v18;
          v48 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
          goto LABEL_49;
        }
        v37 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v37))goto LABEL_44;
        v38 = swift_getEnumCaseMultiPayload();
        if (v38 == 1)
        {
          v40 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v40))
          {
            v41 = v8 + *(int *)(v40 + 20);
            v42 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
          }
          v39 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v38)
          {
LABEL_44:
            v29 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_45;
          }
          swift_bridgeObjectRelease();
          v39 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v43 = v8 + *(int *)(v39 + 20);
        v44 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
        goto LABEL_44;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_48;
      case 9u:
        v30 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v30))
        {
          v31 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v31))
          {
            v32 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 16, v32))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v33 = v8 + *(int *)(v32 + 28);
              v34 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
            }
          }
          v35 = v8 + *(int *)(v30 + 20);
          v36 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
        }
        v19 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_47;
      case 0xAu:
        swift_bridgeObjectRelease();
        v19 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_47;
      default:
        goto LABEL_49;
    }
  }
LABEL_50:
  v51 = a1 + a2[7];
  v52 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
}

_QWORD *initializeWithCopy for TranscriptProtoExternalAgentOutcome(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v22))
    {
      v24 = (char *)&loc_23F9F4894 + 4 * byte_23FB8AF8C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v23 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v25 = *(int *)(v20 + 20);
    v26 = &v18[v25];
    v27 = &v19[v25];
    v28 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoExternalAgentOutcome(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(int *)(v9 + 24);
  v28 = (char *)v7 + v27;
  v29 = (char *)v8 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (v23)
    {
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_13;
    }
    v31 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v31);
    v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v31);
    if (v32)
    {
      if (!v33)
      {
        v34 = (char *)&loc_23F9F554C + 4 * word_23FB8AFA2[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v33)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v37 = (char *)&loc_23F9F56D0 + 4 * word_23FB8AFB8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v36 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_24:
    v42 = *(int *)(v21 + 20);
    v43 = &v19[v42];
    v44 = &v20[v42];
    v45 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
    goto LABEL_25;
  }
  if (v23)
  {
LABEL_13:
    v26 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_25;
  }
  v24 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v24))
  {
    v35 = (char *)&loc_23F9F55E8 + 4 * byte_23FB8AF97[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v25 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  v38 = *(int *)(v21 + 20);
  v39 = &v19[v38];
  v40 = &v20[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_25:
  v46 = a3[7];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoExternalAgentOutcome(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v20))
    {
      v22 = (char *)&loc_23F9F782C + 4 * byte_23FB8AFCE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v21 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    v23 = *(int *)(v18 + 20);
    v24 = &v16[v23];
    v25 = &v17[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v27 = a3[7];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoExternalAgentOutcome(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v26 = v8[2];
  v7[1] = v8[1];
  v7[2] = v26;
  swift_bridgeObjectRelease();
  v27 = *(int *)(v9 + 24);
  v28 = (char *)v7 + v27;
  v29 = (char *)v8 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
LABEL_7:
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v20);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    if (v22)
    {
      sub_23F93DADC((uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_13;
    }
    v31 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v31);
    v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v31);
    if (v32)
    {
      if (!v33)
      {
        v34 = (char *)&loc_23F9F83AC + 4 * word_23FB8AFE4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v33)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v37 = (char *)&loc_23F9F8520 + 4 * word_23FB8AFFA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_23F93DADC((uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v36 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_24:
    v42 = *(int *)(v20 + 20);
    v43 = &v18[v42];
    v44 = &v19[v42];
    v45 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
    goto LABEL_25;
  }
  if (v22)
  {
LABEL_13:
    v25 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_25;
  }
  v23 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v23))
  {
    v35 = (char *)&loc_23F9F8440 + 4 * byte_23FB8AFD9[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v24 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  v38 = *(int *)(v20 + 20);
  v39 = &v18[v38];
  v40 = &v19[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_25:
  v46 = a3[7];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentOutcome()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23F9FA0B0()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA7E70);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0AFC();
      }
    }
    v4 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentOutcome()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23F9FA134()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA7E70);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23F6F0BB8();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23F9FA1A8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, &qword_256EA8088, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionStepResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionStepResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementResultPayload(_QWORD *a1, char *a2, uint64_t a3)
{
  char *v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  char *v63;
  char *v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v3, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v3, 1, v10))
      {
        v12 = (char *)&loc_23F9FA398 + 4 * word_23FB8B010[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v11 = sub_23F6916B8(&qword_256EA7FF8);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      v13 = *(int *)(v7 + 20);
      v14 = (char *)a1 + v13;
      v15 = &v3[v13];
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(v6 + 20);
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = &v3[v17];
    v20 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, (uint64_t)v20))
    {
      v21 = sub_23F6916B8(&qword_256EA7E60);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v66 = v3;
      v67 = v6;
      v65 = a1;
      *v18 = *(_QWORD *)v19;
      v22 = v20[5];
      v23 = (_QWORD *)((char *)v18 + v22);
      v24 = &v19[v22];
      v25 = type metadata accessor for TranscriptProtoResponseDialog(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_23F6916B8(&qword_256EA8000);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v27 = *((_QWORD *)v24 + 1);
        *v23 = *(_QWORD *)v24;
        v23[1] = v27;
        v28 = *((_QWORD *)v24 + 3);
        v23[2] = *((_QWORD *)v24 + 2);
        v23[3] = v28;
        v29 = *((_QWORD *)v24 + 5);
        v23[4] = *((_QWORD *)v24 + 4);
        v23[5] = v29;
        v30 = *((_QWORD *)v24 + 7);
        v23[6] = *((_QWORD *)v24 + 6);
        v23[7] = v30;
        v31 = *(int *)(v25 + 32);
        v62 = &v24[v31];
        v63 = (char *)v23 + v31;
        v32 = sub_23FB2D718();
        v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v61(v63, v62, v32);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v33 = v20[6];
      v34 = (_QWORD *)((char *)v18 + v33);
      v35 = &v19[v33];
      v36 = type metadata accessor for TranscriptProtoResponseVisual(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36))
      {
        v37 = sub_23F6916B8(&qword_256EA8008);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v38 = *((_QWORD *)v35 + 1);
        *v34 = *(_QWORD *)v35;
        v34[1] = v38;
        v39 = *(int *)(v36 + 24);
        v64 = (char *)v34 + v39;
        v40 = &v35[v39];
        v41 = sub_23FB2D718();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42(v64, v40, v41);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
      }
      v43 = v20[7];
      v44 = (_QWORD *)((char *)v18 + v43);
      v45 = &v19[v43];
      v46 = *((_QWORD *)v45 + 1);
      *v44 = *(_QWORD *)v45;
      v44[1] = v46;
      v47 = v20[8];
      v48 = (_QWORD *)((char *)v18 + v47);
      v49 = &v19[v47];
      v50 = *((_QWORD *)v49 + 1);
      *v48 = *(_QWORD *)v49;
      v48[1] = v50;
      *((_BYTE *)v18 + v20[9]) = v19[v20[9]];
      *((_BYTE *)v18 + v20[10]) = v19[v20[10]];
      v51 = v20[11];
      v52 = (char *)v18 + v51;
      v53 = &v19[v51];
      v54 = sub_23FB2D718();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55(v52, v53, v54);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
      a1 = v65;
      v3 = v66;
      v6 = v67;
    }
    v56 = *(int *)(v6 + 24);
    v57 = (char *)a1 + v56;
    v58 = &v3[v56];
    v59 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoStatementResultPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
LABEL_47:
      v44 = a1 + *(int *)(v4 + 20);
      v45 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
      goto LABEL_48;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v7 = a1 + v6[6];
        v8 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        v9 = a1 + v6[7];
        v10 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v11 = v9 + *(int *)(v10 + 28);
          v12 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
        }
        v13 = v6[8];
        goto LABEL_46;
      case 1u:
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_45;
      case 2u:
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_45;
      case 3u:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_14;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_46;
      case 5u:
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_14:
        v16 = v15;
        v17 = a1 + *(int *)(v15 + 24);
        v18 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v18))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        v13 = *(int *)(v16 + 28);
        goto LABEL_46;
      case 6u:
        swift_bridgeObjectRelease();
        v19 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v20 = a1 + *(int *)(v19 + 20);
        v21 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v21))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        v13 = *(int *)(v19 + 24);
        goto LABEL_46;
      case 7u:
        v22 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v22))goto LABEL_44;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v24 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_44;
            v24 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_43:
          v40 = a1 + *(int *)(v24 + 20);
          v41 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
LABEL_44:
          v14 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_45:
          v13 = *(int *)(v14 + 20);
LABEL_46:
          v42 = a1 + v13;
          v43 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
          goto LABEL_47;
        }
        v32 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v32))goto LABEL_42;
        v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 1)
        {
          v35 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v35))
          {
            v36 = a1 + *(int *)(v35 + 20);
            v37 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
          }
          v34 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v33)
          {
LABEL_42:
            v24 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_43;
          }
          swift_bridgeObjectRelease();
          v34 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v38 = a1 + *(int *)(v34 + 20);
        v39 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
        goto LABEL_42;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_46;
      case 9u:
        v25 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v25))
        {
          v26 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v26))
          {
            v27 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v27))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v28 = a1 + *(int *)(v27 + 28);
              v29 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
            }
          }
          v30 = a1 + *(int *)(v25 + 20);
          v31 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        }
        v14 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_45;
      case 0xAu:
        swift_bridgeObjectRelease();
        v14 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_45;
      default:
        goto LABEL_47;
    }
  }
LABEL_48:
  v46 = a1 + *(int *)(a2 + 20);
  v47 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v46, 1, (uint64_t)v47))
  {
    swift_bridgeObjectRelease();
    v48 = v46 + v47[5];
    v49 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v48, 1, v49))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v48 + *(int *)(v49 + 32);
      v51 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
    }
    v52 = v46 + v47[6];
    v53 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v52, 1, v53))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v54 = v52 + *(int *)(v53 + 24);
      v55 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = v46 + v47[11];
    v57 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
  }
  v58 = a1 + *(int *)(a2 + 24);
  v59 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
}

char *initializeWithCopy for TranscriptProtoStatementResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23F9FBA1C + 4 * word_23FB8B032[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, (uint64_t)v18))
  {
    v19 = sub_23F6916B8(&qword_256EA7E60);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v64 = a2;
    v65 = a3;
    v63 = a1;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v20 = v18[5];
    v21 = &v16[v20];
    v22 = &v17[v20];
    v23 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_23F6916B8(&qword_256EA8000);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v25;
      v26 = *((_QWORD *)v22 + 3);
      *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
      *((_QWORD *)v21 + 3) = v26;
      v27 = *((_QWORD *)v22 + 5);
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 5) = v27;
      v28 = *((_QWORD *)v22 + 7);
      *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
      *((_QWORD *)v21 + 7) = v28;
      v29 = *(int *)(v23 + 32);
      v60 = &v22[v29];
      v61 = &v21[v29];
      v30 = sub_23FB2D718();
      v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59(v61, v60, v30);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
    }
    v31 = v18[6];
    v32 = &v16[v31];
    v33 = &v17[v31];
    v34 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34))
    {
      v35 = sub_23F6916B8(&qword_256EA8008);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v36 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v36;
      v37 = *(int *)(v34 + 24);
      v62 = &v32[v37];
      v38 = &v33[v37];
      v39 = sub_23FB2D718();
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40(v62, v38, v39);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
    }
    v41 = v18[7];
    v42 = &v16[v41];
    v43 = &v17[v41];
    v44 = *((_QWORD *)v43 + 1);
    *(_QWORD *)v42 = *(_QWORD *)v43;
    *((_QWORD *)v42 + 1) = v44;
    v45 = v18[8];
    v46 = &v16[v45];
    v47 = &v17[v45];
    v48 = *((_QWORD *)v47 + 1);
    *(_QWORD *)v46 = *(_QWORD *)v47;
    *((_QWORD *)v46 + 1) = v48;
    v16[v18[9]] = v17[v18[9]];
    v16[v18[10]] = v17[v18[10]];
    v49 = v18[11];
    v50 = &v16[v49];
    v51 = &v17[v49];
    v52 = sub_23FB2D718();
    v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v50, v51, v52);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
    a1 = v63;
    a2 = v64;
    a3 = v65;
  }
  v54 = *(int *)(a3 + 24);
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
  return a1;
}

char *assignWithCopy for TranscriptProtoStatementResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *__src;
  char *__srca;
  char *v117;
  uint64_t v118;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23F9FCAC4 + 4 * word_23FB8B05E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v18 = (char *)&loc_23F9FCC3C + 4 * word_23FB8B074[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v17 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23F9FCB58 + 4 * word_23FB8B048[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, (uint64_t)v30);
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, (uint64_t)v30);
  if (!v31)
  {
    if (v32)
    {
      sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoResponseManifest);
      goto LABEL_24;
    }
    __src = a2;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v39 = v30[5];
    v40 = &v28[v39];
    v41 = &v29[v39];
    v42 = type metadata accessor for TranscriptProtoResponseDialog(0);
    v43 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v42);
    v44 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v42);
    v118 = a3;
    if (v43)
    {
      if (!v44)
      {
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
        *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
        *((_QWORD *)v40 + 3) = *((_QWORD *)v41 + 3);
        *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
        *((_QWORD *)v40 + 5) = *((_QWORD *)v41 + 5);
        *((_QWORD *)v40 + 6) = *((_QWORD *)v41 + 6);
        *((_QWORD *)v40 + 7) = *((_QWORD *)v41 + 7);
        v45 = *(int *)(v42 + 32);
        v108 = &v41[v45];
        v111 = &v40[v45];
        v46 = sub_23FB2D718();
        v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106(v111, v108, v46);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v42);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v44)
      {
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
        *((_QWORD *)v40 + 3) = *((_QWORD *)v41 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
        *((_QWORD *)v40 + 5) = *((_QWORD *)v41 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v40 + 6) = *((_QWORD *)v41 + 6);
        *((_QWORD *)v40 + 7) = *((_QWORD *)v41 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v98 = *(int *)(v42 + 32);
        v99 = &v40[v98];
        v100 = &v41[v98];
        v101 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 24))(v99, v100, v101);
LABEL_36:
        v71 = v30[6];
        v72 = &v28[v71];
        v73 = &v29[v71];
        v74 = type metadata accessor for TranscriptProtoResponseVisual(0);
        v75 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v72, 1, v74);
        v76 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v73, 1, v74);
        a2 = __src;
        if (v75)
        {
          if (!v76)
          {
            *(_QWORD *)v72 = *(_QWORD *)v73;
            *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
            v77 = *(int *)(v74 + 24);
            v110 = &v73[v77];
            v114 = &v72[v77];
            v78 = sub_23FB2D718();
            v79 = a1;
            v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v81 = v78;
            a2 = __src;
            v80(v114, v110, v81);
            a1 = v79;
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v72, 0, 1, v74);
LABEL_42:
            v83 = v30[7];
            v84 = &v28[v83];
            v85 = &v29[v83];
            *(_QWORD *)v84 = *(_QWORD *)v85;
            *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v86 = v30[8];
            v87 = &v28[v86];
            v88 = &v29[v86];
            *(_QWORD *)v87 = *(_QWORD *)v88;
            *((_QWORD *)v87 + 1) = *((_QWORD *)v88 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v28[v30[9]] = v29[v30[9]];
            v28[v30[10]] = v29[v30[10]];
            v89 = v30[11];
            v90 = &v28[v89];
            v91 = &v29[v89];
            v92 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 24))(v90, v91, v92);
            a3 = v118;
            goto LABEL_43;
          }
        }
        else
        {
          if (!v76)
          {
            *(_QWORD *)v72 = *(_QWORD *)v73;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v102 = *(int *)(v74 + 24);
            v103 = &v72[v102];
            v104 = &v73[v102];
            v105 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 24))(v103, v104, v105);
            goto LABEL_42;
          }
          sub_23F93DADC((uint64_t)v72, type metadata accessor for TranscriptProtoResponseVisual);
        }
        v82 = sub_23F6916B8(&qword_256EA8008);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        goto LABEL_42;
      }
      sub_23F93DADC((uint64_t)v40, type metadata accessor for TranscriptProtoResponseDialog);
    }
    v70 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_36;
  }
  if (v32)
  {
LABEL_24:
    v38 = sub_23F6916B8(&qword_256EA7E60);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_43;
  }
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v33 = v30[5];
  v34 = &v28[v33];
  v35 = &v29[v33];
  v36 = type metadata accessor for TranscriptProtoResponseDialog(0);
  swift_bridgeObjectRetain();
  v117 = a1;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36))
  {
    v37 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
    *((_QWORD *)v34 + 3) = *((_QWORD *)v35 + 3);
    *((_QWORD *)v34 + 4) = *((_QWORD *)v35 + 4);
    *((_QWORD *)v34 + 5) = *((_QWORD *)v35 + 5);
    *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
    *((_QWORD *)v34 + 7) = *((_QWORD *)v35 + 7);
    v47 = *(int *)(v36 + 32);
    v109 = &v35[v47];
    v112 = &v34[v47];
    v48 = sub_23FB2D718();
    v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v107(v112, v109, v48);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
  }
  v49 = v30[6];
  v50 = &v28[v49];
  v51 = &v29[v49];
  v52 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v51, 1, v52))
  {
    v53 = sub_23F6916B8(&qword_256EA8008);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);
    v54 = *(int *)(v52 + 24);
    v113 = &v51[v54];
    __srca = &v50[v54];
    v55 = a2;
    v56 = sub_23FB2D718();
    v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v56;
    a2 = v55;
    v57(__srca, v113, v58);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v50, 0, 1, v52);
  }
  v59 = v30[7];
  v60 = &v28[v59];
  v61 = &v29[v59];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
  v62 = v30[8];
  v63 = &v28[v62];
  v64 = &v29[v62];
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
  v28[v30[9]] = v29[v30[9]];
  v28[v30[10]] = v29[v30[10]];
  v65 = v30[11];
  v66 = &v28[v65];
  v67 = &v29[v65];
  v68 = sub_23FB2D718();
  v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v69(v66, v67, v68);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
  a1 = v117;
LABEL_43:
  v93 = *(int *)(a3 + 24);
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 24))(v94, v95, v96);
  return a1;
}

char *initializeWithTake for TranscriptProtoStatementResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v10 = (char *)&loc_23F9FF94C + 4 * byte_23FB8B08A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    v11 = *(int *)(v6 + 20);
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, (uint64_t)v18))
  {
    v19 = sub_23F6916B8(&qword_256EA7E60);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v20 = v18[5];
    v21 = &v16[v20];
    v22 = &v17[v20];
    v23 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_23F6916B8(&qword_256EA8000);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      v26 = *((_OWORD *)v22 + 3);
      *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
      *((_OWORD *)v21 + 3) = v26;
      v27 = *(int *)(v23 + 32);
      v28 = &v21[v27];
      v29 = &v22[v27];
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
    }
    v31 = v18[6];
    v32 = &v16[v31];
    v33 = &v17[v31];
    v34 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34))
    {
      v35 = sub_23F6916B8(&qword_256EA8008);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v36 = *(int *)(v34 + 24);
      v37 = &v32[v36];
      v38 = &v33[v36];
      v39 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
    }
    *(_OWORD *)&v16[v18[7]] = *(_OWORD *)&v17[v18[7]];
    *(_OWORD *)&v16[v18[8]] = *(_OWORD *)&v17[v18[8]];
    v16[v18[9]] = v17[v18[9]];
    v16[v18[10]] = v17[v18[10]];
    v40 = v18[11];
    v41 = &v16[v40];
    v42 = &v17[v40];
    v43 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
  }
  v44 = *(int *)(a3 + 24);
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  return a1;
}

char *assignWithTake for TranscriptProtoStatementResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int *v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int v43;
  int v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = (char *)&loc_23FA007A0 + 4 * word_23FB8B0AC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v18 = (char *)&loc_23FA00908 + 4 * word_23FB8B0C2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v17 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_17:
    v23 = *(int *)(v6 + 20);
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
    goto LABEL_18;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_18;
  }
  v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v16 = (char *)&loc_23FA0082C + 4 * word_23FB8B096[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v19 = *(int *)(v6 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, (uint64_t)v30);
  v32 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, (uint64_t)v30);
  if (!v31)
  {
    if (v32)
    {
      sub_23F93DADC((uint64_t)v28, type metadata accessor for TranscriptProtoResponseManifest);
      goto LABEL_24;
    }
    *(_QWORD *)v28 = *(_QWORD *)v29;
    swift_bridgeObjectRelease();
    v39 = v30[5];
    v40 = &v28[v39];
    v41 = &v29[v39];
    v42 = type metadata accessor for TranscriptProtoResponseDialog(0);
    v43 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v42);
    v44 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v42);
    if (v43)
    {
      if (!v44)
      {
        v45 = *((_OWORD *)v41 + 1);
        *(_OWORD *)v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v45;
        v46 = *((_OWORD *)v41 + 3);
        *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
        *((_OWORD *)v40 + 3) = v46;
        v47 = *(int *)(v42 + 32);
        v48 = &v40[v47];
        v49 = &v41[v47];
        v50 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v42);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v44)
      {
        v101 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v101;
        swift_bridgeObjectRelease();
        v102 = *((_QWORD *)v41 + 3);
        *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
        *((_QWORD *)v40 + 3) = v102;
        swift_bridgeObjectRelease();
        v103 = *((_QWORD *)v41 + 5);
        *((_QWORD *)v40 + 4) = *((_QWORD *)v41 + 4);
        *((_QWORD *)v40 + 5) = v103;
        swift_bridgeObjectRelease();
        v104 = *((_QWORD *)v41 + 7);
        *((_QWORD *)v40 + 6) = *((_QWORD *)v41 + 6);
        *((_QWORD *)v40 + 7) = v104;
        swift_bridgeObjectRelease();
        v105 = *(int *)(v42 + 32);
        v106 = &v40[v105];
        v107 = &v41[v105];
        v108 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 40))(v106, v107, v108);
LABEL_36:
        v71 = v30[6];
        v72 = &v28[v71];
        v73 = &v29[v71];
        v74 = type metadata accessor for TranscriptProtoResponseVisual(0);
        v75 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v72, 1, v74);
        v76 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v73, 1, v74);
        if (v75)
        {
          if (!v76)
          {
            *(_OWORD *)v72 = *(_OWORD *)v73;
            v77 = *(int *)(v74 + 24);
            v78 = &v72[v77];
            v79 = &v73[v77];
            v80 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v72, 0, 1, v74);
LABEL_42:
            v82 = v30[7];
            v83 = &v28[v82];
            v84 = &v29[v82];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            *(_QWORD *)v83 = v86;
            *((_QWORD *)v83 + 1) = v85;
            swift_bridgeObjectRelease();
            v87 = v30[8];
            v88 = &v28[v87];
            v89 = &v29[v87];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            *(_QWORD *)v88 = v91;
            *((_QWORD *)v88 + 1) = v90;
            swift_bridgeObjectRelease();
            v28[v30[9]] = v29[v30[9]];
            v28[v30[10]] = v29[v30[10]];
            v92 = v30[11];
            v93 = &v28[v92];
            v94 = &v29[v92];
            v95 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v93, v94, v95);
            goto LABEL_43;
          }
        }
        else
        {
          if (!v76)
          {
            *(_QWORD *)v72 = *(_QWORD *)v73;
            swift_bridgeObjectRelease();
            *((_QWORD *)v72 + 1) = *((_QWORD *)v73 + 1);
            swift_bridgeObjectRelease();
            v109 = *(int *)(v74 + 24);
            v110 = &v72[v109];
            v111 = &v73[v109];
            v112 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 40))(v110, v111, v112);
            goto LABEL_42;
          }
          sub_23F93DADC((uint64_t)v72, type metadata accessor for TranscriptProtoResponseVisual);
        }
        v81 = sub_23F6916B8(&qword_256EA8008);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        goto LABEL_42;
      }
      sub_23F93DADC((uint64_t)v40, type metadata accessor for TranscriptProtoResponseDialog);
    }
    v70 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_36;
  }
  if (v32)
  {
LABEL_24:
    v38 = sub_23F6916B8(&qword_256EA7E60);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_43;
  }
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v33 = v30[5];
  v34 = &v28[v33];
  v35 = &v29[v33];
  v36 = type metadata accessor for TranscriptProtoResponseDialog(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36))
  {
    v37 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v51 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v51;
    v52 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v52;
    v53 = *(int *)(v36 + 32);
    v54 = &v34[v53];
    v55 = &v35[v53];
    v56 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
  }
  v57 = v30[6];
  v58 = &v28[v57];
  v59 = &v29[v57];
  v60 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v59, 1, v60))
  {
    v61 = sub_23F6916B8(&qword_256EA8008);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
    v62 = *(int *)(v60 + 24);
    v63 = &v58[v62];
    v64 = &v59[v62];
    v65 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v58, 0, 1, v60);
  }
  *(_OWORD *)&v28[v30[7]] = *(_OWORD *)&v29[v30[7]];
  *(_OWORD *)&v28[v30[8]] = *(_OWORD *)&v29[v30[8]];
  v28[v30[9]] = v29[v30[9]];
  v28[v30[10]] = v29[v30[10]];
  v66 = v30[11];
  v67 = &v28[v66];
  v68 = &v29[v66];
  v69 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
LABEL_43:
  v96 = *(int *)(a3 + 24);
  v97 = &a1[v96];
  v98 = &a2[v96];
  v99 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementResultPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA02DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA4D23C(a1, a2, a3, &qword_256EA7E70);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementResultPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA02DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA4D2B0(a1, a2, a3, a4, &qword_256EA7E70);
}

void sub_23FA02DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA4D32C(a1, a2, a3, &qword_256EA8088, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v101)(char *, char *, uint64_t);
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  int *v108;
  uint64_t v109;
  char *__src;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA8638);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      __src = v11;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v15))
      {
        v16 = sub_23F6916B8(&qword_256EA7E70);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v17 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v17))
        {
          v19 = (char *)&loc_23FA02F84 + 4 * byte_23FB8B0D8[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v18 = sub_23F6916B8(&qword_256EA7FF8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v20 = *(int *)(v15 + 20);
        v21 = &v10[v20];
        v22 = &v11[v20];
        v23 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v15);
      }
      v24 = *(int *)(v12 + 20);
      v25 = &v10[v24];
      v26 = &v11[v24];
      v27 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, (uint64_t)v27))
      {
        v28 = sub_23F6916B8(&qword_256EA7E60);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v107 = v10;
        v108 = v6;
        *(_QWORD *)v25 = *(_QWORD *)v26;
        v29 = v27[5];
        v30 = &v25[v29];
        v31 = &v26[v29];
        v32 = type metadata accessor for TranscriptProtoResponseDialog(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v32))
        {
          v33 = sub_23F6916B8(&qword_256EA8000);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v34 = *((_QWORD *)v31 + 1);
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = v34;
          v35 = *((_QWORD *)v31 + 3);
          *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
          *((_QWORD *)v30 + 3) = v35;
          v36 = *((_QWORD *)v31 + 5);
          *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
          *((_QWORD *)v30 + 5) = v36;
          v37 = *((_QWORD *)v31 + 7);
          *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
          *((_QWORD *)v30 + 7) = v37;
          v38 = *(int *)(v32 + 32);
          v103 = &v31[v38];
          v105 = &v30[v38];
          v39 = sub_23FB2D718();
          v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v101(v105, v103, v39);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v32);
        }
        v40 = v27[6];
        v41 = &v25[v40];
        v42 = &v26[v40];
        v43 = type metadata accessor for TranscriptProtoResponseVisual(0);
        v109 = v12;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, v43))
        {
          v44 = sub_23F6916B8(&qword_256EA8008);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v45 = *((_QWORD *)v42 + 1);
          *(_QWORD *)v41 = *(_QWORD *)v42;
          *((_QWORD *)v41 + 1) = v45;
          v46 = *(int *)(v43 + 24);
          v104 = &v41[v46];
          v106 = &v42[v46];
          v47 = sub_23FB2D718();
          v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v102(v104, v106, v47);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v41, 0, 1, v43);
        }
        v48 = v27[7];
        v49 = &v25[v48];
        v50 = &v26[v48];
        v51 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        v52 = v27[8];
        v53 = &v25[v52];
        v54 = &v26[v52];
        v55 = *((_QWORD *)v54 + 1);
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = v55;
        v25[v27[9]] = v26[v27[9]];
        v25[v27[10]] = v26[v27[10]];
        v56 = v27[11];
        v57 = &v25[v56];
        v58 = &v26[v56];
        v59 = sub_23FB2D718();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60(v57, v58, v59);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
        v10 = v107;
        v6 = v108;
        v12 = v109;
      }
      v61 = *(int *)(v12 + 24);
      v62 = &v10[v61];
      v63 = &__src[v61];
      v64 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v65 = v6[7];
    v66 = (uint64_t *)((char *)v4 + v65);
    v67 = (uint64_t *)((char *)a2 + v65);
    v68 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v67, 1, v68))
    {
      v69 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v66 = *(_DWORD *)v67;
      v70 = v67[2];
      v66[1] = v67[1];
      v66[2] = v70;
      v71 = *(int *)(v68 + 24);
      v72 = (char *)v66 + v71;
      v73 = (char *)v67 + v71;
      v74 = sub_23FB2D718();
      v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
      swift_bridgeObjectRetain();
      v75(v72, v73, v74);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v66, 0, 1, v68);
    }
    v76 = v6[8];
    v77 = (uint64_t *)((char *)v4 + v76);
    v78 = (uint64_t *)((char *)a2 + v76);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v76, 1, v68))
    {
      v79 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v77 = *(_DWORD *)v78;
      v80 = v78[2];
      v77[1] = v78[1];
      v77[2] = v80;
      v81 = *(int *)(v68 + 24);
      v82 = (char *)v77 + v81;
      v83 = (char *)v78 + v81;
      v84 = sub_23FB2D718();
      v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
      swift_bridgeObjectRetain();
      v85(v82, v83, v84);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v77, 0, 1, v68);
    }
    v86 = v6[9];
    v87 = (uint64_t *)((char *)v4 + v86);
    v88 = (uint64_t *)((char *)a2 + v86);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v86, 1, v68))
    {
      v89 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v87 = *(_DWORD *)v88;
      v90 = v88[2];
      v87[1] = v88[1];
      v87[2] = v90;
      v91 = *(int *)(v68 + 24);
      v92 = (char *)v87 + v91;
      v93 = (char *)v88 + v91;
      v94 = sub_23FB2D718();
      v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
      swift_bridgeObjectRetain();
      v95(v92, v93, v94);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v87, 0, 1, v68);
    }
    v96 = v6[10];
    v97 = (char *)v4 + v96;
    v98 = (char *)a2 + v96;
    v99 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoStatementResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))goto LABEL_56;
  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
  {
    v7 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v7))
    {
LABEL_48:
      v46 = v4 + *(int *)(v6 + 20);
      v47 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
      goto LABEL_49;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v9 = v4 + v8[6];
        v10 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        v11 = v4 + v8[7];
        v12 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = v11 + *(int *)(v12 + 28);
          v14 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
        v15 = v8[8];
        goto LABEL_47;
      case 1u:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_46;
      case 2u:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_46;
      case 3u:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_15;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_47;
      case 5u:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_15:
        v18 = v17;
        v19 = v4 + *(int *)(v17 + 24);
        v20 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v20))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
        v15 = *(int *)(v18 + 28);
        goto LABEL_47;
      case 6u:
        swift_bridgeObjectRelease();
        v21 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v22 = v4 + *(int *)(v21 + 20);
        v23 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v22, 1, v23))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
        v15 = *(int *)(v21 + 24);
        goto LABEL_47;
      case 7u:
        v24 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v24))goto LABEL_45;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v26 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_45;
            v26 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_44:
          v42 = v4 + *(int *)(v26 + 20);
          v43 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
LABEL_45:
          v16 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_46:
          v15 = *(int *)(v16 + 20);
LABEL_47:
          v44 = v4 + v15;
          v45 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
          goto LABEL_48;
        }
        v34 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v34))goto LABEL_43;
        v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 1)
        {
          v37 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v37))
          {
            v38 = v4 + *(int *)(v37 + 20);
            v39 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
          }
          v36 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v35)
          {
LABEL_43:
            v26 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_44;
          }
          swift_bridgeObjectRelease();
          v36 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v40 = v4 + *(int *)(v36 + 20);
        v41 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        goto LABEL_43;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_47;
      case 9u:
        v27 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v27))
        {
          v28 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v28))
          {
            v29 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 16, v29))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v30 = v4 + *(int *)(v29 + 28);
              v31 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
            }
          }
          v32 = v4 + *(int *)(v27 + 20);
          v33 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        }
        v16 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_46;
      case 0xAu:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_46;
      default:
        goto LABEL_48;
    }
  }
LABEL_49:
  v48 = v4 + *(int *)(v5 + 20);
  v49 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v48, 1, (uint64_t)v49))
  {
    swift_bridgeObjectRelease();
    v50 = v48 + v49[5];
    v51 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v50, 1, v51))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = v50 + *(int *)(v51 + 32);
      v53 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
    }
    v54 = v48 + v49[6];
    v55 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v54, 1, v55))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v56 = v54 + *(int *)(v55 + 24);
      v57 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58 = v48 + v49[11];
    v59 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
  }
  v60 = v4 + *(int *)(v5 + 24);
  v61 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
LABEL_56:
  v62 = a1 + a2[7];
  v63 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v62, 1, v63))
  {
    swift_bridgeObjectRelease();
    v64 = v62 + *(int *)(v63 + 24);
    v65 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
  }
  v66 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v66, 1, v63))
  {
    swift_bridgeObjectRelease();
    v67 = v66 + *(int *)(v63 + 24);
    v68 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
  }
  v69 = a1 + a2[9];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v69, 1, v63))
  {
    swift_bridgeObjectRelease();
    v70 = v69 + *(int *)(v63 + 24);
    v71 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v70, v71);
  }
  v72 = a1 + a2[10];
  v73 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8))(v72, v73);
}

_QWORD *initializeWithCopy for TranscriptProtoStatementResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v99)(char *, char *, uint64_t);
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *__dst;
  int *v106;
  char *__src;
  uint64_t v108;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA8638);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    __src = v10;
    v108 = v11;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v15))
      {
        v17 = (char *)&loc_23FA047C4 + 4 * byte_23FB8B0EE[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v16 = sub_23F6916B8(&qword_256EA7FF8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v18 = *(int *)(v13 + 20);
      v19 = &v9[v18];
      v20 = &v10[v18];
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v13);
    }
    v22 = *(int *)(v11 + 20);
    v23 = &v9[v22];
    v24 = &v10[v22];
    v25 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, (uint64_t)v25))
    {
      v26 = sub_23F6916B8(&qword_256EA7E60);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      __dst = v9;
      v106 = v3;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v27 = v25[5];
      v28 = &v23[v27];
      v29 = &v24[v27];
      v30 = type metadata accessor for TranscriptProtoResponseDialog(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30))
      {
        v31 = sub_23F6916B8(&qword_256EA8000);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v32 = *((_QWORD *)v29 + 1);
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v32;
        v33 = *((_QWORD *)v29 + 3);
        *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
        *((_QWORD *)v28 + 3) = v33;
        v34 = *((_QWORD *)v29 + 5);
        *((_QWORD *)v28 + 4) = *((_QWORD *)v29 + 4);
        *((_QWORD *)v28 + 5) = v34;
        v35 = *((_QWORD *)v29 + 7);
        *((_QWORD *)v28 + 6) = *((_QWORD *)v29 + 6);
        *((_QWORD *)v28 + 7) = v35;
        v36 = *(int *)(v30 + 32);
        v101 = &v29[v36];
        v103 = &v28[v36];
        v37 = sub_23FB2D718();
        v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v99(v103, v101, v37);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
      }
      v38 = v25[6];
      v39 = &v23[v38];
      v40 = &v24[v38];
      v41 = type metadata accessor for TranscriptProtoResponseVisual(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41))
      {
        v42 = sub_23F6916B8(&qword_256EA8008);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v43 = *((_QWORD *)v40 + 1);
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *((_QWORD *)v39 + 1) = v43;
        v44 = *(int *)(v41 + 24);
        v102 = &v40[v44];
        v104 = &v39[v44];
        v45 = sub_23FB2D718();
        v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v100(v104, v102, v45);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
      }
      v46 = v25[7];
      v47 = &v23[v46];
      v48 = &v24[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = v25[8];
      v51 = &v23[v50];
      v52 = &v24[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v23[v25[9]] = v24[v25[9]];
      v23[v25[10]] = v24[v25[10]];
      v54 = v25[11];
      v55 = &v23[v54];
      v56 = &v24[v54];
      v57 = sub_23FB2D718();
      v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
      v9 = __dst;
      v3 = v106;
    }
    v59 = *(int *)(v108 + 24);
    v60 = &v9[v59];
    v61 = &__src[v59];
    v62 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v108);
  }
  v63 = v3[7];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v65, 1, v66))
  {
    v67 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v64 = *(_DWORD *)v65;
    v68 = v65[2];
    v64[1] = v65[1];
    v64[2] = v68;
    v69 = *(int *)(v66 + 24);
    v70 = (char *)v64 + v69;
    v71 = (char *)v65 + v69;
    v72 = sub_23FB2D718();
    v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    v73(v70, v71, v72);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v64, 0, 1, v66);
  }
  v74 = v3[8];
  v75 = (_QWORD *)((char *)a1 + v74);
  v76 = (_QWORD *)((char *)a2 + v74);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v74, 1, v66))
  {
    v77 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v75 = *(_DWORD *)v76;
    v78 = v76[2];
    v75[1] = v76[1];
    v75[2] = v78;
    v79 = *(int *)(v66 + 24);
    v80 = (char *)v75 + v79;
    v81 = (char *)v76 + v79;
    v82 = sub_23FB2D718();
    v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
    swift_bridgeObjectRetain();
    v83(v80, v81, v82);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v75, 0, 1, v66);
  }
  v84 = v3[9];
  v85 = (_QWORD *)((char *)a1 + v84);
  v86 = (_QWORD *)((char *)a2 + v84);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v84, 1, v66))
  {
    v87 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v85 = *(_DWORD *)v86;
    v88 = v86[2];
    v85[1] = v86[1];
    v85[2] = v88;
    v89 = *(int *)(v66 + 24);
    v90 = (char *)v85 + v89;
    v91 = (char *)v86 + v89;
    v92 = sub_23FB2D718();
    v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
    swift_bridgeObjectRetain();
    v93(v90, v91, v92);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v85, 0, 1, v66);
  }
  v94 = v3[10];
  v95 = (char *)a1 + v94;
  v96 = (char *)a2 + v94;
  v97 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16))(v95, v96, v97);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoStatementResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  int *v86;
  int v87;
  int v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  int v132;
  int v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  int v157;
  int v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  int v168;
  int v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  int v179;
  int v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  void (*v185)(char *, char *, uint64_t);
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  void (*v212)(char *, char *, uint64_t);
  uint64_t v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *__src;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int *v231;
  _QWORD *v232;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  v5[3] = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)v5 + v6;
  v8 = (char *)v4 + v6;
  v9 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v232 = v4;
      v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      v231 = a3;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA7E70);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v20 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        v228 = v9;
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v20))
        {
          v23 = (char *)&loc_23FA05960 + 4 * word_23FB8B0FA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v21 = sub_23F6916B8(&qword_256EA7FF8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v31 = *(int *)(v12 + 20);
        v32 = &v7[v31];
        v33 = &v8[v31];
        v34 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
        v9 = v228;
      }
      v35 = *(int *)(v9 + 20);
      v36 = &v7[v35];
      v37 = &v8[v35];
      v38 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, (uint64_t)v38))
      {
        v39 = sub_23F6916B8(&qword_256EA7E60);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v226 = v5;
        v229 = v9;
        v223 = v7;
        *(_QWORD *)v36 = *(_QWORD *)v37;
        v40 = v38[5];
        v41 = &v36[v40];
        v42 = &v37[v40];
        v43 = type metadata accessor for TranscriptProtoResponseDialog(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, v43))
        {
          v44 = sub_23F6916B8(&qword_256EA8000);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v41 = *(_QWORD *)v42;
          *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
          *((_QWORD *)v41 + 2) = *((_QWORD *)v42 + 2);
          *((_QWORD *)v41 + 3) = *((_QWORD *)v42 + 3);
          *((_QWORD *)v41 + 4) = *((_QWORD *)v42 + 4);
          *((_QWORD *)v41 + 5) = *((_QWORD *)v42 + 5);
          *((_QWORD *)v41 + 6) = *((_QWORD *)v42 + 6);
          *((_QWORD *)v41 + 7) = *((_QWORD *)v42 + 7);
          v45 = *(int *)(v43 + 32);
          v214 = &v42[v45];
          v217 = &v41[v45];
          v46 = sub_23FB2D718();
          v212 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v212(v217, v214, v46);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v41, 0, 1, v43);
        }
        v47 = v38[6];
        v48 = &v36[v47];
        v49 = &v37[v47];
        v50 = type metadata accessor for TranscriptProtoResponseVisual(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v49, 1, v50))
        {
          v51 = sub_23F6916B8(&qword_256EA8008);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v48 = *(_QWORD *)v49;
          *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
          v52 = *(int *)(v50 + 24);
          v218 = &v48[v52];
          v53 = &v49[v52];
          v54 = sub_23FB2D718();
          v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v55(v218, v53, v54);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v48, 0, 1, v50);
        }
        v56 = v38[7];
        v57 = &v36[v56];
        v58 = &v37[v56];
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
        v59 = v38[8];
        v60 = &v36[v59];
        v61 = &v37[v59];
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
        v36[v38[9]] = v37[v38[9]];
        v36[v38[10]] = v37[v38[10]];
        v62 = v38[11];
        v63 = &v36[v62];
        v64 = &v37[v62];
        v65 = sub_23FB2D718();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
        v5 = v226;
        v7 = v223;
        v9 = v229;
      }
      v67 = *(int *)(v9 + 24);
      v68 = &v7[v67];
      v69 = &v8[v67];
      v70 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_65;
    }
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA8638);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_66;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementResultPayload);
    goto LABEL_7;
  }
  v15 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
  v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
  v231 = a3;
  v232 = v4;
  if (!v16)
  {
    if (v17)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_16;
    }
    v24 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v25 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v24);
    v26 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v24);
    if (v25)
    {
      if (!v26)
      {
        v27 = (char *)&loc_23FA05A44 + 4 * word_23FB8B126[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v26)
      {
        if (v5 != v232)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v30 = (char *)&loc_23FA05F0C + 4 * word_23FB8B13C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_37;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v29 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_37:
    v77 = *(int *)(v15 + 20);
    v78 = &v7[v77];
    v79 = v7;
    v80 = &v8[v77];
    v81 = sub_23FB2D718();
    v82 = v80;
    v7 = v79;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v78, v82, v81);
    goto LABEL_38;
  }
  if (v17)
  {
LABEL_16:
    v22 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_38;
  }
  v18 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v18))
  {
    v28 = (char *)&loc_23FA05AF0 + 4 * word_23FB8B110[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v19 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  v71 = *(int *)(v15 + 20);
  v72 = &v7[v71];
  v73 = (uint64_t)v7;
  v74 = &v8[v71];
  v75 = sub_23FB2D718();
  v76 = v74;
  v7 = (char *)v73;
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v72, v76, v75);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v73, 0, 1, v15);
LABEL_38:
  v83 = *(int *)(v9 + 20);
  v84 = &v7[v83];
  v85 = &v8[v83];
  v86 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v87 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v84, 1, (uint64_t)v86);
  v88 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v85, 1, (uint64_t)v86);
  if (!v87)
  {
    if (v88)
    {
      sub_23F93DADC((uint64_t)v84, type metadata accessor for TranscriptProtoResponseManifest);
      goto LABEL_44;
    }
    v227 = v5;
    v230 = v9;
    v224 = v7;
    __src = v8;
    *(_QWORD *)v84 = *(_QWORD *)v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v95 = v86[5];
    v96 = &v84[v95];
    v97 = &v85[v95];
    v98 = type metadata accessor for TranscriptProtoResponseDialog(0);
    v99 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v96, 1, v98);
    v100 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v97, 1, v98);
    if (v99)
    {
      if (!v100)
      {
        *(_QWORD *)v96 = *(_QWORD *)v97;
        *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
        *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
        *((_QWORD *)v96 + 3) = *((_QWORD *)v97 + 3);
        *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
        *((_QWORD *)v96 + 5) = *((_QWORD *)v97 + 5);
        *((_QWORD *)v96 + 6) = *((_QWORD *)v97 + 6);
        *((_QWORD *)v96 + 7) = *((_QWORD *)v97 + 7);
        v101 = *(int *)(v98 + 32);
        v215 = &v97[v101];
        v219 = &v96[v101];
        v102 = sub_23FB2D718();
        v213 = v98;
        v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v103(v219, v215, v102);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v96, 0, 1, v213);
        goto LABEL_56;
      }
    }
    else
    {
      if (!v100)
      {
        *(_QWORD *)v96 = *(_QWORD *)v97;
        *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
        *((_QWORD *)v96 + 3) = *((_QWORD *)v97 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
        *((_QWORD *)v96 + 5) = *((_QWORD *)v97 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v96 + 6) = *((_QWORD *)v97 + 6);
        *((_QWORD *)v96 + 7) = *((_QWORD *)v97 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v204 = *(int *)(v98 + 32);
        v205 = &v96[v204];
        v206 = &v97[v204];
        v207 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 24))(v205, v206, v207);
LABEL_56:
        v128 = v86[6];
        v129 = &v84[v128];
        v130 = &v85[v128];
        v131 = type metadata accessor for TranscriptProtoResponseVisual(0);
        v132 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v129, 1, v131);
        v133 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v130, 1, v131);
        if (v132)
        {
          if (!v133)
          {
            *(_QWORD *)v129 = *(_QWORD *)v130;
            *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
            v134 = *(int *)(v131 + 24);
            v222 = &v129[v134];
            v135 = &v130[v134];
            v136 = sub_23FB2D718();
            v137 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v137(v222, v135, v136);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v129, 0, 1, v131);
LABEL_62:
            v139 = v86[7];
            v140 = &v84[v139];
            v141 = &v85[v139];
            *(_QWORD *)v140 = *(_QWORD *)v141;
            *((_QWORD *)v140 + 1) = *((_QWORD *)v141 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v142 = v86[8];
            v143 = &v84[v142];
            v144 = &v85[v142];
            *(_QWORD *)v143 = *(_QWORD *)v144;
            *((_QWORD *)v143 + 1) = *((_QWORD *)v144 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v84[v86[9]] = v85[v86[9]];
            v84[v86[10]] = v85[v86[10]];
            v145 = v86[11];
            v146 = &v84[v145];
            v147 = &v85[v145];
            v148 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 24))(v146, v147, v148);
LABEL_63:
            v8 = __src;
            v5 = v227;
            v7 = v224;
            v9 = v230;
            goto LABEL_64;
          }
        }
        else
        {
          if (!v133)
          {
            *(_QWORD *)v129 = *(_QWORD *)v130;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((_QWORD *)v129 + 1) = *((_QWORD *)v130 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v208 = *(int *)(v131 + 24);
            v209 = &v129[v208];
            v210 = &v130[v208];
            v211 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 24))(v209, v210, v211);
            goto LABEL_62;
          }
          sub_23F93DADC((uint64_t)v129, type metadata accessor for TranscriptProtoResponseVisual);
        }
        v138 = sub_23F6916B8(&qword_256EA8008);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
        goto LABEL_62;
      }
      sub_23F93DADC((uint64_t)v96, type metadata accessor for TranscriptProtoResponseDialog);
    }
    v127 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    goto LABEL_56;
  }
  if (!v88)
  {
    v224 = v7;
    __src = v8;
    v227 = v5;
    *(_QWORD *)v84 = *(_QWORD *)v85;
    v89 = v86[5];
    v90 = &v84[v89];
    v91 = &v85[v89];
    v92 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v91, 1, v92))
    {
      v93 = sub_23F6916B8(&qword_256EA8000);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v90 = *(_QWORD *)v91;
      *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
      *((_QWORD *)v90 + 2) = *((_QWORD *)v91 + 2);
      *((_QWORD *)v90 + 3) = *((_QWORD *)v91 + 3);
      *((_QWORD *)v90 + 4) = *((_QWORD *)v91 + 4);
      *((_QWORD *)v90 + 5) = *((_QWORD *)v91 + 5);
      *((_QWORD *)v90 + 6) = *((_QWORD *)v91 + 6);
      *((_QWORD *)v90 + 7) = *((_QWORD *)v91 + 7);
      v104 = *(int *)(v92 + 32);
      v216 = &v91[v104];
      v220 = &v90[v104];
      v105 = sub_23FB2D718();
      v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v106(v220, v216, v105);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v90, 0, 1, v92);
    }
    v230 = v9;
    v107 = v86[6];
    v108 = &v84[v107];
    v109 = &v85[v107];
    v110 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v109, 1, v110))
    {
      v111 = sub_23F6916B8(&qword_256EA8008);
      memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v108 = *(_QWORD *)v109;
      *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
      v112 = *(int *)(v110 + 24);
      v113 = &v108[v112];
      v221 = &v109[v112];
      v114 = sub_23FB2D718();
      v115 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v115(v113, v221, v114);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v108, 0, 1, v110);
    }
    v116 = v86[7];
    v117 = &v84[v116];
    v118 = &v85[v116];
    *(_QWORD *)v117 = *(_QWORD *)v118;
    *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
    v119 = v86[8];
    v120 = &v84[v119];
    v121 = &v85[v119];
    *(_QWORD *)v120 = *(_QWORD *)v121;
    *((_QWORD *)v120 + 1) = *((_QWORD *)v121 + 1);
    v84[v86[9]] = v85[v86[9]];
    v84[v86[10]] = v85[v86[10]];
    v122 = v86[11];
    v123 = &v84[v122];
    v124 = &v85[v122];
    v125 = sub_23FB2D718();
    v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v126(v123, v124, v125);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v84, 0, 1, (uint64_t)v86);
    goto LABEL_63;
  }
LABEL_44:
  v94 = sub_23F6916B8(&qword_256EA7E60);
  memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
LABEL_64:
  v149 = *(int *)(v9 + 24);
  v150 = &v7[v149];
  v151 = &v8[v149];
  v152 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 24))(v150, v151, v152);
LABEL_65:
  a3 = v231;
  v4 = v232;
LABEL_66:
  v153 = a3[7];
  v154 = (_QWORD *)((char *)v5 + v153);
  v155 = (_QWORD *)((char *)v4 + v153);
  v156 = type metadata accessor for TranscriptProtoStatementID(0);
  v157 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v154, 1, v156);
  v158 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v155, 1, v156);
  if (v157)
  {
    if (!v158)
    {
      *(_DWORD *)v154 = *(_DWORD *)v155;
      v154[1] = v155[1];
      v154[2] = v155[2];
      v159 = *(int *)(v156 + 24);
      v160 = (char *)v154 + v159;
      v161 = (char *)v155 + v159;
      v162 = sub_23FB2D718();
      v163 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
      swift_bridgeObjectRetain();
      v163(v160, v161, v162);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v154, 0, 1, v156);
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  if (v158)
  {
    sub_23F93DADC((uint64_t)v154, type metadata accessor for TranscriptProtoStatementID);
LABEL_71:
    v164 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    goto LABEL_72;
  }
  *(_DWORD *)v154 = *(_DWORD *)v155;
  v154[1] = v155[1];
  v154[2] = v155[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v192 = *(int *)(v156 + 24);
  v193 = (char *)v154 + v192;
  v194 = (char *)v155 + v192;
  v195 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 24))(v193, v194, v195);
LABEL_72:
  v165 = a3[8];
  v166 = (_QWORD *)((char *)v5 + v165);
  v167 = (_QWORD *)((char *)v4 + v165);
  v168 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5 + v165, 1, v156);
  v169 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v167, 1, v156);
  if (v168)
  {
    if (!v169)
    {
      *(_DWORD *)v166 = *(_DWORD *)v167;
      v166[1] = v167[1];
      v166[2] = v167[2];
      v170 = *(int *)(v156 + 24);
      v171 = (char *)v166 + v170;
      v172 = (char *)v167 + v170;
      v173 = sub_23FB2D718();
      v174 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16);
      swift_bridgeObjectRetain();
      v174(v171, v172, v173);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v166, 0, 1, v156);
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  if (v169)
  {
    sub_23F93DADC((uint64_t)v166, type metadata accessor for TranscriptProtoStatementID);
LABEL_77:
    v175 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
    goto LABEL_78;
  }
  *(_DWORD *)v166 = *(_DWORD *)v167;
  v166[1] = v167[1];
  v166[2] = v167[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v196 = *(int *)(v156 + 24);
  v197 = (char *)v166 + v196;
  v198 = (char *)v167 + v196;
  v199 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 24))(v197, v198, v199);
LABEL_78:
  v176 = a3[9];
  v177 = (_QWORD *)((char *)v5 + v176);
  v178 = (_QWORD *)((char *)v4 + v176);
  v179 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5 + v176, 1, v156);
  v180 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v178, 1, v156);
  if (!v179)
  {
    if (!v180)
    {
      *(_DWORD *)v177 = *(_DWORD *)v178;
      v177[1] = v178[1];
      v177[2] = v178[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v200 = *(int *)(v156 + 24);
      v201 = (char *)v177 + v200;
      v202 = (char *)v178 + v200;
      v203 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 24))(v201, v202, v203);
      goto LABEL_84;
    }
    sub_23F93DADC((uint64_t)v177, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_83;
  }
  if (v180)
  {
LABEL_83:
    v186 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
    goto LABEL_84;
  }
  *(_DWORD *)v177 = *(_DWORD *)v178;
  v177[1] = v178[1];
  v177[2] = v178[2];
  v181 = *(int *)(v156 + 24);
  v182 = (char *)v177 + v181;
  v183 = (char *)v178 + v181;
  v184 = sub_23FB2D718();
  v185 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
  swift_bridgeObjectRetain();
  v185(v182, v183, v184);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v177, 0, 1, v156);
LABEL_84:
  v187 = a3[10];
  v188 = (char *)v5 + v187;
  v189 = (char *)v4 + v187;
  v190 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 24))(v188, v189, v190);
  return v5;
}

_OWORD *initializeWithTake for TranscriptProtoStatementResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  _DWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _DWORD *v65;
  _DWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  _DWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v85;
  char *v86;
  char *__src;
  char *v88;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA8638);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v14))
      {
        v16 = (char *)&loc_23FA09834 + 4 * byte_23FB8B152[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v15 = sub_23F6916B8(&qword_256EA7FF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      v17 = *(int *)(v12 + 20);
      v18 = &v8[v17];
      v19 = v9;
      v20 = &v9[v17];
      v21 = sub_23FB2D718();
      v22 = v20;
      v9 = v19;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v22, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v12);
    }
    v23 = v10;
    v24 = *(int *)(v10 + 20);
    v25 = &v8[v24];
    v26 = &v9[v24];
    v27 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, (uint64_t)v27))
    {
      v28 = sub_23F6916B8(&qword_256EA7E60);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      __src = v9;
      v88 = v8;
      *(_QWORD *)v25 = *(_QWORD *)v26;
      v29 = v27[5];
      v30 = &v25[v29];
      v31 = &v26[v29];
      v32 = type metadata accessor for TranscriptProtoResponseDialog(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v32))
      {
        v33 = sub_23F6916B8(&qword_256EA8000);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v34 = *((_OWORD *)v31 + 1);
        *(_OWORD *)v30 = *(_OWORD *)v31;
        *((_OWORD *)v30 + 1) = v34;
        v35 = *((_OWORD *)v31 + 3);
        *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
        *((_OWORD *)v30 + 3) = v35;
        v36 = *(int *)(v32 + 32);
        v85 = &v30[v36];
        v37 = &v31[v36];
        v38 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v85, v37, v38);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v32);
      }
      v39 = v27[6];
      v40 = &v25[v39];
      v41 = &v26[v39];
      v42 = type metadata accessor for TranscriptProtoResponseVisual(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v42))
      {
        v43 = sub_23F6916B8(&qword_256EA8008);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
        v44 = *(int *)(v42 + 24);
        v86 = &v40[v44];
        v45 = &v41[v44];
        v46 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v86, v45, v46);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v42);
      }
      *(_OWORD *)&v25[v27[7]] = *(_OWORD *)&v26[v27[7]];
      *(_OWORD *)&v25[v27[8]] = *(_OWORD *)&v26[v27[8]];
      v25[v27[9]] = v26[v27[9]];
      v25[v27[10]] = v26[v27[10]];
      v47 = v27[11];
      v48 = &v25[v47];
      v49 = &v26[v47];
      v50 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
      v9 = __src;
      v8 = v88;
    }
    v51 = *(int *)(v23 + 24);
    v52 = &v8[v51];
    v53 = &v9[v51];
    v54 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v23);
  }
  v55 = a3[7];
  v56 = (_DWORD *)((char *)a1 + v55);
  v57 = (_DWORD *)((char *)a2 + v55);
  v58 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v57, 1, v58))
  {
    v59 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    *v56 = *v57;
    *(_OWORD *)(v56 + 2) = *(_OWORD *)(v57 + 2);
    v60 = *(int *)(v58 + 24);
    v61 = (char *)v56 + v60;
    v62 = (char *)v57 + v60;
    v63 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v56, 0, 1, v58);
  }
  v64 = a3[8];
  v65 = (_DWORD *)((char *)a1 + v64);
  v66 = (_DWORD *)((char *)a2 + v64);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v64, 1, v58))
  {
    v67 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    *v65 = *v66;
    *(_OWORD *)(v65 + 2) = *(_OWORD *)(v66 + 2);
    v68 = *(int *)(v58 + 24);
    v69 = (char *)v65 + v68;
    v70 = (char *)v66 + v68;
    v71 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v65, 0, 1, v58);
  }
  v72 = a3[9];
  v73 = (_DWORD *)((char *)a1 + v72);
  v74 = (_DWORD *)((char *)a2 + v72);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v72, 1, v58))
  {
    v75 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    *v73 = *v74;
    *(_OWORD *)(v73 + 2) = *(_OWORD *)(v74 + 2);
    v76 = *(int *)(v58 + 24);
    v77 = (char *)v73 + v76;
    v78 = (char *)v74 + v76;
    v79 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v73, 0, 1, v58);
  }
  v80 = a3[10];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoStatementResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  int v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  int v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  int v101;
  int v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  int v133;
  int v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  int v162;
  int v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  int v172;
  int v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  char *__dst;
  char *__dsta;
  char *__dstb;
  int *v227;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (v13)
    {
      sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementResultPayload);
      goto LABEL_7;
    }
    v17 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v17);
    v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v17);
    v223 = v11;
    if (v18)
    {
      if (!v19)
      {
        v20 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v20))
        {
          v30 = (char *)&loc_23FA0A9A4 + 4 * word_23FB8B174[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v21 = sub_23F6916B8(&qword_256EA7FF8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v73 = *(int *)(v17 + 20);
        v74 = &v9[v73];
        v75 = v10;
        v76 = &v10[v73];
        v77 = sub_23FB2D718();
        v78 = v76;
        v10 = v75;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v74, v78, v77);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v17);
LABEL_38:
        v85 = *(int *)(v11 + 20);
        v86 = &v9[v85];
        v87 = &v10[v85];
        v88 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
        v89 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v86, 1, (uint64_t)v88);
        v90 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v87, 1, (uint64_t)v88);
        if (v89)
        {
          if (!v90)
          {
            v222 = v10;
            __dsta = v9;
            *(_QWORD *)v86 = *(_QWORD *)v87;
            v91 = v88[5];
            v92 = &v86[v91];
            v93 = &v87[v91];
            v94 = type metadata accessor for TranscriptProtoResponseDialog(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v93, 1, v94))
            {
              v95 = sub_23F6916B8(&qword_256EA8000);
              memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            }
            else
            {
              v109 = *((_OWORD *)v93 + 1);
              *(_OWORD *)v92 = *(_OWORD *)v93;
              *((_OWORD *)v92 + 1) = v109;
              v110 = *((_OWORD *)v93 + 3);
              *((_OWORD *)v92 + 2) = *((_OWORD *)v93 + 2);
              *((_OWORD *)v92 + 3) = v110;
              v111 = *(int *)(v94 + 32);
              v112 = &v92[v111];
              v113 = &v93[v111];
              v114 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v92, 0, 1, v94);
            }
            v115 = v88[6];
            v116 = &v86[v115];
            v117 = &v87[v115];
            v118 = type metadata accessor for TranscriptProtoResponseVisual(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v117, 1, v118))
            {
              v119 = sub_23F6916B8(&qword_256EA8008);
              memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v116 = *(_OWORD *)v117;
              v120 = *(int *)(v118 + 24);
              v121 = &v116[v120];
              v122 = &v117[v120];
              v123 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v116, 0, 1, v118);
            }
            *(_OWORD *)&v86[v88[7]] = *(_OWORD *)&v87[v88[7]];
            *(_OWORD *)&v86[v88[8]] = *(_OWORD *)&v87[v88[8]];
            v86[v88[9]] = v87[v88[9]];
            v86[v88[10]] = v87[v88[10]];
            v124 = v88[11];
            v125 = &v86[v124];
            v126 = &v87[v124];
            v127 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v86, 0, 1, (uint64_t)v88);
            v9 = __dsta;
            goto LABEL_63;
          }
LABEL_44:
          v96 = sub_23F6916B8(&qword_256EA7E60);
          memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
LABEL_64:
          v154 = *(int *)(v223 + 24);
          v155 = &v9[v154];
          v156 = &v10[v154];
          v157 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 40))(v155, v156, v157);
          goto LABEL_65;
        }
        if (v90)
        {
          sub_23F93DADC((uint64_t)v86, type metadata accessor for TranscriptProtoResponseManifest);
          goto LABEL_44;
        }
        v222 = v10;
        __dstb = v9;
        *(_QWORD *)v86 = *(_QWORD *)v87;
        swift_bridgeObjectRelease();
        v97 = v88[5];
        v98 = &v86[v97];
        v99 = &v87[v97];
        v100 = type metadata accessor for TranscriptProtoResponseDialog(0);
        v101 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v98, 1, v100);
        v102 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v99, 1, v100);
        if (v101)
        {
          if (!v102)
          {
            v103 = *((_OWORD *)v99 + 1);
            *(_OWORD *)v98 = *(_OWORD *)v99;
            *((_OWORD *)v98 + 1) = v103;
            v104 = *((_OWORD *)v99 + 3);
            *((_OWORD *)v98 + 2) = *((_OWORD *)v99 + 2);
            *((_OWORD *)v98 + 3) = v104;
            v105 = *(int *)(v100 + 32);
            v106 = &v98[v105];
            v107 = &v99[v105];
            v108 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v98, 0, 1, v100);
            goto LABEL_56;
          }
        }
        else
        {
          if (!v102)
          {
            v209 = *((_QWORD *)v99 + 1);
            *(_QWORD *)v98 = *(_QWORD *)v99;
            *((_QWORD *)v98 + 1) = v209;
            swift_bridgeObjectRelease();
            v210 = *((_QWORD *)v99 + 3);
            *((_QWORD *)v98 + 2) = *((_QWORD *)v99 + 2);
            *((_QWORD *)v98 + 3) = v210;
            swift_bridgeObjectRelease();
            v211 = *((_QWORD *)v99 + 5);
            *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
            *((_QWORD *)v98 + 5) = v211;
            swift_bridgeObjectRelease();
            v212 = *((_QWORD *)v99 + 7);
            *((_QWORD *)v98 + 6) = *((_QWORD *)v99 + 6);
            *((_QWORD *)v98 + 7) = v212;
            swift_bridgeObjectRelease();
            v213 = *(int *)(v100 + 32);
            v214 = &v98[v213];
            v215 = &v99[v213];
            v216 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 40))(v214, v215, v216);
LABEL_56:
            v129 = v88[6];
            v130 = &v86[v129];
            v131 = &v87[v129];
            v132 = type metadata accessor for TranscriptProtoResponseVisual(0);
            v133 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v130, 1, v132);
            v134 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v131, 1, v132);
            if (v133)
            {
              if (!v134)
              {
                *(_OWORD *)v130 = *(_OWORD *)v131;
                v135 = *(int *)(v132 + 24);
                v136 = &v130[v135];
                v137 = &v131[v135];
                v138 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v130, 0, 1, v132);
LABEL_62:
                v9 = __dstb;
                v140 = v88[7];
                v141 = &v86[v140];
                v142 = &v87[v140];
                v144 = *(_QWORD *)v142;
                v143 = *((_QWORD *)v142 + 1);
                *(_QWORD *)v141 = v144;
                *((_QWORD *)v141 + 1) = v143;
                swift_bridgeObjectRelease();
                v145 = v88[8];
                v146 = &v86[v145];
                v147 = &v87[v145];
                v149 = *(_QWORD *)v147;
                v148 = *((_QWORD *)v147 + 1);
                *(_QWORD *)v146 = v149;
                *((_QWORD *)v146 + 1) = v148;
                swift_bridgeObjectRelease();
                v86[v88[9]] = v87[v88[9]];
                v86[v88[10]] = v87[v88[10]];
                v150 = v88[11];
                v151 = &v86[v150];
                v152 = &v87[v150];
                v153 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 40))(v151, v152, v153);
LABEL_63:
                v10 = v222;
                goto LABEL_64;
              }
            }
            else
            {
              if (!v134)
              {
                *(_QWORD *)v130 = *(_QWORD *)v131;
                swift_bridgeObjectRelease();
                *((_QWORD *)v130 + 1) = *((_QWORD *)v131 + 1);
                swift_bridgeObjectRelease();
                v217 = *(int *)(v132 + 24);
                v218 = &v130[v217];
                v219 = &v131[v217];
                v220 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 40))(v218, v219, v220);
                goto LABEL_62;
              }
              sub_23F93DADC((uint64_t)v130, type metadata accessor for TranscriptProtoResponseVisual);
            }
            v139 = sub_23F6916B8(&qword_256EA8008);
            memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
            goto LABEL_62;
          }
          sub_23F93DADC((uint64_t)v98, type metadata accessor for TranscriptProtoResponseDialog);
        }
        v128 = sub_23F6916B8(&qword_256EA8000);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        goto LABEL_56;
      }
LABEL_16:
      v24 = sub_23F6916B8(&qword_256EA7E70);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      goto LABEL_38;
    }
    if (v19)
    {
      sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_16;
    }
    v26 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v27 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v26);
    v28 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v26);
    if (v27)
    {
      if (!v28)
      {
        v29 = (char *)&loc_23FA0A904 + 4 * word_23FB8B18A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v28)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v32 = (char *)&loc_23FA0ACC0 + 4 * word_23FB8B1A0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_37;
      }
      sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v31 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_37:
    v79 = *(int *)(v17 + 20);
    v80 = &v9[v79];
    v81 = v10;
    v82 = &v10[v79];
    v83 = sub_23FB2D718();
    v84 = v82;
    v10 = v81;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v80, v84, v83);
    goto LABEL_38;
  }
  if (v13)
  {
LABEL_7:
    v16 = sub_23F6916B8(&qword_256EA8638);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_65;
  }
  v14 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v227 = a3;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA7E70);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v22))
    {
      v25 = (char *)&loc_23FA0A82C + 4 * word_23FB8B15E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v23 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v33 = *(int *)(v14 + 20);
    v34 = &v9[v33];
    v35 = v10;
    v36 = &v10[v33];
    v37 = sub_23FB2D718();
    v38 = v36;
    v10 = v35;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v34, v38, v37);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v14);
  }
  v39 = v11;
  v40 = *(int *)(v11 + 20);
  v41 = &v9[v40];
  v42 = &v10[v40];
  v43 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, (uint64_t)v43))
  {
    v44 = sub_23F6916B8(&qword_256EA7E60);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v221 = v10;
    __dst = v9;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v45 = v43[5];
    v46 = &v41[v45];
    v47 = &v42[v45];
    v48 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v47, 1, v48))
    {
      v49 = sub_23F6916B8(&qword_256EA8000);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v50 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v50;
      v51 = *((_OWORD *)v47 + 3);
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
      *((_OWORD *)v46 + 3) = v51;
      v52 = *(int *)(v48 + 32);
      v53 = &v46[v52];
      v54 = &v47[v52];
      v55 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v46, 0, 1, v48);
    }
    v56 = v43[6];
    v57 = &v41[v56];
    v58 = &v42[v56];
    v59 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v58, 1, v59))
    {
      v60 = sub_23F6916B8(&qword_256EA8008);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v57 = *(_OWORD *)v58;
      v61 = *(int *)(v59 + 24);
      v62 = &v57[v61];
      v63 = &v58[v61];
      v64 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v57, 0, 1, v59);
    }
    *(_OWORD *)&v41[v43[7]] = *(_OWORD *)&v42[v43[7]];
    *(_OWORD *)&v41[v43[8]] = *(_OWORD *)&v42[v43[8]];
    v41[v43[9]] = v42[v43[9]];
    v41[v43[10]] = v42[v43[10]];
    v65 = v43[11];
    v66 = &v41[v65];
    v67 = &v42[v65];
    v68 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v41, 0, 1, (uint64_t)v43);
    v9 = __dst;
    v10 = v221;
  }
  v69 = *(int *)(v39 + 24);
  v70 = &v9[v69];
  v71 = &v10[v69];
  v72 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v70, v71, v72);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v39);
  a3 = v227;
LABEL_65:
  v158 = a3[7];
  v159 = (_QWORD *)((char *)a1 + v158);
  v160 = (_QWORD *)((char *)a2 + v158);
  v161 = type metadata accessor for TranscriptProtoStatementID(0);
  v162 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v159, 1, v161);
  v163 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v160, 1, v161);
  if (v162)
  {
    if (!v163)
    {
      *(_DWORD *)v159 = *(_DWORD *)v160;
      *(_OWORD *)(v159 + 1) = *(_OWORD *)(v160 + 1);
      v164 = *(int *)(v161 + 24);
      v165 = (char *)v159 + v164;
      v166 = (char *)v160 + v164;
      v167 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v165, v166, v167);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v159, 0, 1, v161);
      goto LABEL_71;
    }
    goto LABEL_70;
  }
  if (v163)
  {
    sub_23F93DADC((uint64_t)v159, type metadata accessor for TranscriptProtoStatementID);
LABEL_70:
    v168 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    goto LABEL_71;
  }
  *(_DWORD *)v159 = *(_DWORD *)v160;
  v194 = v160[2];
  v159[1] = v160[1];
  v159[2] = v194;
  swift_bridgeObjectRelease();
  v195 = *(int *)(v161 + 24);
  v196 = (char *)v159 + v195;
  v197 = (char *)v160 + v195;
  v198 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 40))(v196, v197, v198);
LABEL_71:
  v169 = a3[8];
  v170 = (_QWORD *)((char *)a1 + v169);
  v171 = (_QWORD *)((char *)a2 + v169);
  v172 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v169, 1, v161);
  v173 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v171, 1, v161);
  if (v172)
  {
    if (!v173)
    {
      *(_DWORD *)v170 = *(_DWORD *)v171;
      *(_OWORD *)(v170 + 1) = *(_OWORD *)(v171 + 1);
      v174 = *(int *)(v161 + 24);
      v175 = (char *)v170 + v174;
      v176 = (char *)v171 + v174;
      v177 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v170, 0, 1, v161);
      goto LABEL_77;
    }
    goto LABEL_76;
  }
  if (v173)
  {
    sub_23F93DADC((uint64_t)v170, type metadata accessor for TranscriptProtoStatementID);
LABEL_76:
    v178 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
    goto LABEL_77;
  }
  *(_DWORD *)v170 = *(_DWORD *)v171;
  v199 = v171[2];
  v170[1] = v171[1];
  v170[2] = v199;
  swift_bridgeObjectRelease();
  v200 = *(int *)(v161 + 24);
  v201 = (char *)v170 + v200;
  v202 = (char *)v171 + v200;
  v203 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 40))(v201, v202, v203);
LABEL_77:
  v179 = a3[9];
  v180 = (uint64_t)a1 + v179;
  v181 = (uint64_t)a2 + v179;
  v182 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v179, 1, v161);
  v183 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v181, 1, v161);
  if (!v182)
  {
    if (!v183)
    {
      *(_DWORD *)v180 = *(_DWORD *)v181;
      v204 = *(_QWORD *)(v181 + 16);
      *(_QWORD *)(v180 + 8) = *(_QWORD *)(v181 + 8);
      *(_QWORD *)(v180 + 16) = v204;
      swift_bridgeObjectRelease();
      v205 = *(int *)(v161 + 24);
      v206 = v180 + v205;
      v207 = v181 + v205;
      v208 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 40))(v206, v207, v208);
      goto LABEL_83;
    }
    sub_23F93DADC(v180, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_82;
  }
  if (v183)
  {
LABEL_82:
    v188 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v180, (const void *)v181, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    goto LABEL_83;
  }
  *(_DWORD *)v180 = *(_DWORD *)v181;
  *(_OWORD *)(v180 + 8) = *(_OWORD *)(v181 + 8);
  v184 = *(int *)(v161 + 24);
  v185 = v180 + v184;
  v186 = v181 + v184;
  v187 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v180, 0, 1, v161);
LABEL_83:
  v189 = a3[10];
  v190 = (char *)a1 + v189;
  v191 = (char *)a2 + v189;
  v192 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 40))(v190, v191, v192);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA0DC0C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AC8();
  if (v1)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA8638);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6916B8(&qword_256EA25E0);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0AFC();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3C38();
      }
    }
    v4 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA0DC90()
{
  unsigned int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F09B0();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = v0;
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA8638);
    sub_23F6F07EC();
    if (v2)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6916B8(&qword_256EA25E0);
      sub_23F6F07EC();
      if (v4)
      {
        sub_23F6F0BB8();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3C6C();
      }
    }
    v5 = sub_23F6F082C(v3);
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA0DD08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EB60A0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementResultPayload);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseGenerationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseGenerationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoCandidate(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _WORD *v14;
  _WORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[6];
    v14 = (_WORD *)((char *)v4 + v13);
    v15 = (_WORD *)((char *)a2 + v13);
    v16 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F6916B8(&qword_256EA8588);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[4] = v15[4];
      v18 = *(int *)(v16 + 20);
      v19 = (char *)v14 + v18;
      v20 = (char *)v15 + v18;
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v22 = a3[7];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25))
    {
      v26 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v27 = v24[2];
      v23[1] = v24[1];
      v23[2] = v27;
      v28 = *(int *)(v25 + 24);
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = sub_23FB2D718();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v29, v30, v31);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
    }
    v33 = a3[8];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoCandidate(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1 + a2[5];
  v5 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
  {
    v8 = v6 + *(int *)(v7 + 20);
    v9 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[7];
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 24);
    v13 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + a2[8];
  v15 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_BYTE *initializeWithCopy for TranscriptProtoCandidate(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA8588);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[4] = v13[4];
    v16 = *(int *)(v14 + 20);
    v17 = (char *)v12 + v16;
    v18 = (char *)v13 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v25 = v22[2];
    v21[1] = v22[1];
    v21[2] = v25;
    v26 = *(int *)(v23 + 24);
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v29 = sub_23FB2D718();
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v27, v28, v29);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoCandidate(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  _WORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      v20 = *(_QWORD *)v16;
      v15[4] = v16[4];
      *(_QWORD *)v15 = v20;
      v21 = *(int *)(v17 + 20);
      v22 = (char *)v15 + v21;
      v23 = (char *)v16 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoCandidatePromptStatus);
LABEL_12:
    v25 = sub_23F6916B8(&qword_256EA8588);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  v43 = *(_QWORD *)v16;
  v15[4] = v16[4];
  *(_QWORD *)v15 = v43;
  v44 = *(int *)(v17 + 20);
  v45 = (char *)v15 + v44;
  v46 = (char *)v16 + v44;
  v47 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
LABEL_13:
  v26 = a3[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = type metadata accessor for TranscriptProtoStatementID(0);
  v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v29);
  v31 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    if (!v31)
    {
      *(_DWORD *)v27 = *(_DWORD *)v28;
      v27[1] = v28[1];
      v27[2] = v28[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v48 = *(int *)(v29 + 24);
      v49 = (char *)v27 + v48;
      v50 = (char *)v28 + v48;
      v51 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
      goto LABEL_19;
    }
    sub_23F93DADC((uint64_t)v27, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v37 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v27 = *(_DWORD *)v28;
  v27[1] = v28[1];
  v27[2] = v28[2];
  v32 = *(int *)(v29 + 24);
  v33 = (char *)v27 + v32;
  v34 = (char *)v28 + v32;
  v35 = sub_23FB2D718();
  v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
  swift_bridgeObjectRetain();
  v36(v33, v34, v35);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_19:
  v38 = a3[8];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoCandidate(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA8588);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[4] = v13[4];
    v16 = *(int *)(v14 + 20);
    v17 = (char *)v12 + v16;
    v18 = (char *)v13 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
    v25 = *(int *)(v23 + 24);
    v26 = (char *)v21 + v25;
    v27 = (char *)v22 + v25;
    v28 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v29 = a3[8];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoCandidate(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  _WORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v15[4] = v16[4];
      v20 = *(int *)(v17 + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoCandidatePromptStatus);
LABEL_12:
    v24 = sub_23F6916B8(&qword_256EA8588);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[4] = v16[4];
  v41 = *(int *)(v17 + 20);
  v42 = (char *)v15 + v41;
  v43 = (char *)v16 + v41;
  v44 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
LABEL_13:
  v25 = a3[7];
  v26 = (uint64_t)&a1[v25];
  v27 = (uint64_t)&a2[v25];
  v28 = type metadata accessor for TranscriptProtoStatementID(0);
  v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v28);
  v30 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v27, 1, v28);
  if (!v29)
  {
    if (!v30)
    {
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v45 = *(_QWORD *)(v27 + 16);
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      *(_QWORD *)(v26 + 16) = v45;
      swift_bridgeObjectRelease();
      v46 = *(int *)(v28 + 24);
      v47 = v26 + v46;
      v48 = v27 + v46;
      v49 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
      goto LABEL_19;
    }
    sub_23F93DADC(v26, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if (v30)
  {
LABEL_18:
    v35 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v26, (const void *)v27, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v26 = *(_DWORD *)v27;
  *(_OWORD *)(v26 + 8) = *(_OWORD *)(v27 + 8);
  v31 = *(int *)(v28 + 24);
  v32 = v26 + v31;
  v33 = v27 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v26, 0, 1, v28);
LABEL_19:
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCandidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA0ECE8(uint64_t a1, int a2)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == 248)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2610);
    sub_23F6F07DC();
    if (v3)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA8588);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6916B8(&qword_256EA25E0);
        sub_23F6F07DC();
        if (v4)
        {
          sub_23F6F0AFC();
        }
        else
        {
          sub_23F6B53A4();
          sub_23FAC3340();
        }
      }
    }
    v5 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCandidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA0ED94()
{
  char v0;
  _BYTE *v1;
  int v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B6B7C();
  if (v2 == 248)
  {
    *v1 = v0 + 7;
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2610);
    sub_23F6F07EC();
    if (v4)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA8588);
      sub_23F6F07EC();
      if (v4)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6916B8(&qword_256EA25E0);
        sub_23F6F07EC();
        if (v5)
        {
          sub_23F6F0BB8();
        }
        else
        {
          sub_23F6B53A4();
          sub_23FAC335C();
        }
      }
    }
    v6 = sub_23F6F082C(v3);
    sub_23F6F07C4(v6, v7, v8, v9);
  }
}

void sub_23FA0EE2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB61E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidatePromptStatus);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  sub_23F877920();
  if ((v2 & 0x20000) != 0)
  {
    sub_23F876A58(*(_QWORD *)v1);
  }
  else
  {
    *(_QWORD *)v0 = *(_QWORD *)v1;
    *(_WORD *)(v0 + 8) = *(_WORD *)(v1 + 8);
    v3 = sub_23F6B53A4();
    sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  }
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v2 = sub_23F6B53A4();
  sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)a1 = v2;
  v3 = sub_23F6B53A4();
  sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport30TranscriptProtoPromptSelectionVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v2 = sub_23F6B53A4();
  sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCandidatePromptStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCandidatePromptStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata accessor for TranscriptProtoCandidatePromptStatusEnum()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoClientAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    v11 = *(int *)(a3 + 36);
    __dst = (uint64_t *)((char *)a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    a1[6] = a2[6];
    a1[7] = v10;
    v13 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)__dst = *(_DWORD *)v12;
      v16 = v12[2];
      __dst[1] = v12[1];
      __dst[2] = v16;
      v17 = *(int *)(v13 + 24);
      v18 = (char *)__dst + v17;
      v19 = (char *)v12 + v17;
      v20 = sub_23FB2D718();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v13);
    }
    v22 = *(int *)(a3 + 40);
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoClientAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 40);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = *(int *)(a3 + 36);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  a1[6] = a2[6];
  a1[7] = v8;
  v12 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v14 = v11[2];
    v10[1] = v11[1];
    v10[2] = v14;
    v15 = *(int *)(v12 + 24);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_23FB2D718();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
  }
  v20 = *(int *)(a3 + 40);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 40);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoClientAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 36);
  v9 = (_DWORD *)((char *)a1 + v8);
  v10 = (_DWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    *(_OWORD *)(v9 + 2) = *(_OWORD *)(v10 + 2);
    v13 = *(int *)(v11 + 24);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v17 = *(int *)(a3 + 40);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoClientAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 36);
  v10 = (uint64_t)a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = type metadata accessor for TranscriptProtoStatementID(0);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v12);
  v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12);
  if (!v13)
  {
    if (!v14)
    {
      *(_DWORD *)v10 = *(_DWORD *)v11;
      v25 = *(_QWORD *)(v11 + 16);
      *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
      *(_QWORD *)(v10 + 16) = v25;
      swift_bridgeObjectRelease();
      v26 = *(int *)(v12 + 24);
      v27 = v10 + v26;
      v28 = v11 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_23F93DADC(v10, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v10, (const void *)v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v10 = *(_DWORD *)v11;
  *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
  v15 = *(int *)(v12 + 24);
  v16 = v10 + v15;
  v17 = v11 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v10, 0, 1, v12);
LABEL_7:
  v20 = *(int *)(a3 + 40);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA0F9F8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23FAC3508();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3C38();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA0FA60()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA25E0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23FAC3534();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3C6C();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FA0FAB8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoShimParameterResolution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2688);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        v10 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
        v11 = *(int *)(v10 + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23FB2EB1C();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
        {
          v15 = sub_23F6916B8(&qword_256EA2610);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
        }
        v17 = *(int *)(v10 + 24);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      }
      else
      {
        v16 = sub_23FB2EB1C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v21 = *(int *)(a3 + 20);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoShimParameterResolution(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v6 = a1 + *(int *)(v5 + 20);
      v7 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = a1 + *(int *)(v5 + 24);
      v9 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    else
    {
      v10 = sub_23FB2EB1C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    }
  }
  v11 = a1 + *(int *)(a2 + 20);
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *initializeWithCopy for TranscriptProtoShimParameterResolution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v8 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v9 = *(int *)(v8 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
      }
      v15 = *(int *)(v8 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      v14 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoShimParameterResolution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        v9 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
        v10 = *(int *)(v9 + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2EB1C();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
        {
          v14 = sub_23F6916B8(&qword_256EA2610);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
        }
        v23 = *(int *)(v9 + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      }
      else
      {
        v22 = sub_23FB2EB1C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_8:
    v15 = sub_23F6916B8(&qword_256EA2688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v16 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v17 = *(int *)(v16 + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v28 = *(int *)(v16 + 24);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      v27 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  v32 = *(int *)(a3 + 20);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoShimParameterResolution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v8 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v9 = *(int *)(v8 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
      }
      v15 = *(int *)(v8 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      v14 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoShimParameterResolution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        v9 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
        v10 = *(int *)(v9 + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2EB1C();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
        {
          v14 = sub_23F6916B8(&qword_256EA2610);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
        }
        v23 = *(int *)(v9 + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      }
      else
      {
        v22 = sub_23FB2EB1C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_21;
    }
LABEL_8:
    v15 = sub_23F6916B8(&qword_256EA2688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_21;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v16 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v17 = *(int *)(v16 + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
      }
      v28 = *(int *)(v16 + 24);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    }
    else
    {
      v27 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(a1, a2, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  v32 = *(int *)(a3 + 20);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoShimParameterResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA108CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA2688);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoShimParameterResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA108E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA2688);
}

void sub_23FA108F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB63C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoShimParameterResolutionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v7 = *(int *)(v6 + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
      {
        v11 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      }
      v14 = *(int *)(v6 + 24);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      v13 = sub_23FB2EB1C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoShimParameterResolutionEnum(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    v3 = a1 + *(int *)(v2 + 20);
    v4 = sub_23FB2EB1C();
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v3, 1, v4))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    a1 += *(int *)(v2 + 24);
    v5 = sub_23FB2D718();
  }
  else
  {
    v5 = sub_23FB2EB1C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoShimParameterResolutionEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    v5 = *(int *)(v4 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FB2EB1C();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v8);
    }
    v11 = *(int *)(v4 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    v10 = sub_23FB2EB1C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoShimParameterResolutionEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v5 = *(int *)(v4 + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8))
      {
        v9 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v8);
      }
      v11 = *(int *)(v4 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      v10 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoShimParameterResolutionEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    v5 = *(int *)(v4 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v8);
    }
    v11 = *(int *)(v4 + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  }
  else
  {
    v10 = sub_23FB2EB1C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoShimParameterResolutionEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
      v5 = *(int *)(v4 + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v8))
      {
        v9 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v6, 0, 1, v8);
      }
      v11 = *(int *)(v4 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    }
    else
    {
      v10 = sub_23FB2EB1C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23FA110B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA1BAD0(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEB95B0], (void (*)(uint64_t))type metadata accessor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUnresolvedParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA110EC()
{
  sub_23FA99C8C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUnresolvedParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA11104()
{
  sub_23FA99CF4();
}

void sub_23FA11110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, MEMORY[0x24BEE0158] + 64, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoClientCustom(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_23F6D1E20(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[2];
    v10 = a2[3];
    sub_23F6D1E20(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = *(int *)(a3 + 28);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoClientCustom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  sub_23F6BC34C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *initializeWithCopy for TranscriptProtoClientCustom(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v6 = *a2;
  v7 = a2[1];
  sub_23F6D1E20(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[2];
  v9 = a2[3];
  sub_23F6D1E20(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  v10 = a2[5];
  a1[4] = a2[4];
  a1[5] = v10;
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2D718();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoClientCustom(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_23F6D1E20(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_23F6BC34C(v8, v9);
  v10 = a2[2];
  v11 = a2[3];
  sub_23F6D1E20(v10, v11);
  v12 = a1[2];
  v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_23F6BC34C(v12, v13);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 28);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t *assignWithTake for TranscriptProtoClientCustom(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23F6BC34C(v6, v7);
  v8 = a1[2];
  v9 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_23F6BC34C(v8, v9);
  v10 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientCustom()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA11454()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 40));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 28));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientCustom()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA114A8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F0850();
  if (v3)
  {
    *(_QWORD *)(v1 + 40) = (v0 - 1);
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 28));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA114EC()
{
  sub_23FAC17B0();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwCP_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  sub_23F6D3A90();
  v2 = sub_23FAC362C(v0, v1);
  if ((v4 & 0x20000) != 0)
  {
    sub_23F7B0BE8();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 16);
    v2[1] = *(_QWORD *)(v3 + 8);
    v2[2] = v5;
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F6B6254();
    sub_23F876FE4();
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC3590();
  sub_23FAC39B4();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwcp_0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F6D3A90();
  v1 = v0[1];
  *v2 = *v0;
  v2[1] = v1;
  v2[2] = v0[2];
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F6B6254();
  sub_23F876FE4();
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC312C(a1, a2);
  sub_23F6B5908();
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
  sub_23FAC3C00();
  sub_23F6B5908();
  v5 = v4 + *(int *)(v2 + 24);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoToolDisambiguationVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FAC3110(a1, a2);
  v5 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v4 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = v4 + *(int *)(v2 + 24);
  v7 = sub_23F6B53A4();
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDecompositionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDecompositionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionParameterContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v10 = *(_DWORD *)v11;
      v15 = v11[2];
      v10[1] = v11[1];
      v10[2] = v15;
      v16 = *(int *)(v12 + 24);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_23FB2D718();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v21 = *(int *)(a3 + 28);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionParameterContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoActionParameterContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v13 = v10[2];
    v9[1] = v10[1];
    v9[2] = v13;
    v14 = *(int *)(v11 + 24);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_23FB2D718();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionParameterContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionParameterContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
    v12 = *(int *)(v10 + 24);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v16 = *(int *)(a3 + 28);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoActionParameterContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (uint64_t)a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v24 = *(_QWORD *)(v10 + 16);
      *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
      *(_QWORD *)(v9 + 16) = v24;
      swift_bridgeObjectRelease();
      v25 = *(int *)(v11 + 24);
      v26 = v9 + v25;
      v27 = v10 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_23F93DADC(v9, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v9, (const void *)v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  v14 = *(int *)(v11 + 24);
  v15 = v9 + v14;
  v16 = v10 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v9, 0, 1, v11);
LABEL_7:
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionParameterContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA11F14()
{
  sub_23FAC12F4();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionParameterContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA11F2C()
{
  sub_23FAC135C();
}

void sub_23FA11F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)&unk_23FB8EBA8, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoIntelligenceFlowError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2D718();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s30IntelligenceFlowPlannerSupport46TranscriptProtoRequestPrescribedPlanSearchToolVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC315C();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

_QWORD *initializeWithCopy for TranscriptProtoIntelligenceFlowError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoIntelligenceFlowError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoIntelligenceFlowError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIntelligenceFlowError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIntelligenceFlowError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA121B4()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23FA12290 + 4 * byte_23FB8B1B6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA8668);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        goto LABEL_17;
      case 1u:
        v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v6)&& swift_getEnumCaseMultiPayload() <= 2)
        {
          swift_bridgeObjectRelease();
          v7 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
          v8 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        }
        v9 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
        goto LABEL_16;
      case 2u:
        v10 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v10))
        {
          v11 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v11))
          {
            swift_bridgeObjectRelease();
            v12 = a1 + *(int *)(v11 + 24);
            v13 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
          }
        }
        v9 = type metadata accessor for TranscriptProtoPlannerError(0);
        goto LABEL_16;
      case 3u:
        v14 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v14))
        {
          v15 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v15))
          {
            swift_bridgeObjectRelease();
            v16 = a1 + *(int *)(v15 + 24);
            v17 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          }
        }
        v9 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_16:
        v5 = *(int *)(v9 + 20);
LABEL_17:
        v18 = a1 + v5;
        v19 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        break;
      default:
        break;
    }
  }
  v20 = a1 + *(int *)(a2 + 20);
  v21 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

char *initializeWithCopy for TranscriptProtoSessionError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA129A8 + 4 * byte_23FB8B1BE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA8668);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoSessionError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA12E7C + 4 * byte_23FB8B1C2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionErrorEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA8668);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v11 = (char *)&loc_23FA12F5C + 4 * byte_23FB8B1C6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoSessionError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA137FC + 4 * byte_23FB8B1CA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA8668);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoSessionError(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA13BEC + 4 * byte_23FB8B1CE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionErrorEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA8668);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v11 = (char *)&loc_23FA13C84 + 4 * byte_23FB8B1D2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSessionError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA14380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA8668);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSessionError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA14398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA8668);
}

void sub_23FA143A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB67F8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionErrorEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoSessionErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA14414 + 4 * byte_23FB8B1D6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoSessionErrorEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      goto LABEL_16;
    case 1:
      v4 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4)&& swift_getEnumCaseMultiPayload() <= 2)
      {
        swift_bridgeObjectRelease();
        v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
        v6 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      }
      v7 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
      goto LABEL_15;
    case 2:
      v8 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v8))
      {
        v9 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v9))
        {
          swift_bridgeObjectRelease();
          v10 = a1 + *(int *)(v9 + 24);
          v11 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        }
      }
      v7 = type metadata accessor for TranscriptProtoPlannerError(0);
      goto LABEL_15;
    case 3:
      v12 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v12))
      {
        v13 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v13))
        {
          swift_bridgeObjectRelease();
          v14 = a1 + *(int *)(v13 + 24);
          v15 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        }
      }
      v7 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_15:
      v3 = *(int *)(v7 + 20);
LABEL_16:
      v16 = a1 + v3;
      v17 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoSessionErrorEnum()
{
  char *v0;

  v0 = (char *)sub_23FA14A68 + 4 * byte_23FB8B1DE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA14A68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v0[2] = v1[2];
  v3 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_23FB2D718();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoSessionErrorEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v2 = (char *)&loc_23FA14EC8 + 4 * byte_23FB8B1E2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoSessionErrorEnum()
{
  char *v0;

  v0 = (char *)sub_23FA15330 + 4 * byte_23FB8B1E6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FA15330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)v0 = *(_OWORD *)v1;
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  v2 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
  v3 = v0 + v2;
  v4 = v1 + v2;
  v5 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoSessionErrorEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v2 = (char *)&loc_23FA156B8 + 4 * byte_23FB8B1EA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23FA159D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA159FC(a1, a2, a3, type metadata accessor for TranscriptProtoIntelligenceFlowError, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionCoordinatorError, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlannerError, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExecutorError);
}

void sub_23FA159FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t), void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  sub_23F8776F0(a1, a2, a3, a4);
  if (v10 <= 0x3F)
  {
    v11 = sub_23FAC33EC();
    a5(v11);
    if (v12 <= 0x3F)
    {
      v13 = sub_23F8796A8();
      a6(v13);
      if (v14 <= 0x3F)
      {
        a7(319);
        if (v15 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          sub_23F6F0BFC();
        }
      }
    }
  }
  sub_23F7564F0();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionCoordinatorError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA84A8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      v11 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionCoordinatorError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4)&& swift_getEnumCaseMultiPayload() <= 2)
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for TranscriptProtoSessionCoordinatorError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA84A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSessionCoordinatorError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA84A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    goto LABEL_6;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    v20 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23FB2D718();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
  }
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoSessionCoordinatorError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA84A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v8 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSessionCoordinatorError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      swift_getEnumCaseMultiPayload();
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v9 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA84A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    goto LABEL_6;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v19 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSessionCoordinatorError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA164D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA84A8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSessionCoordinatorError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA164E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA84A8);
}

void sub_23FA164F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB6938, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2D718();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v4 = sub_23FB2D718();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoSessionCoordinatorErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  swift_getEnumCaseMultiPayload();
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FB2D718();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSessionCoordinatorErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_23FB2D718();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    v8(v5, v6, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TranscriptProtoSessionCoordinatorErrorEnum(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v4 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
    v5 = a1 + v4;
    v6 = a2 + v4;
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FA16A20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TranscriptProtoIntelligenceFlowError(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoExecutorError()
{
  sub_23FA16B98();
}

uint64_t destroy for TranscriptProtoExecutorError(uint64_t a1, uint64_t a2)
{
  return sub_23FA16C8C(a1, a2, type metadata accessor for TranscriptProtoExecutorErrorEnum);
}

void initializeWithCopy for TranscriptProtoExecutorError()
{
  sub_23FA16D18();
}

void assignWithCopy for TranscriptProtoExecutorError()
{
  sub_23FA16DF8();
}

void initializeWithTake for TranscriptProtoExecutorError()
{
  sub_23FA16FB4();
}

void assignWithTake for TranscriptProtoExecutorError()
{
  sub_23FA17088();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExecutorError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA16B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB1E10);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExecutorError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA16B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB1E10);
}

void sub_23FA16B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB6A78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExecutorErrorEnum);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExecutorErrorEnum()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExecutorErrorEnum()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA16B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA17720(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for TranscriptProtoIntelligenceFlowError);
}

void initializeBufferWithCopyOfBuffer for TranscriptProtoPlannerError()
{
  sub_23FA16B98();
}

void sub_23FA16B98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6B50E8();
  v2 = v1;
  sub_23F877920();
  if ((v7 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    v8 = sub_23F876A04(v3, v4, v5, v6);
    if (sub_23FAC2B44((uint64_t)v2))
    {
      v9 = sub_23F72E4BC();
      sub_23FAC2B80(*(_QWORD *)(v9 - 8));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
      if (sub_23FAC2D30((uint64_t)v2))
      {
        sub_23FAC2B80(*(_QWORD *)(v8 - 8));
      }
      else
      {
        v11 = v2[1];
        *v0 = *v2;
        v0[1] = v11;
        v0[2] = v2[2];
        v12 = *(int *)(v10 + 24);
        v13 = (uint64_t)v0 + v12;
        v14 = (uint64_t)v2 + v12;
        sub_23F6B53A4();
        sub_23FAC33AC();
        sub_23FAC2FE4(v13, v14);
        sub_23FAC2C6C((uint64_t)v0);
      }
      sub_23F6BC4AC((uint64_t)v0);
    }
    v15 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16));
  }
  sub_23F693DDC();
}

uint64_t destroy for TranscriptProtoPlannerError(uint64_t a1, uint64_t a2)
{
  return sub_23FA16C8C(a1, a2, type metadata accessor for TranscriptProtoPlannerErrorEnum);
}

uint64_t sub_23FA16C8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  v4 = sub_23F6B60B4(a1, a2, a3);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    if (!sub_23F7B0D30(a1))
    {
      swift_bridgeObjectRelease();
      v5 = sub_23F6B53A4();
      sub_23FAC2CE4(v5);
    }
  }
  sub_23F6B53A4();
  v6 = sub_23F87922C();
  return sub_23FAC2C30(v6, v7, v8);
}

void initializeWithCopy for TranscriptProtoPlannerError()
{
  sub_23FA16D18();
}

void sub_23FA16D18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6B50E8();
  v6 = sub_23FAC2DB8(v2, v3, v4, v5);
  if (sub_23FAC2B44((uint64_t)v1))
  {
    v7 = sub_23F72E4BC();
    sub_23FAC2B80(*(_QWORD *)(v7 - 8));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    if (sub_23FAC2D30((uint64_t)v1))
    {
      sub_23FAC2B80(*(_QWORD *)(v6 - 8));
    }
    else
    {
      v9 = v1[1];
      *v0 = *v1;
      v0[1] = v9;
      v0[2] = v1[2];
      v10 = *(int *)(v8 + 24);
      v11 = (uint64_t)v0 + v10;
      v12 = (uint64_t)v1 + v10;
      sub_23F6B53A4();
      sub_23FAC33AC();
      sub_23FAC2FE4(v11, v12);
      sub_23FAC2C6C((uint64_t)v0);
    }
    sub_23F6BC4AC((uint64_t)v0);
  }
  v13 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16));
  sub_23F693DDC();
}

void assignWithCopy for TranscriptProtoPlannerError()
{
  sub_23FA16DF8();
}

void sub_23FA16DF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6B50E8();
  v6 = sub_23FAC2DB8(v2, v3, v4, v5);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v0, 1, v6);
  v8 = sub_23FAC2B44((uint64_t)v1);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
      if (sub_23FAC2D30((uint64_t)v1))
      {
        sub_23FAC2B80(*(_QWORD *)(v6 - 8));
      }
      else
      {
        *v0 = *v1;
        v0[1] = v1[1];
        v0[2] = v1[2];
        v18 = *(int *)(v9 + 24);
        v19 = (uint64_t)v0 + v18;
        v20 = (uint64_t)v1 + v18;
        sub_23F6B53A4();
        sub_23FAC33AC();
        sub_23FAC2FE4(v19, v20);
        sub_23FAC2C6C((uint64_t)v0);
      }
      v14 = sub_23F7A1F60();
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FAC3730((uint64_t)v0);
LABEL_7:
    v10 = *(_QWORD *)(sub_23F72E4BC() - 8);
    goto LABEL_8;
  }
  v11 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v0, 1, v11);
  v13 = sub_23FAC2D30((uint64_t)v1);
  if (v12)
  {
    if (!(_DWORD)v13)
    {
      sub_23FAC38C4();
      sub_23F6B53A4();
      sub_23F6B5F1C();
      sub_23FAC2F6C();
      v14 = sub_23FAC3E4C();
LABEL_14:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v14, v15, v16, v17);
      goto LABEL_15;
    }
  }
  else
  {
    if (!(_DWORD)v13)
    {
      *v0 = *v1;
      sub_23FAC3418(v1[1]);
      sub_23F6B5908();
      v0[2] = v1[2];
      v22 = sub_23F6B53A4();
      sub_23FAC2D80(v22);
      goto LABEL_15;
    }
    sub_23FAC2BE4(v13, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  v10 = *(_QWORD *)(v6 - 8);
LABEL_8:
  sub_23FAC2B80(v10);
LABEL_15:
  v21 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24));
  sub_23F693DDC();
}

void initializeWithTake for TranscriptProtoPlannerError()
{
  sub_23FA16FB4();
}

void sub_23FA16FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6D3A90();
  v6 = sub_23FAC2DB8(v2, v3, v4, v5);
  if (sub_23FAC2B44(v1))
  {
    v7 = sub_23F72E4BC();
    sub_23FAC2B80(*(_QWORD *)(v7 - 8));
  }
  else
  {
    type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    if (sub_23FAC2D30(v1))
    {
      sub_23FAC2B80(*(_QWORD *)(v6 - 8));
    }
    else
    {
      *(_OWORD *)v0 = *(_OWORD *)v1;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
      v8 = sub_23F6B53A4();
      sub_23FAC3808(v8);
      sub_23FAC2C6C(v0);
    }
    sub_23F6BC4AC(v0);
  }
  v9 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
  sub_23F6B69E0();
}

void assignWithTake for TranscriptProtoPlannerError()
{
  sub_23FA17088();
}

void sub_23FA17088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23F6D3A90();
  v6 = sub_23FAC2DB8(v2, v3, v4, v5);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v6);
  v8 = sub_23FAC2B44(v1);
  if (v7)
  {
    if (!v8)
    {
      type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
      if (sub_23FAC2D30(v1))
      {
        sub_23FAC2B80(*(_QWORD *)(v6 - 8));
      }
      else
      {
        *(_OWORD *)v0 = *(_OWORD *)v1;
        *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
        v19 = sub_23F6B53A4();
        sub_23FAC3808(v19);
        sub_23FAC2C6C(v0);
      }
      v15 = sub_23F7A1F60();
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FAC3730(v0);
LABEL_7:
    v9 = *(_QWORD *)(sub_23F72E4BC() - 8);
    goto LABEL_8;
  }
  v10 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v0, 1, v10);
  v12 = sub_23FAC2D30(v1);
  if (v11)
  {
    if (!(_DWORD)v12)
    {
      *(_OWORD *)v0 = *(_OWORD *)v1;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
      sub_23F6B53A4();
      v13 = sub_23FAC3820();
      sub_23F6B563C(v13, v14);
      v15 = sub_23FAC3E4C();
LABEL_14:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v15, v16, v17, v18);
      goto LABEL_15;
    }
  }
  else
  {
    if (!(_DWORD)v12)
    {
      sub_23FAC3CD4();
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
      v21 = sub_23F6B53A4();
      sub_23FAC2D68(v21);
      goto LABEL_15;
    }
    sub_23FAC2BE4(v12, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  v9 = *(_QWORD *)(v6 - 8);
LABEL_8:
  sub_23FAC2B80(v9);
LABEL_15:
  v20 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlannerError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA17218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB1E28);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlannerError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA17230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB1E28);
}

void sub_23FA1723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB6B90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlannerErrorEnum);
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwCP_0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(_DWORD *)(v5 + 80) & 0x20000) != 0)
  {
    sub_23F876A58(*v0);
  }
  else
  {
    v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    v7 = sub_23FAC2EC8((uint64_t)v1, 1);
    if ((_DWORD)v7)
    {
      sub_23FAC39EC(v7, v8, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = v1[1];
      *v3 = *v1;
      v3[1] = v9;
      v3[2] = v1[2];
      v10 = *(int *)(v6 + 24);
      v11 = (uint64_t)v3 + v10;
      v12 = (uint64_t)v1 + v10;
      sub_23F6B53A4();
      sub_23FAC3384();
      sub_23FAC337C(v11, v12);
      sub_23F77DD6C((uint64_t)v3, 0);
    }
  }
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  if (sub_23FAC2EC8(a1, 1))
  {
    sub_23F694CC8();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23F6B53A4();
    v2 = sub_23F87922C();
    sub_23F8776C4(v2, v3, v4);
  }
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v7 = sub_23FAC2EC8((uint64_t)v3, 1);
  if ((_DWORD)v7)
  {
    sub_23FAC39EC(v7, v8, *(_QWORD *)(*(_QWORD *)(v1 - 8) + 64));
  }
  else
  {
    v9 = v3[1];
    *v5 = *v3;
    v5[1] = v9;
    v5[2] = v3[2];
    v10 = *(int *)(v6 + 24);
    v11 = (uint64_t)v5 + v10;
    v12 = (uint64_t)v3 + v10;
    sub_23F6B53A4();
    sub_23FAC3384();
    sub_23FAC337C(v11, v12);
    sub_23F77DD6C((uint64_t)v5, 0);
  }
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwca_0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v6);
  v8 = sub_23F7B0D30((uint64_t)v3);
  if (!v7)
  {
    if (!(_DWORD)v8)
    {
      *v5 = *v3;
      sub_23FAC3418(v3[1]);
      sub_23F6B5908();
      v5[2] = v3[2];
      v12 = sub_23F6B53A4();
      sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24));
      goto LABEL_7;
    }
    sub_23FAC2BE4(v8, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    goto LABEL_6;
  }
  if ((_DWORD)v8)
  {
LABEL_6:
    sub_23FAC2B80(*(_QWORD *)(v1 - 8));
    goto LABEL_7;
  }
  sub_23FAC38C4();
  v9 = *(int *)(v6 + 24);
  v10 = (uint64_t)v5 + v9;
  v11 = (uint64_t)v3 + v9;
  sub_23F6B53A4();
  sub_23FAC3384();
  sub_23FAC337C(v10, v11);
  sub_23F750B84((uint64_t)v5, 0);
LABEL_7:
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = sub_23FAC2EC8(a2, 1);
  if ((_DWORD)v6)
  {
    sub_23FAC39EC(v6, v7, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    sub_23F6B53A4();
    v8 = sub_23F78F478();
    v9(v8);
    sub_23F77DD6C(a1, 0);
  }
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport31TranscriptProtoPlannerErrorEnumOwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v6 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v6);
  v8 = sub_23F7B0D30(a2);
  if (!v7)
  {
    if (!(_DWORD)v8)
    {
      sub_23FAC3CD4();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v11 = sub_23F6B53A4();
      sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40));
      goto LABEL_7;
    }
    sub_23FAC2BE4(v8, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    goto LABEL_6;
  }
  if ((_DWORD)v8)
  {
LABEL_6:
    sub_23FAC2B80(*(_QWORD *)(a3 - 8));
    goto LABEL_7;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_23F6B53A4();
  v9 = sub_23FAC3820();
  sub_23F7B0990(v9, v10);
  sub_23F750B84(a1, 0);
LABEL_7:
  sub_23F6B5F7C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlannerErrorEnum()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA17644()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_23FAC3A6C();
  v1 = sub_23FAC3C28(v0);
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlannerErrorEnum()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA17688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FAC3A6C();
  v0 = sub_23F876A70();
  return sub_23F6F07C4(v0, v1, v2, v3);
}

uint64_t sub_23FA176B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v2);
}

uint64_t sub_23FA176E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 1, v4);
}

void sub_23FA17720(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v4;

  a4(319);
  if (v4 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    sub_23F6F0BFC();
  }
  sub_23F694CC8();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionOutcome()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionOutcome()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA17788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F70D618(v0, v1, v2, v3);
}

uint64_t type metadata accessor for TranscriptProtoActionOutcome(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EB6C98);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoActionRequirement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7FE0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_26:
      v42 = *(int *)(a3 + 20);
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      v45 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v17 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_25:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
          goto LABEL_26;
        }
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    v15 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EA7FD8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_23:
      v38 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      goto LABEL_24;
    }
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 1)
    {
      v28 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v28))
      {
        v29 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v30 = *(int *)(v28 + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v28);
      }
      v34 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      if (v21)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_22:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v15);
        goto LABEL_23;
      }
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      v23 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23FB2D718();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_22;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoActionRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))goto LABEL_17;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v7))
      {
        v8 = swift_getEnumCaseMultiPayload();
        if (v8 == 1)
        {
          v10 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v10))
          {
            v11 = a1 + *(int *)(v10 + 20);
            v12 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
          }
          v9 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
          goto LABEL_14;
        }
        if (!v8)
        {
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_14:
          v13 = a1 + *(int *)(v9 + 20);
          v14 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
      }
      v6 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
      goto LABEL_16;
    case 1:
      v6 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      goto LABEL_16;
    case 0:
      v6 = type metadata accessor for TranscriptProtoAppRequirement(0);
LABEL_16:
      v15 = a1 + *(int *)(v6 + 20);
      v16 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      break;
  }
LABEL_17:
  v17 = a1 + *(int *)(a2 + 20);
  v18 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

_QWORD *initializeWithCopy for TranscriptProtoActionRequirement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
    v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA7FD8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_21:
      v36 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      goto LABEL_22;
    }
    v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 1)
    {
      v26 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
      {
        v27 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v28 = *(int *)(v26 + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
      }
      v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      if (v19)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_20:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
        goto LABEL_21;
      }
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2D718();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  v7 = sub_23F6916B8(&qword_256EA7FE0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_24:
  v40 = *(int *)(a3 + 20);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionRequirement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;

  v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v22 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_42:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_49;
          }
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v10 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        }
LABEL_41:
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      }
      v20 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v20))
      {
        v21 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
LABEL_40:
        v56 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
        goto LABEL_41;
      }
      v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 1)
      {
        v44 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v44))
        {
          v45 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v48 = *(int *)(v44 + 20);
          v49 = (char *)a1 + v48;
          v50 = (char *)a2 + v48;
          v51 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v44);
        }
        v52 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
      }
      else
      {
        if (v32)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_39:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v20);
          goto LABEL_40;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_23FB2D718();
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2)
      goto LABEL_49;
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v15 = swift_getEnumCaseMultiPayload();
    if (v15 != 2)
    {
      if (v15 == 1)
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v28 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      }
      else
      {
        if (v15)
        {
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
        }
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      }
LABEL_48:
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    v26 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
    {
      v27 = sub_23F6916B8(&qword_256EA7FD8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_47:
      v68 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      v71 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
      goto LABEL_48;
    }
    v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 1)
    {
      v46 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v46))
      {
        v47 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v60 = *(int *)(v46 + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v46);
      }
      v64 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      v67 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
    }
    else
    {
      if (v38)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_46:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
        goto LABEL_47;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      v39 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      v42 = sub_23FB2D718();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v40, v41, v42);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_46;
  }
  sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionRequirementEnum);
LABEL_9:
  v14 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FE0) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v14 + 64));
LABEL_49:
  v72 = *(int *)(a3 + 20);
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoActionRequirement(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;

  v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      }
LABEL_22:
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
    v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA7FD8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_21:
      v34 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      goto LABEL_22;
    }
    v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 1)
    {
      v24 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v24))
      {
        v25 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v26 = *(int *)(v24 + 20);
        v27 = &a1[v26];
        v28 = &a2[v26];
        v29 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v24);
      }
      v30 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v31 = &a1[v30];
      v32 = &a2[v30];
      v33 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    }
    else
    {
      if (v19)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_20:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
        goto LABEL_21;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v20 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  v7 = sub_23F6916B8(&qword_256EA7FE0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_24:
  v38 = *(int *)(a3 + 20);
  v39 = &a1[v38];
  v40 = &a2[v38];
  v41 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoActionRequirement(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;

  v6 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          *a1 = *a2;
          v22 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
          v23 = &a1[v22];
          v24 = &a2[v22];
          v25 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_42:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
            goto LABEL_49;
          }
          *a1 = *a2;
          v10 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
          v11 = &a1[v10];
          v12 = &a2[v10];
          v13 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        }
LABEL_41:
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      }
      v20 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v20))
      {
        v21 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
LABEL_40:
        v54 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v55 = &a1[v54];
        v56 = &a2[v54];
        v57 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        goto LABEL_41;
      }
      v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 1)
      {
        v42 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v42))
        {
          v43 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v46 = *(int *)(v42 + 20);
          v47 = &a1[v46];
          v48 = &a2[v46];
          v49 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v42);
        }
        v50 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      }
      else
      {
        if (v32)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_39:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v20);
          goto LABEL_40;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_39;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2)
      goto LABEL_49;
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v15 = swift_getEnumCaseMultiPayload();
    if (v15 != 2)
    {
      if (v15 == 1)
      {
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v15)
        {
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
        }
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      }
LABEL_48:
      swift_storeEnumTagMultiPayload();
      goto LABEL_49;
    }
    v26 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
    {
      v27 = sub_23F6916B8(&qword_256EA7FD8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_47:
      v66 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
      v67 = &a1[v66];
      v68 = &a2[v66];
      v69 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
      goto LABEL_48;
    }
    v37 = swift_getEnumCaseMultiPayload();
    if (v37 == 1)
    {
      v44 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v44))
      {
        v45 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v58 = *(int *)(v44 + 20);
        v59 = &a1[v58];
        v60 = &a2[v58];
        v61 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v44);
      }
      v62 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v63 = &a1[v62];
      v64 = &a2[v62];
      v65 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
    }
    else
    {
      if (v37)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_46:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
        goto LABEL_47;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v38 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_46;
  }
  sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionRequirementEnum);
LABEL_9:
  v14 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FE0) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v14 + 64));
LABEL_49:
  v70 = *(int *)(a3 + 20);
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v73 - 8) + 40))(v71, v72, v73);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionRequirement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1912C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA7FE0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionRequirement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA19144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA7FE0);
}

void sub_23FA19150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB6D38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionRequirementEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionRequirementEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_21:
        v36 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_22;
      }
      v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1)
      {
        v26 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
        {
          v27 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v28 = *(int *)(v26 + 20);
          v29 = (char *)a1 + v28;
          v30 = (char *)a2 + v28;
          v31 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
        }
        v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      }
      else
      {
        if (v19)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_20:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
          goto LABEL_21;
        }
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_23FB2D718();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 1:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v15 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      goto LABEL_22;
    case 0:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v8 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t destroy for TranscriptProtoActionRequirementEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      v4 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v7))
          {
            v8 = a1 + *(int *)(v7 + 20);
            v9 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          }
          v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
          goto LABEL_14;
        }
        if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
          v6 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_14:
          v10 = a1 + *(int *)(v6 + 20);
          v11 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        }
      }
      v3 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
      goto LABEL_16;
    case 1:
      v3 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      goto LABEL_16;
    case 0:
      v3 = type metadata accessor for TranscriptProtoAppRequirement(0);
LABEL_16:
      v12 = a1 + *(int *)(v3 + 20);
      v13 = sub_23FB2D718();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoActionRequirementEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_19:
        v34 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
        goto LABEL_20;
      }
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        v24 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v24))
        {
          v25 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v26 = *(int *)(v24 + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v24);
        }
        v30 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_18:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_19;
        }
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        v19 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_23FB2D718();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    case 1:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_20;
    case 0:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionRequirementEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  if (a1 == a2)
    return a1;
  sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionRequirementEnum);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_20:
        v33 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_21;
      }
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        v23 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v23))
        {
          v24 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v25 = *(int *)(v23 + 20);
          v26 = (char *)a1 + v25;
          v27 = (char *)a2 + v25;
          v28 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v23);
        }
        v29 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_19:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_20;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_23FB2D718();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    case 1:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_21;
    case 0:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoActionRequirementEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_19:
        v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v33 = &a1[v32];
        v34 = &a2[v32];
        v35 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_20;
      }
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v22))
        {
          v23 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v24 = *(int *)(v22 + 20);
          v25 = &a1[v24];
          v26 = &a2[v24];
          v27 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v22);
        }
        v28 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_18:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_19;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    case 1:
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_20;
    case 0:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoActionRequirementEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;

  if (a1 == a2)
    return a1;
  sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionRequirementEnum);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v11 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA7FD8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_20:
        v32 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementMessage(0) + 20);
        v33 = &a1[v32];
        v34 = &a2[v32];
        v35 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_21;
      }
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v22))
        {
          v23 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v24 = *(int *)(v22 + 20);
          v25 = &a1[v24];
          v26 = &a2[v24];
          v27 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v22);
        }
        v28 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (v17)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_19:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
          goto LABEL_20;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_19;
    case 1:
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoPermissionRequirement(0) + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_21;
    case 0:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoAppRequirement(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_23FA1A214()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for TranscriptProtoAppRequirement(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoPermissionRequirement(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoSystemRequirementMessage(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemRequirementMessage(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7FD8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_15:
      v27 = *(int *)(a3 + 20);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v17))
      {
        v18 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v19 = *(int *)(v17 + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v17);
      }
      v23 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_14:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
        goto LABEL_15;
      }
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoSystemRequirementMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v7))
      {
        v8 = a1 + *(int *)(v7 + 20);
        v9 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      }
      v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
      goto LABEL_8;
    }
    if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_8:
      v10 = a1 + *(int *)(v6 + 20);
      v11 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
  }
  v12 = a1 + *(int *)(a2 + 20);
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemRequirementMessage(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v15))
      {
        v16 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v17 = *(int *)(v15 + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v15);
      }
      v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23FB2D718();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EA7FD8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_13:
  v25 = *(int *)(a3 + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemRequirementMessage(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v22))
        {
          v23 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v26 = *(int *)(v22 + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v22);
        }
        v30 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v10 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2D718();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      v16 = swift_getEnumCaseMultiPayload();
      if (v16 == 1)
      {
        v24 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v24))
        {
          v25 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v39 = *(int *)(v24 + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v24);
        }
        v43 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      }
      else
      {
        if (v16)
        {
          v15 = *(_QWORD *)(v6 - 8);
          goto LABEL_9;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v17 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  }
  v15 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FD8) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v15 + 64));
LABEL_24:
  v34 = *(int *)(a3 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemRequirementMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v15 = *(int *)(v13 + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
      }
      v19 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EA7FD8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_13:
  v23 = *(int *)(a3 + 20);
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemRequirementMessage(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v20 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v20))
        {
          v21 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v24 = *(int *)(v20 + 20);
          v25 = &a1[v24];
          v26 = &a2[v24];
          v27 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v20);
        }
        v28 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_24;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 1)
      {
        v22 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v22))
        {
          v23 = sub_23F6916B8(&qword_256EA7FD0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v37 = *(int *)(v22 + 20);
          v38 = &a1[v37];
          v39 = &a2[v37];
          v40 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v22);
        }
        v41 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      }
      else
      {
        if (v15)
        {
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_9;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  }
  v14 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FD8) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v14 + 64));
LABEL_24:
  v32 = *(int *)(a3 + 20);
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1B19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA7FD8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1B1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA7FD8);
}

void sub_23FA1B1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB6E78, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemRequirementMessageEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v15))
      {
        v16 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v17 = *(int *)(v15 + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v15);
      }
      v21 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemRequirementMessageEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
    {
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    v3 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  }
  v7 = a1 + *(int *)(v3 + 20);
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemRequirementMessageEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA7FD0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v15 = *(int *)(v13 + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v13);
    }
    v19 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemRequirementMessageEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v14 = *(int *)(v12 + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
      }
      v18 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2D718();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemRequirementMessageEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA7FD0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v13 = *(int *)(v11 + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
    }
    v17 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemRequirementMessageEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA7FD0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v13 = *(int *)(v11 + 20);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v11);
      }
      v17 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_23FA1BABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA1BAD0(a1, a2, a3, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

void sub_23FA1BAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_23F8776F0(a1, a2, a3, a4);
  if (v6 <= 0x3F)
  {
    v7 = sub_23FAC33EC();
    a5(v7);
    if (v8 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      sub_23F6F0BFC();
    }
  }
  sub_23F6F5A08();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementProtectedAppRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementProtectedAppRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7FD0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = *(int *)(v7 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v14 = *(int *)(a3 + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemRequirementAuthenticationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = a1 + *(int *)(v4 + 20);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_BYTE *initializeWithCopy for TranscriptProtoSystemRequirementAuthenticationRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7FD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoSystemRequirementAuthenticationRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v19 = *(int *)(v6 + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA7FD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v9 = *(int *)(v6 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemRequirementAuthenticationRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7FD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemRequirementAuthenticationRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      v19 = *(int *)(v6 + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA7FD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v9 = *(int *)(v6 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1C190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA7FD0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1C1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA7FD0);
}

void sub_23FA1C1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB7048, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA1C1E8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 253)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1C254()
{
  char v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FAC3B20();
  if (v3)
  {
    *v1 = v0 + 2;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 20));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA1C298()
{
  sub_23FABE678();
}

uint64_t _s30IntelligenceFlowPlannerSupport76TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnumOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FA1C2F0 + 4 * byte_23FB8B1F3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FA1C324 + 4 * byte_23FB8B1EE[v4]))();
}

uint64_t sub_23FA1C328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FA1C330);
  return result;
}

_BYTE *sub_23FA1C338(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FA1C340);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 1);
}

void type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelEnum()
{
  sub_23F694C70();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAppRequirement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA1C370(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 252)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAppRequirement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1C3DC()
{
  char v0;
  _BYTE *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B6B7C();
  if (v3 == 252)
  {
    *v1 = v0 + 3;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 20));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA1C424()
{
  sub_23FABE678();
}

void type metadata accessor for TranscriptProtoAppRequirementEnum()
{
  sub_23F694C70();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoAppRequirementVwca_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = sub_23F6B53A4();
  sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoAppRequirementVwta_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = sub_23F6B53A4();
  sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPermissionRequirement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA1C4D8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 247)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPermissionRequirement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1C544()
{
  char v0;
  _BYTE *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B6B7C();
  if (v3 == 247)
  {
    *v1 = v0 + 8;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 20));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA1C58C()
{
  sub_23FABE678();
}

uint64_t _s30IntelligenceFlowPlannerSupport40TranscriptProtoPermissionRequirementEnumOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23FA1C5E4 + 4 * byte_23FB8B1FD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23FA1C618 + 4 * byte_23FB8B1F8[v4]))();
}

uint64_t sub_23FA1C61C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FA1C624);
  return result;
}

_BYTE *sub_23FA1C62C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FA1C634);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 7);
}

void type metadata accessor for TranscriptProtoPermissionRequirementEnum()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailure(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v27;
  char *v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7FF0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
      {
        v11 = sub_23F6916B8(&qword_256EA7FE8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v12 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v12))
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        }
        else
        {
          v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          v14 = a2[3];
          a1[2] = a2[2];
          a1[3] = v14;
          a1[4] = a2[4];
          v15 = *(int *)(v12 + 28);
          v27 = (char *)a2 + v15;
          v28 = (char *)a1 + v15;
          v16 = sub_23FB2D718();
          v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v17(v28, v27, v16);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v12);
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v10);
      }
      v18 = *(int *)(v7 + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v22 = *(int *)(a3 + 20);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
      v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v6))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = a1 + *(int *)(v6 + 28);
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      }
    }
    v9 = a1 + *(int *)(v4 + 20);
    v10 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + *(int *)(a2 + 20);
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *initializeWithCopy for TranscriptProtoActionFailure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7FF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA7FE8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        a1[4] = a2[4];
        v13 = *(int *)(v10 + 28);
        v25 = (char *)a2 + v13;
        v26 = (char *)a1 + v13;
        v14 = sub_23FB2D718();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v26, v25, v14);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v10);
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v16 = *(int *)(v6 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionFailure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureFailure);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v15))
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          v35 = *(int *)(v15 + 28);
          v52 = (char *)a2 + v35;
          v55 = (char *)a1 + v35;
          v36 = sub_23FB2D718();
          v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v37(v55, v52, v36);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v15);
        }
        v32 = (uint64_t)a1;
        v33 = 1;
        v34 = v12;
        goto LABEL_26;
      }
    }
    else
    {
      if (!v14)
      {
        v25 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        v26 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 16, v25);
        v27 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v25);
        if (v26)
        {
          if (!v27)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            v28 = *(int *)(v25 + 28);
            v54 = (char *)a1 + v28;
            v29 = (char *)a2 + v28;
            v30 = sub_23FB2D718();
            v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v31(v54, v29, v30);
            v32 = (uint64_t)a1;
            v33 = 16;
            v34 = v25;
LABEL_26:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v32, 0, v33, v34);
            goto LABEL_27;
          }
        }
        else
        {
          if (!v27)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            a1[2] = a2[2];
            a1[3] = a2[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            a1[4] = a2[4];
            v47 = *(int *)(v25 + 28);
            v48 = (char *)a1 + v47;
            v49 = (char *)a2 + v47;
            v50 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
            goto LABEL_27;
          }
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
        }
        v17 = *(_QWORD *)(v12 - 8);
LABEL_17:
        memcpy(a1, a2, *(_QWORD *)(v17 + 64));
LABEL_27:
        v38 = *(int *)(v6 + 20);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
        goto LABEL_28;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    }
    v17 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FE8) - 8);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA7FF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_28;
  }
  v9 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA7FE8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v16))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      v18 = *(int *)(v16 + 28);
      v51 = (char *)a2 + v18;
      v53 = (char *)a1 + v18;
      v19 = sub_23FB2D718();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v53, v51, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v16);
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v21 = *(int *)(v6 + 20);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_28:
  v42 = *(int *)(a3 + 20);
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7FF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA7FE8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v12 = *(int *)(v10 + 28);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v10);
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v16 = *(int *)(v6 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoActionFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureFailure);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v15))
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v38 = a2[1];
          *a1 = *a2;
          a1[1] = v38;
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          v39 = *(int *)(v15 + 28);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v15);
        }
        v35 = (uint64_t)a1;
        v36 = 1;
        v37 = v12;
        goto LABEL_26;
      }
    }
    else
    {
      if (!v14)
      {
        v27 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        v28 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 16, v27);
        v29 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v27);
        if (v28)
        {
          if (!v29)
          {
            v30 = a2[1];
            *a1 = *a2;
            a1[1] = v30;
            *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
            v31 = *(int *)(v27 + 28);
            v32 = (char *)a1 + v31;
            v33 = (char *)a2 + v31;
            v34 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
            v35 = (uint64_t)a1;
            v36 = 16;
            v37 = v27;
LABEL_26:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v35, 0, v36, v37);
            goto LABEL_27;
          }
        }
        else
        {
          if (!v29)
          {
            v52 = *((_QWORD *)a2 + 1);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *((_QWORD *)a1 + 1) = v52;
            swift_bridgeObjectRelease();
            v53 = *((_QWORD *)a2 + 3);
            *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
            *((_QWORD *)a1 + 3) = v53;
            swift_bridgeObjectRelease();
            *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
            v54 = *(int *)(v27 + 28);
            v55 = (char *)a1 + v54;
            v56 = (char *)a2 + v54;
            v57 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
            goto LABEL_27;
          }
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
        }
        v17 = *(_QWORD *)(v12 - 8);
LABEL_17:
        memcpy(a1, a2, *(_QWORD *)(v17 + 64));
LABEL_27:
        v43 = *(int *)(v6 + 20);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
        goto LABEL_28;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    }
    v17 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FE8) - 8);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA7FF0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_28;
  }
  v9 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA7FE8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v16))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v19 = *(int *)(v16 + 28);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v16);
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v23 = *(int *)(v6 + 20);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_28:
  v47 = *(int *)(a3 + 20);
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailure()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1D66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA7FF0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailure()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1D684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA7FF0);
}

void sub_23FA1D690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB7290, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureFailure);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailureFailure(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA7FE8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        a1[4] = a2[4];
        v13 = *(int *)(v10 + 28);
        v22 = (char *)a1 + v13;
        v14 = (char *)a2 + v13;
        v15 = sub_23FB2D718();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16(v22, v14, v15);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v10);
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionFailureFailure(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(v5 + 28);
      v7 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoActionFailureFailure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v20;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7FE8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      a1[4] = a2[4];
      v11 = *(int *)(v8 + 28);
      v20 = (char *)a1 + v11;
      v12 = (char *)a2 + v11;
      v13 = sub_23FB2D718();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v20, v12, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v8);
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionFailureFailure(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v9))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        v22 = *(int *)(v9 + 28);
        v35 = (char *)a1 + v22;
        v23 = (char *)a2 + v22;
        v24 = sub_23FB2D718();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25(v35, v23, v24);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v9);
      }
      v19 = (uint64_t)a1;
      v20 = 1;
      v21 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
LABEL_7:
    v10 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FE8) - 8);
    goto LABEL_8;
  }
  v11 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 16, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v11);
  if (v12)
  {
    if (!v13)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      v14 = *(int *)(v11 + 28);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      v19 = (uint64_t)a1;
      v20 = 16;
      v21 = v11;
LABEL_14:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v19, 0, v20, v21);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      v31 = *(int *)(v11 + 28);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
      goto LABEL_15;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  }
  v10 = *(_QWORD *)(v6 - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v10 + 64));
LABEL_15:
  v26 = *(int *)(a3 + 20);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionFailureFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA7FE8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v10 = *(int *)(v8 + 28);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v8);
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoActionFailureFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v6 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v9))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v23 = *(int *)(v9 + 28);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v9);
      }
      v19 = (uint64_t)a1;
      v20 = 1;
      v21 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
LABEL_7:
    v10 = *(_QWORD *)(sub_23F6916B8(&qword_256EA7FE8) - 8);
    goto LABEL_8;
  }
  v11 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 16, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v11);
  if (v12)
  {
    if (!v13)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v15 = *(int *)(v11 + 28);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      v19 = (uint64_t)a1;
      v20 = 16;
      v21 = v11;
LABEL_14:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v19, 0, v20, v21);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      v32 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v32;
      swift_bridgeObjectRelease();
      v33 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v33;
      swift_bridgeObjectRelease();
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v34 = *(int *)(v11 + 28);
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
      goto LABEL_15;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  }
  v10 = *(_QWORD *)(v6 - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v10 + 64));
LABEL_15:
  v27 = *(int *)(a3 + 20);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailureFailure()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1E14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA7FE8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailureFailure()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1E164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA7FE8);
}

void sub_23FA1E170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB7328, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureFailureEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailureFailureEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      a1[4] = a2[4];
      v11 = *(int *)(v7 + 28);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v7);
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoActionFailureFailureEnum(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  result = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 28);
    v5 = sub_23FB2D718();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoActionFailureFailureEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    a1[4] = a2[4];
    v9 = *(int *)(v6 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v6);
  }
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionFailureFailureEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 16, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      v15 = *(int *)(v6 + 28);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
      return a1;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v9 = *(int *)(v6 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23FB2D718();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v6);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoActionFailureFailureEnum(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v8 = *(int *)(v6 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v6);
  }
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoActionFailureFailureEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 16, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 16, v6);
  if (!v7)
  {
    if (!v8)
    {
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRelease();
      v16 = a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      v17 = *(int *)(v6 + 28);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
      return a1;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = a2[4];
  v10 = *(int *)(v6 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 16, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailureFailureEnum()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1E788()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_23FAC3F0C();
  v1 = sub_23FAC3C28(v0);
  if (v1 >= 0x11)
    return v1 - 16;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailureFailureEnum()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA1E7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FAC3F0C();
  v0 = sub_23F876A70();
  return sub_23F6F07C4(v0, v1, v2, v3);
}

uint64_t sub_23FA1E7FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v2);
}

uint64_t sub_23FA1E82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  return _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, a2, 16, v4);
}

void sub_23FA1E864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA17720(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    v10 = sub_23FB2D718();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoActionFailureDeveloperDefinedError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoActionFailureDeveloperDefinedError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoActionFailureDeveloperDefinedError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoActionFailureDeveloperDefinedError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionFailureDeveloperDefinedError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionFailureDeveloperDefinedError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1EBBC()
{
  sub_23FAC17B0();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoActionSuccess(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v29;
  char *v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[7];
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for TranscriptProtoUndoContext(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F6916B8(&qword_256EA7FC8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = v15[1];
      *v14 = *v15;
      v14[1] = v18;
      v19 = v15[3];
      v14[2] = v15[2];
      v14[3] = v19;
      v20 = v15[5];
      v14[4] = v15[4];
      v14[5] = v20;
      v21 = *(int *)(v16 + 28);
      v29 = (char *)v15 + v21;
      v30 = (char *)v14 + v21;
      v22 = sub_23FB2D718();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v30, v29, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v24 = a3[8];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionSuccess(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1 + a2[6];
  v5 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 28);
    v9 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[8];
  v11 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_WORD *initializeWithCopy for TranscriptProtoActionSuccess(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v27;
  char *v28;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA7FC8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v13[1];
    *v12 = *v13;
    v12[1] = v16;
    v17 = v13[3];
    v12[2] = v13[2];
    v12[3] = v17;
    v18 = v13[5];
    v12[4] = v13[4];
    v12[5] = v18;
    v19 = *(int *)(v14 + 28);
    v27 = (char *)v13 + v19;
    v28 = (char *)v12 + v19;
    v20 = sub_23FB2D718();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v28, v27, v20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoActionSuccess(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TranscriptProtoUndoContext(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (!v19)
    {
      *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      v15[3] = v16[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[4] = v16[4];
      v15[5] = v16[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29 = *(int *)(v17 + 28);
      v30 = (char *)v15 + v29;
      v31 = (char *)v16 + v29;
      v32 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoUndoContext);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v23 = sub_23F6916B8(&qword_256EA7FC8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  *v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  v15[3] = v16[3];
  v15[4] = v16[4];
  v15[5] = v16[5];
  v20 = *(int *)(v17 + 28);
  v33 = (char *)v16 + v20;
  v34 = (char *)v15 + v20;
  v21 = sub_23FB2D718();
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v34, v33, v21);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_13:
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_WORD *initializeWithTake for TranscriptProtoActionSuccess(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[7];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
  {
    v15 = sub_23F6916B8(&qword_256EA7FC8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v13[1];
    *v12 = *v13;
    v12[1] = v16;
    v12[2] = v13[2];
    v17 = *(int *)(v14 + 28);
    v18 = (char *)v12 + v17;
    v19 = (char *)v13 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
  }
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoActionSuccess(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = a3[7];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = type metadata accessor for TranscriptProtoUndoContext(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (!v19)
    {
      v31 = v16[1];
      *v15 = *v16;
      v15[1] = v31;
      swift_bridgeObjectRelease();
      v32 = v16[3];
      v15[2] = v16[2];
      v15[3] = v32;
      swift_bridgeObjectRelease();
      v33 = v16[5];
      v15[4] = v16[4];
      v15[5] = v33;
      swift_bridgeObjectRelease();
      v34 = *(int *)(v17 + 28);
      v35 = (char *)v15 + v34;
      v36 = (char *)v16 + v34;
      v37 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v15, type metadata accessor for TranscriptProtoUndoContext);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v25 = sub_23F6916B8(&qword_256EA7FC8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  v20 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v20;
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  v21 = *(int *)(v17 + 28);
  v22 = (char *)v15 + v21;
  v23 = (char *)v16 + v21;
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_13:
  v26 = a3[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionSuccess()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA1F764()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3F00();
  if (v0)
  {
    sub_23FAC3AE0();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA2610);
    sub_23F6F07DC();
    if (v0)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6916B8(&qword_256EA7FC8);
      sub_23F6F07DC();
      if (v2)
      {
        sub_23F6F0AFC();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3340();
      }
    }
    v3 = sub_23F6F08CC(v1);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionSuccess()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1F7F0()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC3640();
  if (v0)
  {
    sub_23FAC3D10();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA2610);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6916B8(&qword_256EA7FC8);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BB8();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC335C();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FA1F864()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB74D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUndoContext);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1F968()
{
  sub_23FAC17B0();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2EB1C();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 28);
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t initializeWithCopy for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2EB1C();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2EB1C();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameterConfirmation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23FB2EB1C();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterConfirmation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA1FF70()
{
  sub_23FAC12F4();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterConfirmation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA1FF88()
{
  sub_23FAC135C();
}

void sub_23FA1FF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)"\t", &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v10 = sub_23FB2D718();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameterDisambiguation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterDisambiguation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterDisambiguation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA20310()
{
  sub_23FAC17B0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueDisambiguation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueDisambiguation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementOutcome(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23FA20414 + 4 * byte_23FB8B202[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoStatementOutcome(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))goto LABEL_46;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v5 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      v6 = a1 + v5[6];
      v7 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = a1 + v5[7];
      v9 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v8 + *(int *)(v9 + 28);
        v11 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      }
      v12 = v5[8];
      goto LABEL_45;
    case 1u:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      goto LABEL_44;
    case 2u:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_44;
    case 3u:
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_13;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_45;
    case 5u:
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_13:
      v15 = v14;
      v16 = a1 + *(int *)(v14 + 24);
      v17 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v16, 1, v17))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      v12 = *(int *)(v15 + 28);
      goto LABEL_45;
    case 6u:
      swift_bridgeObjectRelease();
      v18 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      v19 = a1 + *(int *)(v18 + 20);
      v20 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v20))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      v12 = *(int *)(v18 + 24);
      goto LABEL_45;
    case 7u:
      v21 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v21))goto LABEL_43;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v31 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v31))
        {
          v32 = swift_getEnumCaseMultiPayload();
          if (v32 == 1)
          {
            v34 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v34))
            {
              v35 = a1 + *(int *)(v34 + 20);
              v36 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
            }
            v33 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            goto LABEL_40;
          }
          if (!v32)
          {
            swift_bridgeObjectRelease();
            v33 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_40:
            v37 = a1 + *(int *)(v33 + 20);
            v38 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
          }
        }
        v23 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
        goto LABEL_42;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v23 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_43;
        v23 = type metadata accessor for TranscriptProtoAppRequirement(0);
      }
LABEL_42:
      v39 = a1 + *(int *)(v23 + 20);
      v40 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
LABEL_43:
      v13 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_44:
      v12 = *(int *)(v13 + 20);
LABEL_45:
      v41 = a1 + v12;
      v42 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
LABEL_46:
      v43 = a1 + *(int *)(a2 + 20);
      v44 = sub_23FB2D718();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_45;
    case 9u:
      v24 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v24))
      {
        v25 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v25))
        {
          v26 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v26))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v27 = a1 + *(int *)(v26 + 28);
            v28 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
          }
        }
        v29 = a1 + *(int *)(v24 + 20);
        v30 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
      }
      v13 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_44;
    case 0xAu:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_44;
    default:
      goto LABEL_46;
  }
}

char *initializeWithCopy for TranscriptProtoStatementOutcome(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA21514 + 4 * byte_23FB8B218[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoStatementOutcome(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA22148 + 4 * word_23FB8B224[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v11 = (char *)&loc_23FA2222C + 4 * word_23FB8B23A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoStatementOutcome(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA23A24 + 4 * byte_23FB8B250[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA7FF8);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoStatementOutcome(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA24584 + 4 * word_23FB8B25C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA7FF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v11 = (char *)&loc_23FA24660 + 4 * word_23FB8B272[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementOutcome()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA25B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA7FF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementOutcome()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA25B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA7FF8);
}

void sub_23FA25B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB77D8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoStatementOutcomeEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA25BF4 + 4 * byte_23FB8B288[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoStatementOutcomeEnum(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      v4 = a1 + v3[6];
      v5 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      v6 = a1 + v3[7];
      v7 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v6 + *(int *)(v7 + 28);
        v9 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      }
      v10 = v3[8];
      goto LABEL_44;
    case 1:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      goto LABEL_43;
    case 2:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_43;
    case 3:
      swift_bridgeObjectRelease();
      v12 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_44;
    case 5:
      swift_bridgeObjectRelease();
      v12 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_12:
      v13 = v12;
      v14 = a1 + *(int *)(v12 + 24);
      v15 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v15))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      v10 = *(int *)(v13 + 28);
      goto LABEL_44;
    case 6:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      v17 = a1 + *(int *)(v16 + 20);
      v18 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v18))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      v10 = *(int *)(v16 + 24);
      goto LABEL_44;
    case 7:
      v19 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v19))goto LABEL_42;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v29 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v29))
        {
          v30 = swift_getEnumCaseMultiPayload();
          if (v30 == 1)
          {
            v32 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v32))
            {
              v33 = a1 + *(int *)(v32 + 20);
              v34 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
            }
            v31 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            goto LABEL_39;
          }
          if (!v30)
          {
            swift_bridgeObjectRelease();
            v31 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_39:
            v35 = a1 + *(int *)(v31 + 20);
            v36 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
          }
        }
        v21 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
        goto LABEL_41;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v21 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_42;
        v21 = type metadata accessor for TranscriptProtoAppRequirement(0);
      }
LABEL_41:
      v37 = a1 + *(int *)(v21 + 20);
      v38 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
LABEL_42:
      v11 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_43:
      v10 = *(int *)(v11 + 20);
LABEL_44:
      v39 = a1 + v10;
      v40 = sub_23FB2D718();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_44;
    case 9:
      v22 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v22))
      {
        v23 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v23))
        {
          v24 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 16, v24))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v25 = a1 + *(int *)(v24 + 28);
            v26 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
          }
        }
        v27 = a1 + *(int *)(v22 + 20);
        v28 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
      }
      v11 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_43;
    case 10:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_43;
    default:
      return result;
  }
}

void initializeWithCopy for TranscriptProtoStatementOutcomeEnum()
{
  char *v0;

  v0 = (char *)sub_23FA26C34 + 4 * byte_23FB8B29E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_WORD *sub_23FA26C34()
{
  _WORD *v0;
  _WORD *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  char *v25;

  *v0 = *v1;
  v2 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
  v3 = v2[6];
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v4, 0, 1, v6);
  }
  v8 = v2[7];
  v9 = (_QWORD *)((char *)v0 + v8);
  v10 = (_QWORD *)((char *)v1 + v8);
  v11 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA7FC8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = v10[3];
    v9[2] = v10[2];
    v9[3] = v14;
    v15 = v10[5];
    v9[4] = v10[4];
    v9[5] = v15;
    v16 = *(int *)(v11 + 28);
    v24 = (char *)v10 + v16;
    v25 = (char *)v9 + v16;
    v17 = sub_23FB2D718();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v25, v24, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v18 = v2[8];
  v19 = (char *)v0 + v18;
  v20 = (char *)v1 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoStatementOutcomeEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v2 = (char *)&loc_23FA277F4 + 4 * word_23FB8B2AA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoStatementOutcomeEnum()
{
  char *v0;

  v0 = (char *)sub_23FA28404 + 4 * byte_23FB8B2C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_WORD *sub_23FA28404()
{
  _WORD *v0;
  _WORD *v1;
  int *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *v0 = *v1;
  v2 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
  v3 = v2[6];
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v5, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v4, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v4, 0, 1, v6);
  }
  v8 = v2[7];
  v9 = (_OWORD *)((char *)v0 + v8);
  v10 = (_OWORD *)((char *)v1 + v8);
  v11 = type metadata accessor for TranscriptProtoUndoContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA7FC8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v9[2] = v10[2];
    v14 = *(int *)(v11 + 28);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
  }
  v18 = v2[8];
  v19 = (char *)v0 + v18;
  v20 = (char *)v1 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoStatementOutcomeEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v2 = (char *)&loc_23FA28EFC + 4 * byte_23FB8B2CB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FA29990()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  result = type metadata accessor for TranscriptProtoActionSuccess(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoActionConfirmation(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoParameterNeedsValue(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoParameterConfirmation(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoParameterDisambiguation(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoParameterNotAllowed(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for TranscriptProtoActionRequirement(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for TranscriptProtoToolDisambiguation(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for TranscriptProtoActionFailure(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for TranscriptProtoValueDisambiguation(319);
                      if (v11 <= 0x3F)
                      {
                        swift_initEnumMetadataMultiPayload();
                        return 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterNeedsValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterNeedsValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterNotAllowed()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA29B4C()
{
  sub_23FAC12F4();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterNotAllowed()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA29B64()
{
  sub_23FAC135C();
}

void sub_23FA29B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)&unk_23FB8F910, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

uint64_t _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedV6ReasonOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FA29BE0 + 4 * byte_23FB8B2DB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FA29C14 + 4 * byte_23FB8B2D6[v4]))();
}

uint64_t sub_23FA29C18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FA29C20);
  return result;
}

_BYTE *sub_23FA29C28(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FA29C30);
  return sub_23F6B6EB0((_BYTE *)a1, a2 + 2);
}

void type metadata accessor for TranscriptProtoParameterNotAllowed.Reason()
{
  sub_23F694C70();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterCandidatesNotFound(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2EB1C();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoParameterCandidatesNotFound(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FB2EB1C();
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for TranscriptProtoParameterCandidatesNotFound(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2EB1C();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoParameterCandidatesNotFound(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoParameterCandidatesNotFound(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoParameterCandidatesNotFound(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2EB1C();
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterCandidatesNotFound()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA2A278()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterCandidatesNotFound()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA2A290()
{
  sub_23FAB8268();
}

void sub_23FA2A29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParticipantID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParticipantID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSpanID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_QWORD *initializeWithCopy for TranscriptProtoSpanID(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSpanID(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSpanID(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpanID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpanID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA2A494()
{
  sub_23FABE678();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoPlan(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = a2[6];
    v8 = *(int *)(a3 + 36);
    v9 = (uint64_t)a2 + v8;
    v10 = a1 + v8;
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v11 = sub_23FB2D718();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoPlan(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 36);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v10 = sub_23FB2D718();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoPlan(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlan()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlan()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA2A8B4()
{
  sub_23FA9AB4C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRecoverableError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v27;
  char *v28;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA8688);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
      {
        v11 = sub_23F6916B8(&qword_256EA8678);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        v14 = a2[5];
        a1[4] = a2[4];
        a1[5] = v14;
        v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        v27 = (char *)a2 + v15;
        v28 = (char *)a1 + v15;
        v16 = sub_23FB2D718();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17(v28, v27, v16);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v10);
      }
      v18 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v22 = *(int *)(a3 + 20);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRecoverableError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v7 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
    v8 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    v9 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + *(int *)(a2 + 20);
  v11 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *initializeWithCopy for TranscriptProtoRecoverableError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA8688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA8678);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v25 = (char *)a2 + v13;
      v26 = (char *)a1 + v13;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v26, v25, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v16 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoRecoverableError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;

  v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        v41 = (char *)a1 + v15;
        v16 = (char *)a2 + v15;
        v17 = sub_23FB2D718();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18(v41, v16, v17);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_16:
        v27 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v14)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v36 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
        goto LABEL_16;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    }
    v26 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA8688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    v19 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v40 = (char *)a2 + v19;
    v42 = (char *)a1 + v19;
    v20 = sub_23FB2D718();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v42, v40, v20);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v22 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_17:
  v31 = *(int *)(a3 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoRecoverableError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA8688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA8678);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      v11 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v15 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_OWORD *assignWithTake for TranscriptProtoRecoverableError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v6 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        a1[2] = a2[2];
        v16 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_16:
        v30 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v14)
      {
        v39 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v39;
        swift_bridgeObjectRelease();
        v40 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v40;
        swift_bridgeObjectRelease();
        v41 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v41;
        swift_bridgeObjectRelease();
        v42 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
        goto LABEL_16;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    }
    v29 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA8688);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_17;
  }
  v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    a1[2] = a2[2];
    v21 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v25 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_17:
  v34 = *(int *)(a3 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRecoverableError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2B62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA8688);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRecoverableError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2B644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA8688);
}

void sub_23FA2B650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB7C98, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRecoverableErrorEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRecoverableErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
    {
      v7 = sub_23F6916B8(&qword_256EA8678);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      v12 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    }
    v17 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRecoverableErrorEnum(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v4 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v6 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

_QWORD *initializeWithCopy for TranscriptProtoRecoverableErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
  }
  v14 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoRecoverableErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v4);
  v6 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    if (!v6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v18 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v12 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoRecoverableErrorEnum(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4))
  {
    v5 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
  }
  v11 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoRecoverableErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v4);
  v6 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    if (!v6)
    {
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      swift_bridgeObjectRelease();
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      swift_bridgeObjectRelease();
      v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      swift_bridgeObjectRelease();
      v21 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v12 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  v7 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v7;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v8 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRecoverableErrorEnum()
{
  type metadata accessor for TranscriptProtoPlanGenerationError(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2BE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA8678);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRecoverableErrorEnum()
{
  type metadata accessor for TranscriptProtoPlanGenerationError(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2BEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA8678);
}

void sub_23FA2BEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA2CB74(a1, a2, a3, type metadata accessor for TranscriptProtoPlanGenerationError);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPlanGenerationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA8678);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      v13 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v22 = (char *)a1 + v13;
      v14 = (char *)a2 + v13;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v22, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPlanGenerationError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for TranscriptProtoPlanGenerationError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v20;

  v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v20 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    v13 = sub_23FB2D718();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v20, v12, v13);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoPlanGenerationError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;

  v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v19 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v23 = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  v11 = sub_23FB2D718();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v23, v10, v11);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoPlanGenerationError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoPlanGenerationError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRelease();
      v21 = a2[3];
      a1[2] = a2[2];
      a1[3] = v21;
      swift_bridgeObjectRelease();
      v22 = a2[5];
      a1[4] = a2[4];
      a1[5] = v22;
      swift_bridgeObjectRelease();
      v23 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA8678);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v10 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlanGenerationError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2C710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA8678);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanGenerationError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2C728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA8678);
}

void sub_23FA2C734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB7DB0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPlanGenerationErrorEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoPlanGenerationErrorEnum(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v3 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for TranscriptProtoPlanGenerationErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoPlanGenerationErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoPlanGenerationErrorEnum(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoPlanGenerationErrorEnum(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlanGenerationErrorEnum()
{
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanGenerationErrorEnum()
{
  type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA2CB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA2CB74(a1, a2, a3, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

void sub_23FA2CB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = sub_23F8776F0(a1, a2, a3, a4);
  if (v6 <= 0x3F)
  {
    v7 = *(_QWORD *)(v5 - 8);
    sub_23FAC3E60();
    swift_initEnumMetadataSingleCase();
    sub_23F6F0BFC();
    *(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) = *(_DWORD *)(v7 + 84);
  }
  sub_23F694CC8();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPlanGenerationModelOutputError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPlanGenerationModelOutputError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EB7F50);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t DataEnum;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DataEnum))
    {
      v10 = (char *)&loc_23FA2CCCC + 4 * byte_23FB8B2E0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryData(uint64_t a1, uint64_t a2)
{
  uint64_t DataEnum;
  uint64_t v5;
  uint64_t Enum;
  int EnumCaseMultiPayload;
  uint64_t Predicate;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, DataEnum))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
        goto LABEL_15;
      case 1u:
      case 3u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoStringQuery(0);
        goto LABEL_15;
      case 2u:
        Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, Enum))goto LABEL_14;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          v11 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        }
        else
        {
          if (EnumCaseMultiPayload)
            goto LABEL_14;
          swift_bridgeObjectRelease();
          Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
          v9 = a1 + *(int *)(Predicate + 24);
          v10 = sub_23FB2EB1C();
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          v11 = *(int *)(Predicate + 28);
        }
        v12 = a1 + v11;
        v13 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
LABEL_14:
        v5 = type metadata accessor for TranscriptProtoPropertyQuery(0);
LABEL_15:
        v14 = a1 + *(int *)(v5 + 20);
        v15 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        break;
      default:
        break;
    }
  }
  v16 = a1 + *(int *)(a2 + 20);
  v17 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
}

char *initializeWithCopy for TranscriptProtoQueryData(char *a1, char *a2, uint64_t a3)
{
  uint64_t DataEnum;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DataEnum))
  {
    v8 = (char *)&loc_23FA2D280 + 4 * byte_23FB8B2E8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA85B0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoQueryData(char *a1, char *a2, uint64_t a3)
{
  uint64_t DataEnum;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, DataEnum);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DataEnum);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA2D664 + 4 * byte_23FB8B2EC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDataEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDataEnum);
    v11 = (char *)&loc_23FA2D734 + 4 * byte_23FB8B2F0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoQueryData(char *a1, char *a2, uint64_t a3)
{
  uint64_t DataEnum;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DataEnum))
  {
    v8 = (char *)&loc_23FA2DE9C + 4 * byte_23FB8B2F4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA85B0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoQueryData(char *a1, char *a2, uint64_t a3)
{
  uint64_t DataEnum;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, DataEnum);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, DataEnum);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA2E210 + 4 * byte_23FB8B2F8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDataEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDataEnum);
    v11 = (char *)&loc_23FA2E2D4 + 4 * byte_23FB8B2FC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2E810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA85B0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA2E828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA85B0);
}

void sub_23FA2E834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB7FF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDataEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDataEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA2E8A4 + 4 * byte_23FB8B300[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoQueryDataEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t Enum;
  int EnumCaseMultiPayload;
  uint64_t Predicate;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
      goto LABEL_14;
    case 1:
    case 3:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoStringQuery(0);
      goto LABEL_14;
    case 2:
      Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, Enum))goto LABEL_13;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_13;
        swift_bridgeObjectRelease();
        Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        v7 = a1 + *(int *)(Predicate + 24);
        v8 = sub_23FB2EB1C();
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        v9 = *(int *)(Predicate + 28);
      }
      v10 = a1 + v9;
      v11 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
LABEL_13:
      v3 = type metadata accessor for TranscriptProtoPropertyQuery(0);
LABEL_14:
      v12 = a1 + *(int *)(v3 + 20);
      v13 = sub_23FB2D718();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    default:
      return result;
  }
}

void initializeWithCopy for TranscriptProtoQueryDataEnum()
{
  char *v0;

  v0 = (char *)sub_23FA2ED98 + 4 * byte_23FB8B308[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA2ED98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_23FB2D718();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoQueryDataEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoQueryDataEnum);
    v2 = (char *)&loc_23FA2F10C + 4 * byte_23FB8B30C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoQueryDataEnum()
{
  char *v0;

  v0 = (char *)sub_23FA2F480 + 4 * byte_23FB8B310[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA2F480()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoIdentifierQuery(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoQueryDataEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoQueryDataEnum);
    v2 = (char *)&loc_23FA2F794 + 4 * byte_23FB8B314[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FA2FA40()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for TranscriptProtoIdentifierQuery(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoStringQuery(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoPropertyQuery(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStringQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStringQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPropertyQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t Enum;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t Predicate;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, Enum))
    {
      v8 = sub_23F6916B8(&qword_256EA85A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23FB2D718();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
      }
      else
      {
        v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        v18 = *(int *)(Predicate + 24);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_23FB2EB1C();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
        {
          v22 = sub_23F6916B8(&qword_256EA2610);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
        }
        v23 = *(int *)(Predicate + 28);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, Enum);
    }
    v27 = *(int *)(a3 + 20);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPropertyQuery(uint64_t a1, uint64_t a2)
{
  uint64_t Enum;
  int EnumCaseMultiPayload;
  uint64_t Predicate;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, Enum))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
LABEL_9:
      v10 = a1 + v9;
      v11 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v7 = a1 + *(int *)(Predicate + 24);
      v8 = sub_23FB2EB1C();
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      v9 = *(int *)(Predicate + 28);
      goto LABEL_9;
    }
  }
LABEL_10:
  v12 = a1 + *(int *)(a2 + 20);
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for TranscriptProtoPropertyQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t Enum;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t Predicate;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, Enum))
  {
    v7 = sub_23F6916B8(&qword_256EA85A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v16 = *(int *)(Predicate + 24);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
      {
        v20 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
      }
      v21 = *(int *)(Predicate + 28);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    }
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, Enum);
  }
  v25 = *(int *)(a3 + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPropertyQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Enum;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t Predicate;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, Enum);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, Enum);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
        v11 = a1 + v10;
        v12 = a2 + v10;
        v13 = sub_23FB2D718();
        v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
      }
      else
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        v23 = *(int *)(Predicate + 24);
        v24 = (void *)(a1 + v23);
        v25 = (const void *)(a2 + v23);
        v26 = sub_23FB2EB1C();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v26))
        {
          v27 = sub_23F6916B8(&qword_256EA2610);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v24, 0, 1, v26);
        }
        v34 = *(int *)(Predicate + 28);
        v35 = a1 + v34;
        v36 = a2 + v34;
        v37 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      }
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, Enum);
      goto LABEL_24;
    }
LABEL_8:
    v15 = sub_23F6916B8(&qword_256EA85A0);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_24;
  }
  if (v8)
  {
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 2 || v16 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v17 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      v18 = a1 + v17;
      v19 = a2 + v17;
      v20 = sub_23FB2D718();
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v28 = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v29 = *(int *)(v28 + 24);
      v30 = (void *)(a1 + v29);
      v31 = (const void *)(a2 + v29);
      v32 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v32))
      {
        v33 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v30, 0, 1, v32);
      }
      v38 = *(int *)(v28 + 28);
      v39 = a1 + v38;
      v40 = a2 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  v42 = *(int *)(a3 + 20);
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoPropertyQuery(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t Enum;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t Predicate;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, Enum))
  {
    v7 = sub_23F6916B8(&qword_256EA85A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v11 = *(int *)(Predicate + 24);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
      }
      v9 = *(int *)(Predicate + 28);
    }
    v16 = &a1[v9];
    v17 = &a2[v9];
    v18 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, Enum);
  }
  v19 = *(int *)(a3 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoPropertyQuery(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t Enum;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t Predicate;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;

  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, Enum);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, Enum);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[16] = a2[16];
        Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
        v18 = *(int *)(Predicate + 24);
        v19 = &a1[v18];
        v20 = &a2[v18];
        v21 = sub_23FB2EB1C();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
        {
          v22 = sub_23F6916B8(&qword_256EA2610);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
        }
        v10 = *(int *)(Predicate + 28);
      }
      v29 = &a1[v10];
      v30 = &a2[v10];
      v31 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      swift_storeEnumTagMultiPayload();
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, Enum);
      goto LABEL_24;
    }
LABEL_8:
    v11 = sub_23F6916B8(&qword_256EA85A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_24;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2 || v12 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      v23 = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v24 = *(int *)(v23 + 24);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, v27))
      {
        v28 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, v27);
      }
      v32 = *(int *)(v23 + 28);
      v33 = &a1[v32];
      v34 = &a2[v32];
      v35 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  v36 = *(int *)(a3 + 20);
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPropertyQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA30A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA85A0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPropertyQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA30A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA85A0);
}

void sub_23FA30A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB81C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPropertyQueryEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t Predicate;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      v8 = a1 + v7;
      v9 = (uint64_t)a2 + v7;
      v10 = sub_23FB2D718();
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
    }
    else
    {
      v13 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v13;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v15 = *(int *)(Predicate + 24);
      v16 = (void *)(a1 + v15);
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
      {
        v19 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
      }
      v20 = *(int *)(Predicate + 28);
      v21 = a1 + v20;
      v22 = (uint64_t)a2 + v20;
      v23 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoPropertyQueryEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t Predicate;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v6 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
    v4 = a1 + *(int *)(Predicate + 24);
    v5 = sub_23FB2EB1C();
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = *(int *)(Predicate + 28);
  }
  v7 = a1 + v6;
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t Predicate;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    v6 = a1 + v5;
    v7 = a2 + v5;
    v8 = sub_23FB2D718();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
    v12 = *(int *)(Predicate + 24);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    v15 = sub_23FB2EB1C();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v17 = *(int *)(Predicate + 28);
    v18 = a1 + v17;
    v19 = a2 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t Predicate;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
      v6 = a1 + v5;
      v7 = a2 + v5;
      v8 = sub_23FB2D718();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v11 = *(int *)(Predicate + 24);
      v12 = (void *)(a1 + v11);
      v13 = (const void *)(a2 + v11);
      v14 = sub_23FB2EB1C();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
      }
      v16 = *(int *)(Predicate + 28);
      v17 = a1 + v16;
      v18 = a2 + v16;
      v19 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t Predicate;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
    v7 = *(int *)(Predicate + 24);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    v10 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v5 = *(int *)(Predicate + 28);
  }
  v12 = a1 + v5;
  v13 = a2 + v5;
  v14 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TranscriptProtoPropertyQueryEnum(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t Predicate;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v5 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
      v7 = *(int *)(Predicate + 24);
      v8 = (void *)(a1 + v7);
      v9 = (const void *)(a2 + v7);
      v10 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
      {
        v11 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      }
      v5 = *(int *)(Predicate + 28);
    }
    v12 = a1 + v5;
    v13 = a2 + v5;
    v14 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FA3131C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TranscriptProtoQueryPredicate(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoQueryPredicateList(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryPredicateList()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryPredicateList()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIdentifierQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIdentifierQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6D3A90();
  v2 = v1;
  sub_23F877920();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F876A58(*(_QWORD *)v2);
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)v0 = *(_QWORD *)v2;
    *(_QWORD *)(v0 + 8) = v4;
    *(_BYTE *)(v0 + 16) = *(_BYTE *)(v2 + 16);
    v5 = sub_23F6B632C();
    sub_23F6B90D8();
    if (sub_23FAC2C5C())
    {
      v6 = sub_23F6916B8(&qword_256EA2610);
      sub_23FAC2BBC(v6);
    }
    else
    {
      sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
      sub_23FAC2BA8();
    }
    v7 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport36TranscriptProtoParameterConfirmationVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  destroy for AssetsManager();
  v4 = a1 + *(int *)(a2 + 24);
  sub_23F6B632C();
  if (!sub_23FAC2B44(v4))
    sub_23FAC3AA0();
  sub_23F6B53A4();
  v5 = sub_23F87922C();
  return sub_23FAC2C30(v5, v6, v7);
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  v1 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)v2 = *(_QWORD *)v0;
  *(_QWORD *)(v2 + 8) = v1;
  *(_BYTE *)(v2 + 16) = *(_BYTE *)(v0 + 16);
  v3 = sub_23F6B632C();
  sub_23F6B90D8();
  if (sub_23FAC2C5C())
  {
    v4 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v4);
  }
  else
  {
    sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
    sub_23FAC2BA8();
  }
  v5 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6D3A90();
  sub_23FAC300C(v4, v5);
  sub_23F6B5908();
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v6 = sub_23F6B632C();
  v7 = sub_23FAC2B50(v6);
  if (!v3)
  {
    v8 = *(_QWORD *)(v2 - 8);
    if (!v7)
    {
      sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 24));
      goto LABEL_7;
    }
    sub_23FAC32FC(v8);
    goto LABEL_6;
  }
  if (v7)
  {
LABEL_6:
    v9 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v9);
    goto LABEL_7;
  }
  sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  sub_23FAC2BA8();
LABEL_7:
  v10 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FAC39D0(a1, a2);
  v2 = sub_23F6B632C();
  if (sub_23FAC2C5C())
  {
    v3 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v3);
  }
  else
  {
    sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
    sub_23FAC2BA8();
  }
  v4 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport34TranscriptProtoParameterNotAllowedVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23F6D3A90();
  sub_23FAC3174(v4, v5);
  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v1 + 16);
  v6 = sub_23F6B632C();
  v7 = sub_23FAC2B50(v6);
  if (!v3)
  {
    v8 = *(_QWORD *)(v2 - 8);
    if (!v7)
    {
      sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40));
      goto LABEL_7;
    }
    sub_23FAC32FC(v8);
    goto LABEL_6;
  }
  if (v7)
  {
LABEL_6:
    v9 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v9);
    goto LABEL_7;
  }
  sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  sub_23FAC2BA8();
LABEL_7:
  v10 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA31760()
{
  sub_23FAC12F4();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA31778()
{
  sub_23FAC135C();
}

void sub_23FA31784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)&unk_23FB90020, &qword_256EA33B0, (void (*)(uint64_t))MEMORY[0x24BEB95B0]);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryResults()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryResults()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryStep()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA317EC()
{
  sub_23FA99C8C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryStep()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA31804()
{
  sub_23FA99CF4();
}

void sub_23FA31810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, MEMORY[0x24BEE0158] + 64, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoParameterQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t Data;
  uint64_t v32;
  uint64_t DataEnum;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  char *__dst;
  char *v51;
  _QWORD *v52;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v6 = a2;
    v7 = a1;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoActionParameterContext(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA85D0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v52 = v6;
      v13 = v10[1];
      *v9 = *v10;
      v9[1] = v13;
      v14 = v10[3];
      v9[2] = v10[2];
      v9[3] = v14;
      v15 = *(int *)(v11 + 24);
      v16 = (_QWORD *)((char *)v9 + v15);
      v17 = (_QWORD *)((char *)v10 + v15);
      v18 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
      {
        v19 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v16 = *(_DWORD *)v17;
        v20 = v17[2];
        v16[1] = v17[1];
        v16[2] = v20;
        v21 = *(int *)(v18 + 24);
        __dst = (char *)v17 + v21;
        v51 = (char *)v16 + v21;
        v22 = sub_23FB2D718();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v51, __dst, v22);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
      }
      v6 = v52;
      v24 = *(int *)(v11 + 28);
      v25 = (char *)v9 + v24;
      v26 = (char *)v10 + v24;
      v27 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v28 = a3[6];
    v29 = (char *)v7 + v28;
    v30 = (char *)v6 + v28;
    Data = type metadata accessor for TranscriptProtoQueryData(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, Data))
    {
      v32 = sub_23F6916B8(&qword_256EA85C0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, DataEnum))
      {
        v35 = (char *)&loc_23FA31ABC + 4 * byte_23FB8B318[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v34 = sub_23F6916B8(&qword_256EA85B0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v36 = *(int *)(Data + 20);
      v37 = &v29[v36];
      v38 = &v30[v36];
      v39 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, Data);
    }
    v40 = a3[7];
    v41 = a3[8];
    v42 = (_QWORD *)((char *)v7 + v40);
    v43 = (_QWORD *)((char *)v6 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = (char *)v7 + v41;
    v46 = (char *)v6 + v41;
    v47 = sub_23FB2D718();
    v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
    swift_bridgeObjectRetain();
    v48(v45, v46, v47);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoParameterQuery(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Data;
  uint64_t DataEnum;
  uint64_t v15;
  uint64_t Enum;
  int EnumCaseMultiPayload;
  uint64_t Predicate;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 24);
      v9 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(v5 + 28);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[6];
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, Data))
  {
    DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, DataEnum))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v15 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
          goto LABEL_20;
        case 1u:
        case 3u:
          swift_bridgeObjectRelease();
          v15 = type metadata accessor for TranscriptProtoStringQuery(0);
          goto LABEL_20;
        case 2u:
          Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, Enum))goto LABEL_19;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
          {
            swift_bridgeObjectRelease();
            v21 = *(int *)(type metadata accessor for TranscriptProtoQueryPredicateList(0) + 20);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_19;
            swift_bridgeObjectRelease();
            Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
            v19 = v12 + *(int *)(Predicate + 24);
            v20 = sub_23FB2EB1C();
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v20))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
            v21 = *(int *)(Predicate + 28);
          }
          v22 = v12 + v21;
          v23 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
LABEL_19:
          v15 = type metadata accessor for TranscriptProtoPropertyQuery(0);
LABEL_20:
          v24 = v12 + *(int *)(v15 + 20);
          v25 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
          break;
        default:
          break;
      }
    }
    v26 = v12 + *(int *)(Data + 20);
    v27 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  swift_bridgeObjectRelease();
  v28 = a1 + a2[8];
  v29 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
}

_QWORD *initializeWithCopy for TranscriptProtoParameterQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t Data;
  uint64_t v30;
  uint64_t DataEnum;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *__dst;
  char *v49;
  int *v50;

  v3 = a3;
  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA85D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v50 = v3;
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    v13 = *(int *)(v9 + 24);
    v14 = (_QWORD *)((char *)v7 + v13);
    v15 = (_QWORD *)((char *)v8 + v13);
    v16 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
    {
      v17 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v14 = *(_DWORD *)v15;
      v18 = v15[2];
      v14[1] = v15[1];
      v14[2] = v18;
      v19 = *(int *)(v16 + 24);
      __dst = (char *)v15 + v19;
      v49 = (char *)v14 + v19;
      v20 = sub_23FB2D718();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v49, __dst, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
    }
    v3 = v50;
    v22 = *(int *)(v9 + 28);
    v23 = (char *)v7 + v22;
    v24 = (char *)v8 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v26 = v3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, Data))
  {
    v30 = sub_23F6916B8(&qword_256EA85C0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, DataEnum))
    {
      v33 = (char *)&loc_23FA3237C + 4 * byte_23FB8B320[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v32 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    v34 = *(int *)(Data + 20);
    v35 = &v27[v34];
    v36 = &v28[v34];
    v37 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, Data);
  }
  v38 = v3[7];
  v39 = v3[8];
  v40 = (_QWORD *)((char *)a1 + v38);
  v41 = (_QWORD *)((char *)a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = (char *)a1 + v39;
  v44 = (char *)a2 + v39;
  v45 = sub_23FB2D718();
  v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
  swift_bridgeObjectRetain();
  v46(v43, v44, v45);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoParameterQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t Data;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t DataEnum;
  int v51;
  int v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v77;
  char *v78;
  _QWORD *v79;
  char *v80;
  int *v81;
  int *v82;

  v4 = a2;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)v4 + v6);
  v9 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoActionParameterContext);
      goto LABEL_7;
    }
    v82 = a3;
    v18 = v4;
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(int *)(v9 + 24);
    v20 = (char *)v7 + v19;
    v21 = (char *)v8 + v19;
    v22 = type metadata accessor for TranscriptProtoStatementID(0);
    v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22);
    v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22);
    if (v23)
    {
      if (!v24)
      {
        *(_DWORD *)v20 = *(_DWORD *)v21;
        *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
        *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
        v25 = *(int *)(v22 + 24);
        v77 = &v21[v25];
        v80 = &v20[v25];
        v26 = sub_23FB2D718();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v80, v77, v26);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_16:
        v37 = *(int *)(v9 + 28);
        v38 = (char *)v7 + v37;
        v39 = (char *)v8 + v37;
        v40 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
        v4 = v18;
        a3 = v82;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v24)
      {
        *(_DWORD *)v20 = *(_DWORD *)v21;
        *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
        *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v56 = *(int *)(v22 + 24);
        v57 = &v20[v56];
        v58 = &v21[v56];
        v59 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
        goto LABEL_16;
      }
      sub_23F93DADC((uint64_t)v20, type metadata accessor for TranscriptProtoStatementID);
    }
    v36 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_7:
    v17 = sub_23F6916B8(&qword_256EA85D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v79 = v4;
  v81 = a3;
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v12 = *(int *)(v9 + 24);
  v13 = (_QWORD *)((char *)v7 + v12);
  v14 = (_QWORD *)((char *)v8 + v12);
  v15 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
  {
    v16 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[1] = v14[1];
    v13[2] = v14[2];
    v28 = *(int *)(v15 + 24);
    v29 = (char *)v13 + v28;
    v78 = (char *)v14 + v28;
    v30 = sub_23FB2D718();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v29, v78, v30);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
  }
  v4 = v79;
  a3 = v81;
  v32 = *(int *)(v9 + 28);
  v33 = (char *)v7 + v32;
  v34 = (char *)v8 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_17:
  v41 = a3[6];
  v42 = (char *)a1 + v41;
  v43 = (char *)v4 + v41;
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  v45 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, Data);
  v46 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, Data);
  if (!v45)
  {
    if (v46)
    {
      sub_23F93DADC((uint64_t)v42, type metadata accessor for TranscriptProtoQueryData);
      goto LABEL_23;
    }
    DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    v51 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, DataEnum);
    v52 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, DataEnum);
    if (v51)
    {
      if (!v52)
      {
        v53 = (char *)&loc_23FA32B74 + 4 * byte_23FB8B328[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v52)
      {
        if (a1 != v4)
        {
          sub_23F93DADC((uint64_t)v42, type metadata accessor for TranscriptProtoQueryDataEnum);
          v60 = (char *)&loc_23FA32D58 + 4 * byte_23FB8B32C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_34;
      }
      sub_23F93DADC((uint64_t)v42, type metadata accessor for TranscriptProtoQueryDataEnum);
    }
    v55 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
LABEL_34:
    v65 = *(int *)(Data + 20);
    v66 = &v42[v65];
    v67 = &v43[v65];
    v68 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
    goto LABEL_35;
  }
  if (v46)
  {
LABEL_23:
    v49 = sub_23F6916B8(&qword_256EA85C0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_35;
  }
  v47 = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v47))
  {
    v54 = (char *)&loc_23FA32BC0 + 4 * byte_23FB8B324[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v48 = sub_23F6916B8(&qword_256EA85B0);
  memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  v61 = *(int *)(Data + 20);
  v62 = &v42[v61];
  v63 = &v43[v61];
  v64 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v42, 0, 1, Data);
LABEL_35:
  v69 = a3[7];
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)v4 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = a3[8];
  v73 = (char *)a1 + v72;
  v74 = (char *)v4 + v72;
  v75 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoParameterQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t Data;
  uint64_t v29;
  uint64_t DataEnum;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA85D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (_DWORD *)((char *)v7 + v12);
    v14 = (_DWORD *)((char *)v8 + v12);
    v15 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      *(_OWORD *)(v13 + 2) = *(_OWORD *)(v14 + 2);
      v17 = *(int *)(v15 + 24);
      v18 = (char *)v13 + v17;
      v19 = (char *)v14 + v17;
      v20 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v21 = *(int *)(v9 + 28);
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v25 = a3[6];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, Data))
  {
    v29 = sub_23F6916B8(&qword_256EA85C0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, DataEnum))
    {
      v32 = (char *)&loc_23FA33828 + 4 * byte_23FB8B330[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v31 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v33 = *(int *)(Data + 20);
    v34 = &v26[v33];
    v35 = &v27[v33];
    v36 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, Data);
  }
  v37 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoParameterQuery(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t Data;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t DataEnum;
  int v54;
  int v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoActionParameterContext);
      goto LABEL_7;
    }
    v19 = v8[1];
    *v7 = *v8;
    v7[1] = v19;
    swift_bridgeObjectRelease();
    v20 = v8[3];
    v7[2] = v8[2];
    v7[3] = v20;
    swift_bridgeObjectRelease();
    v21 = *(int *)(v9 + 24);
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v24 = type metadata accessor for TranscriptProtoStatementID(0);
    v25 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v24);
    v26 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24);
    if (v25)
    {
      if (!v26)
      {
        *(_DWORD *)v22 = *(_DWORD *)v23;
        *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
        v27 = *(int *)(v24 + 24);
        v28 = &v22[v27];
        v29 = &v23[v27];
        v30 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
LABEL_16:
        v40 = *(int *)(v9 + 28);
        v41 = (char *)v7 + v40;
        v42 = (char *)v8 + v40;
        v43 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
        goto LABEL_17;
      }
    }
    else
    {
      if (!v26)
      {
        *(_DWORD *)v22 = *(_DWORD *)v23;
        v59 = *((_QWORD *)v23 + 2);
        *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
        *((_QWORD *)v22 + 2) = v59;
        swift_bridgeObjectRelease();
        v60 = *(int *)(v24 + 24);
        v61 = &v22[v60];
        v62 = &v23[v60];
        v63 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
        goto LABEL_16;
      }
      sub_23F93DADC((uint64_t)v22, type metadata accessor for TranscriptProtoStatementID);
    }
    v39 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_7:
    v18 = sub_23F6916B8(&qword_256EA85D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_17;
  }
  v12 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *((_OWORD *)v7 + 1) = v12;
  v13 = *(int *)(v9 + 24);
  v14 = (_DWORD *)((char *)v7 + v13);
  v15 = (_DWORD *)((char *)v8 + v13);
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    *(_OWORD *)(v14 + 2) = *(_OWORD *)(v15 + 2);
    v31 = *(int *)(v16 + 24);
    v32 = (char *)v14 + v31;
    v33 = (char *)v15 + v31;
    v34 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v35 = *(int *)(v9 + 28);
  v36 = (char *)v7 + v35;
  v37 = (char *)v8 + v35;
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_17:
  v44 = a3[6];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  v48 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, Data);
  v49 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, Data);
  if (!v48)
  {
    if (v49)
    {
      sub_23F93DADC((uint64_t)v45, type metadata accessor for TranscriptProtoQueryData);
      goto LABEL_23;
    }
    DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
    v54 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, DataEnum);
    v55 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, DataEnum);
    if (v54)
    {
      if (!v55)
      {
        v56 = (char *)&loc_23FA33E98 + 4 * byte_23FB8B338[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v55)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v45, type metadata accessor for TranscriptProtoQueryDataEnum);
          v64 = (char *)&loc_23FA34004 + 4 * byte_23FB8B33C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_34;
      }
      sub_23F93DADC((uint64_t)v45, type metadata accessor for TranscriptProtoQueryDataEnum);
    }
    v58 = sub_23F6916B8(&qword_256EA85B0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
LABEL_34:
    v69 = *(int *)(Data + 20);
    v70 = &v45[v69];
    v71 = &v46[v69];
    v72 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 40))(v70, v71, v72);
    goto LABEL_35;
  }
  if (v49)
  {
LABEL_23:
    v52 = sub_23F6916B8(&qword_256EA85C0);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_35;
  }
  v50 = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v46, 1, v50))
  {
    v57 = (char *)&loc_23FA33ED8 + 4 * byte_23FB8B334[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v51 = sub_23F6916B8(&qword_256EA85B0);
  memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  v65 = *(int *)(Data + 20);
  v66 = &v45[v65];
  v67 = &v46[v65];
  v68 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v45, 0, 1, Data);
LABEL_35:
  v73 = a3[7];
  v74 = (_QWORD *)((char *)a1 + v73);
  v75 = (_QWORD *)((char *)a2 + v73);
  v77 = *v75;
  v76 = v75[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  v78 = a3[8];
  v79 = (char *)a1 + v78;
  v80 = (char *)a2 + v78;
  v81 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 40))(v79, v80, v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA346FC()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA85D0);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA85C0);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3340();
      }
    }
    v4 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA34780()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA85D0);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA85C0);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC335C();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FA347F4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EB85E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionParameterContext);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB85E8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryData);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryStepResults(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v10 = *(_DWORD *)v11;
      v14 = v11[2];
      v10[1] = v11[1];
      v10[2] = v14;
      v15 = *(int *)(v12 + 24);
      v16 = (char *)v10 + v15;
      v17 = (char *)v11 + v15;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v20 = *(int *)(a3 + 28);
    v21 = (char *)v7 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoQueryStepResults(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoQueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoQueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoQueryStepResults(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoQueryStepResults(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (uint64_t)a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v23 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v23;
      swift_bridgeObjectRelease();
      v24 = *(int *)(v10 + 24);
      v25 = v8 + v24;
      v26 = v9 + v24;
      v27 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_23F93DADC(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v13 = *(int *)(v10 + 24);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v10);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryStepResults()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA350CC()
{
  sub_23FAC2058();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryStepResults()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA350E4()
{
  sub_23FAC20C0();
}

void sub_23FA350F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, MEMORY[0x24BEE0158] + 64, (uint64_t)&unk_23FB8EBA8, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoResponseDialog(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    v9 = *(int *)(a3 + 32);
    v10 = (char *)a2 + v9;
    v11 = (char *)a1 + v9;
    a1[6] = a2[6];
    a1[7] = v8;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v11, v10, v12);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoResponseDialog(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoResponseDialog(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a2 + v8;
  v10 = (char *)a1 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  v11 = sub_23FB2D718();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v10, v9, v11);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoResponseDialog(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoResponseDialog(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoResponseDialog(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseDialog()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA354EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23FAC3340();
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseDialog()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3553C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23FAC335C();
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

uint64_t sub_23FA35578()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2D718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoResponseOutput(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v8 = a3[7];
    v9 = (char *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TranscriptProtoDialogType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v13))
      {
        v15 = (char *)&loc_23FA35734 + 4 * byte_23FB8B340[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v14 = sub_23F6916B8(&qword_256EB2060);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      v16 = *(int *)(v11 + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v20 = a3[8];
    v21 = (char *)(v7 + v20);
    v22 = (char *)a2 + v20;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v20, 1, v11))
    {
      v23 = sub_23F6916B8(&qword_256EA85E8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v24))
      {
        v26 = (char *)&loc_23FA358E4 + 4 * byte_23FB8B345[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v25 = sub_23F6916B8(&qword_256EB2060);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      v27 = *(int *)(v11 + 20);
      v28 = &v21[v27];
      v29 = &v22[v27];
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v11);
    }
    v31 = a3[9];
    v32 = v7 + v31;
    v33 = (uint64_t)a2 + v31;
    v34 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoResponseOutput(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for TranscriptProtoDialogType(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v8 = type metadata accessor for TranscriptProtoStaticText(0);
          goto LABEL_8;
        case 1u:
          swift_bridgeObjectRelease();
          v8 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_8;
        case 2u:
          swift_bridgeObjectRelease();
          v8 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_8:
          v9 = v4 + *(int *)(v8 + 20);
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        case 3u:
        case 4u:
          v7 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + a2[8];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v5))
  {
    v14 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v16 = type metadata accessor for TranscriptProtoStaticText(0);
          goto LABEL_17;
        case 1u:
          swift_bridgeObjectRelease();
          v16 = type metadata accessor for TranscriptProtoSonicText(0);
          goto LABEL_17;
        case 2u:
          swift_bridgeObjectRelease();
          v16 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_17:
          v17 = v13 + *(int *)(v16 + 20);
          v18 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
          break;
        case 3u:
        case 4u:
          v15 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
          break;
        default:
          break;
      }
    }
    v19 = v13 + *(int *)(v5 + 20);
    v20 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  v21 = a1 + a2[9];
  v22 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDialogType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23FA35DC0 + 4 * byte_23FB8B354[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = a3[8];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v18, 1, v9))
  {
    v21 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22))
    {
      v24 = (char *)&loc_23FA35F70 + 4 * byte_23FB8B359[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v23 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v25 = *(int *)(v9 + 20);
    v26 = &v19[v25];
    v27 = &v20[v25];
    v28 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v9);
  }
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDialogType(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23FA36244 + 4 * byte_23FB8B363[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDialogFormat);
          v21 = (char *)&loc_23FA36328 + 4 * byte_23FB8B368[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v20 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23FA36290 + 4 * byte_23FB8B35E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EB2060);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = a3[8];
  v31 = (char *)(a1 + v30);
  v32 = (char *)(a2 + v30);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v30, 1, v9);
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v9);
  if (!v33)
  {
    if (v34)
    {
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_24;
    }
    v38 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v39 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v38);
    v40 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v38);
    if (v39)
    {
      if (!v40)
      {
        v41 = (char *)&loc_23FA3679C + 4 * byte_23FB8B372[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v40)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoDialogFormat);
          v44 = (char *)&loc_23FA36880 + 4 * byte_23FB8B377[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_34;
      }
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v43 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_34:
    v49 = *(int *)(v9 + 20);
    v50 = &v31[v49];
    v51 = &v32[v49];
    v52 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
    goto LABEL_35;
  }
  if (v34)
  {
LABEL_24:
    v37 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_35;
  }
  v35 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v35))
  {
    v42 = (char *)&loc_23FA367E8 + 4 * byte_23FB8B36D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v36 = sub_23F6916B8(&qword_256EB2060);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  v45 = *(int *)(v9 + 20);
  v46 = &v31[v45];
  v47 = &v32[v45];
  v48 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v9);
LABEL_35:
  v53 = a3[9];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDialogType(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v13 = (char *)&loc_23FA36D2C + 4 * byte_23FB8B37C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v12 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v14 = *(int *)(v9 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v18 = a3[8];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v18, 1, v9))
  {
    v21 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22))
    {
      v24 = (char *)&loc_23FA36EC8 + 4 * byte_23FB8B381[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v23 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v25 = *(int *)(v9 + 20);
    v26 = &v19[v25];
    v27 = &v20[v25];
    v28 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v9);
  }
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoResponseOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDialogType(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_23FA37170 + 4 * byte_23FB8B38B[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDialogFormat);
          v21 = (char *)&loc_23FA37254 + 4 * byte_23FB8B390[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v20 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v9 + 20);
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_18;
  }
  v12 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v19 = (char *)&loc_23FA371BC + 4 * byte_23FB8B386[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v13 = sub_23F6916B8(&qword_256EB2060);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  v22 = *(int *)(v9 + 20);
  v23 = &v7[v22];
  v24 = &v8[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  v30 = a3[8];
  v31 = (char *)(a1 + v30);
  v32 = (char *)(a2 + v30);
  v33 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v30, 1, v9);
  v34 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v9);
  if (!v33)
  {
    if (v34)
    {
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_24;
    }
    v38 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v39 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v38);
    v40 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v38);
    if (v39)
    {
      if (!v40)
      {
        v41 = (char *)&loc_23FA37634 + 4 * byte_23FB8B39A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v40)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoDialogFormat);
          v44 = (char *)&loc_23FA37718 + 4 * byte_23FB8B39F[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_34;
      }
      sub_23F93DADC((uint64_t)v31, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v43 = sub_23F6916B8(&qword_256EB2060);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_34:
    v49 = *(int *)(v9 + 20);
    v50 = &v31[v49];
    v51 = &v32[v49];
    v52 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
    goto LABEL_35;
  }
  if (v34)
  {
LABEL_24:
    v37 = sub_23F6916B8(&qword_256EA85E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_35;
  }
  v35 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v35))
  {
    v42 = (char *)&loc_23FA37680 + 4 * byte_23FB8B395[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v36 = sub_23F6916B8(&qword_256EB2060);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  v45 = *(int *)(v9 + 20);
  v46 = &v31[v45];
  v47 = &v32[v45];
  v48 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v9);
LABEL_35:
  v53 = a3[9];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA37A38()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA85E8);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0AFC();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3508();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA37AA0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA85E8);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BB8();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3534();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FA37AF8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23F6DE58C(319, qword_256EB87C8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogType);
  if (v0 <= 0x3F)
  {
    sub_23FB2D718();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoVisualOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoVisualOutputType(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23FA37C6C + 4 * byte_23FB8B3A4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA2660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoVisualOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
        goto LABEL_6;
      case 1u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
        goto LABEL_6;
      case 2u:
        sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        v5 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
LABEL_6:
        v6 = *(int *)(v5 + 20);
        goto LABEL_8;
      case 3u:
        sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        swift_bridgeObjectRelease();
        v6 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
LABEL_8:
        v7 = a1 + v6;
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for TranscriptProtoVisualOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA37F5C + 4 * byte_23FB8B3AC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA2660);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoVisualOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA38128 + 4 * byte_23FB8B3B0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoVisualOutputType);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoVisualOutputType);
    v11 = (char *)&loc_23FA38200 + 4 * byte_23FB8B3B4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoVisualOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA385B0 + 4 * byte_23FB8B3B8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA2660);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoVisualOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA38720 + 4 * byte_23FB8B3BC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoVisualOutputType);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2660);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoVisualOutputType);
    v11 = (char *)&loc_23FA387AC + 4 * byte_23FB8B3C0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVisualOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA389C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA2660);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVisualOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA389D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA2660);
}

void sub_23FA389E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB8870, (void (*)(uint64_t))type metadata accessor for TranscriptProtoVisualOutputType);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoVisualOutputType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA38A50 + 4 * byte_23FB8B3C4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoVisualOutputType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
      goto LABEL_5;
    case 2:
      sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      v3 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
LABEL_5:
      v4 = *(int *)(v3 + 20);
      goto LABEL_7;
    case 3:
      sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease();
      v4 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0) + 24);
LABEL_7:
      v5 = a1 + v4;
      v6 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoVisualOutputType()
{
  char *v0;

  v0 = (char *)sub_23FA38D18 + 4 * byte_23FB8B3CC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA38D18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_23FB2D718();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoVisualOutputType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoVisualOutputType);
    v2 = (char *)&loc_23FA38E80 + 4 * byte_23FB8B3D0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoVisualOutputType()
{
  char *v0;

  v0 = (char *)sub_23FA38FE4 + 4 * byte_23FB8B3D4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_23FA38FE4()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoVisualOutputType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoVisualOutputType);
    v2 = (char *)&loc_23FA390EC + 4 * byte_23FB8B3D8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23FA39190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA159FC(a1, a2, a3, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (void (*)(uint64_t))type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLiveActivityOutputPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLiveActivityOutputPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInAppResponseOutputPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInAppResponseOutputPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemSnippetOutputPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemSnippetOutputPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA39228()
{
  sub_23FABE678();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPluginSnippetOutputPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPluginSnippetOutputPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3926C()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDialogType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23FA39340 + 4 * byte_23FB8B3DC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EB2060);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoDialogType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for TranscriptProtoStaticText(0);
        goto LABEL_7;
      case 1u:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for TranscriptProtoSonicText(0);
        goto LABEL_7;
      case 2u:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_7:
        v7 = a1 + *(int *)(v6 + 20);
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      case 3u:
      case 4u:
        v5 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      default:
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for TranscriptProtoDialogType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA396AC + 4 * byte_23FB8B3E6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB2060);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoDialogType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA398FC + 4 * byte_23FB8B3EB[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoDialogFormat);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB2060);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoDialogFormat);
    v11 = (char *)&loc_23FA399D4 + 4 * byte_23FB8B3F0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoDialogType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA39D6C + 4 * byte_23FB8B3F5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB2060);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoDialogType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA39EE4 + 4 * byte_23FB8B3FA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoDialogFormat);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB2060);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoDialogFormat);
    v11 = (char *)&loc_23FA39F7C + 4 * byte_23FB8B3FF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDialogType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA3A1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB2060);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDialogType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA3A1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB2060);
}

void sub_23FA3A1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB8BF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDialogFormat);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoDialogFormat(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA3A230 + 4 * byte_23FB8B404[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoDialogFormat(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoStaticText(0);
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoSonicText(0);
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_5:
      a1 += *(int *)(v3 + 20);
      goto LABEL_6;
    case 3:
    case 4:
LABEL_6:
      v4 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoDialogFormat()
{
  char *v0;

  v0 = (char *)sub_23FA3A4C8 + 4 * byte_23FB8B40E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA3A4C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = *(int *)(type metadata accessor for TranscriptProtoStaticText(0) + 20);
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_23FB2D718();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  v7(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoDialogFormat(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoDialogFormat);
    v2 = (char *)&loc_23FA3A6B0 + 4 * byte_23FB8B413[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoDialogFormat()
{
  char *v0;

  v0 = (char *)sub_23FA3A898 + 4 * byte_23FB8B418[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FA3A898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoDialogFormat(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoDialogFormat);
    v2 = (char *)&loc_23FA3A9A4 + 4 * byte_23FB8B41D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FA3AA4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for TranscriptProtoStaticText(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoSonicText(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoGeneratedText(319);
      if (v3 <= 0x3F)
      {
        result = sub_23FB2D718();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStaticText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStaticText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSonicText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSonicText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoGeneratedText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoGeneratedText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUnableToGenerate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUnableToGenerate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSuppressed()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSuppressed()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoResponseManifest(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoResponseDialog(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA8000);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v10[1];
      *v9 = *v10;
      v9[1] = v13;
      v14 = v10[3];
      v9[2] = v10[2];
      v9[3] = v14;
      v15 = v10[5];
      v9[4] = v10[4];
      v9[5] = v15;
      v16 = v10[7];
      v9[6] = v10[6];
      v9[7] = v16;
      v17 = *(int *)(v11 + 32);
      v45 = (char *)v10 + v17;
      v46 = (char *)v9 + v17;
      v18 = sub_23FB2D718();
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v46, v45, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v19 = a3[6];
    v20 = (_QWORD *)((char *)v7 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA8008);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = v21[1];
      *v20 = *v21;
      v20[1] = v24;
      v25 = *(int *)(v22 + 24);
      v26 = (char *)v20 + v25;
      v47 = (char *)v21 + v25;
      v27 = sub_23FB2D718();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28(v26, v47, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v29 = a3[7];
    v30 = a3[8];
    v31 = (_QWORD *)((char *)v7 + v29);
    v32 = (_QWORD *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = (_QWORD *)((char *)v7 + v30);
    v35 = (_QWORD *)((char *)a2 + v30);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = a3[10];
    *((_BYTE *)v7 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v7 + v37) = *((_BYTE *)a2 + v37);
    v38 = a3[11];
    v39 = (char *)v7 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_23FB2D718();
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoResponseManifest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoResponseDialog(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 32);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  v9 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1 + a2[11];
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for TranscriptProtoResponseManifest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  char *v45;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    v13 = v8[5];
    v7[4] = v8[4];
    v7[5] = v13;
    v14 = v8[7];
    v7[6] = v8[6];
    v7[7] = v14;
    v15 = *(int *)(v9 + 32);
    v43 = (char *)v8 + v15;
    v44 = (char *)v7 + v15;
    v16 = sub_23FB2D718();
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v44, v43, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA8008);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = v19[1];
    *v18 = *v19;
    v18[1] = v22;
    v23 = *(int *)(v20 + 24);
    v24 = (char *)v18 + v23;
    v45 = (char *)v19 + v23;
    v25 = sub_23FB2D718();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v24, v45, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v27 = a3[7];
  v28 = a3[8];
  v29 = (_QWORD *)((char *)a1 + v27);
  v30 = (_QWORD *)((char *)a2 + v27);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = (_QWORD *)((char *)a1 + v28);
  v33 = (_QWORD *)((char *)a2 + v28);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_23FB2D718();
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(v37, v38, v39);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoResponseManifest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      v7[6] = v8[6];
      v7[7] = v8[7];
      v12 = *(int *)(v9 + 32);
      v46 = (char *)v8 + v12;
      v47 = (char *)v7 + v12;
      v13 = sub_23FB2D718();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v47, v46, v13);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoResponseDialog);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  v7[5] = v8[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[6] = v8[6];
  v7[7] = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = *(int *)(v9 + 32);
  v38 = (char *)v7 + v37;
  v39 = (char *)v8 + v37;
  v40 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = type metadata accessor for TranscriptProtoResponseVisual(0);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v18);
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (!v20)
    {
      *v16 = *v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v41 = *(int *)(v18 + 24);
      v42 = (char *)v16 + v41;
      v43 = (char *)v17 + v41;
      v44 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v16, type metadata accessor for TranscriptProtoResponseVisual);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v25 = sub_23F6916B8(&qword_256EA8008);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *v16 = *v17;
  v16[1] = v17[1];
  v21 = *(int *)(v18 + 24);
  v22 = (char *)v16 + v21;
  v48 = (char *)v17 + v21;
  v23 = sub_23FB2D718();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v22, v48, v23);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_13:
  v26 = a3[7];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v32 = a3[11];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoResponseManifest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v7[1] = v11;
    v12 = v8[3];
    v7[2] = v8[2];
    v7[3] = v12;
    v13 = *(int *)(v9 + 32);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = (_OWORD *)((char *)a1 + v17);
  v19 = (_OWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for TranscriptProtoResponseVisual(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA8008);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v22 = *(int *)(v20 + 24);
    v23 = (char *)v18 + v22;
    v24 = (char *)v19 + v22;
    v25 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v26 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
  v27 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  v28 = a3[11];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoResponseManifest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoResponseDialog(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v12 = *((_OWORD *)v8 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v8;
      *((_OWORD *)v7 + 1) = v12;
      v13 = *((_OWORD *)v8 + 3);
      *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
      *((_OWORD *)v7 + 3) = v13;
      v14 = *(int *)(v9 + 32);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoResponseDialog);
LABEL_6:
    v18 = sub_23F6916B8(&qword_256EA8000);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v46 = v8[1];
  *v7 = *v8;
  v7[1] = v46;
  swift_bridgeObjectRelease();
  v47 = v8[3];
  v7[2] = v8[2];
  v7[3] = v47;
  swift_bridgeObjectRelease();
  v48 = v8[5];
  v7[4] = v8[4];
  v7[5] = v48;
  swift_bridgeObjectRelease();
  v49 = v8[7];
  v7[6] = v8[6];
  v7[7] = v49;
  swift_bridgeObjectRelease();
  v50 = *(int *)(v9 + 32);
  v51 = (char *)v7 + v50;
  v52 = (char *)v8 + v50;
  v53 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
LABEL_7:
  v19 = a3[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for TranscriptProtoResponseVisual(0);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22);
  v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      *v20 = *v21;
      swift_bridgeObjectRelease();
      v20[1] = v21[1];
      swift_bridgeObjectRelease();
      v54 = *(int *)(v22 + 24);
      v55 = (char *)v20 + v54;
      v56 = (char *)v21 + v54;
      v57 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v20, type metadata accessor for TranscriptProtoResponseVisual);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v29 = sub_23F6916B8(&qword_256EA8008);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v25 = *(int *)(v22 + 24);
  v26 = (char *)v20 + v25;
  v27 = (char *)v21 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_13:
  v30 = a3[7];
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[8];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v40) = *((_BYTE *)a2 + v40);
  v41 = a3[11];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseManifest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA3BAD4()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA8000);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6916B8(&qword_256EA8008);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0B08();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3C44();
      }
    }
    v4 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseManifest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3BB58()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA8000);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6916B8(&qword_256EA8008);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BD0();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3C78();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FA3BBCC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, &qword_256EB9008, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseDialog);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB9010, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseVisual);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoResponseParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2 + 2;
    v9 = a2[3];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 16) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      sub_23F6D1E20(v11, v9);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v9;
    }
    v12 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v13 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v13;
    v14 = *((_BYTE *)a2 + 72);
    v15 = *(int *)(a3 + 40);
    v16 = (uint64_t)a2 + v15;
    v17 = a1 + v15;
    *(_BYTE *)(a1 + 72) = v14;
    v18 = sub_23FB2D718();
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v17, v16, v18);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 24);
  if (v4 >> 60 != 15)
    sub_23F6BC34C(*(_QWORD *)(a1 + 16), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 40);
  v6 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_23F6D1E20(v9, v8);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v8;
  }
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  v12 = *(_BYTE *)(a2 + 72);
  v13 = *(int *)(a3 + 40);
  v14 = a2 + v13;
  v15 = a1 + v13;
  *(_BYTE *)(a1 + 72) = v12;
  v16 = sub_23FB2D718();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v15, v14, v16);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_23F6D1E20(*v6, *(_QWORD *)(a2 + 24));
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v7;
      sub_23F6BC34C(v10, v11);
      goto LABEL_8;
    }
    sub_23F6DC470(a1 + 16);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_23F6D1E20(*v6, *(_QWORD *)(a2 + 24));
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v7;
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v12 = *(int *)(a3 + 40);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 40);
  v6 = a2 + v5;
  v7 = a1 + v5;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoResponseParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  if (v8 >> 60 != 15)
  {
    v9 = *(_QWORD *)(a2 + 24);
    if (v9 >> 60 != 15)
    {
      v10 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 16) = *v7;
      *(_QWORD *)(a1 + 24) = v9;
      sub_23F6BC34C(v10, v8);
      goto LABEL_6;
    }
    sub_23F6DC470(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
LABEL_6:
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v13 = *(int *)(a3 + 40);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA3C1E0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23FAC3C38();
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3C230()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    sub_23FAC3C6C();
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

uint64_t sub_23FA3C26C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FB2D718();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResponseVisual()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResponseVisual()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3C338()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoUIType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoUitype(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23FA3C414 + 4 * byte_23FB8B422[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EA2650);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoUIType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoUitype(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
        goto LABEL_8;
      case 1u:
        swift_bridgeObjectRelease();
        v6 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
        goto LABEL_7;
      case 2u:
        sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
        goto LABEL_8;
      case 3u:
        sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        v6 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_7:
        v5 = *(int *)(v6 + 20);
LABEL_8:
        v7 = a1 + v5;
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

char *initializeWithCopy for TranscriptProtoUIType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoUitype(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA3C780 + 4 * byte_23FB8B42A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA2650);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoUIType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoUitype(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA3C9B0 + 4 * byte_23FB8B42E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoUitype);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2650);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoUitype);
    v11 = (char *)&loc_23FA3CAB4 + 4 * byte_23FB8B432[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoUIType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoUitype(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA3CE90 + 4 * byte_23FB8B436[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EA2650);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoUIType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoUitype(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA3D00C + 4 * byte_23FB8B43A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoUitype);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EA2650);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoUitype);
    v11 = (char *)&loc_23FA3D0A4 + 4 * byte_23FB8B43E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUIType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA3D2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA2650);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUIType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA3D2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA2650);
}

void sub_23FA3D2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB9200, (void (*)(uint64_t))type metadata accessor for TranscriptProtoUitype);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoUitype(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA3D350 + 4 * byte_23FB8B442[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoUitype(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
      goto LABEL_7;
    case 1:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
      goto LABEL_6;
    case 2:
      sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      swift_bridgeObjectRelease();
      v3 = *(int *)(type metadata accessor for TranscriptProtoPluginSnippetPayload(0) + 24);
      goto LABEL_7;
    case 3:
      sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      v4 = type metadata accessor for TranscriptProtoControlPayload(0);
LABEL_6:
      v3 = *(int *)(v4 + 20);
LABEL_7:
      v5 = a1 + v3;
      v6 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoUitype()
{
  char *v0;

  v0 = (char *)sub_23FA3D654 + 4 * byte_23FB8B44A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t *sub_23FA3D654()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v2 = *v1;
  v3 = v1[1];
  sub_23F6D1E20(*v1, v3);
  *v0 = v2;
  v0[1] = v3;
  v4 = v1[3];
  v0[2] = v1[2];
  v0[3] = v4;
  v5 = v1[5];
  v0[4] = v1[4];
  v0[5] = v5;
  v6 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
  v7 = (char *)v0 + v6;
  v8 = (char *)v1 + v6;
  v9 = sub_23FB2D718();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoUitype(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoUitype);
    v2 = (char *)&loc_23FA3D820 + 4 * byte_23FB8B44E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoUitype()
{
  char *v0;

  v0 = (char *)sub_23FA3D9EC + 4 * byte_23FB8B452[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_23FA3D9EC()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v0[2] = v1[2];
  v3 = *(int *)(type metadata accessor for TranscriptProtoArchiveViewPayload(0) + 28);
  v4 = (char *)v0 + v3;
  v5 = (char *)v1 + v3;
  v6 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoUitype(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoUitype);
    v2 = (char *)&loc_23FA3DB00 + 4 * byte_23FB8B456[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23FA3DBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA159FC(a1, a2, a3, type metadata accessor for TranscriptProtoArchiveViewPayload, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLiveActivityPayload, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPluginSnippetPayload, (void (*)(uint64_t))type metadata accessor for TranscriptProtoControlPayload);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoUILabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoLabel(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA2640);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      v12 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoUILabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoLabel(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for TranscriptProtoUILabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for TranscriptProtoLabel(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2640);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23FB2D718();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoUILabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoLabel(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoLabel);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2640);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v9 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23FB2D718();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoUILabel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoLabel(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA2640);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoUILabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoLabel(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRelease();
      v21 = a2[3];
      a1[2] = a2[2];
      a1[3] = v21;
      swift_bridgeObjectRelease();
      v22 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoLabel);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA2640);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  v10 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUILabel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA3E340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA2640);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUILabel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA3E358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA2640);
}

void sub_23FA3E364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB9340, (void (*)(uint64_t))type metadata accessor for TranscriptProtoLabel);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoLabel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v3 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for TranscriptProtoLabel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoLabel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoLabel(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoLabel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for TranscriptProtoUIConfirmationLabel(0) + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLabel()
{
  type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLabel()
{
  type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3E738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA2CB74(a1, a2, a3, type metadata accessor for TranscriptProtoUIConfirmationLabel);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoUIConfirmationLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FB2D718();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoUIConfirmationLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoUIConfirmationLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoUIConfirmationLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoUIConfirmationLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUIConfirmationLabel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUIConfirmationLabel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3EA08()
{
  sub_23F6ECB8C();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_23F6D1E20(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[4];
    v11 = a2[5];
    v12 = *(int *)(a3 + 28);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    a1[4] = v10;
    a1[5] = v11;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoArchiveViewPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_23F6BC34C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *initializeWithCopy for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  v6 = *a2;
  v7 = a2[1];
  sub_23F6D1E20(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[4];
  v10 = a2[5];
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  a1[4] = v9;
  a1[5] = v10;
  v14 = sub_23FB2D718();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = *a2;
  v7 = a2[1];
  sub_23F6D1E20(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_23F6BC34C(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t *assignWithTake for TranscriptProtoArchiveViewPayload(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_23F6BC34C(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23FB2D718();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoArchiveViewPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA3ED44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0AC8();
  if (v2)
  {
    sub_23F6F0880(*(_QWORD *)(v0 + 24));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 28));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoArchiveViewPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3ED98()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F09B0();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = v0;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 28));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA3EDDC()
{
  sub_23FAC17B0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLiveActivityPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLiveActivityPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  sub_23F877920();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F876A58(*a2);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    sub_23FAC32B0();
    *v2 = v5;
    v2[1] = v6;
    v7 = a2[3];
    v2[2] = a2[2];
    v2[3] = v7;
    v8 = *(void (**)(uint64_t))(*(_QWORD *)(sub_23F6B53A4() - 8) + 16);
    sub_23F6B5F1C();
    v9 = sub_23F70DC34();
    v8(v9);
  }
  sub_23F6B5F7C();
}

uint64_t _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FAC39A0(a1);
  sub_23F6B6A60();
  sub_23F6B53A4();
  v1 = sub_23F87922C();
  return sub_23F8776C4(v1, v2, v3);
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);

  sub_23FAC2F40(a1, a2);
  *v4 = v5;
  v4[1] = v6;
  v7 = *(_QWORD *)(v3 + 24);
  v4[2] = *(_QWORD *)(v3 + 16);
  v4[3] = v7;
  v8 = *(int *)(v2 + 24);
  v9 = (char *)v4 + v8;
  v10 = v3 + v8;
  v11 = sub_23F6B53A4();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  sub_23F6B5F1C();
  v12(v9, v10, v11);
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC2F40(a1, a2);
  sub_23FAC3D50();
  sub_23FAC3890();
  sub_23F6B5908();
  v4 = v3 + *(int *)(v2 + 24);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwtk_0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  uint64_t v3;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  v3 = sub_23F6B53A4();
  sub_23FAC2C18(v3);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport35TranscriptProtoPluginSnippetPayloadVwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3460(a1, a2);
  sub_23FAC3BA8();
  v4 = v3 + *(int *)(v2 + 24);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPluginSnippetPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA3F004()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 24));
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 24));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPluginSnippetPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3F05C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6F0850();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 24));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F877920();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F876A58(*a2);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    sub_23FAC32B0();
    *v2 = v5;
    v2[1] = v6;
    v7 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  }
  sub_23F6B5F7C();
}

uint64_t _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_23FAC39A0(a1);
  sub_23F6B53A4();
  v1 = sub_23F87922C();
  return sub_23F8776C4(v1, v2, v3);
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FAC2F40(a1, a2);
  *v3 = v4;
  v3[1] = v5;
  v6 = (uint64_t)v3 + *(int *)(v2 + 20);
  v7 = sub_23F6B53A4();
  sub_23F7B0990(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC2F40(a1, a2);
  sub_23FAC3D50();
  v4 = v3 + *(int *)(v2 + 20);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoControlPayloadVwta_0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3460(a1, a2);
  v4 = v3 + *(int *)(v2 + 20);
  v5 = sub_23F6B53A4();
  sub_23F7B0990(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoControlPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA3F21C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 12)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoControlPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA3F294(_QWORD *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 12)
  {
    *a1 = 0;
    a1[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v3 = sub_23FAC3540();
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolution(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int EnumCaseMultiPayload;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  _QWORD *__dst;
  char *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA8658);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_17;
    }
    v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EB21D0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
LABEL_16:
      v24 = *(int *)(v12 + 20);
      v25 = &v10[v24];
      v26 = &v11[v24];
      v27 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_17:
      v28 = a3[7];
      v29 = (_QWORD *)((char *)v4 + v28);
      v30 = (_QWORD *)((char *)a2 + v28);
      v31 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, v31))
      {
        v32 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v29 = *(_DWORD *)v30;
        v33 = v30[2];
        v29[1] = v30[1];
        v29[2] = v33;
        v34 = *(int *)(v31 + 24);
        v35 = (char *)v29 + v34;
        v36 = (char *)v30 + v34;
        v37 = sub_23FB2D718();
        v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v38(v35, v36, v37);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v31);
      }
      v39 = a3[8];
      v40 = (_QWORD *)((char *)v4 + v39);
      v41 = (_QWORD *)((char *)a2 + v39);
      v42 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v42))
      {
        v43 = sub_23F6916B8(&qword_256EA8648);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_35:
        v66 = a3[9];
        v67 = (char *)v4 + v66;
        v68 = (char *)a2 + v66;
        v69 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        return v4;
      }
      v44 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v44))
      {
        v45 = sub_23F6916B8(&qword_256EB2130);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
LABEL_34:
        v62 = *(int *)(v42 + 20);
        v63 = (char *)v40 + v62;
        v64 = (char *)v41 + v62;
        v65 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v42);
        goto LABEL_35;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *v40 = *v41;
        v52 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v75 = (char *)v41 + v52;
        __dsta = (char *)v40 + v52;
        v53 = sub_23FB2D718();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(__dsta, v75, v53);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
LABEL_33:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v44);
          goto LABEL_34;
        }
        v47 = v41[1];
        *v40 = *v41;
        v40[1] = v47;
        v48 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v49 = *(int *)(v48 + 20);
        v74 = v48;
        __dst = (_QWORD *)((char *)v40 + v49);
        v50 = (_QWORD *)((char *)v41 + v49);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v31))
        {
          v51 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(__dst, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v50;
          v55 = v50[2];
          __dst[1] = v50[1];
          __dst[2] = v55;
          v56 = *(int *)(v31 + 24);
          v72 = (char *)v50 + v56;
          v73 = (char *)__dst + v56;
          v57 = sub_23FB2D718();
          v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
          swift_bridgeObjectRetain();
          v71(v73, v72, v57);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v31);
        }
        v58 = *(int *)(v74 + 24);
        v59 = (char *)v40 + v58;
        v60 = (char *)v41 + v58;
        v61 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_33;
    }
    v17 = swift_getEnumCaseMultiPayload();
    switch(v17)
    {
      case 6:
        v19 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v11, v19);
        break;
      case 5:
        *v10 = *v11;
        v20 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v21 = &v10[v20];
        v22 = &v11[v20];
        v23 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        break;
      case 1:
        v18 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_15;
    }
    swift_storeEnumTagMultiPayload();
LABEL_15:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v15);
    goto LABEL_16;
  }
  v14 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for TranscriptProtoSystemPromptResolution(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v8 = sub_23FB2D718();
          goto LABEL_8;
        case 5:
          v9 = v4
             + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        case 1:
          v8 = sub_23FB2EB1C();
LABEL_8:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + a2[7];
  v14 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    v15 = v13 + *(int *)(v14 + 24);
    v16 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = a1 + a2[8];
  v18 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v18))
  {
    v19 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v19))
    {
      v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 1)
      {
        swift_bridgeObjectRelease();
        v25 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
LABEL_21:
        v26 = v17 + v25;
        v27 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
        goto LABEL_22;
      }
      if (!v20)
      {
        swift_bridgeObjectRelease();
        v21 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v22 = v17 + *(int *)(v21 + 20);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v22, 1, v14))
        {
          swift_bridgeObjectRelease();
          v23 = v22 + *(int *)(v14 + 24);
          v24 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
        }
        v25 = *(int *)(v21 + 24);
        goto LABEL_21;
      }
    }
LABEL_22:
    v28 = v17 + *(int *)(v18 + 20);
    v29 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
  }
  v30 = a1 + a2[9];
  v31 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemPromptResolution(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  _QWORD *__dst;
  char *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
  {
    v12 = sub_23F6916B8(&qword_256EA8658);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v13))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v17 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
        break;
      case 5:
        *v9 = *v10;
        v18 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v19 = &v9[v18];
        v20 = &v10[v18];
        v21 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      case 1:
        v16 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
        break;
      default:
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v13);
    goto LABEL_14;
  }
  v14 = sub_23F6916B8(&qword_256EB21D0);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_14:
  v22 = *(int *)(v11 + 20);
  v23 = &v9[v22];
  v24 = &v10[v22];
  v25 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_15:
  v26 = a3[7];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29))
  {
    v30 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v31 = v28[2];
    v27[1] = v28[1];
    v27[2] = v31;
    v32 = *(int *)(v29 + 24);
    v33 = (char *)v27 + v32;
    v34 = (char *)v28 + v32;
    v35 = sub_23FB2D718();
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v29);
  }
  v37 = a3[8];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
  {
    v42 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v42))
    {
      v43 = sub_23F6916B8(&qword_256EB2130);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_32:
      v60 = *(int *)(v40 + 20);
      v61 = (char *)v38 + v60;
      v62 = (char *)v39 + v60;
      v63 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(v61, v62, v63);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_33;
    }
    v44 = swift_getEnumCaseMultiPayload();
    if (v44 == 1)
    {
      *v38 = *v39;
      v50 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v73 = (char *)v39 + v50;
      __dsta = (char *)v38 + v50;
      v51 = sub_23FB2D718();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      swift_bridgeObjectRetain();
      v52(__dsta, v73, v51);
    }
    else
    {
      if (v44)
      {
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_31:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v42);
        goto LABEL_32;
      }
      v45 = v39[1];
      *v38 = *v39;
      v38[1] = v45;
      v46 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v47 = *(int *)(v46 + 20);
      v72 = v46;
      __dst = (_QWORD *)((char *)v38 + v47);
      v48 = (_QWORD *)((char *)v39 + v47);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v48, 1, v29))
      {
        v49 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        *(_DWORD *)__dst = *(_DWORD *)v48;
        v53 = v48[2];
        __dst[1] = v48[1];
        __dst[2] = v53;
        v54 = *(int *)(v29 + 24);
        v70 = (char *)v48 + v54;
        v71 = (char *)__dst + v54;
        v55 = sub_23FB2D718();
        v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v69(v71, v70, v55);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v29);
      }
      v56 = *(int *)(v72 + 24);
      v57 = (char *)v38 + v56;
      v58 = (char *)v39 + v56;
      v59 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  v41 = sub_23F6916B8(&qword_256EA8648);
  memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_33:
  v64 = a3[9];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  v67 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemPromptResolution(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  int v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  void (*v133)(char *, char *, uint64_t);
  void (*v134)(char *, char *, uint64_t);
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstc;
  _QWORD *__dstb;
  char *__dstd;
  char *__dste;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EB21D0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_27:
        v28 = *(int *)(v9 + 20);
        v29 = &v7[v28];
        v30 = &v8[v28];
        v31 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v23 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v7, v8, v23);
          break;
        case 5:
          *v7 = *v8;
          v24 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v25 = &v7[v24];
          v26 = &v8[v24];
          v27 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
          break;
        case 1:
          v21 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v7, v8, v21);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_27;
    }
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA8658);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    goto LABEL_7;
  }
  v15 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
  v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      v18 = swift_getEnumCaseMultiPayload();
      switch(v18)
      {
        case 6:
          v34 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v7, v8, v34);
          break;
        case 5:
          *v7 = *v8;
          v35 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v36 = &v7[v35];
          v37 = &v8[v35];
          v38 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
          break;
        case 1:
          v19 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v8, v19);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v17)
    {
      if (a1 == a2)
        goto LABEL_41;
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v32 = swift_getEnumCaseMultiPayload();
      switch(v32)
      {
        case 6:
          v39 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v7, v8, v39);
          break;
        case 5:
          *v7 = *v8;
          v40 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v41 = &v7[v40];
          v42 = &v8[v40];
          v43 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
          break;
        case 1:
          v33 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v7, v8, v33);
          break;
        default:
          v22 = *(_QWORD *)(v15 - 8);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  v22 = *(_QWORD *)(sub_23F6916B8(&qword_256EB21D0) - 8);
LABEL_21:
  memcpy(v7, v8, *(_QWORD *)(v22 + 64));
LABEL_41:
  v44 = *(int *)(v9 + 20);
  v45 = &v7[v44];
  v46 = &v8[v44];
  v47 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
LABEL_42:
  v48 = a3[7];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  v51 = type metadata accessor for TranscriptProtoStatementID(0);
  v52 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v49, 1, v51);
  v53 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v51);
  if (v52)
  {
    if (!v53)
    {
      *(_DWORD *)v49 = *(_DWORD *)v50;
      v49[1] = v50[1];
      v49[2] = v50[2];
      v54 = *(int *)(v51 + 24);
      v55 = (char *)v49 + v54;
      v56 = (char *)v50 + v54;
      v57 = sub_23FB2D718();
      v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, v51);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v53)
  {
    sub_23F93DADC((uint64_t)v49, type metadata accessor for TranscriptProtoStatementID);
LABEL_47:
    v59 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_48;
  }
  *(_DWORD *)v49 = *(_DWORD *)v50;
  v49[1] = v50[1];
  v49[2] = v50[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69 = *(int *)(v51 + 24);
  v70 = (char *)v49 + v69;
  v71 = (char *)v50 + v69;
  v72 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v70, v71, v72);
LABEL_48:
  v60 = a3[8];
  v61 = (_QWORD *)((char *)a1 + v60);
  v62 = (_QWORD *)((char *)a2 + v60);
  v63 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v61, 1, v63);
  v65 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v63);
  if (!v64)
  {
    if (v65)
    {
      sub_23F93DADC((uint64_t)v61, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
      goto LABEL_54;
    }
    v73 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    v74 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v61, 1, v73);
    v75 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v73);
    if (v74)
    {
      if (!v75)
      {
        v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 1)
        {
          *v61 = *v62;
          v95 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          __dstd = (char *)v62 + v95;
          v151 = (char *)v61 + v95;
          v96 = sub_23FB2D718();
          v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
          swift_bridgeObjectRetain();
          v97(v151, __dstd, v96);
        }
        else
        {
          if (v76)
          {
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
LABEL_87:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v73);
            goto LABEL_88;
          }
          *v61 = *v62;
          v61[1] = v62[1];
          v77 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v78 = *(int *)(v77 + 20);
          __dst = (_QWORD *)((char *)v61 + v78);
          v147 = v77;
          v79 = (_QWORD *)((char *)v62 + v78);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v79, 1, v51))
          {
            v80 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dst = *(_DWORD *)v79;
            __dst[1] = v79[1];
            __dst[2] = v79[2];
            v108 = *(int *)(v51 + 24);
            v136 = (char *)v79 + v108;
            v139 = (char *)__dst + v108;
            v109 = sub_23FB2D718();
            v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16);
            swift_bridgeObjectRetain();
            v133(v139, v136, v109);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v51);
          }
          v110 = *(int *)(v147 + 24);
          v111 = (char *)v61 + v110;
          v112 = (char *)v62 + v110;
          v113 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16))(v111, v112, v113);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_87;
      }
    }
    else
    {
      if (!v75)
      {
        if (a1 == a2)
          goto LABEL_88;
        sub_23F93DADC((uint64_t)v61, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
        v90 = swift_getEnumCaseMultiPayload();
        if (v90 == 1)
        {
          *v61 = *v62;
          v123 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          __dste = (char *)v62 + v123;
          v152 = (char *)v61 + v123;
          v124 = sub_23FB2D718();
          v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
          swift_bridgeObjectRetain();
          v125(v152, __dste, v124);
        }
        else
        {
          if (v90)
          {
            v86 = *(_QWORD *)(v73 - 8);
            goto LABEL_69;
          }
          *v61 = *v62;
          v61[1] = v62[1];
          v91 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v92 = *(int *)(v91 + 20);
          __dstb = (_QWORD *)((char *)v61 + v92);
          v150 = v91;
          v93 = (_QWORD *)((char *)v62 + v92);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v93, 1, v51))
          {
            v94 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(__dstb, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            *(_DWORD *)__dstb = *(_DWORD *)v93;
            __dstb[1] = v93[1];
            __dstb[2] = v93[2];
            v126 = *(int *)(v51 + 24);
            v137 = (char *)v93 + v126;
            v140 = (char *)__dstb + v126;
            v127 = sub_23FB2D718();
            v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
            swift_bridgeObjectRetain();
            v134(v140, v137, v127);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dstb, 0, 1, v51);
          }
          v128 = *(int *)(v150 + 24);
          v129 = (char *)v61 + v128;
          v130 = (char *)v62 + v128;
          v131 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_88;
      }
      sub_23F93DADC((uint64_t)v61, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    }
    v86 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2130) - 8);
LABEL_69:
    memcpy(v61, v62, *(_QWORD *)(v86 + 64));
LABEL_88:
    v114 = *(int *)(v63 + 20);
    v115 = (char *)v61 + v114;
    v116 = (char *)v62 + v114;
    v117 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 24))(v115, v116, v117);
    goto LABEL_89;
  }
  if (!v65)
  {
    v66 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v66))
    {
      v67 = sub_23F6916B8(&qword_256EB2130);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
LABEL_83:
      v104 = *(int *)(v63 + 20);
      v105 = (char *)v61 + v104;
      v106 = (char *)v62 + v104;
      v107 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16))(v105, v106, v107);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v63);
      goto LABEL_89;
    }
    v81 = swift_getEnumCaseMultiPayload();
    if (v81 == 1)
    {
      *v61 = *v62;
      v87 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      __dstc = (char *)v62 + v87;
      v149 = (char *)v61 + v87;
      v88 = sub_23FB2D718();
      v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
      swift_bridgeObjectRetain();
      v89(v149, __dstc, v88);
    }
    else
    {
      if (v81)
      {
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
LABEL_82:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v66);
        goto LABEL_83;
      }
      *v61 = *v62;
      v61[1] = v62[1];
      v82 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v83 = *(int *)(v82 + 20);
      __dsta = (_QWORD *)((char *)v61 + v83);
      v148 = v82;
      v84 = (_QWORD *)((char *)v62 + v83);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v84, 1, v51))
      {
        v85 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(__dsta, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        *(_DWORD *)__dsta = *(_DWORD *)v84;
        __dsta[1] = v84[1];
        __dsta[2] = v84[2];
        v98 = *(int *)(v51 + 24);
        v135 = (char *)v84 + v98;
        v138 = (char *)__dsta + v98;
        v99 = sub_23FB2D718();
        v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
        swift_bridgeObjectRetain();
        v132(v138, v135, v99);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dsta, 0, 1, v51);
      }
      v100 = *(int *)(v148 + 24);
      v101 = (char *)v61 + v100;
      v102 = (char *)v62 + v100;
      v103 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_82;
  }
LABEL_54:
  v68 = sub_23F6916B8(&qword_256EA8648);
  memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_89:
  v118 = a3[9];
  v119 = (char *)a1 + v118;
  v120 = (char *)a2 + v118;
  v121 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 24))(v119, v120, v121);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoSystemPromptResolution(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  _DWORD *v43;
  _DWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v66;
  uint64_t v67;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA8658);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_15;
  }
  v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v16 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v8, v9, v16);
        break;
      case 5:
        *v8 = *v9;
        v17 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v18 = &v8[v17];
        v19 = &v9[v17];
        v20 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        break;
      case 1:
        v15 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v12);
    goto LABEL_14;
  }
  v13 = sub_23F6916B8(&qword_256EB21D0);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_14:
  v21 = *(int *)(v10 + 20);
  v22 = &v8[v21];
  v23 = &v9[v21];
  v24 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_15:
  v25 = a3[7];
  v26 = (_DWORD *)((char *)a1 + v25);
  v27 = (_DWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
    v30 = *(int *)(v28 + 24);
    v31 = (char *)v26 + v30;
    v32 = (char *)v27 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v34 = a3[8];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v37))
  {
    v39 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v39))
    {
      v40 = sub_23F6916B8(&qword_256EB2130);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
LABEL_32:
      v57 = *(int *)(v37 + 20);
      v58 = (char *)v35 + v57;
      v59 = (char *)v36 + v57;
      v60 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_33;
    }
    v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 1)
    {
      *v35 = *v36;
      v46 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v47 = (char *)v35 + v46;
      v48 = (char *)v36 + v46;
      v49 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
    }
    else
    {
      if (v41)
      {
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
LABEL_31:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v39);
        goto LABEL_32;
      }
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v67 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v42 = *(int *)(v67 + 20);
      v43 = (_DWORD *)((char *)v35 + v42);
      v44 = (_DWORD *)((char *)v36 + v42);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36 + v42, 1, v28))
      {
        v45 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        *v43 = *v44;
        *(_OWORD *)(v43 + 2) = *(_OWORD *)(v44 + 2);
        v50 = *(int *)(v28 + 24);
        v66 = (char *)v43 + v50;
        v51 = (char *)v44 + v50;
        v52 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v66, v51, v52);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v43, 0, 1, v28);
      }
      v53 = *(int *)(v67 + 24);
      v54 = (char *)v35 + v53;
      v55 = (char *)v36 + v53;
      v56 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  v38 = sub_23F6916B8(&qword_256EA8648);
  memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
LABEL_33:
  v61 = a3[9];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSystemPromptResolution(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  _DWORD *v80;
  _DWORD *v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  _DWORD *v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  _DWORD *v95;
  _DWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v11);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EB21D0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_27:
        v30 = *(int *)(v11 + 20);
        v31 = &v9[v30];
        v32 = &v10[v30];
        v33 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v25 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v9, v10, v25);
          break;
        case 5:
          *v9 = *v10;
          v26 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v27 = &v9[v26];
          v28 = &v10[v26];
          v29 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
          break;
        case 1:
          v23 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v9, v10, v23);
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v14);
      goto LABEL_27;
    }
LABEL_7:
    v16 = sub_23F6916B8(&qword_256EA8658);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_42;
  }
  if (v13)
  {
    sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    goto LABEL_7;
  }
  v17 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      v20 = swift_getEnumCaseMultiPayload();
      switch(v20)
      {
        case 6:
          v36 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v9, v10, v36);
          break;
        case 5:
          *v9 = *v10;
          v37 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v38 = &v9[v37];
          v39 = &v10[v37];
          v40 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
          break;
        case 1:
          v21 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v9, v10, v21);
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v17);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v19)
    {
      if (a1 == a2)
        goto LABEL_41;
      sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v34 = swift_getEnumCaseMultiPayload();
      switch(v34)
      {
        case 6:
          v41 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v9, v10, v41);
          break;
        case 5:
          *v9 = *v10;
          v42 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v43 = &v9[v42];
          v44 = &v10[v42];
          v45 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          break;
        case 1:
          v35 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v9, v10, v35);
          break;
        default:
          v24 = *(_QWORD *)(v17 - 8);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)v9, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  v24 = *(_QWORD *)(sub_23F6916B8(&qword_256EB21D0) - 8);
LABEL_21:
  memcpy(v9, v10, *(_QWORD *)(v24 + 64));
LABEL_41:
  v46 = *(int *)(v11 + 20);
  v47 = &v9[v46];
  v48 = &v10[v46];
  v49 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
LABEL_42:
  v50 = a3[7];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (_QWORD *)((char *)a2 + v50);
  v53 = type metadata accessor for TranscriptProtoStatementID(0);
  v54 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v51, 1, v53);
  v55 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v52, 1, v53);
  if (v54)
  {
    if (!v55)
    {
      *(_DWORD *)v51 = *(_DWORD *)v52;
      *(_OWORD *)(v51 + 1) = *(_OWORD *)(v52 + 1);
      v56 = *(int *)(v53 + 24);
      v57 = (char *)v51 + v56;
      v58 = (char *)v52 + v56;
      v59 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v51, 0, 1, v53);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  if (v55)
  {
    sub_23F93DADC((uint64_t)v51, type metadata accessor for TranscriptProtoStatementID);
LABEL_47:
    v60 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_48;
  }
  *(_DWORD *)v51 = *(_DWORD *)v52;
  v70 = v52[2];
  v51[1] = v52[1];
  v51[2] = v70;
  swift_bridgeObjectRelease();
  v71 = *(int *)(v53 + 24);
  v72 = (char *)v51 + v71;
  v73 = (char *)v52 + v71;
  v74 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
LABEL_48:
  v61 = a3[8];
  v62 = (_QWORD *)((char *)a1 + v61);
  v63 = (_QWORD *)((char *)a2 + v61);
  v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  v65 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v64);
  v66 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63, 1, v64);
  if (!v65)
  {
    if (v66)
    {
      sub_23F93DADC((uint64_t)v62, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
      goto LABEL_54;
    }
    v75 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    v76 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v75);
    v77 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63, 1, v75);
    if (v76)
    {
      if (!v77)
      {
        v78 = swift_getEnumCaseMultiPayload();
        if (v78 == 1)
        {
          *v62 = *v63;
          v98 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v99 = (char *)v62 + v98;
          v100 = (char *)v63 + v98;
          v101 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
        }
        else
        {
          if (v78)
          {
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
LABEL_87:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v62, 0, 1, v75);
            goto LABEL_88;
          }
          *(_OWORD *)v62 = *(_OWORD *)v63;
          v143 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v79 = *(int *)(v143 + 20);
          v80 = (_DWORD *)((char *)v62 + v79);
          v81 = (_DWORD *)((char *)v63 + v79);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63 + v79, 1, v53))
          {
            v82 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
          }
          else
          {
            *v80 = *v81;
            *(_OWORD *)(v80 + 2) = *(_OWORD *)(v81 + 2);
            v113 = *(int *)(v53 + 24);
            v141 = (char *)v80 + v113;
            v114 = (char *)v81 + v113;
            v115 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v141, v114, v115);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v80, 0, 1, v53);
          }
          v116 = *(int *)(v143 + 24);
          v117 = (char *)v62 + v116;
          v118 = (char *)v63 + v116;
          v119 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_87;
      }
    }
    else
    {
      if (!v77)
      {
        if (a1 == a2)
          goto LABEL_88;
        sub_23F93DADC((uint64_t)v62, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
        v93 = swift_getEnumCaseMultiPayload();
        if (v93 == 1)
        {
          *v62 = *v63;
          v129 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v130 = (char *)v62 + v129;
          v131 = (char *)v63 + v129;
          v132 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v130, v131, v132);
        }
        else
        {
          if (v93)
          {
            v88 = *(_QWORD *)(v75 - 8);
            goto LABEL_69;
          }
          *(_OWORD *)v62 = *(_OWORD *)v63;
          v145 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v94 = *(int *)(v145 + 20);
          v95 = (_DWORD *)((char *)v62 + v94);
          v96 = (_DWORD *)((char *)v63 + v94);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63 + v94, 1, v53))
          {
            v97 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            *v95 = *v96;
            *(_OWORD *)(v95 + 2) = *(_OWORD *)(v96 + 2);
            v133 = *(int *)(v53 + 24);
            v142 = (char *)v95 + v133;
            v134 = (char *)v96 + v133;
            v135 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v142, v134, v135);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v95, 0, 1, v53);
          }
          v136 = *(int *)(v145 + 24);
          v137 = (char *)v62 + v136;
          v138 = (char *)v63 + v136;
          v139 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v137, v138, v139);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_88;
      }
      sub_23F93DADC((uint64_t)v62, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    }
    v88 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2130) - 8);
LABEL_69:
    memcpy(v62, v63, *(_QWORD *)(v88 + 64));
LABEL_88:
    v120 = *(int *)(v64 + 20);
    v121 = (char *)v62 + v120;
    v122 = (char *)v63 + v120;
    v123 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 40))(v121, v122, v123);
    goto LABEL_89;
  }
  if (!v66)
  {
    v67 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63, 1, v67))
    {
      v68 = sub_23F6916B8(&qword_256EB2130);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_83:
      v109 = *(int *)(v64 + 20);
      v110 = (char *)v62 + v109;
      v111 = (char *)v63 + v109;
      v112 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v62, 0, 1, v64);
      goto LABEL_89;
    }
    v83 = swift_getEnumCaseMultiPayload();
    if (v83 == 1)
    {
      *v62 = *v63;
      v89 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v90 = (char *)v62 + v89;
      v91 = (char *)v63 + v89;
      v92 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
    }
    else
    {
      if (v83)
      {
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
LABEL_82:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v62, 0, 1, v67);
        goto LABEL_83;
      }
      *(_OWORD *)v62 = *(_OWORD *)v63;
      v144 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v84 = *(int *)(v144 + 20);
      v85 = (_DWORD *)((char *)v62 + v84);
      v86 = (_DWORD *)((char *)v63 + v84);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63 + v84, 1, v53))
      {
        v87 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        *v85 = *v86;
        *(_OWORD *)(v85 + 2) = *(_OWORD *)(v86 + 2);
        v102 = *(int *)(v53 + 24);
        v140 = (char *)v85 + v102;
        v103 = (char *)v86 + v102;
        v104 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v140, v103, v104);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v85, 0, 1, v53);
      }
      v105 = *(int *)(v144 + 24);
      v106 = (char *)v62 + v105;
      v107 = (char *)v63 + v105;
      v108 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_82;
  }
LABEL_54:
  v69 = sub_23F6916B8(&qword_256EA8648);
  memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
LABEL_89:
  v124 = a3[9];
  v125 = (char *)a1 + v124;
  v126 = (char *)a2 + v124;
  v127 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 40))(v125, v126, v127);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA41FCC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA8658);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6916B8(&qword_256EA25E0);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23F6F0AFC();
      }
      else
      {
        sub_23F6916B8(&qword_256EA8648);
        sub_23F6F07DC();
        if (v4)
        {
          sub_23FAC3340();
        }
        else
        {
          sub_23F6B53A4();
          sub_23FAC3508();
        }
      }
    }
    v5 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v5, v6, v7);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA4206C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA8658);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6916B8(&qword_256EA25E0);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23F6F0BB8();
      }
      else
      {
        sub_23F6916B8(&qword_256EA8648);
        sub_23F6F07EC();
        if (v3)
        {
          sub_23FAC335C();
        }
        else
        {
          sub_23F6B53A4();
          sub_23FAC3534();
        }
      }
    }
    v4 = sub_23F6F082C(v1);
    sub_23F6F07C4(v4, v5, v6, v7);
  }
}

void sub_23FA420FC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23F6DE58C(319, &qword_256EB9740, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_23F6DE58C(319, qword_256EB9748, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
      if (v2 <= 0x3F)
      {
        sub_23FB2D718();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v36;
  char *v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EB2130);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_15:
      v31 = *(int *)(a3 + 20);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v18 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23FB2D718();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_14:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
        goto LABEL_15;
      }
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v13 = *(int *)(v12 + 20);
      v14 = (_QWORD *)((char *)a1 + v13);
      v15 = (_QWORD *)((char *)a2 + v13);
      v16 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v14 = *(_DWORD *)v15;
        v23 = v15[2];
        v14[1] = v15[1];
        v14[2] = v23;
        v24 = *(int *)(v16 + 24);
        v36 = (char *)v15 + v24;
        v37 = (char *)v14 + v24;
        v25 = sub_23FB2D718();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v37, v36, v25);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v27 = *(int *)(v12 + 24);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v11 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
LABEL_8:
      v12 = a1 + v11;
      v13 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v7 = a1 + *(int *)(v6 + 20);
      v8 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        v9 = v7 + *(int *)(v8 + 24);
        v10 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      }
      v11 = *(int *)(v6 + 24);
      goto LABEL_8;
    }
  }
LABEL_9:
  v14 = a1 + *(int *)(a2 + 20);
  v15 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemPromptResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v34;
  char *v35;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v16 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_23FB2D718();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v11 = *(int *)(v10 + 20);
      v12 = (_QWORD *)((char *)a1 + v11);
      v13 = (_QWORD *)((char *)a2 + v11);
      v14 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v12 = *(_DWORD *)v13;
        v21 = v13[2];
        v12[1] = v13[1];
        v12[2] = v21;
        v22 = *(int *)(v14 + 24);
        v34 = (char *)v13 + v22;
        v35 = (char *)v12 + v22;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v35, v34, v23);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
      }
      v25 = *(int *)(v10 + 24);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EB2130);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_13:
  v29 = *(int *)(a3 + 20);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemPromptResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_23FB2D718();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_21:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_22;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v11 = *(int *)(v10 + 20);
        v12 = (_QWORD *)((char *)a1 + v11);
        v13 = (_QWORD *)((char *)a2 + v11);
        v14 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
        {
          v15 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v12 = *(_DWORD *)v13;
          v12[1] = v13[1];
          v12[2] = v13[2];
          v29 = *(int *)(v14 + 24);
          v53 = (char *)v13 + v29;
          v55 = (char *)v12 + v29;
          v30 = sub_23FB2D718();
          v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v31(v55, v53, v30);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
        }
        v32 = *(int *)(v10 + 24);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_22;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        *a1 = *a2;
        v41 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = sub_23FB2D718();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
      }
      else
      {
        if (v17)
        {
          v16 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        v18 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v19 = *(int *)(v18 + 20);
        v20 = (_QWORD *)((char *)a1 + v19);
        v21 = (_QWORD *)((char *)a2 + v19);
        v22 = type metadata accessor for TranscriptProtoStatementID(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
        {
          v23 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v20 = *(_DWORD *)v21;
          v20[1] = v21[1];
          v20[2] = v21[2];
          v46 = *(int *)(v22 + 24);
          v54 = (char *)v21 + v46;
          v56 = (char *)v20 + v46;
          v47 = sub_23FB2D718();
          v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v56, v54, v47);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
        }
        v49 = *(int *)(v18 + 24);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  }
  v16 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2130) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v16 + 64));
LABEL_22:
  v36 = *(int *)(a3 + 20);
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoSystemPromptResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v15 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_12:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_13;
      }
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v10 = *(int *)(v9 + 20);
      v11 = (_DWORD *)((char *)a1 + v10);
      v12 = (_DWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *v11 = *v12;
        *(_OWORD *)(v11 + 2) = *(_OWORD *)(v12 + 2);
        v19 = *(int *)(v13 + 24);
        v20 = (char *)v11 + v19;
        v21 = (char *)v12 + v19;
        v22 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
      }
      v23 = *(int *)(v9 + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EB2130);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_13:
  v27 = *(int *)(a3 + 20);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSystemPromptResolutionInput(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_21:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          goto LABEL_22;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v11 = *(int *)(v10 + 20);
        v12 = (_DWORD *)((char *)a1 + v11);
        v13 = (_DWORD *)((char *)a2 + v11);
        v14 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
        {
          v15 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          *v12 = *v13;
          *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
          v28 = *(int *)(v14 + 24);
          v29 = (char *)v12 + v28;
          v30 = (char *)v13 + v28;
          v31 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
        }
        v32 = *(int *)(v10 + 24);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_22;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1)
      {
        *a1 = *a2;
        v41 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      }
      else
      {
        if (v17)
        {
          v16 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
        }
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v18 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v19 = *(int *)(v18 + 20);
        v20 = (_DWORD *)((char *)a1 + v19);
        v21 = (_DWORD *)((char *)a2 + v19);
        v22 = type metadata accessor for TranscriptProtoStatementID(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
        {
          v23 = sub_23F6916B8(&qword_256EA25E0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *v20 = *v21;
          *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
          v45 = *(int *)(v22 + 24);
          v46 = (char *)v20 + v45;
          v47 = (char *)v21 + v45;
          v48 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
        }
        v49 = *(int *)(v18 + 24);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_22;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  }
  v16 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2130) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v16 + 64));
LABEL_22:
  v36 = *(int *)(a3 + 20);
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionInput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA43278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB2130);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionInput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA43290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB2130);
}

void sub_23FA4329C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB97F0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionInputEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v31;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v16 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_23FB2D718();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v10 = *(int *)(v9 + 20);
      v11 = (uint64_t *)((char *)a1 + v10);
      v12 = (uint64_t *)((char *)a2 + v10);
      v13 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v12, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v11 = *(_DWORD *)v12;
        v21 = v12[2];
        v11[1] = v12[1];
        v11[2] = v21;
        v22 = *(int *)(v13 + 24);
        v23 = (char *)v11 + v22;
        v31 = (char *)v12 + v22;
        v24 = sub_23FB2D718();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v23, v31, v24);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v11, 0, 1, v13);
      }
      v26 = *(int *)(v9 + 24);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionInputEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v8 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    v3 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
    v4 = a1 + *(int *)(v3 + 20);
    v5 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
    {
      swift_bridgeObjectRelease();
      v6 = v4 + *(int *)(v5 + 24);
      v7 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
    v8 = *(int *)(v3 + 24);
  }
  v9 = a1 + v8;
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemPromptResolutionInputEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v29;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v14 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_23FB2D718();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
    v9 = *(int *)(v8 + 20);
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v10 = *(_DWORD *)v11;
      v19 = v11[2];
      v10[1] = v11[1];
      v10[2] = v19;
      v20 = *(int *)(v12 + 24);
      v21 = (char *)v10 + v20;
      v29 = (char *)v11 + v20;
      v22 = sub_23FB2D718();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v21, v29, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
    }
    v24 = *(int *)(v8 + 24);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemPromptResolutionInputEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v27;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v8 = *(int *)(v7 + 20);
      v9 = (_QWORD *)((char *)a1 + v8);
      v10 = (_QWORD *)((char *)a2 + v8);
      v11 = type metadata accessor for TranscriptProtoStatementID(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v9 = *(_DWORD *)v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        v18 = *(int *)(v11 + 24);
        v19 = (char *)v9 + v18;
        v27 = (char *)v10 + v18;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v19, v27, v20);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
      }
      v22 = *(int *)(v7 + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoSystemPromptResolutionInputEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v13 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
    v8 = *(int *)(v7 + 20);
    v9 = (_DWORD *)((char *)a1 + v8);
    v10 = (_DWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      *(_OWORD *)(v9 + 2) = *(_OWORD *)(v10 + 2);
      v17 = *(int *)(v11 + 24);
      v18 = (char *)v9 + v17;
      v19 = (char *)v10 + v17;
      v20 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v21 = *(int *)(v7 + 24);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSystemPromptResolutionInputEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
      v8 = *(int *)(v7 + 20);
      v9 = (_DWORD *)((char *)a1 + v8);
      v10 = (_DWORD *)((char *)a2 + v8);
      v11 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
      {
        v12 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        *v9 = *v10;
        *(_OWORD *)(v9 + 2) = *(_OWORD *)(v10 + 2);
        v17 = *(int *)(v11 + 24);
        v18 = (char *)v9 + v17;
        v19 = (char *)v10 + v17;
        v20 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
      }
      v21 = *(int *)(v7 + 24);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_23FA43CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA1BAD0(a1, a2, a3, type metadata accessor for TranscriptProtoRequestContentTextContent, (void (*)(uint64_t))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a3[9];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
    v11 = type metadata accessor for TranscriptProtoParameterSet(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EAB750);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      v14 = *(int *)(v11 + 20);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v19 = a3[10];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v24 = v21[2];
      v20[1] = v21[1];
      v20[2] = v24;
      v25 = *(int *)(v22 + 24);
      v26 = (char *)v20 + v25;
      v27 = (char *)v21 + v25;
      v28 = sub_23FB2D718();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v30 = a3[11];
    v31 = (char *)v4 + v30;
    v32 = (uint64_t)a2 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoActionResolverRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[9];
  v5 = type metadata accessor for TranscriptProtoParameterSet(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[10];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[11];
  v13 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  v7 = a3[9];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoParameterSet(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EAB750);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = *(int *)(v10 + 20);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
  {
    v21 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v22 = v19[2];
    v18[1] = v19[1];
    v18[2] = v22;
    v23 = *(int *)(v20 + 24);
    v24 = (char *)v18 + v23;
    v25 = (char *)v19 + v23;
    v26 = sub_23FB2D718();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
  }
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v6 = a3[9];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoParameterSet(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *v7 = *v8;
      v12 = *(int *)(v9 + 20);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoParameterSet);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EAB750);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = *(int *)(v9 + 20);
  v36 = (char *)v7 + v35;
  v37 = (char *)v8 + v35;
  v38 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
LABEL_7:
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = type metadata accessor for TranscriptProtoStatementID(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[1] = v20[1];
      v19[2] = v20[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v39 = *(int *)(v21 + 24);
      v40 = (char *)v19 + v39;
      v41 = (char *)v20 + v39;
      v42 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v29 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v24 = *(int *)(v21 + 24);
  v25 = (char *)v19 + v24;
  v26 = (char *)v20 + v24;
  v27 = sub_23FB2D718();
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
LABEL_13:
  v30 = a3[11];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  v6 = a3[9];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoParameterSet(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EAB750);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[10];
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
  {
    v19 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    v20 = *(int *)(v18 + 24);
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
  }
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoActionResolverRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v7 = a3[9];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoParameterSet(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *v8 = *v9;
      v13 = *(int *)(v10 + 20);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoParameterSet);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EAB750);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v8 = *v9;
  swift_bridgeObjectRelease();
  v34 = *(int *)(v10 + 20);
  v35 = (char *)v8 + v34;
  v36 = (char *)v9 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v35, v36, v37);
LABEL_7:
  v18 = a3[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for TranscriptProtoStatementID(0);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v21);
  v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v38 = *(_QWORD *)(v20 + 16);
      *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
      *(_QWORD *)(v19 + 16) = v38;
      swift_bridgeObjectRelease();
      v39 = *(int *)(v21 + 24);
      v40 = v19 + v39;
      v41 = v20 + v39;
      v42 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
      goto LABEL_13;
    }
    sub_23F93DADC(v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v28 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v19, (const void *)v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  v24 = *(int *)(v21 + 24);
  v25 = v19 + v24;
  v26 = v20 + v24;
  v27 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v19, 0, 1, v21);
LABEL_13:
  v29 = a3[11];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoActionResolverRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA449D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*(_QWORD *)(v0 + 8));
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EAB750);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23FAC3508();
    }
    else
    {
      sub_23F6916B8(&qword_256EA25E0);
      sub_23F6F07DC();
      if (v3)
      {
        sub_23FAC3C38();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3C44();
      }
    }
    v4 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoActionResolverRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA44A58()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B1C();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EAB750);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23FAC3534();
    }
    else
    {
      sub_23F6916B8(&qword_256EA25E0);
      sub_23F6F07EC();
      if (v2)
      {
        sub_23FAC3C6C();
      }
      else
      {
        sub_23F6B53A4();
        sub_23FAC3C78();
      }
    }
    v3 = sub_23F6F082C(v1);
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FA44ACC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23F6DE58C(319, qword_256EB99C0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParameterSet);
  if (v0 <= 0x3F)
  {
    sub_23F6DE58C(319, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_23FB2D718();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseVisualVwCP_0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;

  sub_23F6D3A90();
  v2 = sub_23FAC362C(v0, v1);
  if ((v4 & 0x20000) != 0)
  {
    sub_23F7B0BE8();
  }
  else
  {
    v2[1] = *(_QWORD *)(v3 + 8);
    sub_23F6B53A4();
    sub_23F6B54F8();
    sub_23F6B6254();
    sub_23F876FE4();
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseVisualVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  sub_23FAC3590();
  sub_23F6F09A8();
  sub_23F6B53A4();
  v0 = sub_23F87922C();
  return sub_23F8776C4(v0, v1, v2);
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseVisualVwcp_0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23F6D3A90();
  v1 = v0[1];
  *v2 = *v0;
  v2[1] = v1;
  sub_23F6B53A4();
  sub_23F6B54F8();
  sub_23F6B6254();
  sub_23F876FE4();
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseVisualVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC312C(a1, a2);
  sub_23F6B5908();
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
  swift_bridgeObjectRetain();
  sub_23F6B5908();
  v5 = v4 + *(int *)(v2 + 24);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseVisualVwtk_0(__n128 *a1, __n128 *a2)
{
  uint64_t v2;

  sub_23FAC3C10(a1, a2);
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoResponseVisualVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC3110(a1, a2);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v3 + 8);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(v2 + 24);
  v6 = sub_23F6B53A4();
  sub_23F7B0990(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  sub_23F694C84();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContextRetrieved()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA44D9C()
{
  unint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F08A0();
  if (v2)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    v3 = v1;
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(v3 + 24));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContextRetrieved()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA44DF4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6F0850();
  if (v1)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 24));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoRetrievedContextStatement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _DWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  void (*v155)(uint64_t, _BYTE *, uint64_t);
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v161)(char *, char *, uint64_t);
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  _QWORD *v167;
  _DWORD *v168;
  char *v169;
  _BYTE *v170;
  uint64_t v171;
  _BYTE *__dst;
  void *__dsta;
  uint64_t v174;
  int *v175;
  uint64_t v176;
  int *v177;
  _BYTE *v178;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      v11 = *(int *)(v7 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(v6 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, (uint64_t)v19))
    {
      v20 = sub_23F6916B8(&qword_256EA84C8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *v17 = *v18;
      v21 = v19[5];
      v22 = &v17[v21];
      v23 = &v18[v21];
      v24 = sub_23FB2EB1C();
      v174 = v24;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24))
      {
        v25 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
      }
      v26 = v19[6];
      v27 = &v17[v26];
      v28 = &v18[v26];
      v29 = type metadata accessor for ContextProtoConfidence(0);
      v176 = v6;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29))
      {
        v30 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v27 = *(_DWORD *)v28;
        v27[4] = v28[4];
        v31 = *(int *)(v29 + 24);
        v32 = &v27[v31];
        v33 = &v28[v31];
        v34 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v29);
      }
      v177 = v19;
      v35 = v19[7];
      v178 = v17;
      v36 = &v17[v35];
      v37 = &v18[v35];
      v38 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, (uint64_t)v38))
      {
        v39 = sub_23F6916B8(&qword_256EA2CE8);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v40 = v37[1];
        *v36 = *v37;
        v36[1] = v40;
        v41 = v37[3];
        v36[2] = v37[2];
        v36[3] = v41;
        v36[4] = v37[4];
        v42 = v38[7];
        __dst = (char *)v36 + v42;
        v43 = (char *)v37 + v42;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v43, 1, v29))
        {
          v44 = sub_23F6916B8(&qword_256EA2CF8);
          memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v43;
          __dst[4] = v43[4];
          v45 = *(int *)(v29 + 24);
          v170 = &__dst[v45];
          v46 = &v43[v45];
          v47 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v170, v46, v47);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v29);
        }
        v48 = v38[8];
        v49 = (_DWORD *)((char *)v36 + v48);
        v50 = (_DWORD *)((char *)v37 + v48);
        v51 = type metadata accessor for ContextProtoBoundingBox(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v51))
        {
          v52 = sub_23F6916B8(&qword_256EA2800);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          *v49 = *v50;
          *((_BYTE *)v49 + 4) = *((_BYTE *)v50 + 4);
          v49[2] = v50[2];
          *((_BYTE *)v49 + 12) = *((_BYTE *)v50 + 12);
          v49[4] = v50[4];
          *((_BYTE *)v49 + 20) = *((_BYTE *)v50 + 20);
          *((_BYTE *)v49 + 28) = *((_BYTE *)v50 + 28);
          v49[6] = v50[6];
          v53 = *(int *)(v51 + 32);
          v54 = (char *)v49 + v53;
          v55 = (char *)v50 + v53;
          v56 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, v51);
        }
        v57 = v38[9];
        v58 = (char *)v36 + v57;
        v59 = (char *)v37 + v57;
        *(_QWORD *)v58 = *(_QWORD *)v59;
        v58[8] = v59[8];
        v60 = v38[10];
        v61 = (_QWORD *)((char *)v36 + v60);
        v62 = (_QWORD *)((char *)v37 + v60);
        v63 = v62[1];
        *v61 = *v62;
        v61[1] = v63;
        v64 = v38[11];
        v65 = (char *)v36 + v64;
        v66 = (char *)v37 + v64;
        v67 = sub_23FB2D718();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v65, v66, v67);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
      }
      v69 = (uint64_t)v178;
      v70 = (uint64_t)v177;
      v71 = v177[8];
      v72 = &v178[v71];
      v73 = &v18[v71];
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v18[v71], 1, v174))
      {
        v74 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v72, v73, v174);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v72, 0, 1, v174);
      }
      v75 = v177[9];
      v76 = &v178[v75];
      v77 = &v18[v75];
      v78 = type metadata accessor for ContextProtoStructuredContext(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v77, 1, v78))
      {
        v79 = sub_23F6916B8(&qword_256EA2CD8);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        v80 = type metadata accessor for ContextProtoStructuredContextKind(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v77, 1, v80))
        {
          v81 = sub_23F6916B8(&qword_256EA2D40);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        }
        else
        {
          v171 = v80;
          __dsta = (void *)v78;
          v82 = v77[1];
          *v76 = *v77;
          v76[1] = v82;
          v83 = v77[3];
          v76[2] = v77[2];
          v76[3] = v83;
          v84 = v77[5];
          v76[4] = v77[4];
          v76[5] = v84;
          v85 = v77[7];
          v76[6] = v77[6];
          v76[7] = v85;
          v86 = v77[9];
          v76[8] = v77[8];
          v76[9] = v86;
          *((_DWORD *)v76 + 20) = *((_DWORD *)v77 + 20);
          *((_BYTE *)v76 + 84) = *((_BYTE *)v77 + 84);
          v175 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
          v87 = v175[15];
          v167 = (_QWORD *)((char *)v76 + v87);
          v88 = (_QWORD *)((char *)v77 + v87);
          v89 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v89))
          {
            v90 = sub_23F6916B8(&qword_256EA2D78);
            memcpy(v167, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          }
          else
          {
            v91 = v88[1];
            *v167 = *v88;
            v167[1] = v91;
            *((_WORD *)v167 + 8) = *((_WORD *)v88 + 8);
            v92 = *(int *)(v89 + 28);
            v162 = (char *)v88 + v92;
            v164 = (char *)v167 + v92;
            v93 = sub_23FB2D718();
            v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
            swift_bridgeObjectRetain();
            v94(v164, v162, v93);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v167, 0, 1, v89);
          }
          v95 = v175;
          v96 = v175[16];
          v97 = (char *)v76 + v96;
          v98 = (char *)v77 + v96;
          v99 = *((_QWORD *)v98 + 1);
          if (v99 >> 60 == 15)
          {
            *(_OWORD *)v97 = *(_OWORD *)v98;
          }
          else
          {
            v100 = *(_QWORD *)v98;
            sub_23F6D1E20(*(_QWORD *)v98, *((_QWORD *)v98 + 1));
            *(_QWORD *)v97 = v100;
            *((_QWORD *)v97 + 1) = v99;
          }
          v101 = v175[17];
          v102 = (_QWORD *)((char *)v76 + v101);
          v103 = (_QWORD *)((char *)v77 + v101);
          v104 = v103[1];
          *v102 = *v103;
          v102[1] = v104;
          v105 = v175[18];
          v106 = (_QWORD *)((char *)v76 + v105);
          v107 = (_QWORD *)((char *)v77 + v105);
          v108 = v107[1];
          *v106 = *v107;
          v106[1] = v108;
          v109 = v175[19];
          v168 = (_DWORD *)((char *)v76 + v109);
          v110 = (_DWORD *)((char *)v77 + v109);
          v111 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v110, 1, v111))
          {
            v112 = sub_23F6916B8(&qword_256EA2D68);
            memcpy(v168, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
          }
          else
          {
            *v168 = *v110;
            *((_BYTE *)v168 + 4) = *((_BYTE *)v110 + 4);
            v113 = *((_QWORD *)v110 + 2);
            *((_QWORD *)v168 + 1) = *((_QWORD *)v110 + 1);
            *((_QWORD *)v168 + 2) = v113;
            v168[6] = v110[6];
            *((_BYTE *)v168 + 28) = *((_BYTE *)v110 + 28);
            v168[8] = v110[8];
            *((_BYTE *)v168 + 36) = *((_BYTE *)v110 + 36);
            v114 = *(int *)(v111 + 32);
            v163 = (char *)v110 + v114;
            v165 = (char *)v168 + v114;
            v115 = sub_23FB2D718();
            v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
            swift_bridgeObjectRetain();
            v117 = v115;
            v95 = v175;
            v116(v165, v163, v117);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v168, 0, 1, v111);
          }
          v118 = v95[20];
          v119 = (char *)v76 + v118;
          v120 = (char *)v77 + v118;
          *(_QWORD *)v119 = *(_QWORD *)v120;
          v119[8] = v120[8];
          v121 = v95[21];
          v122 = (_QWORD *)((char *)v76 + v121);
          v123 = (_QWORD *)((char *)v77 + v121);
          v124 = v123[1];
          *v122 = *v123;
          v122[1] = v124;
          *((_BYTE *)v76 + v95[22]) = *((_BYTE *)v77 + v95[22]);
          *((_BYTE *)v76 + v95[23]) = *((_BYTE *)v77 + v95[23]);
          v125 = v95[24];
          v126 = (_QWORD *)((char *)v76 + v125);
          v127 = (_QWORD *)((char *)v77 + v125);
          v128 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
          swift_bridgeObjectRetain();
          v129 = v128;
          v130 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v127, 1, v128);
          v78 = (uint64_t)__dsta;
          if (v130)
          {
            v131 = sub_23F6916B8(&qword_256EA2D58);
            memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
          }
          else
          {
            v132 = v127[1];
            *v126 = *v127;
            v126[1] = v132;
            v133 = v127[3];
            v126[2] = v127[2];
            v126[3] = v133;
            v134 = v127[5];
            v126[4] = v127[4];
            v126[5] = v134;
            v135 = v127[7];
            v126[6] = v127[6];
            v126[7] = v135;
            v136 = v127[9];
            v126[8] = v127[8];
            v126[9] = v136;
            v126[10] = v127[10];
            v137 = *(int *)(v129 + 40);
            v166 = (char *)v127 + v137;
            v169 = (char *)v126 + v137;
            v138 = sub_23FB2D718();
            v161 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
            swift_bridgeObjectRetain();
            v78 = (uint64_t)__dsta;
            swift_bridgeObjectRetain();
            v95 = v175;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v161(v169, v166, v138);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v126, 0, 1, v129);
          }
          v139 = v95[25];
          v140 = (char *)v76 + v139;
          v141 = (char *)v77 + v139;
          v142 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v76, 0, 1, v171);
          v69 = (uint64_t)v178;
          v70 = (uint64_t)v177;
        }
        v143 = *(int *)(v78 + 20);
        v144 = (char *)v76 + v143;
        v145 = (char *)v77 + v143;
        v146 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v76, 0, 1, v78);
      }
      v6 = v176;
      v147 = *(int *)(v70 + 40);
      v148 = (_QWORD *)(v69 + v147);
      v149 = &v18[v147];
      v150 = v149[1];
      *v148 = *v149;
      v148[1] = v150;
      v151 = *(int *)(v70 + 44);
      v152 = v69 + v151;
      v153 = &v18[v151];
      v154 = sub_23FB2D718();
      v155 = *(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v154 - 8) + 16);
      swift_bridgeObjectRetain();
      v155(v152, v153, v154);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v69, 0, 1, v70);
    }
    v156 = *(int *)(v6 + 24);
    v157 = (char *)a1 + v156;
    v158 = (char *)a2 + v156;
    v159 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoRetrievedContextStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, (uint64_t)v8))
  {
    v9 = v7 + v8[5];
    v10 = sub_23FB2EB1C();
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = v7 + v8[6];
    v12 = type metadata accessor for ContextProtoConfidence(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12))
    {
      v13 = v11 + *(int *)(v12 + 24);
      v14 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    }
    v15 = v7 + v8[7];
    v16 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v15, 1, (uint64_t)v16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v15 + v16[7];
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v17, 1, v12))
      {
        v18 = v17 + *(int *)(v12 + 24);
        v19 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v20 = v15 + v16[8];
      v21 = type metadata accessor for ContextProtoBoundingBox(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v21))
      {
        v22 = v20 + *(int *)(v21 + 32);
        v23 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      }
      swift_bridgeObjectRelease();
      v24 = v15 + v16[11];
      v25 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
    }
    v26 = v7 + v8[8];
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v26, 1, v10))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v26, v10);
    v27 = v7 + v8[9];
    v28 = type metadata accessor for ContextProtoStructuredContext(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v27, 1, v28))
    {
      v29 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v27, 1, v29))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v31 = v27 + v30[15];
        v32 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v31, 1, v32))
        {
          swift_bridgeObjectRelease();
          v33 = v31 + *(int *)(v32 + 28);
          v34 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        }
        v35 = (uint64_t *)(v27 + v30[16]);
        v36 = v35[1];
        if (v36 >> 60 != 15)
          sub_23F6BC34C(*v35, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v27 + v30[19];
        v38 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v37, 1, v38))
        {
          swift_bridgeObjectRelease();
          v39 = v37 + *(int *)(v38 + 32);
          v40 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        }
        swift_bridgeObjectRelease();
        v41 = v27 + v30[24];
        v42 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v41, 1, v42))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v43 = v41 + *(int *)(v42 + 40);
          v44 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
        }
        v45 = v27 + v30[25];
        v46 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
      }
      v47 = v27 + *(int *)(v28 + 20);
      v48 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
    }
    swift_bridgeObjectRelease();
    v49 = v7 + v8[11];
    v50 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
  }
  v51 = a1 + *(int *)(a2 + 24);
  v52 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
}

_QWORD *initializeWithCopy for TranscriptProtoRetrievedContextStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _DWORD *v48;
  _DWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  _DWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  uint64_t v152;
  _BYTE *v153;
  uint64_t v154;
  void (*v155)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void (*v161)(char *, char *, uint64_t);
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  _QWORD *v166;
  _DWORD *v167;
  char *v168;
  uint64_t v169;
  _BYTE *__dst;
  void *__dsta;
  _BYTE *v172;
  _BYTE *v173;
  uint64_t v174;
  int *v175;
  uint64_t v176;
  int *v177;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    v18 = sub_23F6916B8(&qword_256EA84C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v19 = v17[5];
    v20 = &v15[v19];
    v21 = &v16[v19];
    v22 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
    {
      v23 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
    }
    v24 = v17[6];
    v25 = &v15[v24];
    v26 = &v16[v24];
    v27 = type metadata accessor for ContextProtoConfidence(0);
    v174 = v22;
    v176 = a3;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v26, 1, v27))
    {
      v28 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v25 = *(_DWORD *)v26;
      v25[4] = v26[4];
      v29 = *(int *)(v27 + 24);
      v30 = &v25[v29];
      v31 = &v26[v29];
      v32 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v25, 0, 1, v27);
    }
    v177 = v17;
    v33 = v17[7];
    v34 = &v15[v33];
    v35 = &v16[v33];
    v36 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, (uint64_t)v36))
    {
      v37 = sub_23F6916B8(&qword_256EA2CE8);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v172 = v15;
      v38 = v35[1];
      *v34 = *v35;
      v34[1] = v38;
      v39 = v35[3];
      v34[2] = v35[2];
      v34[3] = v39;
      v34[4] = v35[4];
      v40 = v36[7];
      __dst = (char *)v34 + v40;
      v41 = (char *)v35 + v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v27))
      {
        v42 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        *(_DWORD *)__dst = *(_DWORD *)v41;
        __dst[4] = v41[4];
        v43 = *(int *)(v27 + 24);
        v44 = &__dst[v43];
        v45 = &v41[v43];
        v46 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v27);
      }
      v47 = v36[8];
      v48 = (_DWORD *)((char *)v34 + v47);
      v49 = (_DWORD *)((char *)v35 + v47);
      v50 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v49, 1, v50))
      {
        v51 = sub_23F6916B8(&qword_256EA2800);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        *v48 = *v49;
        *((_BYTE *)v48 + 4) = *((_BYTE *)v49 + 4);
        v48[2] = v49[2];
        *((_BYTE *)v48 + 12) = *((_BYTE *)v49 + 12);
        v48[4] = v49[4];
        *((_BYTE *)v48 + 20) = *((_BYTE *)v49 + 20);
        *((_BYTE *)v48 + 28) = *((_BYTE *)v49 + 28);
        v48[6] = v49[6];
        v52 = *(int *)(v50 + 32);
        v53 = (char *)v48 + v52;
        v54 = (char *)v49 + v52;
        v55 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v48, 0, 1, v50);
      }
      v56 = v36[9];
      v57 = (char *)v34 + v56;
      v58 = (char *)v35 + v56;
      *(_QWORD *)v57 = *(_QWORD *)v58;
      v57[8] = v58[8];
      v59 = v36[10];
      v60 = (_QWORD *)((char *)v34 + v59);
      v61 = (_QWORD *)((char *)v35 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = v36[11];
      v64 = (char *)v34 + v63;
      v65 = (char *)v35 + v63;
      v66 = sub_23FB2D718();
      v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v64, v65, v66);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
      v15 = v172;
    }
    v68 = (uint64_t)v177;
    v69 = v177[8];
    v70 = &v15[v69];
    v71 = &v16[v69];
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v16[v69], 1, v174))
    {
      v72 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(v70, v71, v174);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v70, 0, 1, v174);
    }
    v73 = v177[9];
    v74 = &v15[v73];
    v75 = &v16[v73];
    v76 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75, 1, v76))
    {
      v77 = sub_23F6916B8(&qword_256EA2CD8);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      v78 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75, 1, v78))
      {
        v79 = sub_23F6916B8(&qword_256EA2D40);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        v169 = v78;
        __dsta = (void *)v76;
        v173 = v15;
        v80 = v75[1];
        *v74 = *v75;
        v74[1] = v80;
        v81 = v75[3];
        v74[2] = v75[2];
        v74[3] = v81;
        v82 = v75[5];
        v74[4] = v75[4];
        v74[5] = v82;
        v83 = v75[7];
        v74[6] = v75[6];
        v74[7] = v83;
        v84 = v75[9];
        v74[8] = v75[8];
        v74[9] = v84;
        *((_DWORD *)v74 + 20) = *((_DWORD *)v75 + 20);
        *((_BYTE *)v74 + 84) = *((_BYTE *)v75 + 84);
        v175 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v85 = v175[15];
        v166 = (_QWORD *)((char *)v74 + v85);
        v86 = (_QWORD *)((char *)v75 + v85);
        v87 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v88 = v87;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v86, 1, v87))
        {
          v89 = sub_23F6916B8(&qword_256EA2D78);
          memcpy(v166, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          v90 = v86[1];
          *v166 = *v86;
          v166[1] = v90;
          *((_WORD *)v166 + 8) = *((_WORD *)v86 + 8);
          v91 = *(int *)(v88 + 28);
          v162 = (char *)v86 + v91;
          v164 = (char *)v166 + v91;
          v92 = sub_23FB2D718();
          v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
          swift_bridgeObjectRetain();
          v93(v164, v162, v92);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v166, 0, 1, v88);
        }
        v94 = v175[16];
        v95 = (char *)v74 + v94;
        v96 = (char *)v75 + v94;
        v97 = *((_QWORD *)v96 + 1);
        v76 = (uint64_t)__dsta;
        if (v97 >> 60 == 15)
        {
          *(_OWORD *)v95 = *(_OWORD *)v96;
        }
        else
        {
          v98 = *(_QWORD *)v96;
          sub_23F6D1E20(*(_QWORD *)v96, *((_QWORD *)v96 + 1));
          *(_QWORD *)v95 = v98;
          *((_QWORD *)v95 + 1) = v97;
        }
        v99 = v175[17];
        v100 = (_QWORD *)((char *)v74 + v99);
        v101 = (_QWORD *)((char *)v75 + v99);
        v102 = v101[1];
        *v100 = *v101;
        v100[1] = v102;
        v103 = v175[18];
        v104 = (_QWORD *)((char *)v74 + v103);
        v105 = (_QWORD *)((char *)v75 + v103);
        v106 = v105[1];
        *v104 = *v105;
        v104[1] = v106;
        v107 = v175[19];
        v167 = (_DWORD *)((char *)v74 + v107);
        v108 = (_DWORD *)((char *)v75 + v107);
        v109 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v108, 1, v109))
        {
          v110 = sub_23F6916B8(&qword_256EA2D68);
          memcpy(v167, v108, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          *v167 = *v108;
          *((_BYTE *)v167 + 4) = *((_BYTE *)v108 + 4);
          v111 = *((_QWORD *)v108 + 2);
          *((_QWORD *)v167 + 1) = *((_QWORD *)v108 + 1);
          *((_QWORD *)v167 + 2) = v111;
          v167[6] = v108[6];
          *((_BYTE *)v167 + 28) = *((_BYTE *)v108 + 28);
          v167[8] = v108[8];
          *((_BYTE *)v167 + 36) = *((_BYTE *)v108 + 36);
          v112 = *(int *)(v109 + 32);
          v163 = (char *)v167 + v112;
          v113 = (char *)v108 + v112;
          v114 = sub_23FB2D718();
          v115 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16);
          swift_bridgeObjectRetain();
          v116 = v113;
          v76 = (uint64_t)__dsta;
          v115(v163, v116, v114);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v167, 0, 1, v109);
        }
        v117 = v175[20];
        v118 = (char *)v74 + v117;
        v119 = (char *)v75 + v117;
        *(_QWORD *)v118 = *(_QWORD *)v119;
        v118[8] = v119[8];
        v120 = v175[21];
        v121 = (_QWORD *)((char *)v74 + v120);
        v122 = (_QWORD *)((char *)v75 + v120);
        v123 = v122[1];
        *v121 = *v122;
        v121[1] = v123;
        *((_BYTE *)v74 + v175[22]) = *((_BYTE *)v75 + v175[22]);
        *((_BYTE *)v74 + v175[23]) = *((_BYTE *)v75 + v175[23]);
        v124 = v175[24];
        v125 = (_QWORD *)((char *)v74 + v124);
        v126 = (_QWORD *)((char *)v75 + v124);
        v127 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        swift_bridgeObjectRetain();
        v128 = v127;
        v129 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v126, 1, v127);
        v15 = v173;
        if (v129)
        {
          v130 = sub_23F6916B8(&qword_256EA2D58);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          v131 = v126[1];
          *v125 = *v126;
          v125[1] = v131;
          v132 = v126[3];
          v125[2] = v126[2];
          v125[3] = v132;
          v133 = v126[5];
          v125[4] = v126[4];
          v125[5] = v133;
          v134 = v126[7];
          v125[6] = v126[6];
          v125[7] = v134;
          v135 = v126[9];
          v125[8] = v126[8];
          v125[9] = v135;
          v125[10] = v126[10];
          v136 = *(int *)(v128 + 40);
          v165 = (char *)v126 + v136;
          v168 = (char *)v125 + v136;
          v137 = sub_23FB2D718();
          v161 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
          swift_bridgeObjectRetain();
          v15 = v173;
          swift_bridgeObjectRetain();
          v76 = (uint64_t)__dsta;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v161(v168, v165, v137);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v125, 0, 1, v128);
        }
        v138 = v175[25];
        v139 = (char *)v74 + v138;
        v140 = (char *)v75 + v138;
        v141 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 16))(v139, v140, v141);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v74, 0, 1, v169);
        v68 = (uint64_t)v177;
      }
      v142 = *(int *)(v76 + 20);
      v143 = (char *)v74 + v142;
      v144 = (char *)v75 + v142;
      v145 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 16))(v143, v144, v145);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v74, 0, 1, v76);
    }
    a3 = v176;
    v146 = *(int *)(v68 + 40);
    v147 = &v15[v146];
    v148 = &v16[v146];
    v149 = v148[1];
    *v147 = *v148;
    v147[1] = v149;
    v150 = *(int *)(v68 + 44);
    v151 = &v15[v150];
    v152 = (uint64_t)v15;
    v153 = &v16[v150];
    v154 = sub_23FB2D718();
    v155 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v154 - 8) + 16);
    swift_bridgeObjectRetain();
    v155(v151, v153, v154);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v152, 0, 1, v68);
  }
  v156 = *(int *)(a3 + 24);
  v157 = (char *)a1 + v156;
  v158 = (char *)a2 + v156;
  v159 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoRetrievedContextStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  int v19;
  int v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  int *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  int *v76;
  int v77;
  int v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _DWORD *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  int *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  int v136;
  size_t v137;
  void *v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  _DWORD *v144;
  int *v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  char *v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  _DWORD *v165;
  int *v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  int v171;
  int v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  void (*v188)(char *, char *, uint64_t);
  int v189;
  int v190;
  int v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  _QWORD *v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  _QWORD *v224;
  uint64_t v225;
  _BYTE *v226;
  uint64_t v227;
  _BYTE *v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v232;
  int *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  int v245;
  size_t v246;
  void *v247;
  int v248;
  int v249;
  int v250;
  int v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  int v255;
  int v256;
  int v257;
  int v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  _BYTE *v275;
  _BYTE *v276;
  int v277;
  int v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  _QWORD *v282;
  _QWORD *v283;
  uint64_t v284;
  int v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  int v292;
  uint64_t v293;
  _QWORD *v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD *v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(char *, char *, uint64_t);
  uint64_t v310;
  char *v311;
  char *v312;
  unint64_t v313;
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  uint64_t v321;
  _DWORD *v322;
  int *v323;
  uint64_t v324;
  uint64_t v325;
  int v326;
  int v327;
  int v328;
  uint64_t v329;
  char *v330;
  char *v331;
  uint64_t v332;
  void (*v333)(char *, char *, uint64_t);
  uint64_t v334;
  char *v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  _QWORD *v339;
  _QWORD *v340;
  uint64_t v341;
  _QWORD *v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void (*v348)(char *, char *, uint64_t);
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  uint64_t v360;
  int v361;
  int v362;
  uint64_t v363;
  char *v364;
  int *v365;
  uint64_t v366;
  void (*v367)(char *, char *, uint64_t);
  uint64_t v368;
  uint64_t v369;
  char *v370;
  char *v371;
  uint64_t v372;
  uint64_t v373;
  void (*v374)(char *, char *, uint64_t);
  uint64_t v375;
  char *v376;
  char *v377;
  unint64_t v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  _QWORD *v382;
  uint64_t v383;
  _QWORD *v384;
  _QWORD *v385;
  uint64_t v386;
  _DWORD *v387;
  int *v388;
  uint64_t v389;
  uint64_t v390;
  int v391;
  int v392;
  int v393;
  uint64_t v394;
  char *v395;
  char *v396;
  uint64_t v397;
  void (*v398)(char *, char *, uint64_t);
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  _QWORD *v404;
  _QWORD *v405;
  uint64_t v406;
  _QWORD *v407;
  _QWORD *v408;
  uint64_t v409;
  uint64_t v410;
  int v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  void (*v415)(char *, char *, uint64_t);
  uint64_t v416;
  char *v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t *v422;
  uint64_t *v423;
  unint64_t v424;
  int *v425;
  uint64_t v426;
  int *v427;
  uint64_t v428;
  uint64_t v429;
  unint64_t v430;
  uint64_t v431;
  _QWORD *v432;
  _QWORD *v433;
  uint64_t v434;
  _QWORD *v435;
  _QWORD *v436;
  uint64_t v437;
  _BYTE *v438;
  char *v439;
  uint64_t v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  uint64_t v446;
  char *v447;
  char *v448;
  uint64_t v449;
  void (*v450)(char *, char *, uint64_t);
  char *v451;
  char *v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  _QWORD *v459;
  _QWORD *v460;
  uint64_t v461;
  uint64_t v462;
  _QWORD *v463;
  uint64_t v464;
  int v465;
  size_t v466;
  void *v467;
  uint64_t v468;
  uint64_t v469;
  _BYTE *v470;
  void (*v471)(char *, char *, uint64_t);
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  int v476;
  int v477;
  int v478;
  uint64_t v479;
  char *v480;
  char *v481;
  uint64_t v482;
  uint64_t v483;
  char *v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  char *v488;
  char *v489;
  uint64_t v490;
  uint64_t v491;
  char *v492;
  char *v493;
  uint64_t v494;
  uint64_t v495;
  _QWORD *v496;
  _QWORD *v497;
  uint64_t v498;
  _BYTE *v499;
  _BYTE *v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  void (*v507)(char *, char *, uint64_t);
  char *v508;
  _QWORD *v509;
  char *v510;
  char *v511;
  char *v512;
  char *v513;
  char *v514;
  char *v515;
  char *v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  _QWORD *v522;
  void *__src;
  char *__srca;
  void *__srcb;
  void *__srcc;
  void *__srcd;
  uint64_t v528;
  int *v529;
  uint64_t v530;
  int *v531;
  int *v532;
  int *v533;
  int *v534;
  _BYTE *v535;
  _BYTE *v536;
  _BYTE *v537;
  _BYTE *v538;
  _BYTE *v539;
  int *v540;
  int *v541;
  int *v542;
  char *v543;
  char *v544;
  char *v545;
  int *v546;
  int *v547;
  char *v548;
  int *v549;
  _BYTE *__dst;
  _BYTE *__dsta;
  _BYTE *__dstb;
  int __dsth;
  _BYTE *__dstc;
  char *__dsti;
  _BYTE *__dstd;
  _BYTE *__dste;
  _BYTE *__dstf;
  _BYTE *__dstg;
  _QWORD *v560;
  _QWORD *v561;
  uint64_t v562;
  uint64_t v563;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v9 = *(int *)(v6 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(int *)(v6 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, (uint64_t)v18);
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, (uint64_t)v18);
  if (!v19)
  {
    if (v20)
    {
      sub_23F93DADC((uint64_t)v16, type metadata accessor for ContextProtoRetrievedContext);
      goto LABEL_13;
    }
    v562 = a3;
    *v16 = *v17;
    v31 = v18[5];
    v32 = &v16[v31];
    v33 = &v17[v31];
    v34 = sub_23FB2EB1C();
    v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34);
    v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34);
    v560 = a2;
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
        goto LABEL_29;
      }
    }
    else
    {
      v57 = *(_QWORD *)(v34 - 8);
      if (!v36)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 24))(v32, v33, v34);
LABEL_29:
        v59 = v18[6];
        v60 = &v16[v59];
        v61 = &v17[v59];
        v62 = type metadata accessor for ContextProtoConfidence(0);
        v63 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v60, 1, v62);
        v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v61, 1, v62);
        if (v63)
        {
          if (!v64)
          {
            *(_DWORD *)v60 = *(_DWORD *)v61;
            v60[4] = v61[4];
            v65 = *(int *)(v62 + 24);
            v66 = &v60[v65];
            v67 = v34;
            v68 = v18;
            v69 = &v61[v65];
            v70 = sub_23FB2D718();
            v71 = v69;
            v18 = v68;
            v34 = v67;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v66, v71, v70);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v60, 0, 1, v62);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v64)
          {
            *(_DWORD *)v60 = *(_DWORD *)v61;
            v60[4] = v61[4];
            v127 = *(int *)(v62 + 24);
            v128 = &v60[v127];
            v129 = v34;
            v130 = v18;
            v131 = &v61[v127];
            v132 = sub_23FB2D718();
            v133 = v131;
            v18 = v130;
            v34 = v129;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 24))(v128, v133, v132);
LABEL_35:
            v73 = v18[7];
            v74 = &v16[v73];
            v75 = &v17[v73];
            v76 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
            v77 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v74, 1, (uint64_t)v76);
            v78 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75, 1, (uint64_t)v76);
            if (v77)
            {
              if (!v78)
              {
                v528 = v34;
                v541 = v18;
                *v74 = *v75;
                v74[1] = v75[1];
                v74[2] = v75[2];
                v74[3] = v75[3];
                v74[4] = v75[4];
                v79 = v76[7];
                __dsta = (char *)v74 + v79;
                v80 = (char *)v75 + v79;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v80, 1, v62))
                {
                  v81 = sub_23F6916B8(&qword_256EA2CF8);
                  memcpy(__dsta, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)__dsta = *(_DWORD *)v80;
                  __dsta[4] = v80[4];
                  v139 = *(int *)(v62 + 24);
                  v140 = &__dsta[v139];
                  v141 = &v80[v139];
                  v142 = sub_23FB2D718();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dsta, 0, 1, v62);
                }
                __dstc = v17;
                v143 = v76[8];
                v144 = (_DWORD *)((char *)v74 + v143);
                v145 = (int *)((char *)v75 + v143);
                v146 = type metadata accessor for ContextProtoBoundingBox(0);
                v147 = v16;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v145, 1, v146))
                {
                  v148 = sub_23F6916B8(&qword_256EA2800);
                  memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
                }
                else
                {
                  v169 = *v145;
                  *((_BYTE *)v144 + 4) = *((_BYTE *)v145 + 4);
                  *v144 = v169;
                  v170 = v145[2];
                  *((_BYTE *)v144 + 12) = *((_BYTE *)v145 + 12);
                  v144[2] = v170;
                  v171 = v145[4];
                  *((_BYTE *)v144 + 20) = *((_BYTE *)v145 + 20);
                  v144[4] = v171;
                  v172 = v145[6];
                  *((_BYTE *)v144 + 28) = *((_BYTE *)v145 + 28);
                  v144[6] = v172;
                  v173 = *(int *)(v146 + 32);
                  v174 = (char *)v144 + v173;
                  v175 = (char *)v145 + v173;
                  v176 = sub_23FB2D718();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v174, v175, v176);
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v144, 0, 1, v146);
                }
                v177 = v76[9];
                v178 = (char *)v74 + v177;
                v179 = (char *)v75 + v177;
                v180 = *(_QWORD *)v179;
                v178[8] = v179[8];
                *(_QWORD *)v178 = v180;
                v181 = v76[10];
                v182 = (_QWORD *)((char *)v74 + v181);
                v183 = (_QWORD *)((char *)v75 + v181);
                *v182 = *v183;
                v182[1] = v183[1];
                v184 = v76[11];
                v185 = (char *)v74 + v184;
                v186 = (char *)v75 + v184;
                v187 = sub_23FB2D718();
                v188 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16);
                swift_bridgeObjectRetain();
                v188(v185, v186, v187);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v74, 0, 1, (uint64_t)v76);
                v16 = v147;
                v18 = v541;
                v17 = __dstc;
                v34 = v528;
LABEL_93:
                v274 = v18[8];
                v275 = &v16[v274];
                v276 = &v17[v274];
                v277 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v16[v274], 1, v34);
                v278 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v276, 1, v34);
                a2 = v560;
                if (v277)
                {
                  if (!v278)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v275, v276, v34);
                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v275, 0, 1, v34);
                    goto LABEL_99;
                  }
                }
                else
                {
                  v279 = *(_QWORD *)(v34 - 8);
                  if (!v278)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v279 + 24))(v275, v276, v34);
LABEL_99:
                    v281 = v18[9];
                    v282 = &v16[v281];
                    v283 = &v17[v281];
                    v284 = type metadata accessor for ContextProtoStructuredContext(0);
                    v285 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v282, 1, v284);
                    v286 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v283, 1, v284);
                    if (v285)
                    {
                      if (!v286)
                      {
                        v287 = type metadata accessor for ContextProtoStructuredContextKind(0);
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v283, 1, v287))
                        {
                          v288 = sub_23F6916B8(&qword_256EA2D40);
                          memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
                        }
                        else
                        {
                          v520 = v287;
                          __srcc = (void *)v284;
                          v547 = v18;
                          __dstf = v17;
                          v538 = v16;
                          *v282 = *v283;
                          v282[1] = v283[1];
                          v282[2] = v283[2];
                          v282[3] = v283[3];
                          v282[4] = v283[4];
                          v282[5] = v283[5];
                          v282[6] = v283[6];
                          v282[7] = v283[7];
                          v282[8] = v283[8];
                          v282[9] = v283[9];
                          *((_BYTE *)v282 + 80) = *((_BYTE *)v283 + 80);
                          *((_BYTE *)v282 + 81) = *((_BYTE *)v283 + 81);
                          *((_BYTE *)v282 + 82) = *((_BYTE *)v283 + 82);
                          *((_BYTE *)v282 + 83) = *((_BYTE *)v283 + 83);
                          *((_BYTE *)v282 + 84) = *((_BYTE *)v283 + 84);
                          v533 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                          v298 = v533[15];
                          v299 = (_QWORD *)((char *)v282 + v298);
                          v300 = (_QWORD *)((char *)v283 + v298);
                          v301 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v300, 1, v301))
                          {
                            v302 = sub_23F6916B8(&qword_256EA2D78);
                            memcpy(v299, v300, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
                          }
                          else
                          {
                            *v299 = *v300;
                            v299[1] = v300[1];
                            *((_BYTE *)v299 + 16) = *((_BYTE *)v300 + 16);
                            *((_BYTE *)v299 + 17) = *((_BYTE *)v300 + 17);
                            v304 = *(int *)(v301 + 28);
                            v305 = (char *)v299 + v304;
                            v306 = (char *)v300 + v304;
                            v307 = sub_23FB2D718();
                            v308 = (uint64_t)v299;
                            v309 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v307 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v309(v305, v306, v307);
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v308, 0, 1, v301);
                          }
                          v310 = v533[16];
                          v311 = (char *)v282 + v310;
                          v312 = (char *)v283 + v310;
                          v313 = *((_QWORD *)v312 + 1);
                          if (v313 >> 60 == 15)
                          {
                            *(_OWORD *)v311 = *(_OWORD *)v312;
                          }
                          else
                          {
                            v314 = *(_QWORD *)v312;
                            sub_23F6D1E20(*(_QWORD *)v312, *((_QWORD *)v312 + 1));
                            *(_QWORD *)v311 = v314;
                            *((_QWORD *)v311 + 1) = v313;
                          }
                          v315 = v533[17];
                          v316 = (_QWORD *)((char *)v282 + v315);
                          v317 = (_QWORD *)((char *)v283 + v315);
                          *v316 = *v317;
                          v316[1] = v317[1];
                          v318 = v533[18];
                          v319 = (_QWORD *)((char *)v282 + v318);
                          v320 = (_QWORD *)((char *)v283 + v318);
                          *v319 = *v320;
                          v319[1] = v320[1];
                          v321 = v533[19];
                          v322 = (_DWORD *)((char *)v282 + v321);
                          v323 = (int *)((char *)v283 + v321);
                          v324 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          v16 = v538;
                          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v323, 1, v324))
                          {
                            v325 = sub_23F6916B8(&qword_256EA2D68);
                            memcpy(v322, v323, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
                          }
                          else
                          {
                            v326 = *v323;
                            *((_BYTE *)v322 + 4) = *((_BYTE *)v323 + 4);
                            *v322 = v326;
                            *((_QWORD *)v322 + 1) = *((_QWORD *)v323 + 1);
                            *((_QWORD *)v322 + 2) = *((_QWORD *)v323 + 2);
                            v327 = v323[6];
                            *((_BYTE *)v322 + 28) = *((_BYTE *)v323 + 28);
                            v322[6] = v327;
                            v328 = v323[8];
                            *((_BYTE *)v322 + 36) = *((_BYTE *)v323 + 36);
                            v322[8] = v328;
                            v329 = *(int *)(v324 + 32);
                            v330 = (char *)v322 + v329;
                            v331 = (char *)v323 + v329;
                            v332 = sub_23FB2D718();
                            v333 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v332 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v333(v330, v331, v332);
                            v16 = v538;
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v322, 0, 1, v324);
                          }
                          v334 = v533[20];
                          v335 = (char *)v282 + v334;
                          v336 = (char *)v283 + v334;
                          v337 = *(_QWORD *)v336;
                          v335[8] = v336[8];
                          *(_QWORD *)v335 = v337;
                          v338 = v533[21];
                          v339 = (_QWORD *)((char *)v282 + v338);
                          v340 = (_QWORD *)((char *)v283 + v338);
                          *v339 = *v340;
                          v339[1] = v340[1];
                          *((_BYTE *)v282 + v533[22]) = *((_BYTE *)v283 + v533[22]);
                          *((_BYTE *)v282 + v533[23]) = *((_BYTE *)v283 + v533[23]);
                          v341 = v533[24];
                          v342 = (_QWORD *)((char *)v282 + v341);
                          v343 = (_QWORD *)((char *)v283 + v341);
                          v344 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                          swift_bridgeObjectRetain();
                          v284 = (uint64_t)__srcc;
                          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v343, 1, v344))
                          {
                            v345 = sub_23F6916B8(&qword_256EA2D58);
                            memcpy(v342, v343, *(_QWORD *)(*(_QWORD *)(v345 - 8) + 64));
                          }
                          else
                          {
                            *v342 = *v343;
                            v342[1] = v343[1];
                            v342[2] = v343[2];
                            v342[3] = v343[3];
                            v342[4] = v343[4];
                            v342[5] = v343[5];
                            v342[6] = v343[6];
                            v342[7] = v343[7];
                            v342[8] = v343[8];
                            v342[9] = v343[9];
                            v342[10] = v343[10];
                            v346 = *(int *)(v344 + 40);
                            v511 = (char *)v342 + v346;
                            v516 = (char *)v343 + v346;
                            v347 = sub_23FB2D718();
                            v348 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v347 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v284 = (uint64_t)__srcc;
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v348(v511, v516, v347);
                            v16 = v538;
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v342, 0, 1, v344);
                          }
                          v17 = __dstf;
                          a2 = v560;
                          v349 = v533[25];
                          v350 = (char *)v282 + v349;
                          v351 = (char *)v283 + v349;
                          v352 = sub_23FB2D718();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 16))(v350, v351, v352);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v282, 0, 1, v520);
                          v18 = v547;
                        }
                        v353 = *(int *)(v284 + 20);
                        v354 = (char *)v282 + v353;
                        v355 = (char *)v283 + v353;
                        v356 = sub_23FB2D718();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v354, v355, v356);
                        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v282, 0, 1, v284);
                        goto LABEL_170;
                      }
                      goto LABEL_105;
                    }
                    if (v286)
                    {
                      sub_23F93DADC((uint64_t)v282, type metadata accessor for ContextProtoStructuredContext);
LABEL_105:
                      v289 = sub_23F6916B8(&qword_256EA2CD8);
                      memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
LABEL_170:
                      v495 = v18[10];
                      v496 = &v16[v495];
                      v497 = &v17[v495];
                      *v496 = *v497;
                      v496[1] = v497[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      v498 = v18[11];
                      v499 = &v16[v498];
                      v500 = &v17[v498];
                      v501 = sub_23FB2D718();
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v501 - 8) + 24))(v499, v500, v501);
                      a3 = v562;
                      goto LABEL_171;
                    }
                    v290 = type metadata accessor for ContextProtoStructuredContextKind(0);
                    v291 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v282, 1, v290);
                    v292 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v283, 1, v290);
                    if (v291)
                    {
                      if (!v292)
                      {
                        v519 = v290;
                        __srcb = (void *)v284;
                        v546 = v18;
                        __dste = v17;
                        v537 = v16;
                        *v282 = *v283;
                        v282[1] = v283[1];
                        v282[2] = v283[2];
                        v282[3] = v283[3];
                        v282[4] = v283[4];
                        v282[5] = v283[5];
                        v282[6] = v283[6];
                        v282[7] = v283[7];
                        v282[8] = v283[8];
                        v282[9] = v283[9];
                        *((_BYTE *)v282 + 80) = *((_BYTE *)v283 + 80);
                        *((_BYTE *)v282 + 81) = *((_BYTE *)v283 + 81);
                        *((_BYTE *)v282 + 82) = *((_BYTE *)v283 + 82);
                        *((_BYTE *)v282 + 83) = *((_BYTE *)v283 + 83);
                        *((_BYTE *)v282 + 84) = *((_BYTE *)v283 + 84);
                        v532 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                        v293 = v532[15];
                        v294 = (_QWORD *)((char *)v282 + v293);
                        v295 = (_QWORD *)((char *)v283 + v293);
                        v296 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v295, 1, v296))
                        {
                          v297 = sub_23F6916B8(&qword_256EA2D78);
                          memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
                        }
                        else
                        {
                          *v294 = *v295;
                          v294[1] = v295[1];
                          *((_BYTE *)v294 + 16) = *((_BYTE *)v295 + 16);
                          *((_BYTE *)v294 + 17) = *((_BYTE *)v295 + 17);
                          v369 = *(int *)(v296 + 28);
                          v370 = (char *)v294 + v369;
                          v371 = (char *)v295 + v369;
                          v372 = sub_23FB2D718();
                          v373 = (uint64_t)v294;
                          v374 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v372 - 8) + 16);
                          swift_bridgeObjectRetain();
                          v374(v370, v371, v372);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v373, 0, 1, v296);
                        }
                        v375 = v532[16];
                        v376 = (char *)v282 + v375;
                        v377 = (char *)v283 + v375;
                        v378 = *((_QWORD *)v377 + 1);
                        if (v378 >> 60 == 15)
                        {
                          *(_OWORD *)v376 = *(_OWORD *)v377;
                        }
                        else
                        {
                          v379 = *(_QWORD *)v377;
                          sub_23F6D1E20(*(_QWORD *)v377, *((_QWORD *)v377 + 1));
                          *(_QWORD *)v376 = v379;
                          *((_QWORD *)v376 + 1) = v378;
                        }
                        v380 = v532[17];
                        v381 = (_QWORD *)((char *)v282 + v380);
                        v382 = (_QWORD *)((char *)v283 + v380);
                        *v381 = *v382;
                        v381[1] = v382[1];
                        v383 = v532[18];
                        v384 = (_QWORD *)((char *)v282 + v383);
                        v385 = (_QWORD *)((char *)v283 + v383);
                        *v384 = *v385;
                        v384[1] = v385[1];
                        v386 = v532[19];
                        v387 = (_DWORD *)((char *)v282 + v386);
                        v388 = (int *)((char *)v283 + v386);
                        v389 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        v16 = v537;
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v388, 1, v389))
                        {
                          v390 = sub_23F6916B8(&qword_256EA2D68);
                          memcpy(v387, v388, *(_QWORD *)(*(_QWORD *)(v390 - 8) + 64));
                        }
                        else
                        {
                          v391 = *v388;
                          *((_BYTE *)v387 + 4) = *((_BYTE *)v388 + 4);
                          *v387 = v391;
                          *((_QWORD *)v387 + 1) = *((_QWORD *)v388 + 1);
                          *((_QWORD *)v387 + 2) = *((_QWORD *)v388 + 2);
                          v392 = v388[6];
                          *((_BYTE *)v387 + 28) = *((_BYTE *)v388 + 28);
                          v387[6] = v392;
                          v393 = v388[8];
                          *((_BYTE *)v387 + 36) = *((_BYTE *)v388 + 36);
                          v387[8] = v393;
                          v394 = *(int *)(v389 + 32);
                          v395 = (char *)v387 + v394;
                          v396 = (char *)v388 + v394;
                          v397 = sub_23FB2D718();
                          v398 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v397 - 8) + 16);
                          swift_bridgeObjectRetain();
                          v398(v395, v396, v397);
                          v16 = v537;
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v387, 0, 1, v389);
                        }
                        a2 = v560;
                        v399 = v532[20];
                        v400 = (char *)v282 + v399;
                        v401 = (char *)v283 + v399;
                        v402 = *(_QWORD *)v401;
                        v400[8] = v401[8];
                        *(_QWORD *)v400 = v402;
                        v403 = v532[21];
                        v404 = (_QWORD *)((char *)v282 + v403);
                        v405 = (_QWORD *)((char *)v283 + v403);
                        *v404 = *v405;
                        v404[1] = v405[1];
                        *((_BYTE *)v282 + v532[22]) = *((_BYTE *)v283 + v532[22]);
                        *((_BYTE *)v282 + v532[23]) = *((_BYTE *)v283 + v532[23]);
                        v406 = v532[24];
                        v407 = (_QWORD *)((char *)v282 + v406);
                        v408 = (_QWORD *)((char *)v283 + v406);
                        v409 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                        swift_bridgeObjectRetain();
                        v410 = v409;
                        v411 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v408, 1, v409);
                        v284 = (uint64_t)__srcb;
                        if (v411)
                        {
                          v412 = sub_23F6916B8(&qword_256EA2D58);
                          memcpy(v407, v408, *(_QWORD *)(*(_QWORD *)(v412 - 8) + 64));
                        }
                        else
                        {
                          *v407 = *v408;
                          v407[1] = v408[1];
                          v407[2] = v408[2];
                          v407[3] = v408[3];
                          v407[4] = v408[4];
                          v407[5] = v408[5];
                          v407[6] = v408[6];
                          v407[7] = v408[7];
                          v407[8] = v408[8];
                          v407[9] = v408[9];
                          v407[10] = v408[10];
                          v413 = *(int *)(v410 + 40);
                          v512 = (char *)v408 + v413;
                          v517 = (char *)v407 + v413;
                          v414 = sub_23FB2D718();
                          v415 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 16);
                          swift_bridgeObjectRetain();
                          a2 = v560;
                          swift_bridgeObjectRetain();
                          v284 = (uint64_t)__srcb;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          v415(v517, v512, v414);
                          v16 = v537;
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v407, 0, 1, v410);
                        }
                        v17 = __dste;
                        v416 = v532[25];
                        v417 = (char *)v282 + v416;
                        v418 = (char *)v283 + v416;
                        v419 = sub_23FB2D718();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v419 - 8) + 16))(v417, v418, v419);
                        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v282, 0, 1, v519);
                        v18 = v546;
                        goto LABEL_169;
                      }
                      goto LABEL_115;
                    }
                    if (v292)
                    {
                      sub_23F93DADC((uint64_t)v282, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_115:
                      v303 = sub_23F6916B8(&qword_256EA2D40);
                      memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
LABEL_169:
                      v491 = *(int *)(v284 + 20);
                      v492 = (char *)v282 + v491;
                      v493 = (char *)v283 + v491;
                      v494 = sub_23FB2D718();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v494 - 8) + 24))(v492, v493, v494);
                      goto LABEL_170;
                    }
                    __srcd = (void *)v284;
                    __dstg = v17;
                    *v282 = *v283;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v282[1] = v283[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v282[2] = v283[2];
                    v282[3] = v283[3];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v282[4] = v283[4];
                    v282[5] = v283[5];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v282[6] = v283[6];
                    v282[7] = v283[7];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v282[8] = v283[8];
                    v282[9] = v283[9];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *((_BYTE *)v282 + 80) = *((_BYTE *)v283 + 80);
                    *((_BYTE *)v282 + 81) = *((_BYTE *)v283 + 81);
                    *((_BYTE *)v282 + 82) = *((_BYTE *)v283 + 82);
                    *((_BYTE *)v282 + 83) = *((_BYTE *)v283 + 83);
                    *((_BYTE *)v282 + 84) = *((_BYTE *)v283 + 84);
                    v534 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                    v357 = v534[15];
                    v358 = (char *)v282 + v357;
                    v359 = (char *)v283 + v357;
                    v360 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                    v361 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v358, 1, v360);
                    v362 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v359, 1, v360);
                    v539 = v16;
                    if (v361)
                    {
                      if (!v362)
                      {
                        *(_QWORD *)v358 = *(_QWORD *)v359;
                        *((_QWORD *)v358 + 1) = *((_QWORD *)v359 + 1);
                        v358[16] = v359[16];
                        v358[17] = v359[17];
                        v363 = *(int *)(v360 + 28);
                        v548 = &v358[v363];
                        v364 = &v359[v363];
                        v365 = v18;
                        v366 = sub_23FB2D718();
                        v367 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v366 - 8) + 16);
                        swift_bridgeObjectRetain();
                        v368 = v366;
                        v18 = v365;
                        v367(v548, v364, v368);
                        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v358, 0, 1, v360);
                        goto LABEL_145;
                      }
                    }
                    else
                    {
                      if (!v362)
                      {
                        *(_QWORD *)v358 = *(_QWORD *)v359;
                        *((_QWORD *)v358 + 1) = *((_QWORD *)v359 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v358[16] = v359[16];
                        v358[17] = v359[17];
                        v472 = *(int *)(v360 + 28);
                        v473 = &v358[v472];
                        v474 = &v359[v472];
                        v475 = sub_23FB2D718();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 24))(v473, v474, v475);
LABEL_145:
                        a2 = v560;
                        v421 = v534[16];
                        v422 = (_QWORD *)((char *)v282 + v421);
                        v423 = (_QWORD *)((char *)v283 + v421);
                        v424 = *(_QWORD *)((char *)v283 + v421 + 8);
                        if (*(_QWORD *)((char *)v282 + v421 + 8) >> 60 == 15)
                        {
                          if (v424 >> 60 != 15)
                          {
                            v425 = v18;
                            v426 = *v423;
                            sub_23F6D1E20(*v423, v424);
                            *v422 = v426;
                            v422[1] = v424;
                            v18 = v425;
                            goto LABEL_152;
                          }
                        }
                        else
                        {
                          if (v424 >> 60 != 15)
                          {
                            v427 = v18;
                            v428 = *v423;
                            sub_23F6D1E20(*v423, v424);
                            v429 = *v422;
                            v430 = v422[1];
                            *v422 = v428;
                            v422[1] = v424;
                            v18 = v427;
                            sub_23F6BC34C(v429, v430);
LABEL_152:
                            v431 = v534[17];
                            v432 = (_QWORD *)((char *)v282 + v431);
                            v433 = (_QWORD *)((char *)v283 + v431);
                            *v432 = *v433;
                            v432[1] = v433[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v434 = v534[18];
                            v435 = (_QWORD *)((char *)v282 + v434);
                            v436 = (_QWORD *)((char *)v283 + v434);
                            *v435 = *v436;
                            v435[1] = v436[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v437 = v534[19];
                            v438 = (char *)v282 + v437;
                            v439 = (char *)v283 + v437;
                            v440 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                            v441 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v438, 1, v440);
                            v521 = v440;
                            v442 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v439, 1, v440);
                            v16 = v539;
                            if (v441)
                            {
                              v17 = __dstg;
                              if (!v442)
                              {
                                v443 = *(_DWORD *)v439;
                                v438[4] = v439[4];
                                *(_DWORD *)v438 = v443;
                                *((_QWORD *)v438 + 1) = *((_QWORD *)v439 + 1);
                                *((_QWORD *)v438 + 2) = *((_QWORD *)v439 + 2);
                                v444 = *((_DWORD *)v439 + 6);
                                v438[28] = v439[28];
                                *((_DWORD *)v438 + 6) = v444;
                                v445 = *((_DWORD *)v439 + 8);
                                v438[36] = v439[36];
                                *((_DWORD *)v438 + 8) = v445;
                                v446 = *(int *)(v521 + 32);
                                v549 = v18;
                                v447 = &v438[v446];
                                v448 = &v439[v446];
                                v449 = sub_23FB2D718();
                                v450 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v449 - 8) + 16);
                                swift_bridgeObjectRetain();
                                v451 = v447;
                                v18 = v549;
                                v452 = v448;
                                a2 = v560;
                                v450(v451, v452, v449);
                                v16 = v539;
                                v17 = __dstg;
                                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v438, 0, 1, v521);
                                goto LABEL_158;
                              }
                            }
                            else
                            {
                              v17 = __dstg;
                              if (!v442)
                              {
                                v476 = *(_DWORD *)v439;
                                v438[4] = v439[4];
                                *(_DWORD *)v438 = v476;
                                *((_QWORD *)v438 + 1) = *((_QWORD *)v439 + 1);
                                *((_QWORD *)v438 + 2) = *((_QWORD *)v439 + 2);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v477 = *((_DWORD *)v439 + 6);
                                v438[28] = v439[28];
                                *((_DWORD *)v438 + 6) = v477;
                                v478 = *((_DWORD *)v439 + 8);
                                v438[36] = v439[36];
                                *((_DWORD *)v438 + 8) = v478;
                                v479 = *(int *)(v521 + 32);
                                v480 = &v438[v479];
                                v481 = &v439[v479];
                                v482 = sub_23FB2D718();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v482 - 8) + 24))(v480, v481, v482);
LABEL_158:
                                v454 = v534[20];
                                v455 = (char *)v282 + v454;
                                v456 = (char *)v283 + v454;
                                v457 = *(_QWORD *)v456;
                                v455[8] = v456[8];
                                *(_QWORD *)v455 = v457;
                                v458 = v534[21];
                                v459 = (_QWORD *)((char *)v282 + v458);
                                v460 = (_QWORD *)((char *)v283 + v458);
                                *v459 = *v460;
                                v459[1] = v460[1];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *((_BYTE *)v282 + v534[22]) = *((_BYTE *)v283 + v534[22]);
                                *((_BYTE *)v282 + v534[23]) = *((_BYTE *)v283 + v534[23]);
                                v461 = v534[24];
                                v462 = (uint64_t)v282 + v461;
                                v463 = (_QWORD *)((char *)v283 + v461);
                                v464 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                                v522 = (_QWORD *)v462;
                                LODWORD(v462) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v462, 1, v464);
                                v465 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v463, 1, v464);
                                if ((_DWORD)v462)
                                {
                                  if (!v465)
                                  {
                                    *v522 = *v463;
                                    v522[1] = v463[1];
                                    v522[2] = v463[2];
                                    v522[3] = v463[3];
                                    v522[4] = v463[4];
                                    v522[5] = v463[5];
                                    v522[6] = v463[6];
                                    v522[7] = v463[7];
                                    v522[8] = v463[8];
                                    v522[9] = v463[9];
                                    v522[10] = v463[10];
                                    v468 = *(int *)(v464 + 40);
                                    v508 = (char *)v463 + v468;
                                    v513 = (char *)v522 + v468;
                                    v469 = sub_23FB2D718();
                                    v470 = v16;
                                    v471 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v469 - 8) + 16);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    a2 = v560;
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    v471(v513, v508, v469);
                                    v16 = v470;
                                    v17 = __dstg;
                                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v522, 0, 1, v464);
                                    goto LABEL_168;
                                  }
                                  v466 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D58) - 8) + 64);
                                  v467 = v522;
                                }
                                else
                                {
                                  if (!v465)
                                  {
                                    *v522 = *v463;
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v522[1] = v463[1];
                                    v522[2] = v463[2];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v522[3] = v463[3];
                                    v522[4] = v463[4];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v522[5] = v463[5];
                                    v522[6] = v463[6];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v522[7] = v463[7];
                                    v522[8] = v463[8];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v522[9] = v463[9];
                                    v522[10] = v463[10];
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v483 = *(int *)(v464 + 40);
                                    v484 = (char *)v522 + v483;
                                    v485 = (char *)v463 + v483;
                                    v486 = sub_23FB2D718();
                                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v486 - 8) + 24))(v484, v485, v486);
                                    goto LABEL_168;
                                  }
                                  sub_23F93DADC((uint64_t)v522, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                                  v466 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D58) - 8) + 64);
                                  v467 = v522;
                                }
                                memcpy(v467, v463, v466);
LABEL_168:
                                v487 = v534[25];
                                v488 = (char *)v282 + v487;
                                v489 = (char *)v283 + v487;
                                v490 = sub_23FB2D718();
                                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v490 - 8) + 24))(v488, v489, v490);
                                v284 = (uint64_t)__srcd;
                                goto LABEL_169;
                              }
                              sub_23F93DADC((uint64_t)v438, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
                            }
                            v453 = sub_23F6916B8(&qword_256EA2D68);
                            memcpy(v438, v439, *(_QWORD *)(*(_QWORD *)(v453 - 8) + 64));
                            goto LABEL_158;
                          }
                          sub_23F6DC470((uint64_t)v422);
                        }
                        *(_OWORD *)v422 = *(_OWORD *)v423;
                        goto LABEL_152;
                      }
                      sub_23F93DADC((uint64_t)v358, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
                    }
                    v420 = sub_23F6916B8(&qword_256EA2D78);
                    memcpy(v358, v359, *(_QWORD *)(*(_QWORD *)(v420 - 8) + 64));
                    goto LABEL_145;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v279 + 8))(v275, v34);
                }
                v280 = sub_23F6916B8(&qword_256EA2610);
                memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
                goto LABEL_99;
              }
LABEL_41:
              v82 = sub_23F6916B8(&qword_256EA2CE8);
              memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
              goto LABEL_93;
            }
            if (v78)
            {
              sub_23F93DADC((uint64_t)v74, type metadata accessor for ContextProtoContextMetadata);
              goto LABEL_41;
            }
            *v74 = *v75;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v74[1] = v75[1];
            v74[2] = v75[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v74[3] = v75[3];
            v74[4] = v75[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v134 = v76[7];
            v135 = (char *)v75 + v134;
            v543 = (char *)v74 + v134;
            __dsth = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v74 + v134, 1, v62);
            __srca = v135;
            v136 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v135, 1, v62);
            if (__dsth)
            {
              if (v136)
              {
                v137 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2CF8) - 8) + 64);
                v138 = v543;
LABEL_81:
                memcpy(v138, v135, v137);
                goto LABEL_84;
              }
              *(_DWORD *)v543 = *(_DWORD *)v135;
              v543[4] = v135[4];
              v232 = *(int *)(v62 + 24);
              __dsti = &v543[v232];
              v530 = v34;
              v233 = v18;
              v234 = &v135[v232];
              v235 = sub_23FB2D718();
              v236 = v234;
              v18 = v233;
              v34 = v530;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16))(__dsti, v236, v235);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v543, 0, 1, v62);
            }
            else
            {
              if (v136)
              {
                sub_23F93DADC((uint64_t)v543, type metadata accessor for ContextProtoConfidence);
                v137 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2CF8) - 8) + 64);
                v138 = v543;
                goto LABEL_81;
              }
              *(_DWORD *)v543 = *(_DWORD *)v135;
              v543[4] = v135[4];
              v237 = *(int *)(v62 + 24);
              v238 = &v543[v237];
              v239 = &__srca[v237];
              v240 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 24))(v238, v239, v240);
            }
LABEL_84:
            v531 = v76;
            v241 = v76[8];
            v242 = (uint64_t)v74 + v241;
            v243 = (char *)v75 + v241;
            v244 = type metadata accessor for ContextProtoBoundingBox(0);
            __dstd = (_BYTE *)v242;
            LODWORD(v242) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v242, 1, v244);
            v544 = v243;
            v245 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v243, 1, v244);
            if ((_DWORD)v242)
            {
              if (!v245)
              {
                v248 = *(_DWORD *)v243;
                __dstd[4] = v243[4];
                *(_DWORD *)__dstd = v248;
                v249 = *((_DWORD *)v243 + 2);
                __dstd[12] = v243[12];
                *((_DWORD *)__dstd + 2) = v249;
                v250 = *((_DWORD *)v243 + 4);
                __dstd[20] = v243[20];
                *((_DWORD *)__dstd + 4) = v250;
                v251 = *((_DWORD *)v243 + 6);
                __dstd[28] = v243[28];
                *((_DWORD *)__dstd + 6) = v251;
                v252 = *(int *)(v244 + 32);
                v253 = &__dstd[v252];
                v545 = &v544[v252];
                v254 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v253, v545, v254);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dstd, 0, 1, v244);
                goto LABEL_92;
              }
              v246 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2800) - 8) + 64);
              v247 = __dstd;
            }
            else
            {
              if (!v245)
              {
                v255 = *(_DWORD *)v243;
                __dstd[4] = v243[4];
                *(_DWORD *)__dstd = v255;
                v256 = *((_DWORD *)v243 + 2);
                __dstd[12] = v243[12];
                *((_DWORD *)__dstd + 2) = v256;
                v257 = *((_DWORD *)v243 + 4);
                __dstd[20] = v243[20];
                *((_DWORD *)__dstd + 4) = v257;
                v258 = *((_DWORD *)v243 + 6);
                __dstd[28] = v243[28];
                *((_DWORD *)__dstd + 6) = v258;
                v259 = *(int *)(v244 + 32);
                v260 = &__dstd[v259];
                v261 = &v243[v259];
                v262 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 24))(v260, v261, v262);
                goto LABEL_92;
              }
              sub_23F93DADC((uint64_t)__dstd, type metadata accessor for ContextProtoBoundingBox);
              v246 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2800) - 8) + 64);
              v247 = __dstd;
            }
            memcpy(v247, v243, v246);
LABEL_92:
            v263 = v531[9];
            v264 = (char *)v74 + v263;
            v265 = (char *)v75 + v263;
            v266 = *(_QWORD *)v265;
            v264[8] = v265[8];
            *(_QWORD *)v264 = v266;
            v267 = v531[10];
            v268 = (_QWORD *)((char *)v74 + v267);
            v269 = (_QWORD *)((char *)v75 + v267);
            *v268 = *v269;
            v268[1] = v269[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v270 = v531[11];
            v271 = (char *)v74 + v270;
            v272 = (char *)v75 + v270;
            v273 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v273 - 8) + 24))(v271, v272, v273);
            goto LABEL_93;
          }
          sub_23F93DADC((uint64_t)v60, type metadata accessor for ContextProtoConfidence);
        }
        v72 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v32, v34);
    }
    v58 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_29;
  }
  if (v20)
  {
LABEL_13:
    v26 = sub_23F6916B8(&qword_256EA84C8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_171;
  }
  *v16 = *v17;
  v21 = v18[5];
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v37 = v18[6];
  v38 = &v16[v37];
  v39 = &v17[v37];
  v40 = type metadata accessor for ContextProtoConfidence(0);
  v561 = a2;
  v563 = a3;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v38 = *(_DWORD *)v39;
    v38[4] = v39[4];
    v42 = *(int *)(v40 + 24);
    v43 = v18;
    v44 = &v38[v42];
    v45 = &v39[v42];
    v46 = sub_23FB2D718();
    v47 = v44;
    v18 = v43;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v47, v45, v46);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v48 = v18[7];
  v49 = &v16[v48];
  v50 = &v17[v48];
  v51 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, (uint64_t)v51))
  {
    v52 = sub_23F6916B8(&qword_256EA2CE8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v540 = v18;
    __dst = v17;
    v535 = v16;
    *v49 = *v50;
    v49[1] = v50[1];
    v49[2] = v50[2];
    v49[3] = v50[3];
    v49[4] = v50[4];
    v53 = v51[7];
    v54 = (char *)v49 + v53;
    v55 = (char *)v50 + v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v55, 1, v40))
    {
      v56 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v54 = *(_DWORD *)v55;
      v54[4] = v55[4];
      v83 = *(int *)(v40 + 24);
      v84 = &v54[v83];
      v85 = &v55[v83];
      v86 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v54, 0, 1, v40);
    }
    v87 = v51[8];
    v88 = (_DWORD *)((char *)v49 + v87);
    v89 = (int *)((char *)v50 + v87);
    v90 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v89, 1, v90))
    {
      v91 = sub_23F6916B8(&qword_256EA2800);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      v92 = *v89;
      *((_BYTE *)v88 + 4) = *((_BYTE *)v89 + 4);
      *v88 = v92;
      v93 = v89[2];
      *((_BYTE *)v88 + 12) = *((_BYTE *)v89 + 12);
      v88[2] = v93;
      v94 = v89[4];
      *((_BYTE *)v88 + 20) = *((_BYTE *)v89 + 20);
      v88[4] = v94;
      v95 = v89[6];
      *((_BYTE *)v88 + 28) = *((_BYTE *)v89 + 28);
      v88[6] = v95;
      v96 = *(int *)(v90 + 32);
      v97 = (char *)v88 + v96;
      v98 = (char *)v89 + v96;
      v99 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v88, 0, 1, v90);
    }
    v100 = v51[9];
    v101 = (char *)v49 + v100;
    v102 = (char *)v50 + v100;
    v103 = *(_QWORD *)v102;
    v101[8] = v102[8];
    *(_QWORD *)v101 = v103;
    v104 = v51[10];
    v105 = (_QWORD *)((char *)v49 + v104);
    v106 = (_QWORD *)((char *)v50 + v104);
    *v105 = *v106;
    v105[1] = v106[1];
    v107 = v51[11];
    v108 = (char *)v49 + v107;
    v109 = (char *)v50 + v107;
    v110 = sub_23FB2D718();
    v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
    swift_bridgeObjectRetain();
    v111(v108, v109, v110);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, (uint64_t)v51);
    v16 = v535;
    v18 = v540;
    v17 = __dst;
  }
  v112 = v18[8];
  v113 = &v16[v112];
  v114 = &v17[v112];
  a3 = v563;
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v17[v112], 1, v24))
  {
    v115 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v113, v114, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v113, 0, 1, v24);
  }
  v116 = v18[9];
  v117 = &v16[v116];
  v118 = &v17[v116];
  v119 = type metadata accessor for ContextProtoStructuredContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v118, 1, v119))
  {
    v120 = sub_23F6916B8(&qword_256EA2CD8);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
  }
  else
  {
    v121 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v118, 1, v121))
    {
      v122 = sub_23F6916B8(&qword_256EA2D40);
      memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    }
    else
    {
      v518 = v121;
      __src = (void *)v119;
      v542 = v18;
      __dstb = v17;
      v536 = v16;
      *v117 = *v118;
      v117[1] = v118[1];
      v117[2] = v118[2];
      v117[3] = v118[3];
      v117[4] = v118[4];
      v117[5] = v118[5];
      v117[6] = v118[6];
      v117[7] = v118[7];
      v117[8] = v118[8];
      v117[9] = v118[9];
      *((_BYTE *)v117 + 80) = *((_BYTE *)v118 + 80);
      *((_BYTE *)v117 + 81) = *((_BYTE *)v118 + 81);
      *((_BYTE *)v117 + 82) = *((_BYTE *)v118 + 82);
      *((_BYTE *)v117 + 83) = *((_BYTE *)v118 + 83);
      *((_BYTE *)v117 + 84) = *((_BYTE *)v118 + 84);
      v529 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v123 = v529[15];
      v509 = (_QWORD *)((char *)v117 + v123);
      v124 = (_QWORD *)((char *)v118 + v123);
      v125 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v124, 1, v125))
      {
        v126 = sub_23F6916B8(&qword_256EA2D78);
        memcpy(v509, v124, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      }
      else
      {
        *v509 = *v124;
        v509[1] = v124[1];
        *((_BYTE *)v509 + 16) = *((_BYTE *)v124 + 16);
        *((_BYTE *)v509 + 17) = *((_BYTE *)v124 + 17);
        v149 = *(int *)(v125 + 28);
        v514 = (char *)v509 + v149;
        v150 = (char *)v124 + v149;
        v151 = sub_23FB2D718();
        v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
        swift_bridgeObjectRetain();
        v152(v514, v150, v151);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v509, 0, 1, v125);
      }
      v153 = v529[16];
      v154 = (char *)v117 + v153;
      v155 = (char *)v118 + v153;
      v156 = *((_QWORD *)v155 + 1);
      a3 = v563;
      v17 = __dstb;
      if (v156 >> 60 == 15)
      {
        *(_OWORD *)v154 = *(_OWORD *)v155;
      }
      else
      {
        v157 = *(_QWORD *)v155;
        sub_23F6D1E20(*(_QWORD *)v155, *((_QWORD *)v155 + 1));
        *(_QWORD *)v154 = v157;
        *((_QWORD *)v154 + 1) = v156;
      }
      v158 = v529[17];
      v159 = (_QWORD *)((char *)v117 + v158);
      v160 = (_QWORD *)((char *)v118 + v158);
      *v159 = *v160;
      v159[1] = v160[1];
      v161 = v529[18];
      v162 = (_QWORD *)((char *)v117 + v161);
      v163 = (_QWORD *)((char *)v118 + v161);
      *v162 = *v163;
      v162[1] = v163[1];
      v164 = v529[19];
      v165 = (_DWORD *)((char *)v117 + v164);
      v166 = (int *)((char *)v118 + v164);
      v167 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v166, 1, v167))
      {
        v168 = sub_23F6916B8(&qword_256EA2D68);
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        v189 = *v166;
        *((_BYTE *)v165 + 4) = *((_BYTE *)v166 + 4);
        *v165 = v189;
        *((_QWORD *)v165 + 1) = *((_QWORD *)v166 + 1);
        *((_QWORD *)v165 + 2) = *((_QWORD *)v166 + 2);
        v190 = v166[6];
        *((_BYTE *)v165 + 28) = *((_BYTE *)v166 + 28);
        v165[6] = v190;
        v191 = v166[8];
        *((_BYTE *)v165 + 36) = *((_BYTE *)v166 + 36);
        v165[8] = v191;
        v192 = *(int *)(v167 + 32);
        v193 = (char *)v165 + v192;
        v194 = (char *)v166 + v192;
        v195 = sub_23FB2D718();
        v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16);
        swift_bridgeObjectRetain();
        v197 = v195;
        v17 = __dstb;
        v196(v193, v194, v197);
        a3 = v563;
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v165, 0, 1, v167);
      }
      v119 = (uint64_t)__src;
      v198 = v529[20];
      v199 = (char *)v117 + v198;
      v200 = (char *)v118 + v198;
      v201 = *(_QWORD *)v200;
      v199[8] = v200[8];
      *(_QWORD *)v199 = v201;
      v202 = v529[21];
      v203 = (_QWORD *)((char *)v117 + v202);
      v204 = (_QWORD *)((char *)v118 + v202);
      *v203 = *v204;
      v203[1] = v204[1];
      *((_BYTE *)v117 + v529[22]) = *((_BYTE *)v118 + v529[22]);
      *((_BYTE *)v117 + v529[23]) = *((_BYTE *)v118 + v529[23]);
      v205 = v529[24];
      v206 = (_QWORD *)((char *)v117 + v205);
      v207 = (_QWORD *)((char *)v118 + v205);
      v208 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      swift_bridgeObjectRetain();
      v209 = v208;
      v210 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v207, 1, v208);
      v16 = v536;
      if (v210)
      {
        v211 = sub_23F6916B8(&qword_256EA2D58);
        memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
      }
      else
      {
        *v206 = *v207;
        v206[1] = v207[1];
        v206[2] = v207[2];
        v206[3] = v207[3];
        v206[4] = v207[4];
        v206[5] = v207[5];
        v206[6] = v207[6];
        v206[7] = v207[7];
        v206[8] = v207[8];
        v206[9] = v207[9];
        v206[10] = v207[10];
        v212 = *(int *)(v209 + 40);
        v510 = (char *)v207 + v212;
        v515 = (char *)v206 + v212;
        v213 = sub_23FB2D718();
        v507 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 16);
        swift_bridgeObjectRetain();
        v16 = v536;
        swift_bridgeObjectRetain();
        v17 = __dstb;
        swift_bridgeObjectRetain();
        a3 = v563;
        swift_bridgeObjectRetain();
        v119 = (uint64_t)__src;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v507(v515, v510, v213);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v206, 0, 1, v209);
      }
      v214 = v529[25];
      v215 = (char *)v117 + v214;
      v216 = (char *)v118 + v214;
      v217 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v215, v216, v217);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v117, 0, 1, v518);
      v18 = v542;
    }
    v218 = *(int *)(v119 + 20);
    v219 = (char *)v117 + v218;
    v220 = (char *)v118 + v218;
    v221 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v219, v220, v221);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v117, 0, 1, v119);
  }
  v222 = v18[10];
  v223 = &v16[v222];
  v224 = &v17[v222];
  *v223 = *v224;
  v223[1] = v224[1];
  v225 = v18[11];
  v226 = &v16[v225];
  v227 = (uint64_t)v16;
  v228 = &v17[v225];
  v229 = (uint64_t)v18;
  v230 = sub_23FB2D718();
  v231 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v230 - 8) + 16);
  swift_bridgeObjectRetain();
  v231(v226, v228, v230);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v227, 0, 1, v229);
  a2 = v561;
LABEL_171:
  v502 = *(int *)(a3 + 24);
  v503 = (char *)a1 + v502;
  v504 = (char *)a2 + v502;
  v505 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v505 - 8) + 24))(v503, v504, v505);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoRetrievedContextStatement(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD *v44;
  _DWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  int *v73;
  uint64_t v74;
  _WORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _DWORD *v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  int *v124;
  _QWORD *__dst;
  _WORD *__dsta;
  int *__dstb;
  int *__dstc;
  uint64_t v129;
  _BYTE *v130;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v8 = *(int *)(v6 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    v16 = sub_23F6916B8(&qword_256EA84C8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = v15[5];
    v18 = &v13[v17];
    v19 = &v14[v17];
    v20 = sub_23FB2EB1C();
    __dst = (_QWORD *)v20;
    v129 = a3;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v22 = v15[6];
    v23 = &v13[v22];
    v24 = &v14[v22];
    v25 = type metadata accessor for ContextProtoConfidence(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25))
    {
      v26 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      v27 = *(int *)(v25 + 24);
      v28 = &v23[v27];
      v29 = &v24[v27];
      v30 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
    }
    v31 = v15[7];
    v130 = v13;
    v32 = &v13[v31];
    v33 = &v14[v31];
    v34 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, (uint64_t)v34))
    {
      v35 = sub_23F6916B8(&qword_256EA2CE8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      *v32 = *v33;
      *(_OWORD *)(v32 + 1) = *(_OWORD *)(v33 + 1);
      *(_OWORD *)(v32 + 3) = *(_OWORD *)(v33 + 3);
      v36 = v34[7];
      v37 = (char *)v32 + v36;
      v38 = (char *)v33 + v36;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33 + v36, 1, v25))
      {
        v39 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        v40 = *(int *)(v25 + 24);
        v122 = &v37[v40];
        v41 = &v38[v40];
        v42 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v122, v41, v42);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v37, 0, 1, v25);
      }
      v43 = v34[8];
      v44 = (_DWORD *)((char *)v32 + v43);
      v45 = (_DWORD *)((char *)v33 + v43);
      v46 = type metadata accessor for ContextProtoBoundingBox(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v45, 1, v46))
      {
        v47 = sub_23F6916B8(&qword_256EA2800);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        *v44 = *v45;
        *((_BYTE *)v44 + 4) = *((_BYTE *)v45 + 4);
        v44[2] = v45[2];
        *((_BYTE *)v44 + 12) = *((_BYTE *)v45 + 12);
        v44[4] = v45[4];
        *((_BYTE *)v44 + 20) = *((_BYTE *)v45 + 20);
        *((_BYTE *)v44 + 28) = *((_BYTE *)v45 + 28);
        v44[6] = v45[6];
        v48 = *(int *)(v46 + 32);
        v123 = v46;
        v49 = (char *)v44 + v48;
        v50 = (char *)v45 + v48;
        v51 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v44, 0, 1, v123);
      }
      v52 = v34[9];
      v53 = (char *)v32 + v52;
      v54 = (char *)v33 + v52;
      *(_QWORD *)v53 = *(_QWORD *)v54;
      v53[8] = v54[8];
      *(_OWORD *)((char *)v32 + v34[10]) = *(_OWORD *)((char *)v33 + v34[10]);
      v55 = v34[11];
      v56 = (char *)v32 + v55;
      v57 = (char *)v33 + v55;
      v58 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, (uint64_t)v34);
    }
    v59 = (uint64_t)v130;
    v60 = v15[8];
    v61 = &v130[v60];
    v62 = &v14[v60];
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v14[v60], 1, (uint64_t)__dst))
    {
      v63 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, _QWORD *))(*(__dst - 1) + 32))(v61, v62, __dst);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, (uint64_t)__dst);
    }
    v64 = v15[9];
    v65 = &v130[v64];
    v66 = &v14[v64];
    v67 = type metadata accessor for ContextProtoStructuredContext(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v66, 1, v67))
    {
      v68 = sub_23F6916B8(&qword_256EA2CD8);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      v69 = type metadata accessor for ContextProtoStructuredContextKind(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v66, 1, v69))
      {
        v70 = sub_23F6916B8(&qword_256EA2D40);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        v121 = v69;
        v71 = v66[1];
        *v65 = *v66;
        v65[1] = v71;
        v72 = v66[3];
        v65[2] = v66[2];
        v65[3] = v72;
        v65[4] = v66[4];
        *((_DWORD *)v65 + 20) = *((_DWORD *)v66 + 20);
        *((_BYTE *)v65 + 84) = *((_BYTE *)v66 + 84);
        v73 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v74 = v73[15];
        __dsta = (_WORD *)((char *)v65 + v74);
        v75 = (_WORD *)((char *)v66 + v74);
        v76 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        v124 = v73;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75, 1, v76))
        {
          v77 = sub_23F6916B8(&qword_256EA2D78);
          memcpy(__dsta, v75, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          *(_OWORD *)__dsta = *(_OWORD *)v75;
          __dsta[8] = v75[8];
          v78 = *(int *)(v76 + 28);
          v79 = (char *)__dsta + v78;
          v80 = (char *)v75 + v78;
          v81 = sub_23FB2D718();
          v82 = v79;
          v73 = v124;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v82, v80, v81);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dsta, 0, 1, v76);
        }
        *(_OWORD *)((char *)v65 + v73[16]) = *(_OWORD *)((char *)v66 + v73[16]);
        *(_OWORD *)((char *)v65 + v73[17]) = *(_OWORD *)((char *)v66 + v73[17]);
        *(_OWORD *)((char *)v65 + v73[18]) = *(_OWORD *)((char *)v66 + v73[18]);
        v83 = v73[19];
        v84 = (_DWORD *)((char *)v65 + v83);
        v85 = (_DWORD *)((char *)v66 + v83);
        __dstb = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v85, 1, (uint64_t)__dstb))
        {
          v86 = sub_23F6916B8(&qword_256EA2D68);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          *v84 = *v85;
          *((_BYTE *)v84 + 4) = *((_BYTE *)v85 + 4);
          *(_OWORD *)(v84 + 2) = *(_OWORD *)(v85 + 2);
          v84[6] = v85[6];
          *((_BYTE *)v84 + 28) = *((_BYTE *)v85 + 28);
          v84[8] = v85[8];
          *((_BYTE *)v84 + 36) = *((_BYTE *)v85 + 36);
          v87 = __dstb[8];
          v88 = (char *)v84 + v87;
          v89 = (char *)v85 + v87;
          v90 = sub_23FB2D718();
          v91 = v88;
          v73 = v124;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v91, v89, v90);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v84, 0, 1, (uint64_t)__dstb);
        }
        v92 = v73[20];
        v93 = (char *)v65 + v92;
        v94 = (char *)v66 + v92;
        *(_QWORD *)v93 = *(_QWORD *)v94;
        v93[8] = v94[8];
        *(_OWORD *)((char *)v65 + v73[21]) = *(_OWORD *)((char *)v66 + v73[21]);
        *((_BYTE *)v65 + v73[22]) = *((_BYTE *)v66 + v73[22]);
        *((_BYTE *)v65 + v73[23]) = *((_BYTE *)v66 + v73[23]);
        v95 = v73[24];
        v96 = (_QWORD *)((char *)v65 + v95);
        v97 = (_QWORD *)((char *)v66 + v95);
        __dstc = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v97, 1, (uint64_t)__dstc))
        {
          v98 = sub_23F6916B8(&qword_256EA2D58);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
        }
        else
        {
          *v96 = *v97;
          *(_OWORD *)(v96 + 1) = *(_OWORD *)(v97 + 1);
          *(_OWORD *)(v96 + 3) = *(_OWORD *)(v97 + 3);
          *(_OWORD *)(v96 + 5) = *(_OWORD *)(v97 + 5);
          *(_OWORD *)(v96 + 7) = *(_OWORD *)(v97 + 7);
          *(_OWORD *)(v96 + 9) = *(_OWORD *)(v97 + 9);
          v99 = __dstc[10];
          v100 = (char *)v96 + v99;
          v101 = (char *)v97 + v99;
          v102 = sub_23FB2D718();
          v103 = v100;
          v73 = v124;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v103, v101, v102);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v96, 0, 1, (uint64_t)__dstc);
        }
        v104 = v73[25];
        v105 = (char *)v65 + v104;
        v106 = (char *)v66 + v104;
        v107 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v65, 0, 1, v121);
        v59 = (uint64_t)v130;
      }
      v108 = *(int *)(v67 + 20);
      v109 = (char *)v65 + v108;
      v110 = (char *)v66 + v108;
      v111 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v65, 0, 1, v67);
    }
    a3 = v129;
    *(_OWORD *)(v59 + v15[10]) = *(_OWORD *)&v14[v15[10]];
    v112 = v15[11];
    v113 = v59 + v112;
    v114 = &v14[v112];
    v115 = sub_23FB2D718();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v59, 0, 1, (uint64_t)v15);
  }
  v116 = *(int *)(a3 + 24);
  v117 = (char *)a1 + v116;
  v118 = (char *)a2 + v116;
  v119 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoRetrievedContextStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  int v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  char *v66;
  _BYTE *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  int *v76;
  int v77;
  int v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  _DWORD *v90;
  _DWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD *v112;
  _OWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  int *v120;
  uint64_t v121;
  _WORD *v122;
  _WORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  int v136;
  int v137;
  size_t v138;
  void *v139;
  uint64_t v140;
  _BYTE *v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  _DWORD *v145;
  _DWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  _DWORD *v155;
  _DWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  _BYTE *v198;
  _BYTE *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  uint64_t v204;
  _BYTE *v205;
  uint64_t v206;
  uint64_t v207;
  _BYTE *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  int v214;
  size_t v215;
  void *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  _BYTE *v236;
  uint64_t v237;
  _BYTE *v238;
  _BYTE *v239;
  int v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _OWORD *v245;
  _OWORD *v246;
  uint64_t v247;
  int v248;
  int v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  int v255;
  __int128 v256;
  __int128 v257;
  int *v258;
  uint64_t v259;
  _WORD *v260;
  _WORD *v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  __int128 v265;
  int *v266;
  uint64_t v267;
  _WORD *v268;
  _WORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  _DWORD *v277;
  _DWORD *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  _QWORD *v288;
  _QWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  _OWORD *v309;
  uint64_t v310;
  int v311;
  size_t v312;
  void *v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  _DWORD *v318;
  _DWORD *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  _QWORD *v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t *v350;
  uint64_t *v351;
  unint64_t v352;
  unint64_t v353;
  uint64_t v354;
  uint64_t v355;
  _QWORD *v356;
  uint64_t *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  _QWORD *v361;
  uint64_t *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  _DWORD *v367;
  uint64_t v368;
  int v369;
  size_t v370;
  void *v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  _QWORD *v385;
  uint64_t *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  int v393;
  size_t v394;
  void *v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  uint64_t v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  char *v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  char *v416;
  uint64_t v417;
  uint64_t v418;
  _QWORD *v419;
  uint64_t *v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  _BYTE *v424;
  _BYTE *v425;
  uint64_t v426;
  uint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  char *v435;
  uint64_t v436;
  char *__srcb;
  char *__srcc;
  char *__srcd;
  char *__src;
  char *__srce;
  char *__srcf;
  char *__srcg;
  char *__srca;
  _QWORD *v445;
  _QWORD *v446;
  _QWORD *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  int *v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  _BYTE *v463;
  _BYTE *v464;
  int *v465;
  int *v466;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v9 = *(int *)(v6 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v26 = a2[2];
  a1[1] = a2[1];
  a1[2] = v26;
  swift_bridgeObjectRelease();
  v27 = *(int *)(v6 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (v19)
    {
      sub_23F93DADC((uint64_t)v15, type metadata accessor for ContextProtoRetrievedContext);
      goto LABEL_13;
    }
    *v15 = *v16;
    v31 = v17[5];
    v32 = &v15[v31];
    v33 = &v16[v31];
    v34 = sub_23FB2EB1C();
    v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34);
    v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34);
    v448 = v34;
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
        goto LABEL_29;
      }
    }
    else
    {
      v57 = *(_QWORD *)(v34 - 8);
      if (!v36)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 40))(v32, v33, v34);
LABEL_29:
        v466 = v17;
        v59 = v17[6];
        v60 = &v15[v59];
        v61 = &v16[v59];
        v62 = type metadata accessor for ContextProtoConfidence(0);
        v63 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v60, 1, v62);
        v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v61, 1, v62);
        if (v63)
        {
          if (!v64)
          {
            *(_DWORD *)v60 = *(_DWORD *)v61;
            v60[4] = v61[4];
            v65 = *(int *)(v62 + 24);
            v66 = &v60[v65];
            v67 = v16;
            v68 = a3;
            v69 = &v61[v65];
            v70 = sub_23FB2D718();
            v71 = v69;
            a3 = v68;
            v16 = v67;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v66, v71, v70);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v60, 0, 1, v62);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v64)
          {
            *(_DWORD *)v60 = *(_DWORD *)v61;
            v60[4] = v61[4];
            v126 = *(int *)(v62 + 24);
            v127 = &v60[v126];
            v128 = a3;
            v129 = &v61[v126];
            v130 = sub_23FB2D718();
            v131 = v129;
            a3 = v128;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 40))(v127, v131, v130);
LABEL_35:
            v73 = v466[7];
            v74 = &v15[v73];
            v464 = v16;
            v75 = &v16[v73];
            v76 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
            v77 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v74, 1, (uint64_t)v76);
            v78 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75, 1, (uint64_t)v76);
            if (v77)
            {
              if (!v78)
              {
                v454 = a3;
                *v74 = *v75;
                *(_OWORD *)(v74 + 1) = *(_OWORD *)(v75 + 1);
                *(_OWORD *)(v74 + 3) = *(_OWORD *)(v75 + 3);
                v79 = v76[7];
                v80 = (char *)v74 + v79;
                v81 = (char *)v75 + v79;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v75 + v79, 1, v62))
                {
                  v82 = sub_23F6916B8(&qword_256EA2CF8);
                  memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
                }
                else
                {
                  *(_DWORD *)v80 = *(_DWORD *)v81;
                  v80[4] = v81[4];
                  v140 = *(int *)(v62 + 24);
                  v141 = &v80[v140];
                  v142 = &v81[v140];
                  v143 = sub_23FB2D718();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v141, v142, v143);
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v80, 0, 1, v62);
                }
                v144 = v76[8];
                v145 = (_DWORD *)((char *)v74 + v144);
                v146 = (_DWORD *)((char *)v75 + v144);
                v147 = type metadata accessor for ContextProtoBoundingBox(0);
                a3 = v454;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v146, 1, v147))
                {
                  v148 = sub_23F6916B8(&qword_256EA2800);
                  memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
                }
                else
                {
                  *v145 = *v146;
                  *((_BYTE *)v145 + 4) = *((_BYTE *)v146 + 4);
                  v145[2] = v146[2];
                  *((_BYTE *)v145 + 12) = *((_BYTE *)v146 + 12);
                  v145[4] = v146[4];
                  *((_BYTE *)v145 + 20) = *((_BYTE *)v146 + 20);
                  *((_BYTE *)v145 + 28) = *((_BYTE *)v146 + 28);
                  v145[6] = v146[6];
                  v159 = *(int *)(v147 + 32);
                  v160 = (char *)v145 + v159;
                  v161 = (char *)v146 + v159;
                  v162 = sub_23FB2D718();
                  v163 = v160;
                  a3 = v454;
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v163, v161, v162);
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v145, 0, 1, v147);
                }
                v164 = v76[9];
                v165 = (char *)v74 + v164;
                v166 = (char *)v75 + v164;
                *(_QWORD *)v165 = *(_QWORD *)v166;
                v165[8] = v166[8];
                *(_OWORD *)((char *)v74 + v76[10]) = *(_OWORD *)((char *)v75 + v76[10]);
                v167 = v76[11];
                v168 = (char *)v74 + v167;
                v169 = (char *)v75 + v167;
                v170 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v168, v169, v170);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v74, 0, 1, (uint64_t)v76);
LABEL_90:
                v236 = v464;
                v237 = v466[8];
                v238 = &v15[v237];
                v239 = &v464[v237];
                v240 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v15[v237], 1, v448);
                v241 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v239, 1, v448);
                if (v240)
                {
                  if (!v241)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v448 - 8) + 32))(v238, v239, v448);
                    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v238, 0, 1, v448);
                    goto LABEL_96;
                  }
                }
                else
                {
                  v242 = *(_QWORD *)(v448 - 8);
                  if (!v241)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v242 + 40))(v238, v239, v448);
LABEL_96:
                    v244 = v466[9];
                    v245 = &v15[v244];
                    v246 = &v464[v244];
                    v247 = type metadata accessor for ContextProtoStructuredContext(0);
                    v248 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v245, 1, v247);
                    v249 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v246, 1, v247);
                    if (v248)
                    {
                      if (!v249)
                      {
                        v250 = type metadata accessor for ContextProtoStructuredContextKind(0);
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v246, 1, v250))
                        {
                          v251 = sub_23F6916B8(&qword_256EA2D40);
                          memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
                        }
                        else
                        {
                          v451 = v250;
                          v459 = a3;
                          v264 = v246[1];
                          *v245 = *v246;
                          v245[1] = v264;
                          v265 = v246[3];
                          v245[2] = v246[2];
                          v245[3] = v265;
                          v245[4] = v246[4];
                          *((_DWORD *)v245 + 20) = *((_DWORD *)v246 + 20);
                          *((_BYTE *)v245 + 84) = *((_BYTE *)v246 + 84);
                          v266 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                          v267 = v266[15];
                          v268 = (_WORD *)((char *)v245 + v267);
                          v269 = (_WORD *)((char *)v246 + v267);
                          v270 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v269, 1, v270))
                          {
                            v271 = sub_23F6916B8(&qword_256EA2D78);
                            memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
                          }
                          else
                          {
                            *(_OWORD *)v268 = *(_OWORD *)v269;
                            v268[8] = v269[8];
                            v273 = *(int *)(v270 + 28);
                            __srcb = (char *)v268 + v273;
                            v274 = (char *)v269 + v273;
                            v275 = sub_23FB2D718();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v275 - 8) + 32))(__srcb, v274, v275);
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v268, 0, 1, v270);
                          }
                          *(_OWORD *)((char *)v245 + v266[16]) = *(_OWORD *)((char *)v246 + v266[16]);
                          *(_OWORD *)((char *)v245 + v266[17]) = *(_OWORD *)((char *)v246 + v266[17]);
                          *(_OWORD *)((char *)v245 + v266[18]) = *(_OWORD *)((char *)v246 + v266[18]);
                          v276 = v266[19];
                          v277 = (_DWORD *)((char *)v245 + v276);
                          v278 = (_DWORD *)((char *)v246 + v276);
                          v279 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v278, 1, v279))
                          {
                            v280 = sub_23F6916B8(&qword_256EA2D68);
                            memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
                          }
                          else
                          {
                            *v277 = *v278;
                            *((_BYTE *)v277 + 4) = *((_BYTE *)v278 + 4);
                            *(_OWORD *)(v277 + 2) = *(_OWORD *)(v278 + 2);
                            v277[6] = v278[6];
                            *((_BYTE *)v277 + 28) = *((_BYTE *)v278 + 28);
                            v277[8] = v278[8];
                            *((_BYTE *)v277 + 36) = *((_BYTE *)v278 + 36);
                            v281 = *(int *)(v279 + 32);
                            __srcc = (char *)v277 + v281;
                            v282 = (char *)v278 + v281;
                            v283 = sub_23FB2D718();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v283 - 8) + 32))(__srcc, v282, v283);
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v277, 0, 1, v279);
                          }
                          v284 = v266[20];
                          v285 = (char *)v245 + v284;
                          v286 = (char *)v246 + v284;
                          *(_QWORD *)v285 = *(_QWORD *)v286;
                          v285[8] = v286[8];
                          *(_OWORD *)((char *)v245 + v266[21]) = *(_OWORD *)((char *)v246 + v266[21]);
                          *((_BYTE *)v245 + v266[22]) = *((_BYTE *)v246 + v266[22]);
                          *((_BYTE *)v245 + v266[23]) = *((_BYTE *)v246 + v266[23]);
                          v287 = v266[24];
                          v288 = (_QWORD *)((char *)v245 + v287);
                          v289 = (_QWORD *)((char *)v246 + v287);
                          v290 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v289, 1, v290))
                          {
                            v291 = sub_23F6916B8(&qword_256EA2D58);
                            memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
                          }
                          else
                          {
                            *v288 = *v289;
                            *(_OWORD *)(v288 + 1) = *(_OWORD *)(v289 + 1);
                            *(_OWORD *)(v288 + 3) = *(_OWORD *)(v289 + 3);
                            *(_OWORD *)(v288 + 5) = *(_OWORD *)(v289 + 5);
                            *(_OWORD *)(v288 + 7) = *(_OWORD *)(v289 + 7);
                            *(_OWORD *)(v288 + 9) = *(_OWORD *)(v289 + 9);
                            v292 = *(int *)(v290 + 40);
                            __srcd = (char *)v288 + v292;
                            v293 = (char *)v289 + v292;
                            v294 = sub_23FB2D718();
                            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(__srcd, v293, v294);
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v288, 0, 1, v290);
                          }
                          v295 = v266[25];
                          v296 = (char *)v245 + v295;
                          v297 = (char *)v246 + v295;
                          v298 = sub_23FB2D718();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v296, v297, v298);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v245, 0, 1, v451);
                          a3 = v459;
                          v236 = v464;
                        }
                        v299 = *(int *)(v247 + 20);
                        v300 = (char *)v245 + v299;
                        v301 = (char *)v246 + v299;
                        v302 = sub_23FB2D718();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v300, v301, v302);
                        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v245, 0, 1, v247);
                        goto LABEL_161;
                      }
                      goto LABEL_102;
                    }
                    if (v249)
                    {
                      sub_23F93DADC((uint64_t)v245, type metadata accessor for ContextProtoStructuredContext);
LABEL_102:
                      v252 = sub_23F6916B8(&qword_256EA2CD8);
                      memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
LABEL_161:
                      v418 = v466[10];
                      v419 = &v15[v418];
                      v420 = (uint64_t *)&v236[v418];
                      v422 = *v420;
                      v421 = v420[1];
                      *v419 = v422;
                      v419[1] = v421;
                      swift_bridgeObjectRelease();
                      v423 = v466[11];
                      v424 = &v15[v423];
                      v425 = &v236[v423];
                      v426 = sub_23FB2D718();
                      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v426 - 8) + 40))(v424, v425, v426);
                      goto LABEL_162;
                    }
                    v253 = type metadata accessor for ContextProtoStructuredContextKind(0);
                    v254 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v245, 1, v253);
                    v255 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v246, 1, v253);
                    if (v254)
                    {
                      if (!v255)
                      {
                        v450 = v253;
                        v458 = a3;
                        v256 = v246[1];
                        *v245 = *v246;
                        v245[1] = v256;
                        v257 = v246[3];
                        v245[2] = v246[2];
                        v245[3] = v257;
                        v245[4] = v246[4];
                        *((_DWORD *)v245 + 20) = *((_DWORD *)v246 + 20);
                        *((_BYTE *)v245 + 84) = *((_BYTE *)v246 + 84);
                        v258 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                        v259 = v258[15];
                        v260 = (_WORD *)((char *)v245 + v259);
                        v261 = (_WORD *)((char *)v246 + v259);
                        v262 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v261, 1, v262))
                        {
                          v263 = sub_23F6916B8(&qword_256EA2D78);
                          memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
                        }
                        else
                        {
                          *(_OWORD *)v260 = *(_OWORD *)v261;
                          v260[8] = v261[8];
                          v314 = *(int *)(v262 + 28);
                          __srce = (char *)v260 + v314;
                          v315 = (char *)v261 + v314;
                          v316 = sub_23FB2D718();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v316 - 8) + 32))(__srce, v315, v316);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v260, 0, 1, v262);
                        }
                        *(_OWORD *)((char *)v245 + v258[16]) = *(_OWORD *)((char *)v246 + v258[16]);
                        *(_OWORD *)((char *)v245 + v258[17]) = *(_OWORD *)((char *)v246 + v258[17]);
                        *(_OWORD *)((char *)v245 + v258[18]) = *(_OWORD *)((char *)v246 + v258[18]);
                        v317 = v258[19];
                        v318 = (_DWORD *)((char *)v245 + v317);
                        v319 = (_DWORD *)((char *)v246 + v317);
                        v320 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v319, 1, v320))
                        {
                          v321 = sub_23F6916B8(&qword_256EA2D68);
                          memcpy(v318, v319, *(_QWORD *)(*(_QWORD *)(v321 - 8) + 64));
                        }
                        else
                        {
                          *v318 = *v319;
                          *((_BYTE *)v318 + 4) = *((_BYTE *)v319 + 4);
                          *(_OWORD *)(v318 + 2) = *(_OWORD *)(v319 + 2);
                          v318[6] = v319[6];
                          *((_BYTE *)v318 + 28) = *((_BYTE *)v319 + 28);
                          v318[8] = v319[8];
                          *((_BYTE *)v318 + 36) = *((_BYTE *)v319 + 36);
                          v322 = *(int *)(v320 + 32);
                          __srcf = (char *)v318 + v322;
                          v323 = (char *)v319 + v322;
                          v324 = sub_23FB2D718();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v324 - 8) + 32))(__srcf, v323, v324);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v318, 0, 1, v320);
                        }
                        v325 = v258[20];
                        v326 = (char *)v245 + v325;
                        v327 = (char *)v246 + v325;
                        *(_QWORD *)v326 = *(_QWORD *)v327;
                        v326[8] = v327[8];
                        *(_OWORD *)((char *)v245 + v258[21]) = *(_OWORD *)((char *)v246 + v258[21]);
                        *((_BYTE *)v245 + v258[22]) = *((_BYTE *)v246 + v258[22]);
                        *((_BYTE *)v245 + v258[23]) = *((_BYTE *)v246 + v258[23]);
                        v328 = v258[24];
                        v329 = (_QWORD *)((char *)v245 + v328);
                        v330 = (_QWORD *)((char *)v246 + v328);
                        v331 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v330, 1, v331))
                        {
                          v332 = sub_23F6916B8(&qword_256EA2D58);
                          memcpy(v329, v330, *(_QWORD *)(*(_QWORD *)(v332 - 8) + 64));
                        }
                        else
                        {
                          *v329 = *v330;
                          *(_OWORD *)(v329 + 1) = *(_OWORD *)(v330 + 1);
                          *(_OWORD *)(v329 + 3) = *(_OWORD *)(v330 + 3);
                          *(_OWORD *)(v329 + 5) = *(_OWORD *)(v330 + 5);
                          *(_OWORD *)(v329 + 7) = *(_OWORD *)(v330 + 7);
                          *(_OWORD *)(v329 + 9) = *(_OWORD *)(v330 + 9);
                          v333 = *(int *)(v331 + 40);
                          __srcg = (char *)v329 + v333;
                          v334 = (char *)v330 + v333;
                          v335 = sub_23FB2D718();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v335 - 8) + 32))(__srcg, v334, v335);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v329, 0, 1, v331);
                        }
                        v336 = v258[25];
                        v337 = (char *)v245 + v336;
                        v338 = (char *)v246 + v336;
                        v339 = sub_23FB2D718();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v339 - 8) + 32))(v337, v338, v339);
                        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v245, 0, 1, v450);
                        a3 = v458;
                        v236 = v464;
                        goto LABEL_160;
                      }
                      goto LABEL_112;
                    }
                    if (v255)
                    {
                      sub_23F93DADC((uint64_t)v245, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_112:
                      v272 = sub_23F6916B8(&qword_256EA2D40);
                      memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
LABEL_160:
                      v414 = *(int *)(v247 + 20);
                      v415 = (char *)v245 + v414;
                      v416 = (char *)v246 + v414;
                      v417 = sub_23FB2D718();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v417 - 8) + 40))(v415, v416, v417);
                      goto LABEL_161;
                    }
                    *(_QWORD *)v245 = *(_QWORD *)v246;
                    swift_bridgeObjectRelease();
                    *((_QWORD *)v245 + 1) = *((_QWORD *)v246 + 1);
                    swift_bridgeObjectRelease();
                    v303 = *((_QWORD *)v246 + 3);
                    *((_QWORD *)v245 + 2) = *((_QWORD *)v246 + 2);
                    *((_QWORD *)v245 + 3) = v303;
                    swift_bridgeObjectRelease();
                    v304 = *((_QWORD *)v246 + 5);
                    *((_QWORD *)v245 + 4) = *((_QWORD *)v246 + 4);
                    *((_QWORD *)v245 + 5) = v304;
                    swift_bridgeObjectRelease();
                    v305 = *((_QWORD *)v246 + 7);
                    *((_QWORD *)v245 + 6) = *((_QWORD *)v246 + 6);
                    *((_QWORD *)v245 + 7) = v305;
                    swift_bridgeObjectRelease();
                    v306 = *((_QWORD *)v246 + 9);
                    *((_QWORD *)v245 + 8) = *((_QWORD *)v246 + 8);
                    *((_QWORD *)v245 + 9) = v306;
                    swift_bridgeObjectRelease();
                    *((_DWORD *)v245 + 20) = *((_DWORD *)v246 + 20);
                    *((_BYTE *)v245 + 84) = *((_BYTE *)v246 + 84);
                    v452 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
                    v307 = v452[15];
                    v308 = (uint64_t)v245 + v307;
                    v309 = (_OWORD *)((char *)v246 + v307);
                    v310 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
                    __src = (char *)v308;
                    LODWORD(v308) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v308, 1, v310);
                    v311 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v309, 1, v310);
                    if ((_DWORD)v308)
                    {
                      if (v311)
                      {
                        v312 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D78) - 8) + 64);
                        v313 = __src;
LABEL_135:
                        memcpy(v313, v309, v312);
                        goto LABEL_138;
                      }
                      *(_OWORD *)__src = *v309;
                      *((_WORD *)__src + 8) = *((_WORD *)v309 + 8);
                      v340 = *(int *)(v310 + 28);
                      v435 = &__src[v340];
                      v460 = a3;
                      v341 = (char *)v309 + v340;
                      v342 = sub_23FB2D718();
                      v343 = v341;
                      a3 = v460;
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 32))(v435, v343, v342);
                      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__src, 0, 1, v310);
                    }
                    else
                    {
                      if (v311)
                      {
                        sub_23F93DADC((uint64_t)__src, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
                        v312 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D78) - 8) + 64);
                        v313 = __src;
                        goto LABEL_135;
                      }
                      v344 = *((_QWORD *)v309 + 1);
                      *(_QWORD *)__src = *(_QWORD *)v309;
                      *((_QWORD *)__src + 1) = v344;
                      swift_bridgeObjectRelease();
                      *((_WORD *)__src + 8) = *((_WORD *)v309 + 8);
                      v345 = *(int *)(v310 + 28);
                      v346 = &__src[v345];
                      v347 = (char *)v309 + v345;
                      v348 = sub_23FB2D718();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v348 - 8) + 40))(v346, v347, v348);
                    }
LABEL_138:
                    v349 = v452[16];
                    v350 = (uint64_t *)((char *)v245 + v349);
                    v351 = (uint64_t *)((char *)v246 + v349);
                    v352 = *(_QWORD *)((char *)v245 + v349 + 8);
                    if (v352 >> 60 != 15)
                    {
                      v353 = v351[1];
                      if (v353 >> 60 != 15)
                      {
                        v354 = *v350;
                        *v350 = *v351;
                        v350[1] = v353;
                        sub_23F6BC34C(v354, v352);
LABEL_143:
                        v355 = v452[17];
                        v356 = (_QWORD *)((char *)v245 + v355);
                        v357 = (uint64_t *)((char *)v246 + v355);
                        v359 = *v357;
                        v358 = v357[1];
                        *v356 = v359;
                        v356[1] = v358;
                        swift_bridgeObjectRelease();
                        v360 = v452[18];
                        v361 = (_QWORD *)((char *)v245 + v360);
                        v362 = (uint64_t *)((char *)v246 + v360);
                        v364 = *v362;
                        v363 = v362[1];
                        *v361 = v364;
                        v361[1] = v363;
                        swift_bridgeObjectRelease();
                        v365 = v452[19];
                        v366 = (uint64_t)v245 + v365;
                        v367 = (_DWORD *)((char *)v246 + v365);
                        v368 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
                        __srca = (char *)v366;
                        LODWORD(v366) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v366, 1, v368);
                        v369 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v367, 1, v368);
                        if ((_DWORD)v366)
                        {
                          if (v369)
                          {
                            v370 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D68) - 8) + 64);
                            v371 = __srca;
LABEL_148:
                            memcpy(v371, v367, v370);
                            goto LABEL_151;
                          }
                          *(_DWORD *)__srca = *v367;
                          __srca[4] = *((_BYTE *)v367 + 4);
                          *(_OWORD *)(__srca + 8) = *(_OWORD *)(v367 + 2);
                          *((_DWORD *)__srca + 6) = v367[6];
                          __srca[28] = *((_BYTE *)v367 + 28);
                          *((_DWORD *)__srca + 8) = v367[8];
                          __srca[36] = *((_BYTE *)v367 + 36);
                          v372 = *(int *)(v368 + 32);
                          v432 = &__srca[v372];
                          v461 = a3;
                          v373 = (char *)v367 + v372;
                          v374 = sub_23FB2D718();
                          v375 = v373;
                          a3 = v461;
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v374 - 8) + 32))(v432, v375, v374);
                          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__srca, 0, 1, v368);
                        }
                        else
                        {
                          if (v369)
                          {
                            sub_23F93DADC((uint64_t)__srca, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
                            v370 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D68) - 8) + 64);
                            v371 = __srca;
                            goto LABEL_148;
                          }
                          *(_DWORD *)__srca = *v367;
                          __srca[4] = *((_BYTE *)v367 + 4);
                          v376 = *((_QWORD *)v367 + 2);
                          *((_QWORD *)__srca + 1) = *((_QWORD *)v367 + 1);
                          *((_QWORD *)__srca + 2) = v376;
                          swift_bridgeObjectRelease();
                          *((_DWORD *)__srca + 6) = v367[6];
                          __srca[28] = *((_BYTE *)v367 + 28);
                          *((_DWORD *)__srca + 8) = v367[8];
                          __srca[36] = *((_BYTE *)v367 + 36);
                          v377 = *(int *)(v368 + 32);
                          v378 = &__srca[v377];
                          v379 = (char *)v367 + v377;
                          v380 = sub_23FB2D718();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v380 - 8) + 40))(v378, v379, v380);
                        }
LABEL_151:
                        v381 = v452[20];
                        v382 = (char *)v245 + v381;
                        v383 = (char *)v246 + v381;
                        *(_QWORD *)v382 = *(_QWORD *)v383;
                        v382[8] = v383[8];
                        v384 = v452[21];
                        v385 = (_QWORD *)((char *)v245 + v384);
                        v386 = (uint64_t *)((char *)v246 + v384);
                        v388 = *v386;
                        v387 = v386[1];
                        *v385 = v388;
                        v385[1] = v387;
                        swift_bridgeObjectRelease();
                        *((_BYTE *)v245 + v452[22]) = *((_BYTE *)v246 + v452[22]);
                        *((_BYTE *)v245 + v452[23]) = *((_BYTE *)v246 + v452[23]);
                        v389 = v452[24];
                        v390 = (uint64_t)v245 + v389;
                        v391 = (char *)v246 + v389;
                        v392 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                        v436 = v390;
                        LODWORD(v390) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v390, 1, v392);
                        v393 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v391, 1, v392);
                        if ((_DWORD)v390)
                        {
                          if (!v393)
                          {
                            *(_QWORD *)v436 = *(_QWORD *)v391;
                            *(_OWORD *)(v436 + 8) = *(_OWORD *)(v391 + 8);
                            *(_OWORD *)(v436 + 24) = *(_OWORD *)(v391 + 24);
                            *(_OWORD *)(v436 + 40) = *(_OWORD *)(v391 + 40);
                            *(_OWORD *)(v436 + 56) = *(_OWORD *)(v391 + 56);
                            *(_OWORD *)(v436 + 72) = *(_OWORD *)(v391 + 72);
                            v396 = *(int *)(v392 + 40);
                            v397 = v436 + v396;
                            v462 = a3;
                            v398 = &v391[v396];
                            v399 = sub_23FB2D718();
                            v400 = v398;
                            a3 = v462;
                            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v399 - 8) + 32))(v397, v400, v399);
                            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v436, 0, 1, v392);
                            goto LABEL_159;
                          }
                          v394 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D58) - 8) + 64);
                          v395 = (void *)v436;
                        }
                        else
                        {
                          if (!v393)
                          {
                            *(_QWORD *)v436 = *(_QWORD *)v391;
                            swift_bridgeObjectRelease();
                            v401 = *((_QWORD *)v391 + 2);
                            *(_QWORD *)(v436 + 8) = *((_QWORD *)v391 + 1);
                            *(_QWORD *)(v436 + 16) = v401;
                            swift_bridgeObjectRelease();
                            v402 = *((_QWORD *)v391 + 4);
                            *(_QWORD *)(v436 + 24) = *((_QWORD *)v391 + 3);
                            *(_QWORD *)(v436 + 32) = v402;
                            swift_bridgeObjectRelease();
                            v403 = *((_QWORD *)v391 + 6);
                            *(_QWORD *)(v436 + 40) = *((_QWORD *)v391 + 5);
                            *(_QWORD *)(v436 + 48) = v403;
                            swift_bridgeObjectRelease();
                            v404 = *((_QWORD *)v391 + 8);
                            *(_QWORD *)(v436 + 56) = *((_QWORD *)v391 + 7);
                            *(_QWORD *)(v436 + 64) = v404;
                            swift_bridgeObjectRelease();
                            v405 = *((_QWORD *)v391 + 10);
                            *(_QWORD *)(v436 + 72) = *((_QWORD *)v391 + 9);
                            *(_QWORD *)(v436 + 80) = v405;
                            swift_bridgeObjectRelease();
                            v406 = *(int *)(v392 + 40);
                            v407 = v436 + v406;
                            v408 = &v391[v406];
                            v409 = sub_23FB2D718();
                            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v409 - 8) + 40))(v407, v408, v409);
                            goto LABEL_159;
                          }
                          sub_23F93DADC(v436, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                          v394 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2D58) - 8) + 64);
                          v395 = (void *)v436;
                        }
                        memcpy(v395, v391, v394);
LABEL_159:
                        v410 = v452[25];
                        v411 = (char *)v245 + v410;
                        v412 = (char *)v246 + v410;
                        v413 = sub_23FB2D718();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v413 - 8) + 40))(v411, v412, v413);
                        v236 = v464;
                        goto LABEL_160;
                      }
                      sub_23F6DC470((uint64_t)v350);
                    }
                    *(_OWORD *)v350 = *(_OWORD *)v351;
                    goto LABEL_143;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v242 + 8))(v238, v448);
                }
                v243 = sub_23F6916B8(&qword_256EA2610);
                memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
                goto LABEL_96;
              }
LABEL_41:
              v83 = sub_23F6916B8(&qword_256EA2CE8);
              memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
              goto LABEL_90;
            }
            if (v78)
            {
              sub_23F93DADC((uint64_t)v74, type metadata accessor for ContextProtoContextMetadata);
              goto LABEL_41;
            }
            *v74 = *v75;
            swift_bridgeObjectRelease();
            v132 = v75[2];
            v74[1] = v75[1];
            v74[2] = v132;
            swift_bridgeObjectRelease();
            v133 = v75[4];
            v74[3] = v75[3];
            v74[4] = v133;
            swift_bridgeObjectRelease();
            v134 = v76[7];
            v135 = (char *)v75 + v134;
            v433 = (uint64_t)v74 + v134;
            v136 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v74 + v134, 1, v62);
            v137 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v135, 1, v62);
            if (v136)
            {
              if (v137)
              {
                v138 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2CF8) - 8) + 64);
                v139 = (void *)v433;
LABEL_78:
                memcpy(v139, v135, v138);
                goto LABEL_81;
              }
              *(_DWORD *)v433 = *(_DWORD *)v135;
              *(_BYTE *)(v433 + 4) = v135[4];
              v201 = *(int *)(v62 + 24);
              v202 = v433 + v201;
              v456 = a3;
              v203 = &v135[v201];
              v204 = sub_23FB2D718();
              v205 = v203;
              a3 = v456;
              (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v204 - 8) + 32))(v202, v205, v204);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v433, 0, 1, v62);
            }
            else
            {
              if (v137)
              {
                sub_23F93DADC(v433, type metadata accessor for ContextProtoConfidence);
                v138 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2CF8) - 8) + 64);
                v139 = (void *)v433;
                goto LABEL_78;
              }
              *(_DWORD *)v433 = *(_DWORD *)v135;
              *(_BYTE *)(v433 + 4) = v135[4];
              v206 = *(int *)(v62 + 24);
              v207 = v433 + v206;
              v208 = &v135[v206];
              v209 = sub_23FB2D718();
              (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v209 - 8) + 40))(v207, v208, v209);
            }
LABEL_81:
            v210 = v76[8];
            v211 = (uint64_t)v74 + v210;
            v212 = (char *)v75 + v210;
            v213 = type metadata accessor for ContextProtoBoundingBox(0);
            v457 = v211;
            LODWORD(v211) = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v211, 1, v213);
            v214 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v212, 1, v213);
            if ((_DWORD)v211)
            {
              if (!v214)
              {
                *(_DWORD *)v457 = *(_DWORD *)v212;
                *(_BYTE *)(v457 + 4) = v212[4];
                *(_DWORD *)(v457 + 8) = *((_DWORD *)v212 + 2);
                *(_BYTE *)(v457 + 12) = v212[12];
                *(_DWORD *)(v457 + 16) = *((_DWORD *)v212 + 4);
                *(_BYTE *)(v457 + 20) = v212[20];
                *(_BYTE *)(v457 + 28) = v212[28];
                *(_DWORD *)(v457 + 24) = *((_DWORD *)v212 + 6);
                v217 = *(int *)(v213 + 32);
                v434 = v457 + v217;
                v218 = &v212[v217];
                v219 = sub_23FB2D718();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v434, v218, v219);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v457, 0, 1, v213);
                goto LABEL_89;
              }
              v215 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2800) - 8) + 64);
              v216 = (void *)v457;
            }
            else
            {
              if (!v214)
              {
                *(_DWORD *)v457 = *(_DWORD *)v212;
                *(_BYTE *)(v457 + 4) = v212[4];
                *(_DWORD *)(v457 + 8) = *((_DWORD *)v212 + 2);
                *(_BYTE *)(v457 + 12) = v212[12];
                *(_DWORD *)(v457 + 16) = *((_DWORD *)v212 + 4);
                *(_BYTE *)(v457 + 20) = v212[20];
                *(_BYTE *)(v457 + 28) = v212[28];
                *(_DWORD *)(v457 + 24) = *((_DWORD *)v212 + 6);
                v220 = *(int *)(v213 + 32);
                v221 = v457 + v220;
                v222 = &v212[v220];
                v223 = sub_23FB2D718();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 40))(v221, v222, v223);
                goto LABEL_89;
              }
              sub_23F93DADC(v457, type metadata accessor for ContextProtoBoundingBox);
              v215 = *(_QWORD *)(*(_QWORD *)(sub_23F6916B8(&qword_256EA2800) - 8) + 64);
              v216 = (void *)v457;
            }
            memcpy(v216, v212, v215);
LABEL_89:
            v224 = v76[9];
            v225 = (char *)v74 + v224;
            v226 = (char *)v75 + v224;
            *(_QWORD *)v225 = *(_QWORD *)v226;
            v225[8] = v226[8];
            v227 = v76[10];
            v228 = (_QWORD *)((char *)v74 + v227);
            v229 = (_QWORD *)((char *)v75 + v227);
            v231 = *v229;
            v230 = v229[1];
            *v228 = v231;
            v228[1] = v230;
            swift_bridgeObjectRelease();
            v232 = v76[11];
            v233 = (char *)v74 + v232;
            v234 = (char *)v75 + v232;
            v235 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 40))(v233, v234, v235);
            goto LABEL_90;
          }
          sub_23F93DADC((uint64_t)v60, type metadata accessor for ContextProtoConfidence);
        }
        v72 = sub_23F6916B8(&qword_256EA2CF8);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v32, v34);
    }
    v58 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_29;
  }
  if (v19)
  {
LABEL_13:
    v25 = sub_23F6916B8(&qword_256EA84C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_162;
  }
  *v15 = *v16;
  v20 = v17[5];
  v21 = &v15[v20];
  v22 = &v16[v20];
  v23 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v37 = v17[6];
  v38 = &v15[v37];
  v463 = v16;
  v39 = &v16[v37];
  v40 = type metadata accessor for ContextProtoConfidence(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_23F6916B8(&qword_256EA2CF8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v38 = *(_DWORD *)v39;
    v38[4] = v39[4];
    v42 = *(int *)(v40 + 24);
    v43 = a3;
    v44 = &v38[v42];
    v45 = &v39[v42];
    v46 = sub_23FB2D718();
    v47 = v44;
    a3 = v43;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v47, v45, v46);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v465 = v17;
  v48 = v17[7];
  v49 = &v15[v48];
  v50 = &v463[v48];
  v51 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, (uint64_t)v51))
  {
    v52 = sub_23F6916B8(&qword_256EA2CE8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v453 = a3;
    *v49 = *v50;
    *(_OWORD *)(v49 + 1) = *(_OWORD *)(v50 + 1);
    *(_OWORD *)(v49 + 3) = *(_OWORD *)(v50 + 3);
    v53 = v51[7];
    v54 = (char *)v49 + v53;
    v55 = (char *)v50 + v53;
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50 + v53, 1, v40))
    {
      v56 = sub_23F6916B8(&qword_256EA2CF8);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v54 = *(_DWORD *)v55;
      v54[4] = v55[4];
      v84 = *(int *)(v40 + 24);
      v445 = a2;
      v85 = &v54[v84];
      v86 = &v55[v84];
      v87 = sub_23FB2D718();
      v88 = v85;
      a2 = v445;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v88, v86, v87);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v54, 0, 1, v40);
    }
    v89 = v51[8];
    v90 = (_DWORD *)((char *)v49 + v89);
    v91 = (_DWORD *)((char *)v50 + v89);
    v92 = type metadata accessor for ContextProtoBoundingBox(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v91, 1, v92))
    {
      v93 = sub_23F6916B8(&qword_256EA2800);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      *v90 = *v91;
      *((_BYTE *)v90 + 4) = *((_BYTE *)v91 + 4);
      v90[2] = v91[2];
      *((_BYTE *)v90 + 12) = *((_BYTE *)v91 + 12);
      v90[4] = v91[4];
      *((_BYTE *)v90 + 20) = *((_BYTE *)v91 + 20);
      *((_BYTE *)v90 + 28) = *((_BYTE *)v91 + 28);
      v90[6] = v91[6];
      v94 = *(int *)(v92 + 32);
      v446 = a2;
      v95 = (char *)v90 + v94;
      v96 = (char *)v91 + v94;
      v97 = sub_23FB2D718();
      v98 = v95;
      a2 = v446;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v98, v96, v97);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v90, 0, 1, v92);
    }
    v99 = v51[9];
    v100 = (char *)v49 + v99;
    v101 = (char *)v50 + v99;
    *(_QWORD *)v100 = *(_QWORD *)v101;
    v100[8] = v101[8];
    *(_OWORD *)((char *)v49 + v51[10]) = *(_OWORD *)((char *)v50 + v51[10]);
    v102 = v51[11];
    v103 = (char *)v49 + v102;
    v104 = (char *)v50 + v102;
    v105 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, (uint64_t)v51);
    a3 = v453;
  }
  v106 = v463;
  v107 = v465[8];
  v108 = &v15[v107];
  v109 = &v463[v107];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&v463[v107], 1, v23))
  {
    v110 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v108, v109, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v108, 0, 1, v23);
  }
  v111 = v465[9];
  v112 = &v15[v111];
  v113 = &v463[v111];
  v114 = type metadata accessor for ContextProtoStructuredContext(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v113, 1, v114))
  {
    v115 = sub_23F6916B8(&qword_256EA2CD8);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
  }
  else
  {
    v116 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v113, 1, v116))
    {
      v117 = sub_23F6916B8(&qword_256EA2D40);
      memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    }
    else
    {
      v449 = v116;
      v455 = a3;
      v118 = v113[1];
      *v112 = *v113;
      v112[1] = v118;
      v119 = v113[3];
      v112[2] = v113[2];
      v112[3] = v119;
      v112[4] = v113[4];
      *((_DWORD *)v112 + 20) = *((_DWORD *)v113 + 20);
      *((_BYTE *)v112 + 84) = *((_BYTE *)v113 + 84);
      v120 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v121 = v120[15];
      v122 = (_WORD *)((char *)v112 + v121);
      v123 = (_WORD *)((char *)v113 + v121);
      v124 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      v447 = a2;
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v123, 1, v124))
      {
        v125 = sub_23F6916B8(&qword_256EA2D78);
        memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v122 = *(_OWORD *)v123;
        v122[8] = v123[8];
        v149 = *(int *)(v124 + 28);
        v150 = (char *)v122 + v149;
        v151 = (char *)v123 + v149;
        v152 = sub_23FB2D718();
        v153 = v150;
        a2 = v447;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v153, v151, v152);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v122, 0, 1, v124);
      }
      *(_OWORD *)((char *)v112 + v120[16]) = *(_OWORD *)((char *)v113 + v120[16]);
      *(_OWORD *)((char *)v112 + v120[17]) = *(_OWORD *)((char *)v113 + v120[17]);
      *(_OWORD *)((char *)v112 + v120[18]) = *(_OWORD *)((char *)v113 + v120[18]);
      v154 = v120[19];
      v155 = (_DWORD *)((char *)v112 + v154);
      v156 = (_DWORD *)((char *)v113 + v154);
      v157 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v156, 1, v157))
      {
        v158 = sub_23F6916B8(&qword_256EA2D68);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      }
      else
      {
        *v155 = *v156;
        *((_BYTE *)v155 + 4) = *((_BYTE *)v156 + 4);
        *(_OWORD *)(v155 + 2) = *(_OWORD *)(v156 + 2);
        v155[6] = v156[6];
        *((_BYTE *)v155 + 28) = *((_BYTE *)v156 + 28);
        v155[8] = v156[8];
        *((_BYTE *)v155 + 36) = *((_BYTE *)v156 + 36);
        v171 = *(int *)(v157 + 32);
        v172 = (char *)v155 + v171;
        v173 = (char *)v156 + v171;
        v174 = sub_23FB2D718();
        v175 = v172;
        a2 = v447;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v175, v173, v174);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v155, 0, 1, v157);
      }
      v176 = v120[20];
      v177 = (char *)v112 + v176;
      v178 = (char *)v113 + v176;
      *(_QWORD *)v177 = *(_QWORD *)v178;
      v177[8] = v178[8];
      *(_OWORD *)((char *)v112 + v120[21]) = *(_OWORD *)((char *)v113 + v120[21]);
      *((_BYTE *)v112 + v120[22]) = *((_BYTE *)v113 + v120[22]);
      *((_BYTE *)v112 + v120[23]) = *((_BYTE *)v113 + v120[23]);
      v179 = v120[24];
      v180 = (_QWORD *)((char *)v112 + v179);
      v181 = (_QWORD *)((char *)v113 + v179);
      v182 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v181, 1, v182))
      {
        v183 = sub_23F6916B8(&qword_256EA2D58);
        memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
      }
      else
      {
        *v180 = *v181;
        *(_OWORD *)(v180 + 1) = *(_OWORD *)(v181 + 1);
        *(_OWORD *)(v180 + 3) = *(_OWORD *)(v181 + 3);
        *(_OWORD *)(v180 + 5) = *(_OWORD *)(v181 + 5);
        *(_OWORD *)(v180 + 7) = *(_OWORD *)(v181 + 7);
        *(_OWORD *)(v180 + 9) = *(_OWORD *)(v181 + 9);
        v184 = *(int *)(v182 + 40);
        v185 = (char *)v180 + v184;
        v186 = (char *)v181 + v184;
        v187 = sub_23FB2D718();
        v188 = v185;
        a2 = v447;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v188, v186, v187);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v180, 0, 1, v182);
      }
      v189 = v120[25];
      v190 = (char *)v112 + v189;
      v191 = (char *)v113 + v189;
      v192 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v190, v191, v192);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v112, 0, 1, v449);
      a3 = v455;
      v106 = v463;
    }
    v193 = *(int *)(v114 + 20);
    v194 = (char *)v112 + v193;
    v195 = (char *)v113 + v193;
    v196 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v194, v195, v196);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v112, 0, 1, v114);
  }
  *(_OWORD *)&v15[v465[10]] = *(_OWORD *)&v106[v465[10]];
  v197 = v465[11];
  v198 = &v15[v197];
  v199 = &v106[v197];
  v200 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v198, v199, v200);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, (uint64_t)v465);
LABEL_162:
  v427 = *(int *)(a3 + 24);
  v428 = (char *)a1 + v427;
  v429 = (char *)a2 + v427;
  v430 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v430 - 8) + 40))(v428, v429, v430);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRetrievedContextStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA4BDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA4D23C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRetrievedContextStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA4BE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA4D2B0(a1, a2, a3, a4, &qword_256EA25E0);
}

void sub_23FA4BE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA4D32C(a1, a2, a3, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      v11 = *(int *)(v7 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_23FB2D718();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, (uint64_t)v19))
    {
      v20 = sub_23F6916B8(&qword_256EA84B8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = v18[1];
      *v17 = *v18;
      v17[1] = v21;
      v22 = v19[5];
      v23 = (char *)v17 + v22;
      v24 = (char *)v18 + v22;
      v25 = sub_23FB2EB28();
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25))
      {
        v26 = sub_23F6916B8(&qword_256EA2E00);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
      }
      v27 = v19[6];
      v28 = (char *)v17 + v27;
      v29 = (char *)v18 + v27;
      v30 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30))
      {
        v31 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v30);
      }
      v32 = v19[7];
      v33 = (char *)v17 + v32;
      v34 = (char *)v18 + v32;
      v35 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, (uint64_t)v19);
    }
    v36 = *(int *)(a3 + 24);
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease();
    v9 = v7 + v8[5];
    v10 = sub_23FB2EB28();
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    v11 = v7 + v8[6];
    v12 = sub_23FB2EB1C();
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = v7 + v8[7];
    v14 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = a1 + *(int *)(a2 + 24);
  v16 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

_QWORD *initializeWithCopy for TranscriptProtoDynamicEnumerationEntityStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    v18 = sub_23F6916B8(&qword_256EA84B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = v16[1];
    *v15 = *v16;
    v15[1] = v19;
    v20 = v17[5];
    v21 = (char *)v15 + v20;
    v22 = (char *)v16 + v20;
    v23 = sub_23FB2EB28();
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
    {
      v24 = sub_23F6916B8(&qword_256EA2E00);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
    }
    v25 = v17[6];
    v26 = (char *)v15 + v25;
    v27 = (char *)v16 + v25;
    v28 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v30 = v17[7];
    v31 = (char *)v15 + v30;
    v32 = (char *)v16 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  v34 = *(int *)(a3 + 24);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoDynamicEnumerationEntityStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v9 = *(int *)(v6 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(int *)(v6 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, (uint64_t)v18);
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, (uint64_t)v18);
  if (!v19)
  {
    if (v20)
    {
      sub_23F93DADC((uint64_t)v16, type metadata accessor for ContextProtoDynamicEnumerationEntity);
      goto LABEL_13;
    }
    *v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = v18[5];
    v32 = (char *)v16 + v31;
    v33 = (char *)v17 + v31;
    v34 = sub_23FB2EB28();
    v35 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34);
    v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
        goto LABEL_26;
      }
    }
    else
    {
      v46 = *(_QWORD *)(v34 - 8);
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v32, v33, v34);
LABEL_26:
        v48 = v18[6];
        v49 = (char *)v16 + v48;
        v50 = (char *)v17 + v48;
        v51 = sub_23FB2EB1C();
        v52 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v49, 1, v51);
        v53 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v51);
        if (v52)
        {
          if (!v53)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v49, 0, 1, v51);
LABEL_32:
            v56 = v18[7];
            v57 = (char *)v16 + v56;
            v58 = (char *)v17 + v56;
            v59 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
            goto LABEL_33;
          }
        }
        else
        {
          v54 = *(_QWORD *)(v51 - 8);
          if (!v53)
          {
            (*(void (**)(char *, char *, uint64_t))(v54 + 24))(v49, v50, v51);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v51);
        }
        v55 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v34);
    }
    v47 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_26;
  }
  if (v20)
  {
LABEL_13:
    v26 = sub_23F6916B8(&qword_256EA84B8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_33;
  }
  *v16 = *v17;
  v16[1] = v17[1];
  v21 = v18[5];
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = sub_23FB2EB28();
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24))
  {
    v25 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v22, 0, 1, v24);
  }
  v37 = v18[6];
  v38 = (char *)v16 + v37;
  v39 = (char *)v17 + v37;
  v40 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
  {
    v41 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
  }
  v42 = v18[7];
  v43 = (char *)v16 + v42;
  v44 = (char *)v17 + v42;
  v45 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
LABEL_33:
  v60 = *(int *)(a3 + 24);
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoDynamicEnumerationEntityStatement(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v8 = *(int *)(v6 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    v16 = sub_23F6916B8(&qword_256EA84B8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = v15[5];
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = sub_23FB2EB28();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = sub_23F6916B8(&qword_256EA2E00);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v22 = v15[6];
    v23 = (char *)v13 + v22;
    v24 = (char *)v14 + v22;
    v25 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v24, 1, v25))
    {
      v26 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v23, 0, 1, v25);
    }
    v27 = v15[7];
    v28 = (char *)v13 + v27;
    v29 = (char *)v14 + v27;
    v30 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  v31 = *(int *)(a3 + 24);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoDynamicEnumerationEntityStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int *v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v9 = *(int *)(v6 + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v13 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v26 = a2[2];
  a1[1] = a2[1];
  a1[2] = v26;
  swift_bridgeObjectRelease();
  v27 = *(int *)(v6 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
LABEL_7:
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  v19 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (v19)
    {
      sub_23F93DADC((uint64_t)v15, type metadata accessor for ContextProtoDynamicEnumerationEntity);
      goto LABEL_13;
    }
    v31 = v16[1];
    *v15 = *v16;
    v15[1] = v31;
    swift_bridgeObjectRelease();
    v32 = v17[5];
    v33 = (char *)v15 + v32;
    v34 = (char *)v16 + v32;
    v35 = sub_23FB2EB28();
    v36 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v35);
    v37 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v34, 1, v35);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v33, 0, 1, v35);
        goto LABEL_26;
      }
    }
    else
    {
      v47 = *(_QWORD *)(v35 - 8);
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v33, v34, v35);
LABEL_26:
        v49 = v17[6];
        v50 = (char *)v15 + v49;
        v51 = (char *)v16 + v49;
        v52 = sub_23FB2EB1C();
        v53 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v52);
        v54 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v51, 1, v52);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v50, 0, 1, v52);
LABEL_32:
            v57 = v17[7];
            v58 = (char *)v15 + v57;
            v59 = (char *)v16 + v57;
            v60 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
            goto LABEL_33;
          }
        }
        else
        {
          v55 = *(_QWORD *)(v52 - 8);
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 40))(v50, v51, v52);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v52);
        }
        v56 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v35);
    }
    v48 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_26;
  }
  if (v19)
  {
LABEL_13:
    v25 = sub_23F6916B8(&qword_256EA84B8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_33;
  }
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v20 = v17[5];
  v21 = (char *)v15 + v20;
  v22 = (char *)v16 + v20;
  v23 = sub_23FB2EB28();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_23F6916B8(&qword_256EA2E00);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v38 = v17[6];
  v39 = (char *)v15 + v38;
  v40 = (char *)v16 + v38;
  v41 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41))
  {
    v42 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
  }
  v43 = v17[7];
  v44 = (char *)v15 + v43;
  v45 = (char *)v16 + v43;
  v46 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
LABEL_33:
  v61 = *(int *)(a3 + 24);
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDynamicEnumerationEntityStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA4D228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA4D23C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t sub_23FA4D23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_23FAC3030(a1, a2, a3, a4);
  sub_23F6F07DC();
  if (v8)
  {
    v6 = sub_23F876D78();
  }
  else
  {
    sub_23F6B6088();
    sub_23F6F07DC();
    if (v8)
    {
      sub_23F6F0B94();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0B08();
    }
    v6 = v5 + v9;
  }
  return sub_23F6F07D0(v6, v4, v7);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDynamicEnumerationEntityStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA4D29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA4D2B0(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t sub_23FA4D2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FAC2EE0(a1, a2, a3, a4, a5);
  sub_23F6F07EC();
  if (v5)
  {
    sub_23F876DBC();
  }
  else
  {
    sub_23F72E4BC();
    sub_23F6F07EC();
    if (v5)
    {
      sub_23F6F0BC4();
    }
    else
    {
      sub_23F6B53A4();
      sub_23F6F0BD0();
    }
  }
  sub_23F6F08B0();
  return sub_23F713EE0(v6, v7, v8, v9);
}

void sub_23FA4D308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA4D32C(a1, a2, a3, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

void sub_23FA4D32C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_23FAC3148(a1, a2, a3, a4, a5);
  if (v5 <= 0x3F)
  {
    v6 = sub_23F8796A8();
    sub_23FAC3D7C(v6);
    if (v7 <= 0x3F)
    {
      sub_23F6F0B14();
      if (v8 <= 0x3F)
      {
        sub_23F6F0978();
        sub_23F6F0BFC();
      }
    }
  }
  sub_23F7564F0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSafetyModeRelease()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSafetyModeRelease()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSafetyModeException()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSafetyModeException()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA4D3CC()
{
  sub_23FABE678();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterSet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _WORD *v20;
  _WORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = *(int *)(a3 + 24);
    v9 = (_BYTE *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, (uint64_t)v11))
    {
      v12 = sub_23F6916B8(&qword_256EA2628);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      v14 = v11[5];
      v15 = &v9[v14];
      v16 = &v10[v14];
      v17 = sub_23FB2EB1C();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_23F6916B8(&qword_256EA2610);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v19 = v11[6];
      v20 = &v9[v19];
      v21 = &v10[v19];
      v22 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22))
      {
        v23 = sub_23F6916B8(&qword_256EA8588);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v20 = *(_QWORD *)v21;
        v20[4] = v21[4];
        v24 = *(int *)(v22 + 20);
        v25 = (char *)v20 + v24;
        v26 = (char *)v21 + v24;
        v27 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
      }
      v28 = v11[7];
      v29 = &v9[v28];
      v30 = &v10[v28];
      v31 = type metadata accessor for TranscriptProtoStatementID(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, v31))
      {
        v32 = sub_23F6916B8(&qword_256EA25E0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v29 = *(_DWORD *)v30;
        v33 = v30[2];
        v29[1] = v30[1];
        v29[2] = v33;
        v34 = *(int *)(v31 + 24);
        v46 = (char *)v30 + v34;
        v47 = (char *)v29 + v34;
        v35 = sub_23FB2D718();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v47, v46, v35);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v31);
      }
      v36 = v11[8];
      v37 = &v9[v36];
      v38 = &v10[v36];
      v39 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
    }
    v40 = *(int *)(a3 + 28);
    v41 = (char *)v4 + v40;
    v42 = (uint64_t)a2 + v40;
    v43 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, (uint64_t)v5))
  {
    v6 = v4 + v5[5];
    v7 = sub_23FB2EB1C();
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v6, 1, v7))(*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v8 = v4 + v5[6];
    v9 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
    {
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    }
    v12 = v4 + v5[7];
    v13 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(v13 + 24);
      v15 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    v16 = v4 + v5[8];
    v17 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  v18 = a1 + *(int *)(a2 + 28);
  v19 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
}

uint64_t initializeWithCopy for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  _WORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, (uint64_t)v10))
  {
    v11 = sub_23F6916B8(&qword_256EA2628);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v12 = v10[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v14, 1, v15))
    {
      v16 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v13, 0, 1, v15);
    }
    v17 = v10[6];
    v18 = &v8[v17];
    v19 = &v9[v17];
    v20 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = sub_23F6916B8(&qword_256EA8588);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[4] = v19[4];
      v22 = *(int *)(v20 + 20);
      v23 = (char *)v18 + v22;
      v24 = (char *)v19 + v22;
      v25 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v26 = v10[7];
    v27 = &v8[v26];
    v28 = &v9[v26];
    v29 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29))
    {
      v30 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v27 = *(_DWORD *)v28;
      v31 = v28[2];
      v27[1] = v28[1];
      v27[2] = v31;
      v32 = *(int *)(v29 + 24);
      v44 = (char *)v28 + v32;
      v45 = (char *)v27 + v32;
      v33 = sub_23FB2D718();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v45, v44, v33);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v29);
    }
    v34 = v10[8];
    v35 = &v8[v34];
    v36 = &v9[v34];
    v37 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  v38 = *(int *)(a3 + 28);
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  int v11;
  int v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  _WORD *v26;
  _WORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (v12)
    {
      sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
      goto LABEL_7;
    }
    *v8 = *v9;
    v19 = v10[5];
    v20 = &v8[v19];
    v21 = &v9[v19];
    v22 = sub_23FB2EB1C();
    v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22);
    v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
        goto LABEL_22;
      }
    }
    else
    {
      v47 = *(_QWORD *)(v22 - 8);
      if (!v24)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 24))(v20, v21, v22);
LABEL_22:
        v49 = v10[6];
        v50 = &v8[v49];
        v51 = &v9[v49];
        v52 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
        v53 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v52);
        v54 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v51, 1, v52);
        if (v53)
        {
          if (!v54)
          {
            v55 = *(_QWORD *)v51;
            *((_WORD *)v50 + 4) = *((_WORD *)v51 + 4);
            *(_QWORD *)v50 = v55;
            v56 = *(int *)(v52 + 20);
            v57 = &v50[v56];
            v58 = &v51[v56];
            v59 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v57, v58, v59);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v50, 0, 1, v52);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            v80 = *(_QWORD *)v51;
            *((_WORD *)v50 + 4) = *((_WORD *)v51 + 4);
            *(_QWORD *)v50 = v80;
            v81 = *(int *)(v52 + 20);
            v82 = &v50[v81];
            v83 = &v51[v81];
            v84 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 24))(v82, v83, v84);
LABEL_28:
            v61 = v10[7];
            v62 = &v8[v61];
            v63 = &v9[v61];
            v64 = type metadata accessor for TranscriptProtoStatementID(0);
            v65 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v64);
            v66 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v63, 1, v64);
            if (v65)
            {
              if (!v66)
              {
                *(_DWORD *)v62 = *(_DWORD *)v63;
                *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
                *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
                v67 = *(int *)(v64 + 24);
                v90 = &v63[v67];
                v92 = &v62[v67];
                v68 = sub_23FB2D718();
                v94 = a3;
                v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
                swift_bridgeObjectRetain();
                v69(v92, v90, v68);
                a3 = v94;
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v62, 0, 1, v64);
LABEL_34:
                v71 = v10[8];
                v72 = &v8[v71];
                v73 = &v9[v71];
                v74 = sub_23FB2D718();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
                goto LABEL_35;
              }
            }
            else
            {
              if (!v66)
              {
                *(_DWORD *)v62 = *(_DWORD *)v63;
                *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
                *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v85 = *(int *)(v64 + 24);
                v86 = &v62[v85];
                v87 = &v63[v85];
                v88 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 24))(v86, v87, v88);
                goto LABEL_34;
              }
              sub_23F93DADC((uint64_t)v62, type metadata accessor for TranscriptProtoStatementID);
            }
            v70 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            goto LABEL_34;
          }
          sub_23F93DADC((uint64_t)v50, type metadata accessor for TranscriptProtoCandidatePromptStatus);
        }
        v60 = sub_23F6916B8(&qword_256EA8588);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v20, v22);
    }
    v48 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_22;
  }
  if (v12)
  {
LABEL_7:
    v18 = sub_23F6916B8(&qword_256EA2628);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_35;
  }
  *v8 = *v9;
  v13 = v10[5];
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v25 = v10[6];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v28 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_23F6916B8(&qword_256EA8588);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = *(_QWORD *)v27;
    v26[4] = v27[4];
    *(_QWORD *)v26 = v30;
    v31 = *(int *)(v28 + 20);
    v32 = (char *)v26 + v31;
    v33 = (char *)v27 + v31;
    v34 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v93 = a3;
  v35 = v10[7];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v38 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v38))
  {
    v39 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v36 = *(_DWORD *)v37;
    v36[1] = v37[1];
    v36[2] = v37[2];
    v40 = *(int *)(v38 + 24);
    v89 = (char *)v37 + v40;
    v91 = (char *)v36 + v40;
    v41 = sub_23FB2D718();
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v91, v89, v41);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v36, 0, 1, v38);
  }
  v43 = v10[8];
  v44 = &v8[v43];
  v45 = &v9[v43];
  v46 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
  a3 = v93;
LABEL_35:
  v75 = *(int *)(a3 + 28);
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v76, v77, v78);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _WORD *v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    v10 = sub_23F6916B8(&qword_256EA2628);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = v9[5];
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = sub_23FB2EB1C();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
    {
      v15 = sub_23F6916B8(&qword_256EA2610);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
    }
    v16 = v9[6];
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
    {
      v20 = sub_23F6916B8(&qword_256EA8588);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[4] = v18[4];
      v21 = *(int *)(v19 + 20);
      v22 = (char *)v17 + v21;
      v23 = (char *)v18 + v21;
      v24 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
    }
    v25 = v9[7];
    v26 = &v7[v25];
    v27 = &v8[v25];
    v28 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
    {
      v29 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
      v30 = *(int *)(v28 + 24);
      v31 = (char *)v26 + v30;
      v32 = (char *)v27 + v30;
      v33 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v34 = v9[8];
    v35 = &v7[v34];
    v36 = &v8[v34];
    v37 = sub_23FB2D718();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  v38 = *(int *)(a3 + 28);
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  int v11;
  int v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  _WORD *v26;
  _WORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (v12)
    {
      sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
      goto LABEL_7;
    }
    *v8 = *v9;
    v19 = v10[5];
    v20 = &v8[v19];
    v21 = &v9[v19];
    v22 = sub_23FB2EB1C();
    v23 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v22);
    v24 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v22);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v22);
        goto LABEL_22;
      }
    }
    else
    {
      v47 = *(_QWORD *)(v22 - 8);
      if (!v24)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 40))(v20, v21, v22);
LABEL_22:
        v49 = v10[6];
        v50 = &v8[v49];
        v51 = &v9[v49];
        v52 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
        v53 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v50, 1, v52);
        v54 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v51, 1, v52);
        if (v53)
        {
          if (!v54)
          {
            *(_QWORD *)v50 = *(_QWORD *)v51;
            *((_WORD *)v50 + 4) = *((_WORD *)v51 + 4);
            v55 = *(int *)(v52 + 20);
            v56 = &v50[v55];
            v57 = &v51[v55];
            v58 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v50, 0, 1, v52);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            *(_QWORD *)v50 = *(_QWORD *)v51;
            *((_WORD *)v50 + 4) = *((_WORD *)v51 + 4);
            v80 = *(int *)(v52 + 20);
            v81 = &v50[v80];
            v82 = &v51[v80];
            v83 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v81, v82, v83);
LABEL_28:
            v60 = v10[7];
            v61 = &v8[v60];
            v62 = &v9[v60];
            v63 = type metadata accessor for TranscriptProtoStatementID(0);
            v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v61, 1, v63);
            v65 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v62, 1, v63);
            if (v64)
            {
              if (!v65)
              {
                *(_DWORD *)v61 = *(_DWORD *)v62;
                *(_OWORD *)(v61 + 8) = *(_OWORD *)(v62 + 8);
                v66 = *(int *)(v63 + 24);
                v67 = &v61[v66];
                v68 = &v62[v66];
                v69 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v61, 0, 1, v63);
LABEL_34:
                v71 = v10[8];
                v72 = &v8[v71];
                v73 = &v9[v71];
                v74 = sub_23FB2D718();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
                goto LABEL_35;
              }
            }
            else
            {
              if (!v65)
              {
                *(_DWORD *)v61 = *(_DWORD *)v62;
                v84 = *((_QWORD *)v62 + 2);
                *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
                *((_QWORD *)v61 + 2) = v84;
                swift_bridgeObjectRelease();
                v85 = *(int *)(v63 + 24);
                v86 = &v61[v85];
                v87 = &v62[v85];
                v88 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
                goto LABEL_34;
              }
              sub_23F93DADC((uint64_t)v61, type metadata accessor for TranscriptProtoStatementID);
            }
            v70 = sub_23F6916B8(&qword_256EA25E0);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
            goto LABEL_34;
          }
          sub_23F93DADC((uint64_t)v50, type metadata accessor for TranscriptProtoCandidatePromptStatus);
        }
        v59 = sub_23F6916B8(&qword_256EA8588);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v20, v22);
    }
    v48 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_22;
  }
  if (v12)
  {
LABEL_7:
    v18 = sub_23F6916B8(&qword_256EA2628);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_35;
  }
  *v8 = *v9;
  v13 = v10[5];
  v14 = &v8[v13];
  v15 = &v9[v13];
  v16 = sub_23FB2EB1C();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
  {
    v17 = sub_23F6916B8(&qword_256EA2610);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
  }
  v25 = v10[6];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v28 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
  {
    v29 = sub_23F6916B8(&qword_256EA8588);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[4] = v27[4];
    v30 = *(int *)(v28 + 20);
    v31 = (char *)v26 + v30;
    v32 = (char *)v27 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v28);
  }
  v34 = v10[7];
  v35 = &v8[v34];
  v36 = &v9[v34];
  v37 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v36, 1, v37))
  {
    v38 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    *v35 = *v36;
    *(_OWORD *)(v35 + 2) = *(_OWORD *)(v36 + 2);
    v39 = *(int *)(v37 + 24);
    v40 = (char *)v35 + v39;
    v41 = (char *)v36 + v39;
    v42 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v35, 0, 1, v37);
  }
  v43 = v10[8];
  v44 = &v8[v43];
  v45 = &v9[v43];
  v46 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
LABEL_35:
  v75 = *(int *)(a3 + 28);
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 40))(v76, v77, v78);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA4EB58()
{
  sub_23FAC12F4();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA4EB70()
{
  sub_23FAC135C();
}

void sub_23FA4EB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)"\t", qword_256EB9DF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientInitiatedClientAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientInitiatedClientAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoSystemQuery(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EB9F20);
}

_BYTE *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EB21D0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_14:
      v17 = *(int *)(a3 + 20);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v12 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      case 5:
        *a1 = *a2;
        v13 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        break;
      case 1:
        v11 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    goto LABEL_14;
  }
  v9 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  a1 = (_BYTE *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionUserAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v6 = sub_23FB2D718();
        goto LABEL_7;
      case 5:
        v7 = a1
           + *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      case 1:
        v6 = sub_23FB2EB1C();
LABEL_7:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_BYTE *initializeWithCopy for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v10 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 5:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        break;
      case 1:
        v9 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EB21D0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v14 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
          break;
        case 5:
          *a1 = *a2;
          v15 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v16 = &a1[v15];
          v17 = &a2[v15];
          v18 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
          break;
        case 1:
          v10 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v12 = swift_getEnumCaseMultiPayload();
      switch(v12)
      {
        case 6:
          v19 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
          break;
        case 5:
          *a1 = *a2;
          v20 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v21 = &a1[v20];
          v22 = &a2[v20];
          v23 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
          break;
        case 1:
          v13 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
          break;
        default:
          v11 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  v11 = *(_QWORD *)(sub_23F6916B8(&qword_256EB21D0) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
LABEL_24:
  v24 = *(int *)(a3 + 20);
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v10 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        break;
      case 5:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      case 1:
        v9 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EB21D0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v14 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
          break;
        case 5:
          *a1 = *a2;
          v15 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v16 = &a1[v15];
          v17 = &a2[v15];
          v18 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
          break;
        case 1:
          v10 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v12 = swift_getEnumCaseMultiPayload();
      switch(v12)
      {
        case 6:
          v19 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
          break;
        case 5:
          *a1 = *a2;
          v20 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v21 = &a1[v20];
          v22 = &a2[v20];
          v23 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
          break;
        case 1:
          v13 = sub_23FB2EB1C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
          break;
        default:
          v11 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  }
  v11 = *(_QWORD *)(sub_23F6916B8(&qword_256EB21D0) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
LABEL_24:
  v24 = *(int *)(a3 + 20);
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionUserAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA4F788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB21D0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionUserAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA4F7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB21D0);
}

void sub_23FA4F7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB9FC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionUserActionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v10 = sub_23FB2D718();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 5:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        break;
      case 1:
        v8 = sub_23FB2EB1C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionUserActionEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 6)
    goto LABEL_6;
  if ((_DWORD)result == 5)
  {
    a1 += *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
LABEL_6:
    v3 = sub_23FB2D718();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  if ((_DWORD)result != 1)
    return result;
  v3 = sub_23FB2EB1C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_BYTE *initializeWithCopy for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      v8 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      break;
    case 5:
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      break;
    case 1:
      v7 = sub_23FB2EB1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v8 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 5:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        break;
      case 1:
        v7 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      v8 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      break;
    case 5:
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_23FB2D718();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      break;
    case 1:
      v7 = sub_23FB2EB1C();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v8 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        break;
      case 5:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        break;
      case 1:
        v7 = sub_23FB2EB1C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FA4FE08()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FB2EB1C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(319);
    if (v2 <= 0x3F)
    {
      result = sub_23FB2D718();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionActionCancellation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionActionCancellation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport72TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelVwCP_0()
{
  _BYTE *v0;
  uint64_t *v1;
  int v2;
  uint64_t v3;

  sub_23F877920();
  if ((v2 & 0x20000) != 0)
  {
    sub_23F876A58(*v1);
  }
  else
  {
    *v0 = *(_BYTE *)v1;
    v3 = sub_23F6B53A4();
    sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  }
  sub_23F694C84();
}

void _s30IntelligenceFlowPlannerSupport72TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevelVwcp_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = sub_23F6B53A4();
  sub_23FAC2CD8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  sub_23F694C84();
}

_BYTE *assignWithCopy for TranscriptProtoSystemPromptResolutionRequirementResolution(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void _s30IntelligenceFlowPlannerSupport29TranscriptProtoAppRequirementVwtk_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = sub_23F6B53A4();
  sub_23FAC2C18(v2);
  sub_23F694C84();
}

_BYTE *assignWithTake for TranscriptProtoSystemPromptResolutionRequirementResolution(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionRequirementResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA50078()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FAC3F00();
  if (v1)
  {
    sub_23FAC3AE0();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F08CC(*(int *)(v2 + 20));
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionRequirementResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA500D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FAC3640();
  if (v1)
  {
    sub_23FAC3D10();
    sub_23F694C84();
  }
  else
  {
    v2 = v0;
    sub_23F6B53A4();
    v3 = sub_23F6F082C(*(int *)(v2 + 20));
    sub_23F6F07C4(v3, v4, v5, v6);
  }
}

void sub_23FA50114()
{
  sub_23FABE678();
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwCP_0()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6D3A90();
  sub_23FAC3CFC(v0, v1);
  if ((v2 & 0x20000) != 0)
  {
    sub_23FAC3614();
  }
  else
  {
    sub_23FAC3BB8();
    v3 = sub_23F6B632C();
    sub_23F6B90D8();
    if (sub_23FAC2C5C())
    {
      v4 = sub_23F6916B8(&qword_256EA2610);
      sub_23FAC2BBC(v4);
    }
    else
    {
      sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
      sub_23FAC2BA8();
    }
    v5 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  }
  sub_23F6B69E0();
}

uint64_t _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_23FAC3B48();
  v2 = v0 + *(int *)(v1 + 20);
  sub_23F6B632C();
  if (!sub_23FAC2B44(v2))
    sub_23FAC3AA0();
  sub_23F6B53A4();
  v3 = sub_23F87922C();
  return sub_23FAC2C30(v3, v4, v5);
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwcp_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6D3A90();
  sub_23FAC37B8(v0, v1);
  v2 = sub_23F6B632C();
  sub_23F6B90D8();
  if (sub_23FAC2C5C())
  {
    v3 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v3);
  }
  else
  {
    sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
    sub_23FAC2BA8();
  }
  v4 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwca_0()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23FAC35BC(v2, v3);
  sub_23F6B5908();
  v4 = sub_23F6B632C();
  v5 = sub_23FAC2B50(v4);
  if (!v1)
  {
    v6 = *(_QWORD *)(v0 - 8);
    if (!v5)
    {
      sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24));
      goto LABEL_7;
    }
    sub_23FAC32FC(v6);
    goto LABEL_6;
  }
  if (v5)
  {
LABEL_6:
    v7 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v7);
    goto LABEL_7;
  }
  sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  sub_23FAC2BA8();
LABEL_7:
  v8 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwtk_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FAC3798(a1, a2);
  v2 = sub_23F6B632C();
  if (sub_23FAC2C5C())
  {
    v3 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v3);
  }
  else
  {
    sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
    sub_23FAC2BA8();
  }
  v4 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  sub_23F6B5F7C();
}

void _s30IntelligenceFlowPlannerSupport39TranscriptProtoUnresolvedParameterValueVwta_0()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23FAC35A0(v2, v3);
  v4 = sub_23F6B632C();
  v5 = sub_23FAC2B50(v4);
  if (!v1)
  {
    v6 = *(_QWORD *)(v0 - 8);
    if (!v5)
    {
      sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40));
      goto LABEL_7;
    }
    sub_23FAC32FC(v6);
    goto LABEL_6;
  }
  if (v5)
  {
LABEL_6:
    v7 = sub_23F6916B8(&qword_256EA2610);
    sub_23FAC2BBC(v7);
    goto LABEL_7;
  }
  sub_23FAC2CB0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  sub_23FAC2BA8();
LABEL_7:
  v8 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVariableSetter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA50458()
{
  sub_23FA99C8C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVariableSetter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA50470()
{
  sub_23FA99CF4();
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwCP_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B50E8();
  sub_23FAC3CFC(v1, v2);
  if ((v3 & 0x20000) != 0)
  {
    sub_23FAC3614();
  }
  else
  {
    sub_23FAC3BB8();
    v6 = v4 + v5;
    type metadata accessor for TranscriptProtoStatementID(0);
    sub_23F6B90D8();
    if (sub_23FAC2D30(v6))
    {
      v7 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2D1C(v7);
    }
    else
    {
      *(_DWORD *)v0 = *(_DWORD *)v6;
      v8 = *(_QWORD *)(v6 + 16);
      *(_QWORD *)(v0 + 8) = *(_QWORD *)(v6 + 8);
      *(_QWORD *)(v0 + 16) = v8;
      sub_23F6B53A4();
      sub_23FAC2BD0();
      sub_23FAC2CC8();
      sub_23FAC2C6C(v0);
    }
    v9 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16));
  }
  sub_23F693DDC();
}

uint64_t _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_23FAC3B48();
  v2 = v0 + *(int *)(v1 + 20);
  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_23FAC2B44(v2))
  {
    sub_23FAC3CF4();
    v3 = sub_23F6B53A4();
    sub_23FAC2CE4(v3);
  }
  sub_23F6B53A4();
  v4 = sub_23F87922C();
  return sub_23FAC2C30(v4, v5, v6);
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwcp_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6B50E8();
  sub_23FAC37B8(v1, v2);
  v5 = v3 + v4;
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_23F6B90D8();
  if (sub_23FAC2D30(v5))
  {
    v6 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2D1C(v6);
  }
  else
  {
    *(_DWORD *)v0 = *(_DWORD *)v5;
    v7 = *(_QWORD *)(v5 + 16);
    *(_QWORD *)(v0 + 8) = *(_QWORD *)(v5 + 8);
    *(_QWORD *)(v0 + 16) = v7;
    sub_23F6B53A4();
    sub_23FAC2BD0();
    sub_23FAC2CC8();
    sub_23FAC2C6C(v0);
  }
  v8 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport41TranscriptProtoUpdateParametersExpressionVwtk_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23F6D3A90();
  sub_23FAC3798(v1, v2);
  v5 = v3 + v4;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2D30(v5))
  {
    v6 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2D1C(v6);
  }
  else
  {
    *(_DWORD *)v0 = *(_DWORD *)v5;
    *(_OWORD *)(v0 + 8) = *(_OWORD *)(v5 + 8);
    v7 = sub_23F6B53A4();
    sub_23FAC2C98(v7);
    sub_23FAC2C6C(v0);
  }
  v8 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVariableStep()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA506E8()
{
  sub_23FA99C8C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVariableStep()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA50700()
{
  sub_23FA99CF4();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprCallVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprCallVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprSayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprSayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t destroy for TranscriptProtoASTFlatExprPickVariant(uint64_t a1, uint64_t a2)
{
  return sub_23FA991CC(a1, a2, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPickVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA50778()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPickVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA50790()
{
  sub_23FAB8268();
}

void sub_23FA5079C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, qword_256EBA478, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprConfirmVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprConfirmVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUndoVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUndoVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprRejectVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprRejectVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprCancelVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprCancelVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprContinuePlanningVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprContinuePlanningVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant(uint64_t a1)
{
  return sub_23F6D89A0(a1, qword_256EBA748);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoASTPickType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 20);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoASTPickType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTPickType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA50A90(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 253)
  {
    sub_23F694C84();
  }
  else
  {
    sub_23F6B53A4();
    v4 = sub_23F6F08CC(*(int *)(a3 + 20));
    sub_23F6F07D0(v4, v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTPickType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA50AF0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FAC3B20();
  if (v3)
  {
    *(_BYTE *)(v1 + 8) = ~v0;
    sub_23F694C84();
  }
  else
  {
    v4 = v2;
    sub_23F6B53A4();
    v5 = sub_23F6F082C(*(int *)(v4 + 20));
    sub_23F6F07C4(v5, v6, v7, v8);
  }
}

void sub_23FA50B34()
{
  sub_23FABE678();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAstpickTypeEnum(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAstpickTypeEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23FA50BC4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for TranscriptProtoAstpickTypeEnum()
{
  sub_23F694C70();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprSearchVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprSearchVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA50C14()
{
  sub_23FAC17B0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateParametersVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateParametersVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprGetMentionedApps()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprGetMentionedApps()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v15 = v10[1];
            *v9 = *v10;
            v9[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v9 = *v10;
            v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v56 = (char *)v10 + v16;
            v62 = (char *)v9 + v16;
            v17 = sub_23FB2D718();
            v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v18(v62, v56, v17);
            goto LABEL_13;
          case 5u:
            *v9 = *v10;
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v57 = (char *)v10 + v19;
            v63 = (char *)v9 + v19;
            v20 = sub_23FB2D718();
            v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            v21(v63, v57, v20);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v9 = *(_DWORD *)v10;
            v22 = v10[2];
            v9[1] = v10[1];
            v9[2] = v22;
            v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v58 = (char *)v10 + v23;
            v64 = (char *)v9 + v23;
            v24 = sub_23FB2D718();
            v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
            swift_bridgeObjectRetain();
            v25(v64, v58, v24);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v13);
      }
      v26 = *(int *)(v11 + 20);
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v30 = a3[7];
    v31 = (_QWORD *)(v7 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v30, 1, v11))
    {
      v33 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34))
      {
        v35 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v36 = v32[1];
            *v31 = *v32;
            v31[1] = v36;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *v31 = *v32;
            v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v59 = (char *)v32 + v37;
            v65 = (char *)v31 + v37;
            v38 = sub_23FB2D718();
            v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v39(v65, v59, v38);
            goto LABEL_26;
          case 5u:
            *v31 = *v32;
            v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v60 = (char *)v32 + v40;
            v66 = (char *)v31 + v40;
            v41 = sub_23FB2D718();
            v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v42(v66, v60, v41);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)v31 = *(_DWORD *)v32;
            v43 = v32[2];
            v31[1] = v32[1];
            v31[2] = v43;
            v44 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v61 = (char *)v32 + v44;
            v67 = (char *)v31 + v44;
            v45 = sub_23FB2D718();
            v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
            swift_bridgeObjectRetain();
            v46(v67, v61, v45);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v34);
      }
      v47 = *(int *)(v11 + 20);
      v48 = (char *)v31 + v47;
      v49 = (char *)v32 + v47;
      v50 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v11);
    }
    v51 = a3[8];
    v52 = v7 + v51;
    v53 = (uint64_t)a2 + v51;
    v54 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          v9 = v4 + v8;
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + a2[7];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v5))
  {
    v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v15 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          v15 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_17:
          v16 = *(int *)(v15 + 20);
          goto LABEL_19;
        case 9u:
          swift_bridgeObjectRelease();
          v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_19:
          v17 = v13 + v16;
          v18 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
          break;
        default:
          break;
      }
    }
    v19 = v13 + *(int *)(v5 + 20);
    v20 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  v21 = a1 + a2[8];
  v22 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t initializeWithCopy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v13 = v8[1];
          *v7 = *v8;
          v7[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v7 = *v8;
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v54 = (char *)v8 + v14;
          v60 = (char *)v7 + v14;
          v15 = sub_23FB2D718();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v60, v54, v15);
          goto LABEL_11;
        case 5u:
          *v7 = *v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v55 = (char *)v8 + v17;
          v61 = (char *)v7 + v17;
          v18 = sub_23FB2D718();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v61, v55, v18);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v7 = *(_DWORD *)v8;
          v20 = v8[2];
          v7[1] = v8[1];
          v7[2] = v20;
          v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v56 = (char *)v8 + v21;
          v62 = (char *)v7 + v21;
          v22 = sub_23FB2D718();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v62, v56, v22);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    }
    v24 = *(int *)(v9 + 20);
    v25 = (char *)v7 + v24;
    v26 = (char *)v8 + v24;
    v27 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v28 = a3[7];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v28, 1, v9))
  {
    v31 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, v32))
    {
      v33 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v34 = v30[1];
          *v29 = *v30;
          v29[1] = v34;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *v29 = *v30;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v57 = (char *)v30 + v35;
          v63 = (char *)v29 + v35;
          v36 = sub_23FB2D718();
          v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v37(v63, v57, v36);
          goto LABEL_24;
        case 5u:
          *v29 = *v30;
          v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v58 = (char *)v30 + v38;
          v64 = (char *)v29 + v38;
          v39 = sub_23FB2D718();
          v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v40(v64, v58, v39);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)v29 = *(_DWORD *)v30;
          v41 = v30[2];
          v29[1] = v30[1];
          v29[2] = v41;
          v42 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v59 = (char *)v30 + v42;
          v65 = (char *)v29 + v42;
          v43 = sub_23FB2D718();
          v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v44(v65, v59, v43);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v32);
    }
    v45 = *(int *)(v9 + 20);
    v46 = (char *)v29 + v45;
    v47 = (char *)v30 + v45;
    v48 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v9);
  }
  v49 = a3[8];
  v50 = a1 + v49;
  v51 = a2 + v49;
  v52 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *v7 = *v8;
            v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v109 = (char *)v8 + v32;
            v127 = (char *)v7 + v32;
            v33 = sub_23FB2D718();
            v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v127, v109, v33);
            goto LABEL_32;
          case 5u:
            *v7 = *v8;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v110 = (char *)v8 + v35;
            v128 = (char *)v7 + v35;
            v36 = sub_23FB2D718();
            v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v128, v110, v36);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v111 = (char *)v8 + v38;
            v129 = (char *)v7 + v38;
            v39 = sub_23FB2D718();
            v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v40(v129, v111, v39);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        v50 = *(int *)(v9 + 20);
        v51 = (char *)v7 + v50;
        v52 = (char *)v8 + v50;
        v53 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v7 = *v8;
              v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v112 = (char *)v8 + v41;
              v130 = (char *)v7 + v41;
              v42 = sub_23FB2D718();
              v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
              swift_bridgeObjectRetain();
              v43(v130, v112, v42);
              break;
            case 5u:
              *v7 = *v8;
              v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v113 = (char *)v8 + v44;
              v131 = (char *)v7 + v44;
              v45 = sub_23FB2D718();
              v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
              swift_bridgeObjectRetain();
              v46(v131, v113, v45);
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v114 = (char *)v8 + v47;
              v132 = (char *)v7 + v47;
              v48 = sub_23FB2D718();
              v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
              swift_bridgeObjectRetain();
              v49(v132, v114, v48);
              break;
            default:
              v18 = *(_QWORD *)(v15 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v18 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_17:
    memcpy(v7, v8, *(_QWORD *)(v18 + 64));
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *v7 = *v8;
        v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v106 = (char *)v8 + v19;
        v124 = (char *)v7 + v19;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v124, v106, v20);
        goto LABEL_25;
      case 5u:
        *v7 = *v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v107 = (char *)v8 + v22;
        v125 = (char *)v7 + v22;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v125, v107, v23);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v108 = (char *)v8 + v25;
        v126 = (char *)v7 + v25;
        v26 = sub_23FB2D718();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v126, v108, v26);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
  }
  v28 = *(int *)(v9 + 20);
  v29 = (char *)v7 + v28;
  v30 = (char *)v8 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  v54 = a3[7];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  v57 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v54, 1, v9);
  v58 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v9);
  if (!v57)
  {
    if (v58)
    {
      sub_23F93DADC((uint64_t)v55, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_46;
    }
    v62 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v63 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v55, 1, v62);
    v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v62);
    if (v63)
    {
      if (!v64)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v55 = *v56;
            v55[1] = v56[1];
            swift_bridgeObjectRetain();
            goto LABEL_71;
          case 4u:
            *v55 = *v56;
            v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v118 = (char *)v56 + v79;
            v136 = (char *)v55 + v79;
            v80 = sub_23FB2D718();
            v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
            swift_bridgeObjectRetain();
            v81(v136, v118, v80);
            goto LABEL_71;
          case 5u:
            *v55 = *v56;
            v82 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v119 = (char *)v56 + v82;
            v137 = (char *)v55 + v82;
            v83 = sub_23FB2D718();
            v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
            swift_bridgeObjectRetain();
            v84(v137, v119, v83);
            goto LABEL_71;
          case 9u:
            *(_DWORD *)v55 = *(_DWORD *)v56;
            v55[1] = v56[1];
            v55[2] = v56[2];
            v85 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v120 = (char *)v56 + v85;
            v138 = (char *)v55 + v85;
            v86 = sub_23FB2D718();
            v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
            swift_bridgeObjectRetain();
            v87(v138, v120, v86);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v62);
LABEL_78:
        v97 = *(int *)(v9 + 20);
        v98 = (char *)v55 + v97;
        v99 = (char *)v56 + v97;
        v100 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 24))(v98, v99, v100);
        goto LABEL_79;
      }
    }
    else
    {
      if (!v64)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v55, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v55 = *v56;
              v55[1] = v56[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v55 = *v56;
              v88 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v121 = (char *)v56 + v88;
              v139 = (char *)v55 + v88;
              v89 = sub_23FB2D718();
              v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16);
              swift_bridgeObjectRetain();
              v90(v139, v121, v89);
              break;
            case 5u:
              *v55 = *v56;
              v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v122 = (char *)v56 + v91;
              v140 = (char *)v55 + v91;
              v92 = sub_23FB2D718();
              v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
              swift_bridgeObjectRetain();
              v93(v140, v122, v92);
              break;
            case 9u:
              *(_DWORD *)v55 = *(_DWORD *)v56;
              v55[1] = v56[1];
              v55[2] = v56[2];
              v94 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v123 = (char *)v56 + v94;
              v141 = (char *)v55 + v94;
              v95 = sub_23FB2D718();
              v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
              swift_bridgeObjectRetain();
              v96(v141, v123, v95);
              break;
            default:
              v65 = *(_QWORD *)(v62 - 8);
              goto LABEL_56;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_78;
      }
      sub_23F93DADC((uint64_t)v55, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v65 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_56:
    memcpy(v55, v56, *(_QWORD *)(v65 + 64));
    goto LABEL_78;
  }
  if (v58)
  {
LABEL_46:
    v61 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_79;
  }
  v59 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v59))
  {
    v60 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v55 = *v56;
        v55[1] = v56[1];
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 4u:
        *v55 = *v56;
        v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v115 = (char *)v56 + v66;
        v133 = (char *)v55 + v66;
        v67 = sub_23FB2D718();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v133, v115, v67);
        goto LABEL_64;
      case 5u:
        *v55 = *v56;
        v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v116 = (char *)v56 + v69;
        v134 = (char *)v55 + v69;
        v70 = sub_23FB2D718();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v134, v116, v70);
        goto LABEL_64;
      case 9u:
        *(_DWORD *)v55 = *(_DWORD *)v56;
        v55[1] = v56[1];
        v55[2] = v56[2];
        v72 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v117 = (char *)v56 + v72;
        v135 = (char *)v55 + v72;
        v73 = sub_23FB2D718();
        v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v135, v117, v73);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v59);
  }
  v75 = *(int *)(v9 + 20);
  v76 = (char *)v55 + v75;
  v77 = (char *)v56 + v75;
  v78 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v9);
LABEL_79:
  v101 = a3[8];
  v102 = a1 + v101;
  v103 = a2 + v101;
  v104 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 24))(v102, v103, v104);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v19 = (char *)v7 + v18;
        v20 = (char *)v8 + v18;
        v21 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v23 = (char *)v7 + v22;
        v24 = (char *)v8 + v22;
        v25 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v15 = (char *)v7 + v14;
        v16 = (char *)v8 + v14;
        v17 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  v12 = sub_23F6916B8(&qword_256EA25F0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_14:
  v26 = *(int *)(v9 + 20);
  v27 = (char *)v7 + v26;
  v28 = (char *)v8 + v26;
  v29 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_15:
  v30 = a3[7];
  v31 = (_DWORD *)(a1 + v30);
  v32 = (_DWORD *)(a2 + v30);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2 + v30, 1, v9))
  {
    v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34))
    {
      v35 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_28:
      v49 = *(int *)(v9 + 20);
      v50 = (char *)v31 + v49;
      v51 = (char *)v32 + v49;
      v52 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v9);
      goto LABEL_29;
    }
    v36 = swift_getEnumCaseMultiPayload();
    switch(v36)
    {
      case 9:
        *v31 = *v32;
        *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
        v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v42 = (char *)v31 + v41;
        v43 = (char *)v32 + v41;
        v44 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      case 5:
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v46 = (char *)v31 + v45;
        v47 = (char *)v32 + v45;
        v48 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
        break;
      case 4:
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v38 = (char *)v31 + v37;
        v39 = (char *)v32 + v37;
        v40 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        break;
      default:
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        goto LABEL_27;
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v34);
    goto LABEL_28;
  }
  v33 = sub_23F6916B8(&qword_256EA84E8);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_29:
  v53 = a3[8];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_27:
        v37 = *(int *)(v9 + 20);
        v38 = (char *)v7 + v37;
        v39 = (char *)v8 + v37;
        v40 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v30 = (char *)v7 + v29;
          v31 = (char *)v8 + v29;
          v32 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v34 = (char *)v7 + v33;
          v35 = (char *)v8 + v33;
          v36 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v25 = (char *)v7 + v24;
          v26 = (char *)v8 + v24;
          v27 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_27;
    }
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_7;
  }
  v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
  v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      v18 = swift_getEnumCaseMultiPayload();
      switch(v18)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v47 = (char *)v7 + v46;
          v48 = (char *)v8 + v46;
          v49 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v51 = (char *)v7 + v50;
          v52 = (char *)v8 + v50;
          v53 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v20 = (char *)v7 + v19;
          v21 = (char *)v8 + v19;
          v22 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v17)
    {
      if (a1 == a2)
        goto LABEL_41;
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v41 = swift_getEnumCaseMultiPayload();
      switch(v41)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v55 = (char *)v7 + v54;
          v56 = (char *)v8 + v54;
          v57 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v59 = (char *)v7 + v58;
          v60 = (char *)v8 + v58;
          v61 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v43 = (char *)v7 + v42;
          v44 = (char *)v8 + v42;
          v45 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          break;
        default:
          v28 = *(_QWORD *)(v15 - 8);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  v28 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_21:
  memcpy(v7, v8, *(_QWORD *)(v28 + 64));
LABEL_41:
  v62 = *(int *)(v9 + 20);
  v63 = (char *)v7 + v62;
  v64 = (char *)v8 + v62;
  v65 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 40))(v63, v64, v65);
LABEL_42:
  v66 = a3[7];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1 + v66, 1, v9);
  v70 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v9);
  if (!v69)
  {
    if (v70)
    {
      sub_23F93DADC(v67, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_48;
    }
    v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v75 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v67, 1, v74);
    v76 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v74);
    if (v75)
    {
      if (!v76)
      {
        v77 = swift_getEnumCaseMultiPayload();
        switch(v77)
        {
          case 9:
            *(_DWORD *)v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            v105 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v106 = v67 + v105;
            v107 = v68 + v105;
            v108 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
            break;
          case 5:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v110 = v67 + v109;
            v111 = v68 + v109;
            v112 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
            break;
          case 4:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v79 = v67 + v78;
            v80 = v68 + v78;
            v81 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
            break;
          default:
            memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
LABEL_78:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v74);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v76)
      {
        if (a1 == a2)
          goto LABEL_83;
        sub_23F93DADC(v67, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v100 = swift_getEnumCaseMultiPayload();
        switch(v100)
        {
          case 9:
            *(_DWORD *)v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v114 = v67 + v113;
            v115 = v68 + v113;
            v116 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
            break;
          case 5:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v118 = v67 + v117;
            v119 = v68 + v117;
            v120 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
            break;
          case 4:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v102 = v67 + v101;
            v103 = v68 + v101;
            v104 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
            break;
          default:
            v87 = *(_QWORD *)(v74 - 8);
            goto LABEL_62;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      }
      sub_23F93DADC(v67, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v87 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_62:
    memcpy((void *)v67, (const void *)v68, *(_QWORD *)(v87 + 64));
LABEL_83:
    v121 = *(int *)(v9 + 20);
    v122 = v67 + v121;
    v123 = v68 + v121;
    v124 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 40))(v122, v123, v124);
    goto LABEL_84;
  }
  if (!v70)
  {
    v71 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v71))
    {
      v72 = sub_23F6916B8(&qword_256EA25F0);
      memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
LABEL_68:
      v96 = *(int *)(v9 + 20);
      v97 = v67 + v96;
      v98 = v68 + v96;
      v99 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v9);
      goto LABEL_84;
    }
    v82 = swift_getEnumCaseMultiPayload();
    switch(v82)
    {
      case 9:
        *(_DWORD *)v67 = *(_DWORD *)v68;
        *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
        v88 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v89 = v67 + v88;
        v90 = v68 + v88;
        v91 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
        break;
      case 5:
        *(_QWORD *)v67 = *(_QWORD *)v68;
        v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v93 = v67 + v92;
        v94 = v68 + v92;
        v95 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
        break;
      case 4:
        *(_QWORD *)v67 = *(_QWORD *)v68;
        v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v84 = v67 + v83;
        v85 = v68 + v83;
        v86 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
        break;
      default:
        memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        goto LABEL_67;
    }
    swift_storeEnumTagMultiPayload();
LABEL_67:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v71);
    goto LABEL_68;
  }
LABEL_48:
  v73 = sub_23F6916B8(&qword_256EA84E8);
  memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
LABEL_84:
  v125 = a3[8];
  v126 = a1 + v125;
  v127 = a2 + v125;
  v128 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 40))(v126, v127, v128);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA53A4C()
{
  unint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F08A0();
  if (v1)
  {
    sub_23F6F083C(*v0);
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A1C();
    sub_23F6916B8(&qword_256EA84E8);
    sub_23F6F07DC();
    if (v1)
    {
      sub_23F6F0B08();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC3340();
    }
    v3 = sub_23F6F08CC(v2);
    sub_23F6F07D0(v3, v4, v5);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA53AB4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23F6F0850();
  if (v0)
  {
    sub_23F6F0B28();
    sub_23F694C84();
  }
  else
  {
    sub_23F6F0A10();
    sub_23F6916B8(&qword_256EA84E8);
    sub_23F6F07EC();
    if (v0)
    {
      sub_23F6F0BD0();
    }
    else
    {
      sub_23F6B53A4();
      sub_23FAC335C();
    }
    v2 = sub_23F6F082C(v1);
    sub_23F6F07C4(v2, v3, v4, v5);
  }
}

void sub_23FA53B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABA1C8(a1, a2, a3, MEMORY[0x24BEE0158] + 64, qword_256EBAA30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPickOneVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPickOneVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprResolveToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprResolveToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprDotVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v16 = v10[1];
            *v9 = *v10;
            v9[1] = v16;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v9 = *v10;
            v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v36 = (char *)v10 + v17;
            v39 = (char *)v9 + v17;
            v18 = sub_23FB2D718();
            v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
            swift_bridgeObjectRetain();
            v19(v39, v36, v18);
            goto LABEL_13;
          case 5u:
            *v9 = *v10;
            v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v37 = (char *)v10 + v20;
            v40 = (char *)v9 + v20;
            v21 = sub_23FB2D718();
            v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
            swift_bridgeObjectRetain();
            v22(v40, v37, v21);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v9 = *(_DWORD *)v10;
            v23 = v10[2];
            v9[1] = v10[1];
            v9[2] = v23;
            v24 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v38 = (char *)v10 + v24;
            v41 = (char *)v9 + v24;
            v25 = sub_23FB2D718();
            v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
            swift_bridgeObjectRetain();
            v26(v41, v38, v25);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v14);
      }
      v27 = *(int *)(v11 + 20);
      v28 = (char *)v9 + v27;
      v29 = (char *)v10 + v27;
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v31 = *(int *)(a3 + 24);
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprDotVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          v9 = v4 + v8;
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + *(int *)(a2 + 24);
  v14 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v14 = v9[1];
          *v8 = *v9;
          v8[1] = v14;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v8 = *v9;
          v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v34 = (char *)v9 + v15;
          v37 = (char *)v8 + v15;
          v16 = sub_23FB2D718();
          v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          v17(v37, v34, v16);
          goto LABEL_11;
        case 5u:
          *v8 = *v9;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v35 = (char *)v9 + v18;
          v38 = (char *)v8 + v18;
          v19 = sub_23FB2D718();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v38, v35, v19);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v8 = *(_DWORD *)v9;
          v21 = v9[2];
          v8[1] = v9[1];
          v8[2] = v21;
          v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v36 = (char *)v9 + v22;
          v39 = (char *)v8 + v22;
          v23 = sub_23FB2D718();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v39, v36, v23);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v12);
    }
    v25 = *(int *)(v10 + 20);
    v26 = (char *)v8 + v25;
    v27 = (char *)v9 + v25;
    v28 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v29 = *(int *)(a3 + 24);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *v7 = *v8;
            v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v62 = (char *)v8 + v32;
            v71 = (char *)v7 + v32;
            v33 = sub_23FB2D718();
            v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v71, v62, v33);
            goto LABEL_32;
          case 5u:
            *v7 = *v8;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v63 = (char *)v8 + v35;
            v72 = (char *)v7 + v35;
            v36 = sub_23FB2D718();
            v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v72, v63, v36);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v64 = (char *)v8 + v38;
            v73 = (char *)v7 + v38;
            v39 = sub_23FB2D718();
            v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v40(v73, v64, v39);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        v50 = *(int *)(v9 + 20);
        v51 = (char *)v7 + v50;
        v52 = (char *)v8 + v50;
        v53 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v7 = *v8;
              v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v65 = (char *)v8 + v41;
              v74 = (char *)v7 + v41;
              v42 = sub_23FB2D718();
              v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
              swift_bridgeObjectRetain();
              v43(v74, v65, v42);
              break;
            case 5u:
              *v7 = *v8;
              v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v66 = (char *)v8 + v44;
              v75 = (char *)v7 + v44;
              v45 = sub_23FB2D718();
              v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
              swift_bridgeObjectRetain();
              v46(v75, v66, v45);
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v67 = (char *)v8 + v47;
              v76 = (char *)v7 + v47;
              v48 = sub_23FB2D718();
              v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
              swift_bridgeObjectRetain();
              v49(v76, v67, v48);
              break;
            default:
              v18 = *(_QWORD *)(v15 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v18 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_17:
    memcpy(v7, v8, *(_QWORD *)(v18 + 64));
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *v7 = *v8;
        v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v59 = (char *)v8 + v19;
        v68 = (char *)v7 + v19;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v68, v59, v20);
        goto LABEL_25;
      case 5u:
        *v7 = *v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v60 = (char *)v8 + v22;
        v69 = (char *)v7 + v22;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v69, v60, v23);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v61 = (char *)v8 + v25;
        v70 = (char *)v7 + v25;
        v26 = sub_23FB2D718();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v70, v61, v26);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
  }
  v28 = *(int *)(v9 + 20);
  v29 = (char *)v7 + v28;
  v30 = (char *)v8 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  v54 = *(int *)(a3 + 24);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatExprDotVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_14:
      v26 = *(int *)(v9 + 20);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v19 = (char *)v7 + v18;
        v20 = (char *)v8 + v18;
        v21 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v23 = (char *)v7 + v22;
        v24 = (char *)v8 + v22;
        v25 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v15 = (char *)v7 + v14;
        v16 = (char *)v8 + v14;
        v17 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  v10 = sub_23F6916B8(&qword_256EA84E8);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_15:
  v30 = *(int *)(a3 + 24);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTFlatExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (v12)
    {
      sub_23F93DADC(v8, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v16);
    v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
            v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v48 = v8 + v47;
            v49 = v9 + v47;
            v50 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
            break;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v52 = v8 + v51;
            v53 = v9 + v51;
            v54 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
            break;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v21 = v8 + v20;
            v22 = v9 + v20;
            v23 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
            break;
          default:
            memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            goto LABEL_37;
        }
        swift_storeEnumTagMultiPayload();
LABEL_37:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v16);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v18)
      {
        if (a1 == a2)
          goto LABEL_41;
        sub_23F93DADC(v8, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v42 = swift_getEnumCaseMultiPayload();
        switch(v42)
        {
          case 9:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
            v55 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v56 = v8 + v55;
            v57 = v9 + v55;
            v58 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
            break;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v60 = v8 + v59;
            v61 = v9 + v59;
            v62 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
            break;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v44 = v8 + v43;
            v45 = v9 + v43;
            v46 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
            break;
          default:
            v29 = *(_QWORD *)(v16 - 8);
            goto LABEL_21;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_41;
      }
      sub_23F93DADC(v8, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v29 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_21:
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(v29 + 64));
LABEL_41:
    v63 = *(int *)(v10 + 20);
    v64 = v8 + v63;
    v65 = v9 + v63;
    v66 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 40))(v64, v65, v66);
    goto LABEL_42;
  }
  if (!v12)
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EA25F0);
      memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_27:
      v38 = *(int *)(v10 + 20);
      v39 = v8 + v38;
      v40 = v9 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v10);
      goto LABEL_42;
    }
    v24 = swift_getEnumCaseMultiPayload();
    switch(v24)
    {
      case 9:
        *(_DWORD *)v8 = *(_DWORD *)v9;
        *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
        v30 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v31 = v8 + v30;
        v32 = v9 + v30;
        v33 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        break;
      case 5:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v35 = v8 + v34;
        v36 = v9 + v34;
        v37 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
        break;
      case 4:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v26 = v8 + v25;
        v27 = v9 + v25;
        v28 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
        break;
      default:
        memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_26;
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v13);
    goto LABEL_27;
  }
LABEL_7:
  v15 = sub_23F6916B8(&qword_256EA84E8);
  memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_42:
  v67 = *(int *)(a3 + 24);
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  v70 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprDotVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA55418()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprDotVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA55430()
{
  sub_23FAB8268();
}

void sub_23FA5543C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, qword_256EBAA30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatAssignExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  void (*v224)(char *, char *, uint64_t);
  void (*v225)(char *, char *, uint64_t);
  void (*v226)(char *, char *, uint64_t);
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  void (*v248)(char *, char *, uint64_t);
  void (*v249)(char *, char *, uint64_t);
  void (*v250)(char *, char *, uint64_t);
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  void *__src;
  char *__srca;
  char *__srcb;
  char *__srcc;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  void (*v271)(char *, char *, uint64_t);
  void (*v272)(char *, char *, uint64_t);
  _QWORD *v273;
  _QWORD *v274;
  _QWORD *v275;
  void (*v276)(char *, char *, uint64_t);
  _QWORD *v277;
  _BYTE *v278;
  void (*v279)(char *, char *, uint64_t);
  void (*v280)(char *, char *, uint64_t);
  void (*v281)(char *, char *, uint64_t);
  void *v282;
  void *v283;
  void *v284;
  void *v285;
  char *v286;
  char *v287;
  char *v288;
  void *v289;
  char *v290;
  char *__dstf;
  char *__dstg;
  _BYTE *__dst;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  char *__dstk;
  char *__dstl;
  char *__dstm;
  char *__dstn;
  char *__dsto;
  int *__dsta;
  int *__dstb;
  _QWORD *__dstc;
  char *__dstp;
  char *__dstq;
  char *__dstr;
  int *__dstd;
  char *__dsts;
  char *__dstt;
  char *__dstu;
  int *__dste;
  uint64_t v313;
  int *v314;
  uint64_t v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;
  char *v327;
  char *v328;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EB22C8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v14))
      {
        v15 = sub_23F6916B8(&qword_256EB22D8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v16))
            {
              v17 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v78 = v10[1];
                  *v9 = *v10;
                  v9[1] = v78;
                  swift_bridgeObjectRetain();
                  goto LABEL_55;
                case 4u:
                  *v9 = *v10;
                  v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  __dstp = (char *)v10 + v98;
                  v326 = (char *)v9 + v98;
                  v99 = sub_23FB2D718();
                  v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v279(v326, __dstp, v99);
                  goto LABEL_55;
                case 5u:
                  *v9 = *v10;
                  v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  __dstq = (char *)v10 + v100;
                  v327 = (char *)v9 + v100;
                  v101 = sub_23FB2D718();
                  v280 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v280(v327, __dstq, v101);
                  goto LABEL_55;
                case 9u:
                  *(_DWORD *)v9 = *(_DWORD *)v10;
                  v102 = v10[2];
                  v9[1] = v10[1];
                  v9[2] = v102;
                  v103 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  __dstr = (char *)v10 + v103;
                  v328 = (char *)v9 + v103;
                  v104 = sub_23FB2D718();
                  v281 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v281(v328, __dstr, v104);
LABEL_55:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v16);
            }
            v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            v106 = (char *)v9 + v105;
            v107 = (char *)v10 + v105;
            v108 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
            goto LABEL_115;
          case 1u:
            *(_BYTE *)v9 = *(_BYTE *)v10;
            v313 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            v18 = *(int *)(v313 + 20);
            v19 = (_QWORD *)((char *)v9 + v18);
            v20 = (_QWORD *)((char *)v10 + v18);
            v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
            {
              v22 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
            }
            else
            {
              __dsta = (int *)v21;
              v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v79))
              {
                v80 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
                v81 = v20;
              }
              else
              {
                __src = (void *)v79;
                v267 = v20;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v93 = v20[1];
                    *v19 = *v20;
                    v19[1] = v93;
                    swift_bridgeObjectRetain();
                    goto LABEL_62;
                  case 4u:
                    *v19 = *v20;
                    v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v227 = (char *)v20 + v109;
                    v239 = (char *)v19 + v109;
                    v110 = sub_23FB2D718();
                    v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v111(v239, v227, v110);
                    v79 = (uint64_t)__src;
                    goto LABEL_62;
                  case 5u:
                    *v19 = *v20;
                    v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v228 = (char *)v20 + v112;
                    v240 = (char *)v19 + v112;
                    v113 = sub_23FB2D718();
                    v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v114(v240, v228, v113);
                    v79 = (uint64_t)__src;
                    goto LABEL_62;
                  case 9u:
                    *(_DWORD *)v19 = *(_DWORD *)v20;
                    v115 = v20[2];
                    v19[1] = v20[1];
                    v19[2] = v115;
                    v116 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v229 = (char *)v20 + v116;
                    v241 = (char *)v19 + v116;
                    v117 = sub_23FB2D718();
                    v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v118(v241, v229, v117);
                    v79 = (uint64_t)__src;
LABEL_62:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v79);
                v81 = v267;
              }
              v282 = v19;
              v119 = __dsta[5];
              v120 = (char *)v19 + v119;
              v121 = (char *)v81 + v119;
              v122 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v282, 0, 1, (uint64_t)__dsta);
            }
            goto LABEL_85;
          case 2u:
            *(_BYTE *)v9 = *(_BYTE *)v10;
            v314 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            v23 = v314[5];
            v24 = (char *)v9 + v23;
            v25 = (_QWORD *)((char *)v10 + v23);
            v26 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v26))
            {
              v27 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
            }
            else
            {
              v277 = v24;
              v82 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              __dstb = (int *)v26;
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v25, 1, v82))
              {
                v83 = sub_23F6916B8(&qword_256EA25F0);
                v84 = (uint64_t)v277;
                memcpy(v277, v25, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
              }
              else
              {
                v268 = v82;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v94 = v25[1];
                    v95 = (uint64_t)v277;
                    *v277 = *v25;
                    v277[1] = v94;
                    swift_bridgeObjectRetain();
                    goto LABEL_69;
                  case 4u:
                    v95 = (uint64_t)v277;
                    *v277 = *v25;
                    v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v230 = (char *)v25 + v123;
                    v242 = (char *)v277 + v123;
                    v124 = sub_23FB2D718();
                    v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v224(v242, v230, v124);
                    v82 = v268;
                    goto LABEL_69;
                  case 5u:
                    v95 = (uint64_t)v277;
                    *v277 = *v25;
                    v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v231 = (char *)v25 + v125;
                    v243 = (char *)v277 + v125;
                    v126 = sub_23FB2D718();
                    v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v225(v243, v231, v126);
                    v82 = v268;
                    goto LABEL_69;
                  case 9u:
                    v95 = (uint64_t)v277;
                    *(_DWORD *)v277 = *(_DWORD *)v25;
                    v127 = v25[2];
                    v277[1] = v25[1];
                    v277[2] = v127;
                    v128 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v232 = (char *)v25 + v128;
                    v244 = (char *)v277 + v128;
                    v129 = sub_23FB2D718();
                    v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v226(v244, v232, v129);
                    v82 = v268;
LABEL_69:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v95 = (uint64_t)v277;
                    memcpy(v277, v25, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v95, 0, 1, v82);
                v84 = v95;
              }
              v26 = (uint64_t)__dstb;
              v130 = __dstb[5];
              v283 = (void *)(v84 + v130);
              v131 = (char *)v25 + v130;
              v132 = sub_23FB2D718();
              (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16))(v283, v131, v132);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v84, 0, 1, (uint64_t)__dstb);
            }
            v133 = v314[6];
            v134 = (_QWORD *)((char *)v9 + v133);
            v135 = (_QWORD *)((char *)v10 + v133);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10 + v133, 1, v26))
            {
              v136 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
            }
            else
            {
              __dstd = (int *)v26;
              v137 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v135, 1, v137))
              {
                v138 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
              }
              else
              {
                v284 = (void *)v137;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v139 = v135[1];
                    *v134 = *v135;
                    v134[1] = v139;
                    swift_bridgeObjectRetain();
                    goto LABEL_103;
                  case 4u:
                    *v134 = *v135;
                    v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v257 = (char *)v135 + v179;
                    __srca = (char *)v134 + v179;
                    v273 = v134;
                    v180 = sub_23FB2D718();
                    v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v181 = v180;
                    v134 = v273;
                    v248(__srca, v257, v181);
                    goto LABEL_103;
                  case 5u:
                    *v134 = *v135;
                    v182 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v258 = (char *)v135 + v182;
                    __srcb = (char *)v134 + v182;
                    v274 = v134;
                    v183 = sub_23FB2D718();
                    v249 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v184 = v183;
                    v134 = v274;
                    v249(__srcb, v258, v184);
                    goto LABEL_103;
                  case 9u:
                    *(_DWORD *)v134 = *(_DWORD *)v135;
                    v185 = v135[2];
                    v134[1] = v135[1];
                    v134[2] = v185;
                    v186 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v259 = (char *)v135 + v186;
                    __srcc = (char *)v134 + v186;
                    v275 = v134;
                    v187 = sub_23FB2D718();
                    v250 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v188 = v187;
                    v134 = v275;
                    v250(__srcc, v259, v188);
                    v137 = (uint64_t)v284;
LABEL_103:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v134, 0, 1, v137);
              }
              v189 = __dstd[5];
              v290 = (char *)v134 + v189;
              v190 = (char *)v135 + v189;
              v191 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v290, v190, v191);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v134, 0, 1, (uint64_t)__dstd);
            }
            v192 = v314[7];
            v193 = (char *)v9 + v192;
            v194 = (char *)v10 + v192;
            v195 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v193, v194, v195);
            goto LABEL_115;
          case 3u:
            v28 = v10[1];
            *v9 = *v10;
            v9[1] = v28;
            v313 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            v29 = *(int *)(v313 + 20);
            v30 = (char *)v9 + v29;
            v31 = (_QWORD *)((char *)v10 + v29);
            v32 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v32))
            {
              v33 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
            }
            else
            {
              __dstc = v30;
              v85 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v31, 1, v85))
              {
                v86 = sub_23F6916B8(&qword_256EA25F0);
                v87 = (uint64_t)__dstc;
                memcpy(__dstc, v31, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
              }
              else
              {
                v269 = v85;
                v87 = (uint64_t)__dstc;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v96 = v31[1];
                    *__dstc = *v31;
                    __dstc[1] = v96;
                    swift_bridgeObjectRetain();
                    goto LABEL_82;
                  case 4u:
                    *__dstc = *v31;
                    v140 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v245 = (char *)v31 + v140;
                    v254 = (char *)__dstc + v140;
                    v141 = v32;
                    v142 = sub_23FB2D718();
                    v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v143 = v142;
                    v32 = v141;
                    v87 = (uint64_t)__dstc;
                    v233(v254, v245, v143);
                    goto LABEL_82;
                  case 5u:
                    *__dstc = *v31;
                    v144 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v246 = (char *)v31 + v144;
                    v255 = (char *)__dstc + v144;
                    v145 = v32;
                    v146 = sub_23FB2D718();
                    v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v147 = v146;
                    v32 = v145;
                    v87 = (uint64_t)__dstc;
                    v234(v255, v246, v147);
                    goto LABEL_82;
                  case 9u:
                    *(_DWORD *)__dstc = *(_DWORD *)v31;
                    v148 = v31[2];
                    __dstc[1] = v31[1];
                    __dstc[2] = v148;
                    v149 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v247 = (char *)v31 + v149;
                    v256 = (char *)__dstc + v149;
                    v150 = v32;
                    v151 = sub_23FB2D718();
                    v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v152 = v151;
                    v32 = v150;
                    v87 = (uint64_t)__dstc;
                    v235(v256, v247, v152);
LABEL_82:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v87 = (uint64_t)__dstc;
                    memcpy(__dstc, v31, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v87, 0, 1, v269);
              }
              v285 = (void *)v32;
              v153 = *(int *)(v32 + 20);
              v154 = v87 + v153;
              v155 = (char *)v31 + v153;
              v156 = sub_23FB2D718();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v154, v155, v156);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v87, 0, 1, (uint64_t)v285);
            }
            goto LABEL_85;
          case 4u:
            v315 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v315))
            {
              v34 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            }
            else
            {
              v88 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v88))
              {
                v89 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v97 = v10[1];
                    *v9 = *v10;
                    v9[1] = v97;
                    swift_bridgeObjectRetain();
                    goto LABEL_90;
                  case 4u:
                    *v9 = *v10;
                    v161 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v286 = (char *)v10 + v161;
                    __dsts = (char *)v9 + v161;
                    v162 = sub_23FB2D718();
                    v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v270(__dsts, v286, v162);
                    goto LABEL_90;
                  case 5u:
                    *v9 = *v10;
                    v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v287 = (char *)v10 + v163;
                    __dstt = (char *)v9 + v163;
                    v164 = sub_23FB2D718();
                    v271 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v271(__dstt, v287, v164);
                    goto LABEL_90;
                  case 9u:
                    *(_DWORD *)v9 = *(_DWORD *)v10;
                    v165 = v10[2];
                    v9[1] = v10[1];
                    v9[2] = v165;
                    v166 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v288 = (char *)v10 + v166;
                    __dstu = (char *)v9 + v166;
                    v167 = sub_23FB2D718();
                    v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v272(__dstu, v288, v167);
LABEL_90:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v88);
              }
              v168 = *(int *)(v315 + 20);
              v169 = (char *)v9 + v168;
              v170 = (char *)v10 + v168;
              v171 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v169, v170, v171);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v315);
            }
            __dste = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            v172 = __dste[5];
            v173 = (_QWORD *)((char *)v9 + v172);
            v174 = (_QWORD *)((char *)v10 + v172);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10 + v172, 1, v315))
            {
              v175 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
            }
            else
            {
              v176 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v174, 1, v176))
              {
                v177 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
              }
              else
              {
                v289 = (void *)v176;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v178 = v174[1];
                    *v173 = *v174;
                    v173[1] = v178;
                    swift_bridgeObjectRetain();
                    goto LABEL_111;
                  case 4u:
                    *v173 = *v174;
                    v196 = v173;
                    v197 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v251 = (char *)v174 + v197;
                    v260 = (char *)v173 + v197;
                    v198 = sub_23FB2D718();
                    v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v236(v260, v251, v198);
                    v173 = v196;
                    v176 = (uint64_t)v289;
                    goto LABEL_111;
                  case 5u:
                    *v173 = *v174;
                    v199 = v173;
                    v200 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v252 = (char *)v174 + v200;
                    v261 = (char *)v173 + v200;
                    v201 = sub_23FB2D718();
                    v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v237(v261, v252, v201);
                    v173 = v199;
                    v176 = (uint64_t)v289;
                    goto LABEL_111;
                  case 9u:
                    *(_DWORD *)v173 = *(_DWORD *)v174;
                    v202 = v174[2];
                    v173[1] = v174[1];
                    v173[2] = v202;
                    v203 = v173;
                    v204 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v253 = (char *)v174 + v204;
                    v262 = (char *)v173 + v204;
                    v205 = sub_23FB2D718();
                    v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v238(v262, v253, v205);
                    v173 = v203;
                    v176 = (uint64_t)v289;
LABEL_111:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v173, 0, 1, v176);
              }
              v206 = *(int *)(v315 + 20);
              v207 = (uint64_t)v173;
              v208 = (char *)v173 + v206;
              v209 = (char *)v174 + v206;
              v210 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(v208, v209, v210);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v207, 0, 1, v315);
            }
            v211 = __dste[6];
            v212 = (char *)v9 + v211;
            v213 = (char *)v10 + v211;
            v214 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(v212, v213, v214);
            goto LABEL_115;
          case 5u:
            v35 = v10[1];
            *v9 = *v10;
            v9[1] = v35;
            v9[2] = v10[2];
            v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            __dstf = (char *)v10 + v36;
            v316 = (char *)v9 + v36;
            v37 = sub_23FB2D718();
            v276 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v276(v316, __dstf, v37);
            goto LABEL_115;
          case 6u:
            *v9 = *v10;
            v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            __dstg = (char *)v10 + v38;
            v317 = (char *)v9 + v38;
            v39 = sub_23FB2D718();
            v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v40(v317, __dstg, v39);
            goto LABEL_115;
          case 7u:
            v41 = v10[1];
            *v9 = *v10;
            v9[1] = v41;
            v42 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            v43 = *(int *)(v42 + 20);
            __dst = (char *)v9 + v43;
            v313 = v42;
            v44 = (char *)v10 + v43;
            v45 = type metadata accessor for TranscriptProtoASTPickType(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v44, 1, v45))
            {
              v46 = sub_23F6916B8(&qword_256EA8510);
              memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
            }
            else
            {
              *(_QWORD *)__dst = *(_QWORD *)v44;
              __dst[8] = v44[8];
              v90 = *(int *)(v45 + 20);
              v278 = &__dst[v90];
              v91 = &v44[v90];
              v92 = sub_23FB2D718();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v278, v91, v92);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v45);
            }
LABEL_85:
            v157 = *(int *)(v313 + 24);
            v158 = (char *)v9 + v157;
            v159 = (char *)v10 + v157;
            v160 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
            goto LABEL_115;
          case 8u:
            v47 = v10[1];
            *v9 = *v10;
            v9[1] = v47;
            v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            __dsth = (char *)v10 + v48;
            v318 = (char *)v9 + v48;
            v49 = sub_23FB2D718();
            v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
            swift_bridgeObjectRetain();
            v50(v318, __dsth, v49);
            goto LABEL_115;
          case 9u:
            v51 = v10[1];
            *v9 = *v10;
            v9[1] = v51;
            *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
            v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            __dsti = (char *)v10 + v52;
            v319 = (char *)v9 + v52;
            v53 = sub_23FB2D718();
            v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v319, __dsti, v53);
            goto LABEL_115;
          case 0xAu:
            v55 = v10[1];
            *v9 = *v10;
            v9[1] = v55;
            v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            __dstj = (char *)v10 + v56;
            v320 = (char *)v9 + v56;
            v57 = sub_23FB2D718();
            v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
            swift_bridgeObjectRetain();
            v58(v320, __dstj, v57);
            goto LABEL_115;
          case 0xBu:
            v59 = v10[1];
            *v9 = *v10;
            v9[1] = v59;
            v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            __dstk = (char *)v10 + v60;
            v321 = (char *)v9 + v60;
            v61 = sub_23FB2D718();
            v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
            swift_bridgeObjectRetain();
            v62(v321, __dstk, v61);
            goto LABEL_115;
          case 0xCu:
            *v9 = *v10;
            v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            __dstl = (char *)v10 + v63;
            v322 = (char *)v9 + v63;
            v64 = sub_23FB2D718();
            v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
            swift_bridgeObjectRetain();
            v65(v322, __dstl, v64);
            goto LABEL_115;
          case 0xDu:
            v66 = v10[1];
            *v9 = *v10;
            v9[1] = v66;
            v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            __dstm = (char *)v10 + v67;
            v323 = (char *)v9 + v67;
            v68 = sub_23FB2D718();
            v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
            swift_bridgeObjectRetain();
            v69(v323, __dstm, v68);
            goto LABEL_115;
          case 0xEu:
            v70 = v10[1];
            *v9 = *v10;
            v9[1] = v70;
            v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            __dstn = (char *)v10 + v71;
            v324 = (char *)v9 + v71;
            v72 = sub_23FB2D718();
            v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v73(v324, __dstn, v72);
            goto LABEL_115;
          case 0xFu:
          case 0x11u:
            v74 = sub_23FB2D718();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v9, v10, v74);
            goto LABEL_115;
          case 0x10u:
            *v9 = *v10;
            v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            __dsto = (char *)v10 + v75;
            v325 = (char *)v9 + v75;
            v76 = sub_23FB2D718();
            v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
            swift_bridgeObjectRetain();
            v77(v325, __dsto, v76);
LABEL_115:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v14);
      }
      v215 = *(int *)(v11 + 20);
      v216 = (char *)v9 + v215;
      v217 = (char *)v10 + v215;
      v218 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v216, v217, v218);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v219 = *(int *)(a3 + 24);
    v220 = (char *)v4 + v219;
    v221 = (char *)a2 + v219;
    v222 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v220, v221, v222);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatAssignExpr(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t updated;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v8))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v22 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_37;
              case 5u:
                swift_bridgeObjectRelease();
                v22 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_37:
                v23 = *(int *)(v22 + 20);
                goto LABEL_39;
              case 9u:
                swift_bridgeObjectRelease();
                v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_39:
                v24 = v4 + v23;
                v25 = sub_23FB2D718();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
                break;
              default:
                break;
            }
          }
          updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
          goto LABEL_41;
        case 1u:
          v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v10 = v4 + *(int *)(v9 + 20);
          v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))goto LABEL_48;
          v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v12))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                goto LABEL_18;
              case 4u:
                goto LABEL_42;
              case 5u:
                goto LABEL_43;
              case 9u:
                goto LABEL_45;
              default:
                goto LABEL_47;
            }
          }
          goto LABEL_47;
        case 2u:
          v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v14 = v4 + v13[5];
          v15 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v15))
          {
            v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v14, 1, v16))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v32 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_51;
                case 5u:
                  swift_bridgeObjectRelease();
                  v32 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_51:
                  v33 = *(int *)(v32 + 20);
                  goto LABEL_53;
                case 9u:
                  swift_bridgeObjectRelease();
                  v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_53:
                  v34 = v14 + v33;
                  v35 = sub_23FB2D718();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
                  break;
                default:
                  break;
              }
            }
            v36 = v14 + *(int *)(v15 + 20);
            v37 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
          }
          v38 = v4 + v13[6];
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v38, 1, v15))
          {
            v39 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v38, 1, v39))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v49 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_71;
                case 5u:
                  swift_bridgeObjectRelease();
                  v49 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_71:
                  v50 = *(int *)(v49 + 20);
                  goto LABEL_73;
                case 9u:
                  swift_bridgeObjectRelease();
                  v50 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_73:
                  v51 = v38 + v50;
                  v52 = sub_23FB2D718();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
                  break;
                default:
                  break;
              }
            }
            v53 = v38 + *(int *)(v15 + 20);
            v54 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
          }
          v20 = v13[7];
          goto LABEL_83;
        case 3u:
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v10 = v4 + *(int *)(v9 + 20);
          v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))goto LABEL_48;
          v17 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v17))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
LABEL_18:
                swift_bridgeObjectRelease();
                break;
              case 4u:
LABEL_42:
                swift_bridgeObjectRelease();
                v26 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_44;
              case 5u:
LABEL_43:
                swift_bridgeObjectRelease();
                v26 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_44:
                v27 = *(int *)(v26 + 20);
                goto LABEL_46;
              case 9u:
LABEL_45:
                swift_bridgeObjectRelease();
                v27 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_46:
                v28 = v10 + v27;
                v29 = sub_23FB2D718();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
                break;
              default:
                break;
            }
          }
LABEL_47:
          v30 = v10 + *(int *)(v11 + 20);
          v31 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
LABEL_48:
          v20 = *(int *)(v9 + 24);
          goto LABEL_83;
        case 4u:
          v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v18))
          {
            v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v19))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v40 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_61;
                case 5u:
                  swift_bridgeObjectRelease();
                  v40 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_61:
                  v41 = *(int *)(v40 + 20);
                  goto LABEL_63;
                case 9u:
                  swift_bridgeObjectRelease();
                  v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_63:
                  v42 = v4 + v41;
                  v43 = sub_23FB2D718();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
                  break;
                default:
                  break;
              }
            }
            v44 = v4 + *(int *)(v18 + 20);
            v45 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
          }
          v46 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v47 = v4 + *(int *)(v46 + 20);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v47, 1, v18))
          {
            v48 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v47, 1, v48))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v55 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                  goto LABEL_78;
                case 5u:
                  swift_bridgeObjectRelease();
                  v55 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_78:
                  v56 = *(int *)(v55 + 20);
                  goto LABEL_80;
                case 9u:
                  swift_bridgeObjectRelease();
                  v56 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_80:
                  v57 = v47 + v56;
                  v58 = sub_23FB2D718();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
                  break;
                default:
                  break;
              }
            }
            v59 = v47 + *(int *)(v18 + 20);
            v60 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
          }
          v20 = *(int *)(v46 + 24);
          goto LABEL_83;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          goto LABEL_83;
        case 6u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
          goto LABEL_41;
        case 7u:
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v10 = v4 + *(int *)(v9 + 20);
          v11 = type metadata accessor for TranscriptProtoASTPickType(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v10, 1, v11))goto LABEL_47;
          goto LABEL_48;
        case 8u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
          goto LABEL_41;
        case 9u:
          swift_bridgeObjectRelease();
          v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          goto LABEL_83;
        case 0xAu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
          goto LABEL_41;
        case 0xBu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
          goto LABEL_41;
        case 0xCu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
          goto LABEL_41;
        case 0xDu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
          goto LABEL_41;
        case 0xEu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
          goto LABEL_41;
        case 0xFu:
        case 0x11u:
          v7 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
          break;
        case 0x10u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_41:
          v20 = *(int *)(updated + 20);
LABEL_83:
          v61 = v4 + v20;
          v62 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
          break;
        default:
          break;
      }
    }
    v63 = v4 + *(int *)(v5 + 20);
    v64 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
  }
  v65 = a1 + *(int *)(a2 + 24);
  v66 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatAssignExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  void (*v222)(char *, char *, uint64_t);
  void (*v223)(char *, char *, uint64_t);
  void (*v224)(char *, char *, uint64_t);
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  void (*v231)(char *, char *, uint64_t);
  void (*v232)(char *, char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  void (*v246)(char *, char *, uint64_t);
  void (*v247)(char *, char *, uint64_t);
  void (*v248)(char *, char *, uint64_t);
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  void *__src;
  char *__srca;
  char *__srcb;
  char *__srcc;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  void (*v268)(char *, char *, uint64_t);
  void (*v269)(char *, char *, uint64_t);
  void (*v270)(char *, char *, uint64_t);
  _QWORD *v271;
  _QWORD *v272;
  _QWORD *v273;
  void (*v274)(char *, char *, uint64_t);
  _QWORD *v275;
  _BYTE *v276;
  void (*v277)(char *, char *, uint64_t);
  void (*v278)(char *, char *, uint64_t);
  void (*v279)(char *, char *, uint64_t);
  void *v280;
  void *v281;
  void *v282;
  void *v283;
  char *v284;
  char *v285;
  char *v286;
  void *v287;
  char *v288;
  char *__dstf;
  char *__dstg;
  _BYTE *__dst;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  char *__dstk;
  char *__dstl;
  char *__dstm;
  char *__dstn;
  char *__dsto;
  int *__dsta;
  int *__dstb;
  _QWORD *__dstc;
  char *__dstp;
  char *__dstq;
  char *__dstr;
  int *__dstd;
  char *__dsts;
  char *__dstt;
  char *__dstu;
  int *__dste;
  uint64_t v311;
  int *v312;
  uint64_t v313;
  char *v314;
  char *v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EB22C8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EB22D8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v14))
          {
            v15 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v76 = v9[1];
                *v8 = *v9;
                v8[1] = v76;
                swift_bridgeObjectRetain();
                goto LABEL_53;
              case 4u:
                *v8 = *v9;
                v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                __dstp = (char *)v9 + v96;
                v324 = (char *)v8 + v96;
                v97 = sub_23FB2D718();
                v277 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
                swift_bridgeObjectRetain();
                v277(v324, __dstp, v97);
                goto LABEL_53;
              case 5u:
                *v8 = *v9;
                v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                __dstq = (char *)v9 + v98;
                v325 = (char *)v8 + v98;
                v99 = sub_23FB2D718();
                v278 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
                swift_bridgeObjectRetain();
                v278(v325, __dstq, v99);
                goto LABEL_53;
              case 9u:
                *(_DWORD *)v8 = *(_DWORD *)v9;
                v100 = v9[2];
                v8[1] = v9[1];
                v8[2] = v100;
                v101 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                __dstr = (char *)v9 + v101;
                v326 = (char *)v8 + v101;
                v102 = sub_23FB2D718();
                v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
                swift_bridgeObjectRetain();
                v279(v326, __dstr, v102);
LABEL_53:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v14);
          }
          v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v104 = (char *)v8 + v103;
          v105 = (char *)v9 + v103;
          v106 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v104, v105, v106);
          goto LABEL_113;
        case 1u:
          *(_BYTE *)v8 = *(_BYTE *)v9;
          v311 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v16 = *(int *)(v311 + 20);
          v17 = (_QWORD *)((char *)v8 + v16);
          v18 = (_QWORD *)((char *)v9 + v16);
          v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
          {
            v20 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          }
          else
          {
            __dsta = (int *)v19;
            v77 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v77))
            {
              v78 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
              v79 = v18;
            }
            else
            {
              __src = (void *)v77;
              v265 = v18;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v91 = v18[1];
                  *v17 = *v18;
                  v17[1] = v91;
                  swift_bridgeObjectRetain();
                  goto LABEL_60;
                case 4u:
                  *v17 = *v18;
                  v107 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v225 = (char *)v18 + v107;
                  v237 = (char *)v17 + v107;
                  v108 = sub_23FB2D718();
                  v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v109(v237, v225, v108);
                  v77 = (uint64_t)__src;
                  goto LABEL_60;
                case 5u:
                  *v17 = *v18;
                  v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v226 = (char *)v18 + v110;
                  v238 = (char *)v17 + v110;
                  v111 = sub_23FB2D718();
                  v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v112(v238, v226, v111);
                  v77 = (uint64_t)__src;
                  goto LABEL_60;
                case 9u:
                  *(_DWORD *)v17 = *(_DWORD *)v18;
                  v113 = v18[2];
                  v17[1] = v18[1];
                  v17[2] = v113;
                  v114 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v227 = (char *)v18 + v114;
                  v239 = (char *)v17 + v114;
                  v115 = sub_23FB2D718();
                  v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v116(v239, v227, v115);
                  v77 = (uint64_t)__src;
LABEL_60:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v77);
              v79 = v265;
            }
            v280 = v17;
            v117 = __dsta[5];
            v118 = (char *)v17 + v117;
            v119 = (char *)v79 + v117;
            v120 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v118, v119, v120);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v280, 0, 1, (uint64_t)__dsta);
          }
          goto LABEL_83;
        case 2u:
          *(_BYTE *)v8 = *(_BYTE *)v9;
          v312 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v21 = v312[5];
          v22 = (char *)v8 + v21;
          v23 = (_QWORD *)((char *)v9 + v21);
          v24 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v24))
          {
            v25 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            v275 = v22;
            v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            __dstb = (int *)v24;
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v23, 1, v80))
            {
              v81 = sub_23F6916B8(&qword_256EA25F0);
              v82 = (uint64_t)v275;
              memcpy(v275, v23, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
            }
            else
            {
              v266 = v80;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v92 = v23[1];
                  v93 = (uint64_t)v275;
                  *v275 = *v23;
                  v275[1] = v92;
                  swift_bridgeObjectRetain();
                  goto LABEL_67;
                case 4u:
                  v93 = (uint64_t)v275;
                  *v275 = *v23;
                  v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v228 = (char *)v23 + v121;
                  v240 = (char *)v275 + v121;
                  v122 = sub_23FB2D718();
                  v222 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v222(v240, v228, v122);
                  v80 = v266;
                  goto LABEL_67;
                case 5u:
                  v93 = (uint64_t)v275;
                  *v275 = *v23;
                  v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v229 = (char *)v23 + v123;
                  v241 = (char *)v275 + v123;
                  v124 = sub_23FB2D718();
                  v223 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v223(v241, v229, v124);
                  v80 = v266;
                  goto LABEL_67;
                case 9u:
                  v93 = (uint64_t)v275;
                  *(_DWORD *)v275 = *(_DWORD *)v23;
                  v125 = v23[2];
                  v275[1] = v23[1];
                  v275[2] = v125;
                  v126 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v230 = (char *)v23 + v126;
                  v242 = (char *)v275 + v126;
                  v127 = sub_23FB2D718();
                  v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v224(v242, v230, v127);
                  v80 = v266;
LABEL_67:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  v93 = (uint64_t)v275;
                  memcpy(v275, v23, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v93, 0, 1, v80);
              v82 = v93;
            }
            v24 = (uint64_t)__dstb;
            v128 = __dstb[5];
            v281 = (void *)(v82 + v128);
            v129 = (char *)v23 + v128;
            v130 = sub_23FB2D718();
            (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v281, v129, v130);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v82, 0, 1, (uint64_t)__dstb);
          }
          v131 = v312[6];
          v132 = (_QWORD *)((char *)v8 + v131);
          v133 = (_QWORD *)((char *)v9 + v131);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v131, 1, v24))
          {
            v134 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
          }
          else
          {
            __dstd = (int *)v24;
            v135 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v133, 1, v135))
            {
              v136 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
            }
            else
            {
              v282 = (void *)v135;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v137 = v133[1];
                  *v132 = *v133;
                  v132[1] = v137;
                  swift_bridgeObjectRetain();
                  goto LABEL_101;
                case 4u:
                  *v132 = *v133;
                  v177 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v255 = (char *)v133 + v177;
                  __srca = (char *)v132 + v177;
                  v271 = v132;
                  v178 = sub_23FB2D718();
                  v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v179 = v178;
                  v132 = v271;
                  v246(__srca, v255, v179);
                  goto LABEL_101;
                case 5u:
                  *v132 = *v133;
                  v180 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v256 = (char *)v133 + v180;
                  __srcb = (char *)v132 + v180;
                  v272 = v132;
                  v181 = sub_23FB2D718();
                  v247 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v182 = v181;
                  v132 = v272;
                  v247(__srcb, v256, v182);
                  goto LABEL_101;
                case 9u:
                  *(_DWORD *)v132 = *(_DWORD *)v133;
                  v183 = v133[2];
                  v132[1] = v133[1];
                  v132[2] = v183;
                  v184 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v257 = (char *)v133 + v184;
                  __srcc = (char *)v132 + v184;
                  v273 = v132;
                  v185 = sub_23FB2D718();
                  v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v186 = v185;
                  v132 = v273;
                  v248(__srcc, v257, v186);
                  v135 = (uint64_t)v282;
LABEL_101:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v132, 0, 1, v135);
            }
            v187 = __dstd[5];
            v288 = (char *)v132 + v187;
            v188 = (char *)v133 + v187;
            v189 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v288, v188, v189);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v132, 0, 1, (uint64_t)__dstd);
          }
          v190 = v312[7];
          v191 = (char *)v8 + v190;
          v192 = (char *)v9 + v190;
          v193 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v191, v192, v193);
          goto LABEL_113;
        case 3u:
          v26 = v9[1];
          *v8 = *v9;
          v8[1] = v26;
          v311 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v27 = *(int *)(v311 + 20);
          v28 = (char *)v8 + v27;
          v29 = (_QWORD *)((char *)v9 + v27);
          v30 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v30))
          {
            v31 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            __dstc = v28;
            v83 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v83))
            {
              v84 = sub_23F6916B8(&qword_256EA25F0);
              v85 = (uint64_t)__dstc;
              memcpy(__dstc, v29, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            }
            else
            {
              v267 = v83;
              v85 = (uint64_t)__dstc;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v94 = v29[1];
                  *__dstc = *v29;
                  __dstc[1] = v94;
                  swift_bridgeObjectRetain();
                  goto LABEL_80;
                case 4u:
                  *__dstc = *v29;
                  v138 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v243 = (char *)v29 + v138;
                  v252 = (char *)__dstc + v138;
                  v139 = v30;
                  v140 = sub_23FB2D718();
                  v231 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v141 = v140;
                  v30 = v139;
                  v85 = (uint64_t)__dstc;
                  v231(v252, v243, v141);
                  goto LABEL_80;
                case 5u:
                  *__dstc = *v29;
                  v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v244 = (char *)v29 + v142;
                  v253 = (char *)__dstc + v142;
                  v143 = v30;
                  v144 = sub_23FB2D718();
                  v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v145 = v144;
                  v30 = v143;
                  v85 = (uint64_t)__dstc;
                  v232(v253, v244, v145);
                  goto LABEL_80;
                case 9u:
                  *(_DWORD *)__dstc = *(_DWORD *)v29;
                  v146 = v29[2];
                  __dstc[1] = v29[1];
                  __dstc[2] = v146;
                  v147 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v245 = (char *)v29 + v147;
                  v254 = (char *)__dstc + v147;
                  v148 = v30;
                  v149 = sub_23FB2D718();
                  v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v150 = v149;
                  v30 = v148;
                  v85 = (uint64_t)__dstc;
                  v233(v254, v245, v150);
LABEL_80:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  v85 = (uint64_t)__dstc;
                  memcpy(__dstc, v29, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v85, 0, 1, v267);
            }
            v283 = (void *)v30;
            v151 = *(int *)(v30 + 20);
            v152 = v85 + v151;
            v153 = (char *)v29 + v151;
            v154 = sub_23FB2D718();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v152, v153, v154);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v85, 0, 1, (uint64_t)v283);
          }
          goto LABEL_83;
        case 4u:
          v313 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v313))
          {
            v32 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v86 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v86))
            {
              v87 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v95 = v9[1];
                  *v8 = *v9;
                  v8[1] = v95;
                  swift_bridgeObjectRetain();
                  goto LABEL_88;
                case 4u:
                  *v8 = *v9;
                  v159 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v284 = (char *)v9 + v159;
                  __dsts = (char *)v8 + v159;
                  v160 = sub_23FB2D718();
                  v268 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v268(__dsts, v284, v160);
                  goto LABEL_88;
                case 5u:
                  *v8 = *v9;
                  v161 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v285 = (char *)v9 + v161;
                  __dstt = (char *)v8 + v161;
                  v162 = sub_23FB2D718();
                  v269 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v269(__dstt, v285, v162);
                  goto LABEL_88;
                case 9u:
                  *(_DWORD *)v8 = *(_DWORD *)v9;
                  v163 = v9[2];
                  v8[1] = v9[1];
                  v8[2] = v163;
                  v164 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v286 = (char *)v9 + v164;
                  __dstu = (char *)v8 + v164;
                  v165 = sub_23FB2D718();
                  v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v270(__dstu, v286, v165);
LABEL_88:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v86);
            }
            v166 = *(int *)(v313 + 20);
            v167 = (char *)v8 + v166;
            v168 = (char *)v9 + v166;
            v169 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v167, v168, v169);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v313);
          }
          __dste = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v170 = __dste[5];
          v171 = (_QWORD *)((char *)v8 + v170);
          v172 = (_QWORD *)((char *)v9 + v170);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v170, 1, v313))
          {
            v173 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
          }
          else
          {
            v174 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v172, 1, v174))
            {
              v175 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
            }
            else
            {
              v287 = (void *)v174;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v176 = v172[1];
                  *v171 = *v172;
                  v171[1] = v176;
                  swift_bridgeObjectRetain();
                  goto LABEL_109;
                case 4u:
                  *v171 = *v172;
                  v194 = v171;
                  v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v249 = (char *)v172 + v195;
                  v258 = (char *)v171 + v195;
                  v196 = sub_23FB2D718();
                  v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v234(v258, v249, v196);
                  v171 = v194;
                  v174 = (uint64_t)v287;
                  goto LABEL_109;
                case 5u:
                  *v171 = *v172;
                  v197 = v171;
                  v198 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v250 = (char *)v172 + v198;
                  v259 = (char *)v171 + v198;
                  v199 = sub_23FB2D718();
                  v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v235(v259, v250, v199);
                  v171 = v197;
                  v174 = (uint64_t)v287;
                  goto LABEL_109;
                case 9u:
                  *(_DWORD *)v171 = *(_DWORD *)v172;
                  v200 = v172[2];
                  v171[1] = v172[1];
                  v171[2] = v200;
                  v201 = v171;
                  v202 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v251 = (char *)v172 + v202;
                  v260 = (char *)v171 + v202;
                  v203 = sub_23FB2D718();
                  v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v236(v260, v251, v203);
                  v171 = v201;
                  v174 = (uint64_t)v287;
LABEL_109:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v171, 0, 1, v174);
            }
            v204 = *(int *)(v313 + 20);
            v205 = (uint64_t)v171;
            v206 = (char *)v171 + v204;
            v207 = (char *)v172 + v204;
            v208 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v206, v207, v208);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v205, 0, 1, v313);
          }
          v209 = __dste[6];
          v210 = (char *)v8 + v209;
          v211 = (char *)v9 + v209;
          v212 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(v210, v211, v212);
          goto LABEL_113;
        case 5u:
          v33 = v9[1];
          *v8 = *v9;
          v8[1] = v33;
          v8[2] = v9[2];
          v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          __dstf = (char *)v9 + v34;
          v314 = (char *)v8 + v34;
          v35 = sub_23FB2D718();
          v274 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v274(v314, __dstf, v35);
          goto LABEL_113;
        case 6u:
          *v8 = *v9;
          v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          __dstg = (char *)v9 + v36;
          v315 = (char *)v8 + v36;
          v37 = sub_23FB2D718();
          v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v38(v315, __dstg, v37);
          goto LABEL_113;
        case 7u:
          v39 = v9[1];
          *v8 = *v9;
          v8[1] = v39;
          v40 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v41 = *(int *)(v40 + 20);
          __dst = (char *)v8 + v41;
          v311 = v40;
          v42 = (char *)v9 + v41;
          v43 = type metadata accessor for TranscriptProtoASTPickType(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, v43))
          {
            v44 = sub_23F6916B8(&qword_256EA8510);
            memcpy(__dst, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *(_QWORD *)__dst = *(_QWORD *)v42;
            __dst[8] = v42[8];
            v88 = *(int *)(v43 + 20);
            v276 = &__dst[v88];
            v89 = &v42[v88];
            v90 = sub_23FB2D718();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v276, v89, v90);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v43);
          }
LABEL_83:
          v155 = *(int *)(v311 + 24);
          v156 = (char *)v8 + v155;
          v157 = (char *)v9 + v155;
          v158 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v156, v157, v158);
          goto LABEL_113;
        case 8u:
          v45 = v9[1];
          *v8 = *v9;
          v8[1] = v45;
          v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          __dsth = (char *)v9 + v46;
          v316 = (char *)v8 + v46;
          v47 = sub_23FB2D718();
          v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v316, __dsth, v47);
          goto LABEL_113;
        case 9u:
          v49 = v9[1];
          *v8 = *v9;
          v8[1] = v49;
          *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
          v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          __dsti = (char *)v9 + v50;
          v317 = (char *)v8 + v50;
          v51 = sub_23FB2D718();
          v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v317, __dsti, v51);
          goto LABEL_113;
        case 0xAu:
          v53 = v9[1];
          *v8 = *v9;
          v8[1] = v53;
          v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          __dstj = (char *)v9 + v54;
          v318 = (char *)v8 + v54;
          v55 = sub_23FB2D718();
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(v318, __dstj, v55);
          goto LABEL_113;
        case 0xBu:
          v57 = v9[1];
          *v8 = *v9;
          v8[1] = v57;
          v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          __dstk = (char *)v9 + v58;
          v319 = (char *)v8 + v58;
          v59 = sub_23FB2D718();
          v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
          swift_bridgeObjectRetain();
          v60(v319, __dstk, v59);
          goto LABEL_113;
        case 0xCu:
          *v8 = *v9;
          v61 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          __dstl = (char *)v9 + v61;
          v320 = (char *)v8 + v61;
          v62 = sub_23FB2D718();
          v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v63(v320, __dstl, v62);
          goto LABEL_113;
        case 0xDu:
          v64 = v9[1];
          *v8 = *v9;
          v8[1] = v64;
          v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          __dstm = (char *)v9 + v65;
          v321 = (char *)v8 + v65;
          v66 = sub_23FB2D718();
          v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
          swift_bridgeObjectRetain();
          v67(v321, __dstm, v66);
          goto LABEL_113;
        case 0xEu:
          v68 = v9[1];
          *v8 = *v9;
          v8[1] = v68;
          v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          __dstn = (char *)v9 + v69;
          v322 = (char *)v8 + v69;
          v70 = sub_23FB2D718();
          v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
          swift_bridgeObjectRetain();
          v71(v322, __dstn, v70);
          goto LABEL_113;
        case 0xFu:
        case 0x11u:
          v72 = sub_23FB2D718();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v8, v9, v72);
          goto LABEL_113;
        case 0x10u:
          *v8 = *v9;
          v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          __dsto = (char *)v9 + v73;
          v323 = (char *)v8 + v73;
          v74 = sub_23FB2D718();
          v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(v323, __dsto, v74);
LABEL_113:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v12);
    }
    v213 = *(int *)(v10 + 20);
    v214 = (char *)v8 + v213;
    v215 = (char *)v9 + v213;
    v216 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v214, v215, v216);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v217 = *(int *)(a3 + 24);
  v218 = (char *)a1 + v217;
  v219 = (char *)a2 + v217;
  v220 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(v218, v219, v220);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatAssignExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  char *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(char *, char *, uint64_t);
  uint64_t v165;
  uint64_t v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t);
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, char *, uint64_t);
  uint64_t v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  uint64_t v188;
  uint64_t v189;
  void (*v190)(char *, char *, uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v194)(char *, char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _BYTE *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  const void *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(char *, char *, uint64_t);
  uint64_t v267;
  uint64_t v268;
  void (*v269)(char *, char *, uint64_t);
  uint64_t v270;
  uint64_t v271;
  void (*v272)(char *, char *, uint64_t);
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  _QWORD *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  _QWORD *v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  _QWORD *v376;
  uint64_t v377;
  uint64_t v378;
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  _QWORD *v403;
  _QWORD *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  _QWORD *v409;
  int *v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  char *v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  _QWORD *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  size_t v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  char *v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  _QWORD *v501;
  _QWORD *v502;
  uint64_t v503;
  uint64_t v504;
  _QWORD *v505;
  const void *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  char *v525;
  char *v526;
  uint64_t v527;
  uint64_t v528;
  char *v529;
  _QWORD *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  _QWORD *v535;
  int *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  char *v545;
  uint64_t v546;
  uint64_t v547;
  char *v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  uint64_t v560;
  uint64_t v561;
  char *v562;
  char *v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  char *v567;
  uint64_t v568;
  uint64_t v569;
  char *v570;
  char *v571;
  uint64_t v572;
  void (*v574)(char *, char *, uint64_t);
  void (*v575)(char *, char *, uint64_t);
  void (*v576)(char *, char *, uint64_t);
  void (*v577)(char *, char *, uint64_t);
  void (*v578)(char *, char *, uint64_t);
  void (*v579)(char *, char *, uint64_t);
  char *v580;
  char *v581;
  char *v582;
  char *v583;
  char *v584;
  char *v585;
  void (*v586)(char *, char *, uint64_t);
  void (*v587)(char *, char *, uint64_t);
  void (*v588)(char *, char *, uint64_t);
  void (*v589)(char *, char *, uint64_t);
  void (*v590)(char *, char *, uint64_t);
  void (*v591)(char *, char *, uint64_t);
  void (*v592)(char *, char *, uint64_t);
  void (*v593)(char *, char *, uint64_t);
  void (*v594)(char *, char *, uint64_t);
  void (*v595)(char *, char *, uint64_t);
  void (*v596)(char *, char *, uint64_t);
  void (*v597)(char *, char *, uint64_t);
  char *v598;
  char *v599;
  char *v600;
  void (*v601)(char *, char *, uint64_t);
  void (*v602)(char *, char *, uint64_t);
  void (*v603)(char *, char *, uint64_t);
  void (*v604)(char *, char *, uint64_t);
  void (*v605)(char *, char *, uint64_t);
  void (*v606)(char *, char *, uint64_t);
  void (*v607)(char *, char *, uint64_t);
  void (*v608)(char *, char *, uint64_t);
  void (*v609)(char *, char *, uint64_t);
  void (*v610)(char *, char *, uint64_t);
  void (*v611)(char *, char *, uint64_t);
  void (*v612)(char *, char *, uint64_t);
  char *v613;
  char *v614;
  char *v615;
  char *v616;
  char *v617;
  char *v618;
  char *v619;
  char *v620;
  char *v621;
  void (*v622)(char *, char *, uint64_t);
  void (*v623)(char *, char *, uint64_t);
  void (*v624)(char *, char *, uint64_t);
  char *v625;
  char *v626;
  char *v627;
  void (*v628)(char *, char *, uint64_t);
  void (*v629)(char *, char *, uint64_t);
  void (*v630)(char *, char *, uint64_t);
  char *v631;
  char *v632;
  char *v633;
  char *v634;
  char *v635;
  char *v636;
  void (*v637)(char *, char *, uint64_t);
  void (*v638)(char *, char *, uint64_t);
  void (*v639)(char *, char *, uint64_t);
  char *v640;
  char *v641;
  char *v642;
  char *v643;
  char *v644;
  char *v645;
  char *v646;
  char *v647;
  char *v648;
  char *v649;
  char *v650;
  char *v651;
  void (*v652)(char *, char *, uint64_t);
  void (*v653)(char *, char *, uint64_t);
  void (*v654)(char *, char *, uint64_t);
  char *v655;
  char *v656;
  char *v657;
  char *v658;
  char *v659;
  char *v660;
  char *v661;
  char *v662;
  char *v663;
  char *v664;
  char *v665;
  char *v666;
  char *v667;
  char *v668;
  char *v669;
  char *v670;
  char *v671;
  char *v672;
  char *v673;
  char *v674;
  char *v675;
  char *v676;
  char *v677;
  char *v678;
  char *v679;
  char *v680;
  char *v681;
  char *v682;
  char *v683;
  char *v684;
  char *v685;
  char *v686;
  char *v687;
  char *v688;
  char *v689;
  char *v690;
  char *v691;
  char *v692;
  char *v693;
  void *__src;
  char *__srca;
  char *__srcb;
  char *__srcc;
  char *__srcd;
  char *__srce;
  char *__srcf;
  char *__srcg;
  char *__srch;
  char *__srci;
  _QWORD *v704;
  void *v705;
  _QWORD *v706;
  _QWORD *v707;
  _QWORD *v708;
  void *v709;
  _QWORD *v710;
  _QWORD *v711;
  void (*v712)(char *, char *, uint64_t);
  void (*v713)(char *, char *, uint64_t);
  void (*v714)(char *, char *, uint64_t);
  _QWORD *v715;
  _QWORD *v716;
  _QWORD *v717;
  void *v718;
  void *v719;
  void *v720;
  void (*v721)(char *, char *, uint64_t);
  void (*v722)(char *, char *, uint64_t);
  void (*v723)(char *, char *, uint64_t);
  void *v724;
  void (*v725)(char *, char *, uint64_t);
  void (*v726)(char *, char *, uint64_t);
  void (*v727)(char *, char *, uint64_t);
  _QWORD *v728;
  void (*v729)(char *, char *, uint64_t);
  void (*v730)(char *, char *, uint64_t);
  _QWORD *v731;
  _BYTE *v732;
  void (*v733)(char *, char *, uint64_t);
  _QWORD *v734;
  _BYTE *v735;
  int *v736;
  _QWORD *v737;
  _QWORD *v738;
  _BYTE *v739;
  _QWORD *v740;
  void (*v741)(char *, char *, uint64_t);
  void (*v742)(char *, char *, uint64_t);
  void (*v743)(char *, char *, uint64_t);
  void (*v744)(char *, char *, uint64_t);
  void (*v745)(char *, char *, uint64_t);
  void (*v746)(char *, char *, uint64_t);
  void *v747;
  void *v748;
  void *v749;
  char *v750;
  char *v751;
  char *v752;
  void *v753;
  char *v754;
  void (*v755)(char *, char *, uint64_t);
  void (*v756)(char *, char *, uint64_t);
  void (*v757)(char *, char *, uint64_t);
  char *v758;
  _QWORD *v759;
  void *v760;
  char *v761;
  char *v762;
  char *v763;
  _QWORD *v764;
  char *v765;
  _QWORD *v766;
  char *v767;
  char *v768;
  char *v769;
  void *v770;
  char *v771;
  char *__dstq;
  char *__dstr;
  _BYTE *__dst;
  char *__dsts;
  char *__dstt;
  char *__dstu;
  char *__dstv;
  char *__dstw;
  char *__dstx;
  char *__dsty;
  char *__dstz;
  int *__dsta;
  char *__dstba;
  char *__dstbb;
  int *__dstb;
  char *__dstbc;
  char *__dstbd;
  char *__dstbe;
  char *__dstbf;
  char *__dstbg;
  char *__dstbh;
  char *__dstbi;
  char *__dstbj;
  int *__dstc;
  int *__dstd;
  _QWORD *__dste;
  char *__dstbk;
  char *__dstbl;
  _BYTE *__dstf;
  char *__dstbm;
  char *__dstbn;
  char *__dstbo;
  char *__dstbp;
  char *__dstbq;
  char *__dstbr;
  char *__dstbs;
  char *__dstbt;
  int *__dstg;
  _QWORD *__dsth;
  void *__dsti;
  int *__dstj;
  void *__dstk;
  char *__dstbu;
  char *__dstbv;
  char *__dstbw;
  char *__dstbx;
  char *__dstby;
  char *__dstbz;
  int *__dstl;
  char *__dstca;
  char *__dstcb;
  char *__dstcc;
  int *__dstm;
  char *__dstcd;
  char *__dstce;
  char *__dstcf;
  char *__dstcg;
  char *__dstch;
  char *__dstci;
  void *__dstn;
  int *__dsto;
  char *__dstcj;
  char *__dstck;
  char *__dstcl;
  _QWORD *__dstp;
  int *v837;
  int *v838;
  int *v839;
  char *v840;
  char *v841;
  char *v842;
  char *v843;
  char *v844;
  char *v845;
  char *v846;
  char *v847;
  char *v848;
  char *v849;
  int *v850;
  int *v851;
  int *v852;
  char *v853;
  char *v854;
  _BYTE *v855;
  char *v856;
  char *v857;
  char *v858;
  char *v859;
  char *v860;
  char *v861;
  char *v862;
  char *v863;
  _QWORD *v864;
  int *v865;
  int *v866;
  int *v867;
  char *v868;
  char *v869;
  char *v870;
  char *v871;
  char *v872;
  char *v873;
  char *v874;
  char *v875;
  char *v876;
  char *v877;
  char *v878;
  char *v879;
  char *v880;
  char *v881;
  char *v882;
  char *v883;
  char *v884;
  char *v885;
  char *v886;
  void *v887;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExpr);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v18))
            {
              v19 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v7 = *v8;
                  v7[1] = v8[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_160;
                case 4u:
                  *v7 = *v8;
                  v254 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  __dstbx = (char *)v8 + v254;
                  v881 = (char *)v7 + v254;
                  v255 = sub_23FB2D718();
                  v744 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v744(v881, __dstbx, v255);
                  goto LABEL_160;
                case 5u:
                  *v7 = *v8;
                  v256 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  __dstby = (char *)v8 + v256;
                  v882 = (char *)v7 + v256;
                  v257 = sub_23FB2D718();
                  v745 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v745(v882, __dstby, v257);
                  goto LABEL_160;
                case 9u:
                  *(_DWORD *)v7 = *(_DWORD *)v8;
                  v7[1] = v8[1];
                  v7[2] = v8[2];
                  v258 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  __dstbz = (char *)v8 + v258;
                  v883 = (char *)v7 + v258;
                  v259 = sub_23FB2D718();
                  v746 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v746(v883, __dstbz, v259);
LABEL_160:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v18);
            }
            v260 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            v261 = (char *)v7 + v260;
            v262 = (char *)v8 + v260;
            v263 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 16))(v261, v262, v263);
            goto LABEL_287;
          case 1u:
            *(_BYTE *)v7 = *(_BYTE *)v8;
            v850 = (int *)type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            v76 = v850[5];
            v77 = (_QWORD *)((char *)v7 + v76);
            v78 = (_QWORD *)((char *)v8 + v76);
            v79 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v78, 1, v79))
            {
              v80 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
            }
            else
            {
              __dstg = (int *)v79;
              v195 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v78, 1, v195))
              {
                v196 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
              }
              else
              {
                v235 = (_QWORD *)v195;
                v236 = v78;
                v740 = v235;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *v77 = *v78;
                    v77[1] = v78[1];
                    swift_bridgeObjectRetain();
                    v237 = (uint64_t)v740;
                    goto LABEL_234;
                  case 4u:
                    v718 = (void *)*v78;
                    v376 = v77;
                    *v77 = v718;
                    v377 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v667 = (char *)v236 + v377;
                    __srcd = (char *)v77 + v377;
                    v378 = sub_23FB2D718();
                    v628 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v378 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v628(__srcd, v667, v378);
                    v77 = v376;
                    v78 = v236;
                    v237 = (uint64_t)v740;
                    goto LABEL_234;
                  case 5u:
                    v719 = (void *)*v78;
                    v379 = v77;
                    *v77 = v719;
                    v380 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v668 = (char *)v236 + v380;
                    __srce = (char *)v77 + v380;
                    v381 = sub_23FB2D718();
                    v629 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v629(__srce, v668, v381);
                    v77 = v379;
                    v78 = v236;
                    v237 = (uint64_t)v740;
                    goto LABEL_234;
                  case 9u:
                    v382 = v77;
                    *(_DWORD *)v77 = *(_DWORD *)v236;
                    v77[1] = v236[1];
                    v77[2] = v236[2];
                    v383 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v669 = (char *)v236 + v383;
                    __srcf = (char *)v77 + v383;
                    v384 = sub_23FB2D718();
                    v630 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v384 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v630(__srcf, v669, v384);
                    v77 = v382;
                    v78 = v236;
                    v237 = (uint64_t)v740;
LABEL_234:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v237 = (uint64_t)v740;
                    memcpy(v77, v78, *(_QWORD *)(*(v740 - 1) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v77, 0, 1, v237);
              }
              v385 = __dstg[5];
              v386 = (char *)v77 + v385;
              v387 = (char *)v78 + v385;
              v388 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v386, v387, v388);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v77, 0, 1, (uint64_t)__dstg);
            }
            goto LABEL_237;
          case 2u:
            *(_BYTE *)v7 = *(_BYTE *)v8;
            v81 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            v82 = *(int *)(v81 + 20);
            v83 = (char *)v7 + v82;
            v84 = (_QWORD *)((char *)v8 + v82);
            v851 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            __dsta = (int *)v81;
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v84, 1, (uint64_t)v851))
            {
              v85 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
              v86 = (uint64_t)v851;
            }
            else
            {
              v734 = v83;
              v197 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v84, 1, v197))
              {
                v198 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v734, v84, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
                v199 = v84;
                v200 = (uint64_t)v734;
                v86 = (uint64_t)v851;
              }
              else
              {
                v707 = v84;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v238 = (uint64_t)v734;
                    *v734 = *v84;
                    v734[1] = v84[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_242;
                  case 4u:
                    v238 = (uint64_t)v734;
                    *v734 = *v84;
                    v393 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v631 = (char *)v84 + v393;
                    v670 = (char *)v734 + v393;
                    v394 = sub_23FB2D718();
                    v592 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v592(v670, v631, v394);
                    goto LABEL_242;
                  case 5u:
                    v238 = (uint64_t)v734;
                    *v734 = *v84;
                    v395 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v632 = (char *)v84 + v395;
                    v671 = (char *)v734 + v395;
                    v396 = sub_23FB2D718();
                    v593 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v396 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v593(v671, v632, v396);
                    goto LABEL_242;
                  case 9u:
                    v238 = (uint64_t)v734;
                    *(_DWORD *)v734 = *(_DWORD *)v84;
                    v734[1] = v84[1];
                    v734[2] = v84[2];
                    v397 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v633 = (char *)v84 + v397;
                    v672 = (char *)v734 + v397;
                    v398 = sub_23FB2D718();
                    v594 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v398 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v594(v672, v633, v398);
LABEL_242:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v238 = (uint64_t)v734;
                    memcpy(v734, v84, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v238, 0, 1, v197);
                v200 = v238;
                v86 = (uint64_t)v851;
                v199 = v707;
              }
              v399 = *(int *)(v86 + 20);
              v400 = v200 + v399;
              v758 = (char *)v199 + v399;
              v401 = sub_23FB2D718();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v401 - 8) + 16))(v400, v758, v401);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v200, 0, 1, v86);
              v81 = (uint64_t)__dsta;
            }
            v402 = *(int *)(v81 + 24);
            v403 = (_QWORD *)((char *)v7 + v402);
            v404 = (_QWORD *)((char *)v8 + v402);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v402, 1, v86))
            {
              v405 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v405 - 8) + 64));
            }
            else
            {
              v406 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v404, 1, v406))
              {
                v407 = sub_23F6916B8(&qword_256EA25F0);
                v408 = (char *)v403;
                memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v407 - 8) + 64));
                v409 = v404;
                v410 = v851;
              }
              else
              {
                v759 = v404;
                v720 = (void *)v406;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v408 = (char *)v403;
                    *v403 = *v404;
                    v403[1] = v404[1];
                    swift_bridgeObjectRetain();
                    v411 = (uint64_t)v720;
                    goto LABEL_275;
                  case 4u:
                    *v403 = *v404;
                    v448 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v676 = (char *)v403 + v448;
                    v449 = (char *)v404 + v448;
                    v450 = sub_23FB2D718();
                    v637 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v450 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v451 = v450;
                    v408 = (char *)v403;
                    v637(v676, v449, v451);
                    v411 = (uint64_t)v720;
                    goto LABEL_275;
                  case 5u:
                    *v403 = *v404;
                    v452 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v677 = (char *)v403 + v452;
                    v453 = (char *)v404 + v452;
                    v454 = sub_23FB2D718();
                    v638 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v455 = v454;
                    v408 = (char *)v403;
                    v638(v677, v453, v455);
                    v411 = (uint64_t)v720;
                    goto LABEL_275;
                  case 9u:
                    *(_DWORD *)v403 = *(_DWORD *)v404;
                    v403[1] = v404[1];
                    v403[2] = v404[2];
                    v456 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v678 = (char *)v403 + v456;
                    v457 = (char *)v404 + v456;
                    v458 = sub_23FB2D718();
                    v639 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v458 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v459 = v458;
                    v408 = (char *)v403;
                    v639(v678, v457, v459);
                    v411 = (uint64_t)v720;
LABEL_275:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v446 = *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64);
                    v447 = v406;
                    v408 = (char *)v403;
                    v411 = v447;
                    memcpy(v408, v404, v446);
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v408, 0, 1, v411);
                v410 = v851;
                v409 = v759;
              }
              v460 = v410[5];
              v461 = &v408[v460];
              v462 = (char *)v409 + v460;
              v463 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v463 - 8) + 16))(v461, v462, v463);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v408, 0, 1, (uint64_t)v851);
            }
            v464 = __dsta[7];
            v465 = (char *)v7 + v464;
            v466 = (char *)v8 + v464;
            v467 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v467 - 8) + 16))(v465, v466, v467);
            goto LABEL_287;
          case 3u:
            *v7 = *v8;
            v7[1] = v8[1];
            v850 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            v87 = v850[5];
            v88 = (char *)v7 + v87;
            v89 = (_QWORD *)((char *)v8 + v87);
            v90 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v89, 1, v90))
            {
              v91 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
            }
            else
            {
              __dsth = v88;
              v201 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v89, 1, v201))
              {
                v202 = sub_23F6916B8(&qword_256EA25F0);
                v203 = (uint64_t)__dsth;
                memcpy(__dsth, v89, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
              }
              else
              {
                v708 = (_QWORD *)v201;
                v203 = (uint64_t)__dsth;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *__dsth = *v89;
                    __dsth[1] = v89[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_255;
                  case 4u:
                    *__dsth = *v89;
                    v412 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v634 = (char *)v89 + v412;
                    v673 = (char *)__dsth + v412;
                    v413 = v90;
                    v414 = sub_23FB2D718();
                    v595 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v415 = v414;
                    v90 = v413;
                    v203 = (uint64_t)__dsth;
                    v595(v673, v634, v415);
                    goto LABEL_255;
                  case 5u:
                    *__dsth = *v89;
                    v416 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v635 = (char *)v89 + v416;
                    v674 = (char *)__dsth + v416;
                    v417 = v90;
                    v418 = sub_23FB2D718();
                    v596 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v418 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v419 = v418;
                    v90 = v417;
                    v203 = (uint64_t)__dsth;
                    v596(v674, v635, v419);
                    goto LABEL_255;
                  case 9u:
                    *(_DWORD *)__dsth = *(_DWORD *)v89;
                    __dsth[1] = v89[1];
                    __dsth[2] = v89[2];
                    v420 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v636 = (char *)v89 + v420;
                    v675 = (char *)__dsth + v420;
                    v421 = v90;
                    v422 = sub_23FB2D718();
                    v597 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v423 = v422;
                    v90 = v421;
                    v203 = (uint64_t)__dsth;
                    v597(v675, v636, v423);
LABEL_255:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v203 = (uint64_t)__dsth;
                    memcpy(__dsth, v89, *(_QWORD *)(*(v708 - 1) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v203, 0, 1, (uint64_t)v708);
              }
              v760 = (void *)v90;
              v424 = *(int *)(v90 + 20);
              v425 = v203 + v424;
              v426 = (char *)v89 + v424;
              v427 = sub_23FB2D718();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v427 - 8) + 16))(v425, v426, v427);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v203, 0, 1, (uint64_t)v760);
            }
LABEL_237:
            v389 = v850[6];
            v390 = (char *)v7 + v389;
            v391 = (char *)v8 + v389;
            v392 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 16))(v390, v391, v392);
            goto LABEL_287;
          case 4u:
            v852 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, (uint64_t)v852))
            {
              v92 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            }
            else
            {
              v204 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v204))
              {
                v205 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *v7 = *v8;
                    v7[1] = v8[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_262;
                  case 4u:
                    *v7 = *v8;
                    v428 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v761 = (char *)v8 + v428;
                    __dstcg = (char *)v7 + v428;
                    v429 = sub_23FB2D718();
                    v721 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v429 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v721(__dstcg, v761, v429);
                    goto LABEL_262;
                  case 5u:
                    *v7 = *v8;
                    v430 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v762 = (char *)v8 + v430;
                    __dstch = (char *)v7 + v430;
                    v431 = sub_23FB2D718();
                    v722 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v431 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v722(__dstch, v762, v431);
                    goto LABEL_262;
                  case 9u:
                    *(_DWORD *)v7 = *(_DWORD *)v8;
                    v7[1] = v8[1];
                    v7[2] = v8[2];
                    v432 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v763 = (char *)v8 + v432;
                    __dstci = (char *)v7 + v432;
                    v433 = sub_23FB2D718();
                    v723 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v433 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v723(__dstci, v763, v433);
LABEL_262:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v204);
              }
              v434 = v852[5];
              v435 = (char *)v7 + v434;
              v436 = (char *)v8 + v434;
              v437 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v437 - 8) + 16))(v435, v436, v437);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, (uint64_t)v852);
            }
            v438 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            v439 = *(int *)(v438 + 20);
            v440 = (char *)v7 + v439;
            v441 = (_QWORD *)((char *)v8 + v439);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v439, 1, (uint64_t)v852))
            {
              v442 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v440, v441, *(_QWORD *)(*(_QWORD *)(v442 - 8) + 64));
            }
            else
            {
              v764 = v440;
              v443 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              __dstn = (void *)v438;
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v441, 1, v443))
              {
                v444 = sub_23F6916B8(&qword_256EA25F0);
                v445 = (uint64_t)v764;
                memcpy(v764, v441, *(_QWORD *)(*(_QWORD *)(v444 - 8) + 64));
              }
              else
              {
                v724 = (void *)v443;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v445 = (uint64_t)v764;
                    *v764 = *v441;
                    v764[1] = v441[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_283;
                  case 4u:
                    v445 = (uint64_t)v764;
                    *v764 = *v441;
                    v468 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v598 = (char *)v441 + v468;
                    v640 = (char *)v764 + v468;
                    v469 = sub_23FB2D718();
                    v577 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v469 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v577(v640, v598, v469);
                    v443 = (uint64_t)v724;
                    goto LABEL_283;
                  case 5u:
                    v445 = (uint64_t)v764;
                    *v764 = *v441;
                    v470 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v599 = (char *)v441 + v470;
                    v641 = (char *)v764 + v470;
                    v471 = sub_23FB2D718();
                    v578 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v578(v641, v599, v471);
                    v443 = (uint64_t)v724;
                    goto LABEL_283;
                  case 9u:
                    v445 = (uint64_t)v764;
                    *(_DWORD *)v764 = *(_DWORD *)v441;
                    v764[1] = v441[1];
                    v764[2] = v441[2];
                    v472 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v600 = (char *)v441 + v472;
                    v642 = (char *)v764 + v472;
                    v473 = sub_23FB2D718();
                    v579 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v473 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v579(v642, v600, v473);
                    v443 = (uint64_t)v724;
LABEL_283:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v445 = (uint64_t)v764;
                    memcpy(v764, v441, *(_QWORD *)(*(_QWORD *)(v443 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v445, 0, 1, v443);
              }
              v474 = v852[5];
              v475 = v445 + v474;
              v476 = (char *)v441 + v474;
              v477 = sub_23FB2D718();
              (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v477 - 8) + 16))(v475, v476, v477);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v445, 0, 1, (uint64_t)v852);
              v438 = (uint64_t)__dstn;
            }
            v478 = *(int *)(v438 + 24);
            v479 = (char *)v7 + v478;
            v480 = (char *)v8 + v478;
            v481 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v481 - 8) + 16))(v479, v480, v481);
            goto LABEL_287;
          case 5u:
            *v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            __dstba = (char *)v8 + v93;
            v853 = (char *)v7 + v93;
            v94 = sub_23FB2D718();
            v730 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v730(v853, __dstba, v94);
            goto LABEL_287;
          case 6u:
            *v7 = *v8;
            v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            __dstbb = (char *)v8 + v95;
            v854 = (char *)v7 + v95;
            v96 = sub_23FB2D718();
            v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
            swift_bridgeObjectRetain();
            v97(v854, __dstbb, v96);
            goto LABEL_287;
          case 7u:
            *v7 = *v8;
            v7[1] = v8[1];
            v98 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            v99 = *(int *)(v98 + 20);
            __dstb = (int *)v98;
            v855 = (char *)v7 + v99;
            v100 = (char *)v8 + v99;
            v101 = type metadata accessor for TranscriptProtoASTPickType(0);
            swift_bridgeObjectRetain();
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v100, 1, v101))
            {
              v102 = sub_23F6916B8(&qword_256EA8510);
              memcpy(v855, v100, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
            }
            else
            {
              v206 = *(_QWORD *)v100;
              v855[8] = v100[8];
              *(_QWORD *)v855 = v206;
              v207 = *(int *)(v101 + 20);
              v735 = &v855[v207];
              v208 = &v100[v207];
              v209 = sub_23FB2D718();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v735, v208, v209);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v855, 0, 1, v101);
            }
            v210 = __dstb[6];
            v211 = (char *)v7 + v210;
            v212 = (char *)v8 + v210;
            v213 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 16))(v211, v212, v213);
            goto LABEL_287;
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            __dstbc = (char *)v8 + v103;
            v856 = (char *)v7 + v103;
            v104 = sub_23FB2D718();
            v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
            swift_bridgeObjectRetain();
            v105(v856, __dstbc, v104);
            goto LABEL_287;
          case 9u:
            *v7 = *v8;
            v7[1] = v8[1];
            *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
            *((_BYTE *)v7 + 17) = *((_BYTE *)v8 + 17);
            v106 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            __dstbd = (char *)v8 + v106;
            v857 = (char *)v7 + v106;
            v107 = sub_23FB2D718();
            v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
            swift_bridgeObjectRetain();
            v108(v857, __dstbd, v107);
            goto LABEL_287;
          case 0xAu:
            *v7 = *v8;
            v7[1] = v8[1];
            v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            __dstbe = (char *)v8 + v109;
            v858 = (char *)v7 + v109;
            v110 = sub_23FB2D718();
            v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            v111(v858, __dstbe, v110);
            goto LABEL_287;
          case 0xBu:
            *v7 = *v8;
            v7[1] = v8[1];
            v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            __dstbf = (char *)v8 + v112;
            v859 = (char *)v7 + v112;
            v113 = sub_23FB2D718();
            v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
            swift_bridgeObjectRetain();
            v114(v859, __dstbf, v113);
            goto LABEL_287;
          case 0xCu:
            *v7 = *v8;
            v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            __dstbg = (char *)v8 + v115;
            v860 = (char *)v7 + v115;
            v116 = sub_23FB2D718();
            v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
            swift_bridgeObjectRetain();
            v117(v860, __dstbg, v116);
            goto LABEL_287;
          case 0xDu:
            *v7 = *v8;
            v7[1] = v8[1];
            v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            __dstbh = (char *)v8 + v118;
            v861 = (char *)v7 + v118;
            v119 = sub_23FB2D718();
            v120 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
            swift_bridgeObjectRetain();
            v120(v861, __dstbh, v119);
            goto LABEL_287;
          case 0xEu:
            *v7 = *v8;
            v7[1] = v8[1];
            v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            __dstbi = (char *)v8 + v121;
            v862 = (char *)v7 + v121;
            v122 = sub_23FB2D718();
            v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16);
            swift_bridgeObjectRetain();
            v123(v862, __dstbi, v122);
            goto LABEL_287;
          case 0xFu:
          case 0x11u:
            v124 = sub_23FB2D718();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v7, v8, v124);
            goto LABEL_287;
          case 0x10u:
            *v7 = *v8;
            v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            __dstbj = (char *)v8 + v125;
            v863 = (char *)v7 + v125;
            v126 = sub_23FB2D718();
            v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v127(v863, __dstbj, v126);
LABEL_287:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_346:
        v565 = *(int *)(v9 + 20);
        v566 = (char *)v7 + v565;
        v567 = (char *)v8 + v565;
        v568 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v568 - 8) + 24))(v566, v567, v568);
        goto LABEL_347;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatExprEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v23 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v23))
              {
                v24 = sub_23F6916B8(&qword_256EA25F0);
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *v7 = *v8;
                    v7[1] = v8[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_227;
                  case 4u:
                    *v7 = *v8;
                    v366 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    __dstcd = (char *)v8 + v366;
                    v884 = (char *)v7 + v366;
                    v367 = sub_23FB2D718();
                    v755 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v367 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v755(v884, __dstcd, v367);
                    goto LABEL_227;
                  case 5u:
                    *v7 = *v8;
                    v368 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    __dstce = (char *)v8 + v368;
                    v885 = (char *)v7 + v368;
                    v369 = sub_23FB2D718();
                    v756 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v756(v885, __dstce, v369);
                    goto LABEL_227;
                  case 9u:
                    *(_DWORD *)v7 = *(_DWORD *)v8;
                    v7[1] = v8[1];
                    v7[2] = v8[2];
                    v370 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    __dstcf = (char *)v8 + v370;
                    v886 = (char *)v7 + v370;
                    v371 = sub_23FB2D718();
                    v757 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v371 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v757(v886, __dstcf, v371);
LABEL_227:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
                    break;
                }
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v23);
              }
              v372 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
              v373 = (char *)v7 + v372;
              v374 = (char *)v8 + v372;
              v375 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v373, v374, v375);
              break;
            case 1u:
              *(_BYTE *)v7 = *(_BYTE *)v8;
              v143 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
              v144 = *(int *)(v143 + 20);
              v864 = (_QWORD *)((char *)v7 + v144);
              v145 = (_QWORD *)((char *)v8 + v144);
              v146 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v145, 1, v146))
              {
                v147 = sub_23F6916B8(&qword_256EA84E8);
                memcpy(v864, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
              }
              else
              {
                v736 = (int *)v146;
                v215 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dsti = (void *)v143;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v145, 1, v215))
                {
                  v216 = sub_23F6916B8(&qword_256EA25F0);
                  v217 = (uint64_t)v864;
                  memcpy(v864, v145, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
                }
                else
                {
                  v709 = v145;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      v217 = (uint64_t)v864;
                      *v864 = *v145;
                      v864[1] = v145[1];
                      swift_bridgeObjectRetain();
                      v249 = v215;
                      goto LABEL_293;
                    case 4u:
                      *v864 = *v145;
                      v482 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v643 = (char *)v145 + v482;
                      v679 = (char *)v864 + v482;
                      v483 = sub_23FB2D718();
                      v601 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v483 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v601(v679, v643, v483);
                      v217 = (uint64_t)v864;
                      v249 = v215;
                      goto LABEL_293;
                    case 5u:
                      *v864 = *v145;
                      v484 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v644 = (char *)v145 + v484;
                      v680 = (char *)v864 + v484;
                      v485 = sub_23FB2D718();
                      v602 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v485 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v602(v680, v644, v485);
                      v217 = (uint64_t)v864;
                      v249 = v215;
                      goto LABEL_293;
                    case 9u:
                      *(_DWORD *)v864 = *(_DWORD *)v145;
                      v864[1] = v145[1];
                      v864[2] = v145[2];
                      v486 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v645 = (char *)v145 + v486;
                      v681 = (char *)v864 + v486;
                      v487 = sub_23FB2D718();
                      v603 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v603(v681, v645, v487);
                      v217 = (uint64_t)v864;
                      v249 = v215;
LABEL_293:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      v249 = v215;
                      v217 = (uint64_t)v864;
                      memcpy(v864, v709, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v217, 0, 1, v249);
                  v145 = v709;
                }
                v488 = v736[5];
                v887 = (void *)(v217 + v488);
                v489 = (char *)v145 + v488;
                v490 = sub_23FB2D718();
                (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v490 - 8) + 16))(v887, v489, v490);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v217, 0, 1, (uint64_t)v736);
                v143 = (uint64_t)__dsti;
              }
              goto LABEL_344;
            case 2u:
              *(_BYTE *)v7 = *(_BYTE *)v8;
              v148 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
              v149 = v148[5];
              v150 = (char *)v7 + v149;
              v151 = (_QWORD *)((char *)v8 + v149);
              v865 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v151, 1, (uint64_t)v865))
              {
                v152 = sub_23F6916B8(&qword_256EA84E8);
                memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
              }
              else
              {
                v737 = v150;
                v218 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstj = v148;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v151, 1, v218))
                {
                  v219 = sub_23F6916B8(&qword_256EA25F0);
                  v220 = (uint64_t)v737;
                  memcpy(v737, v151, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
                  v221 = v151;
                }
                else
                {
                  v250 = v151;
                  v710 = (_QWORD *)v218;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      v220 = (uint64_t)v737;
                      *v737 = *v151;
                      v737[1] = v151[1];
                      swift_bridgeObjectRetain();
                      v251 = (uint64_t)v710;
                      goto LABEL_300;
                    case 4u:
                      v220 = (uint64_t)v737;
                      *v737 = *v151;
                      v491 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v646 = (char *)v151 + v491;
                      v682 = (char *)v737 + v491;
                      v492 = sub_23FB2D718();
                      v604 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v492 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v604(v682, v646, v492);
                      v251 = (uint64_t)v710;
                      goto LABEL_300;
                    case 5u:
                      v220 = (uint64_t)v737;
                      *v737 = *v151;
                      v493 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v647 = (char *)v151 + v493;
                      v683 = (char *)v737 + v493;
                      v494 = sub_23FB2D718();
                      v605 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v494 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v605(v683, v647, v494);
                      v251 = (uint64_t)v710;
                      goto LABEL_300;
                    case 9u:
                      v220 = (uint64_t)v737;
                      *(_DWORD *)v737 = *(_DWORD *)v151;
                      v737[1] = v151[1];
                      v737[2] = v151[2];
                      v495 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v648 = (char *)v151 + v495;
                      v684 = (char *)v737 + v495;
                      v496 = sub_23FB2D718();
                      v606 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v496 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v606(v684, v648, v496);
                      v251 = (uint64_t)v710;
LABEL_300:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      v251 = v218;
                      v220 = (uint64_t)v737;
                      memcpy(v737, v250, *(_QWORD *)(*(v710 - 1) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v220, 0, 1, v251);
                  v221 = v250;
                }
                v497 = v865[5];
                v498 = v220 + v497;
                v765 = (char *)v221 + v497;
                v499 = sub_23FB2D718();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v499 - 8) + 16))(v498, v765, v499);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v220, 0, 1, (uint64_t)v865);
                v148 = __dstj;
              }
              v500 = v148[6];
              v501 = (_QWORD *)((char *)v7 + v500);
              v502 = (_QWORD *)((char *)v8 + v500);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v500, 1, (uint64_t)v865))
              {
                v503 = sub_23F6916B8(&qword_256EA84E8);
                memcpy(v501, v502, *(_QWORD *)(*(_QWORD *)(v503 - 8) + 64));
              }
              else
              {
                v766 = (_QWORD *)type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dsto = v148;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v502, 1, (uint64_t)v766))
                {
                  v504 = sub_23F6916B8(&qword_256EA25F0);
                  memcpy(v501, v502, *(_QWORD *)(*(_QWORD *)(v504 - 8) + 64));
                  v505 = v502;
                }
                else
                {
                  v506 = v502;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *v501 = *v502;
                      v501[1] = v502[1];
                      swift_bridgeObjectRetain();
                      v507 = (uint64_t)v766;
                      goto LABEL_333;
                    case 4u:
                      *v501 = *v502;
                      v538 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v688 = (char *)v502 + v538;
                      __srcg = (char *)v501 + v538;
                      v539 = sub_23FB2D718();
                      v652 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v539 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v652(__srcg, v688, v539);
                      v507 = (uint64_t)v766;
                      goto LABEL_333;
                    case 5u:
                      *v501 = *v502;
                      v540 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v689 = (char *)v502 + v540;
                      __srch = (char *)v501 + v540;
                      v541 = sub_23FB2D718();
                      v653 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v541 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v653(__srch, v689, v541);
                      v507 = (uint64_t)v766;
                      goto LABEL_333;
                    case 9u:
                      *(_DWORD *)v501 = *(_DWORD *)v502;
                      v501[1] = v502[1];
                      v501[2] = v502[2];
                      v542 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v690 = (char *)v502 + v542;
                      __srci = (char *)v501 + v542;
                      v543 = sub_23FB2D718();
                      v654 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v543 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v654(__srci, v690, v543);
                      v507 = (uint64_t)v766;
LABEL_333:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      v507 = (uint64_t)v766;
                      memcpy(v501, v506, *(_QWORD *)(*(v766 - 1) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v501, 0, 1, v507);
                  v505 = v506;
                }
                v544 = v865[5];
                v545 = (char *)v501 + v544;
                v771 = (char *)v505 + v544;
                v546 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v546 - 8) + 16))(v545, v771, v546);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v501, 0, 1, (uint64_t)v865);
                v148 = __dsto;
              }
              v547 = v148[7];
              v548 = (char *)v7 + v547;
              v549 = (char *)v8 + v547;
              v550 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v548, v549, v550);
              break;
            case 3u:
              *v7 = *v8;
              v7[1] = v8[1];
              v866 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
              v153 = v866[5];
              v154 = (char *)v7 + v153;
              v155 = (char *)v8 + v153;
              v156 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v155, 1, v156))
              {
                v157 = sub_23F6916B8(&qword_256EA84E8);
                memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
              }
              else
              {
                v738 = v154;
                v222 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstk = (void *)v156;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v155, 1, v222))
                {
                  v223 = sub_23F6916B8(&qword_256EA25F0);
                  v224 = (uint64_t)v738;
                  memcpy(v738, v155, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
                }
                else
                {
                  v711 = v155;
                  v252 = v222;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      v253 = (uint64_t)v738;
                      *v738 = *v711;
                      v738[1] = v711[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_313;
                    case 4u:
                      v253 = (uint64_t)v738;
                      *v738 = *v711;
                      v508 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v649 = (char *)v711 + v508;
                      v685 = (char *)v738 + v508;
                      v509 = sub_23FB2D718();
                      v607 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v509 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v607(v685, v649, v509);
                      goto LABEL_313;
                    case 5u:
                      v253 = (uint64_t)v738;
                      *v738 = *v711;
                      v510 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v650 = (char *)v711 + v510;
                      v686 = (char *)v738 + v510;
                      v511 = sub_23FB2D718();
                      v608 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v511 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v608(v686, v650, v511);
                      goto LABEL_313;
                    case 9u:
                      v253 = (uint64_t)v738;
                      *(_DWORD *)v738 = *(_DWORD *)v711;
                      v738[1] = v711[1];
                      v738[2] = v711[2];
                      v512 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v651 = (char *)v711 + v512;
                      v687 = (char *)v738 + v512;
                      v513 = sub_23FB2D718();
                      v609 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v513 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v609(v687, v651, v513);
LABEL_313:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      v253 = (uint64_t)v738;
                      memcpy(v738, v711, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
                      break;
                  }
                  v224 = v253;
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v253, 0, 1, v252);
                  v156 = (uint64_t)__dstk;
                  v155 = (char *)v711;
                }
                v514 = *(int *)(v156 + 20);
                v515 = v224 + v514;
                v516 = &v155[v514];
                v517 = sub_23FB2D718();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v517 - 8) + 16))(v515, v516, v517);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v224, 0, 1, (uint64_t)__dstk);
              }
              goto LABEL_132;
            case 4u:
              v158 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              v867 = (int *)v158;
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v158))
              {
                v159 = sub_23F6916B8(&qword_256EA84E8);
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
              }
              else
              {
                v225 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v225))
                {
                  v226 = sub_23F6916B8(&qword_256EA25F0);
                  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *v7 = *v8;
                      v7[1] = v8[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_320;
                    case 4u:
                      *v7 = *v8;
                      v518 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v767 = (char *)v8 + v518;
                      __dstcj = (char *)v7 + v518;
                      v519 = sub_23FB2D718();
                      v725 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v519 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v725(__dstcj, v767, v519);
                      goto LABEL_320;
                    case 5u:
                      *v7 = *v8;
                      v520 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v768 = (char *)v8 + v520;
                      __dstck = (char *)v7 + v520;
                      v521 = sub_23FB2D718();
                      v726 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v521 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v726(__dstck, v768, v521);
                      goto LABEL_320;
                    case 9u:
                      *(_DWORD *)v7 = *(_DWORD *)v8;
                      v7[1] = v8[1];
                      v7[2] = v8[2];
                      v522 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v769 = (char *)v8 + v522;
                      __dstcl = (char *)v7 + v522;
                      v523 = sub_23FB2D718();
                      v727 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v523 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v727(__dstcl, v769, v523);
LABEL_320:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v225);
                  v158 = (uint64_t)v867;
                }
                v524 = *(int *)(v158 + 20);
                v525 = (char *)v7 + v524;
                v526 = (char *)v8 + v524;
                v527 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v527 - 8) + 16))(v525, v526, v527);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v158);
              }
              v143 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
              v528 = *(int *)(v143 + 20);
              v529 = (char *)v7 + v528;
              v530 = (_QWORD *)((char *)v8 + v528);
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v528, 1, (uint64_t)v867))
              {
                v531 = sub_23F6916B8(&qword_256EA84E8);
                memcpy(v529, v530, *(_QWORD *)(*(_QWORD *)(v531 - 8) + 64));
              }
              else
              {
                __dstp = v529;
                v532 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v770 = (void *)v143;
                if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v530, 1, v532))
                {
                  v533 = sub_23F6916B8(&qword_256EA25F0);
                  v534 = (uint64_t)__dstp;
                  memcpy(__dstp, v530, *(_QWORD *)(*(_QWORD *)(v533 - 8) + 64));
                  v535 = v530;
                  v536 = v867;
                }
                else
                {
                  v728 = v530;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      v537 = (uint64_t)__dstp;
                      *__dstp = *v728;
                      __dstp[1] = v728[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_341;
                    case 4u:
                      *__dstp = *v530;
                      v551 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v655 = (char *)v530 + v551;
                      v691 = (char *)__dstp + v551;
                      v552 = sub_23FB2D718();
                      v610 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v552 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v610(v691, v655, v552);
                      v537 = (uint64_t)__dstp;
                      goto LABEL_341;
                    case 5u:
                      *__dstp = *v530;
                      v553 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v656 = (char *)v530 + v553;
                      v692 = (char *)__dstp + v553;
                      v554 = sub_23FB2D718();
                      v611 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v554 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v611(v692, v656, v554);
                      v537 = (uint64_t)__dstp;
                      goto LABEL_341;
                    case 9u:
                      *(_DWORD *)__dstp = *(_DWORD *)v530;
                      __dstp[1] = v530[1];
                      __dstp[2] = v530[2];
                      v555 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v657 = (char *)v530 + v555;
                      v693 = (char *)__dstp + v555;
                      v556 = sub_23FB2D718();
                      v612 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v556 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v612(v693, v657, v556);
                      v537 = (uint64_t)__dstp;
LABEL_341:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      v537 = (uint64_t)__dstp;
                      memcpy(__dstp, v728, *(_QWORD *)(*(_QWORD *)(v532 - 8) + 64));
                      break;
                  }
                  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v537, 0, 1, v532);
                  v534 = v537;
                  v536 = v867;
                  v535 = v728;
                }
                v557 = v536[5];
                v558 = v534 + v557;
                v559 = (char *)v535 + v557;
                v560 = sub_23FB2D718();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v560 - 8) + 16))(v558, v559, v560);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v534, 0, 1, (uint64_t)v867);
                v143 = (uint64_t)v770;
              }
LABEL_344:
              v561 = *(int *)(v143 + 24);
              v562 = (char *)v7 + v561;
              v563 = (char *)v8 + v561;
              v564 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v564 - 8) + 16))(v562, v563, v564);
              break;
            case 5u:
              *v7 = *v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v160 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
              __dstbk = (char *)v8 + v160;
              v868 = (char *)v7 + v160;
              v161 = sub_23FB2D718();
              v733 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v733(v868, __dstbk, v161);
              break;
            case 6u:
              *v7 = *v8;
              v162 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
              __dstbl = (char *)v8 + v162;
              v869 = (char *)v7 + v162;
              v163 = sub_23FB2D718();
              v164 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16);
              swift_bridgeObjectRetain();
              v164(v869, __dstbl, v163);
              break;
            case 7u:
              *v7 = *v8;
              v7[1] = v8[1];
              v165 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
              v166 = *(int *)(v165 + 20);
              __dstf = (char *)v7 + v166;
              v866 = (int *)v165;
              v167 = (char *)v8 + v166;
              v168 = type metadata accessor for TranscriptProtoASTPickType(0);
              swift_bridgeObjectRetain();
              if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v167, 1, v168))
              {
                v169 = sub_23F6916B8(&qword_256EA8510);
                memcpy(__dstf, v167, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
              }
              else
              {
                v227 = *(_QWORD *)v167;
                __dstf[8] = v167[8];
                *(_QWORD *)__dstf = v227;
                v228 = *(int *)(v168 + 20);
                v739 = &__dstf[v228];
                v229 = &v167[v228];
                v230 = sub_23FB2D718();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v739, v229, v230);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dstf, 0, 1, v168);
              }
LABEL_132:
              v231 = v866[6];
              v232 = (char *)v7 + v231;
              v233 = (char *)v8 + v231;
              v234 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v232, v233, v234);
              break;
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
              __dstbm = (char *)v8 + v170;
              v870 = (char *)v7 + v170;
              v171 = sub_23FB2D718();
              v172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
              swift_bridgeObjectRetain();
              v172(v870, __dstbm, v171);
              break;
            case 9u:
              *v7 = *v8;
              v7[1] = v8[1];
              *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
              *((_BYTE *)v7 + 17) = *((_BYTE *)v8 + 17);
              v173 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
              __dstbn = (char *)v8 + v173;
              v871 = (char *)v7 + v173;
              v174 = sub_23FB2D718();
              v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
              swift_bridgeObjectRetain();
              v175(v871, __dstbn, v174);
              break;
            case 0xAu:
              *v7 = *v8;
              v7[1] = v8[1];
              v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
              __dstbo = (char *)v8 + v176;
              v872 = (char *)v7 + v176;
              v177 = sub_23FB2D718();
              v178 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
              swift_bridgeObjectRetain();
              v178(v872, __dstbo, v177);
              break;
            case 0xBu:
              *v7 = *v8;
              v7[1] = v8[1];
              v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
              __dstbp = (char *)v8 + v179;
              v873 = (char *)v7 + v179;
              v180 = sub_23FB2D718();
              v181 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
              swift_bridgeObjectRetain();
              v181(v873, __dstbp, v180);
              break;
            case 0xCu:
              *v7 = *v8;
              v182 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
              __dstbq = (char *)v8 + v182;
              v874 = (char *)v7 + v182;
              v183 = sub_23FB2D718();
              v184 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16);
              swift_bridgeObjectRetain();
              v184(v874, __dstbq, v183);
              break;
            case 0xDu:
              *v7 = *v8;
              v7[1] = v8[1];
              v185 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
              __dstbr = (char *)v8 + v185;
              v875 = (char *)v7 + v185;
              v186 = sub_23FB2D718();
              v187 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16);
              swift_bridgeObjectRetain();
              v187(v875, __dstbr, v186);
              break;
            case 0xEu:
              *v7 = *v8;
              v7[1] = v8[1];
              v188 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
              __dstbs = (char *)v8 + v188;
              v876 = (char *)v7 + v188;
              v189 = sub_23FB2D718();
              v190 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16);
              swift_bridgeObjectRetain();
              v190(v876, __dstbs, v189);
              break;
            case 0xFu:
            case 0x11u:
              v191 = sub_23FB2D718();
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v7, v8, v191);
              break;
            case 0x10u:
              *v7 = *v8;
              v192 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
              __dstbt = (char *)v8 + v192;
              v877 = (char *)v7 + v192;
              v193 = sub_23FB2D718();
              v194 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16);
              swift_bridgeObjectRetain();
              v194(v877, __dstbt, v193);
              break;
            default:
              v22 = *(_QWORD *)(v15 - 8);
              goto LABEL_19;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_346;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
    v22 = *(_QWORD *)(sub_23F6916B8(&qword_256EB22D8) - 8);
LABEL_19:
    memcpy(v7, v8, *(_QWORD *)(v22 + 64));
    goto LABEL_346;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EB22C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_347;
  }
  v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EB22D8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v20 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v20))
        {
          v21 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              goto LABEL_145;
            case 4u:
              *v7 = *v8;
              v239 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              __dstbu = (char *)v8 + v239;
              v878 = (char *)v7 + v239;
              v240 = sub_23FB2D718();
              v741 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16);
              swift_bridgeObjectRetain();
              v741(v878, __dstbu, v240);
              goto LABEL_145;
            case 5u:
              *v7 = *v8;
              v241 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              __dstbv = (char *)v8 + v241;
              v879 = (char *)v7 + v241;
              v242 = sub_23FB2D718();
              v742 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16);
              swift_bridgeObjectRetain();
              v742(v879, __dstbv, v242);
              goto LABEL_145;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v243 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              __dstbw = (char *)v8 + v243;
              v880 = (char *)v7 + v243;
              v244 = sub_23FB2D718();
              v743 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
              swift_bridgeObjectRetain();
              v743(v880, __dstbw, v244);
LABEL_145:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v20);
        }
        v245 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v246 = (char *)v7 + v245;
        v247 = (char *)v8 + v245;
        v248 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 16))(v246, v247, v248);
        goto LABEL_220;
      case 1u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v837 = (int *)type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v25 = v837[5];
        v26 = (_QWORD *)((char *)v7 + v25);
        v27 = (_QWORD *)((char *)v8 + v25);
        v28 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v28))
        {
          v29 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          __dstc = (int *)v28;
          v128 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v27, 1, v128))
          {
            v129 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
            v130 = v27;
          }
          else
          {
            __src = (void *)v128;
            v704 = v27;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v26 = *v27;
                v26[1] = v27[1];
                swift_bridgeObjectRetain();
                goto LABEL_167;
              case 4u:
                *v26 = *v27;
                v264 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v580 = (char *)v27 + v264;
                v613 = (char *)v26 + v264;
                v265 = sub_23FB2D718();
                v266 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 16);
                swift_bridgeObjectRetain();
                v266(v613, v580, v265);
                v128 = (uint64_t)__src;
                goto LABEL_167;
              case 5u:
                *v26 = *v27;
                v267 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v581 = (char *)v27 + v267;
                v614 = (char *)v26 + v267;
                v268 = sub_23FB2D718();
                v269 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 16);
                swift_bridgeObjectRetain();
                v269(v614, v581, v268);
                v128 = (uint64_t)__src;
                goto LABEL_167;
              case 9u:
                *(_DWORD *)v26 = *(_DWORD *)v27;
                v26[1] = v27[1];
                v26[2] = v27[2];
                v270 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v582 = (char *)v27 + v270;
                v615 = (char *)v26 + v270;
                v271 = sub_23FB2D718();
                v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v271 - 8) + 16);
                swift_bridgeObjectRetain();
                v272(v615, v582, v271);
                v128 = (uint64_t)__src;
LABEL_167:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v26, 0, 1, v128);
            v130 = v704;
          }
          v747 = v26;
          v273 = __dstc[5];
          v274 = (char *)v26 + v273;
          v275 = (char *)v130 + v273;
          v276 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v276 - 8) + 16))(v274, v275, v276);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v747, 0, 1, (uint64_t)__dstc);
        }
        goto LABEL_190;
      case 2u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v838 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v30 = v838[5];
        v31 = (char *)v7 + v30;
        v32 = (_QWORD *)((char *)v8 + v30);
        v33 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v33))
        {
          v34 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          v731 = v31;
          v131 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          __dstd = (int *)v33;
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v131))
          {
            v132 = sub_23F6916B8(&qword_256EA25F0);
            v133 = (uint64_t)v731;
            memcpy(v731, v32, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
          }
          else
          {
            v705 = (void *)v131;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v214 = (uint64_t)v731;
                *v731 = *v32;
                v731[1] = v32[1];
                swift_bridgeObjectRetain();
                goto LABEL_174;
              case 4u:
                v214 = (uint64_t)v731;
                *v731 = *v32;
                v277 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v583 = (char *)v32 + v277;
                v616 = (char *)v731 + v277;
                v278 = sub_23FB2D718();
                v574 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 16);
                swift_bridgeObjectRetain();
                v574(v616, v583, v278);
                v131 = (uint64_t)v705;
                goto LABEL_174;
              case 5u:
                v214 = (uint64_t)v731;
                *v731 = *v32;
                v279 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v584 = (char *)v32 + v279;
                v617 = (char *)v731 + v279;
                v280 = sub_23FB2D718();
                v575 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 16);
                swift_bridgeObjectRetain();
                v575(v617, v584, v280);
                v131 = (uint64_t)v705;
                goto LABEL_174;
              case 9u:
                v214 = (uint64_t)v731;
                *(_DWORD *)v731 = *(_DWORD *)v32;
                v731[1] = v32[1];
                v731[2] = v32[2];
                v281 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v585 = (char *)v32 + v281;
                v618 = (char *)v731 + v281;
                v282 = sub_23FB2D718();
                v576 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 16);
                swift_bridgeObjectRetain();
                v576(v618, v585, v282);
                v131 = (uint64_t)v705;
LABEL_174:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                v214 = (uint64_t)v731;
                memcpy(v731, v32, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v214, 0, 1, v131);
            v133 = v214;
          }
          v33 = (uint64_t)__dstd;
          v283 = __dstd[5];
          v748 = (void *)(v133 + v283);
          v284 = (char *)v32 + v283;
          v285 = sub_23FB2D718();
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v285 - 8) + 16))(v748, v284, v285);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v133, 0, 1, (uint64_t)__dstd);
        }
        v286 = v838[6];
        v287 = (_QWORD *)((char *)v7 + v286);
        v288 = (_QWORD *)((char *)v8 + v286);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v286, 1, v33))
        {
          v289 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
        }
        else
        {
          __dstl = (int *)v33;
          v290 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v288, 1, v290))
          {
            v291 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v287 = *v288;
                v287[1] = v288[1];
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 4u:
                *v287 = *v288;
                v328 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v661 = (char *)v288 + v328;
                __srca = (char *)v287 + v328;
                v715 = v287;
                v329 = sub_23FB2D718();
                v622 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v329 - 8) + 16);
                swift_bridgeObjectRetain();
                v330 = v329;
                v287 = v715;
                v622(__srca, v661, v330);
                goto LABEL_208;
              case 5u:
                *v287 = *v288;
                v331 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v662 = (char *)v288 + v331;
                __srcb = (char *)v287 + v331;
                v716 = v287;
                v332 = sub_23FB2D718();
                v623 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v332 - 8) + 16);
                swift_bridgeObjectRetain();
                v333 = v332;
                v287 = v716;
                v623(__srcb, v662, v333);
                goto LABEL_208;
              case 9u:
                *(_DWORD *)v287 = *(_DWORD *)v288;
                v287[1] = v288[1];
                v287[2] = v288[2];
                v334 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v663 = (char *)v288 + v334;
                __srcc = (char *)v287 + v334;
                v717 = v287;
                v335 = sub_23FB2D718();
                v624 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v335 - 8) + 16);
                swift_bridgeObjectRetain();
                v336 = v335;
                v287 = v717;
                v624(__srcc, v663, v336);
LABEL_208:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v287, v288, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v287, 0, 1, v290);
          }
          v337 = __dstl[5];
          v754 = (char *)v287 + v337;
          v338 = (char *)v288 + v337;
          v339 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v339 - 8) + 16))(v754, v338, v339);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v287, 0, 1, (uint64_t)__dstl);
        }
        v340 = v838[7];
        v341 = (char *)v7 + v340;
        v342 = (char *)v8 + v340;
        v343 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(v341, v342, v343);
        goto LABEL_220;
      case 3u:
        *v7 = *v8;
        v7[1] = v8[1];
        v837 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v35 = v837[5];
        v36 = (char *)v7 + v35;
        v37 = (_QWORD *)((char *)v8 + v35);
        v38 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v38))
        {
          v39 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          __dste = v36;
          v134 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v37, 1, v134))
          {
            v135 = sub_23F6916B8(&qword_256EA25F0);
            v136 = (uint64_t)__dste;
            memcpy(__dste, v37, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
          }
          else
          {
            v706 = (_QWORD *)v134;
            v136 = (uint64_t)__dste;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *__dste = *v37;
                __dste[1] = v37[1];
                swift_bridgeObjectRetain();
                goto LABEL_187;
              case 4u:
                *__dste = *v37;
                v292 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v619 = (char *)v37 + v292;
                v658 = (char *)__dste + v292;
                v293 = v38;
                v294 = sub_23FB2D718();
                v586 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 16);
                swift_bridgeObjectRetain();
                v295 = v294;
                v38 = v293;
                v136 = (uint64_t)__dste;
                v586(v658, v619, v295);
                goto LABEL_187;
              case 5u:
                *__dste = *v37;
                v296 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v620 = (char *)v37 + v296;
                v659 = (char *)__dste + v296;
                v297 = v38;
                v298 = sub_23FB2D718();
                v587 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 16);
                swift_bridgeObjectRetain();
                v299 = v298;
                v38 = v297;
                v136 = (uint64_t)__dste;
                v587(v659, v620, v299);
                goto LABEL_187;
              case 9u:
                *(_DWORD *)__dste = *(_DWORD *)v37;
                __dste[1] = v37[1];
                __dste[2] = v37[2];
                v300 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v621 = (char *)v37 + v300;
                v660 = (char *)__dste + v300;
                v301 = v38;
                v302 = sub_23FB2D718();
                v588 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 16);
                swift_bridgeObjectRetain();
                v303 = v302;
                v38 = v301;
                v136 = (uint64_t)__dste;
                v588(v660, v621, v303);
LABEL_187:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                v136 = (uint64_t)__dste;
                memcpy(__dste, v37, *(_QWORD *)(*(v706 - 1) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v136, 0, 1, (uint64_t)v706);
          }
          v749 = (void *)v38;
          v304 = *(int *)(v38 + 20);
          v305 = v136 + v304;
          v306 = (char *)v37 + v304;
          v307 = sub_23FB2D718();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v307 - 8) + 16))(v305, v306, v307);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v136, 0, 1, (uint64_t)v749);
        }
        goto LABEL_190;
      case 4u:
        v839 = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, (uint64_t)v839))
        {
          v40 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v137 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v137))
          {
            v138 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v7 = *v8;
                v7[1] = v8[1];
                swift_bridgeObjectRetain();
                goto LABEL_195;
              case 4u:
                *v7 = *v8;
                v312 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v750 = (char *)v8 + v312;
                __dstca = (char *)v7 + v312;
                v313 = sub_23FB2D718();
                v712 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v313 - 8) + 16);
                swift_bridgeObjectRetain();
                v712(__dstca, v750, v313);
                goto LABEL_195;
              case 5u:
                *v7 = *v8;
                v314 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v751 = (char *)v8 + v314;
                __dstcb = (char *)v7 + v314;
                v315 = sub_23FB2D718();
                v713 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 16);
                swift_bridgeObjectRetain();
                v713(__dstcb, v751, v315);
                goto LABEL_195;
              case 9u:
                *(_DWORD *)v7 = *(_DWORD *)v8;
                v7[1] = v8[1];
                v7[2] = v8[2];
                v316 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v752 = (char *)v8 + v316;
                __dstcc = (char *)v7 + v316;
                v317 = sub_23FB2D718();
                v714 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v317 - 8) + 16);
                swift_bridgeObjectRetain();
                v714(__dstcc, v752, v317);
LABEL_195:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v137);
          }
          v318 = v839[5];
          v319 = (char *)v7 + v318;
          v320 = (char *)v8 + v318;
          v321 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v319, v320, v321);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, (uint64_t)v839);
        }
        __dstm = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v322 = __dstm[5];
        v323 = (_QWORD *)((char *)v7 + v322);
        v324 = (_QWORD *)((char *)v8 + v322);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v322, 1, (uint64_t)v839))
        {
          v325 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
        }
        else
        {
          v326 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v324, 1, v326))
          {
            v327 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v327 - 8) + 64));
          }
          else
          {
            v753 = (void *)v326;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v323 = *v324;
                v323[1] = v324[1];
                swift_bridgeObjectRetain();
                goto LABEL_216;
              case 4u:
                *v323 = *v324;
                v344 = v323;
                v345 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v625 = (char *)v324 + v345;
                v664 = (char *)v323 + v345;
                v346 = sub_23FB2D718();
                v589 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 16);
                swift_bridgeObjectRetain();
                v589(v664, v625, v346);
                v323 = v344;
                v326 = (uint64_t)v753;
                goto LABEL_216;
              case 5u:
                *v323 = *v324;
                v347 = v323;
                v348 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v626 = (char *)v324 + v348;
                v665 = (char *)v323 + v348;
                v349 = sub_23FB2D718();
                v590 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v349 - 8) + 16);
                swift_bridgeObjectRetain();
                v590(v665, v626, v349);
                v323 = v347;
                v326 = (uint64_t)v753;
                goto LABEL_216;
              case 9u:
                *(_DWORD *)v323 = *(_DWORD *)v324;
                v323[1] = v324[1];
                v323[2] = v324[2];
                v350 = v323;
                v351 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v627 = (char *)v324 + v351;
                v666 = (char *)v323 + v351;
                v352 = sub_23FB2D718();
                v591 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 16);
                swift_bridgeObjectRetain();
                v591(v666, v627, v352);
                v323 = v350;
                v326 = (uint64_t)v753;
LABEL_216:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v323, 0, 1, v326);
          }
          v353 = v839[5];
          v354 = (uint64_t)v323;
          v355 = (char *)v323 + v353;
          v356 = (char *)v324 + v353;
          v357 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v355, v356, v357);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v354, 0, 1, (uint64_t)v839);
        }
        v358 = __dstm[6];
        v359 = (char *)v7 + v358;
        v360 = (char *)v8 + v358;
        v361 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 16))(v359, v360, v361);
        goto LABEL_220;
      case 5u:
        *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        __dstq = (char *)v8 + v41;
        v840 = (char *)v7 + v41;
        v42 = sub_23FB2D718();
        v729 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v729(v840, __dstq, v42);
        goto LABEL_220;
      case 6u:
        *v7 = *v8;
        v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        __dstr = (char *)v8 + v43;
        v841 = (char *)v7 + v43;
        v44 = sub_23FB2D718();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v841, __dstr, v44);
        goto LABEL_220;
      case 7u:
        *v7 = *v8;
        v7[1] = v8[1];
        v46 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v47 = *(int *)(v46 + 20);
        __dst = (char *)v7 + v47;
        v837 = (int *)v46;
        v48 = (char *)v8 + v47;
        v49 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v48, 1, v49))
        {
          v50 = sub_23F6916B8(&qword_256EA8510);
          memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v139 = *(_QWORD *)v48;
          __dst[8] = v48[8];
          *(_QWORD *)__dst = v139;
          v140 = *(int *)(v49 + 20);
          v732 = &__dst[v140];
          v141 = &v48[v140];
          v142 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v732, v141, v142);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)__dst, 0, 1, v49);
        }
LABEL_190:
        v308 = v837[6];
        v309 = (char *)v7 + v308;
        v310 = (char *)v8 + v308;
        v311 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v311 - 8) + 16))(v309, v310, v311);
        goto LABEL_220;
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        __dsts = (char *)v8 + v51;
        v842 = (char *)v7 + v51;
        v52 = sub_23FB2D718();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v842, __dsts, v52);
        goto LABEL_220;
      case 9u:
        *v7 = *v8;
        v7[1] = v8[1];
        *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
        *((_BYTE *)v7 + 17) = *((_BYTE *)v8 + 17);
        v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        __dstt = (char *)v8 + v54;
        v843 = (char *)v7 + v54;
        v55 = sub_23FB2D718();
        v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v843, __dstt, v55);
        goto LABEL_220;
      case 0xAu:
        *v7 = *v8;
        v7[1] = v8[1];
        v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        __dstu = (char *)v8 + v57;
        v844 = (char *)v7 + v57;
        v58 = sub_23FB2D718();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v844, __dstu, v58);
        goto LABEL_220;
      case 0xBu:
        *v7 = *v8;
        v7[1] = v8[1];
        v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        __dstv = (char *)v8 + v60;
        v845 = (char *)v7 + v60;
        v61 = sub_23FB2D718();
        v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v845, __dstv, v61);
        goto LABEL_220;
      case 0xCu:
        *v7 = *v8;
        v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        __dstw = (char *)v8 + v63;
        v846 = (char *)v7 + v63;
        v64 = sub_23FB2D718();
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(v846, __dstw, v64);
        goto LABEL_220;
      case 0xDu:
        *v7 = *v8;
        v7[1] = v8[1];
        v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        __dstx = (char *)v8 + v66;
        v847 = (char *)v7 + v66;
        v67 = sub_23FB2D718();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v847, __dstx, v67);
        goto LABEL_220;
      case 0xEu:
        *v7 = *v8;
        v7[1] = v8[1];
        v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        __dsty = (char *)v8 + v69;
        v848 = (char *)v7 + v69;
        v70 = sub_23FB2D718();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v848, __dsty, v70);
        goto LABEL_220;
      case 0xFu:
      case 0x11u:
        v72 = sub_23FB2D718();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v7, v8, v72);
        goto LABEL_220;
      case 0x10u:
        *v7 = *v8;
        v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        __dstz = (char *)v8 + v73;
        v849 = (char *)v7 + v73;
        v74 = sub_23FB2D718();
        v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(v849, __dstz, v74);
LABEL_220:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
  }
  v362 = *(int *)(v9 + 20);
  v363 = (char *)v7 + v362;
  v364 = (char *)v8 + v362;
  v365 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 16))(v363, v364, v365);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_347:
  v569 = *(int *)(a3 + 24);
  v570 = (char *)a1 + v569;
  v571 = (char *)a2 + v569;
  v572 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v572 - 8) + 24))(v570, v571, v572);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatAssignExpr(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _DWORD *v129;
  _DWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  _DWORD *v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  size_t v150;
  const void *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  _DWORD *v172;
  _DWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  size_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _DWORD *v241;
  _DWORD *v242;
  char *v243;
  _DWORD *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE *v249;
  uint64_t v250;
  uint64_t v251;
  int *v252;
  uint64_t v253;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v11 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EB22D8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_119:
      v216 = *(int *)(v9 + 20);
      v217 = (char *)v7 + v216;
      v218 = (char *)v8 + v216;
      v219 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v217, v218, v219);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_120;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v13))
        {
          v14 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_64:
          v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v116 = (char *)v7 + v115;
          v117 = (char *)v8 + v115;
          v118 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
          goto LABEL_117;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *v7 = *v8;
            *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
            v107 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v108 = (char *)v7 + v107;
            v109 = (char *)v8 + v107;
            v110 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
            break;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v111 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v112 = (char *)v7 + v111;
            v113 = (char *)v8 + v111;
            v114 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v112, v113, v114);
            break;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v76 = (char *)v7 + v75;
            v77 = (char *)v8 + v75;
            v78 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            goto LABEL_63;
        }
        swift_storeEnumTagMultiPayload();
LABEL_63:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v13);
        goto LABEL_64;
      case 1u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v251 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v15 = *(int *)(v251 + 20);
        v16 = (_DWORD *)((char *)v7 + v15);
        v17 = (_DWORD *)((char *)v8 + v15);
        v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))goto LABEL_14;
        v248 = v18;
        v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v79))goto LABEL_39;
        v91 = swift_getEnumCaseMultiPayload();
        v241 = v17;
        switch(v91)
        {
          case 9:
            goto LABEL_82;
          case 5:
            goto LABEL_83;
          case 4:
            goto LABEL_54;
        }
        goto LABEL_85;
      case 2u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v252 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v19 = v252[5];
        v20 = (_DWORD *)((char *)v7 + v19);
        v21 = (_DWORD *)((char *)v8 + v19);
        v247 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v247))
        {
          v22 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          v23 = v247;
          goto LABEL_74;
        }
        v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v21, 1, v80))
        {
          v81 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          v82 = v21;
          v83 = (uint64_t)v20;
          goto LABEL_73;
        }
        v92 = swift_getEnumCaseMultiPayload();
        v242 = v21;
        switch(v92)
        {
          case 9:
            *v20 = *v21;
            *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
            v119 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v234 = (char *)v20 + v119;
            v120 = (char *)v21 + v119;
            v121 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v234, v120, v121);
            goto LABEL_70;
          case 5:
            *(_QWORD *)v20 = *(_QWORD *)v21;
            v122 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v235 = (char *)v20 + v122;
            v123 = (char *)v21 + v122;
            v124 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v235, v123, v124);
            goto LABEL_70;
          case 4:
            *(_QWORD *)v20 = *(_QWORD *)v21;
            v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v232 = (char *)v20 + v93;
            v94 = (char *)v21 + v93;
            v95 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v232, v94, v95);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
        }
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
LABEL_72:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v80);
        v83 = (uint64_t)v20;
        v82 = v242;
LABEL_73:
        v23 = v247;
        v125 = *(int *)(v247 + 20);
        v126 = v83 + v125;
        v243 = (char *)v82 + v125;
        v127 = sub_23FB2D718();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v126, v243, v127);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v83, 0, 1, v247);
LABEL_74:
        v128 = v252[6];
        v129 = (_DWORD *)((char *)v7 + v128);
        v130 = (_DWORD *)((char *)v8 + v128);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v128, 1, v23))
        {
          v131 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
LABEL_109:
          v197 = v252[7];
          v198 = (char *)v7 + v197;
          v199 = (char *)v8 + v197;
          v200 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v198, v199, v200);
          goto LABEL_117;
        }
        v132 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v130, 1, v132))
        {
          v133 = sub_23F6916B8(&qword_256EA25F0);
          v134 = (char *)v129;
          memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
          v135 = v130;
          v136 = v247;
LABEL_108:
          v193 = *(int *)(v136 + 20);
          v194 = &v134[v193];
          v195 = (char *)v135 + v193;
          v196 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v194, v195, v196);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v134, 0, 1, v247);
          goto LABEL_109;
        }
        v137 = swift_getEnumCaseMultiPayload();
        v244 = v130;
        switch(v137)
        {
          case 9:
            *v129 = *v130;
            *(_OWORD *)(v129 + 2) = *(_OWORD *)(v130 + 2);
            v181 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v239 = v132;
            v182 = (char *)v129 + v181;
            v183 = (char *)v130 + v181;
            v184 = sub_23FB2D718();
            v185 = v182;
            v134 = (char *)v129;
            v143 = v239;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v185, v183, v184);
            break;
          case 5:
            *(_QWORD *)v129 = *(_QWORD *)v130;
            v186 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v240 = v132;
            v187 = (char *)v129 + v186;
            v188 = (char *)v130 + v186;
            v189 = sub_23FB2D718();
            v190 = v187;
            v134 = (char *)v129;
            v143 = v240;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v190, v188, v189);
            break;
          case 4:
            *(_QWORD *)v129 = *(_QWORD *)v130;
            v138 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v236 = v132;
            v139 = (char *)v129 + v138;
            v140 = (char *)v130 + v138;
            v141 = sub_23FB2D718();
            v142 = v139;
            v134 = (char *)v129;
            v143 = v236;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v142, v140, v141);
            break;
          default:
            v191 = *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64);
            v192 = v132;
            v134 = (char *)v129;
            v143 = v192;
            memcpy(v134, v130, v191);
            goto LABEL_107;
        }
        swift_storeEnumTagMultiPayload();
LABEL_107:
        v136 = v247;
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v134, 0, 1, v143);
        v135 = v244;
        goto LABEL_108;
      case 3u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v251 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v24 = *(int *)(v251 + 20);
        v16 = (_DWORD *)((char *)v7 + v24);
        v17 = (_DWORD *)((char *)v8 + v24);
        v25 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v25))
        {
LABEL_14:
          v26 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          goto LABEL_88;
        }
        v248 = v25;
        v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v79))
        {
LABEL_39:
          v84 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          v85 = v17;
          goto LABEL_87;
        }
        v96 = swift_getEnumCaseMultiPayload();
        v241 = v17;
        switch(v96)
        {
          case 9:
LABEL_82:
            v237 = v79;
            v97 = (uint64_t)v16;
            *v16 = *v17;
            *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
            v144 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v145 = (char *)v16 + v144;
            v227 = (char *)v17 + v144;
            v100 = v237;
            v146 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v145, v227, v146);
            break;
          case 5:
LABEL_83:
            v238 = v79;
            v97 = (uint64_t)v16;
            *(_QWORD *)v16 = *(_QWORD *)v17;
            v147 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v148 = (char *)v16 + v147;
            v228 = (char *)v17 + v147;
            v100 = v238;
            v149 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v148, v228, v149);
            break;
          case 4:
LABEL_54:
            v233 = v79;
            v97 = (uint64_t)v16;
            *(_QWORD *)v16 = *(_QWORD *)v17;
            v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v99 = (char *)v16 + v98;
            v226 = (char *)v17 + v98;
            v100 = v233;
            v101 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v226, v101);
            break;
          default:
LABEL_85:
            v150 = *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64);
            v151 = v17;
            v100 = v79;
            v97 = (uint64_t)v16;
            memcpy(v16, v151, v150);
LABEL_86:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v97, 0, 1, v100);
            v16 = (_DWORD *)v97;
            v85 = v241;
LABEL_87:
            v152 = *(int *)(v248 + 20);
            v153 = (char *)v16 + v152;
            v245 = (char *)v85 + v152;
            v154 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v153, v245, v154);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v248);
LABEL_88:
            v155 = *(int *)(v251 + 24);
            v156 = (char *)v7 + v155;
            v157 = (char *)v8 + v155;
            v158 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v156, v157, v158);
            goto LABEL_117;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_86;
      case 4u:
        v253 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v253))
        {
          v27 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          goto LABEL_95;
        }
        v86 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v86))
        {
          v87 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          goto LABEL_94;
        }
        v102 = swift_getEnumCaseMultiPayload();
        switch(v102)
        {
          case 9:
            *v7 = *v8;
            *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
            v159 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v160 = (char *)v7 + v159;
            v161 = (char *)v8 + v159;
            v162 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
            goto LABEL_91;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v164 = (char *)v7 + v163;
            v165 = (char *)v8 + v163;
            v166 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
            goto LABEL_91;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v104 = (char *)v7 + v103;
            v105 = (char *)v8 + v103;
            v106 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_91:
            swift_storeEnumTagMultiPayload();
            goto LABEL_93;
        }
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
LABEL_93:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v86);
LABEL_94:
        v167 = *(int *)(v253 + 20);
        v168 = (char *)v7 + v167;
        v169 = (char *)v8 + v167;
        v170 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v168, v169, v170);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v253);
LABEL_95:
        v250 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v171 = *(int *)(v250 + 20);
        v172 = (_DWORD *)((char *)v7 + v171);
        v173 = (_DWORD *)((char *)v8 + v171);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8 + v171, 1, v253))
        {
          v174 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
LABEL_116:
          v212 = *(int *)(v250 + 24);
          v213 = (char *)v7 + v212;
          v214 = (char *)v8 + v212;
          v215 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
LABEL_117:
          swift_storeEnumTagMultiPayload();
LABEL_118:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
          goto LABEL_119;
        }
        v175 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v173, 1, v175))
        {
          v176 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
LABEL_115:
          v207 = *(int *)(v253 + 20);
          v208 = (uint64_t)v172;
          v209 = (char *)v172 + v207;
          v210 = (char *)v173 + v207;
          v211 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v208, 0, 1, v253);
          goto LABEL_116;
        }
        v246 = v175;
        v177 = swift_getEnumCaseMultiPayload();
        if (v177 == 9)
        {
          v178 = (uint64_t)v172;
          *v172 = *v173;
          *(_OWORD *)(v172 + 2) = *(_OWORD *)(v173 + 2);
          v201 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v202 = (char *)v172 + v201;
          v230 = (char *)v173 + v201;
          v203 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v202, v230, v203);
        }
        else
        {
          v178 = (uint64_t)v172;
          if (v177 == 5)
          {
            *(_QWORD *)v172 = *(_QWORD *)v173;
            v204 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v205 = (char *)v172 + v204;
            v231 = (char *)v173 + v204;
            v206 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v205, v231, v206);
          }
          else
          {
            if (v177 != 4)
            {
              memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
              goto LABEL_114;
            }
            *(_QWORD *)v172 = *(_QWORD *)v173;
            v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v225 = (char *)v173 + v179;
            v229 = (char *)v172 + v179;
            v180 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v229, v225, v180);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_114:
        v172 = (_DWORD *)v178;
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v178, 0, 1, v246);
        goto LABEL_115;
      case 5u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v28 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v29 = (char *)v7 + v28;
        v30 = (char *)v8 + v28;
        v31 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        goto LABEL_117;
      case 6u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v33 = (char *)v7 + v32;
        v34 = (char *)v8 + v32;
        v35 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_117;
      case 7u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v251 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v36 = *(int *)(v251 + 20);
        v37 = (char *)v7 + v36;
        v38 = (char *)v8 + v36;
        v39 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v39))
        {
          v40 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v37 = *(_QWORD *)v38;
          v37[8] = v38[8];
          v88 = *(int *)(v39 + 20);
          v249 = &v37[v88];
          v89 = &v38[v88];
          v90 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v249, v89, v90);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v37, 0, 1, v39);
        }
        goto LABEL_88;
      case 8u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v42 = (char *)v7 + v41;
        v43 = (char *)v8 + v41;
        v44 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        goto LABEL_117;
      case 9u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((_WORD *)v7 + 8) = *((_WORD *)v8 + 8);
        v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v46 = (char *)v7 + v45;
        v47 = (char *)v8 + v45;
        v48 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
        goto LABEL_117;
      case 0xAu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v50 = (char *)v7 + v49;
        v51 = (char *)v8 + v49;
        v52 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        goto LABEL_117;
      case 0xBu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v54 = (char *)v7 + v53;
        v55 = (char *)v8 + v53;
        v56 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
        goto LABEL_117;
      case 0xCu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v58 = (char *)v7 + v57;
        v59 = (char *)v8 + v57;
        v60 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
        goto LABEL_117;
      case 0xDu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v61 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v62 = (char *)v7 + v61;
        v63 = (char *)v8 + v61;
        v64 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(v62, v63, v64);
        goto LABEL_117;
      case 0xEu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v66 = (char *)v7 + v65;
        v67 = (char *)v8 + v65;
        v68 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
        goto LABEL_117;
      case 0xFu:
      case 0x11u:
        v69 = sub_23FB2D718();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v7, v8, v69);
        goto LABEL_117;
      case 0x10u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v71 = (char *)v7 + v70;
        v72 = (char *)v8 + v70;
        v73 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
        goto LABEL_117;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_118;
    }
  }
  v10 = sub_23F6916B8(&qword_256EB22C8);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_120:
  v220 = *(int *)(a3 + 24);
  v221 = (char *)a1 + v220;
  v222 = (char *)a2 + v220;
  v223 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v221, v222, v223);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTFlatAssignExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _DWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _DWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _DWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  uint64_t v162;
  int EnumCaseMultiPayload;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _DWORD *v170;
  uint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  char *v175;
  _DWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  _BYTE *v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _DWORD *v234;
  int *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _BYTE *v240;
  uint64_t v241;
  int v242;
  int v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _DWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _BYTE *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  int v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  int v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _DWORD *v332;
  _DWORD *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  _DWORD *v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  size_t v353;
  const void *v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  char *v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  char *v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  _DWORD *v375;
  _DWORD *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  char *v393;
  size_t v394;
  uint64_t v395;
  uint64_t v396;
  char *v397;
  char *v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  char *v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  int v423;
  uint64_t v424;
  char *v425;
  uint64_t v426;
  int v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  int v434;
  int v435;
  uint64_t v436;
  char *v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  char *v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  char *v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  uint64_t v471;
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  uint64_t v476;
  _DWORD *v477;
  _DWORD *v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char *v482;
  _DWORD *v483;
  int *v484;
  int v485;
  uint64_t v486;
  char *v487;
  char *v488;
  uint64_t v489;
  char *v490;
  uint64_t v491;
  uint64_t v492;
  char *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  char *v497;
  char *v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  uint64_t v504;
  _QWORD *v505;
  _DWORD *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  char *v510;
  int v511;
  uint64_t v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  char *v517;
  char *v518;
  uint64_t v519;
  char *v520;
  uint64_t v521;
  char *v522;
  char *v523;
  uint64_t v524;
  char *v525;
  uint64_t v526;
  char *v527;
  char *v528;
  uint64_t v529;
  uint64_t v530;
  char *v531;
  char *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  char *v542;
  uint64_t v543;
  uint64_t v544;
  char *v545;
  char *v546;
  uint64_t v547;
  uint64_t v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  uint64_t v553;
  uint64_t v554;
  char *v555;
  char *v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  char *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  _DWORD *v566;
  _DWORD *v567;
  uint64_t v568;
  uint64_t v569;
  _DWORD *v570;
  int v571;
  uint64_t v572;
  char *v573;
  uint64_t v574;
  uint64_t v575;
  char *v576;
  char *v577;
  uint64_t v578;
  uint64_t v579;
  char *v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  char *v585;
  uint64_t v586;
  uint64_t v587;
  char *v588;
  _DWORD *v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  int v594;
  uint64_t v595;
  char *v596;
  uint64_t v597;
  uint64_t v598;
  char *v599;
  uint64_t v600;
  uint64_t v601;
  char *v602;
  uint64_t v603;
  uint64_t v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  char *v608;
  char *v609;
  uint64_t v610;
  uint64_t v611;
  char *v612;
  uint64_t v613;
  uint64_t v614;
  char *v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  char *v619;
  uint64_t v620;
  uint64_t v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  char *v625;
  char *v626;
  uint64_t v627;
  uint64_t v628;
  char *v629;
  char *v630;
  uint64_t v631;
  uint64_t v632;
  char *v633;
  char *v634;
  uint64_t v635;
  char *v637;
  char *v638;
  char *v639;
  char *v640;
  char *v641;
  char *v642;
  char *v643;
  char *v644;
  char *v645;
  char *v646;
  char *v647;
  char *v648;
  char *v649;
  uint64_t v650;
  char *v651;
  char *v652;
  char *v653;
  char *v654;
  char *v655;
  char *v656;
  char *v657;
  char *v658;
  char *v659;
  char *v660;
  uint64_t v661;
  char *v662;
  char *v663;
  char *__srcf;
  void *__srcg;
  char *__src;
  _QWORD *__srca;
  char *__srch;
  char *__srci;
  void *__srcj;
  void *__srck;
  void *__srcl;
  void *__srcm;
  void *__srcn;
  void *__srcb;
  void *__srcc;
  _QWORD *__srcd;
  _QWORD *__srce;
  char *__srco;
  char *__srcp;
  void *v681;
  _DWORD *v682;
  _DWORD *v683;
  _DWORD *v684;
  int *v685;
  _DWORD *v686;
  char *v687;
  _DWORD *v688;
  char *v689;
  _QWORD *v690;
  _DWORD *v691;
  char *v692;
  _QWORD *v693;
  _DWORD *v694;
  char *v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  _BYTE *v699;
  uint64_t v700;
  _BYTE *v701;
  uint64_t v702;
  int *v703;
  _BYTE *v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  int *v708;
  uint64_t v709;
  int *__dst;
  int *__dsta;
  int *__dstb;
  _DWORD *__dstc;
  int *__dstd;
  int *__dste;
  _DWORD *__dstf;
  int *__dstg;
  int *__dsth;
  int *__dsti;
  void *__dstj;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    if (v12)
    {
      sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoASTFlatExpr);
      goto LABEL_7;
    }
    v16 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v16);
    v18 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v16);
    if (v17)
    {
      if (!v18)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v19))
            {
              v20 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_173:
              v318 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
              v319 = (char *)v8 + v318;
              v320 = (char *)v9 + v318;
              v321 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 32))(v319, v320, v321);
              goto LABEL_303;
            }
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            switch(EnumCaseMultiPayload)
            {
              case 9:
                *v8 = *v9;
                *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                v310 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v311 = (char *)v8 + v310;
                v312 = (char *)v9 + v310;
                v313 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v313 - 8) + 32))(v311, v312, v313);
                break;
              case 5:
                *(_QWORD *)v8 = *(_QWORD *)v9;
                v314 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v315 = (char *)v8 + v314;
                v316 = (char *)v9 + v314;
                v317 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v317 - 8) + 32))(v315, v316, v317);
                break;
              case 4:
                *(_QWORD *)v8 = *(_QWORD *)v9;
                v164 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v165 = (char *)v8 + v164;
                v166 = (char *)v9 + v164;
                v167 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 32))(v165, v166, v167);
                break;
              default:
                memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
                goto LABEL_172;
            }
            swift_storeEnumTagMultiPayload();
LABEL_172:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v19);
            goto LABEL_173;
          case 1u:
            *(_BYTE *)v8 = *(_BYTE *)v9;
            v85 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            v86 = *(int *)(v85 + 20);
            __dstc = (_DWORD *)((char *)v8 + v86);
            v87 = (char *)v9 + v86;
            v88 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v87, 1, v88))goto LABEL_48;
            v700 = v88;
            v228 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v681 = (void *)v85;
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v87, 1, v228))goto LABEL_108;
            v291 = v228;
            v292 = v87;
            v293 = v291;
            v294 = swift_getEnumCaseMultiPayload();
            __src = v292;
            switch(v294)
            {
              case 9:
                goto LABEL_251;
              case 5:
                goto LABEL_252;
              case 4:
                goto LABEL_155;
            }
            goto LABEL_254;
          case 2u:
            *(_BYTE *)v8 = *(_BYTE *)v9;
            v90 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            v91 = *(int *)(v90 + 20);
            v92 = (char *)v8 + v91;
            v93 = (_DWORD *)((char *)v9 + v91);
            __dstd = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
            v697 = v90;
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v93, 1, (uint64_t)__dstd))
            {
              v94 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
              v95 = (uint64_t)__dstd;
              goto LABEL_264;
            }
            v682 = v92;
            v232 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v93, 1, v232))
            {
              v233 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v682, v93, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
              v234 = v682;
              v235 = __dstd;
              goto LABEL_263;
            }
            __srca = (_QWORD *)v232;
            v298 = swift_getEnumCaseMultiPayload();
            switch(v298)
            {
              case 9:
                v299 = (uint64_t)v682;
                *v682 = *v93;
                *(_OWORD *)(v682 + 2) = *(_OWORD *)(v93 + 2);
                v466 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v467 = (char *)v682 + v466;
                v653 = (char *)v93 + v466;
                v468 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v468 - 8) + 32))(v467, v653, v468);
                goto LABEL_260;
              case 5:
                v299 = (uint64_t)v682;
                *(_QWORD *)v682 = *(_QWORD *)v93;
                v469 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v470 = (char *)v682 + v469;
                v654 = (char *)v93 + v469;
                v471 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 32))(v470, v654, v471);
                goto LABEL_260;
              case 4:
                v299 = (uint64_t)v682;
                *(_QWORD *)v682 = *(_QWORD *)v93;
                v300 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v301 = (char *)v682 + v300;
                v643 = (char *)v93 + v300;
                v302 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v301, v643, v302);
LABEL_260:
                swift_storeEnumTagMultiPayload();
                goto LABEL_262;
            }
            v299 = (uint64_t)v682;
            memcpy(v682, v93, *(_QWORD *)(*(__srca - 1) + 64));
LABEL_262:
            v235 = __dstd;
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v299, 0, 1, (uint64_t)__srca);
            v234 = (_DWORD *)v299;
LABEL_263:
            v472 = v235[5];
            v95 = (uint64_t)v235;
            v473 = (char *)v234 + v472;
            v474 = (char *)v93 + v472;
            v475 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 32))(v473, v474, v475);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v682, 0, 1, v95);
            v90 = v697;
LABEL_264:
            v476 = *(int *)(v90 + 24);
            v477 = (_DWORD *)((char *)v8 + v476);
            v478 = (_DWORD *)((char *)v9 + v476);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v476, 1, v95))
            {
              v479 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v477, v478, *(_QWORD *)(*(_QWORD *)(v479 - 8) + 64));
LABEL_295:
              v530 = *(int *)(v697 + 28);
              v531 = (char *)v8 + v530;
              v532 = (char *)v9 + v530;
              v533 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v533 - 8) + 32))(v531, v532, v533);
              goto LABEL_303;
            }
            v480 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v478, 1, v480))
            {
              v481 = sub_23F6916B8(&qword_256EA25F0);
              v482 = (char *)v477;
              memcpy(v477, v478, *(_QWORD *)(*(_QWORD *)(v481 - 8) + 64));
              v483 = v478;
              v484 = __dstd;
LABEL_294:
              v526 = v484[5];
              v527 = &v482[v526];
              v528 = (char *)v483 + v526;
              v529 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v529 - 8) + 32))(v527, v528, v529);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v482, 0, 1, (uint64_t)__dstd);
              goto LABEL_295;
            }
            v485 = swift_getEnumCaseMultiPayload();
            __srcd = (_QWORD *)v480;
            v691 = v478;
            switch(v485)
            {
              case 9:
                *v477 = *v478;
                *(_OWORD *)(v477 + 2) = *(_OWORD *)(v478 + 2);
                v516 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v517 = (char *)v477 + v516;
                v518 = (char *)v478 + v516;
                v519 = sub_23FB2D718();
                v520 = v517;
                v482 = (char *)v477;
                v491 = (uint64_t)__srcd;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v519 - 8) + 32))(v520, v518, v519);
                break;
              case 5:
                *(_QWORD *)v477 = *(_QWORD *)v478;
                v521 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v522 = (char *)v477 + v521;
                v523 = (char *)v478 + v521;
                v524 = sub_23FB2D718();
                v525 = v522;
                v482 = (char *)v477;
                v491 = (uint64_t)__srcd;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v524 - 8) + 32))(v525, v523, v524);
                break;
              case 4:
                *(_QWORD *)v477 = *(_QWORD *)v478;
                v486 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v487 = (char *)v477 + v486;
                v488 = (char *)v478 + v486;
                v489 = sub_23FB2D718();
                v490 = v487;
                v482 = (char *)v477;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v489 - 8) + 32))(v490, v488, v489);
                v491 = (uint64_t)__srcd;
                break;
              default:
                v482 = (char *)v477;
                v491 = (uint64_t)__srcd;
                memcpy(v482, v478, *(_QWORD *)(*(__srcd - 1) + 64));
                goto LABEL_293;
            }
            swift_storeEnumTagMultiPayload();
LABEL_293:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v482, 0, 1, v491);
            v484 = __dstd;
            v483 = v691;
            goto LABEL_294;
          case 3u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v85 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            v96 = *(int *)(v85 + 20);
            __dstc = (_DWORD *)((char *)v8 + v96);
            v87 = (char *)v9 + v96;
            v97 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v87, 1, v97))
            {
LABEL_48:
              v89 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(__dstc, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
              goto LABEL_257;
            }
            v700 = v97;
            v236 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v681 = (void *)v85;
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v87, 1, v236))
            {
LABEL_108:
              v229 = sub_23F6916B8(&qword_256EA25F0);
              v230 = (uint64_t)__dstc;
              memcpy(__dstc, v87, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
              v231 = v700;
              goto LABEL_256;
            }
            v303 = v236;
            v292 = v87;
            v293 = v303;
            v304 = swift_getEnumCaseMultiPayload();
            __src = v292;
            switch(v304)
            {
              case 9:
LABEL_251:
                v230 = (uint64_t)__dstc;
                *__dstc = *(_DWORD *)v292;
                *(_OWORD *)(__dstc + 2) = *(_OWORD *)(v292 + 8);
                v452 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v651 = (char *)__dstc + v452;
                v453 = &v292[v452];
                v454 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 32))(v651, v453, v454);
                break;
              case 5:
LABEL_252:
                v230 = (uint64_t)__dstc;
                *(_QWORD *)__dstc = *(_QWORD *)v292;
                v455 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v652 = (char *)__dstc + v455;
                v456 = &v292[v455];
                v457 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v457 - 8) + 32))(v652, v456, v457);
                break;
              case 4:
LABEL_155:
                v230 = (uint64_t)__dstc;
                *(_QWORD *)__dstc = *(_QWORD *)v292;
                v295 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v642 = (char *)__dstc + v295;
                v296 = &v292[v295];
                v297 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v642, v296, v297);
                break;
              default:
LABEL_254:
                v230 = (uint64_t)__dstc;
                memcpy(__dstc, v292, *(_QWORD *)(*(_QWORD *)(v293 - 8) + 64));
LABEL_255:
                v231 = v700;
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v230, 0, 1, v293);
                v87 = __src;
LABEL_256:
                v458 = *(int *)(v231 + 20);
                v459 = v230 + v458;
                v460 = &v87[v458];
                v461 = sub_23FB2D718();
                (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v461 - 8) + 32))(v459, v460, v461);
                _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v230, 0, 1, v700);
                v85 = (uint64_t)v681;
LABEL_257:
                v462 = *(int *)(v85 + 24);
                v463 = (char *)v8 + v462;
                v464 = (char *)v9 + v462;
                v465 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v465 - 8) + 32))(v463, v464, v465);
                goto LABEL_303;
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_255;
          case 4u:
            v98 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v98))
            {
              v99 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
              goto LABEL_281;
            }
            v237 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v237))
            {
              v238 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
              goto LABEL_280;
            }
            v305 = swift_getEnumCaseMultiPayload();
            v705 = v98;
            switch(v305)
            {
              case 9:
                *v8 = *v9;
                *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                v492 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v493 = (char *)v8 + v492;
                v494 = (char *)v9 + v492;
                v495 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v495 - 8) + 32))(v493, v494, v495);
                goto LABEL_277;
              case 5:
                *(_QWORD *)v8 = *(_QWORD *)v9;
                v496 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v497 = (char *)v8 + v496;
                v498 = (char *)v9 + v496;
                v499 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v499 - 8) + 32))(v497, v498, v499);
                goto LABEL_277;
              case 4:
                *(_QWORD *)v8 = *(_QWORD *)v9;
                v306 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v307 = (char *)v8 + v306;
                v308 = (char *)v9 + v306;
                v309 = sub_23FB2D718();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 32))(v307, v308, v309);
LABEL_277:
                swift_storeEnumTagMultiPayload();
                goto LABEL_279;
            }
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
LABEL_279:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v237);
            v98 = v705;
LABEL_280:
            v500 = *(int *)(v98 + 20);
            v501 = (char *)v8 + v500;
            v502 = (char *)v9 + v500;
            v503 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v503 - 8) + 32))(v501, v502, v503);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v98);
LABEL_281:
            __dste = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            v504 = __dste[5];
            v505 = (_QWORD *)((char *)v8 + v504);
            v506 = (_DWORD *)((char *)v9 + v504);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v504, 1, v98))
            {
              v507 = sub_23F6916B8(&qword_256EA84E8);
              memcpy(v505, v506, *(_QWORD *)(*(_QWORD *)(v507 - 8) + 64));
LABEL_302:
              v544 = __dste[6];
              v545 = (char *)v8 + v544;
              v546 = (char *)v9 + v544;
              v547 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v547 - 8) + 32))(v545, v546, v547);
LABEL_303:
              swift_storeEnumTagMultiPayload();
LABEL_304:
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v16);
              goto LABEL_357;
            }
            v707 = v98;
            v508 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v506, 1, v508))
            {
              v509 = sub_23F6916B8(&qword_256EA25F0);
              v510 = (char *)v505;
              memcpy(v505, v506, *(_QWORD *)(*(_QWORD *)(v509 - 8) + 64));
LABEL_301:
              v540 = *(int *)(v707 + 20);
              v541 = &v510[v540];
              v542 = (char *)v506 + v540;
              v543 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v543 - 8) + 32))(v541, v542, v543);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v510, 0, 1, v707);
              goto LABEL_302;
            }
            v511 = swift_getEnumCaseMultiPayload();
            if (v511 == 9)
            {
              v534 = v508;
              v510 = (char *)v505;
              v515 = v534;
              *(_DWORD *)v510 = *v506;
              *(_OWORD *)(v510 + 8) = *(_OWORD *)(v506 + 2);
              v535 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v656 = (char *)v506 + v535;
              __srco = &v510[v535];
              v536 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v536 - 8) + 32))(__srco, v656, v536);
            }
            else if (v511 == 5)
            {
              v537 = v508;
              v510 = (char *)v505;
              v515 = v537;
              *(_QWORD *)v510 = *(_QWORD *)v506;
              v538 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v657 = (char *)v506 + v538;
              __srcp = &v510[v538];
              v539 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v539 - 8) + 32))(__srcp, v657, v539);
            }
            else
            {
              __srce = (_QWORD *)v508;
              if (v511 != 4)
              {
                v510 = (char *)v505;
                v515 = (uint64_t)__srce;
                memcpy(v510, v506, *(_QWORD *)(*(__srce - 1) + 64));
                goto LABEL_300;
              }
              v510 = (char *)v505;
              *v505 = *(_QWORD *)v506;
              v512 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v513 = (char *)v505 + v512;
              v655 = (char *)v506 + v512;
              v514 = sub_23FB2D718();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 32))(v513, v655, v514);
              v515 = (uint64_t)__srce;
            }
            swift_storeEnumTagMultiPayload();
LABEL_300:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v510, 0, 1, v515);
            goto LABEL_301;
          case 5u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            v101 = (char *)v8 + v100;
            v102 = (char *)v9 + v100;
            v103 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
            goto LABEL_303;
          case 6u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            v105 = (char *)v8 + v104;
            v106 = (char *)v9 + v104;
            v107 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
            goto LABEL_303;
          case 7u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            __dste = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            v108 = __dste[5];
            v109 = (char *)v8 + v108;
            v110 = (char *)v9 + v108;
            v111 = type metadata accessor for TranscriptProtoASTPickType(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v110, 1, v111))
            {
              v112 = sub_23F6916B8(&qword_256EA8510);
              memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v109 = *(_QWORD *)v110;
              v109[8] = v110[8];
              v239 = *(int *)(v111 + 20);
              v701 = &v109[v239];
              v240 = &v110[v239];
              v241 = sub_23FB2D718();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v701, v240, v241);
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v109, 0, 1, v111);
            }
            goto LABEL_302;
          case 8u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v113 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            v114 = (char *)v8 + v113;
            v115 = (char *)v9 + v113;
            v116 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
            goto LABEL_303;
          case 9u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
            v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            v118 = (char *)v8 + v117;
            v119 = (char *)v9 + v117;
            v120 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
            goto LABEL_303;
          case 0xAu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            v122 = (char *)v8 + v121;
            v123 = (char *)v9 + v121;
            v124 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
            goto LABEL_303;
          case 0xBu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            v126 = (char *)v8 + v125;
            v127 = (char *)v9 + v125;
            v128 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v126, v127, v128);
            goto LABEL_303;
          case 0xCu:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            v130 = (char *)v8 + v129;
            v131 = (char *)v9 + v129;
            v132 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v130, v131, v132);
            goto LABEL_303;
          case 0xDu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            v134 = (char *)v8 + v133;
            v135 = (char *)v9 + v133;
            v136 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
            goto LABEL_303;
          case 0xEu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            v138 = (char *)v8 + v137;
            v139 = (char *)v9 + v137;
            v140 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
            goto LABEL_303;
          case 0xFu:
          case 0x11u:
            v141 = sub_23FB2D718();
            (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v8, v9, v141);
            goto LABEL_303;
          case 0x10u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            v143 = (char *)v8 + v142;
            v144 = (char *)v9 + v142;
            v145 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
            goto LABEL_303;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
            goto LABEL_304;
        }
      }
LABEL_18:
      v23 = *(_QWORD *)(sub_23F6916B8(&qword_256EB22D8) - 8);
LABEL_19:
      memcpy(v8, v9, *(_QWORD *)(v23 + 64));
      goto LABEL_357;
    }
    if (v18)
    {
      sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoAstflatExprEnum);
      goto LABEL_18;
    }
    if (a1 == a2)
    {
LABEL_357:
      v628 = *(int *)(v10 + 20);
      v629 = (char *)v8 + v628;
      v630 = (char *)v9 + v628;
      v631 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v631 - 8) + 40))(v629, v630, v631);
      goto LABEL_358;
    }
    sub_23F93DADC((uint64_t)v8, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v24 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v24))
        {
          v25 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          goto LABEL_250;
        }
        v270 = swift_getEnumCaseMultiPayload();
        switch(v270)
        {
          case 9:
            *v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            v440 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v441 = (char *)v8 + v440;
            v442 = (char *)v9 + v440;
            v443 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v443 - 8) + 32))(v441, v442, v443);
            goto LABEL_247;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v444 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v445 = (char *)v8 + v444;
            v446 = (char *)v9 + v444;
            v447 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v447 - 8) + 32))(v445, v446, v447);
            goto LABEL_247;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v271 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v272 = (char *)v8 + v271;
            v273 = (char *)v9 + v271;
            v274 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v272, v273, v274);
LABEL_247:
            swift_storeEnumTagMultiPayload();
            goto LABEL_249;
        }
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_249:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v24);
LABEL_250:
        v448 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v449 = (char *)v8 + v448;
        v450 = (char *)v9 + v448;
        v451 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v451 - 8) + 32))(v449, v450, v451);
        goto LABEL_356;
      case 1u:
        *(_BYTE *)v8 = *(_BYTE *)v9;
        v168 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v169 = *(int *)(v168 + 20);
        __dstf = (_DWORD *)((char *)v8 + v169);
        v170 = (_DWORD *)((char *)v9 + v169);
        v171 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v170, 1, v171))goto LABEL_87;
        v685 = (int *)v171;
        v275 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v702 = v168;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v170, 1, v275))goto LABEL_143;
        __srcb = (void *)v275;
        v423 = swift_getEnumCaseMultiPayload();
        switch(v423)
        {
          case 9:
            goto LABEL_305;
          case 5:
            goto LABEL_306;
          case 4:
            goto LABEL_232;
        }
        goto LABEL_352;
      case 2u:
        *(_BYTE *)v8 = *(_BYTE *)v9;
        v173 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v174 = v173[5];
        v175 = (char *)v8 + v174;
        v176 = (_DWORD *)((char *)v9 + v174);
        __dstg = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v176, 1, (uint64_t)__dstg))
        {
          v177 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
          goto LABEL_314;
        }
        v686 = v175;
        v278 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v703 = v173;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v176, 1, v278))
        {
          v279 = sub_23F6916B8(&qword_256EA25F0);
          v280 = (uint64_t)v686;
          memcpy(v686, v176, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
          v281 = v176;
          goto LABEL_313;
        }
        v650 = v278;
        __srcc = v176;
        v427 = swift_getEnumCaseMultiPayload();
        switch(v427)
        {
          case 9:
            v428 = (uint64_t)v686;
            *v686 = *v176;
            *(_OWORD *)(v686 + 2) = *(_OWORD *)(v176 + 2);
            v554 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v555 = (char *)v686 + v554;
            v556 = (char *)v176 + v554;
            v557 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v557 - 8) + 32))(v555, v556, v557);
            v433 = v650;
            goto LABEL_310;
          case 5:
            v428 = (uint64_t)v686;
            *(_QWORD *)v686 = *(_QWORD *)v176;
            v558 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v559 = (char *)v686 + v558;
            v560 = (char *)v176 + v558;
            v561 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v561 - 8) + 32))(v559, v560, v561);
            v433 = v650;
            goto LABEL_310;
          case 4:
            v428 = (uint64_t)v686;
            *(_QWORD *)v686 = *(_QWORD *)v176;
            v429 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v430 = (char *)v686 + v429;
            v431 = (char *)v176 + v429;
            v432 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v430, v431, v432);
            v433 = v650;
LABEL_310:
            swift_storeEnumTagMultiPayload();
            goto LABEL_312;
        }
        v433 = v278;
        v428 = (uint64_t)v686;
        memcpy(v686, __srcc, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
LABEL_312:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v428, 0, 1, v433);
        v280 = v428;
        v281 = __srcc;
LABEL_313:
        v562 = __dstg[5];
        v563 = v280 + v562;
        v692 = (char *)v281 + v562;
        v564 = sub_23FB2D718();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v564 - 8) + 32))(v563, v692, v564);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v280, 0, 1, (uint64_t)__dstg);
        v173 = v703;
LABEL_314:
        v565 = v173[6];
        v566 = (_DWORD *)((char *)v8 + v565);
        v567 = (_DWORD *)((char *)v9 + v565);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v565, 1, (uint64_t)__dstg))
        {
          v568 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v566, v567, *(_QWORD *)(*(_QWORD *)(v568 - 8) + 64));
LABEL_345:
          v607 = v173[7];
          v608 = (char *)v8 + v607;
          v609 = (char *)v9 + v607;
          v610 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v610 - 8) + 32))(v608, v609, v610);
LABEL_356:
          swift_storeEnumTagMultiPayload();
          goto LABEL_357;
        }
        v693 = (_QWORD *)type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v708 = v173;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v567, 1, (uint64_t)v693))
        {
          v569 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v566, v567, *(_QWORD *)(*(_QWORD *)(v569 - 8) + 64));
          v570 = v567;
LABEL_344:
          v604 = __dstg[5];
          v605 = (char *)v566 + v604;
          v695 = (char *)v570 + v604;
          v606 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v606 - 8) + 32))(v605, v695, v606);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v566, 0, 1, (uint64_t)__dstg);
          v173 = v708;
          goto LABEL_345;
        }
        v571 = swift_getEnumCaseMultiPayload();
        switch(v571)
        {
          case 9:
            *v566 = *v567;
            *(_OWORD *)(v566 + 2) = *(_OWORD *)(v567 + 2);
            v598 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v662 = (char *)v566 + v598;
            v599 = (char *)v567 + v598;
            v600 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v600 - 8) + 32))(v662, v599, v600);
            break;
          case 5:
            *(_QWORD *)v566 = *(_QWORD *)v567;
            v601 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v663 = (char *)v566 + v601;
            v602 = (char *)v567 + v601;
            v603 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v603 - 8) + 32))(v663, v602, v603);
            break;
          case 4:
            *(_QWORD *)v566 = *(_QWORD *)v567;
            v572 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v660 = (char *)v566 + v572;
            v573 = (char *)v567 + v572;
            v574 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v574 - 8) + 32))(v660, v573, v574);
            break;
          default:
            memcpy(v566, v567, *(_QWORD *)(*(v693 - 1) + 64));
            goto LABEL_343;
        }
        swift_storeEnumTagMultiPayload();
LABEL_343:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v566, 0, 1, (uint64_t)v693);
        v570 = v567;
        goto LABEL_344;
      case 3u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v168 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v178 = *(int *)(v168 + 20);
        __dstf = (_DWORD *)((char *)v8 + v178);
        v170 = (_DWORD *)((char *)v9 + v178);
        v179 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v170, 1, v179))
        {
LABEL_87:
          v172 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(__dstf, v170, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          goto LABEL_355;
        }
        v685 = (int *)v179;
        v275 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v702 = v168;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v170, 1, v275))
        {
LABEL_143:
          v276 = sub_23F6916B8(&qword_256EA25F0);
          v277 = (uint64_t)__dstf;
          memcpy(__dstf, v170, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
          goto LABEL_354;
        }
        __srcb = (void *)v275;
        v434 = swift_getEnumCaseMultiPayload();
        switch(v434)
        {
          case 9:
LABEL_305:
            v277 = (uint64_t)__dstf;
            *__dstf = *v170;
            *(_OWORD *)(__dstf + 2) = *(_OWORD *)(v170 + 2);
            v548 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v549 = (char *)__dstf + v548;
            v658 = (char *)v170 + v548;
            v550 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v550 - 8) + 32))(v549, v658, v550);
            v275 = (uint64_t)__srcb;
            goto LABEL_307;
          case 5:
LABEL_306:
            v277 = (uint64_t)__dstf;
            *(_QWORD *)__dstf = *(_QWORD *)v170;
            v551 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v552 = (char *)__dstf + v551;
            v659 = (char *)v170 + v551;
            v553 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v553 - 8) + 32))(v552, v659, v553);
            v275 = (uint64_t)__srcb;
            goto LABEL_307;
          case 4:
LABEL_232:
            v277 = (uint64_t)__dstf;
            *(_QWORD *)__dstf = *(_QWORD *)v170;
            v424 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v425 = (char *)__dstf + v424;
            v649 = (char *)v170 + v424;
            v426 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 32))(v425, v649, v426);
            v275 = (uint64_t)__srcb;
LABEL_307:
            swift_storeEnumTagMultiPayload();
            goto LABEL_353;
        }
LABEL_352:
        v277 = (uint64_t)__dstf;
        memcpy(__dstf, v170, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
LABEL_353:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v277, 0, 1, v275);
LABEL_354:
        v621 = v685[5];
        __dstj = (void *)(v277 + v621);
        v622 = (char *)v170 + v621;
        v623 = sub_23FB2D718();
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v623 - 8) + 32))(__dstj, v622, v623);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v277, 0, 1, (uint64_t)v685);
        v168 = v702;
        goto LABEL_355;
      case 4u:
        v180 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        __dsth = (int *)v180;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v180))
        {
          v181 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
          goto LABEL_331;
        }
        v282 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v282))
        {
          v283 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
          goto LABEL_330;
        }
        v435 = swift_getEnumCaseMultiPayload();
        switch(v435)
        {
          case 9:
            *v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            v575 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v576 = (char *)v8 + v575;
            v577 = (char *)v9 + v575;
            v578 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v578 - 8) + 32))(v576, v577, v578);
            goto LABEL_327;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v579 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v580 = (char *)v8 + v579;
            v581 = (char *)v9 + v579;
            v582 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v582 - 8) + 32))(v580, v581, v582);
            goto LABEL_327;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v436 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v437 = (char *)v8 + v436;
            v438 = (char *)v9 + v436;
            v439 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v439 - 8) + 32))(v437, v438, v439);
LABEL_327:
            swift_storeEnumTagMultiPayload();
            goto LABEL_329;
        }
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
LABEL_329:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v282);
        v180 = (uint64_t)__dsth;
LABEL_330:
        v583 = *(int *)(v180 + 20);
        v584 = (char *)v8 + v583;
        v585 = (char *)v9 + v583;
        v586 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v586 - 8) + 32))(v584, v585, v586);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v180);
LABEL_331:
        v168 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v587 = *(int *)(v168 + 20);
        v588 = (char *)v8 + v587;
        v589 = (_DWORD *)((char *)v9 + v587);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v587, 1, (uint64_t)__dsth))
        {
          v590 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v588, v589, *(_QWORD *)(*(_QWORD *)(v590 - 8) + 64));
LABEL_355:
          v624 = *(int *)(v168 + 24);
          v625 = (char *)v8 + v624;
          v626 = (char *)v9 + v624;
          v627 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v627 - 8) + 32))(v625, v626, v627);
          goto LABEL_356;
        }
        v694 = v588;
        v591 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v709 = v168;
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v589, 1, v591))
        {
          v592 = sub_23F6916B8(&qword_256EA25F0);
          v593 = (uint64_t)v694;
          memcpy(v694, v589, *(_QWORD *)(*(_QWORD *)(v592 - 8) + 64));
LABEL_351:
          v617 = __dsth[5];
          v618 = v593 + v617;
          v619 = (char *)v589 + v617;
          v620 = sub_23FB2D718();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v620 - 8) + 32))(v618, v619, v620);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v593, 0, 1, (uint64_t)__dsth);
          v168 = v709;
          goto LABEL_355;
        }
        v661 = v591;
        v594 = swift_getEnumCaseMultiPayload();
        switch(v594)
        {
          case 9:
            v593 = (uint64_t)v694;
            *v694 = *v589;
            *(_OWORD *)(v694 + 2) = *(_OWORD *)(v589 + 2);
            v611 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v612 = (char *)v694 + v611;
            v639 = (char *)v589 + v611;
            v613 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v613 - 8) + 32))(v612, v639, v613);
            v591 = v661;
            break;
          case 5:
            v593 = (uint64_t)v694;
            *(_QWORD *)v694 = *(_QWORD *)v589;
            v614 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v615 = (char *)v694 + v614;
            v640 = (char *)v589 + v614;
            v616 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v616 - 8) + 32))(v615, v640, v616);
            v591 = v661;
            break;
          case 4:
            v593 = (uint64_t)v694;
            *(_QWORD *)v694 = *(_QWORD *)v589;
            v595 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v596 = (char *)v694 + v595;
            v638 = (char *)v589 + v595;
            v597 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v597 - 8) + 32))(v596, v638, v597);
            v591 = v661;
            break;
          default:
            v593 = (uint64_t)v694;
            memcpy(v694, v589, *(_QWORD *)(*(_QWORD *)(v591 - 8) + 64));
            goto LABEL_350;
        }
        swift_storeEnumTagMultiPayload();
LABEL_350:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v593, 0, 1, v591);
        goto LABEL_351;
      case 5u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v182 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v183 = (char *)v8 + v182;
        v184 = (char *)v9 + v182;
        v185 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v183, v184, v185);
        goto LABEL_356;
      case 6u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v186 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v187 = (char *)v8 + v186;
        v188 = (char *)v9 + v186;
        v189 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v187, v188, v189);
        goto LABEL_356;
      case 7u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        __dsti = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v190 = __dsti[5];
        v191 = (char *)v8 + v190;
        v192 = (char *)v9 + v190;
        v193 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v192, 1, v193))
        {
          v194 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v191 = *(_QWORD *)v192;
          v191[8] = v192[8];
          v284 = *(int *)(v193 + 20);
          v704 = &v191[v284];
          v285 = &v192[v284];
          v286 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v286 - 8) + 32))(v704, v285, v286);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v191, 0, 1, v193);
        }
        v287 = __dsti[6];
        v288 = (char *)v8 + v287;
        v289 = (char *)v9 + v287;
        v290 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v288, v289, v290);
        goto LABEL_356;
      case 8u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v196 = (char *)v8 + v195;
        v197 = (char *)v9 + v195;
        v198 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
        goto LABEL_356;
      case 9u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
        v199 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v200 = (char *)v8 + v199;
        v201 = (char *)v9 + v199;
        v202 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v200, v201, v202);
        goto LABEL_356;
      case 0xAu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v203 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v204 = (char *)v8 + v203;
        v205 = (char *)v9 + v203;
        v206 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
        goto LABEL_356;
      case 0xBu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v207 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v208 = (char *)v8 + v207;
        v209 = (char *)v9 + v207;
        v210 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v208, v209, v210);
        goto LABEL_356;
      case 0xCu:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v211 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v212 = (char *)v8 + v211;
        v213 = (char *)v9 + v211;
        v214 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
        goto LABEL_356;
      case 0xDu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v215 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v216 = (char *)v8 + v215;
        v217 = (char *)v9 + v215;
        v218 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v216, v217, v218);
        goto LABEL_356;
      case 0xEu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v219 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v220 = (char *)v8 + v219;
        v221 = (char *)v9 + v219;
        v222 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v220, v221, v222);
        goto LABEL_356;
      case 0xFu:
      case 0x11u:
        v223 = sub_23FB2D718();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v8, v9, v223);
        goto LABEL_356;
      case 0x10u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v224 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v225 = (char *)v8 + v224;
        v226 = (char *)v9 + v224;
        v227 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
        goto LABEL_356;
      default:
        v23 = *(_QWORD *)(v16 - 8);
        goto LABEL_19;
    }
  }
  if (!v12)
  {
    v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v13))
    {
      v14 = sub_23F6916B8(&qword_256EB22D8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_228:
      v419 = *(int *)(v10 + 20);
      v420 = (char *)v8 + v419;
      v421 = (char *)v9 + v419;
      v422 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 32))(v420, v421, v422);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_358;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v21 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v21))
        {
          v22 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_137:
          v266 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v267 = (char *)v8 + v266;
          v268 = (char *)v9 + v266;
          v269 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v269 - 8) + 32))(v267, v268, v269);
          goto LABEL_226;
        }
        v146 = swift_getEnumCaseMultiPayload();
        switch(v146)
        {
          case 9:
            *v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            v258 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v259 = (char *)v8 + v258;
            v260 = (char *)v9 + v258;
            v261 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v259, v260, v261);
            break;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v262 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v263 = (char *)v8 + v262;
            v264 = (char *)v9 + v262;
            v265 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 32))(v263, v264, v265);
            break;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v147 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v148 = (char *)v8 + v147;
            v149 = (char *)v9 + v147;
            v150 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            goto LABEL_136;
        }
        swift_storeEnumTagMultiPayload();
LABEL_136:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v21);
        goto LABEL_137;
      case 1u:
        *(_BYTE *)v8 = *(_BYTE *)v9;
        __dst = (int *)type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v26 = __dst[5];
        v27 = (_DWORD *)((char *)v8 + v26);
        v28 = (_DWORD *)((char *)v9 + v26);
        v29 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v29))goto LABEL_30;
        v698 = v29;
        v151 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v151))goto LABEL_77;
        v242 = swift_getEnumCaseMultiPayload();
        v683 = v28;
        switch(v242)
        {
          case 9:
            goto LABEL_191;
          case 5:
            goto LABEL_192;
          case 4:
            goto LABEL_127;
        }
        goto LABEL_194;
      case 2u:
        *(_BYTE *)v8 = *(_BYTE *)v9;
        __dsta = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v30 = __dsta[5];
        v31 = (_DWORD *)((char *)v8 + v30);
        v32 = (_DWORD *)((char *)v9 + v30);
        v696 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v696))
        {
          v33 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          v34 = v696;
          goto LABEL_183;
        }
        v152 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v152))
        {
          v153 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
          v154 = v32;
          v155 = (uint64_t)v31;
          goto LABEL_182;
        }
        v243 = swift_getEnumCaseMultiPayload();
        v684 = v32;
        switch(v243)
        {
          case 9:
            *v31 = *v32;
            *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
            v322 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            __srch = (char *)v31 + v322;
            v323 = (char *)v32 + v322;
            v324 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v324 - 8) + 32))(__srch, v323, v324);
            goto LABEL_179;
          case 5:
            *(_QWORD *)v31 = *(_QWORD *)v32;
            v325 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            __srci = (char *)v31 + v325;
            v326 = (char *)v32 + v325;
            v327 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v327 - 8) + 32))(__srci, v326, v327);
            goto LABEL_179;
          case 4:
            *(_QWORD *)v31 = *(_QWORD *)v32;
            v244 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            __srcf = (char *)v31 + v244;
            v245 = (char *)v32 + v244;
            v246 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 32))(__srcf, v245, v246);
LABEL_179:
            swift_storeEnumTagMultiPayload();
            goto LABEL_181;
        }
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
LABEL_181:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v152);
        v155 = (uint64_t)v31;
        v154 = v684;
LABEL_182:
        v34 = v696;
        v328 = *(int *)(v696 + 20);
        v329 = v155 + v328;
        v687 = (char *)v154 + v328;
        v330 = sub_23FB2D718();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 32))(v329, v687, v330);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v155, 0, 1, v696);
LABEL_183:
        v331 = __dsta[6];
        v332 = (_DWORD *)((char *)v8 + v331);
        v333 = (_DWORD *)((char *)v9 + v331);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v331, 1, v34))
        {
          v334 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v332, v333, *(_QWORD *)(*(_QWORD *)(v334 - 8) + 64));
LABEL_218:
          v400 = __dsta[7];
          v401 = (char *)v8 + v400;
          v402 = (char *)v9 + v400;
          v403 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v403 - 8) + 32))(v401, v402, v403);
          goto LABEL_226;
        }
        v335 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v333, 1, v335))
        {
          v336 = sub_23F6916B8(&qword_256EA25F0);
          v337 = (char *)v332;
          memcpy(v332, v333, *(_QWORD *)(*(_QWORD *)(v336 - 8) + 64));
          v338 = v333;
          v339 = v696;
LABEL_217:
          v396 = *(int *)(v339 + 20);
          v397 = &v337[v396];
          v398 = (char *)v338 + v396;
          v399 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v399 - 8) + 32))(v397, v398, v399);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v337, 0, 1, v696);
          goto LABEL_218;
        }
        v340 = swift_getEnumCaseMultiPayload();
        v688 = v333;
        switch(v340)
        {
          case 9:
            *v332 = *v333;
            *(_OWORD *)(v332 + 2) = *(_OWORD *)(v333 + 2);
            v384 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            __srcm = (void *)v335;
            v385 = (char *)v332 + v384;
            v386 = (char *)v333 + v384;
            v387 = sub_23FB2D718();
            v388 = v385;
            v337 = (char *)v332;
            v346 = (uint64_t)__srcm;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v387 - 8) + 32))(v388, v386, v387);
            break;
          case 5:
            *(_QWORD *)v332 = *(_QWORD *)v333;
            v389 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            __srcn = (void *)v335;
            v390 = (char *)v332 + v389;
            v391 = (char *)v333 + v389;
            v392 = sub_23FB2D718();
            v393 = v390;
            v337 = (char *)v332;
            v346 = (uint64_t)__srcn;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 32))(v393, v391, v392);
            break;
          case 4:
            *(_QWORD *)v332 = *(_QWORD *)v333;
            v341 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            __srcj = (void *)v335;
            v342 = (char *)v332 + v341;
            v343 = (char *)v333 + v341;
            v344 = sub_23FB2D718();
            v345 = v342;
            v337 = (char *)v332;
            v346 = (uint64_t)__srcj;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v344 - 8) + 32))(v345, v343, v344);
            break;
          default:
            v394 = *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64);
            v395 = v335;
            v337 = (char *)v332;
            v346 = v395;
            memcpy(v337, v333, v394);
            goto LABEL_216;
        }
        swift_storeEnumTagMultiPayload();
LABEL_216:
        v339 = v696;
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v337, 0, 1, v346);
        v338 = v688;
        goto LABEL_217;
      case 3u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        __dst = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v35 = __dst[5];
        v27 = (_DWORD *)((char *)v8 + v35);
        v28 = (_DWORD *)((char *)v9 + v35);
        v36 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v36))
        {
LABEL_30:
          v37 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          goto LABEL_197;
        }
        v698 = v36;
        v151 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v28, 1, v151))
        {
LABEL_77:
          v156 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
          v157 = v28;
          goto LABEL_196;
        }
        v247 = swift_getEnumCaseMultiPayload();
        v683 = v28;
        switch(v247)
        {
          case 9:
LABEL_191:
            __srck = (void *)v151;
            v248 = (uint64_t)v27;
            *v27 = *v28;
            *(_OWORD *)(v27 + 2) = *(_OWORD *)(v28 + 2);
            v347 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v348 = (char *)v27 + v347;
            v644 = (char *)v28 + v347;
            v251 = (uint64_t)__srck;
            v349 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v349 - 8) + 32))(v348, v644, v349);
            break;
          case 5:
LABEL_192:
            __srcl = (void *)v151;
            v248 = (uint64_t)v27;
            *(_QWORD *)v27 = *(_QWORD *)v28;
            v350 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v351 = (char *)v27 + v350;
            v645 = (char *)v28 + v350;
            v251 = (uint64_t)__srcl;
            v352 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 32))(v351, v645, v352);
            break;
          case 4:
LABEL_127:
            __srcg = (void *)v151;
            v248 = (uint64_t)v27;
            *(_QWORD *)v27 = *(_QWORD *)v28;
            v249 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v250 = (char *)v27 + v249;
            v641 = (char *)v28 + v249;
            v251 = (uint64_t)__srcg;
            v252 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v250, v641, v252);
            break;
          default:
LABEL_194:
            v353 = *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64);
            v354 = v28;
            v251 = v151;
            v248 = (uint64_t)v27;
            memcpy(v27, v354, v353);
LABEL_195:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v248, 0, 1, v251);
            v27 = (_DWORD *)v248;
            v157 = v683;
LABEL_196:
            v355 = *(int *)(v698 + 20);
            v356 = (char *)v27 + v355;
            v689 = (char *)v157 + v355;
            v357 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 32))(v356, v689, v357);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v27, 0, 1, v698);
LABEL_197:
            v358 = __dst[6];
            v359 = (char *)v8 + v358;
            v360 = (char *)v9 + v358;
            v361 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 32))(v359, v360, v361);
            goto LABEL_226;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_195;
      case 4u:
        __dstb = (int *)type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, (uint64_t)__dstb))
        {
          v38 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          goto LABEL_204;
        }
        v158 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v158))
        {
          v159 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
          goto LABEL_203;
        }
        v253 = swift_getEnumCaseMultiPayload();
        switch(v253)
        {
          case 9:
            *v8 = *v9;
            *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
            v362 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v363 = (char *)v8 + v362;
            v364 = (char *)v9 + v362;
            v365 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 32))(v363, v364, v365);
            goto LABEL_200;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v366 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v367 = (char *)v8 + v366;
            v368 = (char *)v9 + v366;
            v369 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32))(v367, v368, v369);
            goto LABEL_200;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v254 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v255 = (char *)v8 + v254;
            v256 = (char *)v9 + v254;
            v257 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 32))(v255, v256, v257);
LABEL_200:
            swift_storeEnumTagMultiPayload();
            goto LABEL_202;
        }
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
LABEL_202:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v158);
LABEL_203:
        v370 = __dstb[5];
        v371 = (char *)v8 + v370;
        v372 = (char *)v9 + v370;
        v373 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v373 - 8) + 32))(v371, v372, v373);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, (uint64_t)__dstb);
LABEL_204:
        v706 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v374 = *(int *)(v706 + 20);
        v375 = (_DWORD *)((char *)v8 + v374);
        v376 = (_DWORD *)((char *)v9 + v374);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9 + v374, 1, (uint64_t)__dstb))
        {
          v377 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
LABEL_225:
          v415 = *(int *)(v706 + 24);
          v416 = (char *)v8 + v415;
          v417 = (char *)v9 + v415;
          v418 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v418 - 8) + 32))(v416, v417, v418);
LABEL_226:
          swift_storeEnumTagMultiPayload();
LABEL_227:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v13);
          goto LABEL_228;
        }
        v378 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v376, 1, v378))
        {
          v379 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v375, v376, *(_QWORD *)(*(_QWORD *)(v379 - 8) + 64));
LABEL_224:
          v410 = __dstb[5];
          v411 = (uint64_t)v375;
          v412 = (char *)v375 + v410;
          v413 = (char *)v376 + v410;
          v414 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 32))(v412, v413, v414);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v411, 0, 1, (uint64_t)__dstb);
          goto LABEL_225;
        }
        v690 = (_QWORD *)v378;
        v380 = swift_getEnumCaseMultiPayload();
        if (v380 == 9)
        {
          v381 = (uint64_t)v375;
          *v375 = *v376;
          *(_OWORD *)(v375 + 2) = *(_OWORD *)(v376 + 2);
          v404 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v405 = (char *)v375 + v404;
          v647 = (char *)v376 + v404;
          v406 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v406 - 8) + 32))(v405, v647, v406);
        }
        else
        {
          v381 = (uint64_t)v375;
          if (v380 == 5)
          {
            *(_QWORD *)v375 = *(_QWORD *)v376;
            v407 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v408 = (char *)v375 + v407;
            v648 = (char *)v376 + v407;
            v409 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v409 - 8) + 32))(v408, v648, v409);
          }
          else
          {
            if (v380 != 4)
            {
              memcpy(v375, v376, *(_QWORD *)(*(v690 - 1) + 64));
              goto LABEL_223;
            }
            *(_QWORD *)v375 = *(_QWORD *)v376;
            v382 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v637 = (char *)v376 + v382;
            v646 = (char *)v375 + v382;
            v383 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v383 - 8) + 32))(v646, v637, v383);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_223:
        v375 = (_DWORD *)v381;
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v381, 0, 1, (uint64_t)v690);
        goto LABEL_224;
      case 5u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v40 = (char *)v8 + v39;
        v41 = (char *)v9 + v39;
        v42 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
        goto LABEL_226;
      case 6u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v44 = (char *)v8 + v43;
        v45 = (char *)v9 + v43;
        v46 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        goto LABEL_226;
      case 7u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        __dst = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v47 = __dst[5];
        v48 = (char *)v8 + v47;
        v49 = (char *)v9 + v47;
        v50 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v49, 1, v50))
        {
          v51 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v48 = *(_QWORD *)v49;
          v48[8] = v49[8];
          v160 = *(int *)(v50 + 20);
          v699 = &v48[v160];
          v161 = &v49[v160];
          v162 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v699, v161, v162);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v48, 0, 1, v50);
        }
        goto LABEL_197;
      case 8u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v53 = (char *)v8 + v52;
        v54 = (char *)v9 + v52;
        v55 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        goto LABEL_226;
      case 9u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
        v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v57 = (char *)v8 + v56;
        v58 = (char *)v9 + v56;
        v59 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_226;
      case 0xAu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v61 = (char *)v8 + v60;
        v62 = (char *)v9 + v60;
        v63 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_226;
      case 0xBu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v65 = (char *)v8 + v64;
        v66 = (char *)v9 + v64;
        v67 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
        goto LABEL_226;
      case 0xCu:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v69 = (char *)v8 + v68;
        v70 = (char *)v9 + v68;
        v71 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
        goto LABEL_226;
      case 0xDu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v73 = (char *)v8 + v72;
        v74 = (char *)v9 + v72;
        v75 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_226;
      case 0xEu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v76 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v77 = (char *)v8 + v76;
        v78 = (char *)v9 + v76;
        v79 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
        goto LABEL_226;
      case 0xFu:
      case 0x11u:
        v80 = sub_23FB2D718();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v8, v9, v80);
        goto LABEL_226;
      case 0x10u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v82 = (char *)v8 + v81;
        v83 = (char *)v9 + v81;
        v84 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
        goto LABEL_226;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_227;
    }
  }
LABEL_7:
  v15 = sub_23F6916B8(&qword_256EB22C8);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_358:
  v632 = *(int *)(a3 + 24);
  v633 = (char *)a1 + v632;
  v634 = (char *)a2 + v632;
  v635 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v635 - 8) + 40))(v633, v634, v635);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatAssignExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA649AC()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatAssignExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA649C4()
{
  sub_23FAB8268();
}

void sub_23FA649D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, qword_256EBAC90, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  void (*v227)(char *, char *, uint64_t);
  void (*v228)(char *, char *, uint64_t);
  void (*v229)(char *, char *, uint64_t);
  void (*v230)(char *, char *, uint64_t);
  void (*v231)(char *, char *, uint64_t);
  void (*v232)(char *, char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  void (*v239)(char *, char *, uint64_t);
  void (*v240)(char *, char *, uint64_t);
  void (*v241)(char *, char *, uint64_t);
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EB22D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
          {
            v11 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v92 = a2[1];
                *a1 = *a2;
                a1[1] = v92;
                swift_bridgeObjectRetain();
                goto LABEL_53;
              case 4u:
                *a1 = *a2;
                v107 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v108 = (char *)a1 + v107;
                v109 = (char *)a2 + v107;
                v110 = sub_23FB2D718();
                v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
                swift_bridgeObjectRetain();
                v111(v108, v109, v110);
                goto LABEL_53;
              case 5u:
                *a1 = *a2;
                v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v113 = (char *)a1 + v112;
                v114 = (char *)a2 + v112;
                v115 = sub_23FB2D718();
                v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
                swift_bridgeObjectRetain();
                v116(v113, v114, v115);
                goto LABEL_53;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v117 = a2[2];
                a1[1] = a2[1];
                a1[2] = v117;
                v118 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v119 = (char *)a1 + v118;
                v120 = (char *)a2 + v118;
                v121 = sub_23FB2D718();
                v122 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
                swift_bridgeObjectRetain();
                v122(v119, v120, v121);
LABEL_53:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v10);
          }
          v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v124 = (char *)a1 + v123;
          v125 = (char *)a2 + v123;
          v126 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
          goto LABEL_112;
        case 1u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v12 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v13 = *(int *)(v12 + 20);
          v14 = (uint64_t *)((char *)a1 + v13);
          v15 = (uint64_t *)((char *)a2 + v13);
          v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))goto LABEL_14;
          v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v93))goto LABEL_37;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v103 = v15[1];
              *v14 = *v15;
              v14[1] = v103;
              swift_bridgeObjectRetain();
              goto LABEL_60;
            case 4u:
              *v14 = *v15;
              v127 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v242 = (char *)v15 + v127;
              v257 = (char *)v14 + v127;
              v128 = sub_23FB2D718();
              v227 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
              swift_bridgeObjectRetain();
              v227(v257, v242, v128);
              goto LABEL_60;
            case 5u:
              *v14 = *v15;
              v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v243 = (char *)v15 + v129;
              v258 = (char *)v14 + v129;
              v130 = sub_23FB2D718();
              v228 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
              swift_bridgeObjectRetain();
              v228(v258, v243, v130);
              goto LABEL_60;
            case 9u:
              *(_DWORD *)v14 = *(_DWORD *)v15;
              v131 = v15[2];
              v14[1] = v15[1];
              v14[2] = v131;
              v132 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v244 = (char *)v15 + v132;
              v259 = (char *)v14 + v132;
              v133 = sub_23FB2D718();
              v229 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
              swift_bridgeObjectRetain();
              v229(v259, v244, v133);
LABEL_60:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
              break;
          }
          goto LABEL_80;
        case 2u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v17 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v18 = v17[5];
          v19 = (uint64_t *)((char *)a1 + v18);
          v20 = (uint64_t *)((char *)a2 + v18);
          v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v21))
          {
            v22 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
          else
          {
            v94 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v94))
            {
              v95 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v104 = v20[1];
                  *v19 = *v20;
                  v19[1] = v104;
                  swift_bridgeObjectRetain();
                  goto LABEL_66;
                case 4u:
                  *v19 = *v20;
                  v134 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v245 = (char *)v20 + v134;
                  v260 = (char *)v19 + v134;
                  v135 = sub_23FB2D718();
                  v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v230(v260, v245, v135);
                  goto LABEL_66;
                case 5u:
                  *v19 = *v20;
                  v136 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v246 = (char *)v20 + v136;
                  v261 = (char *)v19 + v136;
                  v137 = sub_23FB2D718();
                  v231 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v231(v261, v246, v137);
                  goto LABEL_66;
                case 9u:
                  *(_DWORD *)v19 = *(_DWORD *)v20;
                  v138 = v20[2];
                  v19[1] = v20[1];
                  v19[2] = v138;
                  v139 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v247 = (char *)v20 + v139;
                  v262 = (char *)v19 + v139;
                  v140 = sub_23FB2D718();
                  v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v232(v262, v247, v140);
LABEL_66:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v94);
            }
            v141 = *(int *)(v21 + 20);
            v142 = (char *)v19 + v141;
            v143 = (char *)v20 + v141;
            v144 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v143, v144);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v21);
          }
          v145 = v17[6];
          v146 = (uint64_t *)((char *)a1 + v145);
          v147 = (uint64_t *)((char *)a2 + v145);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v145, 1, v21))
          {
            v148 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          }
          else
          {
            v149 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v147, 1, v149))
            {
              v150 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v151 = v147[1];
                  *v146 = *v147;
                  v146[1] = v151;
                  swift_bridgeObjectRetain();
                  goto LABEL_100;
                case 4u:
                  *v146 = *v147;
                  v192 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v251 = (char *)v147 + v192;
                  v266 = (char *)v146 + v192;
                  v193 = sub_23FB2D718();
                  v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v236(v266, v251, v193);
                  goto LABEL_100;
                case 5u:
                  *v146 = *v147;
                  v194 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v252 = (char *)v147 + v194;
                  v267 = (char *)v146 + v194;
                  v195 = sub_23FB2D718();
                  v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v237(v267, v252, v195);
                  goto LABEL_100;
                case 9u:
                  *(_DWORD *)v146 = *(_DWORD *)v147;
                  v196 = v147[2];
                  v146[1] = v147[1];
                  v146[2] = v196;
                  v197 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v253 = (char *)v147 + v197;
                  v268 = (char *)v146 + v197;
                  v198 = sub_23FB2D718();
                  v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v238(v268, v253, v198);
LABEL_100:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v146, 0, 1, v149);
            }
            v199 = *(int *)(v21 + 20);
            v200 = (char *)v146 + v199;
            v201 = (char *)v147 + v199;
            v202 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v200, v201, v202);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v146, 0, 1, v21);
          }
          v203 = v17[7];
          v204 = (char *)a1 + v203;
          v205 = (char *)a2 + v203;
          v206 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v204, v205, v206);
          goto LABEL_112;
        case 3u:
          v23 = a2[1];
          *a1 = *a2;
          a1[1] = v23;
          v12 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v24 = *(int *)(v12 + 20);
          v14 = (uint64_t *)((char *)a1 + v24);
          v15 = (uint64_t *)((char *)a2 + v24);
          v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v16))
          {
LABEL_14:
            v25 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v15, 1, v93))
            {
LABEL_37:
              v96 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v105 = v15[1];
                  *v14 = *v15;
                  v14[1] = v105;
                  swift_bridgeObjectRetain();
                  goto LABEL_79;
                case 4u:
                  *v14 = *v15;
                  v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v248 = (char *)v15 + v152;
                  v263 = (char *)v14 + v152;
                  v153 = sub_23FB2D718();
                  v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v233(v263, v248, v153);
                  goto LABEL_79;
                case 5u:
                  *v14 = *v15;
                  v154 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v249 = (char *)v15 + v154;
                  v264 = (char *)v14 + v154;
                  v155 = sub_23FB2D718();
                  v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v234(v264, v249, v155);
                  goto LABEL_79;
                case 9u:
                  *(_DWORD *)v14 = *(_DWORD *)v15;
                  v156 = v15[2];
                  v14[1] = v15[1];
                  v14[2] = v156;
                  v157 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v250 = (char *)v15 + v157;
                  v265 = (char *)v14 + v157;
                  v158 = sub_23FB2D718();
                  v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v235(v265, v250, v158);
LABEL_79:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
                  break;
              }
LABEL_80:
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v93);
            }
            v159 = *(int *)(v16 + 20);
            v160 = (char *)v14 + v159;
            v161 = (char *)v15 + v159;
            v162 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v160, v161, v162);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v14, 0, 1, v16);
          }
LABEL_82:
          v163 = *(int *)(v12 + 24);
          v164 = (char *)a1 + v163;
          v165 = (char *)a2 + v163;
          v166 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v164, v165, v166);
LABEL_112:
          swift_storeEnumTagMultiPayload();
LABEL_113:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
          break;
        case 4u:
          v26 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v26))
          {
            v27 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
          }
          else
          {
            v97 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v97))
            {
              v98 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v106 = a2[1];
                  *a1 = *a2;
                  a1[1] = v106;
                  swift_bridgeObjectRetain();
                  goto LABEL_87;
                case 4u:
                  *a1 = *a2;
                  v167 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v272 = (char *)a1 + v167;
                  v168 = (char *)a2 + v167;
                  v169 = sub_23FB2D718();
                  v170 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v170(v272, v168, v169);
                  goto LABEL_87;
                case 5u:
                  *a1 = *a2;
                  v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v273 = (char *)a1 + v171;
                  v172 = (char *)a2 + v171;
                  v173 = sub_23FB2D718();
                  v174 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v174(v273, v172, v173);
                  goto LABEL_87;
                case 9u:
                  *(_DWORD *)a1 = *(_DWORD *)a2;
                  v175 = a2[2];
                  a1[1] = a2[1];
                  a1[2] = v175;
                  v176 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v274 = (char *)a1 + v176;
                  v177 = (char *)a2 + v176;
                  v178 = sub_23FB2D718();
                  v179 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v179(v274, v177, v178);
LABEL_87:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v97);
            }
            v180 = *(int *)(v26 + 20);
            v181 = (char *)a1 + v180;
            v182 = (char *)a2 + v180;
            v183 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v26);
          }
          v184 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v185 = *(int *)(v184 + 20);
          v186 = (uint64_t *)((char *)a1 + v185);
          v187 = (uint64_t *)((char *)a2 + v185);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v185, 1, v26))
          {
            v188 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
          }
          else
          {
            v189 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v187, 1, v189))
            {
              v190 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v191 = v187[1];
                  *v186 = *v187;
                  v186[1] = v191;
                  swift_bridgeObjectRetain();
                  goto LABEL_108;
                case 4u:
                  *v186 = *v187;
                  v207 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v254 = (char *)v187 + v207;
                  v269 = (char *)v186 + v207;
                  v208 = sub_23FB2D718();
                  v239 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v239(v269, v254, v208);
                  goto LABEL_108;
                case 5u:
                  *v186 = *v187;
                  v209 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v255 = (char *)v187 + v209;
                  v270 = (char *)v186 + v209;
                  v210 = sub_23FB2D718();
                  v240 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v240(v270, v255, v210);
                  goto LABEL_108;
                case 9u:
                  *(_DWORD *)v186 = *(_DWORD *)v187;
                  v211 = v187[2];
                  v186[1] = v187[1];
                  v186[2] = v211;
                  v212 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v256 = (char *)v187 + v212;
                  v271 = (char *)v186 + v212;
                  v213 = sub_23FB2D718();
                  v241 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v241(v271, v256, v213);
LABEL_108:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v186, 0, 1, v189);
            }
            v214 = *(int *)(v26 + 20);
            v215 = (char *)v186 + v214;
            v216 = (char *)v187 + v214;
            v217 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 16))(v215, v216, v217);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v186, 0, 1, v26);
          }
          v218 = *(int *)(v184 + 24);
          v219 = (char *)a1 + v218;
          v220 = (char *)a2 + v218;
          v221 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v219, v220, v221);
          goto LABEL_112;
        case 5u:
          v28 = a2[1];
          *a1 = *a2;
          a1[1] = v28;
          a1[2] = a2[2];
          v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = sub_23FB2D718();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(v30, v31, v32);
          goto LABEL_112;
        case 6u:
          *a1 = *a2;
          v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          v35 = (char *)a1 + v34;
          v36 = (char *)a2 + v34;
          v37 = sub_23FB2D718();
          v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v38(v35, v36, v37);
          goto LABEL_112;
        case 7u:
          v39 = a2[1];
          *a1 = *a2;
          a1[1] = v39;
          v12 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v40 = *(int *)(v12 + 20);
          v41 = (char *)a1 + v40;
          v42 = (char *)a2 + v40;
          v43 = type metadata accessor for TranscriptProtoASTPickType(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v42, 1, v43))
          {
            v44 = sub_23F6916B8(&qword_256EA8510);
            memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v41 = *(_QWORD *)v42;
            v41[8] = v42[8];
            v99 = *(int *)(v43 + 20);
            v100 = &v41[v99];
            v101 = &v42[v99];
            v102 = sub_23FB2D718();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v100, v101, v102);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v41, 0, 1, v43);
          }
          goto LABEL_82;
        case 8u:
          v45 = a2[1];
          *a1 = *a2;
          a1[1] = v45;
          v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v47 = (char *)a1 + v46;
          v48 = (char *)a2 + v46;
          v49 = sub_23FB2D718();
          v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v47, v48, v49);
          goto LABEL_112;
        case 9u:
          v51 = a2[1];
          *a1 = *a2;
          a1[1] = v51;
          *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
          v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = sub_23FB2D718();
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(v53, v54, v55);
          goto LABEL_112;
        case 0xAu:
          v57 = a2[1];
          *a1 = *a2;
          a1[1] = v57;
          v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          v59 = (char *)a1 + v58;
          v60 = (char *)a2 + v58;
          v61 = sub_23FB2D718();
          v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
          swift_bridgeObjectRetain();
          v62(v59, v60, v61);
          goto LABEL_112;
        case 0xBu:
          v63 = a2[1];
          *a1 = *a2;
          a1[1] = v63;
          v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          v65 = (char *)a1 + v64;
          v66 = (char *)a2 + v64;
          v67 = sub_23FB2D718();
          v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v68(v65, v66, v67);
          goto LABEL_112;
        case 0xCu:
          *a1 = *a2;
          v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          v70 = (char *)a1 + v69;
          v71 = (char *)a2 + v69;
          v72 = sub_23FB2D718();
          v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v73(v70, v71, v72);
          goto LABEL_112;
        case 0xDu:
          v74 = a2[1];
          *a1 = *a2;
          a1[1] = v74;
          v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          v76 = (char *)a1 + v75;
          v77 = (char *)a2 + v75;
          v78 = sub_23FB2D718();
          v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
          swift_bridgeObjectRetain();
          v79(v76, v77, v78);
          goto LABEL_112;
        case 0xEu:
          v80 = a2[1];
          *a1 = *a2;
          a1[1] = v80;
          v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          v82 = (char *)a1 + v81;
          v83 = (char *)a2 + v81;
          v84 = sub_23FB2D718();
          v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          v85(v82, v83, v84);
          goto LABEL_112;
        case 0xFu:
        case 0x11u:
          v86 = sub_23FB2D718();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(a1, a2, v86);
          goto LABEL_112;
        case 0x10u:
          *a1 = *a2;
          v87 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v88 = (char *)a1 + v87;
          v89 = (char *)a2 + v87;
          v90 = sub_23FB2D718();
          v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16);
          swift_bridgeObjectRetain();
          v91(v88, v89, v90);
          goto LABEL_112;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          goto LABEL_113;
      }
    }
    v222 = *(int *)(a3 + 20);
    v223 = (char *)a1 + v222;
    v224 = (char *)a2 + v222;
    v225 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v223, v224, v225);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatExpr(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t updated;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v20 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_36;
            case 5u:
              swift_bridgeObjectRelease();
              v20 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_36:
              v21 = *(int *)(v20 + 20);
              goto LABEL_38;
            case 9u:
              swift_bridgeObjectRelease();
              v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_38:
              v22 = a1 + v21;
              v23 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
              break;
            default:
              break;
          }
        }
        updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
        goto LABEL_40;
      case 1u:
        v7 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v8 = a1 + *(int *)(v7 + 20);
        v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))goto LABEL_47;
        v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              goto LABEL_17;
            case 4u:
              goto LABEL_41;
            case 5u:
              goto LABEL_42;
            case 9u:
              goto LABEL_44;
            default:
              goto LABEL_46;
          }
        }
        goto LABEL_46;
      case 2u:
        v11 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v12 = a1 + v11[5];
        v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13))
        {
          v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v14))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v30 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_50;
              case 5u:
                swift_bridgeObjectRelease();
                v30 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_50:
                v31 = *(int *)(v30 + 20);
                goto LABEL_52;
              case 9u:
                swift_bridgeObjectRelease();
                v31 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_52:
                v32 = v12 + v31;
                v33 = sub_23FB2D718();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
                break;
              default:
                break;
            }
          }
          v34 = v12 + *(int *)(v13 + 20);
          v35 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        }
        v36 = a1 + v11[6];
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v36, 1, v13))
        {
          v37 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v36, 1, v37))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v47 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_70;
              case 5u:
                swift_bridgeObjectRelease();
                v47 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_70:
                v48 = *(int *)(v47 + 20);
                goto LABEL_72;
              case 9u:
                swift_bridgeObjectRelease();
                v48 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_72:
                v49 = v36 + v48;
                v50 = sub_23FB2D718();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
                break;
              default:
                break;
            }
          }
          v51 = v36 + *(int *)(v13 + 20);
          v52 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
        }
        v18 = v11[7];
        goto LABEL_82;
      case 3u:
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v8 = a1 + *(int *)(v7 + 20);
        v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))goto LABEL_47;
        v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v15))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
LABEL_17:
              swift_bridgeObjectRelease();
              break;
            case 4u:
LABEL_41:
              swift_bridgeObjectRelease();
              v24 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_43;
            case 5u:
LABEL_42:
              swift_bridgeObjectRelease();
              v24 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_43:
              v25 = *(int *)(v24 + 20);
              goto LABEL_45;
            case 9u:
LABEL_44:
              swift_bridgeObjectRelease();
              v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_45:
              v26 = v8 + v25;
              v27 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
              break;
            default:
              break;
          }
        }
LABEL_46:
        v28 = v8 + *(int *)(v9 + 20);
        v29 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
LABEL_47:
        v18 = *(int *)(v7 + 24);
        goto LABEL_82;
      case 4u:
        v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v16))
        {
          v17 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v17))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v38 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_60;
              case 5u:
                swift_bridgeObjectRelease();
                v38 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_60:
                v39 = *(int *)(v38 + 20);
                goto LABEL_62;
              case 9u:
                swift_bridgeObjectRelease();
                v39 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_62:
                v40 = a1 + v39;
                v41 = sub_23FB2D718();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
                break;
              default:
                break;
            }
          }
          v42 = a1 + *(int *)(v16 + 20);
          v43 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
        }
        v44 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v45 = a1 + *(int *)(v44 + 20);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v45, 1, v16))
        {
          v46 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v45, 1, v46))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v53 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_77;
              case 5u:
                swift_bridgeObjectRelease();
                v53 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_77:
                v54 = *(int *)(v53 + 20);
                goto LABEL_79;
              case 9u:
                swift_bridgeObjectRelease();
                v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_79:
                v55 = v45 + v54;
                v56 = sub_23FB2D718();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
                break;
              default:
                break;
            }
          }
          v57 = v45 + *(int *)(v16 + 20);
          v58 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
        }
        v18 = *(int *)(v44 + 24);
        goto LABEL_82;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        goto LABEL_82;
      case 6u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
        goto LABEL_40;
      case 7u:
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v8 = a1 + *(int *)(v7 + 20);
        v9 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))goto LABEL_46;
        goto LABEL_47;
      case 8u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
        goto LABEL_40;
      case 9u:
        swift_bridgeObjectRelease();
        v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        goto LABEL_82;
      case 0xAu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
        goto LABEL_40;
      case 0xBu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
        goto LABEL_40;
      case 0xCu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
        goto LABEL_40;
      case 0xDu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
        goto LABEL_40;
      case 0xEu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
        goto LABEL_40;
      case 0xFu:
      case 0x11u:
        v5 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      case 0x10u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_40:
        v18 = *(int *)(updated + 20);
LABEL_82:
        v59 = a1 + v18;
        v60 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v59, v60);
        break;
      default:
        break;
    }
  }
  v61 = a1 + *(int *)(a2 + 20);
  v62 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  void (*v225)(char *, char *, uint64_t);
  void (*v226)(char *, char *, uint64_t);
  void (*v227)(char *, char *, uint64_t);
  void (*v228)(char *, char *, uint64_t);
  void (*v229)(char *, char *, uint64_t);
  void (*v230)(char *, char *, uint64_t);
  void (*v231)(char *, char *, uint64_t);
  void (*v232)(char *, char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  void (*v239)(char *, char *, uint64_t);
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EB22D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
        {
          v9 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v90 = a2[1];
              *a1 = *a2;
              a1[1] = v90;
              swift_bridgeObjectRetain();
              goto LABEL_51;
            case 4u:
              *a1 = *a2;
              v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v106 = (char *)a1 + v105;
              v107 = (char *)a2 + v105;
              v108 = sub_23FB2D718();
              v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v106, v107, v108);
              goto LABEL_51;
            case 5u:
              *a1 = *a2;
              v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v111 = (char *)a1 + v110;
              v112 = (char *)a2 + v110;
              v113 = sub_23FB2D718();
              v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
              swift_bridgeObjectRetain();
              v114(v111, v112, v113);
              goto LABEL_51;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              v115 = a2[2];
              a1[1] = a2[1];
              a1[2] = v115;
              v116 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v117 = (char *)a1 + v116;
              v118 = (char *)a2 + v116;
              v119 = sub_23FB2D718();
              v120 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
              swift_bridgeObjectRetain();
              v120(v117, v118, v119);
LABEL_51:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
        }
        v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v122 = (char *)a1 + v121;
        v123 = (char *)a2 + v121;
        v124 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
        goto LABEL_110;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v10 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v11 = *(int *)(v10 + 20);
        v12 = (_QWORD *)((char *)a1 + v11);
        v13 = (_QWORD *)((char *)a2 + v11);
        v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))goto LABEL_12;
        v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v91))goto LABEL_35;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v101 = v13[1];
            *v12 = *v13;
            v12[1] = v101;
            swift_bridgeObjectRetain();
            goto LABEL_58;
          case 4u:
            *v12 = *v13;
            v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v240 = (char *)v13 + v125;
            v255 = (char *)v12 + v125;
            v126 = sub_23FB2D718();
            v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v225(v255, v240, v126);
            goto LABEL_58;
          case 5u:
            *v12 = *v13;
            v127 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v241 = (char *)v13 + v127;
            v256 = (char *)v12 + v127;
            v128 = sub_23FB2D718();
            v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
            swift_bridgeObjectRetain();
            v226(v256, v241, v128);
            goto LABEL_58;
          case 9u:
            *(_DWORD *)v12 = *(_DWORD *)v13;
            v129 = v13[2];
            v12[1] = v13[1];
            v12[2] = v129;
            v130 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v242 = (char *)v13 + v130;
            v257 = (char *)v12 + v130;
            v131 = sub_23FB2D718();
            v227 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16);
            swift_bridgeObjectRetain();
            v227(v257, v242, v131);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
            break;
        }
        goto LABEL_78;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v16 = v15[5];
        v17 = (_QWORD *)((char *)a1 + v16);
        v18 = (_QWORD *)((char *)a2 + v16);
        v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
        {
          v20 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v92))
          {
            v93 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v102 = v18[1];
                *v17 = *v18;
                v17[1] = v102;
                swift_bridgeObjectRetain();
                goto LABEL_64;
              case 4u:
                *v17 = *v18;
                v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v243 = (char *)v18 + v132;
                v258 = (char *)v17 + v132;
                v133 = sub_23FB2D718();
                v228 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
                swift_bridgeObjectRetain();
                v228(v258, v243, v133);
                goto LABEL_64;
              case 5u:
                *v17 = *v18;
                v134 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v244 = (char *)v18 + v134;
                v259 = (char *)v17 + v134;
                v135 = sub_23FB2D718();
                v229 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
                swift_bridgeObjectRetain();
                v229(v259, v244, v135);
                goto LABEL_64;
              case 9u:
                *(_DWORD *)v17 = *(_DWORD *)v18;
                v136 = v18[2];
                v17[1] = v18[1];
                v17[2] = v136;
                v137 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v245 = (char *)v18 + v137;
                v260 = (char *)v17 + v137;
                v138 = sub_23FB2D718();
                v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
                swift_bridgeObjectRetain();
                v230(v260, v245, v138);
LABEL_64:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v92);
          }
          v139 = *(int *)(v19 + 20);
          v140 = (char *)v17 + v139;
          v141 = (char *)v18 + v139;
          v142 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
        }
        v143 = v15[6];
        v144 = (_QWORD *)((char *)a1 + v143);
        v145 = (_QWORD *)((char *)a2 + v143);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v143, 1, v19))
        {
          v146 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          v147 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v145, 1, v147))
          {
            v148 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v149 = v145[1];
                *v144 = *v145;
                v144[1] = v149;
                swift_bridgeObjectRetain();
                goto LABEL_98;
              case 4u:
                *v144 = *v145;
                v190 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v249 = (char *)v145 + v190;
                v264 = (char *)v144 + v190;
                v191 = sub_23FB2D718();
                v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16);
                swift_bridgeObjectRetain();
                v234(v264, v249, v191);
                goto LABEL_98;
              case 5u:
                *v144 = *v145;
                v192 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v250 = (char *)v145 + v192;
                v265 = (char *)v144 + v192;
                v193 = sub_23FB2D718();
                v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16);
                swift_bridgeObjectRetain();
                v235(v265, v250, v193);
                goto LABEL_98;
              case 9u:
                *(_DWORD *)v144 = *(_DWORD *)v145;
                v194 = v145[2];
                v144[1] = v145[1];
                v144[2] = v194;
                v195 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v251 = (char *)v145 + v195;
                v266 = (char *)v144 + v195;
                v196 = sub_23FB2D718();
                v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16);
                swift_bridgeObjectRetain();
                v236(v266, v251, v196);
LABEL_98:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v144, 0, 1, v147);
          }
          v197 = *(int *)(v19 + 20);
          v198 = (char *)v144 + v197;
          v199 = (char *)v145 + v197;
          v200 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(v198, v199, v200);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v144, 0, 1, v19);
        }
        v201 = v15[7];
        v202 = (char *)a1 + v201;
        v203 = (char *)a2 + v201;
        v204 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 16))(v202, v203, v204);
        goto LABEL_110;
      case 3u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        v10 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v22 = *(int *)(v10 + 20);
        v12 = (_QWORD *)((char *)a1 + v22);
        v13 = (_QWORD *)((char *)a2 + v22);
        v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
        {
LABEL_12:
          v23 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v91))
          {
LABEL_35:
            v94 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v103 = v13[1];
                *v12 = *v13;
                v12[1] = v103;
                swift_bridgeObjectRetain();
                goto LABEL_77;
              case 4u:
                *v12 = *v13;
                v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v246 = (char *)v13 + v150;
                v261 = (char *)v12 + v150;
                v151 = sub_23FB2D718();
                v231 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
                swift_bridgeObjectRetain();
                v231(v261, v246, v151);
                goto LABEL_77;
              case 5u:
                *v12 = *v13;
                v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v247 = (char *)v13 + v152;
                v262 = (char *)v12 + v152;
                v153 = sub_23FB2D718();
                v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16);
                swift_bridgeObjectRetain();
                v232(v262, v247, v153);
                goto LABEL_77;
              case 9u:
                *(_DWORD *)v12 = *(_DWORD *)v13;
                v154 = v13[2];
                v12[1] = v13[1];
                v12[2] = v154;
                v155 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v248 = (char *)v13 + v155;
                v263 = (char *)v12 + v155;
                v156 = sub_23FB2D718();
                v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
                swift_bridgeObjectRetain();
                v233(v263, v248, v156);
LABEL_77:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
                break;
            }
LABEL_78:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v91);
          }
          v157 = *(int *)(v14 + 20);
          v158 = (char *)v12 + v157;
          v159 = (char *)v13 + v157;
          v160 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
        }
LABEL_80:
        v161 = *(int *)(v10 + 24);
        v162 = (char *)a1 + v161;
        v163 = (char *)a2 + v161;
        v164 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
LABEL_110:
        swift_storeEnumTagMultiPayload();
LABEL_111:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        break;
      case 4u:
        v24 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v24))
        {
          v25 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v95 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v95))
          {
            v96 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v104 = a2[1];
                *a1 = *a2;
                a1[1] = v104;
                swift_bridgeObjectRetain();
                goto LABEL_85;
              case 4u:
                *a1 = *a2;
                v165 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v270 = (char *)a1 + v165;
                v166 = (char *)a2 + v165;
                v167 = sub_23FB2D718();
                v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
                swift_bridgeObjectRetain();
                v168(v270, v166, v167);
                goto LABEL_85;
              case 5u:
                *a1 = *a2;
                v169 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v271 = (char *)a1 + v169;
                v170 = (char *)a2 + v169;
                v171 = sub_23FB2D718();
                v172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
                swift_bridgeObjectRetain();
                v172(v271, v170, v171);
                goto LABEL_85;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v173 = a2[2];
                a1[1] = a2[1];
                a1[2] = v173;
                v174 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v272 = (char *)a1 + v174;
                v175 = (char *)a2 + v174;
                v176 = sub_23FB2D718();
                v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
                swift_bridgeObjectRetain();
                v177(v272, v175, v176);
LABEL_85:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v95);
          }
          v178 = *(int *)(v24 + 20);
          v179 = (char *)a1 + v178;
          v180 = (char *)a2 + v178;
          v181 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v179, v180, v181);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v24);
        }
        v182 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v183 = *(int *)(v182 + 20);
        v184 = (_QWORD *)((char *)a1 + v183);
        v185 = (_QWORD *)((char *)a2 + v183);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v183, 1, v24))
        {
          v186 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
        }
        else
        {
          v187 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v185, 1, v187))
          {
            v188 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v189 = v185[1];
                *v184 = *v185;
                v184[1] = v189;
                swift_bridgeObjectRetain();
                goto LABEL_106;
              case 4u:
                *v184 = *v185;
                v205 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v252 = (char *)v185 + v205;
                v267 = (char *)v184 + v205;
                v206 = sub_23FB2D718();
                v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16);
                swift_bridgeObjectRetain();
                v237(v267, v252, v206);
                goto LABEL_106;
              case 5u:
                *v184 = *v185;
                v207 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v253 = (char *)v185 + v207;
                v268 = (char *)v184 + v207;
                v208 = sub_23FB2D718();
                v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16);
                swift_bridgeObjectRetain();
                v238(v268, v253, v208);
                goto LABEL_106;
              case 9u:
                *(_DWORD *)v184 = *(_DWORD *)v185;
                v209 = v185[2];
                v184[1] = v185[1];
                v184[2] = v209;
                v210 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v254 = (char *)v185 + v210;
                v269 = (char *)v184 + v210;
                v211 = sub_23FB2D718();
                v239 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 16);
                swift_bridgeObjectRetain();
                v239(v269, v254, v211);
LABEL_106:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v184, 0, 1, v187);
          }
          v212 = *(int *)(v24 + 20);
          v213 = (char *)v184 + v212;
          v214 = (char *)v185 + v212;
          v215 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v213, v214, v215);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v184, 0, 1, v24);
        }
        v216 = *(int *)(v182 + 24);
        v217 = (char *)a1 + v216;
        v218 = (char *)a2 + v216;
        v219 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v217, v218, v219);
        goto LABEL_110;
      case 5u:
        v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        a1[2] = a2[2];
        v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_23FB2D718();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        goto LABEL_110;
      case 6u:
        *a1 = *a2;
        v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_23FB2D718();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        goto LABEL_110;
      case 7u:
        v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        v10 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v38 = *(int *)(v10 + 20);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41))
        {
          v42 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v39[8] = v40[8];
          v97 = *(int *)(v41 + 20);
          v98 = &v39[v97];
          v99 = &v40[v97];
          v100 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v98, v99, v100);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
        }
        goto LABEL_80;
      case 8u:
        v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = sub_23FB2D718();
        v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        goto LABEL_110;
      case 9u:
        v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v51 = (char *)a1 + v50;
        v52 = (char *)a2 + v50;
        v53 = sub_23FB2D718();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        goto LABEL_110;
      case 0xAu:
        v55 = a2[1];
        *a1 = *a2;
        a1[1] = v55;
        v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_23FB2D718();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v57, v58, v59);
        goto LABEL_110;
      case 0xBu:
        v61 = a2[1];
        *a1 = *a2;
        a1[1] = v61;
        v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_23FB2D718();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        goto LABEL_110;
      case 0xCu:
        *a1 = *a2;
        v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        v70 = sub_23FB2D718();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        goto LABEL_110;
      case 0xDu:
        v72 = a2[1];
        *a1 = *a2;
        a1[1] = v72;
        v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v74 = (char *)a1 + v73;
        v75 = (char *)a2 + v73;
        v76 = sub_23FB2D718();
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        goto LABEL_110;
      case 0xEu:
        v78 = a2[1];
        *a1 = *a2;
        a1[1] = v78;
        v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        v82 = sub_23FB2D718();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        goto LABEL_110;
      case 0xFu:
      case 0x11u:
        v84 = sub_23FB2D718();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(a1, a2, v84);
        goto LABEL_110;
      case 0x10u:
        *a1 = *a2;
        v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v86 = (char *)a1 + v85;
        v87 = (char *)a2 + v85;
        v88 = sub_23FB2D718();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v86, v87, v88);
        goto LABEL_110;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_111;
    }
  }
  v220 = *(int *)(a3 + 20);
  v221 = (char *)a1 + v220;
  v222 = (char *)a2 + v220;
  v223 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v221, v222, v223);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE *v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  void (*v182)(char *, char *, uint64_t);
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  void (*v192)(char *, char *, uint64_t);
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  void (*v206)(char *, char *, uint64_t);
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  void (*v211)(char *, char *, uint64_t);
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  void (*v255)(char *, char *, uint64_t);
  uint64_t v256;
  char *v257;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  char *v261;
  uint64_t v262;
  void (*v263)(char *, char *, uint64_t);
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  _QWORD *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  void (*v342)(char *, char *, uint64_t);
  uint64_t v343;
  char *v344;
  uint64_t v345;
  void (*v346)(char *, char *, uint64_t);
  uint64_t v347;
  char *v348;
  uint64_t v349;
  void (*v350)(char *, char *, uint64_t);
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  _QWORD *v357;
  _QWORD *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  char *v392;
  uint64_t v393;
  void (*v395)(char *, char *, uint64_t);
  void (*v396)(char *, char *, uint64_t);
  void (*v397)(char *, char *, uint64_t);
  void (*v398)(char *, char *, uint64_t);
  void (*v399)(char *, char *, uint64_t);
  void (*v400)(char *, char *, uint64_t);
  void (*v401)(char *, char *, uint64_t);
  void (*v402)(char *, char *, uint64_t);
  void (*v403)(char *, char *, uint64_t);
  void (*v404)(char *, char *, uint64_t);
  void (*v405)(char *, char *, uint64_t);
  void (*v406)(char *, char *, uint64_t);
  void (*v407)(char *, char *, uint64_t);
  void (*v408)(char *, char *, uint64_t);
  void (*v409)(char *, char *, uint64_t);
  void (*v410)(char *, char *, uint64_t);
  void (*v411)(char *, char *, uint64_t);
  void (*v412)(char *, char *, uint64_t);
  void (*v413)(char *, char *, uint64_t);
  void (*v414)(char *, char *, uint64_t);
  void (*v415)(char *, char *, uint64_t);
  void (*v416)(char *, char *, uint64_t);
  void (*v417)(char *, char *, uint64_t);
  void (*v418)(char *, char *, uint64_t);
  void (*v419)(char *, char *, uint64_t);
  void (*v420)(char *, char *, uint64_t);
  void (*v421)(char *, char *, uint64_t);
  void (*v422)(char *, char *, uint64_t);
  void (*v423)(char *, char *, uint64_t);
  void (*v424)(char *, char *, uint64_t);
  char *v425;
  char *v426;
  char *v427;
  char *v428;
  char *v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  char *v437;
  char *v438;
  char *v439;
  char *v440;
  char *v441;
  char *v442;
  char *v443;
  char *v444;
  char *v445;
  char *v446;
  char *v447;
  char *v448;
  char *v449;
  char *v450;
  char *v451;
  char *v452;
  char *v453;
  char *v454;
  char *v455;
  char *v456;
  char *v457;
  char *v458;
  char *v459;
  char *v460;
  char *v461;
  char *v462;
  char *v463;
  char *v464;
  char *v465;
  char *v466;
  char *v467;
  char *v468;
  char *v469;
  char *v470;
  char *v471;
  char *v472;
  char *v473;
  char *v474;
  char *v475;
  char *v476;
  char *v477;
  char *v478;
  char *v479;
  char *v480;
  char *v481;
  char *v482;
  char *v483;
  char *v484;
  char *v485;
  char *v486;
  char *v487;
  char *v488;
  char *v489;
  char *v490;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
          {
            v10 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_100;
              case 4u:
                *a1 = *a2;
                v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v179 = (char *)a1 + v178;
                v180 = (char *)a2 + v178;
                v181 = sub_23FB2D718();
                v182 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16);
                swift_bridgeObjectRetain();
                v182(v179, v180, v181);
                goto LABEL_100;
              case 5u:
                *a1 = *a2;
                v183 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v184 = (char *)a1 + v183;
                v185 = (char *)a2 + v183;
                v186 = sub_23FB2D718();
                v187 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16);
                swift_bridgeObjectRetain();
                v187(v184, v185, v186);
                goto LABEL_100;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                v188 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v189 = (char *)a1 + v188;
                v190 = (char *)a2 + v188;
                v191 = sub_23FB2D718();
                v192 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16);
                swift_bridgeObjectRetain();
                v192(v189, v190, v191);
LABEL_100:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
          }
          v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v194 = (char *)a1 + v193;
          v195 = (char *)a2 + v193;
          v196 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v194, v195, v196);
          goto LABEL_166;
        case 1u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v14 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v15 = *(int *)(v14 + 20);
          v16 = (_QWORD *)((char *)a1 + v15);
          v17 = (_QWORD *)((char *)a2 + v15);
          v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))goto LABEL_20;
          v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v156))goto LABEL_65;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v16 = *v17;
              v16[1] = v17[1];
              swift_bridgeObjectRetain();
              goto LABEL_114;
            case 4u:
              *v16 = *v17;
              v216 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v425 = (char *)v17 + v216;
              v455 = (char *)v16 + v216;
              v217 = sub_23FB2D718();
              v395 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 16);
              swift_bridgeObjectRetain();
              v395(v455, v425, v217);
              goto LABEL_114;
            case 5u:
              *v16 = *v17;
              v218 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v426 = (char *)v17 + v218;
              v456 = (char *)v16 + v218;
              v219 = sub_23FB2D718();
              v396 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16);
              swift_bridgeObjectRetain();
              v396(v456, v426, v219);
              goto LABEL_114;
            case 9u:
              *(_DWORD *)v16 = *(_DWORD *)v17;
              v16[1] = v17[1];
              v16[2] = v17[2];
              v220 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v427 = (char *)v17 + v220;
              v457 = (char *)v16 + v220;
              v221 = sub_23FB2D718();
              v397 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 16);
              swift_bridgeObjectRetain();
              v397(v457, v427, v221);
LABEL_114:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
              break;
          }
          goto LABEL_134;
        case 2u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v19 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v20 = v19[5];
          v21 = (_QWORD *)((char *)a1 + v20);
          v22 = (_QWORD *)((char *)a2 + v20);
          v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
          {
            v24 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          }
          else
          {
            v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v157))
            {
              v158 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v21 = *v22;
                  v21[1] = v22[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_120;
                case 4u:
                  *v21 = *v22;
                  v222 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v428 = (char *)v22 + v222;
                  v458 = (char *)v21 + v222;
                  v223 = sub_23FB2D718();
                  v398 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v398(v458, v428, v223);
                  goto LABEL_120;
                case 5u:
                  *v21 = *v22;
                  v224 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v429 = (char *)v22 + v224;
                  v459 = (char *)v21 + v224;
                  v225 = sub_23FB2D718();
                  v399 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v399(v459, v429, v225);
                  goto LABEL_120;
                case 9u:
                  *(_DWORD *)v21 = *(_DWORD *)v22;
                  v21[1] = v22[1];
                  v21[2] = v22[2];
                  v226 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v430 = (char *)v22 + v226;
                  v460 = (char *)v21 + v226;
                  v227 = sub_23FB2D718();
                  v400 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v400(v460, v430, v227);
LABEL_120:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v157);
            }
            v228 = *(int *)(v23 + 20);
            v229 = (char *)v21 + v228;
            v230 = (char *)v22 + v228;
            v231 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v229, v230, v231);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
          }
          v232 = v19[6];
          v233 = (_QWORD *)((char *)a1 + v232);
          v234 = (_QWORD *)((char *)a2 + v232);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v232, 1, v23))
          {
            v235 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
          }
          else
          {
            v236 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v234, 1, v236))
            {
              v237 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v233 = *v234;
                  v233[1] = v234[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_154;
                case 4u:
                  *v233 = *v234;
                  v275 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v434 = (char *)v234 + v275;
                  v464 = (char *)v233 + v275;
                  v276 = sub_23FB2D718();
                  v404 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v276 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v404(v464, v434, v276);
                  goto LABEL_154;
                case 5u:
                  *v233 = *v234;
                  v277 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v435 = (char *)v234 + v277;
                  v465 = (char *)v233 + v277;
                  v278 = sub_23FB2D718();
                  v405 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v405(v465, v435, v278);
                  goto LABEL_154;
                case 9u:
                  *(_DWORD *)v233 = *(_DWORD *)v234;
                  v233[1] = v234[1];
                  v233[2] = v234[2];
                  v279 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v436 = (char *)v234 + v279;
                  v466 = (char *)v233 + v279;
                  v280 = sub_23FB2D718();
                  v406 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v406(v466, v436, v280);
LABEL_154:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v233, 0, 1, v236);
            }
            v281 = *(int *)(v23 + 20);
            v282 = (char *)v233 + v281;
            v283 = (char *)v234 + v281;
            v284 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(v282, v283, v284);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v233, 0, 1, v23);
          }
          v285 = v19[7];
          v286 = (char *)a1 + v285;
          v287 = (char *)a2 + v285;
          v288 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 16))(v286, v287, v288);
          goto LABEL_166;
        case 3u:
          *a1 = *a2;
          a1[1] = a2[1];
          v14 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v25 = *(int *)(v14 + 20);
          v16 = (_QWORD *)((char *)a1 + v25);
          v17 = (_QWORD *)((char *)a2 + v25);
          v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
          {
LABEL_20:
            v26 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
          }
          else
          {
            v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v156))
            {
LABEL_65:
              v159 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v16 = *v17;
                  v16[1] = v17[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_133;
                case 4u:
                  *v16 = *v17;
                  v238 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v431 = (char *)v17 + v238;
                  v461 = (char *)v16 + v238;
                  v239 = sub_23FB2D718();
                  v401 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v401(v461, v431, v239);
                  goto LABEL_133;
                case 5u:
                  *v16 = *v17;
                  v240 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v432 = (char *)v17 + v240;
                  v462 = (char *)v16 + v240;
                  v241 = sub_23FB2D718();
                  v402 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v402(v462, v432, v241);
                  goto LABEL_133;
                case 9u:
                  *(_DWORD *)v16 = *(_DWORD *)v17;
                  v16[1] = v17[1];
                  v16[2] = v17[2];
                  v242 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v433 = (char *)v17 + v242;
                  v463 = (char *)v16 + v242;
                  v243 = sub_23FB2D718();
                  v403 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v403(v463, v433, v243);
LABEL_133:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
                  break;
              }
LABEL_134:
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v156);
            }
            v244 = *(int *)(v18 + 20);
            v245 = (char *)v16 + v244;
            v246 = (char *)v17 + v244;
            v247 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(v245, v246, v247);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
          }
LABEL_136:
          v248 = *(int *)(v14 + 24);
          v249 = (char *)a1 + v248;
          v250 = (char *)a2 + v248;
          v251 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 16))(v249, v250, v251);
LABEL_166:
          swift_storeEnumTagMultiPayload();
LABEL_167:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
          break;
        case 4u:
          v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v27))
          {
            v28 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            v160 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v160))
            {
              v161 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *a1 = *a2;
                  a1[1] = a2[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_141;
                case 4u:
                  *a1 = *a2;
                  v252 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v485 = (char *)a1 + v252;
                  v253 = (char *)a2 + v252;
                  v254 = sub_23FB2D718();
                  v255 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v255(v485, v253, v254);
                  goto LABEL_141;
                case 5u:
                  *a1 = *a2;
                  v256 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v486 = (char *)a1 + v256;
                  v257 = (char *)a2 + v256;
                  v258 = sub_23FB2D718();
                  v259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v259(v486, v257, v258);
                  goto LABEL_141;
                case 9u:
                  *(_DWORD *)a1 = *(_DWORD *)a2;
                  a1[1] = a2[1];
                  a1[2] = a2[2];
                  v260 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v487 = (char *)a1 + v260;
                  v261 = (char *)a2 + v260;
                  v262 = sub_23FB2D718();
                  v263 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v263(v487, v261, v262);
LABEL_141:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v160);
            }
            v264 = *(int *)(v27 + 20);
            v265 = (char *)a1 + v264;
            v266 = (char *)a2 + v264;
            v267 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 16))(v265, v266, v267);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v27);
          }
          v268 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v269 = *(int *)(v268 + 20);
          v270 = (_QWORD *)((char *)a1 + v269);
          v271 = (_QWORD *)((char *)a2 + v269);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v269, 1, v27))
          {
            v272 = sub_23F6916B8(&qword_256EA84E8);
            memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
          }
          else
          {
            v273 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v271, 1, v273))
            {
              v274 = sub_23F6916B8(&qword_256EA25F0);
              memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v270 = *v271;
                  v270[1] = v271[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_162;
                case 4u:
                  *v270 = *v271;
                  v289 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v437 = (char *)v271 + v289;
                  v467 = (char *)v270 + v289;
                  v290 = sub_23FB2D718();
                  v407 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v407(v467, v437, v290);
                  goto LABEL_162;
                case 5u:
                  *v270 = *v271;
                  v291 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v438 = (char *)v271 + v291;
                  v468 = (char *)v270 + v291;
                  v292 = sub_23FB2D718();
                  v408 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v292 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v408(v468, v438, v292);
                  goto LABEL_162;
                case 9u:
                  *(_DWORD *)v270 = *(_DWORD *)v271;
                  v270[1] = v271[1];
                  v270[2] = v271[2];
                  v293 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v439 = (char *)v271 + v293;
                  v469 = (char *)v270 + v293;
                  v294 = sub_23FB2D718();
                  v409 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v409(v469, v439, v294);
LABEL_162:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
                  break;
              }
              _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v270, 0, 1, v273);
            }
            v295 = *(int *)(v27 + 20);
            v296 = (char *)v270 + v295;
            v297 = (char *)v271 + v295;
            v298 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 16))(v296, v297, v298);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v270, 0, 1, v27);
          }
          v299 = *(int *)(v268 + 24);
          v300 = (char *)a1 + v299;
          v301 = (char *)a2 + v299;
          v302 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 16))(v300, v301, v302);
          goto LABEL_166;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = sub_23FB2D718();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33(v30, v31, v32);
          goto LABEL_166;
        case 6u:
          *a1 = *a2;
          v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          v35 = (char *)a1 + v34;
          v36 = (char *)a2 + v34;
          v37 = sub_23FB2D718();
          v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v38(v35, v36, v37);
          goto LABEL_166;
        case 7u:
          *a1 = *a2;
          a1[1] = a2[1];
          v14 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v39 = *(int *)(v14 + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = type metadata accessor for TranscriptProtoASTPickType(0);
          swift_bridgeObjectRetain();
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v41, 1, v42))
          {
            v43 = sub_23F6916B8(&qword_256EA8510);
            memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            v162 = *(_QWORD *)v41;
            v40[8] = v41[8];
            *(_QWORD *)v40 = v162;
            v163 = *(int *)(v42 + 20);
            v164 = &v40[v163];
            v165 = &v41[v163];
            v166 = sub_23FB2D718();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v164, v165, v166);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v40, 0, 1, v42);
          }
          goto LABEL_136;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v45 = (char *)a1 + v44;
          v46 = (char *)a2 + v44;
          v47 = sub_23FB2D718();
          v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
          swift_bridgeObjectRetain();
          v48(v45, v46, v47);
          goto LABEL_166;
        case 9u:
          *a1 = *a2;
          a1[1] = a2[1];
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
          v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = sub_23FB2D718();
          v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v50, v51, v52);
          goto LABEL_166;
        case 0xAu:
          *a1 = *a2;
          a1[1] = a2[1];
          v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          v55 = (char *)a1 + v54;
          v56 = (char *)a2 + v54;
          v57 = sub_23FB2D718();
          v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
          swift_bridgeObjectRetain();
          v58(v55, v56, v57);
          goto LABEL_166;
        case 0xBu:
          *a1 = *a2;
          a1[1] = a2[1];
          v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          v60 = (char *)a1 + v59;
          v61 = (char *)a2 + v59;
          v62 = sub_23FB2D718();
          v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v63(v60, v61, v62);
          goto LABEL_166;
        case 0xCu:
          *a1 = *a2;
          v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          v65 = (char *)a1 + v64;
          v66 = (char *)a2 + v64;
          v67 = sub_23FB2D718();
          v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v68(v65, v66, v67);
          goto LABEL_166;
        case 0xDu:
          *a1 = *a2;
          a1[1] = a2[1];
          v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          v70 = (char *)a1 + v69;
          v71 = (char *)a2 + v69;
          v72 = sub_23FB2D718();
          v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v73(v70, v71, v72);
          goto LABEL_166;
        case 0xEu:
          *a1 = *a2;
          a1[1] = a2[1];
          v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          v75 = (char *)a1 + v74;
          v76 = (char *)a2 + v74;
          v77 = sub_23FB2D718();
          v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v75, v76, v77);
          goto LABEL_166;
        case 0xFu:
        case 0x11u:
          v79 = sub_23FB2D718();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(a1, a2, v79);
          goto LABEL_166;
        case 0x10u:
          *a1 = *a2;
          v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v81 = (char *)a1 + v80;
          v82 = (char *)a2 + v80;
          v83 = sub_23FB2D718();
          v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          v84(v81, v82, v83);
          goto LABEL_166;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_167;
      }
      goto LABEL_225;
    }
    goto LABEL_8;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
LABEL_8:
    v11 = *(_QWORD *)(sub_23F6916B8(&qword_256EB22D8) - 8);
LABEL_9:
    memcpy(a1, a2, *(_QWORD *)(v11 + 64));
    goto LABEL_225;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
        {
          v13 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              goto LABEL_107;
            case 4u:
              *a1 = *a2;
              v197 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v198 = (char *)a1 + v197;
              v199 = (char *)a2 + v197;
              v200 = sub_23FB2D718();
              v201 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
              swift_bridgeObjectRetain();
              v201(v198, v199, v200);
              goto LABEL_107;
            case 5u:
              *a1 = *a2;
              v202 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v203 = (char *)a1 + v202;
              v204 = (char *)a2 + v202;
              v205 = sub_23FB2D718();
              v206 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 16);
              swift_bridgeObjectRetain();
              v206(v203, v204, v205);
              goto LABEL_107;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              v207 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v208 = (char *)a1 + v207;
              v209 = (char *)a2 + v207;
              v210 = sub_23FB2D718();
              v211 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16);
              swift_bridgeObjectRetain();
              v211(v208, v209, v210);
LABEL_107:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
        }
        v212 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v213 = (char *)a1 + v212;
        v214 = (char *)a2 + v212;
        v215 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v213, v214, v215);
        goto LABEL_224;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v85 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v86 = *(int *)(v85 + 20);
        v87 = (_QWORD *)((char *)a1 + v86);
        v88 = (_QWORD *)((char *)a2 + v86);
        v89 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v89))goto LABEL_44;
        v167 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v167))goto LABEL_76;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v87 = *v88;
            v87[1] = v88[1];
            swift_bridgeObjectRetain();
            goto LABEL_172;
          case 4u:
            *v87 = *v88;
            v303 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v440 = (char *)v88 + v303;
            v470 = (char *)v87 + v303;
            v304 = sub_23FB2D718();
            v410 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v304 - 8) + 16);
            swift_bridgeObjectRetain();
            v410(v470, v440, v304);
            goto LABEL_172;
          case 5u:
            *v87 = *v88;
            v305 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v441 = (char *)v88 + v305;
            v471 = (char *)v87 + v305;
            v306 = sub_23FB2D718();
            v411 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 16);
            swift_bridgeObjectRetain();
            v411(v471, v441, v306);
            goto LABEL_172;
          case 9u:
            *(_DWORD *)v87 = *(_DWORD *)v88;
            v87[1] = v88[1];
            v87[2] = v88[2];
            v307 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v442 = (char *)v88 + v307;
            v472 = (char *)v87 + v307;
            v308 = sub_23FB2D718();
            v412 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 16);
            swift_bridgeObjectRetain();
            v412(v472, v442, v308);
LABEL_172:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
            break;
        }
        goto LABEL_192;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v90 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v91 = v90[5];
        v92 = (_QWORD *)((char *)a1 + v91);
        v93 = (_QWORD *)((char *)a2 + v91);
        v94 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v93, 1, v94))
        {
          v95 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          v168 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v93, 1, v168))
          {
            v169 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v92 = *v93;
                v92[1] = v93[1];
                swift_bridgeObjectRetain();
                goto LABEL_178;
              case 4u:
                *v92 = *v93;
                v309 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v443 = (char *)v93 + v309;
                v473 = (char *)v92 + v309;
                v310 = sub_23FB2D718();
                v413 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 16);
                swift_bridgeObjectRetain();
                v413(v473, v443, v310);
                goto LABEL_178;
              case 5u:
                *v92 = *v93;
                v311 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v444 = (char *)v93 + v311;
                v474 = (char *)v92 + v311;
                v312 = sub_23FB2D718();
                v414 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v312 - 8) + 16);
                swift_bridgeObjectRetain();
                v414(v474, v444, v312);
                goto LABEL_178;
              case 9u:
                *(_DWORD *)v92 = *(_DWORD *)v93;
                v92[1] = v93[1];
                v92[2] = v93[2];
                v313 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v445 = (char *)v93 + v313;
                v475 = (char *)v92 + v313;
                v314 = sub_23FB2D718();
                v415 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 16);
                swift_bridgeObjectRetain();
                v415(v475, v445, v314);
LABEL_178:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v92, 0, 1, v168);
          }
          v315 = *(int *)(v94 + 20);
          v316 = (char *)v92 + v315;
          v317 = (char *)v93 + v315;
          v318 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 16))(v316, v317, v318);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v92, 0, 1, v94);
        }
        v319 = v90[6];
        v320 = (_QWORD *)((char *)a1 + v319);
        v321 = (_QWORD *)((char *)a2 + v319);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v319, 1, v94))
        {
          v322 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v322 - 8) + 64));
        }
        else
        {
          v323 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v321, 1, v323))
          {
            v324 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v324 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v320 = *v321;
                v320[1] = v321[1];
                swift_bridgeObjectRetain();
                goto LABEL_212;
              case 4u:
                *v320 = *v321;
                v362 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v449 = (char *)v321 + v362;
                v479 = (char *)v320 + v362;
                v363 = sub_23FB2D718();
                v419 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v363 - 8) + 16);
                swift_bridgeObjectRetain();
                v419(v479, v449, v363);
                goto LABEL_212;
              case 5u:
                *v320 = *v321;
                v364 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v450 = (char *)v321 + v364;
                v480 = (char *)v320 + v364;
                v365 = sub_23FB2D718();
                v420 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 16);
                swift_bridgeObjectRetain();
                v420(v480, v450, v365);
                goto LABEL_212;
              case 9u:
                *(_DWORD *)v320 = *(_DWORD *)v321;
                v320[1] = v321[1];
                v320[2] = v321[2];
                v366 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v451 = (char *)v321 + v366;
                v481 = (char *)v320 + v366;
                v367 = sub_23FB2D718();
                v421 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v367 - 8) + 16);
                swift_bridgeObjectRetain();
                v421(v481, v451, v367);
LABEL_212:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v323 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v320, 0, 1, v323);
          }
          v368 = *(int *)(v94 + 20);
          v369 = (char *)v320 + v368;
          v370 = (char *)v321 + v368;
          v371 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v371 - 8) + 16))(v369, v370, v371);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v320, 0, 1, v94);
        }
        v372 = v90[7];
        v373 = (char *)a1 + v372;
        v374 = (char *)a2 + v372;
        v375 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v375 - 8) + 16))(v373, v374, v375);
        goto LABEL_224;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        v85 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v96 = *(int *)(v85 + 20);
        v87 = (_QWORD *)((char *)a1 + v96);
        v88 = (_QWORD *)((char *)a2 + v96);
        v89 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v89))
        {
LABEL_44:
          v97 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          v167 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v167))
          {
LABEL_76:
            v170 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v87 = *v88;
                v87[1] = v88[1];
                swift_bridgeObjectRetain();
                goto LABEL_191;
              case 4u:
                *v87 = *v88;
                v325 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v446 = (char *)v88 + v325;
                v476 = (char *)v87 + v325;
                v326 = sub_23FB2D718();
                v416 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v326 - 8) + 16);
                swift_bridgeObjectRetain();
                v416(v476, v446, v326);
                goto LABEL_191;
              case 5u:
                *v87 = *v88;
                v327 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v447 = (char *)v88 + v327;
                v477 = (char *)v87 + v327;
                v328 = sub_23FB2D718();
                v417 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v328 - 8) + 16);
                swift_bridgeObjectRetain();
                v417(v477, v447, v328);
                goto LABEL_191;
              case 9u:
                *(_DWORD *)v87 = *(_DWORD *)v88;
                v87[1] = v88[1];
                v87[2] = v88[2];
                v329 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v448 = (char *)v88 + v329;
                v478 = (char *)v87 + v329;
                v330 = sub_23FB2D718();
                v418 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 16);
                swift_bridgeObjectRetain();
                v418(v478, v448, v330);
LABEL_191:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
                break;
            }
LABEL_192:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v87, 0, 1, v167);
          }
          v331 = *(int *)(v89 + 20);
          v332 = (char *)v87 + v331;
          v333 = (char *)v88 + v331;
          v334 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 16))(v332, v333, v334);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v87, 0, 1, v89);
        }
LABEL_194:
        v335 = *(int *)(v85 + 24);
        v336 = (char *)a1 + v335;
        v337 = (char *)a2 + v335;
        v338 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(v336, v337, v338);
LABEL_224:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v98 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v98))
        {
          v99 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
        }
        else
        {
          v171 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v171))
          {
            v172 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_199;
              case 4u:
                *a1 = *a2;
                v339 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v488 = (char *)a1 + v339;
                v340 = (char *)a2 + v339;
                v341 = sub_23FB2D718();
                v342 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 16);
                swift_bridgeObjectRetain();
                v342(v488, v340, v341);
                goto LABEL_199;
              case 5u:
                *a1 = *a2;
                v343 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v489 = (char *)a1 + v343;
                v344 = (char *)a2 + v343;
                v345 = sub_23FB2D718();
                v346 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v345 - 8) + 16);
                swift_bridgeObjectRetain();
                v346(v489, v344, v345);
                goto LABEL_199;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                v347 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v490 = (char *)a1 + v347;
                v348 = (char *)a2 + v347;
                v349 = sub_23FB2D718();
                v350 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v349 - 8) + 16);
                swift_bridgeObjectRetain();
                v350(v490, v348, v349);
LABEL_199:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v171);
          }
          v351 = *(int *)(v98 + 20);
          v352 = (char *)a1 + v351;
          v353 = (char *)a2 + v351;
          v354 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 16))(v352, v353, v354);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v98);
        }
        v355 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v356 = *(int *)(v355 + 20);
        v357 = (_QWORD *)((char *)a1 + v356);
        v358 = (_QWORD *)((char *)a2 + v356);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v356, 1, v98))
        {
          v359 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v357, v358, *(_QWORD *)(*(_QWORD *)(v359 - 8) + 64));
        }
        else
        {
          v360 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v358, 1, v360))
          {
            v361 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v357, v358, *(_QWORD *)(*(_QWORD *)(v361 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v357 = *v358;
                v357[1] = v358[1];
                swift_bridgeObjectRetain();
                goto LABEL_220;
              case 4u:
                *v357 = *v358;
                v376 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v452 = (char *)v358 + v376;
                v482 = (char *)v357 + v376;
                v377 = sub_23FB2D718();
                v422 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v377 - 8) + 16);
                swift_bridgeObjectRetain();
                v422(v482, v452, v377);
                goto LABEL_220;
              case 5u:
                *v357 = *v358;
                v378 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v453 = (char *)v358 + v378;
                v483 = (char *)v357 + v378;
                v379 = sub_23FB2D718();
                v423 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v379 - 8) + 16);
                swift_bridgeObjectRetain();
                v423(v483, v453, v379);
                goto LABEL_220;
              case 9u:
                *(_DWORD *)v357 = *(_DWORD *)v358;
                v357[1] = v358[1];
                v357[2] = v358[2];
                v380 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v454 = (char *)v358 + v380;
                v484 = (char *)v357 + v380;
                v381 = sub_23FB2D718();
                v424 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 16);
                swift_bridgeObjectRetain();
                v424(v484, v454, v381);
LABEL_220:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v357, v358, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v357, 0, 1, v360);
          }
          v382 = *(int *)(v98 + 20);
          v383 = (char *)v357 + v382;
          v384 = (char *)v358 + v382;
          v385 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(v383, v384, v385);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v357, 0, 1, v98);
        }
        v386 = *(int *)(v355 + 24);
        v387 = (char *)a1 + v386;
        v388 = (char *)a2 + v386;
        v389 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v387, v388, v389);
        goto LABEL_224;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v100 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v101 = (char *)a1 + v100;
        v102 = (char *)a2 + v100;
        v103 = sub_23FB2D718();
        v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v104(v101, v102, v103);
        goto LABEL_224;
      case 6u:
        *a1 = *a2;
        v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v106 = (char *)a1 + v105;
        v107 = (char *)a2 + v105;
        v108 = sub_23FB2D718();
        v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        v109(v106, v107, v108);
        goto LABEL_224;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        v85 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v110 = *(int *)(v85 + 20);
        v111 = (char *)a1 + v110;
        v112 = (char *)a2 + v110;
        v113 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v112, 1, v113))
        {
          v114 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        }
        else
        {
          v173 = *(_QWORD *)v112;
          v111[8] = v112[8];
          *(_QWORD *)v111 = v173;
          v174 = *(int *)(v113 + 20);
          v175 = &v111[v174];
          v176 = &v112[v174];
          v177 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v175, v176, v177);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v111, 0, 1, v113);
        }
        goto LABEL_194;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v116 = (char *)a1 + v115;
        v117 = (char *)a2 + v115;
        v118 = sub_23FB2D718();
        v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
        swift_bridgeObjectRetain();
        v119(v116, v117, v118);
        goto LABEL_224;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
        v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v121 = (char *)a1 + v120;
        v122 = (char *)a2 + v120;
        v123 = sub_23FB2D718();
        v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        v124(v121, v122, v123);
        goto LABEL_224;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v126 = (char *)a1 + v125;
        v127 = (char *)a2 + v125;
        v128 = sub_23FB2D718();
        v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
        swift_bridgeObjectRetain();
        v129(v126, v127, v128);
        goto LABEL_224;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        v130 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v131 = (char *)a1 + v130;
        v132 = (char *)a2 + v130;
        v133 = sub_23FB2D718();
        v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
        swift_bridgeObjectRetain();
        v134(v131, v132, v133);
        goto LABEL_224;
      case 0xCu:
        *a1 = *a2;
        v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v136 = (char *)a1 + v135;
        v137 = (char *)a2 + v135;
        v138 = sub_23FB2D718();
        v139 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
        swift_bridgeObjectRetain();
        v139(v136, v137, v138);
        goto LABEL_224;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        v140 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v141 = (char *)a1 + v140;
        v142 = (char *)a2 + v140;
        v143 = sub_23FB2D718();
        v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16);
        swift_bridgeObjectRetain();
        v144(v141, v142, v143);
        goto LABEL_224;
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v146 = (char *)a1 + v145;
        v147 = (char *)a2 + v145;
        v148 = sub_23FB2D718();
        v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16);
        swift_bridgeObjectRetain();
        v149(v146, v147, v148);
        goto LABEL_224;
      case 0xFu:
      case 0x11u:
        v150 = sub_23FB2D718();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(a1, a2, v150);
        goto LABEL_224;
      case 0x10u:
        *a1 = *a2;
        v151 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v152 = (char *)a1 + v151;
        v153 = (char *)a2 + v151;
        v154 = sub_23FB2D718();
        v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16);
        swift_bridgeObjectRetain();
        v155(v152, v153, v154);
        goto LABEL_224;
      default:
        v11 = *(_QWORD *)(v6 - 8);
        goto LABEL_9;
    }
  }
LABEL_225:
  v390 = *(int *)(a3 + 20);
  v391 = (char *)a1 + v390;
  v392 = (char *)a2 + v390;
  v393 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v393 - 8) + 24))(v391, v392, v393);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatExpr(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int EnumCaseMultiPayload;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  _DWORD *v129;
  _DWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _DWORD *v152;
  _DWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EB22D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    goto LABEL_117;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
      {
        v9 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_62:
        v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v109 = (char *)a1 + v108;
        v110 = (char *)a2 + v108;
        v111 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
        goto LABEL_115;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v101 = (char *)a1 + v100;
          v102 = (char *)a2 + v100;
          v103 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v105 = (char *)a1 + v104;
          v106 = (char *)a2 + v104;
          v107 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v73 = (char *)a1 + v72;
          v74 = (char *)a2 + v72;
          v75 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          goto LABEL_61;
      }
      swift_storeEnumTagMultiPayload();
LABEL_61:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
      goto LABEL_62;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v11 = *(int *)(v10 + 20);
      v12 = (_DWORD *)((char *)a1 + v11);
      v13 = (_DWORD *)((char *)a2 + v11);
      v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))goto LABEL_8;
      v76 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v76))goto LABEL_33;
      v86 = swift_getEnumCaseMultiPayload();
      switch(v86)
      {
        case 9:
          goto LABEL_63;
        case 5:
          goto LABEL_64;
        case 4:
          goto LABEL_44;
      }
      goto LABEL_111;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v16 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v17 = v16[5];
      v18 = (_DWORD *)((char *)a1 + v17);
      v19 = (_DWORD *)((char *)a2 + v17);
      v20 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v20))
      {
        v21 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        goto LABEL_72;
      }
      v78 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v19, 1, v78))
      {
        v79 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        goto LABEL_71;
      }
      v90 = swift_getEnumCaseMultiPayload();
      switch(v90)
      {
        case 9:
          *v18 = *v19;
          *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
          v118 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v119 = (char *)v18 + v118;
          v206 = (char *)v19 + v118;
          v120 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v119, v206, v120);
          goto LABEL_68;
        case 5:
          *(_QWORD *)v18 = *(_QWORD *)v19;
          v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v122 = (char *)v18 + v121;
          v207 = (char *)v19 + v121;
          v123 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v122, v207, v123);
          goto LABEL_68;
        case 4:
          *(_QWORD *)v18 = *(_QWORD *)v19;
          v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v92 = (char *)v18 + v91;
          v203 = (char *)v19 + v91;
          v93 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v92, v203, v93);
LABEL_68:
          swift_storeEnumTagMultiPayload();
          goto LABEL_70;
      }
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
LABEL_70:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v78);
LABEL_71:
      v124 = *(int *)(v20 + 20);
      v125 = (char *)v18 + v124;
      v126 = (char *)v19 + v124;
      v127 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_72:
      v128 = v16[6];
      v129 = (_DWORD *)((char *)a1 + v128);
      v130 = (_DWORD *)((char *)a2 + v128);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v128, 1, v20))
      {
        v131 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
        goto LABEL_103;
      }
      v132 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v130, 1, v132))
      {
        v133 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        goto LABEL_102;
      }
      v134 = swift_getEnumCaseMultiPayload();
      switch(v134)
      {
        case 9:
          *v129 = *v130;
          *(_OWORD *)(v129 + 2) = *(_OWORD *)(v130 + 2);
          v161 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v162 = (char *)v129 + v161;
          v210 = (char *)v130 + v161;
          v163 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 32))(v162, v210, v163);
          goto LABEL_99;
        case 5:
          *(_QWORD *)v129 = *(_QWORD *)v130;
          v164 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v165 = (char *)v129 + v164;
          v211 = (char *)v130 + v164;
          v166 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v165, v211, v166);
          goto LABEL_99;
        case 4:
          *(_QWORD *)v129 = *(_QWORD *)v130;
          v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v136 = (char *)v129 + v135;
          v208 = (char *)v130 + v135;
          v137 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32))(v136, v208, v137);
LABEL_99:
          swift_storeEnumTagMultiPayload();
          goto LABEL_101;
      }
      memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
LABEL_101:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v129, 0, 1, v132);
LABEL_102:
      v167 = *(int *)(v20 + 20);
      v168 = (char *)v129 + v167;
      v169 = (char *)v130 + v167;
      v170 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v168, v169, v170);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v129, 0, 1, v20);
LABEL_103:
      v171 = v16[7];
      v172 = (char *)a1 + v171;
      v173 = (char *)a2 + v171;
      v174 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v172, v173, v174);
      goto LABEL_115;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v10 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v22 = *(int *)(v10 + 20);
      v12 = (_DWORD *)((char *)a1 + v22);
      v13 = (_DWORD *)((char *)a2 + v22);
      v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
      {
LABEL_8:
        v15 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        goto LABEL_114;
      }
      v76 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v76))
      {
LABEL_33:
        v77 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        goto LABEL_113;
      }
      v94 = swift_getEnumCaseMultiPayload();
      switch(v94)
      {
        case 9:
LABEL_63:
          *v12 = *v13;
          *(_OWORD *)(v12 + 2) = *(_OWORD *)(v13 + 2);
          v112 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v113 = (char *)v12 + v112;
          v204 = (char *)v13 + v112;
          v114 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v113, v204, v114);
          goto LABEL_65;
        case 5:
LABEL_64:
          *(_QWORD *)v12 = *(_QWORD *)v13;
          v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v116 = (char *)v12 + v115;
          v205 = (char *)v13 + v115;
          v117 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v116, v205, v117);
          goto LABEL_65;
        case 4:
LABEL_44:
          *(_QWORD *)v12 = *(_QWORD *)v13;
          v87 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v88 = (char *)v12 + v87;
          v202 = (char *)v13 + v87;
          v89 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v88, v202, v89);
LABEL_65:
          swift_storeEnumTagMultiPayload();
          goto LABEL_112;
      }
LABEL_111:
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
LABEL_112:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v76);
LABEL_113:
      v189 = *(int *)(v14 + 20);
      v190 = (char *)v12 + v189;
      v191 = (char *)v13 + v189;
      v192 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v190, v191, v192);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_114:
      v193 = *(int *)(v10 + 24);
      v194 = (char *)a1 + v193;
      v195 = (char *)a2 + v193;
      v196 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v194, v195, v196);
      goto LABEL_115;
    case 4u:
      v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v23))
      {
        v24 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        goto LABEL_89;
      }
      v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v80))
      {
        v81 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
        goto LABEL_88;
      }
      v95 = swift_getEnumCaseMultiPayload();
      switch(v95)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v138 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v139 = (char *)a1 + v138;
          v140 = (char *)a2 + v138;
          v141 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v139, v140, v141);
          goto LABEL_85;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v143 = (char *)a1 + v142;
          v144 = (char *)a2 + v142;
          v145 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
          goto LABEL_85;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v97 = (char *)a1 + v96;
          v98 = (char *)a2 + v96;
          v99 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
LABEL_85:
          swift_storeEnumTagMultiPayload();
          goto LABEL_87;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
LABEL_87:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v80);
LABEL_88:
      v146 = *(int *)(v23 + 20);
      v147 = (char *)a1 + v146;
      v148 = (char *)a2 + v146;
      v149 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v147, v148, v149);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v23);
LABEL_89:
      v150 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v151 = *(int *)(v150 + 20);
      v152 = (_DWORD *)((char *)a1 + v151);
      v153 = (_DWORD *)((char *)a2 + v151);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v151, 1, v23))
      {
        v154 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        goto LABEL_110;
      }
      v155 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v153, 1, v155))
      {
        v156 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
        goto LABEL_109;
      }
      v157 = swift_getEnumCaseMultiPayload();
      switch(v157)
      {
        case 9:
          *v152 = *v153;
          *(_OWORD *)(v152 + 2) = *(_OWORD *)(v153 + 2);
          v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v176 = (char *)v152 + v175;
          v212 = (char *)v153 + v175;
          v177 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v176, v212, v177);
          goto LABEL_106;
        case 5:
          *(_QWORD *)v152 = *(_QWORD *)v153;
          v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v179 = (char *)v152 + v178;
          v213 = (char *)v153 + v178;
          v180 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(v179, v213, v180);
          goto LABEL_106;
        case 4:
          *(_QWORD *)v152 = *(_QWORD *)v153;
          v158 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v159 = (char *)v152 + v158;
          v209 = (char *)v153 + v158;
          v160 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v159, v209, v160);
LABEL_106:
          swift_storeEnumTagMultiPayload();
          goto LABEL_108;
      }
      memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
LABEL_108:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v152, 0, 1, v155);
LABEL_109:
      v181 = *(int *)(v23 + 20);
      v182 = (char *)v152 + v181;
      v183 = (char *)v153 + v181;
      v184 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v152, 0, 1, v23);
LABEL_110:
      v185 = *(int *)(v150 + 24);
      v186 = (char *)a1 + v185;
      v187 = (char *)a2 + v185;
      v188 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v186, v187, v188);
LABEL_115:
      swift_storeEnumTagMultiPayload();
LABEL_116:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_117:
      v197 = *(int *)(a3 + 20);
      v198 = (char *)a1 + v197;
      v199 = (char *)a2 + v197;
      v200 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v198, v199, v200);
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
      goto LABEL_115;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      goto LABEL_115;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v10 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v33 = *(int *)(v10 + 20);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36))
      {
        v37 = sub_23F6916B8(&qword_256EA8510);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v34 = *(_QWORD *)v35;
        v34[8] = v35[8];
        v82 = *(int *)(v36 + 20);
        v83 = &v34[v82];
        v84 = &v35[v82];
        v85 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
      }
      goto LABEL_114;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      goto LABEL_115;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      v45 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      goto LABEL_115;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      goto LABEL_115;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      goto LABEL_115;
    case 0xCu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      goto LABEL_115;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      v61 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_115;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
      goto LABEL_115;
    case 0xFu:
    case 0x11u:
      v66 = sub_23FB2D718();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(a1, a2, v66);
      goto LABEL_115;
    case 0x10u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      v70 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
      goto LABEL_115;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_116;
  }
}

_DWORD *assignWithTake for TranscriptProtoASTFlatExpr(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  _DWORD *v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _DWORD *v87;
  _DWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  _BYTE *v149;
  uint64_t v150;
  int EnumCaseMultiPayload;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  _BYTE *v164;
  uint64_t v165;
  int v166;
  int v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  int v192;
  int v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  _DWORD *v229;
  _DWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  _DWORD *v266;
  _DWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  _DWORD *v314;
  _DWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  _DWORD *v351;
  _DWORD *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  int v356;
  uint64_t v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  char *v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  char *v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  char *v393;
  char *v394;
  char *v395;
  char *v396;
  char *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  char *v404;
  char *v405;
  char *v406;
  char *v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  char *v412;
  char *v413;
  char *v414;
  char *v415;
  char *v416;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
LABEL_8:
      v11 = *(_QWORD *)(sub_23F6916B8(&qword_256EB22D8) - 8);
LABEL_9:
      memcpy(a1, a2, *(_QWORD *)(v11 + 64));
      goto LABEL_235;
    }
    if (a1 == a2)
      goto LABEL_235;
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12))
        {
          v13 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          goto LABEL_127;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            v206 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v207 = (char *)a1 + v206;
            v208 = (char *)a2 + v206;
            v209 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 32))(v207, v208, v209);
            goto LABEL_124;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v210 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v211 = (char *)a1 + v210;
            v212 = (char *)a2 + v210;
            v213 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v211, v212, v213);
            goto LABEL_124;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v153 = (char *)a1 + v152;
            v154 = (char *)a2 + v152;
            v155 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v153, v154, v155);
LABEL_124:
            swift_storeEnumTagMultiPayload();
            goto LABEL_126;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_126:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_127:
        v214 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v215 = (char *)a1 + v214;
        v216 = (char *)a2 + v214;
        v217 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v215, v216, v217);
        goto LABEL_234;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v80 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v81 = *(int *)(v80 + 20);
        v82 = (_DWORD *)((char *)a1 + v81);
        v83 = (_DWORD *)((char *)a2 + v81);
        v84 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v83, 1, v84))goto LABEL_46;
        v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v83, 1, v156))goto LABEL_80;
        v192 = swift_getEnumCaseMultiPayload();
        switch(v192)
        {
          case 9:
            goto LABEL_199;
          case 5:
            goto LABEL_200;
          case 4:
            goto LABEL_117;
        }
        goto LABEL_202;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v85 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v86 = v85[5];
        v87 = (_DWORD *)((char *)a1 + v86);
        v88 = (_DWORD *)((char *)a2 + v86);
        v89 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v89))
        {
          v90 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          goto LABEL_191;
        }
        v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v88, 1, v157))
        {
          v158 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
          goto LABEL_190;
        }
        v193 = swift_getEnumCaseMultiPayload();
        switch(v193)
        {
          case 9:
            *v87 = *v88;
            *(_OWORD *)(v87 + 2) = *(_OWORD *)(v88 + 2);
            v303 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v304 = (char *)v87 + v303;
            v407 = (char *)v88 + v303;
            v305 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v304, v407, v305);
            goto LABEL_187;
          case 5:
            *(_QWORD *)v87 = *(_QWORD *)v88;
            v306 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v307 = (char *)v87 + v306;
            v408 = (char *)v88 + v306;
            v308 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 32))(v307, v408, v308);
            goto LABEL_187;
          case 4:
            *(_QWORD *)v87 = *(_QWORD *)v88;
            v194 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v195 = (char *)v87 + v194;
            v395 = (char *)v88 + v194;
            v196 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v195, v395, v196);
LABEL_187:
            swift_storeEnumTagMultiPayload();
            goto LABEL_189;
        }
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
LABEL_189:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v87, 0, 1, v157);
LABEL_190:
        v309 = *(int *)(v89 + 20);
        v310 = (char *)v87 + v309;
        v311 = (char *)v88 + v309;
        v312 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v312 - 8) + 32))(v310, v311, v312);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v87, 0, 1, v89);
LABEL_191:
        v313 = v85[6];
        v314 = (_DWORD *)((char *)a1 + v313);
        v315 = (_DWORD *)((char *)a2 + v313);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v313, 1, v89))
        {
          v316 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v314, v315, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
LABEL_226:
          v370 = v85[7];
          v371 = (char *)a1 + v370;
          v372 = (char *)a2 + v370;
          v373 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v373 - 8) + 32))(v371, v372, v373);
LABEL_234:
          swift_storeEnumTagMultiPayload();
          goto LABEL_235;
        }
        v317 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v315, 1, v317))
        {
          v318 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v314, v315, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
LABEL_225:
          v366 = *(int *)(v89 + 20);
          v367 = (char *)v314 + v366;
          v368 = (char *)v315 + v366;
          v369 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 32))(v367, v368, v369);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v314, 0, 1, v89);
          goto LABEL_226;
        }
        v319 = swift_getEnumCaseMultiPayload();
        switch(v319)
        {
          case 9:
            *v314 = *v315;
            *(_OWORD *)(v314 + 2) = *(_OWORD *)(v315 + 2);
            v360 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v361 = (char *)v314 + v360;
            v413 = (char *)v315 + v360;
            v362 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 32))(v361, v413, v362);
            break;
          case 5:
            *(_QWORD *)v314 = *(_QWORD *)v315;
            v363 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v364 = (char *)v314 + v363;
            v414 = (char *)v315 + v363;
            v365 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 32))(v364, v414, v365);
            break;
          case 4:
            *(_QWORD *)v314 = *(_QWORD *)v315;
            v320 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v321 = (char *)v314 + v320;
            v409 = (char *)v315 + v320;
            v322 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v322 - 8) + 32))(v321, v409, v322);
            break;
          default:
            memcpy(v314, v315, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
            goto LABEL_224;
        }
        swift_storeEnumTagMultiPayload();
LABEL_224:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v314, 0, 1, v317);
        goto LABEL_225;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v80 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v91 = *(int *)(v80 + 20);
        v82 = (_DWORD *)((char *)a1 + v91);
        v83 = (_DWORD *)((char *)a2 + v91);
        v84 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v83, 1, v84))
        {
LABEL_46:
          v92 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          goto LABEL_205;
        }
        v156 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v83, 1, v156))
        {
LABEL_80:
          v159 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
          goto LABEL_204;
        }
        v197 = swift_getEnumCaseMultiPayload();
        switch(v197)
        {
          case 9:
LABEL_199:
            *v82 = *v83;
            *(_OWORD *)(v82 + 2) = *(_OWORD *)(v83 + 2);
            v323 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v324 = (char *)v82 + v323;
            v410 = (char *)v83 + v323;
            v325 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v325 - 8) + 32))(v324, v410, v325);
            break;
          case 5:
LABEL_200:
            *(_QWORD *)v82 = *(_QWORD *)v83;
            v326 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v327 = (char *)v82 + v326;
            v411 = (char *)v83 + v326;
            v328 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v328 - 8) + 32))(v327, v411, v328);
            break;
          case 4:
LABEL_117:
            *(_QWORD *)v82 = *(_QWORD *)v83;
            v198 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v199 = (char *)v82 + v198;
            v396 = (char *)v83 + v198;
            v200 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 32))(v199, v396, v200);
            break;
          default:
LABEL_202:
            memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
LABEL_203:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v82, 0, 1, v156);
LABEL_204:
            v329 = *(int *)(v84 + 20);
            v330 = (char *)v82 + v329;
            v331 = (char *)v83 + v329;
            v332 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v332 - 8) + 32))(v330, v331, v332);
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v82, 0, 1, v84);
LABEL_205:
            v333 = *(int *)(v80 + 24);
            v334 = (char *)a1 + v333;
            v335 = (char *)a2 + v333;
            v336 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v336 - 8) + 32))(v334, v335, v336);
            goto LABEL_234;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_203;
      case 4u:
        v93 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v93))
        {
          v94 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          goto LABEL_212;
        }
        v160 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v160))
        {
          v161 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
          goto LABEL_211;
        }
        v201 = swift_getEnumCaseMultiPayload();
        switch(v201)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            v337 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v338 = (char *)a1 + v337;
            v339 = (char *)a2 + v337;
            v340 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v340 - 8) + 32))(v338, v339, v340);
            goto LABEL_208;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v341 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v342 = (char *)a1 + v341;
            v343 = (char *)a2 + v341;
            v344 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v344 - 8) + 32))(v342, v343, v344);
            goto LABEL_208;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v202 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v203 = (char *)a1 + v202;
            v204 = (char *)a2 + v202;
            v205 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 32))(v203, v204, v205);
LABEL_208:
            swift_storeEnumTagMultiPayload();
            goto LABEL_210;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
LABEL_210:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v160);
LABEL_211:
        v345 = *(int *)(v93 + 20);
        v346 = (char *)a1 + v345;
        v347 = (char *)a2 + v345;
        v348 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v348 - 8) + 32))(v346, v347, v348);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v93);
LABEL_212:
        v349 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v350 = *(int *)(v349 + 20);
        v351 = (_DWORD *)((char *)a1 + v350);
        v352 = (_DWORD *)((char *)a2 + v350);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v350, 1, v93))
        {
          v353 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v351, v352, *(_QWORD *)(*(_QWORD *)(v353 - 8) + 64));
LABEL_233:
          v384 = *(int *)(v349 + 24);
          v385 = (char *)a1 + v384;
          v386 = (char *)a2 + v384;
          v387 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v387 - 8) + 32))(v385, v386, v387);
          goto LABEL_234;
        }
        v354 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v352, 1, v354))
        {
          v355 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v351, v352, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
LABEL_232:
          v380 = *(int *)(v93 + 20);
          v381 = (char *)v351 + v380;
          v382 = (char *)v352 + v380;
          v383 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v383 - 8) + 32))(v381, v382, v383);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v351, 0, 1, v93);
          goto LABEL_233;
        }
        v356 = swift_getEnumCaseMultiPayload();
        switch(v356)
        {
          case 9:
            *v351 = *v352;
            *(_OWORD *)(v351 + 2) = *(_OWORD *)(v352 + 2);
            v374 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v375 = (char *)v351 + v374;
            v415 = (char *)v352 + v374;
            v376 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 32))(v375, v415, v376);
            break;
          case 5:
            *(_QWORD *)v351 = *(_QWORD *)v352;
            v377 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v378 = (char *)v351 + v377;
            v416 = (char *)v352 + v377;
            v379 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v379 - 8) + 32))(v378, v416, v379);
            break;
          case 4:
            *(_QWORD *)v351 = *(_QWORD *)v352;
            v357 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v358 = (char *)v351 + v357;
            v412 = (char *)v352 + v357;
            v359 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v358, v412, v359);
            break;
          default:
            memcpy(v351, v352, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
            goto LABEL_231;
        }
        swift_storeEnumTagMultiPayload();
LABEL_231:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v351, 0, 1, v354);
        goto LABEL_232;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v96 = (char *)a1 + v95;
        v97 = (char *)a2 + v95;
        v98 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
        goto LABEL_234;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v100 = (char *)a1 + v99;
        v101 = (char *)a2 + v99;
        v102 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
        goto LABEL_234;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v80 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v103 = *(int *)(v80 + 20);
        v104 = (char *)a1 + v103;
        v105 = (char *)a2 + v103;
        v106 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v105, 1, v106))
        {
          v107 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v104 = *(_QWORD *)v105;
          v104[8] = v105[8];
          v162 = *(int *)(v106 + 20);
          v163 = &v104[v162];
          v164 = &v105[v162];
          v165 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v104, 0, 1, v106);
        }
        goto LABEL_205;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v109 = (char *)a1 + v108;
        v110 = (char *)a2 + v108;
        v111 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
        goto LABEL_234;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v113 = (char *)a1 + v112;
        v114 = (char *)a2 + v112;
        v115 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
        goto LABEL_234;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v117 = (char *)a1 + v116;
        v118 = (char *)a2 + v116;
        v119 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
        goto LABEL_234;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v121 = (char *)a1 + v120;
        v122 = (char *)a2 + v120;
        v123 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
        goto LABEL_234;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v124 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v125 = (char *)a1 + v124;
        v126 = (char *)a2 + v124;
        v127 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
        goto LABEL_234;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v128 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v129 = (char *)a1 + v128;
        v130 = (char *)a2 + v128;
        v131 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v129, v130, v131);
        goto LABEL_234;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v133 = (char *)a1 + v132;
        v134 = (char *)a2 + v132;
        v135 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
        goto LABEL_234;
      case 0xFu:
      case 0x11u:
        v136 = sub_23FB2D718();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(a1, a2, v136);
        goto LABEL_234;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v138 = (char *)a1 + v137;
        v139 = (char *)a2 + v137;
        v140 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
        goto LABEL_234;
      default:
        v11 = *(_QWORD *)(v6 - 8);
        goto LABEL_9;
    }
  }
  if (v8)
    goto LABEL_8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_105:
        v188 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v189 = (char *)a1 + v188;
        v190 = (char *)a2 + v188;
        v191 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
        goto LABEL_180;
      }
      v75 = swift_getEnumCaseMultiPayload();
      switch(v75)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v180 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v181 = (char *)a1 + v180;
          v182 = (char *)a2 + v180;
          v183 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v181, v182, v183);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v184 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v185 = (char *)a1 + v184;
          v186 = (char *)a2 + v184;
          v187 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v185, v186, v187);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v76 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v77 = (char *)a1 + v76;
          v78 = (char *)a2 + v76;
          v79 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_104;
      }
      swift_storeEnumTagMultiPayload();
LABEL_104:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
      goto LABEL_105;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v14 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v15 = *(int *)(v14 + 20);
      v16 = (_DWORD *)((char *)a1 + v15);
      v17 = (_DWORD *)((char *)a2 + v15);
      v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))goto LABEL_20;
      v141 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v141))goto LABEL_67;
      v166 = swift_getEnumCaseMultiPayload();
      switch(v166)
      {
        case 9:
          goto LABEL_145;
        case 5:
          goto LABEL_146;
        case 4:
          goto LABEL_95;
      }
      goto LABEL_148;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v19 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v20 = v19[5];
      v21 = (_DWORD *)((char *)a1 + v20);
      v22 = (_DWORD *)((char *)a2 + v20);
      v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v23))
      {
        v24 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        goto LABEL_137;
      }
      v142 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v22, 1, v142))
      {
        v143 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
        goto LABEL_136;
      }
      v167 = swift_getEnumCaseMultiPayload();
      switch(v167)
      {
        case 9:
          *v21 = *v22;
          *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
          v218 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v219 = (char *)v21 + v218;
          v397 = (char *)v22 + v218;
          v220 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 32))(v219, v397, v220);
          goto LABEL_133;
        case 5:
          *(_QWORD *)v21 = *(_QWORD *)v22;
          v221 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v222 = (char *)v21 + v221;
          v398 = (char *)v22 + v221;
          v223 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v222, v398, v223);
          goto LABEL_133;
        case 4:
          *(_QWORD *)v21 = *(_QWORD *)v22;
          v168 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v169 = (char *)v21 + v168;
          v393 = (char *)v22 + v168;
          v170 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v169, v393, v170);
LABEL_133:
          swift_storeEnumTagMultiPayload();
          goto LABEL_135;
      }
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
LABEL_135:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v142);
LABEL_136:
      v224 = *(int *)(v23 + 20);
      v225 = (char *)v21 + v224;
      v226 = (char *)v22 + v224;
      v227 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_137:
      v228 = v19[6];
      v229 = (_DWORD *)((char *)a1 + v228);
      v230 = (_DWORD *)((char *)a2 + v228);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v228, 1, v23))
      {
        v231 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
        goto LABEL_172;
      }
      v232 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v230, 1, v232))
      {
        v233 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
        goto LABEL_171;
      }
      v234 = swift_getEnumCaseMultiPayload();
      switch(v234)
      {
        case 9:
          *v229 = *v230;
          *(_OWORD *)(v229 + 2) = *(_OWORD *)(v230 + 2);
          v275 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v276 = (char *)v229 + v275;
          v403 = (char *)v230 + v275;
          v277 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v277 - 8) + 32))(v276, v403, v277);
          goto LABEL_168;
        case 5:
          *(_QWORD *)v229 = *(_QWORD *)v230;
          v278 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v279 = (char *)v229 + v278;
          v404 = (char *)v230 + v278;
          v280 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 32))(v279, v404, v280);
          goto LABEL_168;
        case 4:
          *(_QWORD *)v229 = *(_QWORD *)v230;
          v235 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v236 = (char *)v229 + v235;
          v399 = (char *)v230 + v235;
          v237 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 32))(v236, v399, v237);
LABEL_168:
          swift_storeEnumTagMultiPayload();
          goto LABEL_170;
      }
      memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
LABEL_170:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v229, 0, 1, v232);
LABEL_171:
      v281 = *(int *)(v23 + 20);
      v282 = (char *)v229 + v281;
      v283 = (char *)v230 + v281;
      v284 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v284 - 8) + 32))(v282, v283, v284);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v229, 0, 1, v23);
LABEL_172:
      v285 = v19[7];
      v286 = (char *)a1 + v285;
      v287 = (char *)a2 + v285;
      v288 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v288 - 8) + 32))(v286, v287, v288);
      goto LABEL_180;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v14 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v25 = *(int *)(v14 + 20);
      v16 = (_DWORD *)((char *)a1 + v25);
      v17 = (_DWORD *)((char *)a2 + v25);
      v18 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v18))
      {
LABEL_20:
        v26 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        goto LABEL_151;
      }
      v141 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v17, 1, v141))
      {
LABEL_67:
        v144 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
        goto LABEL_150;
      }
      v171 = swift_getEnumCaseMultiPayload();
      switch(v171)
      {
        case 9:
LABEL_145:
          *v16 = *v17;
          *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
          v238 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v239 = (char *)v16 + v238;
          v400 = (char *)v17 + v238;
          v240 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v239, v400, v240);
          goto LABEL_147;
        case 5:
LABEL_146:
          *(_QWORD *)v16 = *(_QWORD *)v17;
          v241 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v242 = (char *)v16 + v241;
          v401 = (char *)v17 + v241;
          v243 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 32))(v242, v401, v243);
          goto LABEL_147;
        case 4:
LABEL_95:
          *(_QWORD *)v16 = *(_QWORD *)v17;
          v172 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v173 = (char *)v16 + v172;
          v394 = (char *)v17 + v172;
          v174 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v173, v394, v174);
LABEL_147:
          swift_storeEnumTagMultiPayload();
          goto LABEL_149;
      }
LABEL_148:
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
LABEL_149:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v141);
LABEL_150:
      v244 = *(int *)(v18 + 20);
      v245 = (char *)v16 + v244;
      v246 = (char *)v17 + v244;
      v247 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 32))(v245, v246, v247);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_151:
      v248 = *(int *)(v14 + 24);
      v249 = (char *)a1 + v248;
      v250 = (char *)a2 + v248;
      v251 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 32))(v249, v250, v251);
      goto LABEL_180;
    case 4u:
      v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v27))
      {
        v28 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        goto LABEL_158;
      }
      v145 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v145))
      {
        v146 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        goto LABEL_157;
      }
      v175 = swift_getEnumCaseMultiPayload();
      switch(v175)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v252 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v253 = (char *)a1 + v252;
          v254 = (char *)a2 + v252;
          v255 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 32))(v253, v254, v255);
          goto LABEL_154;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v256 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v257 = (char *)a1 + v256;
          v258 = (char *)a2 + v256;
          v259 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 32))(v257, v258, v259);
          goto LABEL_154;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v177 = (char *)a1 + v176;
          v178 = (char *)a2 + v176;
          v179 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v177, v178, v179);
LABEL_154:
          swift_storeEnumTagMultiPayload();
          goto LABEL_156;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
LABEL_156:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v145);
LABEL_157:
      v260 = *(int *)(v27 + 20);
      v261 = (char *)a1 + v260;
      v262 = (char *)a2 + v260;
      v263 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v261, v262, v263);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v27);
LABEL_158:
      v264 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v265 = *(int *)(v264 + 20);
      v266 = (_DWORD *)((char *)a1 + v265);
      v267 = (_DWORD *)((char *)a2 + v265);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v265, 1, v27))
      {
        v268 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
        goto LABEL_179;
      }
      v269 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v267, 1, v269))
      {
        v270 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
        goto LABEL_178;
      }
      v271 = swift_getEnumCaseMultiPayload();
      switch(v271)
      {
        case 9:
          *v266 = *v267;
          *(_OWORD *)(v266 + 2) = *(_OWORD *)(v267 + 2);
          v289 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v290 = (char *)v266 + v289;
          v405 = (char *)v267 + v289;
          v291 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v290, v405, v291);
          goto LABEL_175;
        case 5:
          *(_QWORD *)v266 = *(_QWORD *)v267;
          v292 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v293 = (char *)v266 + v292;
          v406 = (char *)v267 + v292;
          v294 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v294 - 8) + 32))(v293, v406, v294);
          goto LABEL_175;
        case 4:
          *(_QWORD *)v266 = *(_QWORD *)v267;
          v272 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v273 = (char *)v266 + v272;
          v402 = (char *)v267 + v272;
          v274 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v273, v402, v274);
LABEL_175:
          swift_storeEnumTagMultiPayload();
          goto LABEL_177;
      }
      memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
LABEL_177:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v266, 0, 1, v269);
LABEL_178:
      v295 = *(int *)(v27 + 20);
      v296 = (char *)v266 + v295;
      v297 = (char *)v267 + v295;
      v298 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 32))(v296, v297, v298);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v266, 0, 1, v27);
LABEL_179:
      v299 = *(int *)(v264 + 24);
      v300 = (char *)a1 + v299;
      v301 = (char *)a2 + v299;
      v302 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 32))(v300, v301, v302);
LABEL_180:
      swift_storeEnumTagMultiPayload();
LABEL_181:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      break;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      goto LABEL_180;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      goto LABEL_180;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v14 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v37 = *(int *)(v14 + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v39, 1, v40))
      {
        v41 = sub_23F6916B8(&qword_256EA8510);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v38 = *(_QWORD *)v39;
        v38[8] = v39[8];
        v147 = *(int *)(v40 + 20);
        v148 = &v38[v147];
        v149 = &v39[v147];
        v150 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v38, 0, 1, v40);
      }
      goto LABEL_151;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      v45 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      goto LABEL_180;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      goto LABEL_180;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      goto LABEL_180;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      goto LABEL_180;
    case 0xCu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      v61 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
      goto LABEL_180;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      v63 = (char *)a1 + v62;
      v64 = (char *)a2 + v62;
      v65 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
      goto LABEL_180;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      v67 = (char *)a1 + v66;
      v68 = (char *)a2 + v66;
      v69 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
      goto LABEL_180;
    case 0xFu:
    case 0x11u:
      v70 = sub_23FB2D718();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(a1, a2, v70);
      goto LABEL_180;
    case 0x10u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      v74 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
      goto LABEL_180;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_181;
  }
LABEL_235:
  v388 = *(int *)(a3 + 20);
  v389 = (char *)a1 + v388;
  v390 = (char *)a2 + v388;
  v391 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v391 - 8) + 40))(v389, v390, v391);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA6FC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB22D8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA6FC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB22D8);
}

void sub_23FA6FC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBAD30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAstflatExprEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstflatExprEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  void (*v180)(char *, char *, uint64_t);
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  void (*v224)(char *, char *, uint64_t);
  void (*v225)(char *, char *, uint64_t);
  void (*v226)(char *, char *, uint64_t);
  void (*v227)(char *, char *, uint64_t);
  void (*v228)(char *, char *, uint64_t);
  void (*v229)(char *, char *, uint64_t);
  void (*v230)(char *, char *, uint64_t);
  void (*v231)(char *, char *, uint64_t);
  void (*v232)(char *, char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
        {
          v8 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v90 = a2[1];
              *a1 = *a2;
              a1[1] = v90;
              swift_bridgeObjectRetain();
              goto LABEL_51;
            case 4u:
              *a1 = *a2;
              v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v106 = (char *)a1 + v105;
              v107 = (char *)a2 + v105;
              v108 = sub_23FB2D718();
              v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v106, v107, v108);
              goto LABEL_51;
            case 5u:
              *a1 = *a2;
              v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v111 = (char *)a1 + v110;
              v112 = (char *)a2 + v110;
              v113 = sub_23FB2D718();
              v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
              swift_bridgeObjectRetain();
              v114(v111, v112, v113);
              goto LABEL_51;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              v115 = a2[2];
              a1[1] = a2[1];
              a1[2] = v115;
              v116 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v117 = (char *)a1 + v116;
              v118 = (char *)a2 + v116;
              v119 = sub_23FB2D718();
              v120 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
              swift_bridgeObjectRetain();
              v120(v117, v118, v119);
LABEL_51:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
        }
        v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v122 = (char *)a1 + v121;
        v123 = (char *)a2 + v121;
        v124 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
        goto LABEL_110;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v10 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v11 = *(int *)(v10 + 20);
        v12 = (uint64_t *)((char *)a1 + v11);
        v13 = (uint64_t *)((char *)a2 + v11);
        v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))goto LABEL_12;
        v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v91))goto LABEL_35;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v101 = v13[1];
            *v12 = *v13;
            v12[1] = v101;
            swift_bridgeObjectRetain();
            goto LABEL_58;
          case 4u:
            *v12 = *v13;
            v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v239 = (char *)v13 + v125;
            v254 = (char *)v12 + v125;
            v126 = sub_23FB2D718();
            v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v224(v254, v239, v126);
            goto LABEL_58;
          case 5u:
            *v12 = *v13;
            v127 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v240 = (char *)v13 + v127;
            v255 = (char *)v12 + v127;
            v128 = sub_23FB2D718();
            v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
            swift_bridgeObjectRetain();
            v225(v255, v240, v128);
            goto LABEL_58;
          case 9u:
            *(_DWORD *)v12 = *(_DWORD *)v13;
            v129 = v13[2];
            v12[1] = v13[1];
            v12[2] = v129;
            v130 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v241 = (char *)v13 + v130;
            v256 = (char *)v12 + v130;
            v131 = sub_23FB2D718();
            v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16);
            swift_bridgeObjectRetain();
            v226(v256, v241, v131);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
            break;
        }
        goto LABEL_78;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v16 = v15[5];
        v17 = (uint64_t *)((char *)a1 + v16);
        v18 = (uint64_t *)((char *)a2 + v16);
        v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v19))
        {
          v20 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v18, 1, v92))
          {
            v93 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v102 = v18[1];
                *v17 = *v18;
                v17[1] = v102;
                swift_bridgeObjectRetain();
                goto LABEL_64;
              case 4u:
                *v17 = *v18;
                v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v242 = (char *)v18 + v132;
                v257 = (char *)v17 + v132;
                v133 = sub_23FB2D718();
                v227 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
                swift_bridgeObjectRetain();
                v227(v257, v242, v133);
                goto LABEL_64;
              case 5u:
                *v17 = *v18;
                v134 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v243 = (char *)v18 + v134;
                v258 = (char *)v17 + v134;
                v135 = sub_23FB2D718();
                v228 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
                swift_bridgeObjectRetain();
                v228(v258, v243, v135);
                goto LABEL_64;
              case 9u:
                *(_DWORD *)v17 = *(_DWORD *)v18;
                v136 = v18[2];
                v17[1] = v18[1];
                v17[2] = v136;
                v137 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v244 = (char *)v18 + v137;
                v259 = (char *)v17 + v137;
                v138 = sub_23FB2D718();
                v229 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
                swift_bridgeObjectRetain();
                v229(v259, v244, v138);
LABEL_64:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v92);
          }
          v139 = *(int *)(v19 + 20);
          v140 = (char *)v17 + v139;
          v141 = (char *)v18 + v139;
          v142 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v17, 0, 1, v19);
        }
        v143 = v15[6];
        v144 = (uint64_t *)((char *)a1 + v143);
        v145 = (uint64_t *)((char *)a2 + v143);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v143, 1, v19))
        {
          v146 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          v147 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v145, 1, v147))
          {
            v148 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v149 = v145[1];
                *v144 = *v145;
                v144[1] = v149;
                swift_bridgeObjectRetain();
                goto LABEL_98;
              case 4u:
                *v144 = *v145;
                v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v248 = (char *)v145 + v193;
                v263 = (char *)v144 + v193;
                v194 = sub_23FB2D718();
                v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16);
                swift_bridgeObjectRetain();
                v233(v263, v248, v194);
                goto LABEL_98;
              case 5u:
                *v144 = *v145;
                v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v249 = (char *)v145 + v195;
                v264 = (char *)v144 + v195;
                v196 = sub_23FB2D718();
                v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16);
                swift_bridgeObjectRetain();
                v234(v264, v249, v196);
                goto LABEL_98;
              case 9u:
                *(_DWORD *)v144 = *(_DWORD *)v145;
                v197 = v145[2];
                v144[1] = v145[1];
                v144[2] = v197;
                v198 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v250 = (char *)v145 + v198;
                v265 = (char *)v144 + v198;
                v199 = sub_23FB2D718();
                v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 16);
                swift_bridgeObjectRetain();
                v235(v265, v250, v199);
LABEL_98:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v144, 0, 1, v147);
          }
          v200 = *(int *)(v19 + 20);
          v201 = (char *)v144 + v200;
          v202 = (char *)v145 + v200;
          v203 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v201, v202, v203);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v144, 0, 1, v19);
        }
        v204 = v15[7];
        v205 = (char *)a1 + v204;
        v206 = (char *)a2 + v204;
        v207 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16))(v205, v206, v207);
        goto LABEL_110;
      case 3u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        v10 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v22 = *(int *)(v10 + 20);
        v12 = (uint64_t *)((char *)a1 + v22);
        v13 = (uint64_t *)((char *)a2 + v22);
        v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v14))
        {
LABEL_12:
          v23 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v13, 1, v91))
          {
LABEL_35:
            v94 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v103 = v13[1];
                *v12 = *v13;
                v12[1] = v103;
                swift_bridgeObjectRetain();
                goto LABEL_77;
              case 4u:
                *v12 = *v13;
                v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v245 = (char *)v13 + v150;
                v260 = (char *)v12 + v150;
                v151 = sub_23FB2D718();
                v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
                swift_bridgeObjectRetain();
                v230(v260, v245, v151);
                goto LABEL_77;
              case 5u:
                *v12 = *v13;
                v152 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v246 = (char *)v13 + v152;
                v261 = (char *)v12 + v152;
                v153 = sub_23FB2D718();
                v231 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16);
                swift_bridgeObjectRetain();
                v231(v261, v246, v153);
                goto LABEL_77;
              case 9u:
                *(_DWORD *)v12 = *(_DWORD *)v13;
                v154 = v13[2];
                v12[1] = v13[1];
                v12[2] = v154;
                v155 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v247 = (char *)v13 + v155;
                v262 = (char *)v12 + v155;
                v156 = sub_23FB2D718();
                v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
                swift_bridgeObjectRetain();
                v232(v262, v247, v156);
LABEL_77:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
                break;
            }
LABEL_78:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v91);
          }
          v157 = *(int *)(v14 + 20);
          v158 = (char *)v12 + v157;
          v159 = (char *)v13 + v157;
          v160 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v12, 0, 1, v14);
        }
LABEL_80:
        v161 = *(int *)(v10 + 24);
        v162 = (char *)a1 + v161;
        v163 = (char *)a2 + v161;
        v164 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
LABEL_110:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v24 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v24))
        {
          v25 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v95 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v95))
          {
            v96 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v104 = a2[1];
                *a1 = *a2;
                a1[1] = v104;
                swift_bridgeObjectRetain();
                goto LABEL_85;
              case 4u:
                *a1 = *a2;
                v165 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v166 = (char *)a1 + v165;
                v167 = (char *)a2 + v165;
                v168 = sub_23FB2D718();
                v169 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16);
                swift_bridgeObjectRetain();
                v169(v166, v167, v168);
                goto LABEL_85;
              case 5u:
                *a1 = *a2;
                v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v171 = (char *)a1 + v170;
                v172 = (char *)a2 + v170;
                v173 = sub_23FB2D718();
                v174 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16);
                swift_bridgeObjectRetain();
                v174(v171, v172, v173);
                goto LABEL_85;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v175 = a2[2];
                a1[1] = a2[1];
                a1[2] = v175;
                v176 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v177 = (char *)a1 + v176;
                v178 = (char *)a2 + v176;
                v179 = sub_23FB2D718();
                v180 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 16);
                swift_bridgeObjectRetain();
                v180(v177, v178, v179);
LABEL_85:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v95);
          }
          v181 = *(int *)(v24 + 20);
          v182 = (char *)a1 + v181;
          v183 = (char *)a2 + v181;
          v184 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v182, v183, v184);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v24);
        }
        v185 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v186 = *(int *)(v185 + 20);
        v187 = (uint64_t *)((char *)a1 + v186);
        v188 = (uint64_t *)((char *)a2 + v186);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v186, 1, v24))
        {
          v189 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        }
        else
        {
          v190 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v188, 1, v190))
          {
            v191 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v192 = v188[1];
                *v187 = *v188;
                v187[1] = v192;
                swift_bridgeObjectRetain();
                goto LABEL_106;
              case 4u:
                *v187 = *v188;
                v208 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v251 = (char *)v188 + v208;
                v266 = (char *)v187 + v208;
                v209 = sub_23FB2D718();
                v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16);
                swift_bridgeObjectRetain();
                v236(v266, v251, v209);
                goto LABEL_106;
              case 5u:
                *v187 = *v188;
                v210 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v252 = (char *)v188 + v210;
                v267 = (char *)v187 + v210;
                v211 = sub_23FB2D718();
                v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 16);
                swift_bridgeObjectRetain();
                v237(v267, v252, v211);
                goto LABEL_106;
              case 9u:
                *(_DWORD *)v187 = *(_DWORD *)v188;
                v212 = v188[2];
                v187[1] = v188[1];
                v187[2] = v212;
                v213 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v253 = (char *)v188 + v213;
                v268 = (char *)v187 + v213;
                v214 = sub_23FB2D718();
                v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 16);
                swift_bridgeObjectRetain();
                v238(v268, v253, v214);
LABEL_106:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v187, 0, 1, v190);
          }
          v215 = *(int *)(v24 + 20);
          v216 = (char *)v187 + v215;
          v217 = (char *)v188 + v215;
          v218 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v216, v217, v218);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v187, 0, 1, v24);
        }
        v219 = *(int *)(v185 + 24);
        v220 = (char *)a1 + v219;
        v221 = (char *)a2 + v219;
        v222 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v220, v221, v222);
        goto LABEL_110;
      case 5u:
        v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        a1[2] = a2[2];
        v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_23FB2D718();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v28, v29, v30);
        goto LABEL_110;
      case 6u:
        *a1 = *a2;
        v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_23FB2D718();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        goto LABEL_110;
      case 7u:
        v37 = a2[1];
        *a1 = *a2;
        a1[1] = v37;
        v10 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v38 = *(int *)(v10 + 20);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v40, 1, v41))
        {
          v42 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v39 = *(_QWORD *)v40;
          v39[8] = v40[8];
          v97 = *(int *)(v41 + 20);
          v98 = &v39[v97];
          v99 = &v40[v97];
          v100 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v98, v99, v100);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v39, 0, 1, v41);
        }
        goto LABEL_80;
      case 8u:
        v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = sub_23FB2D718();
        v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        goto LABEL_110;
      case 9u:
        v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v51 = (char *)a1 + v50;
        v52 = (char *)a2 + v50;
        v53 = sub_23FB2D718();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        goto LABEL_110;
      case 0xAu:
        v55 = a2[1];
        *a1 = *a2;
        a1[1] = v55;
        v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_23FB2D718();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v57, v58, v59);
        goto LABEL_110;
      case 0xBu:
        v61 = a2[1];
        *a1 = *a2;
        a1[1] = v61;
        v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_23FB2D718();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        goto LABEL_110;
      case 0xCu:
        *a1 = *a2;
        v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        v70 = sub_23FB2D718();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        goto LABEL_110;
      case 0xDu:
        v72 = a2[1];
        *a1 = *a2;
        a1[1] = v72;
        v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v74 = (char *)a1 + v73;
        v75 = (char *)a2 + v73;
        v76 = sub_23FB2D718();
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        goto LABEL_110;
      case 0xEu:
        v78 = a2[1];
        *a1 = *a2;
        a1[1] = v78;
        v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        v82 = sub_23FB2D718();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        goto LABEL_110;
      case 0xFu:
      case 0x11u:
        v84 = sub_23FB2D718();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(a1, a2, v84);
        goto LABEL_110;
      case 0x10u:
        *a1 = *a2;
        v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v86 = (char *)a1 + v85;
        v87 = (char *)a2 + v85;
        v88 = sub_23FB2D718();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v86, v87, v88);
        goto LABEL_110;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstflatExprEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t updated;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v3))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            swift_bridgeObjectRelease();
            break;
          case 4u:
            swift_bridgeObjectRelease();
            v17 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
            goto LABEL_34;
          case 5u:
            swift_bridgeObjectRelease();
            v17 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_34:
            v18 = *(int *)(v17 + 20);
            goto LABEL_36;
          case 9u:
            swift_bridgeObjectRelease();
            v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_36:
            v19 = a1 + v18;
            v20 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
            break;
          default:
            break;
        }
      }
      updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
      goto LABEL_38;
    case 1:
      v4 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6))goto LABEL_45;
      v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_15;
          case 4u:
            goto LABEL_39;
          case 5u:
            goto LABEL_40;
          case 9u:
            goto LABEL_42;
          default:
            goto LABEL_44;
        }
      }
      goto LABEL_44;
    case 2:
      v8 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v9 = a1 + v8[5];
      v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10))
      {
        v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v11))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v27 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_48;
            case 5u:
              swift_bridgeObjectRelease();
              v27 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_48:
              v28 = *(int *)(v27 + 20);
              goto LABEL_50;
            case 9u:
              swift_bridgeObjectRelease();
              v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_50:
              v29 = v9 + v28;
              v30 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
              break;
            default:
              break;
          }
        }
        v31 = v9 + *(int *)(v10 + 20);
        v32 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
      }
      v33 = a1 + v8[6];
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33, 1, v10))
      {
        v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v33, 1, v34))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v44 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_68;
            case 5u:
              swift_bridgeObjectRelease();
              v44 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_68:
              v45 = *(int *)(v44 + 20);
              goto LABEL_70;
            case 9u:
              swift_bridgeObjectRelease();
              v45 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_70:
              v46 = v33 + v45;
              v47 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
              break;
            default:
              break;
          }
        }
        v48 = v33 + *(int *)(v10 + 20);
        v49 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      }
      v15 = v8[7];
      goto LABEL_80;
    case 3:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6))goto LABEL_45;
      v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v12))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
LABEL_15:
            swift_bridgeObjectRelease();
            break;
          case 4u:
LABEL_39:
            swift_bridgeObjectRelease();
            v21 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
            goto LABEL_41;
          case 5u:
LABEL_40:
            swift_bridgeObjectRelease();
            v21 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_41:
            v22 = *(int *)(v21 + 20);
            goto LABEL_43;
          case 9u:
LABEL_42:
            swift_bridgeObjectRelease();
            v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_43:
            v23 = v5 + v22;
            v24 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
            break;
          default:
            break;
        }
      }
LABEL_44:
      v25 = v5 + *(int *)(v6 + 20);
      v26 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
LABEL_45:
      v15 = *(int *)(v4 + 24);
      goto LABEL_80;
    case 4:
      v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v13))
      {
        v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v14))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v35 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_58;
            case 5u:
              swift_bridgeObjectRelease();
              v35 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_58:
              v36 = *(int *)(v35 + 20);
              goto LABEL_60;
            case 9u:
              swift_bridgeObjectRelease();
              v36 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_60:
              v37 = a1 + v36;
              v38 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
              break;
            default:
              break;
          }
        }
        v39 = a1 + *(int *)(v13 + 20);
        v40 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
      }
      v41 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v42 = a1 + *(int *)(v41 + 20);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v42, 1, v13))
      {
        v43 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v42, 1, v43))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v50 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_75;
            case 5u:
              swift_bridgeObjectRelease();
              v50 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_75:
              v51 = *(int *)(v50 + 20);
              goto LABEL_77;
            case 9u:
              swift_bridgeObjectRelease();
              v51 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_77:
              v52 = v42 + v51;
              v53 = sub_23FB2D718();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
              break;
            default:
              break;
          }
        }
        v54 = v42 + *(int *)(v13 + 20);
        v55 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
      }
      v15 = *(int *)(v41 + 24);
      goto LABEL_80;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      goto LABEL_80;
    case 6:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
      goto LABEL_38;
    case 7:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6))goto LABEL_44;
      goto LABEL_45;
    case 8:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
      goto LABEL_38;
    case 9:
      swift_bridgeObjectRelease();
      v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      goto LABEL_80;
    case 10:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
      goto LABEL_38;
    case 11:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
      goto LABEL_38;
    case 12:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
      goto LABEL_38;
    case 13:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
      goto LABEL_38;
    case 14:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
      goto LABEL_38;
    case 15:
    case 17:
      goto LABEL_81;
    case 16:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_38:
      v15 = *(int *)(updated + 20);
LABEL_80:
      a1 += v15;
LABEL_81:
      v56 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(a1, v56);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoAstflatExprEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t);
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  void (*v222)(char *, char *, uint64_t);
  void (*v223)(char *, char *, uint64_t);
  void (*v224)(char *, char *, uint64_t);
  void (*v225)(char *, char *, uint64_t);
  void (*v226)(char *, char *, uint64_t);
  void (*v227)(char *, char *, uint64_t);
  void (*v228)(char *, char *, uint64_t);
  void (*v229)(char *, char *, uint64_t);
  void (*v230)(char *, char *, uint64_t);
  void (*v231)(char *, char *, uint64_t);
  void (*v232)(char *, char *, uint64_t);
  void (*v233)(char *, char *, uint64_t);
  void (*v234)(char *, char *, uint64_t);
  void (*v235)(char *, char *, uint64_t);
  void (*v236)(char *, char *, uint64_t);
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v88 = a2[1];
            *a1 = *a2;
            a1[1] = v88;
            swift_bridgeObjectRetain();
            goto LABEL_49;
          case 4u:
            *a1 = *a2;
            v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v104 = (char *)a1 + v103;
            v105 = (char *)a2 + v103;
            v106 = sub_23FB2D718();
            v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
            swift_bridgeObjectRetain();
            v107(v104, v105, v106);
            goto LABEL_49;
          case 5u:
            *a1 = *a2;
            v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v109 = (char *)a1 + v108;
            v110 = (char *)a2 + v108;
            v111 = sub_23FB2D718();
            v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            v112(v109, v110, v111);
            goto LABEL_49;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v113 = a2[2];
            a1[1] = a2[1];
            a1[2] = v113;
            v114 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v115 = (char *)a1 + v114;
            v116 = (char *)a2 + v114;
            v117 = sub_23FB2D718();
            v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
            swift_bridgeObjectRetain();
            v118(v115, v116, v117);
LABEL_49:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      }
      v119 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
      v120 = (char *)a1 + v119;
      v121 = (char *)a2 + v119;
      v122 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
      goto LABEL_108;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v9 = *(int *)(v8 + 20);
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))goto LABEL_10;
      v89 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v89))goto LABEL_33;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v99 = v11[1];
          *v10 = *v11;
          v10[1] = v99;
          swift_bridgeObjectRetain();
          goto LABEL_56;
        case 4u:
          *v10 = *v11;
          v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v237 = (char *)v11 + v123;
          v252 = (char *)v10 + v123;
          v124 = sub_23FB2D718();
          v222 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
          swift_bridgeObjectRetain();
          v222(v252, v237, v124);
          goto LABEL_56;
        case 5u:
          *v10 = *v11;
          v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v238 = (char *)v11 + v125;
          v253 = (char *)v10 + v125;
          v126 = sub_23FB2D718();
          v223 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
          swift_bridgeObjectRetain();
          v223(v253, v238, v126);
          goto LABEL_56;
        case 9u:
          *(_DWORD *)v10 = *(_DWORD *)v11;
          v127 = v11[2];
          v10[1] = v11[1];
          v10[2] = v127;
          v128 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v239 = (char *)v11 + v128;
          v254 = (char *)v10 + v128;
          v129 = sub_23FB2D718();
          v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16);
          swift_bridgeObjectRetain();
          v224(v254, v239, v129);
LABEL_56:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          break;
      }
      goto LABEL_76;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v14 = v13[5];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        v90 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v90))
        {
          v91 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v100 = v16[1];
              *v15 = *v16;
              v15[1] = v100;
              swift_bridgeObjectRetain();
              goto LABEL_62;
            case 4u:
              *v15 = *v16;
              v130 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v240 = (char *)v16 + v130;
              v255 = (char *)v15 + v130;
              v131 = sub_23FB2D718();
              v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16);
              swift_bridgeObjectRetain();
              v225(v255, v240, v131);
              goto LABEL_62;
            case 5u:
              *v15 = *v16;
              v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v241 = (char *)v16 + v132;
              v256 = (char *)v15 + v132;
              v133 = sub_23FB2D718();
              v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
              swift_bridgeObjectRetain();
              v226(v256, v241, v133);
              goto LABEL_62;
            case 9u:
              *(_DWORD *)v15 = *(_DWORD *)v16;
              v134 = v16[2];
              v15[1] = v16[1];
              v15[2] = v134;
              v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v242 = (char *)v16 + v135;
              v257 = (char *)v15 + v135;
              v136 = sub_23FB2D718();
              v227 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
              swift_bridgeObjectRetain();
              v227(v257, v242, v136);
LABEL_62:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v90);
        }
        v137 = *(int *)(v17 + 20);
        v138 = (char *)v15 + v137;
        v139 = (char *)v16 + v137;
        v140 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v138, v139, v140);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
      }
      v141 = v13[6];
      v142 = (_QWORD *)((char *)a1 + v141);
      v143 = (_QWORD *)((char *)a2 + v141);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v141, 1, v17))
      {
        v144 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
      }
      else
      {
        v145 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v143, 1, v145))
        {
          v146 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v147 = v143[1];
              *v142 = *v143;
              v142[1] = v147;
              swift_bridgeObjectRetain();
              goto LABEL_96;
            case 4u:
              *v142 = *v143;
              v191 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v246 = (char *)v143 + v191;
              v261 = (char *)v142 + v191;
              v192 = sub_23FB2D718();
              v231 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16);
              swift_bridgeObjectRetain();
              v231(v261, v246, v192);
              goto LABEL_96;
            case 5u:
              *v142 = *v143;
              v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v247 = (char *)v143 + v193;
              v262 = (char *)v142 + v193;
              v194 = sub_23FB2D718();
              v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16);
              swift_bridgeObjectRetain();
              v232(v262, v247, v194);
              goto LABEL_96;
            case 9u:
              *(_DWORD *)v142 = *(_DWORD *)v143;
              v195 = v143[2];
              v142[1] = v143[1];
              v142[2] = v195;
              v196 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v248 = (char *)v143 + v196;
              v263 = (char *)v142 + v196;
              v197 = sub_23FB2D718();
              v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 16);
              swift_bridgeObjectRetain();
              v233(v263, v248, v197);
LABEL_96:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v142, 0, 1, v145);
        }
        v198 = *(int *)(v17 + 20);
        v199 = (char *)v142 + v198;
        v200 = (char *)v143 + v198;
        v201 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v199, v200, v201);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v142, 0, 1, v17);
      }
      v202 = v13[7];
      v203 = (char *)a1 + v202;
      v204 = (char *)a2 + v202;
      v205 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 16))(v203, v204, v205);
      goto LABEL_108;
    case 3u:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v20 = *(int *)(v8 + 20);
      v10 = (_QWORD *)((char *)a1 + v20);
      v11 = (_QWORD *)((char *)a2 + v20);
      v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
      {
LABEL_10:
        v21 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v89 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v89))
        {
LABEL_33:
          v92 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v101 = v11[1];
              *v10 = *v11;
              v10[1] = v101;
              swift_bridgeObjectRetain();
              goto LABEL_75;
            case 4u:
              *v10 = *v11;
              v148 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v243 = (char *)v11 + v148;
              v258 = (char *)v10 + v148;
              v149 = sub_23FB2D718();
              v228 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
              swift_bridgeObjectRetain();
              v228(v258, v243, v149);
              goto LABEL_75;
            case 5u:
              *v10 = *v11;
              v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v244 = (char *)v11 + v150;
              v259 = (char *)v10 + v150;
              v151 = sub_23FB2D718();
              v229 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
              swift_bridgeObjectRetain();
              v229(v259, v244, v151);
              goto LABEL_75;
            case 9u:
              *(_DWORD *)v10 = *(_DWORD *)v11;
              v152 = v11[2];
              v10[1] = v11[1];
              v10[2] = v152;
              v153 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v245 = (char *)v11 + v153;
              v260 = (char *)v10 + v153;
              v154 = sub_23FB2D718();
              v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16);
              swift_bridgeObjectRetain();
              v230(v260, v245, v154);
LABEL_75:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
              break;
          }
LABEL_76:
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v89);
        }
        v155 = *(int *)(v12 + 20);
        v156 = (char *)v10 + v155;
        v157 = (char *)v11 + v155;
        v158 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v156, v157, v158);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
      }
LABEL_78:
      v159 = *(int *)(v8 + 24);
      v160 = (char *)a1 + v159;
      v161 = (char *)a2 + v159;
      v162 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v160, v161, v162);
LABEL_108:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4u:
      v22 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v22))
      {
        v23 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v93))
        {
          v94 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v102 = a2[1];
              *a1 = *a2;
              a1[1] = v102;
              swift_bridgeObjectRetain();
              goto LABEL_83;
            case 4u:
              *a1 = *a2;
              v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v164 = (char *)a1 + v163;
              v165 = (char *)a2 + v163;
              v166 = sub_23FB2D718();
              v167 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16);
              swift_bridgeObjectRetain();
              v167(v164, v165, v166);
              goto LABEL_83;
            case 5u:
              *a1 = *a2;
              v168 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v169 = (char *)a1 + v168;
              v170 = (char *)a2 + v168;
              v171 = sub_23FB2D718();
              v172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
              swift_bridgeObjectRetain();
              v172(v169, v170, v171);
              goto LABEL_83;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              v173 = a2[2];
              a1[1] = a2[1];
              a1[2] = v173;
              v174 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v175 = (char *)a1 + v174;
              v176 = (char *)a2 + v174;
              v177 = sub_23FB2D718();
              v178 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
              swift_bridgeObjectRetain();
              v178(v175, v176, v177);
LABEL_83:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v93);
        }
        v179 = *(int *)(v22 + 20);
        v180 = (char *)a1 + v179;
        v181 = (char *)a2 + v179;
        v182 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v180, v181, v182);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v22);
      }
      v183 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v184 = *(int *)(v183 + 20);
      v185 = (_QWORD *)((char *)a1 + v184);
      v186 = (_QWORD *)((char *)a2 + v184);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v184, 1, v22))
      {
        v187 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
      }
      else
      {
        v188 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v186, 1, v188))
        {
          v189 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v190 = v186[1];
              *v185 = *v186;
              v185[1] = v190;
              swift_bridgeObjectRetain();
              goto LABEL_104;
            case 4u:
              *v185 = *v186;
              v206 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v249 = (char *)v186 + v206;
              v264 = (char *)v185 + v206;
              v207 = sub_23FB2D718();
              v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16);
              swift_bridgeObjectRetain();
              v234(v264, v249, v207);
              goto LABEL_104;
            case 5u:
              *v185 = *v186;
              v208 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v250 = (char *)v186 + v208;
              v265 = (char *)v185 + v208;
              v209 = sub_23FB2D718();
              v235 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16);
              swift_bridgeObjectRetain();
              v235(v265, v250, v209);
              goto LABEL_104;
            case 9u:
              *(_DWORD *)v185 = *(_DWORD *)v186;
              v210 = v186[2];
              v185[1] = v186[1];
              v185[2] = v210;
              v211 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v251 = (char *)v186 + v211;
              v266 = (char *)v185 + v211;
              v212 = sub_23FB2D718();
              v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16);
              swift_bridgeObjectRetain();
              v236(v266, v251, v212);
LABEL_104:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v185, 0, 1, v188);
        }
        v213 = *(int *)(v22 + 20);
        v214 = (char *)v185 + v213;
        v215 = (char *)v186 + v213;
        v216 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v214, v215, v216);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v185, 0, 1, v22);
      }
      v217 = *(int *)(v183 + 24);
      v218 = (char *)a1 + v217;
      v219 = (char *)a2 + v217;
      v220 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(v218, v219, v220);
      goto LABEL_108;
    case 5u:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      a1[2] = a2[2];
      v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_23FB2D718();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      goto LABEL_108;
    case 6u:
      *a1 = *a2;
      v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_23FB2D718();
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v31, v32, v33);
      goto LABEL_108;
    case 7u:
      v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v36 = *(int *)(v8 + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = type metadata accessor for TranscriptProtoASTPickType(0);
      swift_bridgeObjectRetain();
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v38, 1, v39))
      {
        v40 = sub_23F6916B8(&qword_256EA8510);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v37[8] = v38[8];
        v95 = *(int *)(v39 + 20);
        v96 = &v37[v95];
        v97 = &v38[v95];
        v98 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v37, 0, 1, v39);
      }
      goto LABEL_78;
    case 8u:
      v41 = a2[1];
      *a1 = *a2;
      a1[1] = v41;
      v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      v43 = (char *)a1 + v42;
      v44 = (char *)a2 + v42;
      v45 = sub_23FB2D718();
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
      goto LABEL_108;
    case 9u:
      v47 = a2[1];
      *a1 = *a2;
      a1[1] = v47;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = sub_23FB2D718();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      swift_bridgeObjectRetain();
      v52(v49, v50, v51);
      goto LABEL_108;
    case 0xAu:
      v53 = a2[1];
      *a1 = *a2;
      a1[1] = v53;
      v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = sub_23FB2D718();
      v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      goto LABEL_108;
    case 0xBu:
      v59 = a2[1];
      *a1 = *a2;
      a1[1] = v59;
      v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      v63 = sub_23FB2D718();
      v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
      swift_bridgeObjectRetain();
      v64(v61, v62, v63);
      goto LABEL_108;
    case 0xCu:
      *a1 = *a2;
      v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      v68 = sub_23FB2D718();
      v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
      swift_bridgeObjectRetain();
      v69(v66, v67, v68);
      goto LABEL_108;
    case 0xDu:
      v70 = a2[1];
      *a1 = *a2;
      a1[1] = v70;
      v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      v74 = sub_23FB2D718();
      v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
      swift_bridgeObjectRetain();
      v75(v72, v73, v74);
      goto LABEL_108;
    case 0xEu:
      v76 = a2[1];
      *a1 = *a2;
      a1[1] = v76;
      v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      v78 = (char *)a1 + v77;
      v79 = (char *)a2 + v77;
      v80 = sub_23FB2D718();
      v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
      swift_bridgeObjectRetain();
      v81(v78, v79, v80);
      goto LABEL_108;
    case 0xFu:
    case 0x11u:
      v82 = sub_23FB2D718();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(a1, a2, v82);
      goto LABEL_108;
    case 0x10u:
      *a1 = *a2;
      v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      v84 = (char *)a1 + v83;
      v85 = (char *)a2 + v83;
      v86 = sub_23FB2D718();
      v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
      swift_bridgeObjectRetain();
      v87(v84, v85, v86);
      goto LABEL_108;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *assignWithCopy for TranscriptProtoAstflatExprEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  void (*v200)(char *, char *, uint64_t);
  void (*v201)(char *, char *, uint64_t);
  void (*v202)(char *, char *, uint64_t);
  void (*v203)(char *, char *, uint64_t);
  void (*v204)(char *, char *, uint64_t);
  void (*v205)(char *, char *, uint64_t);
  void (*v206)(char *, char *, uint64_t);
  void (*v207)(char *, char *, uint64_t);
  void (*v208)(char *, char *, uint64_t);
  void (*v209)(char *, char *, uint64_t);
  void (*v210)(char *, char *, uint64_t);
  void (*v211)(char *, char *, uint64_t);
  void (*v212)(char *, char *, uint64_t);
  void (*v213)(char *, char *, uint64_t);
  void (*v214)(char *, char *, uint64_t);
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
        {
          v7 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              goto LABEL_50;
            case 4u:
              *a1 = *a2;
              v90 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v91 = (char *)a1 + v90;
              v92 = (char *)a2 + v90;
              v93 = sub_23FB2D718();
              v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
              swift_bridgeObjectRetain();
              v94(v91, v92, v93);
              goto LABEL_50;
            case 5u:
              *a1 = *a2;
              v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v96 = (char *)a1 + v95;
              v97 = (char *)a2 + v95;
              v98 = sub_23FB2D718();
              v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
              swift_bridgeObjectRetain();
              v99(v96, v97, v98);
              goto LABEL_50;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v101 = (char *)a1 + v100;
              v102 = (char *)a2 + v100;
              v103 = sub_23FB2D718();
              v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
              swift_bridgeObjectRetain();
              v104(v101, v102, v103);
LABEL_50:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
              break;
          }
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        }
        v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v106 = (char *)a1 + v105;
        v107 = (char *)a2 + v105;
        v108 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
        goto LABEL_109;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v9 = *(int *)(v8 + 20);
        v10 = (_QWORD *)((char *)a1 + v9);
        v11 = (_QWORD *)((char *)a2 + v9);
        v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))goto LABEL_11;
        v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v79))goto LABEL_34;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v10 = *v11;
            v10[1] = v11[1];
            swift_bridgeObjectRetain();
            goto LABEL_57;
          case 4u:
            *v10 = *v11;
            v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v215 = (char *)v11 + v109;
            v230 = (char *)v10 + v109;
            v110 = sub_23FB2D718();
            v200 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            v200(v230, v215, v110);
            goto LABEL_57;
          case 5u:
            *v10 = *v11;
            v111 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v216 = (char *)v11 + v111;
            v231 = (char *)v10 + v111;
            v112 = sub_23FB2D718();
            v201 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
            swift_bridgeObjectRetain();
            v201(v231, v216, v112);
            goto LABEL_57;
          case 9u:
            *(_DWORD *)v10 = *(_DWORD *)v11;
            v10[1] = v11[1];
            v10[2] = v11[2];
            v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v217 = (char *)v11 + v113;
            v232 = (char *)v10 + v113;
            v114 = sub_23FB2D718();
            v202 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16);
            swift_bridgeObjectRetain();
            v202(v232, v217, v114);
LABEL_57:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            break;
        }
        goto LABEL_77;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v14 = v13[5];
        v15 = (_QWORD *)((char *)a1 + v14);
        v16 = (_QWORD *)((char *)a2 + v14);
        v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
        {
          v18 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          v80 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v80))
          {
            v81 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v15 = *v16;
                v15[1] = v16[1];
                swift_bridgeObjectRetain();
                goto LABEL_63;
              case 4u:
                *v15 = *v16;
                v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v218 = (char *)v16 + v115;
                v233 = (char *)v15 + v115;
                v116 = sub_23FB2D718();
                v203 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
                swift_bridgeObjectRetain();
                v203(v233, v218, v116);
                goto LABEL_63;
              case 5u:
                *v15 = *v16;
                v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v219 = (char *)v16 + v117;
                v234 = (char *)v15 + v117;
                v118 = sub_23FB2D718();
                v204 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
                swift_bridgeObjectRetain();
                v204(v234, v219, v118);
                goto LABEL_63;
              case 9u:
                *(_DWORD *)v15 = *(_DWORD *)v16;
                v15[1] = v16[1];
                v15[2] = v16[2];
                v119 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v220 = (char *)v16 + v119;
                v235 = (char *)v15 + v119;
                v120 = sub_23FB2D718();
                v205 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
                swift_bridgeObjectRetain();
                v205(v235, v220, v120);
LABEL_63:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v80);
          }
          v121 = *(int *)(v17 + 20);
          v122 = (char *)v15 + v121;
          v123 = (char *)v16 + v121;
          v124 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
        }
        v125 = v13[6];
        v126 = (_QWORD *)((char *)a1 + v125);
        v127 = (_QWORD *)((char *)a2 + v125);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v125, 1, v17))
        {
          v128 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
        }
        else
        {
          v129 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v127, 1, v129))
          {
            v130 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v126 = *v127;
                v126[1] = v127[1];
                swift_bridgeObjectRetain();
                goto LABEL_97;
              case 4u:
                *v126 = *v127;
                v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v224 = (char *)v127 + v171;
                v239 = (char *)v126 + v171;
                v172 = sub_23FB2D718();
                v209 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 16);
                swift_bridgeObjectRetain();
                v209(v239, v224, v172);
                goto LABEL_97;
              case 5u:
                *v126 = *v127;
                v173 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v225 = (char *)v127 + v173;
                v240 = (char *)v126 + v173;
                v174 = sub_23FB2D718();
                v210 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
                swift_bridgeObjectRetain();
                v210(v240, v225, v174);
                goto LABEL_97;
              case 9u:
                *(_DWORD *)v126 = *(_DWORD *)v127;
                v126[1] = v127[1];
                v126[2] = v127[2];
                v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v226 = (char *)v127 + v175;
                v241 = (char *)v126 + v175;
                v176 = sub_23FB2D718();
                v211 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
                swift_bridgeObjectRetain();
                v211(v241, v226, v176);
LABEL_97:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v126, 0, 1, v129);
          }
          v177 = *(int *)(v17 + 20);
          v178 = (char *)v126 + v177;
          v179 = (char *)v127 + v177;
          v180 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v178, v179, v180);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v126, 0, 1, v17);
        }
        v181 = v13[7];
        v182 = (char *)a1 + v181;
        v183 = (char *)a2 + v181;
        v184 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v182, v183, v184);
        goto LABEL_109;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v19 = *(int *)(v8 + 20);
        v10 = (_QWORD *)((char *)a1 + v19);
        v11 = (_QWORD *)((char *)a2 + v19);
        v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
        {
LABEL_11:
          v20 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v79 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v79))
          {
LABEL_34:
            v82 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v10 = *v11;
                v10[1] = v11[1];
                swift_bridgeObjectRetain();
                goto LABEL_76;
              case 4u:
                *v10 = *v11;
                v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v221 = (char *)v11 + v131;
                v236 = (char *)v10 + v131;
                v132 = sub_23FB2D718();
                v206 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
                swift_bridgeObjectRetain();
                v206(v236, v221, v132);
                goto LABEL_76;
              case 5u:
                *v10 = *v11;
                v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v222 = (char *)v11 + v133;
                v237 = (char *)v10 + v133;
                v134 = sub_23FB2D718();
                v207 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16);
                swift_bridgeObjectRetain();
                v207(v237, v222, v134);
                goto LABEL_76;
              case 9u:
                *(_DWORD *)v10 = *(_DWORD *)v11;
                v10[1] = v11[1];
                v10[2] = v11[2];
                v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v223 = (char *)v11 + v135;
                v238 = (char *)v10 + v135;
                v136 = sub_23FB2D718();
                v208 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
                swift_bridgeObjectRetain();
                v208(v238, v223, v136);
LABEL_76:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
                break;
            }
LABEL_77:
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v79);
          }
          v137 = *(int *)(v12 + 20);
          v138 = (char *)v10 + v137;
          v139 = (char *)v11 + v137;
          v140 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v138, v139, v140);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
        }
LABEL_79:
        v141 = *(int *)(v8 + 24);
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        v144 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v143, v144);
LABEL_109:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v21))
        {
          v22 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v83 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v83))
          {
            v84 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_84;
              case 4u:
                *a1 = *a2;
                v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v146 = (char *)a1 + v145;
                v147 = (char *)a2 + v145;
                v148 = sub_23FB2D718();
                v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16);
                swift_bridgeObjectRetain();
                v149(v146, v147, v148);
                goto LABEL_84;
              case 5u:
                *a1 = *a2;
                v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v151 = (char *)a1 + v150;
                v152 = (char *)a2 + v150;
                v153 = sub_23FB2D718();
                v154 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16);
                swift_bridgeObjectRetain();
                v154(v151, v152, v153);
                goto LABEL_84;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                v155 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v156 = (char *)a1 + v155;
                v157 = (char *)a2 + v155;
                v158 = sub_23FB2D718();
                v159 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
                swift_bridgeObjectRetain();
                v159(v156, v157, v158);
LABEL_84:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v83);
          }
          v160 = *(int *)(v21 + 20);
          v161 = (char *)a1 + v160;
          v162 = (char *)a2 + v160;
          v163 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16))(v161, v162, v163);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v21);
        }
        v164 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v165 = *(int *)(v164 + 20);
        v166 = (_QWORD *)((char *)a1 + v165);
        v167 = (_QWORD *)((char *)a2 + v165);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v165, 1, v21))
        {
          v168 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
        }
        else
        {
          v169 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v167, 1, v169))
          {
            v170 = sub_23F6916B8(&qword_256EA25F0);
            memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v166 = *v167;
                v166[1] = v167[1];
                swift_bridgeObjectRetain();
                goto LABEL_105;
              case 4u:
                *v166 = *v167;
                v185 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v227 = (char *)v167 + v185;
                v242 = (char *)v166 + v185;
                v186 = sub_23FB2D718();
                v212 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16);
                swift_bridgeObjectRetain();
                v212(v242, v227, v186);
                goto LABEL_105;
              case 5u:
                *v166 = *v167;
                v187 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v228 = (char *)v167 + v187;
                v243 = (char *)v166 + v187;
                v188 = sub_23FB2D718();
                v213 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16);
                swift_bridgeObjectRetain();
                v213(v243, v228, v188);
                goto LABEL_105;
              case 9u:
                *(_DWORD *)v166 = *(_DWORD *)v167;
                v166[1] = v167[1];
                v166[2] = v167[2];
                v189 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v229 = (char *)v167 + v189;
                v244 = (char *)v166 + v189;
                v190 = sub_23FB2D718();
                v214 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16);
                swift_bridgeObjectRetain();
                v214(v244, v229, v190);
LABEL_105:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
                break;
            }
            _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v166, 0, 1, v169);
          }
          v191 = *(int *)(v21 + 20);
          v192 = (char *)v166 + v191;
          v193 = (char *)v167 + v191;
          v194 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v192, v193, v194);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v166, 0, 1, v21);
        }
        v195 = *(int *)(v164 + 24);
        v196 = (char *)a1 + v195;
        v197 = (char *)a2 + v195;
        v198 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v196, v197, v198);
        goto LABEL_109;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2D718();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        goto LABEL_109;
      case 6u:
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_23FB2D718();
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        goto LABEL_109;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v33 = *(int *)(v8 + 20);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = type metadata accessor for TranscriptProtoASTPickType(0);
        swift_bridgeObjectRetain();
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v36))
        {
          v37 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v85 = *(_QWORD *)v35;
          v34[8] = v35[8];
          *(_QWORD *)v34 = v85;
          v86 = *(int *)(v36 + 20);
          v87 = &v34[v86];
          v88 = &v35[v86];
          v89 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v36);
        }
        goto LABEL_79;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = sub_23FB2D718();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        goto LABEL_109;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
        v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = sub_23FB2D718();
        v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v47(v44, v45, v46);
        goto LABEL_109;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_23FB2D718();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        goto LABEL_109;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = sub_23FB2D718();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v54, v55, v56);
        goto LABEL_109;
      case 0xCu:
        *a1 = *a2;
        v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        v61 = sub_23FB2D718();
        v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        goto LABEL_109;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = sub_23FB2D718();
        v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
        swift_bridgeObjectRetain();
        v67(v64, v65, v66);
        goto LABEL_109;
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        v71 = sub_23FB2D718();
        v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v69, v70, v71);
        goto LABEL_109;
      case 0xFu:
      case 0x11u:
        v73 = sub_23FB2D718();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(a1, a2, v73);
        goto LABEL_109;
      case 0x10u:
        *a1 = *a2;
        v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        v77 = sub_23FB2D718();
        v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        v78(v75, v76, v77);
        goto LABEL_109;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoAstflatExprEnum(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int EnumCaseMultiPayload;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _DWORD *v125;
  _DWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _DWORD *v165;
  _DWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_60:
        v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v109 = (char *)a1 + v108;
        v110 = (char *)a2 + v108;
        v111 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
        goto LABEL_113;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v101 = (char *)a1 + v100;
          v102 = (char *)a2 + v100;
          v103 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v105 = (char *)a1 + v104;
          v106 = (char *)a2 + v104;
          v107 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v71 = (char *)a1 + v70;
          v72 = (char *)a2 + v70;
          v73 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_59;
      }
      swift_storeEnumTagMultiPayload();
LABEL_59:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_60;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v9 = *(int *)(v8 + 20);
      v10 = (_DWORD *)((char *)a1 + v9);
      v11 = (_DWORD *)((char *)a2 + v9);
      v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))goto LABEL_10;
      v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v74))goto LABEL_35;
      v84 = swift_getEnumCaseMultiPayload();
      switch(v84)
      {
        case 9:
          goto LABEL_78;
        case 5:
          goto LABEL_79;
        case 4:
          goto LABEL_50;
      }
      goto LABEL_81;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v14 = v13[5];
      v15 = (_DWORD *)((char *)a1 + v14);
      v16 = (_DWORD *)((char *)a2 + v14);
      v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
      {
        v18 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        goto LABEL_70;
      }
      v75 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v75))
      {
        v76 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        goto LABEL_69;
      }
      v85 = swift_getEnumCaseMultiPayload();
      switch(v85)
      {
        case 9:
          *v15 = *v16;
          *(_OWORD *)(v15 + 2) = *(_OWORD *)(v16 + 2);
          v112 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v113 = (char *)v15 + v112;
          v114 = (char *)v16 + v112;
          v115 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
          goto LABEL_66;
        case 5:
          *(_QWORD *)v15 = *(_QWORD *)v16;
          v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v117 = (char *)v15 + v116;
          v118 = (char *)v16 + v116;
          v119 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
          goto LABEL_66;
        case 4:
          *(_QWORD *)v15 = *(_QWORD *)v16;
          v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v87 = (char *)v15 + v86;
          v88 = (char *)v16 + v86;
          v89 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
LABEL_66:
          swift_storeEnumTagMultiPayload();
          goto LABEL_68;
      }
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
LABEL_68:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v75);
LABEL_69:
      v120 = *(int *)(v17 + 20);
      v121 = (char *)v15 + v120;
      v122 = (char *)v16 + v120;
      v123 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_70:
      v124 = v13[6];
      v125 = (_DWORD *)((char *)a1 + v124);
      v126 = (_DWORD *)((char *)a2 + v124);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v124, 1, v17))
      {
        v127 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
        goto LABEL_105;
      }
      v128 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v126, 1, v128))
      {
        v129 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
        goto LABEL_104;
      }
      v130 = swift_getEnumCaseMultiPayload();
      switch(v130)
      {
        case 9:
          *v125 = *v126;
          *(_OWORD *)(v125 + 2) = *(_OWORD *)(v126 + 2);
          v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v176 = (char *)v125 + v175;
          v177 = (char *)v126 + v175;
          v178 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
          goto LABEL_101;
        case 5:
          *(_QWORD *)v125 = *(_QWORD *)v126;
          v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v180 = (char *)v125 + v179;
          v181 = (char *)v126 + v179;
          v182 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v180, v181, v182);
          goto LABEL_101;
        case 4:
          *(_QWORD *)v125 = *(_QWORD *)v126;
          v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v132 = (char *)v125 + v131;
          v133 = (char *)v126 + v131;
          v134 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
LABEL_101:
          swift_storeEnumTagMultiPayload();
          goto LABEL_103;
      }
      memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
LABEL_103:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v125, 0, 1, v128);
LABEL_104:
      v183 = *(int *)(v17 + 20);
      v184 = (char *)v125 + v183;
      v185 = (char *)v126 + v183;
      v186 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v184, v185, v186);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v125, 0, 1, v17);
LABEL_105:
      v187 = v13[7];
      v188 = (char *)a1 + v187;
      v189 = (char *)a2 + v187;
      v190 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v188, v189, v190);
      goto LABEL_113;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v19 = *(int *)(v8 + 20);
      v10 = (_DWORD *)((char *)a1 + v19);
      v11 = (_DWORD *)((char *)a2 + v19);
      v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
      {
LABEL_10:
        v20 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        goto LABEL_84;
      }
      v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v74))
      {
LABEL_35:
        v77 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        goto LABEL_83;
      }
      v90 = swift_getEnumCaseMultiPayload();
      switch(v90)
      {
        case 9:
LABEL_78:
          *v10 = *v11;
          *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
          v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v136 = (char *)v10 + v135;
          v137 = (char *)v11 + v135;
          v138 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
          goto LABEL_80;
        case 5:
LABEL_79:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v140 = (char *)v10 + v139;
          v141 = (char *)v11 + v139;
          v142 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v140, v141, v142);
          goto LABEL_80;
        case 4:
LABEL_50:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v92 = (char *)v10 + v91;
          v93 = (char *)v11 + v91;
          v94 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
LABEL_80:
          swift_storeEnumTagMultiPayload();
          goto LABEL_82;
      }
LABEL_81:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
LABEL_82:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v74);
LABEL_83:
      v143 = *(int *)(v12 + 20);
      v144 = (char *)v10 + v143;
      v145 = (char *)v11 + v143;
      v146 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_84:
      v147 = *(int *)(v8 + 24);
      v148 = (char *)a1 + v147;
      v149 = (char *)a2 + v147;
      v150 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
      goto LABEL_113;
    case 4u:
      v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v21))
      {
        v22 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        goto LABEL_91;
      }
      v78 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v78))
      {
        v79 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        goto LABEL_90;
      }
      v95 = swift_getEnumCaseMultiPayload();
      switch(v95)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v151 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v152 = (char *)a1 + v151;
          v153 = (char *)a2 + v151;
          v154 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v152, v153, v154);
          goto LABEL_87;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v155 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v156 = (char *)a1 + v155;
          v157 = (char *)a2 + v155;
          v158 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v156, v157, v158);
          goto LABEL_87;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v97 = (char *)a1 + v96;
          v98 = (char *)a2 + v96;
          v99 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
LABEL_87:
          swift_storeEnumTagMultiPayload();
          goto LABEL_89;
      }
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
LABEL_89:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v78);
LABEL_90:
      v159 = *(int *)(v21 + 20);
      v160 = (char *)a1 + v159;
      v161 = (char *)a2 + v159;
      v162 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v21);
LABEL_91:
      v163 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v164 = *(int *)(v163 + 20);
      v165 = (_DWORD *)((char *)a1 + v164);
      v166 = (_DWORD *)((char *)a2 + v164);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v164, 1, v21))
      {
        v167 = sub_23F6916B8(&qword_256EA84E8);
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
        goto LABEL_112;
      }
      v168 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v166, 1, v168))
      {
        v169 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        goto LABEL_111;
      }
      v170 = swift_getEnumCaseMultiPayload();
      switch(v170)
      {
        case 9:
          *v165 = *v166;
          *(_OWORD *)(v165 + 2) = *(_OWORD *)(v166 + 2);
          v191 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v192 = (char *)v165 + v191;
          v193 = (char *)v166 + v191;
          v194 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v193, v194);
          goto LABEL_108;
        case 5:
          *(_QWORD *)v165 = *(_QWORD *)v166;
          v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v196 = (char *)v165 + v195;
          v197 = (char *)v166 + v195;
          v198 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
          goto LABEL_108;
        case 4:
          *(_QWORD *)v165 = *(_QWORD *)v166;
          v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v172 = (char *)v165 + v171;
          v173 = (char *)v166 + v171;
          v174 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v172, v173, v174);
LABEL_108:
          swift_storeEnumTagMultiPayload();
          goto LABEL_110;
      }
      memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
LABEL_110:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v165, 0, 1, v168);
LABEL_111:
      v199 = *(int *)(v21 + 20);
      v200 = (char *)v165 + v199;
      v201 = (char *)v166 + v199;
      v202 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v200, v201, v202);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v165, 0, 1, v21);
LABEL_112:
      v203 = *(int *)(v163 + 24);
      v204 = (char *)a1 + v203;
      v205 = (char *)a2 + v203;
      v206 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
LABEL_113:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_113;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      goto LABEL_113;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v31 = *(int *)(v8 + 20);
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      v34 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34))
      {
        v35 = sub_23F6916B8(&qword_256EA8510);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v32 = *(_QWORD *)v33;
        v32[8] = v33[8];
        v80 = *(int *)(v34 + 20);
        v81 = &v32[v80];
        v82 = &v33[v80];
        v83 = sub_23FB2D718();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
      }
      goto LABEL_84;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      goto LABEL_113;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      v43 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      goto LABEL_113;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      goto LABEL_113;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      goto LABEL_113;
    case 0xCu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      goto LABEL_113;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_113;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      v63 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
      goto LABEL_113;
    case 0xFu:
    case 0x11u:
      v64 = sub_23FB2D718();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(a1, a2, v64);
      goto LABEL_113;
    case 0x10u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      v68 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
      goto LABEL_113;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_DWORD *assignWithTake for TranscriptProtoAstflatExprEnum(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  int EnumCaseMultiPayload;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  _DWORD *v125;
  _DWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _DWORD *v165;
  _DWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
        {
          v7 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_61:
          v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v109 = (char *)a1 + v108;
          v110 = (char *)a2 + v108;
          v111 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 32))(v109, v110, v111);
          goto LABEL_114;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v101 = (char *)a1 + v100;
            v102 = (char *)a2 + v100;
            v103 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v101, v102, v103);
            break;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v105 = (char *)a1 + v104;
            v106 = (char *)a2 + v104;
            v107 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
            break;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v71 = (char *)a1 + v70;
            v72 = (char *)a2 + v70;
            v73 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            goto LABEL_60;
        }
        swift_storeEnumTagMultiPayload();
LABEL_60:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_61;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v8 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v9 = *(int *)(v8 + 20);
        v10 = (_DWORD *)((char *)a1 + v9);
        v11 = (_DWORD *)((char *)a2 + v9);
        v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))goto LABEL_11;
        v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v74))goto LABEL_36;
        v84 = swift_getEnumCaseMultiPayload();
        switch(v84)
        {
          case 9:
            goto LABEL_79;
          case 5:
            goto LABEL_80;
          case 4:
            goto LABEL_51;
        }
        goto LABEL_82;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v14 = v13[5];
        v15 = (_DWORD *)((char *)a1 + v14);
        v16 = (_DWORD *)((char *)a2 + v14);
        v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v17))
        {
          v18 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_71;
        }
        v75 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v16, 1, v75))
        {
          v76 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
          goto LABEL_70;
        }
        v85 = swift_getEnumCaseMultiPayload();
        switch(v85)
        {
          case 9:
            *v15 = *v16;
            *(_OWORD *)(v15 + 2) = *(_OWORD *)(v16 + 2);
            v112 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v113 = (char *)v15 + v112;
            v114 = (char *)v16 + v112;
            v115 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 32))(v113, v114, v115);
            goto LABEL_67;
          case 5:
            *(_QWORD *)v15 = *(_QWORD *)v16;
            v116 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v117 = (char *)v15 + v116;
            v118 = (char *)v16 + v116;
            v119 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
            goto LABEL_67;
          case 4:
            *(_QWORD *)v15 = *(_QWORD *)v16;
            v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v87 = (char *)v15 + v86;
            v88 = (char *)v16 + v86;
            v89 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
LABEL_67:
            swift_storeEnumTagMultiPayload();
            goto LABEL_69;
        }
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
LABEL_69:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v75);
LABEL_70:
        v120 = *(int *)(v17 + 20);
        v121 = (char *)v15 + v120;
        v122 = (char *)v16 + v120;
        v123 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_71:
        v124 = v13[6];
        v125 = (_DWORD *)((char *)a1 + v124);
        v126 = (_DWORD *)((char *)a2 + v124);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v124, 1, v17))
        {
          v127 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
          goto LABEL_106;
        }
        v128 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v126, 1, v128))
        {
          v129 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
          goto LABEL_105;
        }
        v130 = swift_getEnumCaseMultiPayload();
        switch(v130)
        {
          case 9:
            *v125 = *v126;
            *(_OWORD *)(v125 + 2) = *(_OWORD *)(v126 + 2);
            v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v176 = (char *)v125 + v175;
            v177 = (char *)v126 + v175;
            v178 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(v176, v177, v178);
            goto LABEL_102;
          case 5:
            *(_QWORD *)v125 = *(_QWORD *)v126;
            v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v180 = (char *)v125 + v179;
            v181 = (char *)v126 + v179;
            v182 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 32))(v180, v181, v182);
            goto LABEL_102;
          case 4:
            *(_QWORD *)v125 = *(_QWORD *)v126;
            v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v132 = (char *)v125 + v131;
            v133 = (char *)v126 + v131;
            v134 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
LABEL_102:
            swift_storeEnumTagMultiPayload();
            goto LABEL_104;
        }
        memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
LABEL_104:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v125, 0, 1, v128);
LABEL_105:
        v183 = *(int *)(v17 + 20);
        v184 = (char *)v125 + v183;
        v185 = (char *)v126 + v183;
        v186 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 32))(v184, v185, v186);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v125, 0, 1, v17);
LABEL_106:
        v187 = v13[7];
        v188 = (char *)a1 + v187;
        v189 = (char *)a2 + v187;
        v190 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v188, v189, v190);
        goto LABEL_114;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v19 = *(int *)(v8 + 20);
        v10 = (_DWORD *)((char *)a1 + v19);
        v11 = (_DWORD *)((char *)a2 + v19);
        v12 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v12))
        {
LABEL_11:
          v20 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          goto LABEL_85;
        }
        v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v11, 1, v74))
        {
LABEL_36:
          v77 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          goto LABEL_84;
        }
        v90 = swift_getEnumCaseMultiPayload();
        switch(v90)
        {
          case 9:
LABEL_79:
            *v10 = *v11;
            *(_OWORD *)(v10 + 2) = *(_OWORD *)(v11 + 2);
            v135 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v136 = (char *)v10 + v135;
            v137 = (char *)v11 + v135;
            v138 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
            goto LABEL_81;
          case 5:
LABEL_80:
            *(_QWORD *)v10 = *(_QWORD *)v11;
            v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v140 = (char *)v10 + v139;
            v141 = (char *)v11 + v139;
            v142 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v140, v141, v142);
            goto LABEL_81;
          case 4:
LABEL_51:
            *(_QWORD *)v10 = *(_QWORD *)v11;
            v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v92 = (char *)v10 + v91;
            v93 = (char *)v11 + v91;
            v94 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
LABEL_81:
            swift_storeEnumTagMultiPayload();
            goto LABEL_83;
        }
LABEL_82:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
LABEL_83:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v74);
LABEL_84:
        v143 = *(int *)(v12 + 20);
        v144 = (char *)v10 + v143;
        v145 = (char *)v11 + v143;
        v146 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_85:
        v147 = *(int *)(v8 + 24);
        v148 = (char *)a1 + v147;
        v149 = (char *)a2 + v147;
        v150 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v148, v149, v150);
        goto LABEL_114;
      case 4u:
        v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v21))
        {
          v22 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          goto LABEL_92;
        }
        v78 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v78))
        {
          v79 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
          goto LABEL_91;
        }
        v95 = swift_getEnumCaseMultiPayload();
        switch(v95)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            v151 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v152 = (char *)a1 + v151;
            v153 = (char *)a2 + v151;
            v154 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v152, v153, v154);
            goto LABEL_88;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v155 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v156 = (char *)a1 + v155;
            v157 = (char *)a2 + v155;
            v158 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v156, v157, v158);
            goto LABEL_88;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v97 = (char *)a1 + v96;
            v98 = (char *)a2 + v96;
            v99 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
LABEL_88:
            swift_storeEnumTagMultiPayload();
            goto LABEL_90;
        }
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
LABEL_90:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v78);
LABEL_91:
        v159 = *(int *)(v21 + 20);
        v160 = (char *)a1 + v159;
        v161 = (char *)a2 + v159;
        v162 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v21);
LABEL_92:
        v163 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v164 = *(int *)(v163 + 20);
        v165 = (_DWORD *)((char *)a1 + v164);
        v166 = (_DWORD *)((char *)a2 + v164);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v164, 1, v21))
        {
          v167 = sub_23F6916B8(&qword_256EA84E8);
          memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
          goto LABEL_113;
        }
        v168 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v166, 1, v168))
        {
          v169 = sub_23F6916B8(&qword_256EA25F0);
          memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
          goto LABEL_112;
        }
        v170 = swift_getEnumCaseMultiPayload();
        switch(v170)
        {
          case 9:
            *v165 = *v166;
            *(_OWORD *)(v165 + 2) = *(_OWORD *)(v166 + 2);
            v191 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v192 = (char *)v165 + v191;
            v193 = (char *)v166 + v191;
            v194 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v193, v194);
            goto LABEL_109;
          case 5:
            *(_QWORD *)v165 = *(_QWORD *)v166;
            v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v196 = (char *)v165 + v195;
            v197 = (char *)v166 + v195;
            v198 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
            goto LABEL_109;
          case 4:
            *(_QWORD *)v165 = *(_QWORD *)v166;
            v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v172 = (char *)v165 + v171;
            v173 = (char *)v166 + v171;
            v174 = sub_23FB2D718();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v172, v173, v174);
LABEL_109:
            swift_storeEnumTagMultiPayload();
            goto LABEL_111;
        }
        memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
LABEL_111:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v165, 0, 1, v168);
LABEL_112:
        v199 = *(int *)(v21 + 20);
        v200 = (char *)v165 + v199;
        v201 = (char *)v166 + v199;
        v202 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v200, v201, v202);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v165, 0, 1, v21);
LABEL_113:
        v203 = *(int *)(v163 + 24);
        v204 = (char *)a1 + v203;
        v205 = (char *)a2 + v203;
        v206 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
LABEL_114:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_114;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v27 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        goto LABEL_114;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v31 = *(int *)(v8 + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v34))
        {
          v35 = sub_23F6916B8(&qword_256EA8510);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v32 = *(_QWORD *)v33;
          v32[8] = v33[8];
          v80 = *(int *)(v34 + 20);
          v81 = &v32[v80];
          v82 = &v33[v80];
          v83 = sub_23FB2D718();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
          _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v34);
        }
        goto LABEL_85;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        goto LABEL_114;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        goto LABEL_114;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        goto LABEL_114;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        goto LABEL_114;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        goto LABEL_114;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_114;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_114;
      case 0xFu:
      case 0x11u:
        v64 = sub_23FB2D718();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 32))(a1, a2, v64);
        goto LABEL_114;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v65 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
        goto LABEL_114;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_23FA77B8C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  result = type metadata accessor for TranscriptProtoASTFlatValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(319);
                              if (v15 <= 0x3F)
                              {
                                result = sub_23FB2D718();
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(319);
                                  if (v17 <= 0x3F)
                                  {
                                    swift_initEnumMetadataMultiPayload();
                                    return 0;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *a1 = *a2;
          v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_23FB2D718();
          v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          goto LABEL_11;
        case 5u:
          *a1 = *a2;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_23FB2D718();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v21 = a2[2];
          a1[1] = a2[1];
          a1[2] = v21;
          v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_23FB2D718();
          v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v23, v24, v25);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v27 = *(int *)(a3 + 20);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      case 4u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
        goto LABEL_6;
      case 5u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_6:
        v6 = *(int *)(v5 + 20);
        goto LABEL_8;
      case 9u:
        swift_bridgeObjectRelease();
        v6 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
        v7 = a1 + v6;
        v8 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        break;
      default:
        break;
    }
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23FB2D718();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23FB2D718();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_9;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v19 = a2[2];
        a1[1] = a2[1];
        a1[2] = v19;
        v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v25 = *(int *)(a3 + 20);
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_16;
        case 4u:
          *a1 = *a2;
          v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_23FB2D718();
          v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v11, v12, v13);
          goto LABEL_16;
        case 5u:
          *a1 = *a2;
          v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v16 = (char *)a1 + v15;
          v17 = (char *)a2 + v15;
          v18 = sub_23FB2D718();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          goto LABEL_16;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v21 = (char *)a1 + v20;
          v22 = (char *)a2 + v20;
          v23 = sub_23FB2D718();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_7:
    v9 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v9 + 64));
    goto LABEL_23;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *a1 = *a2;
        v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v26 = (char *)a1 + v25;
        v27 = (char *)a2 + v25;
        v28 = sub_23FB2D718();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v26, v27, v28);
        break;
      case 5u:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_23FB2D718();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        break;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v35 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = sub_23FB2D718();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        break;
      default:
        v9 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v40 = *(int *)(a3 + 20);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  return a1;
}

char *initializeWithTake for TranscriptProtoASTFlatValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v13 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v10 = &a1[v9];
        v11 = &a2[v9];
        v12 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EA25F0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
  v21 = *(int *)(a3 + 20);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v21 = a1 + v20;
          v22 = a2 + v20;
          v23 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v25 = a1 + v24;
          v26 = a2 + v24;
          v27 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v11 = a1 + v10;
          v12 = a2 + v10;
          v13 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_20;
      }
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(a1, 0, 1, v6);
      goto LABEL_24;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_24;
      sub_23F93DADC(a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v15 = swift_getEnumCaseMultiPayload();
      switch(v15)
      {
        case 9:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v29 = a1 + v28;
          v30 = a2 + v28;
          v31 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v33 = a1 + v32;
          v34 = a2 + v32;
          v35 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v17 = a1 + v16;
          v18 = a2 + v16;
          v19 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          break;
        default:
          v14 = *(_QWORD *)(v6 - 8);
          goto LABEL_10;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    sub_23F93DADC(a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  v14 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_10:
  memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v14 + 64));
LABEL_24:
  v36 = *(int *)(a3 + 20);
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA78E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25F0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA78E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25F0);
}

void sub_23FA78E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBAE70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAstflatValueEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstflatValueEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_23FB2D718();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23FB2D718();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_9;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v19 = a2[2];
        a1[1] = a2[1];
        a1[2] = v19;
        v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstflatValueEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 3:
    case 6:
    case 7:
    case 8:
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
      goto LABEL_5;
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_5:
      v4 = *(int *)(v3 + 20);
      goto LABEL_7;
    case 9:
      swift_bridgeObjectRelease();
      v4 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_7:
      v5 = a1 + v4;
      v6 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoAstflatValueEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 6u:
    case 7u:
    case 8u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_23FB2D718();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      goto LABEL_7;
    case 5u:
      *a1 = *a2;
      v12 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      goto LABEL_7;
    case 9u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v17 = a2[2];
      a1[1] = a2[1];
      a1[2] = v17;
      v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_23FB2D718();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoAstflatValueEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_23FB2D718();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_8;
      case 5u:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23FB2D718();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        goto LABEL_8;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_23FB2D718();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TranscriptProtoAstflatValueEnum(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      break;
    case 5:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      break;
    case 4:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for TranscriptProtoAstflatValueEnum(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FA7985C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoStatementID(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValueArrayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValueArrayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValueDictVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValueDictVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprIndexVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v10))
      {
        v11 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v12 = a2[1];
            *a1 = *a2;
            a1[1] = v12;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *a1 = *a2;
            v13 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v14 = (char *)a1 + v13;
            v15 = (char *)a2 + v13;
            v16 = sub_23FB2D718();
            v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
            swift_bridgeObjectRetain();
            v17(v14, v15, v16);
            goto LABEL_13;
          case 5u:
            *a1 = *a2;
            v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v19 = (char *)a1 + v18;
            v20 = (char *)a2 + v18;
            v21 = sub_23FB2D718();
            v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
            swift_bridgeObjectRetain();
            v22(v19, v20, v21);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v23 = a2[2];
            a1[1] = a2[1];
            a1[2] = v23;
            v24 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v25 = (char *)a1 + v24;
            v26 = (char *)a2 + v24;
            v27 = sub_23FB2D718();
            v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
            swift_bridgeObjectRetain();
            v28(v25, v26, v27);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v10);
      }
      v29 = *(int *)(v7 + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v33 = *(int *)(a3 + 20);
    v34 = (uint64_t *)((char *)a1 + v33);
    v35 = (uint64_t *)((char *)a2 + v33);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v33, 1, v7))
    {
      v36 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v35, 1, v37))
      {
        v38 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v39 = v35[1];
            *v34 = *v35;
            v34[1] = v39;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *v34 = *v35;
            v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v59 = (char *)v35 + v40;
            v62 = (char *)v34 + v40;
            v41 = sub_23FB2D718();
            v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v42(v62, v59, v41);
            goto LABEL_26;
          case 5u:
            *v34 = *v35;
            v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v60 = (char *)v35 + v43;
            v63 = (char *)v34 + v43;
            v44 = sub_23FB2D718();
            v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
            swift_bridgeObjectRetain();
            v45(v63, v60, v44);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)v34 = *(_DWORD *)v35;
            v46 = v35[2];
            v34[1] = v35[1];
            v34[2] = v46;
            v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v61 = (char *)v35 + v47;
            v64 = (char *)v34 + v47;
            v48 = sub_23FB2D718();
            v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            v49(v64, v61, v48);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v37);
      }
      v50 = *(int *)(v7 + 20);
      v51 = (char *)v34 + v50;
      v52 = (char *)v35 + v50;
      v53 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v34, 0, 1, v7);
    }
    v54 = *(int *)(a3 + 24);
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    v57 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v6 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          v6 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          v7 = *(int *)(v6 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          v8 = a1 + v7;
          v9 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          break;
        default:
          break;
      }
    }
    v10 = a1 + *(int *)(v4 + 20);
    v11 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 20);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v4))
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v13))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v14 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          v14 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_17:
          v15 = *(int *)(v14 + 20);
          goto LABEL_19;
        case 9u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_19:
          v16 = v12 + v15;
          v17 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          break;
        default:
          break;
      }
    }
    v18 = v12 + *(int *)(v4 + 20);
    v19 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + *(int *)(a2 + 24);
  v21 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
    {
      v9 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *a1 = *a2;
          v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_23FB2D718();
          v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          goto LABEL_11;
        case 5u:
          *a1 = *a2;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_23FB2D718();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v21 = a2[2];
          a1[1] = a2[1];
          a1[2] = v21;
          v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_23FB2D718();
          v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v23, v24, v25);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    }
    v27 = *(int *)(v6 + 20);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v31 = *(int *)(a3 + 20);
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v31, 1, v6))
  {
    v34 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v33, 1, v35))
    {
      v36 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v37 = v33[1];
          *v32 = *v33;
          v32[1] = v37;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *v32 = *v33;
          v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v57 = (char *)v33 + v38;
          v60 = (char *)v32 + v38;
          v39 = sub_23FB2D718();
          v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v40(v60, v57, v39);
          goto LABEL_24;
        case 5u:
          *v32 = *v33;
          v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v58 = (char *)v33 + v41;
          v61 = (char *)v32 + v41;
          v42 = sub_23FB2D718();
          v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
          swift_bridgeObjectRetain();
          v43(v61, v58, v42);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)v32 = *(_DWORD *)v33;
          v44 = v33[2];
          v32[1] = v33[1];
          v32[2] = v44;
          v45 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v59 = (char *)v33 + v45;
          v62 = (char *)v32 + v45;
          v46 = sub_23FB2D718();
          v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          v47(v62, v59, v46);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v35);
    }
    v48 = *(int *)(v6 + 20);
    v49 = (char *)v32 + v48;
    v50 = (char *)v33 + v48;
    v51 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v32, 0, 1, v6);
  }
  v52 = *(int *)(a3 + 24);
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
    v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
    if (v13)
    {
      if (!v14)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *a1 = *a2;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v36 = (char *)a1 + v35;
            v37 = (char *)a2 + v35;
            v38 = sub_23FB2D718();
            v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v39(v36, v37, v38);
            goto LABEL_32;
          case 5u:
            *a1 = *a2;
            v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v41 = (char *)a1 + v40;
            v42 = (char *)a2 + v40;
            v43 = sub_23FB2D718();
            v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
            swift_bridgeObjectRetain();
            v44(v41, v42, v43);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            v45 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v46 = (char *)a1 + v45;
            v47 = (char *)a2 + v45;
            v48 = sub_23FB2D718();
            v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            v49(v46, v47, v48);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
LABEL_39:
        v65 = *(int *)(v6 + 20);
        v66 = (char *)a1 + v65;
        v67 = (char *)a2 + v65;
        v68 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v66, v67, v68);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v14)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *a1 = *a2;
              v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v51 = (char *)a1 + v50;
              v52 = (char *)a2 + v50;
              v53 = sub_23FB2D718();
              v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
              swift_bridgeObjectRetain();
              v54(v51, v52, v53);
              break;
            case 5u:
              *a1 = *a2;
              v55 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v56 = (char *)a1 + v55;
              v57 = (char *)a2 + v55;
              v58 = sub_23FB2D718();
              v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
              swift_bridgeObjectRetain();
              v59(v56, v57, v58);
              break;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              v60 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v61 = (char *)a1 + v60;
              v62 = (char *)a2 + v60;
              v63 = sub_23FB2D718();
              v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
              swift_bridgeObjectRetain();
              v64(v61, v62, v63);
              break;
            default:
              v15 = *(_QWORD *)(v12 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v15 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_17:
    memcpy(a1, a2, *(_QWORD *)(v15 + 64));
    goto LABEL_39;
  }
  if (v8)
  {
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_40;
  }
  v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_23FB2D718();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        goto LABEL_25;
      case 5u:
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_23FB2D718();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v26 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = sub_23FB2D718();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v27, v28, v29);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
  }
  v31 = *(int *)(v6 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_40:
  v69 = *(int *)(a3 + 20);
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v72 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v69, 1, v6);
  v73 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v71, 1, v6);
  if (!v72)
  {
    if (v73)
    {
      sub_23F93DADC((uint64_t)v70, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_46;
    }
    v77 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v78 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v70, 1, v77);
    v79 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v71, 1, v77);
    if (v78)
    {
      if (!v79)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v70 = *v71;
            v70[1] = v71[1];
            swift_bridgeObjectRetain();
            goto LABEL_71;
          case 4u:
            *v70 = *v71;
            v94 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v124 = (char *)v71 + v94;
            v133 = (char *)v70 + v94;
            v95 = sub_23FB2D718();
            v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
            swift_bridgeObjectRetain();
            v96(v133, v124, v95);
            goto LABEL_71;
          case 5u:
            *v70 = *v71;
            v97 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v125 = (char *)v71 + v97;
            v134 = (char *)v70 + v97;
            v98 = sub_23FB2D718();
            v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
            swift_bridgeObjectRetain();
            v99(v134, v125, v98);
            goto LABEL_71;
          case 9u:
            *(_DWORD *)v70 = *(_DWORD *)v71;
            v70[1] = v71[1];
            v70[2] = v71[2];
            v100 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v126 = (char *)v71 + v100;
            v135 = (char *)v70 + v100;
            v101 = sub_23FB2D718();
            v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
            swift_bridgeObjectRetain();
            v102(v135, v126, v101);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v70, 0, 1, v77);
LABEL_78:
        v112 = *(int *)(v6 + 20);
        v113 = (char *)v70 + v112;
        v114 = (char *)v71 + v112;
        v115 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 24))(v113, v114, v115);
        goto LABEL_79;
      }
    }
    else
    {
      if (!v79)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v70, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v70 = *v71;
              v70[1] = v71[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v70 = *v71;
              v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v127 = (char *)v71 + v103;
              v136 = (char *)v70 + v103;
              v104 = sub_23FB2D718();
              v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16);
              swift_bridgeObjectRetain();
              v105(v136, v127, v104);
              break;
            case 5u:
              *v70 = *v71;
              v106 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v128 = (char *)v71 + v106;
              v137 = (char *)v70 + v106;
              v107 = sub_23FB2D718();
              v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
              swift_bridgeObjectRetain();
              v108(v137, v128, v107);
              break;
            case 9u:
              *(_DWORD *)v70 = *(_DWORD *)v71;
              v70[1] = v71[1];
              v70[2] = v71[2];
              v109 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v129 = (char *)v71 + v109;
              v138 = (char *)v70 + v109;
              v110 = sub_23FB2D718();
              v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
              swift_bridgeObjectRetain();
              v111(v138, v129, v110);
              break;
            default:
              v80 = *(_QWORD *)(v77 - 8);
              goto LABEL_56;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_78;
      }
      sub_23F93DADC((uint64_t)v70, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v80 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_56:
    memcpy(v70, v71, *(_QWORD *)(v80 + 64));
    goto LABEL_78;
  }
  if (v73)
  {
LABEL_46:
    v76 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_79;
  }
  v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v71, 1, v74))
  {
    v75 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v70 = *v71;
        v70[1] = v71[1];
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 4u:
        *v70 = *v71;
        v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v121 = (char *)v71 + v81;
        v130 = (char *)v70 + v81;
        v82 = sub_23FB2D718();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v130, v121, v82);
        goto LABEL_64;
      case 5u:
        *v70 = *v71;
        v84 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v122 = (char *)v71 + v84;
        v131 = (char *)v70 + v84;
        v85 = sub_23FB2D718();
        v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
        swift_bridgeObjectRetain();
        v86(v131, v122, v85);
        goto LABEL_64;
      case 9u:
        *(_DWORD *)v70 = *(_DWORD *)v71;
        v70[1] = v71[1];
        v70[2] = v71[2];
        v87 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v123 = (char *)v71 + v87;
        v132 = (char *)v70 + v87;
        v88 = sub_23FB2D718();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v132, v123, v88);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v70, 0, 1, v74);
  }
  v90 = *(int *)(v6 + 20);
  v91 = (char *)v70 + v90;
  v92 = (char *)v71 + v90;
  v93 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v70, 0, 1, v6);
LABEL_79:
  v116 = *(int *)(a3 + 24);
  v117 = (char *)a1 + v116;
  v118 = (char *)a2 + v116;
  v119 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 24))(v117, v118, v119);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatExprIndexVariant(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    goto LABEL_15;
  }
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v8))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *a1 = *a2;
        *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
        v15 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v8);
    goto LABEL_14;
  }
  v9 = sub_23F6916B8(&qword_256EA25F0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_14:
  v23 = *(int *)(v6 + 20);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_15:
  v27 = *(int *)(a3 + 20);
  v28 = (_DWORD *)((char *)a1 + v27);
  v29 = (_DWORD *)((char *)a2 + v27);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v27, 1, v6))
  {
    v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v29, 1, v31))
    {
      v32 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_28:
      v46 = *(int *)(v6 + 20);
      v47 = (char *)v28 + v46;
      v48 = (char *)v29 + v46;
      v49 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v6);
      goto LABEL_29;
    }
    v33 = swift_getEnumCaseMultiPayload();
    switch(v33)
    {
      case 9:
        *v28 = *v29;
        *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
        v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v39 = (char *)v28 + v38;
        v40 = (char *)v29 + v38;
        v41 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      case 5:
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v43 = (char *)v28 + v42;
        v44 = (char *)v29 + v42;
        v45 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
        break;
      case 4:
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v35 = (char *)v28 + v34;
        v36 = (char *)v29 + v34;
        v37 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
        break;
      default:
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        goto LABEL_27;
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v28, 0, 1, v31);
    goto LABEL_28;
  }
  v30 = sub_23F6916B8(&qword_256EA84E8);
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_29:
  v50 = *(int *)(a3 + 24);
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
  return a1;
}

_DWORD *assignWithTake for TranscriptProtoASTFlatExprIndexVariant(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_27:
        v34 = *(int *)(v6 + 20);
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v26 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v31 = (char *)a1 + v30;
          v32 = (char *)a2 + v30;
          v33 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v22 = (char *)a1 + v21;
          v23 = (char *)a2 + v21;
          v24 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v9);
      goto LABEL_27;
    }
LABEL_7:
    v11 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_42;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_7;
  }
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v12);
  v14 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      v15 = swift_getEnumCaseMultiPayload();
      switch(v15)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v43 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v44 = (char *)a1 + v43;
          v45 = (char *)a2 + v43;
          v46 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v47 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v48 = (char *)a1 + v47;
          v49 = (char *)a2 + v47;
          v50 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v12);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_41;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v38 = swift_getEnumCaseMultiPayload();
      switch(v38)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v51 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v55 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v56 = (char *)a1 + v55;
          v57 = (char *)a2 + v55;
          v58 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v40 = (char *)a1 + v39;
          v41 = (char *)a2 + v39;
          v42 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
          break;
        default:
          v25 = *(_QWORD *)(v12 - 8);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  v25 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_21:
  memcpy(a1, a2, *(_QWORD *)(v25 + 64));
LABEL_41:
  v59 = *(int *)(v6 + 20);
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  v62 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
LABEL_42:
  v63 = *(int *)(a3 + 20);
  v64 = (uint64_t)a1 + v63;
  v65 = (uint64_t)a2 + v63;
  v66 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1 + v63, 1, v6);
  v67 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v65, 1, v6);
  if (!v66)
  {
    if (v67)
    {
      sub_23F93DADC(v64, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_48;
    }
    v71 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v72 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v64, 1, v71);
    v73 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v65, 1, v71);
    if (v72)
    {
      if (!v73)
      {
        v74 = swift_getEnumCaseMultiPayload();
        switch(v74)
        {
          case 9:
            *(_DWORD *)v64 = *(_DWORD *)v65;
            *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
            v102 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v103 = v64 + v102;
            v104 = v65 + v102;
            v105 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
            break;
          case 5:
            *(_QWORD *)v64 = *(_QWORD *)v65;
            v106 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v107 = v64 + v106;
            v108 = v65 + v106;
            v109 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
            break;
          case 4:
            *(_QWORD *)v64 = *(_QWORD *)v65;
            v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v76 = v64 + v75;
            v77 = v65 + v75;
            v78 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
            break;
          default:
            memcpy((void *)v64, (const void *)v65, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
LABEL_78:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v64, 0, 1, v71);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v73)
      {
        if (a1 == a2)
          goto LABEL_83;
        sub_23F93DADC(v64, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v97 = swift_getEnumCaseMultiPayload();
        switch(v97)
        {
          case 9:
            *(_DWORD *)v64 = *(_DWORD *)v65;
            *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
            v110 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v111 = v64 + v110;
            v112 = v65 + v110;
            v113 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
            break;
          case 5:
            *(_QWORD *)v64 = *(_QWORD *)v65;
            v114 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v115 = v64 + v114;
            v116 = v65 + v114;
            v117 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
            break;
          case 4:
            *(_QWORD *)v64 = *(_QWORD *)v65;
            v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v99 = v64 + v98;
            v100 = v65 + v98;
            v101 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v99, v100, v101);
            break;
          default:
            v84 = *(_QWORD *)(v71 - 8);
            goto LABEL_62;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      }
      sub_23F93DADC(v64, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v84 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_62:
    memcpy((void *)v64, (const void *)v65, *(_QWORD *)(v84 + 64));
LABEL_83:
    v118 = *(int *)(v6 + 20);
    v119 = v64 + v118;
    v120 = v65 + v118;
    v121 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 40))(v119, v120, v121);
    goto LABEL_84;
  }
  if (!v67)
  {
    v68 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v65, 1, v68))
    {
      v69 = sub_23F6916B8(&qword_256EA25F0);
      memcpy((void *)v64, (const void *)v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
LABEL_68:
      v93 = *(int *)(v6 + 20);
      v94 = v64 + v93;
      v95 = v65 + v93;
      v96 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v64, 0, 1, v6);
      goto LABEL_84;
    }
    v79 = swift_getEnumCaseMultiPayload();
    switch(v79)
    {
      case 9:
        *(_DWORD *)v64 = *(_DWORD *)v65;
        *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
        v85 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v86 = v64 + v85;
        v87 = v65 + v85;
        v88 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(v86, v87, v88);
        break;
      case 5:
        *(_QWORD *)v64 = *(_QWORD *)v65;
        v89 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v90 = v64 + v89;
        v91 = v65 + v89;
        v92 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
        break;
      case 4:
        *(_QWORD *)v64 = *(_QWORD *)v65;
        v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v81 = v64 + v80;
        v82 = v65 + v80;
        v83 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        break;
      default:
        memcpy((void *)v64, (const void *)v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        goto LABEL_67;
    }
    swift_storeEnumTagMultiPayload();
LABEL_67:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v64, 0, 1, v68);
    goto LABEL_68;
  }
LABEL_48:
  v70 = sub_23F6916B8(&qword_256EA84E8);
  memcpy((void *)v64, (const void *)v65, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
LABEL_84:
  v122 = *(int *)(a3 + 24);
  v123 = (char *)a1 + v122;
  v124 = (char *)a2 + v122;
  v125 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 40))(v123, v124, v125);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprIndexVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA7C688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA98E0C(a1, a2, a3, &qword_256EA84E8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprIndexVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA7C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA98E64(a1, a2, a3, a4, &qword_256EA84E8);
}

void sub_23FA7C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA98EB8(a1, a2, a3, qword_256EBAA30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprInfixVariant(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v15 = v9[1];
            *v8 = *v9;
            v8[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v8 = *v9;
            v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v56 = (char *)v9 + v16;
            v62 = (char *)v8 + v16;
            v17 = sub_23FB2D718();
            v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v18(v62, v56, v17);
            goto LABEL_13;
          case 5u:
            *v8 = *v9;
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v57 = (char *)v9 + v19;
            v63 = (char *)v8 + v19;
            v20 = sub_23FB2D718();
            v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            v21(v63, v57, v20);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            v22 = v9[2];
            v8[1] = v9[1];
            v8[2] = v22;
            v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v58 = (char *)v9 + v23;
            v64 = (char *)v8 + v23;
            v24 = sub_23FB2D718();
            v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
            swift_bridgeObjectRetain();
            v25(v64, v58, v24);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v13);
      }
      v26 = *(int *)(v10 + 20);
      v27 = (char *)v8 + v26;
      v28 = (char *)v9 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v30 = a3[6];
    v31 = (uint64_t *)((char *)v4 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v30, 1, v10))
    {
      v33 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34))
      {
        v35 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v36 = v32[1];
            *v31 = *v32;
            v31[1] = v36;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *v31 = *v32;
            v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v59 = (char *)v32 + v37;
            v65 = (char *)v31 + v37;
            v38 = sub_23FB2D718();
            v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v39(v65, v59, v38);
            goto LABEL_26;
          case 5u:
            *v31 = *v32;
            v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v60 = (char *)v32 + v40;
            v66 = (char *)v31 + v40;
            v41 = sub_23FB2D718();
            v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v42(v66, v60, v41);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)v31 = *(_DWORD *)v32;
            v43 = v32[2];
            v31[1] = v32[1];
            v31[2] = v43;
            v44 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v61 = (char *)v32 + v44;
            v67 = (char *)v31 + v44;
            v45 = sub_23FB2D718();
            v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
            swift_bridgeObjectRetain();
            v46(v67, v61, v45);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v34);
      }
      v47 = *(int *)(v10 + 20);
      v48 = (char *)v31 + v47;
      v49 = (char *)v32 + v47;
      v50 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v10);
    }
    v51 = a3[7];
    v52 = (char *)v4 + v51;
    v53 = (char *)a2 + v51;
    v54 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprInfixVariant(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          v9 = v4 + v8;
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v5))
  {
    v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v15 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          v15 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_17:
          v16 = *(int *)(v15 + 20);
          goto LABEL_19;
        case 9u:
          swift_bridgeObjectRelease();
          v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_19:
          v17 = v13 + v16;
          v18 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
          break;
        default:
          break;
      }
    }
    v19 = v13 + *(int *)(v5 + 20);
    v20 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  v21 = a1 + a2[7];
  v22 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

_BYTE *initializeWithCopy for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v13 = v8[1];
          *v7 = *v8;
          v7[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v7 = *v8;
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v54 = (char *)v8 + v14;
          v60 = (char *)v7 + v14;
          v15 = sub_23FB2D718();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v60, v54, v15);
          goto LABEL_11;
        case 5u:
          *v7 = *v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v55 = (char *)v8 + v17;
          v61 = (char *)v7 + v17;
          v18 = sub_23FB2D718();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v61, v55, v18);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v7 = *(_DWORD *)v8;
          v20 = v8[2];
          v7[1] = v8[1];
          v7[2] = v20;
          v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v56 = (char *)v8 + v21;
          v62 = (char *)v7 + v21;
          v22 = sub_23FB2D718();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v62, v56, v22);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    }
    v24 = *(int *)(v9 + 20);
    v25 = (char *)v7 + v24;
    v26 = (char *)v8 + v24;
    v27 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v28 = a3[6];
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v28], 1, v9))
  {
    v31 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v30, 1, v32))
    {
      v33 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v34 = v30[1];
          *v29 = *v30;
          v29[1] = v34;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *v29 = *v30;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v57 = (char *)v30 + v35;
          v63 = (char *)v29 + v35;
          v36 = sub_23FB2D718();
          v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v37(v63, v57, v36);
          goto LABEL_24;
        case 5u:
          *v29 = *v30;
          v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v58 = (char *)v30 + v38;
          v64 = (char *)v29 + v38;
          v39 = sub_23FB2D718();
          v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v40(v64, v58, v39);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)v29 = *(_DWORD *)v30;
          v41 = v30[2];
          v29[1] = v30[1];
          v29[2] = v41;
          v42 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v59 = (char *)v30 + v42;
          v65 = (char *)v29 + v42;
          v43 = sub_23FB2D718();
          v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v44(v65, v59, v43);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v32);
    }
    v45 = *(int *)(v9 + 20);
    v46 = (char *)v29 + v45;
    v47 = (char *)v30 + v45;
    v48 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v29, 0, 1, v9);
  }
  v49 = a3[7];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *v7 = *v8;
            v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v109 = (char *)v8 + v32;
            v127 = (char *)v7 + v32;
            v33 = sub_23FB2D718();
            v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v127, v109, v33);
            goto LABEL_32;
          case 5u:
            *v7 = *v8;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v110 = (char *)v8 + v35;
            v128 = (char *)v7 + v35;
            v36 = sub_23FB2D718();
            v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v128, v110, v36);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v111 = (char *)v8 + v38;
            v129 = (char *)v7 + v38;
            v39 = sub_23FB2D718();
            v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v40(v129, v111, v39);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        v50 = *(int *)(v9 + 20);
        v51 = (char *)v7 + v50;
        v52 = (char *)v8 + v50;
        v53 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v7 = *v8;
              v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v112 = (char *)v8 + v41;
              v130 = (char *)v7 + v41;
              v42 = sub_23FB2D718();
              v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
              swift_bridgeObjectRetain();
              v43(v130, v112, v42);
              break;
            case 5u:
              *v7 = *v8;
              v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v113 = (char *)v8 + v44;
              v131 = (char *)v7 + v44;
              v45 = sub_23FB2D718();
              v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
              swift_bridgeObjectRetain();
              v46(v131, v113, v45);
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v114 = (char *)v8 + v47;
              v132 = (char *)v7 + v47;
              v48 = sub_23FB2D718();
              v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
              swift_bridgeObjectRetain();
              v49(v132, v114, v48);
              break;
            default:
              v18 = *(_QWORD *)(v15 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v18 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_17:
    memcpy(v7, v8, *(_QWORD *)(v18 + 64));
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *v7 = *v8;
        v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v106 = (char *)v8 + v19;
        v124 = (char *)v7 + v19;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v124, v106, v20);
        goto LABEL_25;
      case 5u:
        *v7 = *v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v107 = (char *)v8 + v22;
        v125 = (char *)v7 + v22;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v125, v107, v23);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v108 = (char *)v8 + v25;
        v126 = (char *)v7 + v25;
        v26 = sub_23FB2D718();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v126, v108, v26);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
  }
  v28 = *(int *)(v9 + 20);
  v29 = (char *)v7 + v28;
  v30 = (char *)v8 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  v54 = a3[6];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v54], 1, v9);
  v58 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v9);
  if (!v57)
  {
    if (v58)
    {
      sub_23F93DADC((uint64_t)v55, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_46;
    }
    v62 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v63 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v55, 1, v62);
    v64 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v62);
    if (v63)
    {
      if (!v64)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v55 = *v56;
            v55[1] = v56[1];
            swift_bridgeObjectRetain();
            goto LABEL_71;
          case 4u:
            *v55 = *v56;
            v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v118 = (char *)v56 + v79;
            v136 = (char *)v55 + v79;
            v80 = sub_23FB2D718();
            v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
            swift_bridgeObjectRetain();
            v81(v136, v118, v80);
            goto LABEL_71;
          case 5u:
            *v55 = *v56;
            v82 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v119 = (char *)v56 + v82;
            v137 = (char *)v55 + v82;
            v83 = sub_23FB2D718();
            v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
            swift_bridgeObjectRetain();
            v84(v137, v119, v83);
            goto LABEL_71;
          case 9u:
            *(_DWORD *)v55 = *(_DWORD *)v56;
            v55[1] = v56[1];
            v55[2] = v56[2];
            v85 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v120 = (char *)v56 + v85;
            v138 = (char *)v55 + v85;
            v86 = sub_23FB2D718();
            v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
            swift_bridgeObjectRetain();
            v87(v138, v120, v86);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v62);
LABEL_78:
        v97 = *(int *)(v9 + 20);
        v98 = (char *)v55 + v97;
        v99 = (char *)v56 + v97;
        v100 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 24))(v98, v99, v100);
        goto LABEL_79;
      }
    }
    else
    {
      if (!v64)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v55, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v55 = *v56;
              v55[1] = v56[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v55 = *v56;
              v88 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v121 = (char *)v56 + v88;
              v139 = (char *)v55 + v88;
              v89 = sub_23FB2D718();
              v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16);
              swift_bridgeObjectRetain();
              v90(v139, v121, v89);
              break;
            case 5u:
              *v55 = *v56;
              v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v122 = (char *)v56 + v91;
              v140 = (char *)v55 + v91;
              v92 = sub_23FB2D718();
              v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
              swift_bridgeObjectRetain();
              v93(v140, v122, v92);
              break;
            case 9u:
              *(_DWORD *)v55 = *(_DWORD *)v56;
              v55[1] = v56[1];
              v55[2] = v56[2];
              v94 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v123 = (char *)v56 + v94;
              v141 = (char *)v55 + v94;
              v95 = sub_23FB2D718();
              v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
              swift_bridgeObjectRetain();
              v96(v141, v123, v95);
              break;
            default:
              v65 = *(_QWORD *)(v62 - 8);
              goto LABEL_56;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_78;
      }
      sub_23F93DADC((uint64_t)v55, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v65 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_56:
    memcpy(v55, v56, *(_QWORD *)(v65 + 64));
    goto LABEL_78;
  }
  if (v58)
  {
LABEL_46:
    v61 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_79;
  }
  v59 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v56, 1, v59))
  {
    v60 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v55 = *v56;
        v55[1] = v56[1];
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 4u:
        *v55 = *v56;
        v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v115 = (char *)v56 + v66;
        v133 = (char *)v55 + v66;
        v67 = sub_23FB2D718();
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(v133, v115, v67);
        goto LABEL_64;
      case 5u:
        *v55 = *v56;
        v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v116 = (char *)v56 + v69;
        v134 = (char *)v55 + v69;
        v70 = sub_23FB2D718();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v134, v116, v70);
        goto LABEL_64;
      case 9u:
        *(_DWORD *)v55 = *(_DWORD *)v56;
        v55[1] = v56[1];
        v55[2] = v56[2];
        v72 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v117 = (char *)v56 + v72;
        v135 = (char *)v55 + v72;
        v73 = sub_23FB2D718();
        v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v135, v117, v73);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v59);
  }
  v75 = *(int *)(v9 + 20);
  v76 = (char *)v55 + v75;
  v77 = (char *)v56 + v75;
  v78 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v55, 0, 1, v9);
LABEL_79:
  v101 = a3[7];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v104 - 8) + 24))(v102, v103, v104);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_15;
  }
  v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v19 = (char *)v7 + v18;
        v20 = (char *)v8 + v18;
        v21 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v23 = (char *)v7 + v22;
        v24 = (char *)v8 + v22;
        v25 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v15 = (char *)v7 + v14;
        v16 = (char *)v8 + v14;
        v17 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  v12 = sub_23F6916B8(&qword_256EA25F0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_14:
  v26 = *(int *)(v9 + 20);
  v27 = (char *)v7 + v26;
  v28 = (char *)v8 + v26;
  v29 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_15:
  v30 = a3[6];
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v30], 1, v9))
  {
    v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v32, 1, v34))
    {
      v35 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_28:
      v49 = *(int *)(v9 + 20);
      v50 = (char *)v31 + v49;
      v51 = (char *)v32 + v49;
      v52 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v9);
      goto LABEL_29;
    }
    v36 = swift_getEnumCaseMultiPayload();
    switch(v36)
    {
      case 9:
        *v31 = *v32;
        *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
        v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v42 = (char *)v31 + v41;
        v43 = (char *)v32 + v41;
        v44 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
        break;
      case 5:
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v46 = (char *)v31 + v45;
        v47 = (char *)v32 + v45;
        v48 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
        break;
      case 4:
        *(_QWORD *)v31 = *(_QWORD *)v32;
        v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v38 = (char *)v31 + v37;
        v39 = (char *)v32 + v37;
        v40 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        break;
      default:
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        goto LABEL_27;
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v31, 0, 1, v34);
    goto LABEL_28;
  }
  v33 = sub_23F6916B8(&qword_256EA84E8);
  memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
LABEL_29:
  v53 = a3[7];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v56 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  _BYTE *v127;
  uint64_t v128;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
      {
        v13 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_27:
        v37 = *(int *)(v9 + 20);
        v38 = (char *)v7 + v37;
        v39 = (char *)v8 + v37;
        v40 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
        goto LABEL_42;
      }
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v30 = (char *)v7 + v29;
          v31 = (char *)v8 + v29;
          v32 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v34 = (char *)v7 + v33;
          v35 = (char *)v8 + v33;
          v36 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v25 = (char *)v7 + v24;
          v26 = (char *)v8 + v24;
          v27 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          goto LABEL_26;
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
      goto LABEL_27;
    }
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_7;
  }
  v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
  v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      v18 = swift_getEnumCaseMultiPayload();
      switch(v18)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v47 = (char *)v7 + v46;
          v48 = (char *)v8 + v46;
          v49 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v51 = (char *)v7 + v50;
          v52 = (char *)v8 + v50;
          v53 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v20 = (char *)v7 + v19;
          v21 = (char *)v8 + v19;
          v22 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
          goto LABEL_37;
      }
      swift_storeEnumTagMultiPayload();
LABEL_37:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
      goto LABEL_41;
    }
  }
  else
  {
    if (!v17)
    {
      if (a1 == a2)
        goto LABEL_41;
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v41 = swift_getEnumCaseMultiPayload();
      switch(v41)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v55 = (char *)v7 + v54;
          v56 = (char *)v8 + v54;
          v57 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v59 = (char *)v7 + v58;
          v60 = (char *)v8 + v58;
          v61 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v43 = (char *)v7 + v42;
          v44 = (char *)v8 + v42;
          v45 = sub_23FB2D718();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          break;
        default:
          v28 = *(_QWORD *)(v15 - 8);
          goto LABEL_21;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
  }
  v28 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_21:
  memcpy(v7, v8, *(_QWORD *)(v28 + 64));
LABEL_41:
  v62 = *(int *)(v9 + 20);
  v63 = (char *)v7 + v62;
  v64 = (char *)v8 + v62;
  v65 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 40))(v63, v64, v65);
LABEL_42:
  v66 = a3[6];
  v67 = (uint64_t)&a1[v66];
  v68 = (uint64_t)&a2[v66];
  v69 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v66], 1, v9);
  v70 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v9);
  if (!v69)
  {
    if (v70)
    {
      sub_23F93DADC(v67, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_48;
    }
    v74 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v75 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v67, 1, v74);
    v76 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v74);
    if (v75)
    {
      if (!v76)
      {
        v77 = swift_getEnumCaseMultiPayload();
        switch(v77)
        {
          case 9:
            *(_DWORD *)v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            v105 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v106 = v67 + v105;
            v107 = v68 + v105;
            v108 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
            break;
          case 5:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v110 = v67 + v109;
            v111 = v68 + v109;
            v112 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
            break;
          case 4:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v79 = v67 + v78;
            v80 = v68 + v78;
            v81 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
            break;
          default:
            memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
            goto LABEL_78;
        }
        swift_storeEnumTagMultiPayload();
LABEL_78:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v74);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v76)
      {
        if (a1 == a2)
          goto LABEL_83;
        sub_23F93DADC(v67, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v100 = swift_getEnumCaseMultiPayload();
        switch(v100)
        {
          case 9:
            *(_DWORD *)v67 = *(_DWORD *)v68;
            *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
            v113 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v114 = v67 + v113;
            v115 = v68 + v113;
            v116 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
            break;
          case 5:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v118 = v67 + v117;
            v119 = v68 + v117;
            v120 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
            break;
          case 4:
            *(_QWORD *)v67 = *(_QWORD *)v68;
            v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v102 = v67 + v101;
            v103 = v68 + v101;
            v104 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
            break;
          default:
            v87 = *(_QWORD *)(v74 - 8);
            goto LABEL_62;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_83;
      }
      sub_23F93DADC(v67, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v87 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_62:
    memcpy((void *)v67, (const void *)v68, *(_QWORD *)(v87 + 64));
LABEL_83:
    v121 = *(int *)(v9 + 20);
    v122 = v67 + v121;
    v123 = v68 + v121;
    v124 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 40))(v122, v123, v124);
    goto LABEL_84;
  }
  if (!v70)
  {
    v71 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v68, 1, v71))
    {
      v72 = sub_23F6916B8(&qword_256EA25F0);
      memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
LABEL_68:
      v96 = *(int *)(v9 + 20);
      v97 = v67 + v96;
      v98 = v68 + v96;
      v99 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v9);
      goto LABEL_84;
    }
    v82 = swift_getEnumCaseMultiPayload();
    switch(v82)
    {
      case 9:
        *(_DWORD *)v67 = *(_DWORD *)v68;
        *(_OWORD *)(v67 + 8) = *(_OWORD *)(v68 + 8);
        v88 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v89 = v67 + v88;
        v90 = v68 + v88;
        v91 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
        break;
      case 5:
        *(_QWORD *)v67 = *(_QWORD *)v68;
        v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v93 = v67 + v92;
        v94 = v68 + v92;
        v95 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v93, v94, v95);
        break;
      case 4:
        *(_QWORD *)v67 = *(_QWORD *)v68;
        v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v84 = v67 + v83;
        v85 = v68 + v83;
        v86 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
        break;
      default:
        memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        goto LABEL_67;
    }
    swift_storeEnumTagMultiPayload();
LABEL_67:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v67, 0, 1, v71);
    goto LABEL_68;
  }
LABEL_48:
  v73 = sub_23F6916B8(&qword_256EA84E8);
  memcpy((void *)v67, (const void *)v68, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
LABEL_84:
  v125 = a3[7];
  v126 = &a1[v125];
  v127 = &a2[v125];
  v128 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v128 - 8) + 40))(v126, v127, v128);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprInfixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA7F454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA9782C(a1, a2, a3, &qword_256EA84E8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprInfixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA7F46C()
{
  sub_23FA978A0();
}

void sub_23FA7F478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA97908(a1, a2, a3, qword_256EBAA30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_23FA7F550 + 4 * word_23FB8BE5A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = sub_23F6916B8(&qword_256EB2318);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t updated;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v6))goto LABEL_51;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_8;
          case 4:
            swift_bridgeObjectRelease();
            v50 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            v51 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
            break;
          case 3:
LABEL_8:
            swift_bridgeObjectRelease();
            break;
        }
LABEL_51:
        v26 = type metadata accessor for TranscriptProtoValueExpression(0);
        goto LABEL_52;
      case 1u:
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for TranscriptProtoStatementID(0);
        goto LABEL_24;
      case 2u:
        updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        goto LABEL_27;
      case 3u:
        v10 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        v11 = a1 + v10[5];
        v12 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v11, 1, v12))
        {
          swift_bridgeObjectRelease();
          v13 = v11 + *(int *)(v12 + 24);
          v14 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
        v15 = a1 + v10[6];
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v15, 1, v12))
        {
          swift_bridgeObjectRelease();
          v16 = v15 + *(int *)(v12 + 24);
          v17 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        }
        v18 = v10[7];
        goto LABEL_53;
      case 4u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoDotExpression(0);
        goto LABEL_27;
      case 5u:
        v19 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v19))
        {
          swift_bridgeObjectRelease();
          v20 = a1 + *(int *)(v19 + 24);
          v21 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        }
        v22 = type metadata accessor for TranscriptProtoIndexExpression(0);
        v23 = a1 + *(int *)(v22 + 20);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v23, 1, v19))
        {
          swift_bridgeObjectRelease();
          v24 = v23 + *(int *)(v19 + 24);
          v25 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        }
        v18 = *(int *)(v22 + 24);
        goto LABEL_53;
      case 6u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        goto LABEL_27;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for TranscriptProtoCallExpression(0);
LABEL_24:
        v18 = *(int *)(v8 + 24);
        goto LABEL_53;
      case 8u:
        swift_bridgeObjectRelease();
        v26 = type metadata accessor for TranscriptProtoSayExpression(0);
        goto LABEL_52;
      case 9u:
        updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_27:
        v27 = updated;
        v28 = a1 + *(int *)(updated + 20);
        v29 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v28, 1, v29))
        {
          swift_bridgeObjectRelease();
          v30 = v28 + *(int *)(v29 + 24);
          v31 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        }
        v18 = *(int *)(v27 + 24);
        goto LABEL_53;
      case 0xAu:
        v32 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v32))
        {
          swift_bridgeObjectRelease();
          v33 = a1 + *(int *)(v32 + 24);
          v34 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        }
        v26 = type metadata accessor for TranscriptProtoConfirmExpression(0);
        goto LABEL_52;
      case 0xBu:
        swift_bridgeObjectRelease();
        v18 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 28);
        goto LABEL_53;
      case 0xCu:
        v35 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v35))
        {
          swift_bridgeObjectRelease();
          v36 = a1 + *(int *)(v35 + 24);
          v37 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        }
        v26 = type metadata accessor for TranscriptProtoPickOneExpression(0);
        goto LABEL_52;
      case 0xDu:
        swift_bridgeObjectRelease();
        v26 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
        goto LABEL_52;
      case 0xEu:
        v38 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v38))
        {
          swift_bridgeObjectRelease();
          v39 = a1 + *(int *)(v38 + 24);
          v40 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        }
        v26 = type metadata accessor for TranscriptProtoUndoExpression(0);
        goto LABEL_52;
      case 0xFu:
        v41 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v41))
        {
          swift_bridgeObjectRelease();
          v42 = a1 + *(int *)(v41 + 24);
          v43 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
        }
        v26 = type metadata accessor for TranscriptProtoRejectExpression(0);
        goto LABEL_52;
      case 0x10u:
        v44 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v44))
        {
          swift_bridgeObjectRelease();
          v45 = a1 + *(int *)(v44 + 24);
          v46 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
        }
        v26 = type metadata accessor for TranscriptProtoCancelExpression(0);
        goto LABEL_52;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
        v5 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      case 0x15u:
        v47 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v47))
        {
          swift_bridgeObjectRelease();
          v48 = a1 + *(int *)(v47 + 24);
          v49 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
        }
        v26 = type metadata accessor for TranscriptProtoOpenExpression(0);
LABEL_52:
        v18 = *(int *)(v26 + 20);
LABEL_53:
        v52 = a1 + v18;
        v53 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
        break;
      default:
        break;
    }
  }
  v54 = a1 + *(int *)(a2 + 20);
  v55 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
}

char *initializeWithCopy for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA80CAC + 4 * word_23FB8BEB2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB2318);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA81E18 + 4 * word_23FB8BEDE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB2318);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
    v11 = (char *)&loc_23FA81ED4 + 4 * word_23FB8BF0A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_23FA841D4 + 4 * word_23FB8BF36[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = sub_23F6916B8(&qword_256EB2318);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = (char *)&loc_23FA851E8 + 4 * word_23FB8BF62[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
LABEL_6:
    v10 = sub_23F6916B8(&qword_256EB2318);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
    v11 = (char *)&loc_23FA852A4 + 4 * word_23FB8BF8E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA87128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB2318);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA87140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB2318);
}

void sub_23FA8714C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBB200, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpressionEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoExpressionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FA871C0 + 4 * word_23FB8BFBA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoExpressionEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t updated;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v3))goto LABEL_49;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          goto LABEL_6;
        case 4:
          swift_bridgeObjectRelease();
          v47 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          v48 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
          break;
        case 3:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
      }
LABEL_49:
      v23 = type metadata accessor for TranscriptProtoValueExpression(0);
      goto LABEL_50;
    case 1:
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for TranscriptProtoStatementID(0);
      goto LABEL_22;
    case 2:
      updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
      goto LABEL_25;
    case 3:
      v7 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      v8 = a1 + v7[5];
      v9 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        v10 = v8 + *(int *)(v9 + 24);
        v11 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      }
      v12 = a1 + v7[6];
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v12, 1, v9))
      {
        swift_bridgeObjectRelease();
        v13 = v12 + *(int *)(v9 + 24);
        v14 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = v7[7];
      goto LABEL_51;
    case 4:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoDotExpression(0);
      goto LABEL_25;
    case 5:
      v16 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v16))
      {
        swift_bridgeObjectRelease();
        v17 = a1 + *(int *)(v16 + 24);
        v18 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      }
      v19 = type metadata accessor for TranscriptProtoIndexExpression(0);
      v20 = a1 + *(int *)(v19 + 20);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v20, 1, v16))
      {
        swift_bridgeObjectRelease();
        v21 = v20 + *(int *)(v16 + 24);
        v22 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v15 = *(int *)(v19 + 24);
      goto LABEL_51;
    case 6:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      goto LABEL_25;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for TranscriptProtoCallExpression(0);
LABEL_22:
      v15 = *(int *)(v5 + 24);
      goto LABEL_51;
    case 8:
      swift_bridgeObjectRelease();
      v23 = type metadata accessor for TranscriptProtoSayExpression(0);
      goto LABEL_50;
    case 9:
      updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_25:
      v24 = updated;
      v25 = a1 + *(int *)(updated + 20);
      v26 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v25, 1, v26))
      {
        swift_bridgeObjectRelease();
        v27 = v25 + *(int *)(v26 + 24);
        v28 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
      }
      v15 = *(int *)(v24 + 24);
      goto LABEL_51;
    case 10:
      v29 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v29))
      {
        swift_bridgeObjectRelease();
        v30 = a1 + *(int *)(v29 + 24);
        v31 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
      }
      v23 = type metadata accessor for TranscriptProtoConfirmExpression(0);
      goto LABEL_50;
    case 11:
      swift_bridgeObjectRelease();
      v15 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 28);
      goto LABEL_51;
    case 12:
      v32 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v32))
      {
        swift_bridgeObjectRelease();
        v33 = a1 + *(int *)(v32 + 24);
        v34 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
      }
      v23 = type metadata accessor for TranscriptProtoPickOneExpression(0);
      goto LABEL_50;
    case 13:
      swift_bridgeObjectRelease();
      v23 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
      goto LABEL_50;
    case 14:
      v35 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v35))
      {
        swift_bridgeObjectRelease();
        v36 = a1 + *(int *)(v35 + 24);
        v37 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
      }
      v23 = type metadata accessor for TranscriptProtoUndoExpression(0);
      goto LABEL_50;
    case 15:
      v38 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v38))
      {
        swift_bridgeObjectRelease();
        v39 = a1 + *(int *)(v38 + 24);
        v40 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
      }
      v23 = type metadata accessor for TranscriptProtoRejectExpression(0);
      goto LABEL_50;
    case 16:
      v41 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v41))
      {
        swift_bridgeObjectRelease();
        v42 = a1 + *(int *)(v41 + 24);
        v43 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
      }
      v23 = type metadata accessor for TranscriptProtoCancelExpression(0);
      goto LABEL_50;
    case 17:
    case 18:
    case 19:
    case 20:
      goto LABEL_52;
    case 21:
      v44 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v44))
      {
        swift_bridgeObjectRelease();
        v45 = a1 + *(int *)(v44 + 24);
        v46 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
      }
      v23 = type metadata accessor for TranscriptProtoOpenExpression(0);
LABEL_50:
      v15 = *(int *)(v23 + 20);
LABEL_51:
      a1 += v15;
LABEL_52:
      v49 = sub_23FB2D718();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(a1, v49);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoExpressionEnum()
{
  char *v0;

  v0 = (char *)sub_23FA88870 + 4 * word_23FB8C012[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA88870()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v2 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *v0 = *v1;
        v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v7 = (char *)v0 + v6;
        v8 = (char *)v1 + v6;
        v9 = sub_23FB2D718();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_9;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
        goto LABEL_11;
      }
    }
    v5 = v1[1];
    *v0 = *v1;
    v0[1] = v5;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0, 0, 1, v2);
    goto LABEL_12;
  }
  v3 = sub_23F6916B8(&qword_256EB2330);
  memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
LABEL_12:
  v11 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
  v12 = (char *)v0 + v11;
  v13 = (char *)v1 + v11;
  v14 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoExpressionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoExpressionEnum);
    v2 = (char *)&loc_23FA89998 + 4 * word_23FB8C03E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoExpressionEnum()
{
  char *v0;

  v0 = (char *)sub_23FA8AB48 + 4 * word_23FB8C06A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_23FA8AB48()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v2 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v1, 1, v2))
  {
    v3 = sub_23F6916B8(&qword_256EB2330);
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *v0 = *v1;
      v4 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v5 = (char *)v0 + v4;
      v6 = (char *)v1 + v4;
      v7 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v0, 0, 1, v2);
  }
  v8 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
  v9 = (char *)v0 + v8;
  v10 = (char *)v1 + v8;
  v11 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoExpressionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23F93DADC(result, type metadata accessor for TranscriptProtoExpressionEnum);
    v2 = (char *)&loc_23FA8BAF4 + 4 * word_23FB8C096[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_23FA8CA3C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  result = type metadata accessor for TranscriptProtoValueExpression(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoStatementID(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoPrefixExpression(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoInfixExpression(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoDotExpression(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoIndexExpression(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for TranscriptProtoUpdateParametersExpression(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for TranscriptProtoCallExpression(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for TranscriptProtoSayExpression(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for TranscriptProtoPickExpression(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for TranscriptProtoConfirmExpression(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for TranscriptProtoSearchExpression(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for TranscriptProtoPickOneExpression(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for TranscriptProtoResolveToolExpression(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for TranscriptProtoUndoExpression(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for TranscriptProtoRejectExpression(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for TranscriptProtoCancelExpression(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = sub_23FB2D718();
                                    if (v18 <= 0x3F)
                                    {
                                      result = type metadata accessor for TranscriptProtoOpenExpression(319);
                                      if (v19 <= 0x3F)
                                      {
                                        swift_initEnumMetadataMultiPayload();
                                        return 0;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23F6916B8(&qword_256EB2330);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_14:
      v17 = *(int *)(a3 + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_23FB2D718();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        goto LABEL_11;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_13;
      }
    }
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v7);
    goto LABEL_14;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoValueExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        goto LABEL_5;
      case 4:
        swift_bridgeObjectRelease();
        v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v7 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      case 3:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2D718();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_9;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_11;
      }
    }
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
    goto LABEL_12;
  }
  v7 = sub_23F6916B8(&qword_256EB2330);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_12:
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 5)
      {
        if (EnumCaseMultiPayload == 4)
        {
          *a1 = *a2;
          v12 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_23FB2D718();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          goto LABEL_18;
        }
        if (EnumCaseMultiPayload != 3)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          goto LABEL_20;
        }
      }
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_18:
      swift_storeEnumTagMultiPayload();
LABEL_20:
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_24;
    }
    goto LABEL_9;
  }
  if (!v8)
  {
    if (a1 == a2)
      goto LABEL_24;
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
    v11 = swift_getEnumCaseMultiPayload();
    if (v11 != 5)
    {
      if (v11 == 4)
      {
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_23;
      }
      if (v11 != 3)
      {
        v10 = *(_QWORD *)(v6 - 8);
        goto LABEL_10;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
LABEL_23:
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
LABEL_9:
  v10 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2330) - 8);
LABEL_10:
  memcpy(a1, a2, *(_QWORD *)(v10 + 64));
LABEL_24:
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_23F6916B8(&qword_256EB2330);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a1, 1, v6);
  v8 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v13 = *(_QWORD *)(v6 - 8);
      goto LABEL_8;
    }
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
LABEL_7:
    v13 = *(_QWORD *)(sub_23F6916B8(&qword_256EB2330) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v13 + 64));
    goto LABEL_14;
  }
  if (v8)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    v9 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_14:
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA8D6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EB2330);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA8D6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EB2330);
}

void sub_23FA8D6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EBB340, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpressionEnum);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_23FB2D718();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_9;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
    }
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoValueExpressionEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 5)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result != 4)
  {
    if ((_DWORD)result != 3)
      return result;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
  v4 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_QWORD *initializeWithCopy for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FB2D718();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload != 3)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_23FB2D718();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        goto LABEL_8;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23F93DADC((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23FA8DC3C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueExpressionArrayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueExpressionArrayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPrefixExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v13 = v9[2];
      v8[1] = v9[1];
      v8[2] = v13;
      v14 = *(int *)(v10 + 24);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

_BYTE *initializeWithCopy for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = (uint64_t)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v22 = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      *(_QWORD *)(v7 + 16) = v22;
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = v7 + v23;
      v25 = v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC(v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v12 = *(int *)(v9 + 24);
  v13 = v7 + v12;
  v14 = v8 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPrefixExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA8E3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA96A94(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPrefixExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA8E3D8()
{
  sub_23FA96B08();
}

void sub_23FA8E3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8F910, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoInfixExpression(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v13 = v9[2];
      v8[1] = v9[1];
      v8[2] = v13;
      v14 = *(int *)(v10 + 24);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v19 = a3[6];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)a2 + v19, 1, v10))
    {
      v22 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v23 = v21[2];
      v20[1] = v21[1];
      v20[2] = v23;
      v24 = *(int *)(v10 + 24);
      v25 = (char *)v20 + v24;
      v26 = (char *)v21 + v24;
      v27 = sub_23FB2D718();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v20, 0, 1, v10);
    }
    v29 = a3[7];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoInfixExpression(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v5))
  {
    swift_bridgeObjectRelease();
    v9 = v8 + *(int *)(v5 + 24);
    v10 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + a2[7];
  v12 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_BYTE *initializeWithCopy for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v17], 1, v9))
  {
    v20 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v21 = v19[2];
    v18[1] = v19[1];
    v18[2] = v21;
    v22 = *(int *)(v9 + 24);
    v23 = (char *)v18 + v22;
    v24 = (char *)v19 + v22;
    v25 = sub_23FB2D718();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v18, 0, 1, v9);
  }
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = *(int *)(v9 + 24);
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
LABEL_7:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v18], 1, v9);
  v22 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[1] = v20[1];
      v19[2] = v20[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38 = *(int *)(v9 + 24);
      v39 = (char *)v19 + v38;
      v40 = (char *)v20 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_23F93DADC((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v28 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v23 = *(int *)(v9 + 24);
  v24 = (char *)v19 + v23;
  v25 = (char *)v20 + v23;
  v26 = sub_23FB2D718();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v19, 0, 1, v9);
LABEL_13:
  v29 = a3[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a2[v15], 1, v9))
  {
    v18 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    *(_OWORD *)(v16 + 2) = *(_OWORD *)(v17 + 2);
    v19 = *(int *)(v9 + 24);
    v20 = (char *)v16 + v19;
    v21 = (char *)v17 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v16, 0, 1, v9);
  }
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
      v12 = *(int *)(v9 + 24);
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v32 = v8[2];
  v7[1] = v8[1];
  v7[2] = v32;
  swift_bridgeObjectRelease();
  v33 = *(int *)(v9 + 24);
  v34 = (char *)v7 + v33;
  v35 = (char *)v8 + v33;
  v36 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
LABEL_7:
  v17 = a3[6];
  v18 = (uint64_t)&a1[v17];
  v19 = (uint64_t)&a2[v17];
  v20 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)&a1[v17], 1, v9);
  v21 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v19, 1, v9);
  if (!v20)
  {
    if (!v21)
    {
      *(_DWORD *)v18 = *(_DWORD *)v19;
      v37 = *(_QWORD *)(v19 + 16);
      *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
      *(_QWORD *)(v18 + 16) = v37;
      swift_bridgeObjectRelease();
      v38 = *(int *)(v9 + 24);
      v39 = v18 + v38;
      v40 = v19 + v38;
      v41 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_23F93DADC(v18, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    v26 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v18, (const void *)v19, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
  v22 = *(int *)(v9 + 24);
  v23 = v18 + v22;
  v24 = v19 + v22;
  v25 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v18, 0, 1, v9);
LABEL_13:
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInfixExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA8EFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA9782C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInfixExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA8EFDC()
{
  sub_23FA978A0();
}

void sub_23FA8EFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA97908(a1, a2, a3, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprPrefixVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA84E8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v13))
      {
        v14 = sub_23F6916B8(&qword_256EA25F0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v15 = v9[1];
            *v8 = *v9;
            v8[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v8 = *v9;
            v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v35 = (char *)v9 + v16;
            v38 = (char *)v8 + v16;
            v17 = sub_23FB2D718();
            v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v18(v38, v35, v17);
            goto LABEL_13;
          case 5u:
            *v8 = *v9;
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v36 = (char *)v9 + v19;
            v39 = (char *)v8 + v19;
            v20 = sub_23FB2D718();
            v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            v21(v39, v36, v20);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            v22 = v9[2];
            v8[1] = v9[1];
            v8[2] = v22;
            v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v37 = (char *)v9 + v23;
            v40 = (char *)v8 + v23;
            v24 = sub_23FB2D718();
            v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
            swift_bridgeObjectRetain();
            v25(v40, v37, v24);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v13);
      }
      v26 = *(int *)(v10 + 20);
      v27 = (char *)v8 + v26;
      v28 = (char *)v9 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v30 = *(int *)(a3 + 24);
    v31 = (char *)v4 + v30;
    v32 = (char *)a2 + v30;
    v33 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprPrefixVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
          goto LABEL_7;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_7:
          v8 = *(int *)(v7 + 20);
          goto LABEL_9;
        case 9u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_9:
          v9 = v4 + v8;
          v10 = sub_23FB2D718();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + *(int *)(a2 + 24);
  v14 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_BYTE *initializeWithCopy for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v13 = v8[1];
          *v7 = *v8;
          v7[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v7 = *v8;
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v33 = (char *)v8 + v14;
          v36 = (char *)v7 + v14;
          v15 = sub_23FB2D718();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v36, v33, v15);
          goto LABEL_11;
        case 5u:
          *v7 = *v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v34 = (char *)v8 + v17;
          v37 = (char *)v7 + v17;
          v18 = sub_23FB2D718();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v37, v34, v18);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v7 = *(_DWORD *)v8;
          v20 = v8[2];
          v7[1] = v8[1];
          v7[2] = v20;
          v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v35 = (char *)v8 + v21;
          v38 = (char *)v7 + v21;
          v22 = sub_23FB2D718();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v38, v35, v22);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    }
    v24 = *(int *)(v9 + 20);
    v25 = (char *)v7 + v24;
    v26 = (char *)v8 + v24;
    v27 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v28 = *(int *)(a3 + 24);
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *v7 = *v8;
            v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v62 = (char *)v8 + v32;
            v71 = (char *)v7 + v32;
            v33 = sub_23FB2D718();
            v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v71, v62, v33);
            goto LABEL_32;
          case 5u:
            *v7 = *v8;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v63 = (char *)v8 + v35;
            v72 = (char *)v7 + v35;
            v36 = sub_23FB2D718();
            v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v72, v63, v36);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v64 = (char *)v8 + v38;
            v73 = (char *)v7 + v38;
            v39 = sub_23FB2D718();
            v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v40(v73, v64, v39);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            break;
        }
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v15);
LABEL_39:
        v50 = *(int *)(v9 + 20);
        v51 = (char *)v7 + v50;
        v52 = (char *)v8 + v50;
        v53 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
        goto LABEL_40;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              break;
            case 4u:
              *v7 = *v8;
              v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v65 = (char *)v8 + v41;
              v74 = (char *)v7 + v41;
              v42 = sub_23FB2D718();
              v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
              swift_bridgeObjectRetain();
              v43(v74, v65, v42);
              break;
            case 5u:
              *v7 = *v8;
              v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v66 = (char *)v8 + v44;
              v75 = (char *)v7 + v44;
              v45 = sub_23FB2D718();
              v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
              swift_bridgeObjectRetain();
              v46(v75, v66, v45);
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v47 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v67 = (char *)v8 + v47;
              v76 = (char *)v7 + v47;
              v48 = sub_23FB2D718();
              v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
              swift_bridgeObjectRetain();
              v49(v76, v67, v48);
              break;
            default:
              v18 = *(_QWORD *)(v15 - 8);
              goto LABEL_17;
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_39;
      }
      sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v18 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_17:
    memcpy(v7, v8, *(_QWORD *)(v18 + 64));
    goto LABEL_39;
  }
  if (v11)
  {
LABEL_7:
    v14 = sub_23F6916B8(&qword_256EA84E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_40;
  }
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v12))
  {
    v13 = sub_23F6916B8(&qword_256EA25F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *v7 = *v8;
        v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v59 = (char *)v8 + v19;
        v68 = (char *)v7 + v19;
        v20 = sub_23FB2D718();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v68, v59, v20);
        goto LABEL_25;
      case 5u:
        *v7 = *v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v60 = (char *)v8 + v22;
        v69 = (char *)v7 + v22;
        v23 = sub_23FB2D718();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v69, v60, v23);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v61 = (char *)v8 + v25;
        v70 = (char *)v7 + v25;
        v26 = sub_23FB2D718();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v70, v61, v26);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v12);
  }
  v28 = *(int *)(v9 + 20);
  v29 = (char *)v7 + v28;
  v30 = (char *)v8 + v28;
  v31 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_40:
  v54 = *(int *)(a3 + 24);
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_14:
      v26 = *(int *)(v9 + 20);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *v7 = *v8;
        *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
        v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v19 = (char *)v7 + v18;
        v20 = (char *)v8 + v18;
        v21 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v23 = (char *)v7 + v22;
        v24 = (char *)v8 + v22;
        v25 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v15 = (char *)v7 + v14;
        v16 = (char *)v8 + v14;
        v17 = sub_23FB2D718();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_13;
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v11);
    goto LABEL_14;
  }
  v10 = sub_23F6916B8(&qword_256EA84E8);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_15:
  v30 = *(int *)(a3 + 24);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = (uint64_t)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (v11)
    {
      sub_23F93DADC(v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v15);
    v17 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v15);
    if (v16)
    {
      if (!v17)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v47 = v7 + v46;
            v48 = v8 + v46;
            v49 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
            break;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v51 = v7 + v50;
            v52 = v8 + v50;
            v53 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
            break;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v20 = v7 + v19;
            v21 = v8 + v19;
            v22 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
            break;
          default:
            memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
            goto LABEL_37;
        }
        swift_storeEnumTagMultiPayload();
LABEL_37:
        _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v15);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 == a2)
          goto LABEL_41;
        sub_23F93DADC(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v41 = swift_getEnumCaseMultiPayload();
        switch(v41)
        {
          case 9:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v54 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v55 = v7 + v54;
            v56 = v8 + v54;
            v57 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
            break;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v59 = v7 + v58;
            v60 = v8 + v58;
            v61 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
            break;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v43 = v7 + v42;
            v44 = v8 + v42;
            v45 = sub_23FB2D718();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
            break;
          default:
            v28 = *(_QWORD *)(v15 - 8);
            goto LABEL_21;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_41;
      }
      sub_23F93DADC(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v28 = *(_QWORD *)(sub_23F6916B8(&qword_256EA25F0) - 8);
LABEL_21:
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(v28 + 64));
LABEL_41:
    v62 = *(int *)(v9 + 20);
    v63 = v7 + v62;
    v64 = v8 + v62;
    v65 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 40))(v63, v64, v65);
    goto LABEL_42;
  }
  if (!v11)
  {
    v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v12))
    {
      v13 = sub_23F6916B8(&qword_256EA25F0);
      memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_27:
      v37 = *(int *)(v9 + 20);
      v38 = v7 + v37;
      v39 = v8 + v37;
      v40 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v9);
      goto LABEL_42;
    }
    v23 = swift_getEnumCaseMultiPayload();
    switch(v23)
    {
      case 9:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v30 = v7 + v29;
        v31 = v8 + v29;
        v32 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v34 = v7 + v33;
        v35 = v8 + v33;
        v36 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v25 = v7 + v24;
        v26 = v8 + v24;
        v27 = sub_23FB2D718();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        break;
      default:
        memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_26;
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v12);
    goto LABEL_27;
  }
LABEL_7:
  v14 = sub_23F6916B8(&qword_256EA84E8);
  memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_42:
  v66 = *(int *)(a3 + 24);
  v67 = &a1[v66];
  v68 = &a2[v66];
  v69 = sub_23FB2D718();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v67, v68, v69);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPrefixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA90870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FA96A94(a1, a2, a3, &qword_256EA84E8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPrefixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA90888()
{
  sub_23FA96B08();
}

void sub_23FA90894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, (uint64_t)&unk_23FB8F910, qword_256EBAA30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_23F6B50E8();
  sub_23FAC300C(v5, v6);
  sub_23F6B5908();
  v7 = *(int *)(v2 + 20);
  v8 = v0 + v7;
  v9 = v1 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = sub_23FAC2B50(v10);
  if (!v4)
  {
    if (!(_DWORD)v11)
    {
      sub_23FAC3480();
      sub_23F717D54();
      v17 = sub_23F6B53A4();
      sub_23FAC2D80(v17);
      goto LABEL_7;
    }
    sub_23FAC3228(v11, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if ((_DWORD)v11)
  {
LABEL_6:
    v15 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BBC(v15);
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  v12 = *(int *)(v3 + 24);
  v13 = v8 + v12;
  v14 = v9 + v12;
  sub_23F6B53A4();
  sub_23FAC2BD0();
  sub_23FAC2FE4(v13, v14);
  sub_23FAC2BA8();
LABEL_7:
  v16 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport37TranscriptProtoSpeechRequestCandidateVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23F6D3A90();
  sub_23FAC3174(v5, v6);
  v7 = *(int *)(v2 + 20);
  v8 = v0 + v7;
  v9 = v1 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = sub_23FAC2B50(v10);
  if (!v4)
  {
    if (!(_DWORD)v11)
    {
      sub_23FAC3718();
      v16 = sub_23F6B53A4();
      sub_23FAC2D68(v16);
      goto LABEL_7;
    }
    sub_23FAC3228(v11, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if ((_DWORD)v11)
  {
LABEL_6:
    v14 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BBC(v14);
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v12 = v8 + *(int *)(v3 + 24);
  v13 = sub_23F6B53A4();
  sub_23F6B51EC(v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32));
  sub_23FAC2BA8();
LABEL_7:
  v15 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDotExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA90A80()
{
  sub_23FAB8200();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDotExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA90A98()
{
  sub_23FAB8268();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionCancellationVwCP_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6B50E8();
  v2 = v1;
  sub_23F877920();
  if ((v4 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    v5 = v3;
    type metadata accessor for TranscriptProtoStatementID(0);
    if (sub_23FAC2B44((uint64_t)v2))
    {
      v6 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2B80(*(_QWORD *)(v6 - 8));
    }
    else
    {
      *(_DWORD *)v0 = *(_DWORD *)v2;
      v7 = v2[2];
      *(_QWORD *)(v0 + 8) = v2[1];
      *(_QWORD *)(v0 + 16) = v7;
      sub_23F6B53A4();
      sub_23FAC2F04();
      sub_23FAC2F6C();
      sub_23F6BC4AC(v0);
    }
    v8 = *(int *)(v5 + 20);
    v9 = v0 + v8;
    v10 = (char *)v2 + v8;
    if (sub_23FAC2B44((uint64_t)v2 + v8))
    {
      v11 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2BEC(v11);
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v12 = *((_QWORD *)v10 + 2);
      *(_QWORD *)(v9 + 8) = *((_QWORD *)v10 + 1);
      *(_QWORD *)(v9 + 16) = v12;
      sub_23F6B53A4();
      sub_23FAC2BD0();
      sub_23FAC2CC8();
      sub_23F6BC4AC(v9);
    }
    v13 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16));
  }
  sub_23F693DDC();
}

uint64_t _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionCancellationVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_23F7B0D30(a1))
  {
    swift_bridgeObjectRelease();
    v4 = sub_23F6B53A4();
    sub_23FAC38F0(v4);
  }
  if (!sub_23F7B0D30(a1 + *(int *)(a2 + 20)))
  {
    sub_23FAC3DB8();
    v5 = sub_23F6B53A4();
    sub_23FAC2CE4(v5);
  }
  sub_23F6B53A4();
  v6 = sub_23F87922C();
  return sub_23FAC2C30(v6, v7, v8);
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionCancellationVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23F6B50E8();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2B44(v3))
  {
    v6 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v6 - 8));
  }
  else
  {
    *(_DWORD *)v5 = *(_DWORD *)v3;
    v7 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v5 + 8) = *(_QWORD *)(v3 + 8);
    *(_QWORD *)(v5 + 16) = v7;
    sub_23F6B53A4();
    sub_23FAC2F04();
    sub_23FAC2F6C();
    sub_23F6BC4AC(v5);
  }
  v8 = *(int *)(v1 + 20);
  v9 = v5 + v8;
  v10 = v3 + v8;
  if (sub_23FAC2B44(v3 + v8))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v11);
  }
  else
  {
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v12 = *(_QWORD *)(v10 + 16);
    *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
    *(_QWORD *)(v9 + 16) = v12;
    sub_23F6B53A4();
    sub_23FAC2BD0();
    sub_23FAC2CC8();
    sub_23F6BC4AC(v9);
  }
  v13 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionCancellationVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23F6B50E8();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6);
  v8 = sub_23FAC2B44(v3);
  if (v7)
  {
    if (!(_DWORD)v8)
    {
      *(_DWORD *)v5 = *(_DWORD *)v3;
      *(_QWORD *)(v5 + 8) = *(_QWORD *)(v3 + 8);
      *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
      sub_23F6B53A4();
      sub_23FAC2F04();
      sub_23FAC2F6C();
      sub_23F6BC4AC(v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if ((_DWORD)v8)
  {
    sub_23FAC2BE4(v8, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v9 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v9 - 8));
    goto LABEL_7;
  }
  sub_23FAC3440();
  swift_bridgeObjectRelease();
  v17 = v5 + *(int *)(v6 + 24);
  v18 = sub_23F6B53A4();
  sub_23F6B563C(v17, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24));
LABEL_7:
  v10 = *(int *)(v1 + 20);
  v11 = v5 + v10;
  v12 = v3 + v10;
  v13 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5 + v10, 1, v6);
  v14 = sub_23FAC2B44(v12);
  if (!v13)
  {
    if (!(_DWORD)v14)
    {
      sub_23FAC30A4();
      sub_23F717D54();
      v19 = sub_23F6B53A4();
      sub_23FAC2D80(v19);
      goto LABEL_13;
    }
    sub_23FAC30F8(v14, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if ((_DWORD)v14)
  {
LABEL_12:
    v15 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v15);
    goto LABEL_13;
  }
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  sub_23F6B53A4();
  sub_23FAC2BD0();
  sub_23FAC2CC8();
  sub_23F6BC4AC(v11);
LABEL_13:
  v16 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionCancellationVwtk_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2B44(v3))
  {
    v7 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v7 - 8));
  }
  else
  {
    *(_DWORD *)v5 = *(_DWORD *)v3;
    *(_OWORD *)(v5 + 8) = *(_OWORD *)(v3 + 8);
    v8 = v5 + *(int *)(v6 + 24);
    v9 = sub_23F6B53A4();
    sub_23F6B563C(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
    sub_23F6BC4AC(v5);
  }
  v10 = *(int *)(v1 + 20);
  v11 = v5 + v10;
  v12 = v3 + v10;
  if (sub_23FAC2B44(v3 + v10))
  {
    v13 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v13);
  }
  else
  {
    *(_DWORD *)v11 = *(_DWORD *)v12;
    *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
    v14 = sub_23F6B53A4();
    sub_23FAC2C98(v14);
    sub_23F6BC4AC(v11);
  }
  v15 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32));
  sub_23F6B69E0();
}

void _s30IntelligenceFlowPlannerSupport33TranscriptProtoActionCancellationVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_23F6D3A90();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5, 1, v6);
  v8 = sub_23FAC2B44(v3);
  if (v7)
  {
    if (!(_DWORD)v8)
    {
      *(_DWORD *)v5 = *(_DWORD *)v3;
      *(_OWORD *)(v5 + 8) = *(_OWORD *)(v3 + 8);
      v9 = v5 + *(int *)(v6 + 24);
      v10 = sub_23F6B53A4();
      sub_23F6B563C(v9, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32));
      sub_23F6BC4AC(v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if ((_DWORD)v8)
  {
    sub_23FAC2BE4(v8, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v11 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v11 - 8));
    goto LABEL_7;
  }
  sub_23FAC36F4();
  v20 = v5 + *(int *)(v6 + 24);
  v21 = sub_23F6B53A4();
  sub_23F6B563C(v20, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40));
LABEL_7:
  v12 = *(int *)(v1 + 20);
  v13 = v5 + v12;
  v14 = v3 + v12;
  v15 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v5 + v12, 1, v6);
  v16 = sub_23FAC2B44(v14);
  if (!v15)
  {
    if (!(_DWORD)v16)
    {
      sub_23FAC3278();
      v22 = sub_23F6B53A4();
      sub_23FAC2D68(v22);
      goto LABEL_13;
    }
    sub_23FAC30F8(v16, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if ((_DWORD)v16)
  {
LABEL_12:
    v18 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2BEC(v18);
    goto LABEL_13;
  }
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
  v17 = sub_23F6B53A4();
  sub_23FAC2C98(v17);
  sub_23F6BC4AC(v13);
LABEL_13:
  v19 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40));
  sub_23F6B69E0();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIndexExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA911E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FA98E0C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIndexExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA911FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FA98E64(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUpdateParametersExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA91214()
{
  sub_23FA99C8C();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUpdateParametersExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA9122C()
{
  sub_23FA99CF4();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    swift_bridgeObjectRetain();
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v10, 1, v11))
    {
      v12 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v14 = v10[2];
      v9[1] = v10[1];
      v9[2] = v14;
      v15 = *(int *)(v11 + 24);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_23FB2D718();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v9, 0, 1, v11);
    }
    v20 = *(int *)(a3 + 28);
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = sub_23FB2D718();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_23FB2D718();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_23FB2D718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  swift_bridgeObjectRetain();
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
  {
    v11 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v12 = v9[2];
    v8[1] = v9[1];
    v8[2] = v12;
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_23FB2D718();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 28);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v11 = *(int *)(v9 + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v10);
  v12 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v9, 1, v10);
  if (!v11)
  {
    if (!v12)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v23 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v23;
      swift_bridgeObjectRelease();
      v24 = *(int *)(v10 + 24);
      v25 = v8 + v24;
      v26 = v9 + v24;
      v27 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_23F93DADC(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v13 = *(int *)(v10 + 24);
  v14 = v8 + v13;
  v15 = v9 + v13;
  v16 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v8, 0, 1, v10);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUpdateParameterExpression_UpdateParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FA91A0C()
{
  sub_23FAC12F4();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUpdateParameterExpression_UpdateParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FA91A24()
{
  sub_23FAC135C();
}

void sub_23FA91A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAC2134(a1, a2, a3, (uint64_t)&unk_23FB8EBA8, (uint64_t)&unk_23FB8ED40, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCallExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCallExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSayExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSayExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPickExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoStatementID(0);
    if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_23F6916B8(&qword_256EA25E0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v13 = v9[2];
      v8[1] = v9[1];
      v8[2] = v13;
      v14 = *(int *)(v10 + 24);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_23FB2D718();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v8, 0, 1, v10);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_23FB2D718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t _s30IntelligenceFlowPlannerSupport31TranscriptProtoPrefixExpressionVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = sub_23FAC3B30();
  type metadata accessor for TranscriptProtoStatementID(v1);
  if (!sub_23FAC2B44(v0))
  {
    sub_23FAC3CF4();
    v2 = sub_23F6B53A4();
    sub_23FAC2CE4(v2);
  }
  sub_23F6B53A4();
  v3 = sub_23F87922C();
  return sub_23FAC2C30(v3, v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoPickExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  if (_s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v11 = v8[2];
    v7[1] = v8[1];
    v7[2] = v11;
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_23FB2D718();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoPickExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = sub_23F6916B8(&qword_256EA25E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v12 = *(int *)(v9 + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_23FB2D718();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoPickExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v7, 1, v9);
  v11 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v22 = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      *(_QWORD *)(v7 + 16) = v22;
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = v7 + v23;
      v25 = v8 + v23;
      v26 = sub_23FB2D718();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_23F93DADC(v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = sub_23F6916B8(&qword_256EA25E0);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v12 = *(int *)(v9 + 24);
  v13 = v7 + v12;
  v14 = v8 + v12;
  v15 = sub_23FB2D718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwst_0(v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_23FB2D718();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPickExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA920AC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6B6B7C();
  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6F07DC();
  if (v0)
  {
    sub_23F6F0B94();
  }
  else
  {
    sub_23F6B53A4();
    sub_23F6F0B08();
  }
  v2 = sub_23F6F08CC(v1);
  return sub_23F6F07D0(v2, v3, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPickExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA92100()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23F6916B8(&qword_256EA25E0);
  sub_23F6F07EC();
  if (!v0)
    sub_23F6B53A4();
  sub_23F6F08B0();
  return sub_23F6F07C4(v1, v2, v3, v4);
}

void sub_23FA9215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FAB82D0(a1, a2, a3, MEMORY[0x24BEE0178] + 64, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoConfirmExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA921A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoConfirmExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA921B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25E0);
}

void sub_23FA921C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FABF738(a1, a2, a3, qword_256EB5138, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSearchExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSearchExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwCP_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6B50E8();
  v2 = v1;
  sub_23F877920();
  if ((v3 & 0x20000) != 0)
  {
    sub_23F876A58(*v2);
  }
  else
  {
    type metadata accessor for TranscriptProtoStatementID(0);
    if (sub_23FAC2B44((uint64_t)v2))
    {
      v4 = sub_23F6916B8(&qword_256EA25E0);
      sub_23FAC2B80(*(_QWORD *)(v4 - 8));
    }
    else
    {
      *(_DWORD *)v0 = *(_DWORD *)v2;
      v5 = v2[2];
      *(_QWORD *)(v0 + 8) = v2[1];
      *(_QWORD *)(v0 + 16) = v5;
      sub_23F6B53A4();
      sub_23FAC2F04();
      sub_23FAC2F6C();
      sub_23F6BC4AC(v0);
    }
    v6 = sub_23F6B53A4();
    sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  }
  sub_23F693DDC();
}

uint64_t _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  type metadata accessor for TranscriptProtoStatementID(0);
  if (!sub_23F7B0D30(a1))
  {
    swift_bridgeObjectRelease();
    v2 = sub_23F6B53A4();
    sub_23FAC2CE4(v2);
  }
  sub_23F6B53A4();
  v3 = sub_23F87922C();
  return sub_23FAC2C30(v3, v4, v5);
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwcp_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23F6B50E8();
  v1 = v0;
  v3 = v2;
  type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2B44(v1))
  {
    v4 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v4 - 8));
  }
  else
  {
    *(_DWORD *)v3 = *(_DWORD *)v1;
    v5 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v3 + 8) = *(_QWORD *)(v1 + 8);
    *(_QWORD *)(v3 + 16) = v5;
    sub_23F6B53A4();
    sub_23FAC2F04();
    sub_23FAC2F6C();
    sub_23F6BC4AC(v3);
  }
  v6 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  sub_23F693DDC();
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (sub_23FAC2B44(a2))
  {
    v5 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v5 - 8));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    v6 = a1 + *(int *)(v4 + 24);
    v7 = sub_23F6B53A4();
    sub_23F6B563C(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
    sub_23F6BC4AC(a1);
  }
  v8 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  sub_23F6B5F7C();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPickOneExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA92484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPickOneExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA9249C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResolveToolExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResolveToolExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA924D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA924EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRejectExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA92504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRejectExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA9251C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCancelExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA92534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FABF68C(a1, a2, a3, &qword_256EA25E0);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCancelExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FA9254C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FABF6E4(a1, a2, a3, a4, &qword_256EA25E0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoNoMatchingToolExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoNoMatchingToolExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContinuePlanningExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContinuePlanningExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEndOfPlanExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEndOfPlanExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoGetMentionedAppsExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoGetMentionedAppsExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void _s30IntelligenceFlowPlannerSupport32TranscriptProtoConfirmExpressionVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23F6B50E8();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = _s30IntelligenceFlowPlannerSupport25ContextProtoRetrievedToolV26ContextProtoDefinitionEnumOwet_0(v3, 1, v4);
  v6 = sub_23FAC2B44(v1);
  if (!v5)
  {
    if (!(_DWORD)v6)
    {
      sub_23FAC3440();
      swift_bridgeObjectRelease();
      v9 = sub_23F6B53A4();
      sub_23FAC2D80(v9);
      goto LABEL_7;
    }
    sub_23FAC2BE4(v6, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if ((_DWORD)v6)
  {
LABEL_6:
    v7 = sub_23F6916B8(&qword_256EA25E0);
    sub_23FAC2B80(*(_QWORD *)(v7 - 8));
    goto LABEL_7;
  }
  *(_DWORD *)v3 = *(_DWORD *)v1;
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  sub_23F6B53A4();
  sub_23FAC2F04();
  sub_23FAC2F6C();
  sub_23F6BC4AC(v3);
LABEL_7:
  v8 = sub_23F6B53A4();
  sub_23FAC2B38(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24));
  sub_23F693DDC();
}

