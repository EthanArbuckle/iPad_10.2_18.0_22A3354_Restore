@implementation PSCNAutocompleteFeedbackProcessingTask

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl(&dword_1A07F4000, v3, OS_LOG_TYPE_INFO, "_PSCNAutocompleteFeedbackTracker: Communicating the following impression to CoreAnalytics: %@", (uint8_t *)&v4, 0xCu);
  }

  AnalyticsSendEvent();
}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_115(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl(&dword_1A07F4000, v3, OS_LOG_TYPE_INFO, "_PSCNAutocompleteFeedbackTracker: Communicating the following submodel impression to CoreAnalytics: %@", (uint8_t *)&v4, 0xCu);
  }

  AnalyticsSendEvent();
}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_117(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl(&dword_1A07F4000, v3, OS_LOG_TYPE_INFO, "_PSCNAutocompleteFeedbackTracker: Communicating the following action to CoreAnalytics: %@", (uint8_t *)&v4, 0xCu);
  }

  AnalyticsSendEvent();
}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_120(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  char v5;
  __CFString *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const __CFString *v16;
  const __CFString *v17;
  __CFString *v18;
  __CFString *v19;
  int v20;
  void *v21;
  void *v22;
  __CFString *v23;
  NSObject *v24;

  objc_msgSend(a2, "eventBody");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    if (*(unsigned __int8 *)(a1 + 56) == objc_msgSend(v3, "isImplicit"))
    {
      v5 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
      v6 = 0;
    }
    else
    {
      v15 = (void *)MEMORY[0x1E0CB3940];
      if (*(_BYTE *)(a1 + 56))
        v16 = CFSTR("YES");
      else
        v16 = CFSTR("NO");
      if (objc_msgSend(v4, "isImplicit"))
        v17 = CFSTR("YES");
      else
        v17 = CFSTR("NO");
      objc_msgSend(v15, "stringWithFormat:", CFSTR("processing implicit == %@, but feedback is implicit == %@"), v16, v17);
      v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v5 = 1;
    }
    if ((v5 & (v6 == 0)) != 0)
      v18 = CFSTR("feedback type is not reliably reported yet");
    else
      v18 = v6;
    v19 = v18;

    if ((v5 & 1) != 0)
    {
      v20 = 1;
    }
    else
    {
      v21 = *(void **)(a1 + 32);
      objc_msgSend(v4, "sourceBundleIdentifier");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v21, "containsObject:", v22);

    }
    if ((v20 & (v19 == 0)) != 0)
      v23 = CFSTR("feedback generated by testing or introspection, not usage within client app");
    else
      v23 = v19;
    v7 = v23;

    if (v20)
    {
      +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
        __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_120_cold_2();

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 40), "processFeedback:", v4);
    }
  }
  else
  {
    +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_120_cold_1(v7, v8, v9, v10, v11, v12, v13, v14);
  }

}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_129(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a2;
  if (objc_msgSend(v3, "state"))
  {
    +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_129_cold_1(v3, v4);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "finish");
    +[_PSLogging feedbackChannel](_PSLogging, "feedbackChannel");
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A07F4000, v4, OS_LOG_TYPE_DEFAULT, "_PSCNAutocompleteFeedbackProcessingTask: Successfully consumed stream", v5, 2u);
    }
  }

}

BOOL __58___PSCNAutocompleteFeedbackProcessingTask_runOverExplicit__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = a2;
  if (objc_msgSend(v2, "feedbackType") == 4
    || objc_msgSend(v2, "feedbackType") == 5
    || !objc_msgSend(v2, "feedbackType")
    && (objc_msgSend(v2, "entered"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        v6 = objc_msgSend(v5, "enterStatus"),
        v5,
        v6))
  {
    v3 = 1;
  }
  else if (objc_msgSend(v2, "feedbackType") == 1)
  {
    objc_msgSend(v2, "exited");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v7, "exitStatus") != 0;

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

BOOL __58___PSCNAutocompleteFeedbackProcessingTask_runOverImplicit__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "feedbackType") != 2;
}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_120_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_0(&dword_1A07F4000, a1, a3, "_PSCNAutocompleteFeedbackProcessingTask: Received malformed Biome Event. Skipping.", a5, a6, a7, a8, 0);
}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_120_cold_2()
{
  os_log_t v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_5();
  _os_log_debug_impl(&dword_1A07F4000, v0, OS_LOG_TYPE_DEBUG, "_PSCNAutocompleteFeedbackProcessingTask: Skipping feedback event - %@.", v1, 0xCu);
  OUTLINED_FUNCTION_1();
}

void __96___PSCNAutocompleteFeedbackProcessingTask_runWithInferredEnterAndExit_overImplicit_eventFilter___block_invoke_129_cold_1(void *a1, NSObject *a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint8_t v6[24];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "error");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "description");
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  objc_msgSend(v4, "UTF8String");
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_2(&dword_1A07F4000, a2, v5, "_PSCNAutocompleteFeedbackProcessingTask: Error: %s", v6);

}

@end
