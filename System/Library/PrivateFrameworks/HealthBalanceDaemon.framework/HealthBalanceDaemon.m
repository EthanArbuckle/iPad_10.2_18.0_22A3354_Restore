uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

id sub_23DC7DF28(uint64_t a1, id a2, uint64_t a3, char a4, uint64_t a5)
{
  id v10;
  unsigned int *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v10 = objc_msgSend(a2, sel_dataCount);
  if (!v10)
    goto LABEL_12;
  if ((uint64_t)v10 >= a5)
  {
    if ((a4 & 1) == 0)
    {
      v13 = objc_msgSend(a2, sel_percentileQuantity);
LABEL_16:
      v15 = v13;
      goto LABEL_17;
    }
    if (!a3)
    {
      v13 = objc_msgSend(a2, sel_averageQuantity);
      goto LABEL_16;
    }
    if (a3 != 1)
    {
      v13 = objc_msgSend(a2, sel_maximumQuantity);
      goto LABEL_16;
    }
    v14 = objc_msgSend(a2, sel_averageQuantity);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel__unit);
      objc_msgSend(v15, sel__baselineRelativeDoubleValueForUnit_, v16);
      v18 = v17;

      if (v18 == -1.79769313e308)
      {

        v11 = (unsigned int *)MEMORY[0x24BE3FE70];
        goto LABEL_4;
      }
      if (v18 == 1.79769313e308)
      {

        v11 = (unsigned int *)MEMORY[0x24BE3FE68];
        goto LABEL_4;
      }
LABEL_17:
      v20 = *MEMORY[0x24BE3FE88];
      v21 = sub_23DCE1490();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(a1, v20, v21);
      return v15;
    }
LABEL_12:
    v12 = *MEMORY[0x24BE3FE80];
    goto LABEL_13;
  }
  v11 = (unsigned int *)MEMORY[0x24BE3FE58];
LABEL_4:
  v12 = *v11;
LABEL_13:
  v19 = sub_23DCE1490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(a1, v12, v19);
  return 0;
}

uint64_t sub_23DC7E0EC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;

  v96 = a4;
  v97 = a6;
  LODWORD(v95) = a5;
  v92 = a2;
  v93 = a3;
  v89 = a7;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v8);
  v88 = (char *)&v78 - v9;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v81 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v85 = (char *)&v78 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v82 = (char *)&v78 - v15;
  v94 = sub_23DCE12E0();
  v91 = *(_QWORD *)(v94 - 8);
  v16 = MEMORY[0x24BDAC7A8](v94);
  v80 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v86 = (char *)&v78 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v83 = (char *)&v78 - v20;
  v90 = sub_23DCE1C64();
  v21 = *(_QWORD *)(v90 - 8);
  v22 = MEMORY[0x24BDAC7A8](v90);
  v79 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v84 = (char *)&v78 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v78 - v26;
  sub_23DC7F5FC();
  v29 = v28;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (uint64_t *)((char *)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = sub_23DCE1490();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34);
  v87 = (char *)&v78 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v78 - v39;
  v41 = sub_23DC7DF28((uint64_t)&v78 - v39, a1, v96, v95 & 1, v97);
  v42 = (char *)v31 + *(int *)(v29 + 48);
  *v31 = v41;
  v43 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  v43(v42, v40, v32);
  v44 = *(uint64_t (**)(char *, uint64_t))(v33 + 88);
  v97 = v32;
  v45 = v44(v42, v32);
  if ((_DWORD)v45 == *MEMORY[0x24BE3FE68])
  {
    v46 = v45;
    v47 = v85;

    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v84, v92, v90);
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v86, v93, v94);
    v48 = objc_msgSend(a1, sel_mostRecentQuantityDateInterval);
    if (v48)
    {
      v49 = v48;
      sub_23DCE10B8();

      v50 = sub_23DCE1100();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v47, 0, 1, v50);
    }
    else
    {
      v68 = sub_23DCE1100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v47, 1, 1, v68);
    }
    v69 = v88;
    v70 = v87;
    v71 = v97;
    v72 = sub_23DCE11E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v69, 1, 1, v72);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v70, v46, v71);
  }
  else
  {
    v86 = v36;
    v95 = v41;
    v96 = v33;
    v52 = v90;
    v51 = v91;
    v53 = v83;
    v54 = a1;
    v56 = v92;
    v55 = v93;
    if ((_DWORD)v45 != *MEMORY[0x24BE3FE88])
    {

      v62 = v87;
      v63 = v97;
      v43(v87, v42, v97);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v79, v56, v52);
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v80, v55, v94);
      v64 = sub_23DCE1100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v81, 1, 1, v64);
      v65 = sub_23DCE11E4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v88, 1, 1, v65);
      v66 = v96;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v86, v62, v63);
      sub_23DCE14B4();
      return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v62, v63);
    }
    v57 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v27, v92, v90);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v53, v55, v94);
    v58 = objc_msgSend(v54, sel_mostRecentQuantityDateInterval);
    if (v58)
    {
      v59 = v58;
      v60 = v82;
      sub_23DCE10B8();

      v61 = sub_23DCE1100();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
    }
    else
    {
      v73 = sub_23DCE1100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v82, 1, 1, v73);
    }
    v74 = v88;
    v75 = v96;
    v76 = v97;
    v77 = sub_23DCE11E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v74, 1, 1, v77);
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 104))(v87, v57, v76);
  }
  return sub_23DCE14B4();
}

uint64_t sub_23DC7E758(uint64_t a1, uint64_t a2)
{
  return sub_23DC7F8A8(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

id sub_23DC7E774(void *a1, uint64_t a2, char a3)
{
  id v4;
  uint64_t v5;
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;

  if ((a3 & 1) != 0)
  {
    if (a2)
    {
      if (a2 == 1)
      {
        v12 = a1;
        v13 = _HKStatisticsOptionBaselineRelativeQuantities() | 0x22;
        v6 = objc_msgSend((id)objc_opt_self(), sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, v12, 0, v13, 0, 1);

        return v6;
      }
      v14 = objc_msgSend((id)objc_opt_self(), sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, a1, 0, 8, 0, 1);
    }
    else
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, a1, 0, 34, 0, 1);
    }
    return v14;
  }
  v4 = a1;
  v5 = _HKStatisticsOptionPercentile() | 0x20;
  v6 = objc_msgSend((id)objc_opt_self(), sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, v4, 0, v5, 0, 7);

  if (v6)
  {
    v7 = *(double *)&a2;
    v8 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    v9 = v6;
    v10 = objc_msgSend(v8, sel_initWithDouble_, v7);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE40C58]), sel_initWithPercentile_, v10);

    objc_msgSend(v9, sel_setStatisticsConfiguration_, v11);
  }
  return v6;
}

void sub_23DC7E940(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45[2];

  v42 = a1;
  v45[1] = *(id *)MEMORY[0x24BDAC8D0];
  v41 = sub_23DCE1490();
  v1 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - v5;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - v8;
  v10 = sub_23DCE12E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23DCE1C64();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)(v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_calculator);
  if (v18)
  {
    v38 = v17;
    v39 = v9;
    v40 = v1;
    v45[0] = 0;
    v19 = v18;
    if (objc_msgSend(v19, sel_queryForInitialStatisticsWithError_, v45))
    {
      v20 = v45[0];
      v21 = objc_msgSend(v19, sel_currentStatistics);
      if (v21)
      {
        v22 = v21;
        sub_23DC7E0EC(v21, v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex, v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar, *(_QWORD *)(v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder), *(unsigned __int8 *)(v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder + 8), *(_QWORD *)(v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder + 16), v42);

      }
      else
      {
        v33 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v38, v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex, v14);
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v33 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar, v10);
        v34 = sub_23DCE1100();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v39, 1, 1, v34);
        v35 = sub_23DCE11E4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 1, 1, v35);
        (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v3, *MEMORY[0x24BE3FE80], v41);
        sub_23DCE14B4();

      }
    }
    else
    {
      v27 = v45[0];
      v28 = (void *)sub_23DCE1154();

      swift_willThrow();
      v45[0] = v28;
      v29 = v28;
      sub_23DC7F564();
      sub_23DC802D0(0, (unint64_t *)&unk_256CF9550);
      if (swift_dynamicCast())
      {

        v30 = v44;
        v31 = objc_msgSend(v44, sel_hk_isDatabaseAccessibilityError);
        sub_23DC7F5B8();
        swift_allocError();
        *(_QWORD *)v32 = v30;
        if (v31)
          *(_BYTE *)(v32 + 8) = 1;
        else
          *(_BYTE *)(v32 + 8) = 0;
        v36 = v30;
        swift_willThrow();

      }
    }
  }
  else
  {
    v23 = v14;
    v24 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v43 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar, v10);
    v25 = sub_23DCE1100();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
    v26 = sub_23DCE11E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE3FE80], v41);
    sub_23DCE14B4();
  }
}

uint64_t sub_23DC7EE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex;
  v2 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar;
  v4 = sub_23DCE12E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23DC7EEB4()
{
  return type metadata accessor for SleepingSampleAggregator();
}

uint64_t type metadata accessor for SleepingSampleAggregator()
{
  uint64_t result;

  result = qword_254325358;
  if (!qword_254325358)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DC7EEF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23DCE1C64();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE12E0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void type metadata accessor for HKWorkoutActivityType(uint64_t a1)
{
  sub_23DC7FDC4(a1, &qword_256CF8F58);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepingSampleAggregateBuilder(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SleepingSampleAggregateBuilder(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleAggregateBuilder()
{
  return &type metadata for SleepingSampleAggregateBuilder;
}

_QWORD *sub_23DC7F020@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_23DC7F034(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23DC7F064(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23DC7F078(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_23DC7F08C(uint64_t a1, uint64_t a2)
{
  return sub_23DC7F318(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_23DC7F0AC(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_23DCE1D18();
  *a2 = 0;
  return result;
}

uint64_t sub_23DC7F120(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_23DCE1D24();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23DC7F19C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23DCE1D30();
  v2 = sub_23DCE1D0C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_23DC7F1DC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_23DC7F1EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23DCE1D30();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23DC7F214(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23DC7F21C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23DC7F230@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_23DC7F244@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23DC7F270@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23DC7F294(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23DC7F2A8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23DC7F2BC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23DC7F2D0()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_23DC7F2E0()
{
  return sub_23DCE2030();
}

_QWORD *sub_23DC7F2F8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_23DC7F30C(uint64_t a1, uint64_t a2)
{
  return sub_23DC7F318(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_23DC7F318(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_23DCE1D30();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23DC7F354()
{
  sub_23DCE1D30();
  sub_23DCE1D48();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DC7F394()
{
  uint64_t v0;

  sub_23DCE1D30();
  sub_23DCE22DC();
  sub_23DCE1D48();
  v0 = sub_23DCE22F4();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_23DC7F404(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_23DC7F418(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23DC7F42C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_23DC7F444@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_23DC80298(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_23DC7F480@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_23DC7F490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_23DCE1D30();
  v2 = v1;
  if (v0 == sub_23DCE1D30() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_23DCE2270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_23DC7F518(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23DCE1FAC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_23DC7F564()
{
  unint64_t result;

  result = qword_256CF8FC0;
  if (!qword_256CF8FC0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_256CF8FC0);
  }
  return result;
}

unint64_t sub_23DC7F5B8()
{
  unint64_t result;

  result = qword_256CF8FD0;
  if (!qword_256CF8FD0)
  {
    result = MEMORY[0x2426416D0](&unk_23DCE3550, &type metadata for SleepingSampleAggregator.Error);
    atomic_store(result, (unint64_t *)&qword_256CF8FD0);
  }
  return result;
}

void sub_23DC7F5FC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543256E8)
  {
    sub_23DC7F668();
    sub_23DCE1490();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543256E8);
  }
}

void sub_23DC7F668()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543256E0)
  {
    sub_23DC802D0(255, &qword_2543256D8);
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543256E0);
  }
}

_QWORD *sub_23DC7F6CC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23DC7F6D8()
{
  sub_23DC80074(&qword_256CF9148, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23DCE3590);
  sub_23DC80074((unint64_t *)&unk_256CF9150, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23DCE307C);
  return sub_23DCE2228();
}

uint64_t sub_23DC7F75C()
{
  sub_23DC80074((unint64_t *)&qword_2543249C0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23DCE34CC);
  sub_23DC80074((unint64_t *)&unk_256CF9130, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23DCE342C);
  return sub_23DCE2228();
}

uint64_t sub_23DC7F7E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23DCE1D0C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23DC7F824()
{
  sub_23DC80074((unint64_t *)&qword_256CF98C0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_23DCE350C);
  sub_23DC80074(&qword_256CF9140, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_23DCE3320);
  return sub_23DCE2228();
}

uint64_t sub_23DC7F8A8(void *a1, char a2, void *a3, char a4)
{
  char v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) == 0)
      goto LABEL_3;
LABEL_5:
    sub_23DC802D0(0, (unint64_t *)&qword_254324A30);
    v7 = a1;
    v8 = a3;
    v6 = sub_23DCE1F88();

    return v6 & 1;
  }
  if ((a4 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v6 = 0;
  return v6 & 1;
}

uint64_t sub_23DC7F930(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v26;

  v15 = v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex;
  v16 = sub_23DCE1C64();
  v26 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v15, a1, v16);
  v17 = v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar;
  v18 = sub_23DCE12E0();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, a2, v18);
  v20 = v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder;
  *(_QWORD *)v20 = a3;
  *(_BYTE *)(v20 + 8) = a4 & 1;
  *(_QWORD *)(v20 + 16) = a5;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_calculator) = a6;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_dataSource) = a7;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_sourceOrderProvider) = a8;
  swift_unknownObjectRetain();
  v21 = a6;
  swift_unknownObjectRetain();
  objc_msgSend(v21, sel_setSourceOrderProvider_, a8);
  objc_msgSend(v21, sel_setDataSource_, a7);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a2, v18);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(a1, v16);
  return v8;
}

uint64_t sub_23DC7FAA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  id v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;

  v40 = a8;
  v41 = a7;
  v42 = a3;
  v43 = a6;
  v11 = a4 & 1;
  v12 = sub_23DCE12E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23DCE1C64();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a5)
    goto LABEL_5;
  v39 = v12;
  v20 = a2;
  swift_unknownObjectRetain();
  v21 = sub_23DC7E774(v43, v42, v11);
  if (!v21)
  {
    swift_unknownObjectRelease();
    v12 = v39;
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    type metadata accessor for SleepingSampleAggregator();
    swift_allocObject();
    v32 = sub_23DC7F930((uint64_t)v19, (uint64_t)v15, v42, v11 != 0, v40, 0, 0, 0);
    swift_unknownObjectRelease();

    goto LABEL_6;
  }
  v22 = v21;
  v36 = v11 != 0;
  v23 = objc_allocWithZone(MEMORY[0x24BE40C40]);
  v35 = objc_msgSend(v23, sel_initWithProfile_quantityType_, v41, v43);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v37 = v13;
  v25 = v20;
  v26 = v20;
  v12 = v39;
  v24(v15, v26, v39);
  type metadata accessor for SleepingSampleAggregator();
  swift_allocObject();
  v27 = v22;
  v38 = a1;
  v28 = v27;
  swift_unknownObjectRetain();
  v29 = (uint64_t)v15;
  v30 = v22;
  a2 = v25;
  v13 = v37;
  v31 = v35;
  v32 = sub_23DC7F930((uint64_t)v19, v29, v42, v36, v40, v30, a5, (uint64_t)v35);

  a1 = v38;
  swift_unknownObjectRelease_n();
LABEL_6:
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v16);
  return v32;
}

void type metadata accessor for HKFeatureAvailabilityContext(uint64_t a1)
{
  sub_23DC7FDC4(a1, &qword_2543249E0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_23DC7FDC4(a1, (unint64_t *)&unk_2543249A8);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_23DC7FDC4(a1, &qword_256CF90A0);
}

void type metadata accessor for HDPeriodicActivityResult(uint64_t a1)
{
  sub_23DC7FDC4(a1, &qword_256CF90A8);
}

void type metadata accessor for HKWorkoutTrainingLoadOptions(uint64_t a1)
{
  sub_23DC7FDC4(a1, (unint64_t *)&unk_256CF90B0);
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
  sub_23DC7FDC4(a1, &qword_2543249B8);
}

void sub_23DC7FDC4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SleepingSampleAggregator.Error(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for SleepingSampleAggregator.Error(id *a1)
{

}

uint64_t assignWithCopy for SleepingSampleAggregator.Error(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for SleepingSampleAggregator.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleAggregator.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleAggregator.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23DC7FF58(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23DC7FF64(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleAggregator.Error()
{
  return &type metadata for SleepingSampleAggregator.Error;
}

uint64_t getEnumTagSinglePayload for SleepingSampleAggregateBuilder.CalculationMethod(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SleepingSampleAggregateBuilder.CalculationMethod(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23DC7FFD0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23DC7FFEC(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleAggregateBuilder.CalculationMethod()
{
  return &type metadata for SleepingSampleAggregateBuilder.CalculationMethod;
}

uint64_t sub_23DC8001C()
{
  return sub_23DC80074(&qword_256CF90C0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23DCE3044);
}

uint64_t sub_23DC80048()
{
  return sub_23DC80074(&qword_256CF90C8, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23DCE301C);
}

uint64_t sub_23DC80074(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2426416D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DC800B4()
{
  return sub_23DC80074(&qword_256CF90D0, (uint64_t (*)(uint64_t))type metadata accessor for HKWorkoutTrainingLoadOptions, (uint64_t)&unk_23DCE314C);
}

uint64_t sub_23DC800E0()
{
  return sub_23DC80074(&qword_256CF90D8, (uint64_t (*)(uint64_t))type metadata accessor for HKWorkoutTrainingLoadOptions, (uint64_t)&unk_23DCE311C);
}

uint64_t sub_23DC8010C()
{
  return sub_23DC80074(&qword_256CF90E0, (uint64_t (*)(uint64_t))type metadata accessor for HKWorkoutTrainingLoadOptions, (uint64_t)&unk_23DCE3174);
}

uint64_t sub_23DC80138()
{
  return sub_23DC80074(&qword_256CF90E8, (uint64_t (*)(uint64_t))type metadata accessor for HKWorkoutTrainingLoadOptions, (uint64_t)&unk_23DCE31AC);
}

uint64_t sub_23DC80164()
{
  return sub_23DC80074(&qword_256CF90F0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_23DCE32E4);
}

uint64_t sub_23DC80190()
{
  return sub_23DC80074(&qword_256CF90F8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_23DCE32B8);
}

uint64_t sub_23DC801BC()
{
  return sub_23DC80074(&qword_256CF9100, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23DCE33F4);
}

uint64_t sub_23DC801E8()
{
  return sub_23DC80074((unint64_t *)&unk_256CF9108, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23DCE33CC);
}

uint64_t sub_23DC80214()
{
  return sub_23DC80074((unint64_t *)&unk_2543249D0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23DCE345C);
}

uint64_t sub_23DC80240()
{
  return sub_23DC80074(&qword_256CF9118, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_23DCE3354);
}

uint64_t sub_23DC8026C()
{
  return sub_23DC80074((unint64_t *)&unk_256CF9120, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23DCE30AC);
}

uint64_t sub_23DC80298(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_23DC802D0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_23DC80338(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  char *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  void *v35;
  char *v36;
  char *v37;
  char *v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t ObjectType;
  char *v56;
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64[2];

  v64[1] = *(id *)MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v2 = sub_23DCE182C();
  v3 = *(char **)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v54 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v56 = (char *)&v53 - v6;
  v7 = sub_23DCE1B14();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v62 = (char *)&v53 - v10;
  v58 = sub_23DCE11E4();
  v11 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23DCE1334();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1328();
  sub_23DCE1310();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v19)
  {
    v62 = v3;
    sub_23DCE11A8();
    v20 = objc_allocWithZone(MEMORY[0x24BDD3D88]);
    v21 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v22 = (void *)sub_23DCE116C();
    v23 = objc_msgSend(v20, sel_initWithAction_categoryIdentifier_expirationDate_, 3, v21, v22);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v58);
    v64[0] = 0;
    if (objc_msgSend(v59, sel_sendNotificationInstruction_criteria_error_, v23, 0, v64))
    {
      v24 = v64[0];

    }
    else
    {
      v34 = v64[0];
      v35 = (void *)sub_23DCE1154();

      swift_willThrow();
      v36 = v57;
      sub_23DCE1AFC();
      v37 = v62;
      v38 = v54;
      (*((void (**)(char *, uint64_t, uint64_t))v62 + 2))(v54, a1, v2);
      v39 = v35;
      v40 = v35;
      v41 = sub_23DCE1B08();
      v42 = sub_23DCE1ED4();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        v58 = v2;
        v45 = (_QWORD *)v44;
        v59 = (id)swift_slowAlloc();
        v64[0] = v59;
        *(_DWORD *)v43 = 136446722;
        v46 = sub_23DCE2354();
        v63 = sub_23DCA47EC(v46, v47, (uint64_t *)v64);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2080;
        v48 = sub_23DCE17D8();
        v63 = sub_23DCA47EC(v48, v49, (uint64_t *)v64);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v37 + 1))(v38, v58);
        *(_WORD *)(v43 + 22) = 2114;
        v50 = v35;
        v51 = _swift_stdlib_bridgeErrorToNSError();
        v63 = v51;
        sub_23DCE1FD0();
        *v45 = v51;

        _os_log_impl(&dword_23DC7C000, v41, v42, "[%{public}s] Error sending notification instruction (%s): %{public}@", (uint8_t *)v43, 0x20u);
        sub_23DC80CF8();
        swift_arrayDestroy();
        MEMORY[0x24264179C](v45, -1, -1);
        v52 = v59;
        swift_arrayDestroy();
        MEMORY[0x24264179C](v52, -1, -1);
        MEMORY[0x24264179C](v43, -1, -1);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v61);
      }
      else
      {

        (*((void (**)(char *, uint64_t))v37 + 1))(v38, v2);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v61);
      }
    }
  }
  else
  {
    sub_23DCE1AFC();
    v25 = v56;
    (*((void (**)(char *, uint64_t, uint64_t))v3 + 2))(v56, a1, v2);
    v26 = sub_23DCE1B08();
    v27 = sub_23DCE1ED4();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      v28 = swift_slowAlloc();
      v29 = (void *)swift_slowAlloc();
      v64[0] = v29;
      *(_DWORD *)v28 = 136446466;
      v30 = sub_23DCE2354();
      v63 = sub_23DCA47EC(v30, v31, (uint64_t *)v64);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      v32 = sub_23DCE17D8();
      v63 = sub_23DCA47EC(v32, v33, (uint64_t *)v64);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v3 + 1))(v25, v2);
      _os_log_impl(&dword_23DC7C000, v26, (os_log_type_t)v27, "[%{public}s] Failed to encode notification: %{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v29, -1, -1);
      MEMORY[0x24264179C](v28, -1, -1);
    }
    else
    {
      (*((void (**)(char *, uint64_t))v3 + 1))(v25, v2);
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
  }
}

uint64_t sub_23DC809D8@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46[16];
  char *v47;

  v37 = a1;
  v2 = sub_23DCE1C64();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v36 - v5;
  v6 = sub_23DCE182C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v36 - v11;
  v13 = sub_23DCE1334();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1328();
  v17 = objc_msgSend(v1, sel_categoryIdentifiers);
  v18 = sub_23DCE1E38();

  v47 = v16;
  v19 = sub_23DCAEE4C((void (*)(_QWORD))sub_23DC80D88, (uint64_t)v46, v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v37, 1, 1, v6);
    return swift_bridgeObjectRelease();
  }
  v21 = *(unsigned __int8 *)(v7 + 80);
  v40 = *(void (**)(char *))(v7 + 16);
  v41 = v19 + ((v21 + 32) & ~v21);
  v40(v12);
  result = swift_bridgeObjectRetain();
  v23 = v37;
  v24 = v7;
  if (v20 == 1)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v23, v12, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v6);
    return swift_bridgeObjectRelease();
  }
  v25 = 1;
  v38 = v20;
  v39 = v19;
  while (v25 < *(_QWORD *)(v19 + 16))
  {
    v26 = v23;
    ((void (*)(char *, unint64_t, uint64_t))v40)(v10, v41 + *(_QWORD *)(v24 + 72) * v25, v6);
    v27 = v42;
    v28 = v6;
    sub_23DCE17E4();
    v29 = v43;
    sub_23DCE17E4();
    v30 = sub_23DCE1BD4();
    v31 = *(void (**)(char *, uint64_t))(v44 + 8);
    v32 = v29;
    v33 = v12;
    v34 = v45;
    v31(v32, v45);
    v31(v27, v34);
    v35 = *(void (**)(char *, uint64_t))(v24 + 8);
    if ((v30 & 1) != 0)
    {
      v35(v33, v28);
      result = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v33, v10, v28);
    }
    else
    {
      result = ((uint64_t (*)(char *, uint64_t))v35)(v10, v28);
    }
    v23 = v26;
    v12 = v33;
    v6 = v28;
    v19 = v39;
    if (v38 == ++v25)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

void sub_23DC80CF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324A40)
  {
    sub_23DC80D4C();
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324A40);
  }
}

unint64_t sub_23DC80D4C()
{
  unint64_t result;

  result = qword_254324A30;
  if (!qword_254324A30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254324A30);
  }
  return result;
}

uint64_t sub_23DC80D88()
{
  return sub_23DCE131C();
}

uint64_t sub_23DC80DB8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthBalanceDaemon()
{
  return objc_opt_self();
}

char *sub_23DC80DE8(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23DCE11E4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      sub_23DC80EF0(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  }
  return a1;
}

void sub_23DC80EF0(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DC80F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_23DCE11E4();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_23DC80FA0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23DCE11E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_23DC80EF0(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_23DC8107C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23DCE11E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_23DC80EF0(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_23DC811A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_23DCE11E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_23DC80EF0(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_23DC81280(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23DCE11E4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_23DC80EF0(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_23DC813A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DC813B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23DCE11E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_23DC80EF0(0);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23DC81428()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DC81434(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_23DCE11E4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_23DC80EF0(0);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SleepingSampleCacheRange()
{
  uint64_t result;

  result = qword_2543247B8;
  if (!qword_2543247B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DC814EC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DCE11E4();
  if (v0 <= 0x3F)
  {
    sub_23DC80EF0(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23DC8157C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  sub_23DC80EF0(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v25 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v12 = sub_23DCE11E4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v25 - v17;
  sub_23DC82858(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC80EF0);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1)
    return sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC80EF0);
  v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v18, v11, v12);
  v22 = v1 + *(int *)(type metadata accessor for SleepingSampleCacheRange() + 20);
  sub_23DC82858(v22, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_23DC80EF0);
  if (v19(v9, 1, v12) == 1)
  {
    sub_23DC827C4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23DC80EF0);
    sub_23DC827C4(v22, (uint64_t (*)(_QWORD))sub_23DC80EF0);
    v21((char *)v22, v18, v12);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
  }
  else
  {
    v21(v16, v9, v12);
    sub_23DC817E4();
    if ((sub_23DCE1CC4() & 1) != 0)
      v23 = v18;
    else
      v23 = v16;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v6, v23, v12);
    v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v16, v12);
    v24(v18, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    return sub_23DC8182C((uint64_t)v6, v22);
  }
}

unint64_t sub_23DC817E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543252D0;
  if (!qword_2543252D0)
  {
    v1 = sub_23DCE11E4();
    result = MEMORY[0x2426416D0](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_2543252D0);
  }
  return result;
}

uint64_t sub_23DC8182C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC80EF0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_23DC81870(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  sub_23DC81D20(0);
  MEMORY[0x24BDAC7A8](v2);
  v57 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23DCE1100();
  v4 = *(_QWORD *)(v59 - 8);
  v5 = MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v52 - v7;
  sub_23DC80EF0(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v52 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v52 - v15;
  v17 = sub_23DCE11E4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v53 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v52 = (char *)&v52 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v56 = (char *)&v52 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v52 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v52 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v52 - v31;
  v61 = a1;
  sub_23DC81D3C(a1, MEMORY[0x24BE3FDC0], (uint64_t)v16);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v34 = v33(v16, 1, v17);
  v58 = v4;
  if (v34 == 1)
  {
    v35 = v60;
    sub_23DC827C4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_23DC80EF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v32, v16, v17);
    sub_23DC817E4();
    v35 = v60;
    v36 = sub_23DCE1CB8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v32, v17);
    if ((v36 & 1) == 0)
      return 1;
  }
  sub_23DC81D3C(v61, MEMORY[0x24BE3FDD8], (uint64_t)v14);
  if (v33(v14, 1, v17) == 1)
  {
    sub_23DC827C4((uint64_t)v14, (uint64_t (*)(_QWORD))sub_23DC80EF0);
    v37 = v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v30, v14, v17);
    type metadata accessor for SleepingSampleCacheRange();
    v37 = v35;
    sub_23DCE119C();
    v38 = sub_23DCE1178();
    v39 = *(void (**)(char *, uint64_t))(v18 + 8);
    v39(v27, v17);
    v39(v30, v17);
    if ((v38 & 1) != 0)
      return 1;
  }
  v40 = type metadata accessor for SleepingSampleCacheRange();
  sub_23DC82858(v37 + *(int *)(v40 + 20), (uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC80EF0);
  if (v33(v11, 1, v17) == 1)
  {
    v41 = sub_23DC80EF0;
    v42 = (uint64_t)v11;
LABEL_11:
    sub_23DC827C4(v42, (uint64_t (*)(_QWORD))v41);
    return 0;
  }
  v43 = v56;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v56, v11, v17);
  v44 = v57;
  sub_23DC81F34(v61, v57);
  v46 = v58;
  v45 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v44, 1, v59) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v43, v17);
    v41 = sub_23DC81D20;
    v42 = v44;
    goto LABEL_11;
  }
  v48 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v54, v44, v45);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v49(v52, v37, v17);
  v49(v53, (uint64_t)v43, v17);
  v50 = v55;
  sub_23DCE10D0();
  LOBYTE(v49) = sub_23DCE1088();
  v51 = *(void (**)(char *, uint64_t))(v46 + 8);
  v51(v50, v45);
  v51(v48, v45);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v43, v17);
  return (v49 & 1) != 0;
}

void sub_23DC81D20(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_2543244B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DC81D3C@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23DCE146C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC81D20(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *a2, v6);
  v13 = (void *)sub_23DCE1454();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_23DCD89F8((uint64_t)v13), (v15 & 1) != 0))
  {
    v16 = v14;
    v17 = *(_QWORD *)(a1 + 56);
    v18 = sub_23DCE1100();
    v19 = *(_QWORD *)(v18 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v12, v17 + *(_QWORD *)(v19 + 72) * v16, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
  }
  else
  {
    v18 = sub_23DCE1100();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
  }

  sub_23DCE1100();
  v20 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v18) == 1)
  {
    sub_23DC827C4((uint64_t)v12, (uint64_t (*)(_QWORD))sub_23DC81D20);
    v21 = sub_23DCE11E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
  }
  else
  {
    sub_23DCE10C4();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v18);
    v23 = sub_23DCE11E4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 0, 1, v23);
  }
}

uint64_t sub_23DC81F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  void (*v49)(unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void (*v80)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  BOOL v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  unint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  char *v120;

  v103 = a2;
  v3 = sub_23DCE1100();
  v118 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v108 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v115 = (char *)&v98 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v120 = (char *)&v98 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v113 = (char *)&v98 - v10;
  sub_23DC81D20(0);
  v102 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v111 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v110 = (char *)&v98 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v109 = (char *)&v98 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v98 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v119 = (uint64_t)&v98 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v112 = (char *)&v98 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v116 = (uint64_t)&v98 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v107 = (unint64_t)&v98 - v28;
  v29 = sub_23DCE146C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v100 = (char *)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v99 = (char *)&v98 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v98 - v35;
  sub_23DC82800(0, &qword_254324C98, (uint64_t (*)(uint64_t))sub_23DC81D20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v37 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v114 = *(_QWORD *)(v12 + 72);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_23DCE3610;
  v39 = v38 + v37;
  v40 = *MEMORY[0x24BE3FE10];
  v105 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
  v105(v36, v40, v29);
  v41 = a1;
  v42 = (void *)sub_23DCE1454();
  v43 = *(void (**)(char *, uint64_t))(v30 + 8);
  v44 = v36;
  v45 = v118;
  v43(v44, v29);
  v46 = *(_QWORD *)(v41 + 16);
  v106 = v41;
  if (v46)
  {
    v47 = sub_23DCD89F8((uint64_t)v42);
    if ((v48 & 1) != 0)
    {
      v45 = v118;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v118 + 16))(v39, *(_QWORD *)(v41 + 56) + *(_QWORD *)(v118 + 72) * v47, v3);
      v49 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
      v50 = v39;
      v51 = 0;
      goto LABEL_6;
    }
    v45 = v118;
  }
  v49 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v50 = v39;
  v51 = 1;
LABEL_6:
  v117 = v49;
  v49(v50, v51, 1, v3);
  v52 = v114;

  v104 = v39;
  v53 = v39 + v52;
  v54 = v99;
  v105(v99, *MEMORY[0x24BE3FDC8], v29);
  v55 = (void *)sub_23DCE1454();
  v43(v54, v29);
  v56 = v106;
  v57 = *(_QWORD *)(v106 + 16);
  v101 = v38;
  if (v57 && (v58 = sub_23DCD89F8((uint64_t)v55), (v59 & 1) != 0))
  {
    v60 = *(_QWORD *)(v56 + 56) + *(_QWORD *)(v45 + 72) * v58;
    v61 = v53;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))(v53, v60, v3);
    v62 = 0;
  }
  else
  {
    v62 = 1;
    v61 = v53;
  }
  v63 = v104;
  v117(v61, v62, 1, v3);

  v64 = v100;
  v105(v100, *MEMORY[0x24BE3FDD0], v29);
  v65 = (void *)sub_23DCE1454();
  v43(v64, v29);
  v66 = v106;
  if (*(_QWORD *)(v106 + 16) && (v67 = sub_23DCD89F8((uint64_t)v65), (v68 & 1) != 0))
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v45 + 16))(v63 + 2 * v52, *(_QWORD *)(v66 + 56) + *(_QWORD *)(v45 + 72) * v67, v3);
    v69 = 0;
  }
  else
  {
    v69 = 1;
  }
  v117(v63 + 2 * v52, v69, 1, v3);

  v70 = MEMORY[0x24BEE4AF8];
  v71 = 3;
  v72 = v63;
  do
  {
    v73 = v119;
    sub_23DC82858(v72, v119, (uint64_t (*)(_QWORD))sub_23DC81D20);
    sub_23DC8289C(v73, (uint64_t)v21);
    v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    if (v74(v21, 1, v3) == 1)
    {
      sub_23DC827C4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_23DC81D20);
    }
    else
    {
      v75 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v76 = v113;
      v75(v113, v21, v3);
      v75(v120, v76, v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v70 = sub_23DC8EC00(0, *(_QWORD *)(v70 + 16) + 1, 1, v70);
      v78 = *(_QWORD *)(v70 + 16);
      v77 = *(_QWORD *)(v70 + 24);
      if (v78 >= v77 >> 1)
        v70 = sub_23DC8EC00(v77 > 1, v78 + 1, 1, v70);
      *(_QWORD *)(v70 + 16) = v78 + 1;
      v45 = v118;
      v75((char *)(v70+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v118 + 72) * v78), v120, v3);
      v52 = v114;
    }
    v72 += v52;
    --v71;
  }
  while (v71);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v79 = v107;
  v80 = v117;
  v117(v107, 1, 1, v3);
  sub_23DC82858(v79, v116, (uint64_t (*)(_QWORD))sub_23DC81D20);
  v81 = *(_QWORD *)(v70 + 16);
  if (v81)
  {
    v82 = v70 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    v119 = *(_QWORD *)(v45 + 72);
    v83 = *(char **)(v45 + 16);
    v114 = v70;
    swift_bridgeObjectRetain();
    v84 = v108;
    v85 = v112;
    v120 = v83;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v83)(v85, v82, v3);
      v80((unint64_t)v85, 0, 1, v3);
      if (v74(v85, 1, v3) == 1)
        break;
      v88 = v45;
      v89 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      v90 = v115;
      v89(v115, v85, v3);
      v91 = v111;
      sub_23DC82858(v116, v111, (uint64_t (*)(_QWORD))sub_23DC81D20);
      if (v74((char *)v91, 1, v3) == 1)
      {
        sub_23DC827C4(v91, (uint64_t (*)(_QWORD))sub_23DC81D20);
        v92 = 1;
        v93 = (uint64_t)v110;
      }
      else
      {
        v93 = (uint64_t)v110;
        sub_23DCE10F4();
        v84 = v108;
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v91, v3);
        v92 = 0;
      }
      v117(v93, v92, 1, v3);
      v94 = (void (*)(char *, char *, uint64_t))v120;
      ((void (*)(char *, char *, uint64_t))v120)(v84, v90, v3);
      v95 = v74((char *)v93, 1, v3) == 1;
      v96 = (uint64_t)v109;
      if (v95)
      {
        v94(v109, v84, v3);
        sub_23DC827C4(v93, (uint64_t (*)(_QWORD))sub_23DC81D20);
      }
      else
      {
        v89(v109, (char *)v93, v3);
      }
      v45 = v118;
      v86 = *(void (**)(char *, uint64_t))(v118 + 8);
      v86(v84, v3);
      v80 = v117;
      v117(v96, 0, 1, v3);
      v86(v115, v3);
      v87 = v116;
      sub_23DC827C4(v116, (uint64_t (*)(_QWORD))sub_23DC81D20);
      sub_23DC8289C(v96, v87);
      v83 = v120;
      v82 += v119;
      --v81;
      v85 = v112;
      if (!v81)
        goto LABEL_34;
    }
  }
  else
  {
    v114 = v70;
    swift_bridgeObjectRetain();
    v85 = v112;
LABEL_34:
    v80((unint64_t)v85, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  sub_23DC8289C(v116, v103);
  sub_23DC827C4(v107, (uint64_t (*)(_QWORD))sub_23DC81D20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DC827C4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_23DC82800(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23DC82858(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23DC8289C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC81D20(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_23DC828E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23DC828F4()
{
  sub_23DCE22DC();
  sub_23DCE22E8();
  return sub_23DCE22F4();
}

uint64_t sub_23DC82938()
{
  return sub_23DCE22E8();
}

uint64_t sub_23DC82960()
{
  sub_23DCE22DC();
  sub_23DCE22E8();
  return sub_23DCE22F4();
}

uint64_t sub_23DC829D4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  char *v49;
  id v50;
  id v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  void *v54;
  int v55;
  void *v56;
  void *v57;
  void *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t result;
  _BYTE *v66;
  id v67;
  id v68;
  id v69;
  uint64_t v70;
  void *v71;
  char *v72;
  id v73;
  id v74;
  void *v75;
  char *v76;
  id v77;
  void *v78;
  void *v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  uint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  void *v88;
  id v89;
  void *v90;
  char *v91;
  void *v92;
  id v93;
  id v94;
  unsigned int v95;
  unsigned int v96;
  BOOL v97;
  uint64_t v98;
  _BOOL8 v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  void (*v120)(char *, char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  void *v131;
  void *v132;
  id v133;
  char v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  unint64_t v139;
  char v140;
  void *v141;
  void *v142;
  id v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  void (*v149)(char *, uint64_t);
  void (*v150)(char *, char *, uint64_t);
  id v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  id v158;
  void *v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  void *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  id v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  _BYTE v192[7];
  _BYTE v193[7];
  _BYTE v194[7];
  _BYTE v195[7];
  _BYTE v196[7];
  _BYTE v197[7];
  _BYTE __src[440];
  _BYTE v199[440];
  id v200[55];
  uint64_t v201[3];
  BOOL v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  char v206;
  id v207;
  id v208;
  BOOL v209;
  _BYTE v210[49];
  _BYTE v211[7];
  uint64_t v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  char v217;
  _BYTE v218[7];
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  char v224;
  _BYTE v225[7];
  uint64_t v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  char v231;
  _BYTE v232[7];
  uint64_t v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  char v238;
  _BYTE v239[7];
  uint64_t v240;
  __int128 v241;
  __int128 v242;
  char v243;
  _BYTE v244[7];
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;

  v247 = *MEMORY[0x24BDAC8D0];
  v2 = sub_23DCE1640();
  MEMORY[0x24BDAC7A8](v2);
  v174 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC87938();
  v178 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v170 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v165 = (char *)&v142 - v7;
  sub_23DC8799C();
  v166 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v167 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v168 = (uint64_t)&v142 - v11;
  v12 = sub_23DCE1400();
  v172 = *(_QWORD *)(v12 - 8);
  v173 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v169 = (char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v171 = (char *)&v142 - v15;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v16);
  v175 = (char *)&v142 - v17;
  v18 = sub_23DCE11E4();
  v19 = *(void (***)(char *, uint64_t))(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v184 = (char *)&v142 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23DCE1C64();
  v181 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v176 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v177 = (char *)&v142 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v179 = (char *)&v142 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v183 = (char *)&v142 - v28;
  v29 = sub_23DCE12E0();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v182 = (char *)&v142 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v142 - v33;
  v35 = objc_msgSend(a1, sel_healthDataSource);
  if (!v35)
  {
    v62 = sub_23DCE1340();
    sub_23DC80074((unint64_t *)&unk_256CF9458, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FB28], MEMORY[0x24BE3FB30]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v63, *MEMORY[0x24BE3FB20], v62);
    swift_willThrow();
    return (uint64_t)v19;
  }
  v186 = v35;
  v162 = v30;
  v163 = v34;
  v164 = v29;
  v36 = objc_msgSend(a1, sel_healthDataSource);
  if (!v36
    || (v37 = objc_msgSend(v36, sel_featureStatusProviderForIdentifier_, *MEMORY[0x24BDD2E88]),
        swift_unknownObjectRelease(),
        !v37))
  {
    sub_23DC85398();
    swift_allocError();
    *v61 = 4;
LABEL_13:
    swift_willThrow();
    swift_unknownObjectRelease();
    return (uint64_t)v19;
  }
  v160 = v21;
  v200[0] = 0;
  v38 = objc_msgSend(v37, sel_featureStatusWithError_, v200);
  swift_unknownObjectRelease();
  if (!v38)
  {
    v19 = (void (**)(char *, uint64_t))v200[0];
    sub_23DCE1154();

    goto LABEL_13;
  }
  v161 = v38;
  v39 = v200[0];
  v40 = objc_msgSend(a1, sel_healthDataSource);
  if (!v40
    || (v41 = objc_msgSend(v40, sel_featureStatusProviderForIdentifier_, *MEMORY[0x24BDD2E58]),
        swift_unknownObjectRelease(),
        !v41))
  {
    sub_23DC85398();
    swift_allocError();
    *v64 = 3;
LABEL_16:
    swift_willThrow();
    swift_unknownObjectRelease();

    return (uint64_t)v19;
  }
  v200[0] = 0;
  v42 = objc_msgSend(v41, sel_featureStatusWithError_, v200);
  swift_unknownObjectRelease();
  v43 = v200[0];
  if (!v42)
  {
    v19 = (void (**)(char *, uint64_t))v200[0];
    sub_23DCE1154();

    goto LABEL_16;
  }
  v44 = *(void **)(v185 + 24);
  if (!v44)
  {
    sub_23DC85398();
    swift_allocError();
    *v66 = 1;
    v67 = v43;
    swift_willThrow();
    swift_unknownObjectRelease();

    return (uint64_t)v19;
  }
  v159 = v42;
  v45 = v200[0];
  v158 = v44;
  v46 = objc_msgSend(a1, sel_environmentDataSource);
  v47 = objc_msgSend(v46, sel_calendarCache);

  v48 = objc_msgSend(v47, sel_currentCalendar);
  v49 = v163;
  sub_23DCE12BC();

  v50 = objc_msgSend(a1, sel_environmentDataSource);
  v51 = objc_msgSend(v50, sel_currentDate);

  sub_23DCE11C0();
  v52 = *(void (**)(char *, char *, uint64_t))(v162 + 16);
  v52(v182, v49, v164);
  v53 = v183;
  sub_23DCE1C1C();
  v54 = v180;
  v55 = sub_23DC83B94();
  if (v54)
  {
    swift_unknownObjectRelease();

    v59 = *(void (**)(char *, uint64_t))(v181 + 8);
    v60 = v53;
LABEL_11:
    v59(v60, v160);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v164);
    return (uint64_t)v19;
  }
  v150 = v52;
  v148 = v55;
  v155 = v56;
  v156 = v58;
  v180 = v57;
  v68 = objc_msgSend(a1, sel_environmentDataSource);
  v69 = objc_msgSend(v68, sel_activePairedDeviceProductType);

  if (v69)
  {
    v152 = sub_23DCE1D30();
    v157 = v70;

  }
  else
  {
    v152 = 0;
    v157 = 0;
  }
  v71 = v159;
  v72 = v184;
  v73 = objc_msgSend(a1, sel_environmentDataSource);
  v74 = objc_msgSend(v73, sel_currentDate);

  sub_23DCE11C0();
  v75 = (void *)sub_23DCE116C();
  v149 = v19[1];
  v149(v72, v18);
  v200[0] = 0;
  v76 = (char *)objc_msgSend(v186, sel_ageWithCurrentDate_error_, v75, v200);

  v77 = v200[0];
  v153 = v76;
  if (v76)
  {
    v151 = objc_msgSend(v76, sel_integerValue);

  }
  else
  {
    v78 = v77;
    v79 = (void *)sub_23DCE1154();

    swift_willThrow();
    v151 = 0;
  }
  v200[0] = 0;
  v80 = objc_msgSend(v186, sel_biologicalSexWithError_, v200);
  if (!v80)
  {
    v86 = v200[0];
    swift_bridgeObjectRelease();
    sub_23DCE1154();

    swift_willThrow();
    swift_unknownObjectRelease();

    v59 = *(void (**)(char *, uint64_t))(v181 + 8);
    v60 = v183;
    goto LABEL_11;
  }
  v81 = v80;
  v82 = v200[0];
  v83 = (id)HKAnalyticsPropertyValueForBiologicalSex();

  v147 = sub_23DCE1D30();
  v154 = v84;

  v85 = objc_msgSend(a1, sel_environmentDataSource);
  LODWORD(v146) = objc_msgSend(v85, sel_isImproveHealthAndActivityEnabled);

  if (v180)
    LODWORD(v145) = objc_msgSend(v180, sel_sleepTracking);
  else
    LODWORD(v145) = 2;
  v87 = v185;
  v88 = *(void **)(v185 + 16);
  v143 = sub_23DC83CC8((uint64_t)v88);
  v144 = v88;
  v89 = objc_msgSend(a1, sel_environmentDataSource);
  v90 = *(void **)(v87 + 48);
  v91 = v175;
  sub_23DCE1A18();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v19[6])(v91, 1, v18) == 1)
  {
    v92 = 0;
  }
  else
  {
    v92 = (void *)sub_23DCE116C();
    v149(v91, v18);
  }
  v93 = objc_msgSend(v89, sel_bucketedNumberOfWeeksSinceDate_, v92);

  v142 = v90;
  if (v93)
  {
    v94 = objc_msgSend(v93, sel_integerValue, v142);

  }
  else
  {
    v94 = 0;
  }
  v95 = v146;
  v96 = v145;
  v97 = v93 == 0;
  v201[0] = v152;
  v98 = v157;
  v201[1] = v157;
  v99 = v153 == 0;
  v100 = v151;
  v201[2] = (uint64_t)v151;
  v202 = v153 == 0;
  v101 = v147;
  v203 = v147;
  v102 = v154;
  v204 = v154;
  v205 = v146;
  v206 = v145;
  v103 = v143;
  v207 = v143;
  v208 = v94;
  v209 = v93 == 0;
  v104 = *(_QWORD *)(v87 + 72);
  v175 = *(char **)(v87 + 64);
  v106 = *(_QWORD *)(v87 + 80);
  v105 = *(_QWORD *)(v87 + 88);
  v153 = *(char **)(v87 + 96);
  v149 = *(void (**)(char *, uint64_t))(v87 + 104);
  v146 = *(_QWORD *)(v87 + 112);
  v145 = *(_QWORD *)(v87 + 120);
  *(_QWORD *)(v87 + 64) = v152;
  *(_QWORD *)(v87 + 72) = v98;
  *(_QWORD *)(v87 + 80) = v100;
  *(_QWORD *)(v87 + 88) = v99;
  *(_QWORD *)(v87 + 96) = v101;
  *(_QWORD *)(v87 + 104) = v102;
  *(_QWORD *)(v87 + 112) = v95 | ((unint64_t)v96 << 8);
  *(_QWORD *)(v87 + 120) = v103;
  *(_QWORD *)(v87 + 128) = v94;
  *(_BYTE *)(v87 + 136) = v97;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23DC85430((uint64_t)v175, v104, v106, v105, (uint64_t)v153, (uint64_t)v149);
  v175 = (char *)v144;
  v107 = v177;
  sub_23DCE1BC8();
  sub_23DCE1BF8();
  v108 = *(void (**)(char *, uint64_t))(v181 + 8);
  v109 = v160;
  v108(v107, v160);
  v110 = v176;
  sub_23DCE1BC8();
  sub_23DCE1BF8();
  v176 = (char *)v108;
  v108(v110, v109);
  sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  result = sub_23DCE1CD0();
  if ((result & 1) != 0)
  {
    v111 = v178;
    v112 = v165;
    v153 = &v165[*(int *)(v178 + 48)];
    v113 = (uint64_t)v153;
    v114 = v181;
    v115 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
    v116 = v160;
    v115(v165, v179, v160);
    v115((char *)v113, v107, v116);
    v117 = *(int *)(v111 + 48);
    v118 = v170;
    v119 = &v170[v117];
    v120 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
    v120(v170, v112, v116);
    v121 = (uint64_t)v153;
    v120(v119, v153, v116);
    v122 = (uint64_t)v167;
    v115(v167, v118, v116);
    ((void (*)(char *, uint64_t))v176)(v119, v116);
    v123 = &v118[*(int *)(v178 + 48)];
    v115(v118, v112, v116);
    v115(v123, (char *)v121, v116);
    v115((char *)(v122 + *(int *)(v166 + 36)), v123, v116);
    ((void (*)(char *, uint64_t))v176)(v118, v116);
    sub_23DC87A14(v122, v168, (uint64_t (*)(_QWORD))sub_23DC8799C);
    v150(v182, v163, v164);
    v124 = v171;
    sub_23DCE13C4();
    v126 = v172;
    v125 = v173;
    (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v169, v124, v173);
    sub_23DCE1610();
    v127 = (uint64_t)v174;
    sub_23DCE15E0();
    v128 = (uint64_t)v184;
    sub_23DCE11CC();
    v129 = sub_23DCB54F0(v175, v127, v128);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v124, v125);
    v191 = 1;
    v190 = 1;
    v189 = 1;
    v188 = 1;
    v187 = 1;
    memset(v210, 0, 48);
    v210[48] = 1;
    *(_DWORD *)v211 = *(_DWORD *)v197;
    *(_DWORD *)&v211[3] = *(_DWORD *)&v197[3];
    v212 = 2;
    v213 = 0u;
    v214 = 0u;
    v215 = 0u;
    v216 = 0u;
    v217 = 1;
    *(_DWORD *)v218 = *(_DWORD *)v196;
    *(_DWORD *)&v218[3] = *(_DWORD *)&v196[3];
    v219 = 2;
    v220 = 0u;
    v221 = 0u;
    v222 = 0u;
    v223 = 0u;
    v224 = 1;
    *(_DWORD *)v225 = *(_DWORD *)v195;
    *(_DWORD *)&v225[3] = *(_DWORD *)&v195[3];
    v226 = 2;
    v229 = 0u;
    v230 = 0u;
    v227 = 0u;
    v228 = 0u;
    v231 = 1;
    *(_DWORD *)v232 = *(_DWORD *)v194;
    *(_DWORD *)&v232[3] = *(_DWORD *)&v194[3];
    v233 = 2;
    v236 = 0u;
    v237 = 0u;
    v234 = 0u;
    v235 = 0u;
    v238 = 1;
    *(_DWORD *)v239 = *(_DWORD *)v193;
    *(_DWORD *)&v239[3] = *(_DWORD *)&v193[3];
    v240 = 2;
    v243 = 0;
    v241 = 0u;
    v242 = 0u;
    *(_DWORD *)v244 = *(_DWORD *)v192;
    *(_DWORD *)&v244[3] = *(_DWORD *)&v192[3];
    v246 = 0;
    v245 = 0;
    v130 = v185;
    swift_retain();
    v184 = v129;
    sub_23DC83F6C(v210, (uint64_t)v129, v130, v200);
    memcpy(__src, v200, sizeof(__src));
    memcpy(v199, v200, sizeof(v199));
    nullsub_1(v199);
    sub_23DC87674((uint64_t)v199, v130 + 144, (uint64_t)&qword_254324C80, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
    v131 = *(void **)(v130 + 40);
    LODWORD(v126) = HKIsFitnessTrackingEnabled();
    LOBYTE(v128) = objc_msgSend((id)objc_opt_self(), sel_isWristDetectEnabled);
    v132 = *(void **)(v130 + 32);
    v133 = v158;
    v134 = objc_msgSend(v158, sel_areHealthNotificationsAuthorized);
    v141 = v132;
    v135 = v161;
    v136 = v159;
    v140 = v128;
    v137 = v155;
    v138 = v180;
    v139 = sub_23DC859F4(v201, v142, v131, v148 & 1, v155, v180, v156, v126, v140, v159, v161, v141, v134, __src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = (void (**)(char *, uint64_t))sub_23DCBC16C(v139);
    swift_unknownObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();

    ((void (*)(char *, uint64_t))v176)(v183, v160);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v164);
    return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC83B94()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  v1 = objc_msgSend(v0, sel_sleepScheduleModelWithError_, v5);
  if (v1)
  {
    v2 = v1;
    v3 = v5[0];
    LOBYTE(v0) = objc_msgSend(v0, sel_hasSleepFocusMode);
    objc_msgSend(v2, sel_sleepEventRecord);
    objc_msgSend(v2, sel_sleepSettings);
    objc_msgSend(v2, sel_sleepSchedule);

  }
  else
  {
    v0 = v5[0];
    sub_23DCE1154();

    swift_willThrow();
  }
  return v0 & 1;
}

id sub_23DC83CC8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD v25[3];
  uint64_t v26;
  id v27;
  uint64_t v28;

  v25[2] = a1;
  v28 = *MEMORY[0x24BDAC8D0];
  v26 = sub_23DCE12E0();
  v2 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE11E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v1, sel_environmentDataSource);
  v10 = objc_msgSend(v9, sel_currentDate);

  sub_23DCE11C0();
  v11 = objc_msgSend(v1, sel_environmentDataSource);
  v12 = objc_msgSend(v11, sel_calendarCache);

  v13 = objc_msgSend(v12, sel_currentCalendar);
  sub_23DCE12BC();

  v14 = (void *)sub_23DCE116C();
  v15 = (void *)sub_23DCE12A4();
  v27 = 0;
  v16 = (id)HDAnalyticsCountOfSleepDaysWithStandHoursPriorToDate();

  v17 = v27;
  if (v16)
  {
    v18 = v27;
    v19 = objc_msgSend(v16, sel_integerValue);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  }
  else
  {
    v20 = v6;
    v21 = v26;
    if (v27)
      v22 = v27;
    else
      v23 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    v19 = v17;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);

  }
  return v19;
}

void *sub_23DC83F6C@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unint64_t *v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _BOOL4 v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int64_t v82;
  unint64_t v83;
  uint64_t v84;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  void (*v98)(unint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(void);
  void (*v105)(uint64_t);
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *result;
  uint64_t v114;
  char v115;
  uint64_t v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  void (*v153)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  unsigned int (*v155)(char *, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  char v158;
  _BYTE v159[440];
  int v160;

  v117 = a4;
  v125 = a3;
  v6 = (void (*)(uint64_t))MEMORY[0x24BE3FFB0];
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v151 = v7;
  v126 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v122 = (uint64_t)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v128 = (uint64_t)&v117 - v10;
  sub_23DC8799C();
  v144 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v143 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE1400();
  v141 = *(_QWORD *)(v13 - 8);
  v142 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v140 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23DCE1C64();
  v16 = (void (*)(uint64_t))MEMORY[0x24BDD2488];
  v147 = *(_QWORD *)(v15 - 8);
  v148 = v15;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v139 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v138 = (char *)&v117 - v19;
  v20 = sub_23DCE18A4();
  v21 = (void (*)(uint64_t))MEMORY[0x24BE40328];
  v119 = *(_QWORD *)(v20 - 8);
  v120 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v118 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&qword_2543255F0, v16);
  MEMORY[0x24BDAC7A8](v23);
  v127 = (char *)&v117 - v24;
  sub_23DC87AE0(0, (unint64_t *)&qword_254325890, (unint64_t *)&unk_254325880, v21);
  MEMORY[0x24BDAC7A8](v25);
  v134 = (char *)&v117 - v26;
  sub_23DC87B34(0, (unint64_t *)&unk_254325880, v21);
  v132 = *(_QWORD *)(v27 - 8);
  v133 = v27;
  v28 = MEMORY[0x24BDAC7A8](v27);
  v131 = (uint64_t)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v129 = (uint64_t)&v117 - v30;
  sub_23DC7F518(0, &qword_254325320, v6);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v117 - v32;
  v156 = sub_23DCE15C8();
  v145 = *(_QWORD *)(v156 - 8);
  v34 = MEMORY[0x24BDAC7A8](v156);
  v121 = (char *)&v117 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v137 = (char *)&v117 - v36;
  sub_23DC87B9C(0);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v124 = (uint64_t)&v117 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v117 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v117 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v154 = (uint64_t)&v117 - v46;
  sub_23DC87AE0(0, (unint64_t *)&qword_254325870, (unint64_t *)&qword_254325860, v6);
  MEMORY[0x24BDAC7A8](v47);
  v123 = (uint64_t)&v117 - v48;
  v49 = sub_23DCE1640();
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v117 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v159, a1, sizeof(v159));
  swift_retain();
  swift_retain();
  v155 = (unsigned int (*)(char *, uint64_t, uint64_t))sub_23DCA0B58();
  swift_release();
  v53 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, v53, v49);
  v54 = (uint64_t *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 112));
  v56 = *v54;
  v55 = v54[1];
  v57 = *(_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 120));
  swift_retain();
  swift_unknownObjectRetain();
  v58 = sub_23DC8FBE0((uint64_t)v155, (uint64_t)v52, v56, v55, v57);
  v135 = v59;
  v160 = v60;
  swift_release();
  swift_release();
  v61 = (unint64_t *)(v58
                           + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
  v130 = v58;
  v136 = v58
       + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56);
  v152 = v33;
  v153 = v62;
  v149 = v45;
  v150 = v42;
  v146 = v58
       + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries;
  while (1)
  {
    v63 = v154;
    v64 = v151;
    v153(v154, 2, 2, v151);
    swift_beginAccess();
    sub_23DC87C14(v63, (uint64_t)v45);
    v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48);
    if (v155(v45, 2, v64) == 2)
      break;
    v65 = v145;
LABEL_26:
    sub_23DC827C4((uint64_t)v45, (uint64_t (*)(_QWORD))sub_23DC87B9C);
    v99 = v124;
    sub_23DC87A14(v154, v124, (uint64_t (*)(_QWORD))sub_23DC87B9C);
    if (v155((char *)v99, 2, v64))
    {
      v100 = 1;
      v101 = v128;
      v102 = v123;
    }
    else
    {
      v102 = v123;
      sub_23DC87674(v99, v123, (uint64_t)&qword_254325860, (uint64_t)MEMORY[0x24BE3FFB0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87B34);
      v100 = 0;
      v101 = v128;
    }
    v103 = v151;
    v153(v102, v100, 1, v151);
    if (v155((char *)v102, 1, v103) == 1)
    {
      swift_release();
      swift_release();
      swift_release();
      return memcpy(v117, v159, 0x1B8uLL);
    }
    v104 = MEMORY[0x24BE3FFB0];
    sub_23DC87674(v102, v101, (uint64_t)&qword_254325860, (uint64_t)MEMORY[0x24BE3FFB0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87B34);
    v105 = (void (*)(uint64_t))v104;
    v106 = v122;
    sub_23DC87C58(v101, v122, (unint64_t *)&qword_254325860, v105);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v115 = *(_BYTE *)(v106 + 8);
      v157 = *(_QWORD *)v106;
      v114 = v157;
      v158 = v115;
      sub_23DC87A9C();
      swift_willThrowTypedImpl();
      swift_allocError();
      *(_QWORD *)v116 = v114;
      *(_BYTE *)(v116 + 8) = v115;
      sub_23DC87CA4(v101, (uint64_t)&qword_254325860, (uint64_t)MEMORY[0x24BE3FFB0], (uint64_t (*)(_QWORD))sub_23DC87B34);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    v107 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
    v108 = (uint64_t)v121;
    v109 = v106;
    v110 = v65;
    v111 = v156;
    v107(v121, v109, v156);
    sub_23DCC10D8(v108);
    v112 = v108;
    v45 = v149;
    v42 = v150;
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v112, v111);
    sub_23DC87CA4(v128, (uint64_t)&qword_254325860, (uint64_t)MEMORY[0x24BE3FFB0], (uint64_t (*)(_QWORD))sub_23DC87B34);
  }
  v65 = v145;
  while (1)
  {
    sub_23DC827C4((uint64_t)v45, (uint64_t (*)(_QWORD))sub_23DC87B9C);
    if (!*(_QWORD *)(*v61 + 16))
    {
      v79 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v33, 1, 1, v156);
      sub_23DC87CE0((uint64_t)v33, &qword_254325320, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      if ((v160 & 1) != 0)
      {
        v160 = 1;
      }
      else
      {
        v89 = (uint64_t)v134;
        sub_23DCE221C();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v89, 1, v133) == 1)
        {
          sub_23DC87D1C(v89);
          v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v147 + 56);
          v160 = 1;
          v91 = (uint64_t)v127;
          v90(v127, 1, 1, v148);
          sub_23DCB15D8(v91);
          sub_23DC87CE0(v91, (unint64_t *)&qword_2543255F0, (void (*)(uint64_t))MEMORY[0x24BDD2488]);
          v79 = 2;
          v33 = v152;
        }
        else
        {
          v92 = v89;
          v93 = v129;
          sub_23DC87674(v92, v129, (uint64_t)&unk_254325880, (uint64_t)MEMORY[0x24BE40328], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87B34);
          sub_23DC87C58(v93, v131, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_23DC87CA4(v93, (uint64_t)&unk_254325880, (uint64_t)MEMORY[0x24BE40328], (uint64_t (*)(_QWORD))sub_23DC87B34);
            v94 = *(_BYTE *)(v131 + 8);
            *(_QWORD *)v42 = *(_QWORD *)v131;
            v42[8] = v94;
            v160 = 1;
            swift_storeEnumTagMultiPayload();
            v79 = 0;
          }
          else
          {
            v96 = (unint64_t)v118;
            v95 = v119;
            v97 = v120;
            (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v118, v131, v120);
            sub_23DCB0D90(v96);
            v98 = *(void (**)(unint64_t, uint64_t))(v95 + 8);
            v45 = v149;
            v98(v96, v97);
            v42 = v150;
            sub_23DC87CA4(v129, (uint64_t)&unk_254325880, (uint64_t)MEMORY[0x24BE40328], (uint64_t (*)(_QWORD))sub_23DC87B34);
            v160 = 0;
            v79 = 2;
          }
          v33 = v152;
          v61 = (unint64_t *)v146;
        }
      }
      goto LABEL_6;
    }
    swift_beginAccess();
    v81 = *v61;
    v82 = *(_QWORD *)(*v61 + 16);
    if (!v82)
      break;
    v83 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    v84 = v156;
    (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v33, v81 + v83, v156);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v61 = v81;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || (unint64_t)(v82 - 1) > *(_QWORD *)(v81 + 24) >> 1)
    {
      v81 = sub_23DC8EA84(isUniquelyReferenced_nonNull_native, v82, 1, v81);
      *v61 = v81;
    }
    swift_arrayDestroy();
    v86 = *(_QWORD *)(v81 + 16);
    if (!v86)
      goto LABEL_35;
    v87 = v86 - 1;
    v88 = *(_QWORD *)(v65 + 72);
    if (v88 > 0 || v81 + v83 >= v81 + v83 + v88 + v88 * v87)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v88)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    --*(_QWORD *)(v81 + 16);
    *v61 = v81;
    swift_endAccess();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v33, 0, 1, v84);
    v66 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v67 = v137;
    v66(v137, v33, v84);
    v68 = v138;
    sub_23DCE1514();
    v69 = v140;
    sub_23DCE15EC();
    v70 = (uint64_t)v143;
    sub_23DCE13D0();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v69, v142);
    v72 = v147;
    v71 = v148;
    v73 = v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v147 + 16))(v139, v70 + *(int *)(v144 + 36), v148);
    sub_23DC827C4(v70, (uint64_t (*)(_QWORD))sub_23DC8799C);
    sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_23DCE1FF4();
    v74 = v157 == 0;
    v75 = *(void (**)(char *, uint64_t))(v72 + 8);
    v76 = v73;
    v61 = (unint64_t *)v146;
    v75(v76, v71);
    v77 = v68;
    v33 = v152;
    v75(v77, v71);
    v160 |= v74;
    v42 = v150;
    v78 = v67;
    v65 = v145;
    v66(v150, v78, v156);
    v64 = v151;
    swift_storeEnumTagMultiPayload();
    v79 = 0;
    v45 = v149;
LABEL_6:
    v153((uint64_t)v42, v79, 2, v64);
    v80 = v154;
    sub_23DC827C4(v154, (uint64_t (*)(_QWORD))sub_23DC87B9C);
    sub_23DC87A14((uint64_t)v42, v80, (uint64_t (*)(_QWORD))sub_23DC87B9C);
    sub_23DC87C14(v80, (uint64_t)v45);
    if (v155(v45, 2, v64) != 2)
      goto LABEL_26;
  }
  __break(1u);
LABEL_35:
  swift_release();
  result = (void *)sub_23DCE2210();
  __break(1u);
  return result;
}

unint64_t sub_23DC84CBC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v29;
  id v30;
  void *v31;
  uint64_t v32;
  _DWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  _QWORD v46[55];
  __int128 v47;
  __int128 v48;
  _QWORD v49[3];
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;

  v44 = a1;
  v2 = v1;
  v3 = sub_23DCE1F34();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v7);
  v57 = (char *)v33 - v8;
  v9 = *(void **)(v1 + 16);
  v10 = objc_msgSend(v9, sel_profileExtensionsConformingToProtocol_, &unk_256D02A70);
  v11 = MEMORY[0x24BEE4AD8];
  v12 = sub_23DCE1DC0();

  if (!*(_QWORD *)(v12 + 16))
  {
    v47 = 0u;
    v48 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_23DC8535C(v12 + 32, (uint64_t)&v47);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v48 + 1))
  {
LABEL_8:
    sub_23DC87CA4((uint64_t)&v47, (uint64_t)&qword_2543258A0, v11 + 8, (uint64_t (*)(_QWORD))sub_23DC87A58);
    goto LABEL_9;
  }
  sub_23DC853DC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_23DC85398();
    swift_allocError();
    *v27 = 2;
    swift_willThrow();
    return v4;
  }
  v13 = *(_QWORD *)(v2 + 104);
  if (v13)
  {
    v43 = (id)v46[0];
    v15 = *(_QWORD *)(v2 + 64);
    v14 = *(_QWORD *)(v2 + 72);
    v17 = *(_QWORD *)(v2 + 80);
    v16 = *(_QWORD *)(v2 + 88);
    v18 = *(_QWORD *)(v2 + 96);
    v19 = *(_QWORD *)(v2 + 112);
    v20 = *(_QWORD *)(v2 + 120);
    v21 = *(unsigned __int8 *)(v2 + 136);
    v34 = *(_QWORD *)(v2 + 128);
    v35 = v15;
    v49[0] = v15;
    v49[1] = v14;
    v37 = v17;
    v38 = v18;
    v49[2] = v17;
    v39 = v16;
    v40 = v20;
    v50 = v16 & 1;
    v51 = v18;
    v52 = v13;
    v41 = v19;
    v53 = v19 & 0xFF01;
    v54 = v20;
    v55 = v34;
    v33[1] = v21;
    v56 = v21 & 1;
    v36 = v14;
    swift_bridgeObjectRetain();
    v42 = v13;
    swift_bridgeObjectRetain();
    v44 = objc_msgSend(v44, sel_environmentDataSource);
    sub_23DC802D0(0, &qword_254324C90);
    sub_23DCE1F1C();
    v22 = objc_allocWithZone(MEMORY[0x24BE40AD0]);
    v23 = v9;
    v24 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend(v22, sel_initWithCategory_domainName_profile_, 105, v24, v23);

    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE406D0], v3);
    sub_23DCE1F28();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v4 = (unint64_t)v57;
    v26 = v45;
    sub_23DCE1F04();
    if (!v26)
    {

      swift_bridgeObjectRelease();
      v30 = objc_msgSend(objc_msgSend(v43, sel_getPregnancyModelProvider), sel_getCurrentPregnancyModel);
      swift_unknownObjectRelease();
      sub_23DC87674(v2 + 144, (uint64_t)&v47, (uint64_t)&qword_254324C80, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
      sub_23DC87674((uint64_t)&v47, (uint64_t)v46, (uint64_t)&qword_254324C80, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
      v31 = v44;
      v32 = sub_23DC86FC8((uint64_t)v49, v44, v4, v30, (uint64_t)v46);

      sub_23DC85430(v35, v36, v37, v39, v38, v42);
      sub_23DC87CE0(v4, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      v4 = sub_23DCBC16C(v32);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }

    swift_bridgeObjectRelease();
    sub_23DC85430(v35, v36, v37, v39, v38, v42);
  }
  else
  {
    sub_23DC85398();
    swift_allocError();
    *v29 = 0;
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return v4;
}

id sub_23DC851CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v6;
  void *v7;

  v6 = a3;
  swift_retain();
  a5(v6);
  swift_release();

  v7 = (void *)sub_23DCE1C70();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23DC852AC()
{
  uint64_t v0;

  swift_release();
  sub_23DC85430(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  return v0;
}

uint64_t sub_23DC8531C()
{
  sub_23DC852AC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthBalanceDailyAnalyticsEvent()
{
  return objc_opt_self();
}

uint64_t sub_23DC8535C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_23DC85398()
{
  unint64_t result;

  result = qword_256CF9438;
  if (!qword_256CF9438)
  {
    result = MEMORY[0x2426416D0](&unk_23DCE3720, &type metadata for HealthBalanceDailyAnalyticsEvent.Error);
    atomic_store(result, (unint64_t *)&qword_256CF9438);
  }
  return result;
}

unint64_t sub_23DC853DC()
{
  unint64_t result;

  result = qword_256CF9440;
  if (!qword_256CF9440)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_256CF9440);
  }
  return result;
}

uint64_t sub_23DC85430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23DC85460@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_23DC87830((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DC854A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  __int128 v46[2];
  __int128 v47[2];
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v51 = a1;
  v52 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v53 = v8;
  v54 = 0;
  v55 = v11 & v9;
  v56 = a2;
  v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DC85800((uint64_t)&v48);
  v12 = v49;
  if (!v49)
    goto LABEL_27;
  v13 = v48;
  sub_23DC87714(v50, (uint64_t)v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_23DCD8A28(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_23DCBCF18();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_23DC87714(v47, v24[7] + 40 * v16);
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_23DC85800((uint64_t)&v48);
    for (i = v49; v49; i = v49)
    {
      v31 = v48;
      sub_23DC87714(v50, (uint64_t)v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_23DCD8A28(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_23DCBC8A8(v37, 1);
        v39 = sub_23DCD8A28(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_23DC87830((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v34;
        __swift_destroy_boxed_opaque_existential_1(v30);
        sub_23DC87714(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_23DC87714(v47, v41[7] + 40 * v34);
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_23DC85800((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DC87874();
    return swift_release();
  }
  sub_23DCBC8A8(v19, a4 & 1);
  v21 = sub_23DCD8A28(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_23DC87830((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(*(_QWORD *)a5 + 56) + 40 * v16;
    __swift_destroy_boxed_opaque_existential_1(v23);
    sub_23DC87714(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_23DCE22A0();
  __break(1u);
  return result;
}

uint64_t sub_23DC85800@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  uint64_t v22;
  _OWORD v23[3];
  uint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_23DC87830(*(_QWORD *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(_QWORD *)&v25 = v13;
    *((_QWORD *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  v25 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_23DC8787C((uint64_t)&v25, (uint64_t)v23);
  if (*((_QWORD *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    v22 = v24;
    v19(v21);
    return sub_23DC827C4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_23DC878D0);
  }
  else
  {
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

unint64_t sub_23DC859F4(uint64_t *a1, void *a2, void *a3, int a4, void *a5, void *a6, void *a7, int a8, unsigned __int8 a9, void *a10, void *a11, void *a12, char a13, void *__src)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  id v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unsigned __int8 v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unsigned __int16 v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unsigned __int8 v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unsigned __int8 v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  uint64_t v148;
  unint64_t result;
  uint64_t v150;
  id v151;
  id v152;
  id v153;
  id v154;
  int v155;
  id v156;
  void *v157;
  id v158;
  int v159;
  uint64_t v160;
  uint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  _BYTE v166[440];
  _BYTE v167[24];
  uint64_t v168;
  _BYTE v169[16];
  unint64_t v170;
  char v171;
  _BYTE v172[440];
  uint64_t v173;

  v155 = a8;
  v156 = a7;
  v157 = a6;
  v158 = a5;
  v159 = a4;
  v154 = a3;
  v152 = a2;
  v173 = *MEMORY[0x24BDAC8D0];
  memcpy(v172, __src, sizeof(v172));
  v163 = MEMORY[0x24BEE4B00];
  v15 = a1[1];
  if (v15)
  {
    v16 = *a1;
    v17 = MEMORY[0x24BEE0D28];
    *(_QWORD *)&v166[24] = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v166[32] = MEMORY[0x24BEE0D28];
    *(_QWORD *)v166 = v16;
    *(_QWORD *)&v166[8] = v15;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v170 = v163;
    v163 = 0x8000000000000000;
    v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v19);
    v21 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v21);
    sub_23DCBDBCC((uint64_t)v21, 0xD000000000000016, 0x800000023DCE5260, isUniquelyReferenced_nonNull_native, &v170, MEMORY[0x24BEE0D00], v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v170;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23DCBC7B0(0xD000000000000016, 0x800000023DCE5260, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
  }
  v153 = a12;
  v23 = MEMORY[0x24BEE1328];
  v24 = MEMORY[0x24BEE1340];
  *(_QWORD *)&v166[24] = MEMORY[0x24BEE1328];
  *(_QWORD *)&v166[32] = MEMORY[0x24BEE1340];
  v166[0] = a13 & 1;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  v170 = v163;
  v163 = 0x8000000000000000;
  v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v28);
  sub_23DCBD6DC(*v28, 0xD000000000000020, 0x800000023DCE5280, v25, &v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v170;
  swift_bridgeObjectRelease();
  v161 = a1;
  v30 = *((_BYTE *)a1 + 48);
  *(_QWORD *)&v166[24] = v23;
  *(_QWORD *)&v166[32] = v24;
  v166[0] = v30;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v31 = swift_isUniquelyReferenced_nonNull_native();
  v170 = v163;
  v163 = 0x8000000000000000;
  v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v35 + 16))(v34);
  sub_23DCBD6DC(*v34, 0xD000000000000021, 0x800000023DCE52B0, v31, &v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v170;
  swift_bridgeObjectRelease();
  v36 = sub_23DCE1A0C();
  v37 = v36;
  if (v36 == 2)
  {
    sub_23DCBC7B0(0xD000000000000014, 0x800000023DCE52E0, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
    v38 = MEMORY[0x24BEE1340];
  }
  else
  {
    *(_QWORD *)&v166[24] = v23;
    v38 = MEMORY[0x24BEE1340];
    *(_QWORD *)&v166[32] = MEMORY[0x24BEE1340];
    v166[0] = v36 & 1;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    v39 = swift_isUniquelyReferenced_nonNull_native();
    v170 = v163;
    v163 = 0x8000000000000000;
    v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v40);
    v42 = (char *)&v150 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    sub_23DCBDBCC((uint64_t)v42, 0xD000000000000014, 0x800000023DCE52E0, v39, &v170, v23, v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v170;
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v166[24] = v23;
  *(_QWORD *)&v166[32] = v38;
  v166[0] = v37 != 2;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v44 = swift_isUniquelyReferenced_nonNull_native();
  v170 = v163;
  v163 = 0x8000000000000000;
  v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&v150 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v48 + 16))(v47);
  sub_23DCBD6DC(*v47, 0x72616F626E4F7369, 0xEB00000000646564, v44, &v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v170;
  swift_bridgeObjectRelease();
  v49 = MEMORY[0x24BEE1768];
  sub_23DC87674((uint64_t)(v161 + 8), (uint64_t)v169, (uint64_t)&unk_2543256B8, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  sub_23DC87674((uint64_t)v169, (uint64_t)&v170, (uint64_t)&unk_2543256B8, v49, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  v50 = MEMORY[0x24BEE1788];
  if ((v171 & 1) != 0)
  {
    sub_23DCBC7B0(0xD000000000000013, 0x800000023DCE5300, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
  }
  else
  {
    *(_QWORD *)&v166[24] = v49;
    *(_QWORD *)&v166[32] = MEMORY[0x24BEE1788];
    *(_QWORD *)v166 = v170;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    v51 = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v52 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v52);
    v54 = (char *)&v150 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v55 + 16))(v54);
    sub_23DCBDBCC((uint64_t)v54, 0xD000000000000013, 0x800000023DCE5300, v51, &v162, v49, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
  }
  v151 = a11;
  v152 = a10;
  v56 = *MEMORY[0x24BDD46D8];
  *(_QWORD *)v166 = 0;
  v57 = objc_msgSend(v153, sel_hk_safeNumberIfExistsForKeyPath_error_, v56, v166);
  if (v57)
  {
    v58 = v57;
    v59 = *(id *)v166;
    v60 = objc_msgSend(v58, sel_BOOLValue);

    v61 = MEMORY[0x24BEE1328];
    *(_QWORD *)&v166[24] = MEMORY[0x24BEE1328];
    v62 = MEMORY[0x24BEE1340];
    *(_QWORD *)&v166[32] = MEMORY[0x24BEE1340];
    v166[0] = v60;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    LOBYTE(v58) = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v63);
    v65 = (char *)&v150 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v66 + 16))(v65);
    sub_23DCBDBCC((uint64_t)v65, 0xD000000000000012, 0x800000023DCE5320, (char)v58, &v162, v61, v62);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    v67 = *(id *)v166;
    v68 = (void *)sub_23DCE1154();

    swift_willThrow();
    sub_23DCBC7B0(0xD000000000000012, 0x800000023DCE5320, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
    v160 = 0;
    v61 = MEMORY[0x24BEE1328];
  }
  v69 = *MEMORY[0x24BDD36F8];
  *(_QWORD *)v166 = 0;
  v70 = objc_msgSend(v154, sel_hk_safeNumberIfExistsForKeyPath_error_, v69, v166);
  if (v70)
  {
    v71 = v70;
    v72 = *(id *)v166;
    v73 = objc_msgSend(v71, sel_BOOLValue);

    *(_QWORD *)&v166[24] = v61;
    v74 = MEMORY[0x24BEE1340];
    *(_QWORD *)&v166[32] = MEMORY[0x24BEE1340];
    v166[0] = v73;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    LOBYTE(v71) = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v75);
    v77 = (char *)&v150 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v78 + 16))(v77);
    sub_23DCBDBCC((uint64_t)v77, 0xD000000000000014, 0x800000023DCE5340, (char)v71, &v162, v61, v74);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    v79 = *(id *)v166;
    v80 = (void *)sub_23DCE1154();

    swift_willThrow();
    sub_23DCBC7B0(0xD000000000000014, 0x800000023DCE5340, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
    v160 = 0;
    v74 = MEMORY[0x24BEE1340];
  }
  v81 = *MEMORY[0x24BDD2CA8];
  v82 = objc_msgSend(v151, sel_objectForKeyedSubscript_, *MEMORY[0x24BDD2CA8]);
  v83 = *MEMORY[0x24BDD2D10];
  v84 = objc_msgSend(v82, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x24BDD2D10]);

  *(_QWORD *)&v166[24] = v61;
  *(_QWORD *)&v166[32] = v74;
  v166[0] = v84;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  LOBYTE(v82) = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v85 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v85);
  v87 = (char *)&v150 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v88 + 16))(v87);
  sub_23DCBD6DC(*v87, 0xD000000000000012, 0x800000023DCE5360, (char)v82, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v89 = MEMORY[0x24BEE1340];
  v163 = v162;
  swift_bridgeObjectRelease();
  v90 = objc_msgSend(v152, sel_objectForKeyedSubscript_, v81);
  LOBYTE(v83) = objc_msgSend(v90, sel_isRequirementSatisfiedWithIdentifier_, v83);

  *(_QWORD *)&v166[24] = v61;
  *(_QWORD *)&v166[32] = v89;
  v166[0] = v83;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  LOBYTE(v83) = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v91 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v91);
  v93 = (char *)&v150 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v94 + 16))(v93);
  sub_23DCBD6DC(*v93, 0xD000000000000018, 0x800000023DCE5380, v83, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v162;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v166[24] = v61;
  *(_QWORD *)&v166[32] = v89;
  v166[0] = v155 & 1;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  LOBYTE(v83) = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v95 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v95);
  v97 = (char *)&v150 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v98 + 16))(v97);
  sub_23DCBD6DC(*v97, 0xD000000000000018, 0x800000023DCE53A0, v83, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v162;
  swift_bridgeObjectRelease();
  if (v156)
  {
    v99 = objc_msgSend(v156, sel_isEnabled);
    *(_QWORD *)&v166[24] = v61;
    *(_QWORD *)&v166[32] = v89;
    v166[0] = v99;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    v100 = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v101 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v101);
    v103 = (char *)&v150 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v104 + 16))(v103);
    sub_23DCBDBCC((uint64_t)v103, 0xD000000000000016, 0x800000023DCE53C0, v100, &v162, v61, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23DCBC7B0(0xD000000000000016, 0x800000023DCE53C0, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
  }
  v105 = v157;
  v106 = MEMORY[0x24BEE1328];
  sub_23DC87674((uint64_t)v161 + 49, (uint64_t)&v164, (uint64_t)&unk_254325690, MEMORY[0x24BEE1328], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  sub_23DC87674((uint64_t)&v164, (uint64_t)&v165, (uint64_t)&unk_254325690, v106, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  if (v165 == 2)
  {
    sub_23DCBC7B0(0xD00000000000001BLL, 0x800000023DCE53E0, (uint64_t)v166);
    sub_23DC87CE0((uint64_t)v166, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
  }
  else
  {
    *(_QWORD *)&v166[24] = v106;
    *(_QWORD *)&v166[32] = v89;
    v166[0] = v165;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    v107 = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v108 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v108);
    v110 = (char *)&v150 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v111 + 16))(v110);
    sub_23DCBDBCC((uint64_t)v110, 0xD00000000000001BLL, 0x800000023DCE53E0, v107, &v162, v106, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
  }
  LODWORD(v157) = a9;
  if (v105)
  {
    v112 = (unsigned __int16)objc_msgSend(v105, sel_sleepModeOptions);
    *(_QWORD *)&v166[24] = v106;
    *(_QWORD *)&v166[32] = v89;
    v166[0] = (v112 & 0x4000) != 0;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    v113 = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v114 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v114);
    v116 = (char *)&v150 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v117 + 16))(v116);
    sub_23DCBDBCC((uint64_t)v116, 0xD000000000000014, 0x800000023DCE5400, v113, &v162, v106, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
    v118 = objc_msgSend(v105, sel_scheduledSleepMode);
    *(_QWORD *)&v166[24] = v106;
    *(_QWORD *)&v166[32] = v89;
    v166[0] = v118;
    sub_23DC87714((__int128 *)v166, (uint64_t)v167);
    v119 = swift_isUniquelyReferenced_nonNull_native();
    v162 = v163;
    v163 = 0x8000000000000000;
    v120 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x24BDAC7A8](v120);
    v122 = (char *)&v150 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v123 + 16))(v122);
    sub_23DCBDBCC((uint64_t)v122, 0xD00000000000001CLL, 0x800000023DCE5420, v119, &v162, v106, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23DCBC7B0(0xD000000000000014, 0x800000023DCE5400, (uint64_t)v167);
    sub_23DC87CE0((uint64_t)v167, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
    sub_23DCBC7B0(0xD00000000000001CLL, 0x800000023DCE5420, (uint64_t)v167);
    sub_23DC87CE0((uint64_t)v167, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
  }
  v124 = objc_msgSend(v158, sel_isAnySleepTrackingOnboardingCompleted);
  *(_QWORD *)&v166[24] = v106;
  *(_QWORD *)&v166[32] = v89;
  v166[0] = v124;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v125 = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v126 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v126);
  v128 = (char *)&v150 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v129 + 16))(v128);
  sub_23DCBD6DC(*v128, 0xD000000000000017, 0x800000023DCE5440, v125, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v162;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v166[24] = v106;
  *(_QWORD *)&v166[32] = v89;
  v166[0] = v159 & 1;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v130 = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v131 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v131);
  v133 = (char *)&v150 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v134 + 16))(v133);
  sub_23DCBD6DC(*v133, 0xD000000000000011, 0x800000023DCE5460, v130, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v162;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v166[24] = v106;
  *(_QWORD *)&v166[32] = v89;
  v166[0] = v157 & 1;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v135 = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v136 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v136);
  v138 = (char *)&v150 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v139 + 16))(v138);
  sub_23DCBD6DC(*v138, 0xD000000000000017, 0x800000023DCE5480, v135, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v162;
  swift_bridgeObjectRelease();
  v140 = v161[7];
  *(_QWORD *)&v166[32] = MEMORY[0x24BEE1788];
  *(_QWORD *)&v166[24] = MEMORY[0x24BEE1768];
  *(_QWORD *)v166 = v140;
  sub_23DC87714((__int128 *)v166, (uint64_t)v167);
  v141 = swift_isUniquelyReferenced_nonNull_native();
  v162 = v163;
  v163 = 0x8000000000000000;
  v142 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x24BDAC7A8](v142);
  v144 = (uint64_t *)((char *)&v150 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v145 + 16))(v144);
  sub_23DCBD880(*v144, 0xD00000000000001ALL, 0x800000023DCE54A0, v141, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  v163 = v162;
  swift_bridgeObjectRelease();
  memcpy(v166, v172, sizeof(v166));
  v146 = sub_23DCC133C();
  v147 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v166 = v163;
  v163 = 0x8000000000000000;
  v148 = v160;
  sub_23DC854A0(v146, (uint64_t)sub_23DC85460, 0, v147, (uint64_t)v166);
  v163 = *(_QWORD *)v166;
  if (v148)
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v163;
  }
  return result;
}

uint64_t sub_23DC86FC8(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  id v55;
  void *v56;
  uint64_t v57;
  _QWORD v58[55];
  _BYTE v59[440];
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[16];
  uint64_t v64;
  char v65;
  _BYTE v66[448];
  unint64_t v67;

  v56 = a4;
  v55 = a2;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v55 - v9;
  sub_23DC87674(a5, (uint64_t)v66, (uint64_t)&qword_254324C80, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  v11 = MEMORY[0x24BEE4B00];
  v67 = MEMORY[0x24BEE4B00];
  v12 = MEMORY[0x24BEE1768];
  sub_23DC87674(a1 + 16, (uint64_t)v63, (uint64_t)&unk_2543256B8, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  sub_23DC87674((uint64_t)v63, (uint64_t)&v64, (uint64_t)&unk_2543256B8, v12, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  if ((v65 & 1) != 0)
  {
    sub_23DCBC7B0(6645601, 0xE300000000000000, (uint64_t)v59);
    sub_23DC87CE0((uint64_t)v59, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
  }
  else
  {
    *(_QWORD *)&v59[24] = v12;
    *(_QWORD *)&v59[32] = MEMORY[0x24BEE1788];
    *(_QWORD *)v59 = v64;
    sub_23DC87714((__int128 *)v59, (uint64_t)v58);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v60 = v11;
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v58[3]);
    MEMORY[0x24BDAC7A8](v14);
    v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v16);
    sub_23DCBDBCC((uint64_t)v16, 6645601, 0xE300000000000000, isUniquelyReferenced_nonNull_native, &v60, v12, MEMORY[0x24BEE1788]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    v67 = v60;
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)&v59[24] = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v59[32] = MEMORY[0x24BEE0D28];
  *(_QWORD *)v59 = v18;
  *(_QWORD *)&v59[8] = v19;
  sub_23DC87714((__int128 *)v59, (uint64_t)v58);
  swift_bridgeObjectRetain();
  v20 = v67;
  v21 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v60 = v20;
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v58[3]);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)((char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  sub_23DCBDA28(*v24, v24[1], 0x6369676F6C6F6962, 0xED00007865536C61, v21, &v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  v67 = v60;
  swift_bridgeObjectRelease();
  sub_23DC87754(a3, (uint64_t)v10);
  v26 = sub_23DCE11E4();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v26) != 1)
  {
    v28 = (void *)sub_23DCE116C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  }
  v29 = objc_msgSend(v55, sel_bucketedNumberOfDaysSinceDate_, v28, v55);

  if (v29)
  {
    v30 = sub_23DC802D0(0, &qword_254325710);
    *(_QWORD *)&v59[24] = v30;
    v31 = sub_23DC877D8();
    *(_QWORD *)&v59[32] = v31;
    *(_QWORD *)v59 = v29;
    sub_23DC87714((__int128 *)v59, (uint64_t)v58);
    v32 = v67;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v60 = v32;
    v67 = 0x8000000000000000;
    v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v58[3]);
    MEMORY[0x24BDAC7A8](v34);
    v36 = (char *)&v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v36);
    sub_23DCBDBCC((uint64_t)v36, 0xD000000000000019, 0x800000023DCE5210, v33, &v60, v30, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    v67 = v60;
    swift_bridgeObjectRelease();
    v38 = v56;
    if (v56)
    {
LABEL_8:
      v39 = (char *)objc_msgSend(v38, sel_state);
      v40 = MEMORY[0x24BEE1328];
      v41 = MEMORY[0x24BEE1340];
      v61 = MEMORY[0x24BEE1328];
      v62 = MEMORY[0x24BEE1340];
      LOBYTE(v60) = (unint64_t)(v39 - 1) < 2;
      sub_23DC87714(&v60, (uint64_t)v59);
      v42 = v67;
      v43 = swift_isUniquelyReferenced_nonNull_native();
      v58[0] = v42;
      v44 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, *(uint64_t *)&v59[24]);
      MEMORY[0x24BDAC7A8](v44);
      v46 = (char *)&v55 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v47 + 16))(v46);
      sub_23DCBDBCC((uint64_t)v46, 0xD000000000000016, 0x800000023DCE5230, v43, v58, v40, v41);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
      v67 = v58[0];
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    sub_23DCBC7B0(0xD000000000000019, 0x800000023DCE5210, (uint64_t)v59);
    sub_23DC87CE0((uint64_t)v59, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
    v38 = v56;
    if (v56)
      goto LABEL_8;
  }
  sub_23DCBC7B0(0xD000000000000016, 0x800000023DCE5230, (uint64_t)v59);
  sub_23DC87CE0((uint64_t)v59, (unint64_t *)&qword_254325650, (void (*)(uint64_t))sub_23DC876C0);
LABEL_11:
  sub_23DC87674((uint64_t)v66, (uint64_t)v59, (uint64_t)&qword_254324C80, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_23DC87A58);
  if (sub_23DC877A8((uint64_t)v59) == 1)
  {
    v48 = sub_23DCD769C(MEMORY[0x24BEE4AF8]);
  }
  else
  {
    memcpy(v58, v59, sizeof(v58));
    sub_23DCC1498();
  }
  v49 = v48;
  v50 = v67;
  v51 = swift_isUniquelyReferenced_nonNull_native();
  v58[0] = v50;
  v52 = v57;
  sub_23DC854A0(v49, (uint64_t)sub_23DC85460, 0, v51, (uint64_t)v58);
  if (v52)
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    v53 = v58[0];
    swift_bridgeObjectRelease();
    return v53;
  }
  return result;
}

uint64_t sub_23DC87674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

unint64_t sub_23DC876C0()
{
  unint64_t result;

  result = qword_254325648;
  if (!qword_254325648)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254325648);
  }
  return result;
}

uint64_t sub_23DC87714(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23DC87754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DC877A8(uint64_t a1)
{
  unsigned int v1;
  int v2;

  v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2)
    v2 = ((v1 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v2 = -2;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

unint64_t sub_23DC877D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256CF9448;
  if (!qword_256CF9448)
  {
    v1 = sub_23DC802D0(255, &qword_254325710);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE5BE0], v1);
    atomic_store(result, (unint64_t *)&qword_256CF9448);
  }
  return result;
}

uint64_t sub_23DC87830(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23DC87874()
{
  return swift_release();
}

uint64_t sub_23DC8787C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC7F518(0, &qword_254325660, (void (*)(uint64_t))sub_23DC878D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23DC878D0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254325658)
  {
    sub_23DC876C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254325658);
  }
}

void sub_23DC87938()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543255B0)
  {
    sub_23DCE1C64();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543255B0);
  }
}

void sub_23DC8799C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543244E0)
  {
    sub_23DCE1C64();
    sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v0 = sub_23DCE1CE8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543244E0);
  }
}

uint64_t sub_23DC87A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_23DC87A58(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23DCE1FAC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_23DC87A9C()
{
  unint64_t result;

  result = qword_254325460[0];
  if (!qword_254325460[0])
  {
    result = MEMORY[0x2426416D0](&unk_23DCE3E10, &type metadata for SleepingSampleDaySummarySequenceError);
    atomic_store(result, qword_254325460);
  }
  return result;
}

void sub_23DC87AE0(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_23DC87B34(255, a3, a4);
    v5 = sub_23DCE1FAC();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_23DC87B34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_23DC87A9C();
    v4 = sub_23DCE2300();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23DC87B9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2543254F0[0])
  {
    v2 = type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(255);
    v3 = sub_23DC80074((unint64_t *)&unk_254325580, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3EB8);
    v5 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_2543254F0);
  }
}

uint64_t sub_23DC87C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC87B9C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DC87C58(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23DC87B34(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_23DC87CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_23DC87CE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_23DC7F518(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23DC87D1C(uint64_t a1)
{
  uint64_t v2;

  sub_23DC87AE0(0, (unint64_t *)&qword_254325890, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HealthBalanceDailyAnalyticsEvent.Error(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthBalanceDailyAnalyticsEvent.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23DC87E58 + 4 * byte_23DCE3645[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23DC87E8C + 4 * asc_23DCE3640[v4]))();
}

uint64_t sub_23DC87E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DC87E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DC87E9CLL);
  return result;
}

uint64_t sub_23DC87EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DC87EB0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23DC87EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DC87EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DC87EC8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23DC87ED0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HealthBalanceDailyAnalyticsEvent.Error()
{
  return &type metadata for HealthBalanceDailyAnalyticsEvent.Error;
}

unint64_t sub_23DC87EEC()
{
  unint64_t result;

  result = qword_256CF9468[0];
  if (!qword_256CF9468[0])
  {
    result = MEMORY[0x2426416D0](&unk_23DCE36F8, &type metadata for HealthBalanceDailyAnalyticsEvent.Error);
    atomic_store(result, qword_256CF9468);
  }
  return result;
}

void sub_23DC87F34()
{
  unint64_t v0;

  sub_23DC8B790(319);
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

id sub_23DC87FA0()
{
  void *v0;
  id result;
  id v2;
  uint64_t v3;

  result = objc_msgSend(v0, sel_clientProxy);
  if (result)
  {
    v2 = objc_msgSend(result, sel_remoteObjectProxy);
    swift_unknownObjectRelease();
    sub_23DCE2000();
    swift_unknownObjectRelease();
    sub_23DC90474();
    if (swift_dynamicCast())
      return (id)v3;
    else
      return 0;
  }
  return result;
}

uint64_t sub_23DC88048()
{
  void *v0;
  id v1;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_configuration);
  sub_23DCE1A00();
  result = swift_dynamicCastClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

uint64_t sub_23DC8809C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v14[4];

  v1 = sub_23DCE122C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_configuration);
  v6 = objc_msgSend(v5, sel_debugIdentifier);

  if (v6)
  {
    v7 = sub_23DCE1D30();
    v9 = v8;

    v14[2] = v7;
    v14[3] = v9;
    swift_bridgeObjectRetain();
    sub_23DC881D8(v0, v14);
    swift_bridgeObjectRelease_n();
    return v14[0];
  }
  else
  {
    v11 = objc_msgSend(v0, sel_queryUUID);
    sub_23DCE1214();

    v10 = sub_23DCE11F0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v10;
}

uint64_t sub_23DC881D8@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_23DCE122C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_queryUUID, 0, 0xE000000000000000);
  sub_23DCE1214();

  v9 = (void *)sub_23DCE11FC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = (id)HKDiagnosticStringFromUUID();

  v11 = sub_23DCE1D30();
  v13 = v12;

  swift_bridgeObjectRelease();
  v16 = v11;
  v17 = v13;
  sub_23DCE1D54();
  sub_23DCE1D54();
  result = sub_23DCE1D54();
  v15 = v17;
  *a2 = v16;
  a2[1] = v15;
  return result;
}

uint64_t sub_23DC88314()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_23DCE16D0();
}

uint64_t sub_23DC88388()
{
  swift_getObjCClassMetadata();
  sub_23DC88314();
  return swift_getObjCClassFromMetadata();
}

void sub_23DC883AC()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  char *v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_class *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_23DCE122C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE1B14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v9 = v0;
  v10 = sub_23DCE1B08();
  v11 = sub_23DCE1EEC();
  v12 = os_log_type_enabled(v10, v11);
  v49 = ObjectType;
  if (v12)
  {
    v13 = swift_slowAlloc();
    v47 = v6;
    v14 = v13;
    v15 = swift_slowAlloc();
    v46 = v5;
    v16 = v15;
    v52 = v15;
    *(_DWORD *)v14 = 136446466;
    v17 = sub_23DCE2354();
    v48 = v2;
    v51 = sub_23DCA47EC(v17, v18, &v52);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    v19 = sub_23DC8809C();
    v51 = sub_23DCA47EC(v19, v20, &v52);
    v2 = v48;
    ObjectType = v49;
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v10, v11, "[%{public}s:%{public}s] Query started", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v16, -1, -1);
    MEMORY[0x24264179C](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v46);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v53.receiver = v9;
  v53.super_class = ObjectType;
  objc_msgSendSuper2(&v53, sel__queue_start);
  v21 = sub_23DC87FA0();
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v9, sel_profile);
    if (v23)
    {
      v24 = v23;
      if (!sub_23DC94ED8())
      {
        v36 = sub_23DCD9AB4(127, 0xD000000000000021, 0x800000023DCE5750);
        v33 = (void *)sub_23DCE1148();

        v37 = objc_msgSend(v9, sel_queryUUID);
        v38 = v50;
        sub_23DCE1214();

        v28 = (void *)sub_23DCE11FC();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v38, v2);
        objc_msgSend(v22, sel_client_deliverError_forQuery_, v33, v28);
        swift_unknownObjectRelease();

LABEL_15:
LABEL_16:

        return;
      }
      v26 = v25;
      v27 = (void *)sub_23DC88048();
      if (v27)
      {
        v28 = v27;
        if ((objc_msgSend(v27, sel_shouldDeactivateAfterInitialResults) & 1) == 0)
        {
          v29 = swift_getObjectType();
          v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v29, v26);
          v31 = objc_msgSend(v9, sel_queryQueue);
          sub_23DC9A140((uint64_t)v9, (uint64_t)v31, (uint64_t)v30);

        }
        sub_23DC88994(v24, v22, (uint64_t)v28);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        goto LABEL_16;
      }
      sub_23DCE1D30();
      v39 = v3;
      v40 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v41 = (void *)sub_23DCE1D0C();
      swift_bridgeObjectRelease();
      v42 = objc_msgSend(v40, sel_initWithDomain_code_userInfo_, v41, 100, 0);

      v33 = (void *)sub_23DCE1148();
      v43 = objc_msgSend(v9, sel_queryUUID);
      v44 = v50;
      sub_23DCE1214();

      v28 = (void *)sub_23DCE11FC();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v2);
      objc_msgSend(v22, sel_client_deliverError_forQuery_, v33, v28);
      swift_unknownObjectRelease();

    }
    else
    {
      v32 = sub_23DCD9AB4(127, 0x20656C69666F7250, 0xEF676E697373696DLL);
      v33 = (void *)sub_23DCE1148();

      v34 = objc_msgSend(v9, sel_queryUUID);
      v35 = v50;
      sub_23DCE1214();

      v28 = (void *)sub_23DCE11FC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v35, v2);
      objc_msgSend(v22, sel_client_deliverError_forQuery_, v33, v28);
    }
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  sub_23DCE21BC();
  __break(1u);
}

uint64_t sub_23DC88994(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t AssociatedConformanceWitness;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(void);
  id v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v78;
  uint64_t v79;
  void (*v80)(uint64_t *__return_ptr, id, uint64_t, uint64_t);
  id v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  id v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  char *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  int EnumCaseMultiPayload;
  char *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  id v115;
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  id v125;
  NSObject *v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  void (*v134)(char *, uint64_t);
  char *v135;
  id v136;
  unsigned int v137;
  char *v138;
  id v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  void (*v148)(char *, uint64_t);
  char *v149;
  char v150;
  void *v151;
  id v152;
  char *v153;
  void *v154;
  void *v155;
  id v156;
  void (*v157)(char *, uint64_t);
  uint64_t v158;
  id v159;
  char *v160;
  id v161;
  NSObject *v162;
  os_log_type_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v174;
  NSObject *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char *v185;
  char *v186;
  unint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  void (*v191)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t *v197;
  char *v198;
  uint64_t v199;
  char *v200;
  __int128 v201;
  uint64_t ObjectType;
  char *v203;
  void *v204;
  id v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  void (*v224)(char *, uint64_t);
  uint64_t v225;
  uint64_t v226[4];
  uint64_t v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;

  v4 = v3;
  v216 = a3;
  v210 = a2;
  v205 = a1;
  ObjectType = swift_getObjectType();
  v6 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v3) + 0x50);
  v5 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v3) + 0x58);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v222 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v217 = (char *)&v185 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v218 = (char *)&v185 - v10;
  v209 = sub_23DCE122C();
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x24BDAC7A8](v209);
  v207 = (char *)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = sub_23DCE1B14();
  v211 = *(_QWORD *)(v215 - 8);
  v12 = MEMORY[0x24BDAC7A8](v215);
  v195 = (char *)&v185 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v190 = (char *)&v185 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v188 = (char *)&v185 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v206 = (char *)&v185 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v186 = (char *)&v185 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v185 = (char *)&v185 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v189 = (char *)&v185 - v24;
  v187 = sub_23DC87A9C();
  v25 = sub_23DCE2300();
  v213 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v223 = (char *)&v185 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v214 = (char *)&v185 - v28;
  v212 = v29;
  v30 = sub_23DCE1FAC();
  v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v185 - v32;
  sub_23DC80EF0(0);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v200 = (char *)&v185 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)&v201 = (char *)&v185 - v37;
  v38 = sub_23DCE11E4();
  v220 = *(_QWORD *)(v38 - 8);
  v221 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v219 = (char *)&v185 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8B790(0);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v192 = (char *)&v185 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v196 = (char *)&v185 - v43;
  sub_23DC82800(0, &qword_2543252E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v31);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v185 - v45;
  sub_23DC82800(0, (unint64_t *)&unk_254325638, (uint64_t (*)(uint64_t))sub_23DC8799C, v31);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v185 - v48;
  v50 = sub_23DCE1400();
  v51 = MEMORY[0x24BDAC7A8](v50);
  v197 = (uint64_t *)((char *)&v185 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = v6;
  v194 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v203 = (char *)&v185 - v54;
  v55 = sub_23DCE1B44();
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v58 = (char **)((char *)&v185 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v204 = v4;
  *v58 = objc_msgSend(v4, sel_queryQueue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v56 + 104))(v58, *MEMORY[0x24BEE5610], v55);
  LOBYTE(v4) = sub_23DCE1B50();
  (*(void (**)(_QWORD *, uint64_t))(v56 + 8))(v58, v55);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v60 = *(_QWORD *)(AssociatedConformanceWitness + 24);
  v199 = AssociatedConformanceWitness;
  v61 = *(_OWORD *)(AssociatedConformanceWitness + 8);
  v227 = AssociatedTypeWitness;
  v228 = v61;
  v229 = v60;
  v224 = (void (*)(char *, uint64_t))sub_23DCE1B80();
  v231 = sub_23DCE1DE4();
  sub_23DCE19F4();
  sub_23DC8799C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v49, 1, v62) == 1)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v63 = v53;
  sub_23DCE19E8();
  v64 = sub_23DCE12E0();
  v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v46, 1, v64);
  v66 = v212;
  if (v65 == 1)
  {
LABEL_47:
    __break(1u);
    JUMPOUT(0x23DC8A8B4);
  }
  sub_23DCE13C4();
  v67 = v5;
  v68 = *(void (**)(void))(v5 + 32);
  v69 = v205;
  v68();
  (*(void (**)(uint64_t, uint64_t))(v67 + 48))(v63, v67);
  v70 = v201;
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v220 + 56))(v201, 1, 1, v221);
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v71 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
  v72 = (id)HKRollingBaselineConfigurationForQuantityType();

  if (v72)
  {
    objc_msgSend(v72, sel_maximumWindowDuration);
    v74 = v73;

  }
  else
  {
    v74 = 0;
  }
  v75 = (uint64_t)v196;
  (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v196, v219, v221);
  v76 = type metadata accessor for SleepingSampleCacheRange();
  sub_23DC87A14(v70, v75 + *(int *)(v76 + 20), (uint64_t (*)(_QWORD))sub_23DC80EF0);
  *(_QWORD *)(v75 + *(int *)(v76 + 24)) = v74;
  v216 = *(_QWORD *)(v76 - 8);
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v216 + 56);
  LODWORD(v219) = 1;
  v220 = v76;
  v191 = v77;
  v77(v75, 0, 1, v76);
  v78 = v204;
  v79 = (uint64_t)v204 + qword_254324B40;
  swift_beginAccess();
  v221 = v79;
  sub_23DC903CC(v75, v79);
  swift_endAccess();
  v80 = *(void (**)(uint64_t *__return_ptr, id, uint64_t, uint64_t))(v67 + 40);
  v81 = v69;
  v82 = v78;
  v193 = v63;
  v80(v226, v81, v63, v67);
  v83 = __swift_project_boxed_opaque_existential_1(v226, v226[3]);
  MEMORY[0x24BDAC7A8](v83);
  (*(void (**)(char *))(v85 + 16))((char *)&v185 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  v229 = swift_getAssociatedTypeWitness();
  v230 = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(&v227);
  sub_23DCE1D6C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
  v197 = v226;
  *(_QWORD *)&v86 = 136446466;
  v201 = v86;
  v196 = (char *)(MEMORY[0x24BEE4AD8] + 8);
  v205 = (id)(MEMORY[0x24BEE4AD0] + 8);
  v87 = v213;
  v88 = v214;
  v198 = v33;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v227, v229);
    sub_23DCE1FB8();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v33, 1, v66) == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v88, v33, v66);
    if (objc_msgSend(v82, sel__shouldStopProcessingQuery))
    {
      v124 = v189;
      sub_23DCE1AFC();
      v125 = v82;
      v126 = sub_23DCE1B08();
      v127 = sub_23DCE1EEC();
      if (os_log_type_enabled(v126, v127))
      {
        v128 = swift_slowAlloc();
        v129 = swift_slowAlloc();
        v226[0] = v129;
        *(_DWORD *)v128 = v201;
        v130 = sub_23DCE2354();
        v225 = sub_23DCA47EC(v130, v131, v226);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v128 + 12) = 2082;
        v132 = sub_23DC8809C();
        v225 = sub_23DCA47EC(v132, v133, v226);
        v87 = v213;
        sub_23DCE1FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v126, v127, "[%{public}s:%{public}s] Query aborted", (uint8_t *)v128, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v129, -1, -1);
        MEMORY[0x24264179C](v128, -1, -1);

        v134 = *(void (**)(char *, uint64_t))(v211 + 8);
        v135 = v189;
      }
      else
      {

        v134 = *(void (**)(char *, uint64_t))(v211 + 8);
        v135 = v124;
      }
      v157 = v134;
      v134(v135, v215);
      v149 = v195;
      v158 = (uint64_t)v192;
      v159 = sub_23DCD9AB4(128, 0x6261207972657551, 0xED0000646574726FLL);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v214, v66);
      v156 = 0;
LABEL_40:
      v172 = v221;
      v173 = v191;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v227);
      swift_bridgeObjectRelease();
      v173(v158, 1, 1, v220);
      swift_beginAccess();
      sub_23DC903CC(v158, v172);
      swift_endAccess();
      v148 = v157;
      v155 = v159;
      goto LABEL_41;
    }
    if (objc_msgSend(v82, sel__shouldSuspendQuery))
    {
      v136 = objc_msgSend(v82, sel_configuration);
      v137 = objc_msgSend(v136, sel_shouldDeactivateAfterInitialResults);

      if (v137)
      {
        v138 = v185;
        sub_23DCE1AFC();
        v139 = v82;
        v140 = sub_23DCE1B08();
        v141 = sub_23DCE1EEC();
        if (os_log_type_enabled(v140, v141))
        {
          v142 = swift_slowAlloc();
          v143 = swift_slowAlloc();
          v226[0] = v143;
          *(_DWORD *)v142 = v201;
          v144 = sub_23DCE2354();
          v225 = sub_23DCA47EC(v144, v145, v226);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v142 + 12) = 2082;
          v146 = sub_23DC8809C();
          v225 = sub_23DCA47EC(v146, v147, v226);
          v87 = v213;
          sub_23DCE1FD0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v140, v141, "[%{public}s:%{public}s] Query suspended and is deactivating", (uint8_t *)v142, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264179C](v143, -1, -1);
          MEMORY[0x24264179C](v142, -1, -1);

        }
        else
        {

        }
        v157 = *(void (**)(char *, uint64_t))(v211 + 8);
        v157(v138, v215);
        v149 = v195;
        v158 = (uint64_t)v192;
        v170 = v214;
        v159 = sub_23DCD9AB4(128, 0xD000000000000023, 0x800000023DCE56B0);
        v156 = 0;
        v171 = v212;
      }
      else
      {
        v160 = v186;
        sub_23DCE1AFC();
        v161 = v82;
        v162 = sub_23DCE1B08();
        v163 = sub_23DCE1EEC();
        if (os_log_type_enabled(v162, v163))
        {
          v164 = swift_slowAlloc();
          v165 = swift_slowAlloc();
          v226[0] = v165;
          *(_DWORD *)v164 = v201;
          v166 = sub_23DCE2354();
          v225 = sub_23DCA47EC(v166, v167, v226);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v164 + 12) = 2082;
          v168 = sub_23DC8809C();
          v225 = sub_23DCA47EC(v168, v169, v226);
          v87 = v213;
          sub_23DCE1FD0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v162, v163, "[%{public}s:%{public}s] Query suspended and can be resumed", (uint8_t *)v164, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264179C](v165, -1, -1);
          MEMORY[0x24264179C](v164, -1, -1);

        }
        else
        {

        }
        v157 = *(void (**)(char *, uint64_t))(v211 + 8);
        v157(v160, v215);
        v149 = v195;
        v158 = (uint64_t)v192;
        v171 = v212;
        v170 = v214;
        v156 = sub_23DCD9AB4(128, 0xD000000000000022, 0x800000023DCE5680);
        v159 = 0;
      }
      (*(void (**)(char *, uint64_t))(v87 + 8))(v170, v171);
      goto LABEL_40;
    }
    v90 = swift_bridgeObjectRetain();
    v91 = MEMORY[0x242640BF0](v90, v224);
    swift_bridgeObjectRelease();
    if (v91 >= 200)
    {
      v92 = v206;
      sub_23DCE1AFC();
      v93 = v82;
      v94 = sub_23DCE1B08();
      v95 = sub_23DCE1EEC();
      if (os_log_type_enabled(v94, v95))
      {
        v96 = swift_slowAlloc();
        v97 = swift_slowAlloc();
        v226[0] = v97;
        *(_DWORD *)v96 = v201;
        v98 = sub_23DCE2354();
        v225 = sub_23DCA47EC(v98, v99, v226);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2082;
        v100 = sub_23DC8809C();
        v225 = sub_23DCA47EC(v100, v101, v226);
        sub_23DCE1FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v94, v95, "[%{public}s:%{public}s] Delivering sample batch", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v97, -1, -1);
        v102 = v96;
        v82 = v204;
        MEMORY[0x24264179C](v102, -1, -1);

        v33 = v198;
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v211 + 8))(v92, v215);
      v66 = v212;
      sub_23DCE218C();
      swift_bridgeObjectRelease();
      v103 = (void *)sub_23DCE1DB4();
      swift_bridgeObjectRelease();
      v104 = objc_msgSend(v93, sel_queryUUID);
      v105 = v207;
      sub_23DCE1214();

      v106 = (void *)sub_23DCE11FC();
      (*(void (**)(char *, uint64_t))(v208 + 8))(v105, v209);
      objc_msgSend(v210, sel_client_deliverSleepingSampleDaySummaries_clearPending_isFinalBatch_queryUUID_, v103, v219 & 1, 0, v106);

      v107 = sub_23DCE1DE4();
      LODWORD(v219) = 0;
      v231 = v107;
      v87 = v213;
      v88 = v214;
    }
    v108 = v221;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v223, v88, v66);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v110 = v218;
    if (EnumCaseMultiPayload == 1)
      __asm { BR              X10 }
    (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v218, v223, AssociatedTypeWitness);
    swift_beginAccess();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v216 + 48))(v108, 1, v220))
    {
      swift_endAccess();
    }
    else
    {
      v111 = v82;
      v112 = (uint64_t)v200;
      sub_23DCE1838();
      sub_23DC8157C(v112);
      swift_endAccess();
      v113 = v112;
      v82 = v111;
      sub_23DC827C4(v113, (uint64_t (*)(_QWORD))sub_23DC80EF0);
    }
    v89 = v222;
    (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v217, v110, AssociatedTypeWitness);
    v226[0] = sub_23DCE1B5C();
    sub_23DCE1E20();
    sub_23DCE1E14();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v110, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v66);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v227);
  v114 = v190;
  sub_23DCE1AFC();
  v115 = v82;
  v116 = sub_23DCE1B08();
  v117 = sub_23DCE1EEC();
  if (os_log_type_enabled(v116, v117))
  {
    v118 = swift_slowAlloc();
    v119 = swift_slowAlloc();
    v227 = v119;
    *(_DWORD *)v118 = v201;
    v120 = sub_23DCE2354();
    v226[0] = sub_23DCA47EC(v120, v121, &v227);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v118 + 12) = 2082;
    v122 = sub_23DC8809C();
    v226[0] = sub_23DCA47EC(v122, v123, &v227);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v116, v117, "[%{public}s:%{public}s] Delivering samples", (uint8_t *)v118, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v119, -1, -1);
    MEMORY[0x24264179C](v118, -1, -1);

  }
  else
  {

  }
  v148 = *(void (**)(char *, uint64_t))(v211 + 8);
  v148(v114, v215);
  v149 = v195;
  v150 = (char)v219;
  sub_23DCE218C();
  swift_bridgeObjectRelease();
  v151 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v152 = objc_msgSend(v115, sel_queryUUID);
  v153 = v207;
  sub_23DCE1214();

  v154 = (void *)sub_23DCE11FC();
  (*(void (**)(char *, uint64_t))(v208 + 8))(v153, v209);
  objc_msgSend(v210, sel_client_deliverSleepingSampleDaySummaries_clearPending_isFinalBatch_queryUUID_, v151, v150 & 1, 1, v154);

  v155 = 0;
  v156 = 0;
LABEL_41:
  sub_23DCE1AFC();
  v174 = v82;
  v175 = sub_23DCE1B08();
  v176 = sub_23DCE1EEC();
  if (os_log_type_enabled(v175, v176))
  {
    v177 = swift_slowAlloc();
    v178 = swift_slowAlloc();
    v224 = v148;
    v179 = v178;
    v227 = v178;
    *(_DWORD *)v177 = v201;
    v180 = sub_23DCE2354();
    v226[0] = sub_23DCA47EC(v180, v181, &v227);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v177 + 12) = 2082;
    v182 = sub_23DC8809C();
    v226[0] = sub_23DCA47EC(v182, v183, &v227);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v175, v176, "[%{public}s:%{public}s] Query finished", (uint8_t *)v177, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v179, -1, -1);
    MEMORY[0x24264179C](v177, -1, -1);

    v224(v195, v215);
  }
  else
  {

    v148(v149, v215);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v194 + 8))(v203, v193);
}

void sub_23DC8A8C4(void *a1)
{
  id v1;

  v1 = a1;
  sub_23DC883AC();

}

id sub_23DC8A8F8()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unsigned __int8 v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v6 = v0;
  v7 = sub_23DCE1B08();
  v8 = sub_23DCE1EEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v28 = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = sub_23DCE2354();
    v26 = v3;
    v27 = sub_23DCA47EC(v11, v12, &v28);
    v25 = v2;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    v13 = sub_23DC8809C();
    v27 = sub_23DCA47EC(v13, v14, &v28);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v7, v8, "[%{public}s:%{public}s] Query stopped", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v10, -1, -1);
    MEMORY[0x24264179C](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v15 = objc_msgSend(v6, sel_profile);
  if (v15)
  {
    v16 = v15;
    v17 = sub_23DC94ED8();
    v19 = v18;

    if (v17)
    {
      v20 = objc_msgSend(v6, sel_configuration);
      v21 = objc_msgSend(v20, sel_shouldDeactivateAfterInitialResults);

      if ((v21 & 1) != 0)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        v22 = swift_getObjectType();
        v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v22, v19);
        sub_23DC9A168((uint64_t)v6, (uint64_t)v23);
        swift_unknownObjectRelease();

      }
    }
  }
  v29.receiver = v6;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, sel__queue_stop);
}

void sub_23DC8ABD4(void *a1)
{
  id v1;

  v1 = a1;
  sub_23DC8A8F8();

}

uint64_t sub_23DC8AC08(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  v2 = sub_23DC8AC38();

  return v2 & 1;
}

uint64_t sub_23DC8AC38()
{
  void *v0;
  id v1;
  unsigned int v2;

  v1 = objc_msgSend(v0, sel_configuration);
  v2 = objc_msgSend(v1, sel_shouldDeactivateAfterInitialResults);

  return v2 ^ 1;
}

void sub_23DC8AC84()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  swift_getObjectType();
  v1 = (_QWORD *)sub_23DCE1B14();
  v2 = *(v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_profile);
  if (v5)
  {
    v6 = v5;
    v7 = sub_23DC87FA0();
    if (v7)
    {
      v8 = v7;
      v9 = (void *)sub_23DC88048();
      if (v9)
      {
        v21 = v9;
        sub_23DC88994(v6, v8, (uint64_t)v9);

        swift_unknownObjectRelease();
        return;
      }

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
  sub_23DCE1AFC();
  v10 = v0;
  v11 = sub_23DCE1B08();
  v12 = sub_23DCE1ED4();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v21 = v1;
    v14 = v13;
    v15 = swift_slowAlloc();
    v23 = v15;
    *(_DWORD *)v14 = 136446466;
    v16 = sub_23DCE2354();
    v22 = sub_23DCA47EC(v16, v17, &v23);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    v18 = sub_23DC8809C();
    v22 = sub_23DCA47EC(v18, v19, &v23);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v11, v12, "[%{public}s:%{public}s] Unable to requery data due to unexpected configuration", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v15, -1, -1);
    MEMORY[0x24264179C](v14, -1, -1);

    (*(void (**)(char *, id))(v2 + 8))(v4, v21);
  }
  else
  {

    (*(void (**)(char *, _QWORD *))(v2 + 8))(v4, v1);
  }
}

void sub_23DC8AF18(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t ObjectType;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v2 = v1;
  v56 = a1;
  ObjectType = swift_getObjectType();
  v3 = sub_23DCE1B14();
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v55 = (char *)&v53 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v54 = (char *)&v53 - v9;
  sub_23DC8B790(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SleepingSampleCacheRange();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23DCE1B44();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v20 = objc_msgSend(v2, sel_queryQueue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v21 = sub_23DCE1B50();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) != 0)
  {
    v22 = (uint64_t)v2 + qword_254324B40;
    swift_beginAccess();
    sub_23DC82858(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_23DC8B790);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_23DC827C4((uint64_t)v12, (uint64_t (*)(_QWORD))sub_23DC8B790);
      sub_23DCE1AFC();
      v23 = v2;
      v24 = sub_23DCE1B08();
      v25 = sub_23DCE1EEC();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v61 = v27;
        *(_DWORD *)v26 = 136446466;
        v28 = sub_23DCE2354();
        v60 = sub_23DCA47EC(v28, v29, &v61);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2082;
        v30 = sub_23DC8809C();
        v60 = sub_23DCA47EC(v30, v31, &v61);
        sub_23DCE1FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v24, v25, "[%{public}s:%{public}s] Requerying data for client for samples added (no cache range)", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v27, -1, -1);
        MEMORY[0x24264179C](v26, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v6, v59);
      sub_23DC8AC84();
    }
    else
    {
      v32 = (uint64_t)v16;
      sub_23DC87A14((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SleepingSampleCacheRange);
      if (sub_23DC81870(v56))
      {
        v33 = v54;
        sub_23DCE1AFC();
        v34 = v2;
        v35 = sub_23DCE1B08();
        v36 = sub_23DCE1EEC();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc();
          v38 = swift_slowAlloc();
          v61 = v38;
          *(_DWORD *)v37 = 136446466;
          v39 = sub_23DCE2354();
          v60 = sub_23DCA47EC(v39, v40, &v61);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v37 + 12) = 2082;
          v41 = sub_23DC8809C();
          v60 = sub_23DCA47EC(v41, v42, &v61);
          sub_23DCE1FD0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v35, v36, "[%{public}s:%{public}s] Requerying data for client for samples added (cache range impacted)", (uint8_t *)v37, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264179C](v38, -1, -1);
          MEMORY[0x24264179C](v37, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v59);
        sub_23DC8AC84();
      }
      else
      {
        v43 = v55;
        sub_23DCE1AFC();
        v44 = v2;
        v45 = sub_23DCE1B08();
        v46 = sub_23DCE1EC8();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v61 = v48;
          *(_DWORD *)v47 = 136446466;
          v49 = sub_23DCE2354();
          v60 = sub_23DCA47EC(v49, v50, &v61);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2082;
          v51 = sub_23DC8809C();
          v60 = sub_23DCA47EC(v51, v52, &v61);
          sub_23DCE1FD0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v45, v46, "[%{public}s:%{public}s] Ignoring samples added (not in cache range)", (uint8_t *)v47, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264179C](v48, -1, -1);
          MEMORY[0x24264179C](v47, -1, -1);
        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v59);
      }
      sub_23DC827C4(v32, (uint64_t (*)(_QWORD))type metadata accessor for SleepingSampleCacheRange);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_23DC8B5F8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v6;

  swift_unknownObjectRetain();
  v6 = a1;
  sub_23DC90500(a4);
  swift_unknownObjectRelease();

}

id sub_23DC8B658(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = sub_23DCE122C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1214();
  v12 = a4;
  v13 = a5;
  swift_unknownObjectRetain();
  v14 = sub_23DC907A0((uint64_t)v11, (uint64_t)a4, (uint64_t)v13, a6);

  swift_unknownObjectRelease();
  return v14;
}

id sub_23DC8B728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23DC8B75C(uint64_t a1)
{
  return sub_23DC827C4(a1 + qword_254324B40, (uint64_t (*)(_QWORD))sub_23DC8B790);
}

uint64_t type metadata accessor for SleepingSampleDaySummaryQueryServer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepingSampleDaySummaryQueryServer);
}

void sub_23DC8B790(uint64_t a1)
{
  sub_23DC82800(a1, &qword_254324B38, (uint64_t (*)(uint64_t))type metadata accessor for SleepingSampleCacheRange, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DC8B7B4()
{
  return sub_23DC80074(&qword_254324710, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], MEMORY[0x24BE3FFA8]);
}

uint64_t sub_23DC8B7E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v36 = a1;
  v3 = sub_23DCE12E0();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23DCE1C64();
  v29 = *(_QWORD *)(v32 - 8);
  v5 = v29;
  MEMORY[0x24BDAC7A8](v32);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23DCE1400();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v28 - v16;
  v18 = sub_23DCE1100();
  v30 = *(_QWORD *)(v18 - 8);
  v31 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  swift_beginAccess();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v22(v17, v21, v11);
  sub_23DCE13D0();
  v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v17, v11);
  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v25 = v32;
  v24(v7, v10, v32);
  sub_23DC827C4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v22(v15, v21, v11);
  v26 = v33;
  sub_23DCE13F4();
  v23(v15, v11);
  sub_23DCE1BBC();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v25);
  sub_23DCE10DC();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v20, v31);
}

uint64_t sub_23DC8BA58@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  a2[3] = a1;
  a2[4] = sub_23DC80074(&qword_254324928, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3E50);
  *a2 = v4;
  return swift_retain();
}

uint64_t sub_23DC8BAA4@<X0>(uint64_t a1@<X8>)
{
  return sub_23DC8B7E0(a1);
}

uint64_t sub_23DC8BAC4@<X0>(_QWORD *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  os_log_t v109;
  uint64_t v110;
  uint64_t v111;
  os_unfair_lock_s *v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  unint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t (*v144)(void);
  uint64_t v145;
  char *v146;
  void (*v147)(char *, char *, uint64_t);
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, os_log_t);
  uint64_t v153;
  char *v154;
  void (*v155)(char *, _QWORD);
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  int64_t v159;
  uint64_t v160;
  unint64_t v161;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD));
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t);
  uint64_t v176;
  char v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(unint64_t, uint64_t);
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  os_unfair_lock_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  NSObject *v200;
  os_log_type_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  unint64_t v211;
  void (*v212)(char *, uint64_t);
  os_log_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  void (*v219)(char *, uint64_t, uint64_t);
  char *v220;
  NSObject *v221;
  os_log_type_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  unint64_t v227;
  void (*v228)(char *, uint64_t);
  char *v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  os_unfair_lock_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t result;
  uint64_t v240;
  uint64_t v241;
  os_unfair_lock_s *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  Class v248;
  char *v249;
  NSObject *v250;
  int v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  void (*v269)(uint64_t, uint64_t);
  unint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void (*v277)(uint64_t);
  uint64_t v278;
  char *v279;
  void (*v280)(char **, _QWORD);
  uint64_t v281;
  void (*v282)(char *);
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  unint64_t v286;
  char *v287;
  uint64_t *v288;
  uint64_t v289;
  char v290[8];
  char *v291;
  _QWORD v292[2];
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  Class isa;
  char *v310;
  char *v311;
  char *v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t ObjectType;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  void (*v321)(char *, char *, uint64_t);
  os_unfair_lock_t v322;
  uint64_t v323;
  uint64_t *v324;
  uint64_t v325;
  void (*v326)(char *, uint64_t);
  uint64_t v327;
  char *v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  id *v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  _QWORD *v347;
  char *v348;
  char *v349;
  char *v350;
  char *v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  char *v358;
  char *v359;
  uint64_t v360;
  void (*v361)(char *, os_log_t);
  void (*v362)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v363;
  char *v364;
  uint64_t v365;
  char *v366;
  os_log_t v367;
  uint64_t v368;
  char *v369;
  unint64_t v370;
  uint64_t v371;

  v326 = a2;
  v347 = a1;
  v324 = a3;
  ObjectType = swift_getObjectType();
  sub_23DC8F044();
  v299 = v3;
  v298 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v364 = (char *)v292 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v296 = sub_23DCE1268();
  v295 = *(_QWORD *)(v296 - 8);
  MEMORY[0x24BDAC7A8](v296);
  v294 = (char *)v292 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23DC82800(0, (unint64_t *)&unk_256CF94F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v297 = (char *)v292 - v8;
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0];
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v356 = v10;
  v335 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v362 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v292 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v338 = (uint64_t)v292 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v340 = (id *)((char *)v292 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v339 = (uint64_t)v292 - v17;
  v18 = sub_23DCE18A4();
  v19 = (void (*)(uint64_t))MEMORY[0x24BE40328];
  v332 = v18;
  v331 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v330 = (char *)v292 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, (unint64_t *)&qword_2543255F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], v6);
  MEMORY[0x24BDAC7A8](v21);
  v336 = (char *)v292 - v22;
  sub_23DC8F0D4();
  MEMORY[0x24BDAC7A8](v23);
  v346 = (char *)v292 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC87B34(0, (unint64_t *)&unk_254325880, v19);
  v345 = v25;
  v344 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v337 = (uint64_t)v292 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v292 - v28;
  v30 = sub_23DCE1C64();
  v360 = *(_QWORD *)(v30 - 8);
  v361 = (void (*)(char *, os_log_t))v30;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v351 = (char *)v292 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v350 = (char *)v292 - v33;
  sub_23DC82800(0, &qword_254325320, v9, v6);
  MEMORY[0x24BDAC7A8](v34);
  v366 = (char *)v292 - v35;
  v365 = sub_23DCE15C8();
  v368 = *(_QWORD *)(v365 - 8);
  v36 = MEMORY[0x24BDAC7A8](v365);
  v357 = (char *)v292 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v349 = (char *)v292 - v38;
  sub_23DC87B9C(0);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v334 = (uint64_t)v292 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v358 = (char *)v292 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v359 = (char *)v292 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v363 = (uint64_t)v292 - v46;
  sub_23DC8F1A8();
  MEMORY[0x24BDAC7A8](v47);
  v333 = (uint64_t)v292 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v354 = sub_23DCE1400();
  v353 = *(_QWORD *)(v354 - 8);
  MEMORY[0x24BDAC7A8](v354);
  v352 = (char *)v292 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  v355 = v50;
  v51 = MEMORY[0x24BDAC7A8](v50);
  v348 = (char *)v292 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v313 = (char *)v292 - v53;
  sub_23DC8F20C(0);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (char *)v292 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v343 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v320 = *(_QWORD *)(v343 - 8);
  v57 = MEMORY[0x24BDAC7A8](v343);
  v315 = (uint64_t)v292 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v57);
  v322 = (os_unfair_lock_t)((char *)v292 - v59);
  v60 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  MEMORY[0x24BDAC7A8](v60);
  v62 = (char *)v292 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = sub_23DCE1B14();
  v341 = *(_QWORD *)(v325 - 8);
  v63 = MEMORY[0x24BDAC7A8](v325);
  v312 = (char *)v292 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = MEMORY[0x24BDAC7A8](v63);
  v305 = (char *)v292 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v318 = (char *)v292 - v68;
  MEMORY[0x24BDAC7A8](v67);
  v301 = (char *)v292 - v69;
  v308 = sub_23DCE1670();
  v307 = *(_QWORD *)(v308 - 8);
  MEMORY[0x24BDAC7A8](v308);
  v306 = (uint64_t)v292 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8F228(0, v71);
  v367 = v72;
  isa = v72[-1].isa;
  v73 = MEMORY[0x24BDAC7A8](v72);
  v300 = (char *)v292 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v73);
  v310 = (char *)v292 - v75;
  sub_23DC82800(0, &qword_256CF9510, (uint64_t (*)(uint64_t))MEMORY[0x24BE40438], v6);
  MEMORY[0x24BDAC7A8](v76);
  v78 = (char *)v292 - v77;
  v79 = sub_23DCE1940();
  v80 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v316 = (uint64_t)v292 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_23DCE1640();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = MEMORY[0x24BDAC7A8](v82);
  v304 = (char *)v292 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = MEMORY[0x24BDAC7A8](v84);
  v311 = (char *)v292 - v87;
  v88 = MEMORY[0x24BDAC7A8](v86);
  v302 = (char *)v292 - v89;
  v90 = MEMORY[0x24BDAC7A8](v88);
  v319 = (uint64_t)v292 - v91;
  v92 = MEMORY[0x24BDAC7A8](v90);
  v314 = (char *)v292 - v93;
  MEMORY[0x24BDAC7A8](v92);
  v95 = (char *)v292 - v94;
  v96 = (char *)v347 + *(_QWORD *)(*v347 + 104);
  swift_beginAccess();
  v327 = v83;
  v97 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
  v303 = v96;
  v98 = v96;
  v99 = v343;
  v329 = v82;
  v321 = v97;
  v97(v95, v98, v82);
  sub_23DCE1A6C();
  sub_23DCE1A60();
  sub_23DCE197C();
  swift_allocObject();
  v323 = sub_23DCE1970();
  v100 = sub_23DCE1958();
  v101 = v342;
  v328 = v95;
  if ((v100 & 1) != 0)
  {
    v102 = v347[2];
    v103 = *(void **)(v102 + 16);
    swift_retain();
    v104 = v103;
    sub_23DCD7E2C(v104, (uint64_t)v78);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) == 1)
    {
      swift_release();
      sub_23DC8FE84((uint64_t)v78, &qword_256CF9510, (uint64_t (*)(uint64_t))MEMORY[0x24BE40438]);
    }
    else
    {
      v292[1] = v102;
      v105 = v316;
      (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v316, v78, v79);
      v106 = v306;
      v107 = (char *)v79;
      sub_23DCD86CC(v306);
      v108 = v310;
      sub_23DCE1964();
      (*(void (**)(uint64_t, uint64_t))(v307 + 8))(v106, v308);
      swift_getOpaqueTypeConformance2();
      v109 = v367;
      if ((sub_23DCE1E80() & 1) == 0)
      {
        v363 = v80;
        v366 = v107;
        v247 = v301;
        sub_23DCE1AFC();
        v248 = isa;
        v249 = v300;
        (*((void (**)(char *, char *, os_log_t))isa + 2))(v300, v108, v109);
        v250 = sub_23DCE1B08();
        v251 = sub_23DCE1ED4();
        v252 = v108;
        if (os_log_type_enabled(v250, (os_log_type_t)v251))
        {
          LODWORD(v360) = v251;
          v253 = swift_slowAlloc();
          v359 = (char *)swift_slowAlloc();
          v369 = v359;
          *(_DWORD *)v253 = 136446722;
          nullsub_1(ObjectType);
          v254 = sub_23DCE2354();
          v371 = sub_23DCA47EC(v254, v255, (uint64_t *)&v369);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v253 + 12) = 2050;
          v256 = sub_23DCE1E74();
          v361 = (void (*)(char *, os_log_t))*((_QWORD *)v248 + 1);
          v361(v249, v109);
          v371 = v256;
          sub_23DCE1FD0();
          *(_WORD *)(v253 + 22) = 2080;
          v257 = v294;
          sub_23DCE125C();
          v258 = (uint64_t)v297;
          sub_23DCE1250();
          (*(void (**)(char *, uint64_t))(v295 + 8))(v257, v296);
          v259 = sub_23DCE1244();
          v260 = *(_QWORD *)(v259 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v258, 1, v259) == 1)
          {
            sub_23DC8FE84(v258, (unint64_t *)&unk_256CF94F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08]);
            v261 = 0xE300000000000000;
            v262 = 7104878;
          }
          else
          {
            v262 = sub_23DCE1238();
            v261 = v270;
            (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v258, v259);
          }
          v371 = sub_23DCA47EC(v262, v261, (uint64_t *)&v369);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v250, (os_log_type_t)v360, "[%{public}s] Intercepting query with demo dataset, returning %{public}ld summaries. Locale: %s", (uint8_t *)v253, 0x20u);
          v271 = v359;
          swift_arrayDestroy();
          MEMORY[0x24264179C](v271, -1, -1);
          MEMORY[0x24264179C](v253, -1, -1);

          (*(void (**)(char *, uint64_t))(v341 + 8))(v301, v325);
          v109 = v367;
        }
        else
        {
          v361 = (void (*)(char *, os_log_t))*((_QWORD *)v248 + 1);
          v361(v249, v109);

          (*(void (**)(char *, uint64_t))(v341 + 8))(v247, v325);
        }
        v272 = sub_23DCE1E74();
        v273 = MEMORY[0x24BEE4AF8];
        v274 = v329;
        v275 = v316;
        if (v272)
        {
          v276 = v272;
          v371 = MEMORY[0x24BEE4AF8];
          sub_23DC8F2C8(0, v272 & ~(v272 >> 63), 0);
          sub_23DCE1E68();
          if (v276 < 0)
          {
LABEL_78:
            __break(1u);
LABEL_79:
            result = sub_23DCE2210();
            __break(1u);
            return result;
          }
          v277 = (void (*)(uint64_t))MEMORY[0x24BE3FFB0];
          v278 = (uint64_t)v362;
          v279 = v357;
          do
          {
            v280 = (void (*)(char **, _QWORD))sub_23DCE1EA4();
            v281 = v368;
            v282 = *(void (**)(char *))(v368 + 16);
            v283 = v365;
            v282(v279);
            v280(&v369, 0);
            ((void (*)(uint64_t, char *, uint64_t))v282)(v278, v279, v283);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, uint64_t))(v281 + 8))(v279, v283);
            v284 = v371;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23DC8F2C8(0, *(_QWORD *)(v284 + 16) + 1, 1);
              v284 = v371;
            }
            v286 = *(_QWORD *)(v284 + 16);
            v285 = *(_QWORD *)(v284 + 24);
            v278 = (uint64_t)v362;
            v109 = v367;
            if (v286 >= v285 >> 1)
            {
              sub_23DC8F2C8(v285 > 1, v286 + 1, 1);
              v284 = v371;
            }
            *(_QWORD *)(v284 + 16) = v286 + 1;
            sub_23DC8FD78(v278, v284+ ((*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80))+ *(_QWORD *)(v335 + 72) * v286, (unint64_t *)&qword_254325860, v277);
            v287 = v364;
            sub_23DCE1E98();
            --v276;
          }
          while (v276);
          (*(void (**)(char *, uint64_t))(v298 + 8))(v287, v299);
          v273 = v371;
          v274 = v329;
          v275 = v316;
        }
        sub_23DC8FDE0();
        v288 = v324;
        v324[3] = v289;
        v288[4] = sub_23DC80074(&qword_254325688, (uint64_t (*)(uint64_t))sub_23DC8FDE0, MEMORY[0x24BEE12C8]);
        swift_release();
        swift_release();
        *v288 = v273;
        v361(v252, v109);
        (*(void (**)(uint64_t, char *))(v363 + 8))(v275, v366);
        return (*(uint64_t (**)(char *, uint64_t))(v327 + 8))(v328, v274);
      }
      swift_release();
      (*((void (**)(char *, os_log_t))isa + 1))(v108, v109);
      (*(void (**)(uint64_t, char *))(v80 + 8))(v105, v107);
    }
    v95 = v328;
    v101 = v342;
    v99 = v343;
  }
  v110 = *(_QWORD *)(v101 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  v111 = v110 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v110 + 16);
  v112 = (os_unfair_lock_s *)(v110 + ((*(unsigned int *)(*(_QWORD *)v110 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v112);
  v316 = v111;
  sub_23DC97B80(v111, (uint64_t)v62);
  os_unfair_lock_unlock(v112);
  sub_23DC82858((uint64_t)v62, (uint64_t)v56, (uint64_t (*)(_QWORD))sub_23DC8F20C);
  v113 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v320 + 48))(v56, 1, v99) == 1;
  v114 = (uint64_t)v56;
  if (v113)
  {
    v322 = v112;
    sub_23DC827C4((uint64_t)v56, (uint64_t (*)(_QWORD))sub_23DC8F20C);
    v115 = v319;
    sub_23DC976E8(v326, v319);
    v116 = sub_23DCB7098();
    v293 = v62;
    if ((v116 & 1) != 0)
    {
      v320 = 0;
      v117 = v305;
      sub_23DCE1AFC();
      v118 = sub_23DCE1B08();
      v119 = sub_23DCE1EEC();
      if (os_log_type_enabled(v118, v119))
      {
        v120 = (uint8_t *)swift_slowAlloc();
        v121 = swift_slowAlloc();
        v369 = (char *)v121;
        *(_DWORD *)v120 = 136446210;
        nullsub_1(ObjectType);
        v122 = sub_23DCE2354();
        v371 = sub_23DCA47EC(v122, v123, (uint64_t *)&v369);
        sub_23DCE1FD0();
        v115 = v319;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v118, v119, "[%{public}s] Cache miss", v120, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v121, -1, -1);
        MEMORY[0x24264179C](v120, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v341 + 8))(v117, v325);
      v124 = v356;
      v125 = v365;
      v126 = v303;
      swift_beginAccess();
      v127 = v329;
      (*(void (**)(char *, uint64_t, uint64_t))(v327 + 24))(v126, v115, v329);
      swift_endAccess();
      v128 = v347;
      sub_23DCA03E0(v115, (uint64_t)v326);
      swift_retain();
      v129 = sub_23DCA0B58();
      swift_release();
      v130 = (uint64_t)v304;
      v321(v304, v126, v127);
      v131 = (_QWORD *)((char *)v128 + *(_QWORD *)(*v128 + 112));
      v132 = *v131;
      v133 = v131[1];
      v134 = *(_QWORD *)((char *)v128 + *(_QWORD *)(*v128 + 120));
      swift_retain();
      swift_unknownObjectRetain();
      v135 = sub_23DC8FBE0(v129, v130, v132, v133, v134);
      v343 = v136;
      LODWORD(v367) = v137;
      swift_release();
      v138 = (unint64_t *)(v135
                                + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
      v341 = v135;
      v347 = (_QWORD *)(v135
                      + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange);
      v342 = MEMORY[0x24BEE4AF8];
      v325 = 1;
      v139 = v335;
      v362 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v335 + 56);
      v357 = v29;
      v140 = (uint64_t)v358;
      v141 = (uint64_t)v359;
      while (1)
      {
        v142 = v363;
        v362(v363, 2, 2, v124);
        swift_beginAccess();
        sub_23DC82858(v142, v141, (uint64_t (*)(_QWORD))sub_23DC87B9C);
        v364 = *(char **)(v139 + 48);
        v143 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v364)(v141, 2, v124);
        v144 = MEMORY[0x24BE3FFB0];
        while (v143 == 2)
        {
          sub_23DC827C4(v141, (uint64_t (*)(_QWORD))sub_23DC87B9C);
          if (*(_QWORD *)(*v138 + 16))
          {
            swift_beginAccess();
            v158 = *v138;
            v159 = *(_QWORD *)(*v138 + 16);
            if (!v159)
            {
              __break(1u);
              goto LABEL_78;
            }
            v160 = v125;
            v161 = (*(unsigned __int8 *)(v368 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80);
            (*(void (**)(char *, unint64_t, uint64_t))(v368 + 16))(v366, v158 + v161, v160);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v138 = v158;
            if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v159 - 1) > *(_QWORD *)(v158 + 24) >> 1)
            {
              v158 = sub_23DC8EC14(isUniquelyReferenced_nonNull_native, v159, 1, v158, sub_23DC8FFE4, (uint64_t (*)(_QWORD))v144);
              *v138 = v158;
            }
            v163 = v158 + v161;
            v164 = v365;
            swift_arrayDestroy();
            v165 = *(_QWORD *)(v158 + 16);
            if (!v165)
              goto LABEL_79;
            v166 = v165 - 1;
            v167 = *(_QWORD *)(v368 + 72);
            if (v167 > 0 || v163 >= v163 + v167 + v167 * v166)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v167)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            --*(_QWORD *)(v158 + 16);
            *v138 = v158;
            swift_endAccess();
            v145 = v368;
            v146 = v366;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v368 + 56))(v366, 0, 1, v164);
            v147 = *(void (**)(char *, char *, uint64_t))(v145 + 32);
            v148 = v349;
            v147(v349, v146, v164);
            v149 = v350;
            sub_23DCE1514();
            v150 = v352;
            sub_23DCE15EC();
            v151 = (uint64_t)v348;
            sub_23DCE13D0();
            (*(void (**)(char *, uint64_t))(v353 + 8))(v150, v354);
            v153 = v360;
            v152 = v361;
            v154 = v351;
            (*(void (**)(char *, uint64_t, void (*)(char *, os_log_t)))(v360 + 16))(v351, v151 + *(int *)(v355 + 36), v361);
            sub_23DC827C4(v151, (uint64_t (*)(_QWORD))sub_23DC8799C);
            sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
            sub_23DCE1FF4();
            LODWORD(v145) = v371 == 0;
            v155 = *(void (**)(char *, _QWORD))(v153 + 8);
            v155(v154, v152);
            v155(v149, v152);
            v125 = v365;
            LODWORD(v367) = v145 | v367;
            v140 = (uint64_t)v358;
            v147(v358, v148, v365);
            v124 = v356;
            swift_storeEnumTagMultiPayload();
            v156 = 0;
            v29 = v357;
            v141 = (uint64_t)v359;
            v144 = MEMORY[0x24BE3FFB0];
          }
          else
          {
            v156 = 1;
            v168 = (uint64_t)v366;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v368 + 56))(v366, 1, 1, v125);
            sub_23DC8FE84(v168, &qword_254325320, (uint64_t (*)(uint64_t))v144);
            if ((v367 & 1) != 0)
            {
              LODWORD(v367) = 1;
            }
            else
            {
              v169 = (uint64_t)v346;
              sub_23DCE221C();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v344 + 48))(v169, 1, v345) == 1)
              {
                sub_23DC827C4(v169, (uint64_t (*)(_QWORD))sub_23DC8F0D4);
                v170 = *(void (**)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD)))(v360 + 56);
                LODWORD(v367) = 1;
                v171 = (uint64_t)v336;
                v170(v336, 1, 1, (void (*)(_QWORD, _QWORD))v361);
                sub_23DCB15D8(v171);
                v172 = v171;
                v144 = MEMORY[0x24BE3FFB0];
                sub_23DC8FE84(v172, (unint64_t *)&qword_2543255F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488]);
                v156 = 2;
              }
              else
              {
                v173 = (uint64_t)v29;
                v174 = (uint64_t)v29;
                v175 = (void (*)(uint64_t))MEMORY[0x24BE40328];
                sub_23DC8FD78(v169, v173, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
                v176 = v337;
                sub_23DC87C58(v174, v337, (unint64_t *)&unk_254325880, v175);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  sub_23DC8FE44(v174, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
                  v177 = *(_BYTE *)(v176 + 8);
                  *(_QWORD *)v140 = *(_QWORD *)v176;
                  *(_BYTE *)(v140 + 8) = v177;
                  LODWORD(v367) = 1;
                  swift_storeEnumTagMultiPayload();
                  v156 = 0;
                  v29 = (char *)v174;
                }
                else
                {
                  v178 = v331;
                  v179 = (unint64_t)v330;
                  v180 = v176;
                  v181 = v332;
                  (*(void (**)(char *, uint64_t, uint64_t))(v331 + 32))(v330, v180, v332);
                  sub_23DCB0D90(v179);
                  v182 = *(void (**)(unint64_t, uint64_t))(v178 + 8);
                  v29 = v357;
                  v183 = v179;
                  v144 = MEMORY[0x24BE3FFB0];
                  v182(v183, v181);
                  sub_23DC8FE44((uint64_t)v29, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
                  LODWORD(v367) = 0;
                  v156 = 2;
                }
                v125 = v365;
              }
            }
          }
          v362(v140, v156, 2, v124);
          v157 = v363;
          sub_23DC827C4(v363, (uint64_t (*)(_QWORD))sub_23DC87B9C);
          sub_23DC87A14(v140, v157, (uint64_t (*)(_QWORD))sub_23DC87B9C);
          sub_23DC82858(v157, v141, (uint64_t (*)(_QWORD))sub_23DC87B9C);
          v143 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v364)(v141, 2, v124);
        }
        sub_23DC827C4(v141, (uint64_t (*)(_QWORD))sub_23DC87B9C);
        v184 = v334;
        sub_23DC87A14(v363, v334, (uint64_t (*)(_QWORD))sub_23DC87B9C);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v364)(v184, 2, v124))
        {
          v185 = 1;
          v186 = v333;
        }
        else
        {
          v186 = v333;
          sub_23DC8FD78(v184, v333, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
          v185 = 0;
        }
        v362(v186, v185, 1, v124);
        v187 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v364)(v186, 1, v124);
        v141 = (uint64_t)v359;
        if (v187 == 1)
          break;
        v188 = v339;
        sub_23DC8FD78(v186, v339, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
        sub_23DC87C58(v188, (uint64_t)v340, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23DC8FE44(v188, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);

          v325 = 0;
          v139 = v335;
        }
        else
        {
          sub_23DC87C58(v188, v338, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v189 = v342;
          else
            v189 = sub_23DC8EE20(0, *(_QWORD *)(v342 + 16) + 1, 1, v342);
          v191 = *(_QWORD *)(v189 + 16);
          v190 = *(_QWORD *)(v189 + 24);
          if (v191 >= v190 >> 1)
            v189 = sub_23DC8EE20(v190 > 1, v191 + 1, 1, v189);
          *(_QWORD *)(v189 + 16) = v191 + 1;
          v139 = v335;
          v192 = (*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80);
          v342 = v189;
          sub_23DC8FD78(v338, v189 + v192 + *(_QWORD *)(v335 + 72) * v191, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
          sub_23DC8FE44(v339, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
          sub_23DC8FE44((uint64_t)v340, (unint64_t *)&qword_254325860, (void (*)(uint64_t))v144);
        }
        v140 = (uint64_t)v358;
      }
      swift_release();
      v240 = swift_release();
      if ((v325 & 1) != 0)
      {
        v241 = v342;
        swift_bridgeObjectRetain();
        v242 = v322;
        os_unfair_lock_lock(v322);
        v243 = (uint64_t)v293;
        v244 = v319;
        sub_23DC97D10(v316, (uint64_t)v293, v319, v241, (uint64_t)v326, ObjectType);
        os_unfair_lock_unlock(v242);
        v240 = swift_bridgeObjectRelease();
        v245 = v329;
        v246 = v328;
      }
      else
      {
        v245 = v329;
        v246 = v328;
        v243 = (uint64_t)v293;
        v244 = v319;
        v241 = v342;
      }
      MEMORY[0x24BDAC7A8](v240);
      v291 = v246;
      swift_bridgeObjectRetain();
      v266 = sub_23DC8E690((uint64_t (*)(char *))sub_23DC8FDC4, (uint64_t)v290, v241);
      swift_bridgeObjectRelease();
      sub_23DC8FDE0();
      v267 = v324;
      v324[3] = v268;
      v267[4] = sub_23DC80074(&qword_254325688, (uint64_t (*)(uint64_t))sub_23DC8FDE0, MEMORY[0x24BEE12C8]);
      swift_release();
      *v267 = v266;
      v269 = *(void (**)(uint64_t, uint64_t))(v327 + 8);
      v269(v244, v245);
      sub_23DC827C4(v243, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
      return ((uint64_t (*)(char *, uint64_t))v269)(v246, v245);
    }
    else
    {
      v216 = v312;
      sub_23DCE1AFC();
      v217 = v302;
      v218 = v329;
      v219 = (void (*)(char *, uint64_t, uint64_t))v321;
      v321(v302, v95, v329);
      v220 = v311;
      v219(v311, v115, v218);
      v221 = sub_23DCE1B08();
      v222 = sub_23DCE1EEC();
      if (os_log_type_enabled(v221, v222))
      {
        v223 = swift_slowAlloc();
        v368 = swift_slowAlloc();
        v369 = (char *)v368;
        *(_DWORD *)v223 = 136446722;
        nullsub_1(ObjectType);
        v224 = sub_23DCE2354();
        v371 = sub_23DCA47EC(v224, v225, (uint64_t *)&v369);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v223 + 12) = 2080;
        sub_23DC80074(&qword_256CF9518, (uint64_t (*)(uint64_t))MEMORY[0x24BE40020], MEMORY[0x24BE40030]);
        v226 = sub_23DCE224C();
        v371 = sub_23DCA47EC(v226, v227, (uint64_t *)&v369);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        v228 = *(void (**)(char *, uint64_t))(v327 + 8);
        v228(v217, v329);
        *(_WORD *)(v223 + 22) = 2080;
        v229 = v311;
        v218 = v329;
        v230 = sub_23DCE224C();
        v371 = sub_23DCA47EC(v230, v231, (uint64_t *)&v369);
        v115 = v319;
        v95 = v328;
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        v228(v229, v218);
        _os_log_impl(&dword_23DC7C000, v221, v222, "[%{public}s] Ignoring cache key: %s ⊈ %s", (uint8_t *)v223, 0x20u);
        v232 = v368;
        swift_arrayDestroy();
        MEMORY[0x24264179C](v232, -1, -1);
        MEMORY[0x24264179C](v223, -1, -1);

        (*(void (**)(char *, uint64_t))(v341 + 8))(v312, v325);
      }
      else
      {
        v228 = *(void (**)(char *, uint64_t))(v327 + 8);
        v228(v217, v218);
        v228(v220, v218);

        (*(void (**)(char *, uint64_t))(v341 + 8))(v216, v325);
      }
      sub_23DC8F138(0, (unint64_t *)&qword_254324920, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_23DC8E5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleBaselineComparisonEnumerator);
      v263 = v324;
      v324[3] = v264;
      v263[4] = sub_23DC8E588();
      v265 = v347;
      swift_retain();
      swift_release();
      *v263 = (uint64_t)v265;
      v228((char *)v115, v218);
      sub_23DC827C4((uint64_t)v293, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
      return ((uint64_t (*)(char *, uint64_t))v228)(v95, v218);
    }
  }
  else
  {
    v193 = (uint64_t)v313;
    v194 = v99;
    v195 = v322;
    sub_23DC87A14(v114, (uint64_t)v322, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v196 = v318;
    sub_23DCE1AFC();
    v197 = v315;
    sub_23DC82858((uint64_t)v195, v315, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v198 = v314;
    v199 = v329;
    v321(v314, v95, v329);
    v200 = sub_23DCE1B08();
    v201 = sub_23DCE1EEC();
    v202 = v201;
    if (os_log_type_enabled(v200, v201))
    {
      v203 = swift_slowAlloc();
      v320 = 0;
      v204 = v203;
      v368 = swift_slowAlloc();
      v371 = v368;
      *(_DWORD *)v204 = 136446722;
      v367 = v200;
      nullsub_1(ObjectType);
      v205 = sub_23DCE2354();
      LODWORD(v366) = v202;
      v206 = v197;
      v369 = (char *)sub_23DCA47EC(v205, v207, &v371);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v204 + 12) = 2048;
      v208 = *(_QWORD *)(v197 + *(int *)(v194 + 24));
      sub_23DC827C4(v206, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      v369 = (char *)v208;
      sub_23DCE1FD0();
      *(_WORD *)(v204 + 22) = 2080;
      v209 = v352;
      sub_23DCE15EC();
      sub_23DCE13D0();
      (*(void (**)(char *, uint64_t))(v353 + 8))(v209, v354);
      v369 = 0;
      v370 = 0xE000000000000000;
      sub_23DCE2198();
      sub_23DCE1D54();
      sub_23DCE2198();
      v210 = (uint64_t)v369;
      v211 = v370;
      sub_23DC827C4(v193, (uint64_t (*)(_QWORD))sub_23DC8799C);
      v369 = (char *)sub_23DCA47EC(v210, v211, &v371);
      v199 = v329;
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      v212 = *(void (**)(char *, uint64_t))(v327 + 8);
      v212(v198, v199);
      v213 = v367;
      _os_log_impl(&dword_23DC7C000, v367, (os_log_type_t)v366, "[%{public}s] Cache hit: %ld - %s", (uint8_t *)v204, 0x20u);
      v214 = v368;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v214, -1, -1);
      MEMORY[0x24264179C](v204, -1, -1);

      v215 = (*(uint64_t (**)(char *, uint64_t))(v341 + 8))(v318, v325);
    }
    else
    {
      sub_23DC827C4(v197, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      v212 = *(void (**)(char *, uint64_t))(v327 + 8);
      v212(v198, v199);

      v215 = (*(uint64_t (**)(char *, uint64_t))(v341 + 8))(v196, v325);
    }
    v233 = v322;
    v234 = *(_QWORD *)((char *)&v322->_os_unfair_lock_opaque + *(int *)(v194 + 20));
    MEMORY[0x24BDAC7A8](v215);
    v235 = v328;
    v291 = v328;
    swift_bridgeObjectRetain();
    v236 = sub_23DC8E690((uint64_t (*)(char *))sub_23DC8FDC4, (uint64_t)v290, v234);
    sub_23DC8FDE0();
    v237 = v324;
    v324[3] = v238;
    v237[4] = sub_23DC80074(&qword_254325688, (uint64_t (*)(uint64_t))sub_23DC8FDE0, MEMORY[0x24BEE12C8]);
    swift_release();
    *v237 = v236;
    sub_23DC827C4((uint64_t)v233, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    sub_23DC827C4((uint64_t)v62, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
    return ((uint64_t (*)(char *, uint64_t))v212)(v235, v199);
  }
}

uint64_t sub_23DC8E0D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = sub_23DCE12E0();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23DCE1400();
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23DCE1C64();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE1100();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE1640();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  sub_23DCE1628();
  sub_23DCE15EC();
  sub_23DCE13F4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v21);
  sub_23DCE1BBC();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v22);
  sub_23DCE10DC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_23DC8E2FC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;
  uint64_t v18;

  v6 = sub_23DCE11E4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE1400();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE1640();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_23DCE1610();
  sub_23DCE15E0();
  sub_23DCE11CC();
  v16 = sub_23DCB54F0(a1, (uint64_t)v15, (uint64_t)v8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  *a3 = v16;
  return result;
}

uint64_t sub_23DC8E434@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  _QWORD **v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  uint64_t v15;

  v5 = sub_23DCE11E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (void (*)(char *, uint64_t))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *v2;
  if (sub_23DC94ED8())
  {
    v11 = v10;
    ObjectType = swift_getObjectType();
    v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
    swift_unknownObjectRelease();
    sub_23DCE11CC();
    sub_23DC8BAC4(v9, v8, a2);

    return (*(uint64_t (**)(_QWORD, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    a2[3] = a1;
    a2[4] = sub_23DC8E588();
    *a2 = (uint64_t)v9;
    return swift_retain();
  }
}

uint64_t sub_23DC8E544@<X0>(uint64_t a1@<X8>)
{
  return sub_23DC8E0D0(a1);
}

unint64_t sub_23DC8E564(uint64_t a1)
{
  unint64_t result;

  result = sub_23DC8E588();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23DC8E588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254324910;
  if (!qword_254324910)
  {
    sub_23DC8F138(255, (unint64_t *)&qword_254324920, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_23DC8E5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleBaselineComparisonEnumerator);
    result = MEMORY[0x2426416D0](&unk_23DCE42D4, v1);
    atomic_store(result, (unint64_t *)&qword_254324910);
  }
  return result;
}

uint64_t sub_23DC8E5F0()
{
  return sub_23DC80074((unint64_t *)&unk_254325580, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3EB8);
}

uint64_t sub_23DC8E60C()
{
  return sub_23DC80074(&qword_254324718, (uint64_t (*)(uint64_t))MEMORY[0x24BE40328], MEMORY[0x24BE40320]);
}

uint64_t sub_23DC8E638(uint64_t a1)
{
  uint64_t result;

  result = sub_23DC80074(&qword_254324928, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3E50);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23DC8E674()
{
  return sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
}

uint64_t sub_23DC8E690(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_23DC87C58(a3 + v16 + v13 * v14, (uint64_t)v12, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      v17 = a1(v12);
      if (v3)
      {
        sub_23DC8FE44((uint64_t)v12, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_23DC8FD78((uint64_t)v12, v23, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23DC8F2C8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_23DC8F2C8(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_23DC8FD78(v23, v15 + v16 + v19 * v13, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_23DC8FE44((uint64_t)v12, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23DC8E8E0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = a3;
  v19 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v4 & 0xFFFFFFFFFFFFFF8;
      v17 = v4 & 0xC000000000000001;
      v15 = v4;
      while (v17)
      {
        v9 = (id)MEMORY[0x242640EF0](v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v18 = v9;
        v12 = a2;
        v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_23DCE2144();
          sub_23DCE2168();
          v4 = v15;
          sub_23DCE2174();
          sub_23DCE2150();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_23DCE21D4();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23DC8EA84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23DC8EC14(a1, a2, a3, a4, sub_23DC8FFE4, (uint64_t (*)(_QWORD))MEMORY[0x24BE3FFB0]);
}

uint64_t sub_23DC8EA98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23DC8EC14(a1, a2, a3, a4, sub_23DC8FF48, type metadata accessor for BloodOxygenMetadataStatistics);
}

uint64_t sub_23DC8EAAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23DC8EC14(a1, a2, a3, a4, sub_23DC8FF2C, (uint64_t (*)(_QWORD))MEMORY[0x24BE40328]);
}

_QWORD *sub_23DC8EAC0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_23DC908A8(0, &qword_2543257F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23DC8FAF8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC8EBD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23DC8EC14(a1, a2, a3, a4, sub_23DC8FF64, (uint64_t (*)(_QWORD))sub_23DC8FF80);
}

uint64_t sub_23DC8EBEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23DC8EC14(a1, a2, a3, a4, sub_23DC904E4, (uint64_t (*)(_QWORD))MEMORY[0x24BE402C8]);
}

uint64_t sub_23DC8EC00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23DC8EC14(a1, a2, a3, a4, sub_23DC904C8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCB878]);
}

uint64_t sub_23DC8EC14(char a1, int64_t a2, char a3, unint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23DCE21B0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23DC8F9E0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23DC8EE20(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23DC8FEC8();
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_23DCE21B0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23DC90000(0, v8, v20, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

void sub_23DC8F044()
{
  unint64_t AssociatedTypeWitness;
  uint64_t v1;

  if (!qword_256CF94F0)
  {
    swift_getOpaqueTypeConformance2();
    MEMORY[0x2426416A0](255);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (!v1)
      atomic_store(AssociatedTypeWitness, (unint64_t *)&qword_256CF94F0);
  }
}

void sub_23DC8F0D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325890)
  {
    sub_23DC87B34(255, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325890);
  }
}

void sub_23DC8F138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_23DC8F1A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325870)
  {
    sub_23DC87B34(255, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325870);
  }
}

void sub_23DC8F20C(uint64_t a1)
{
  sub_23DC82800(a1, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23DC8F228(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_256CF9508)
  {
    v2 = MEMORY[0x2426416A0](0, a2, MEMORY[0x24BE40540], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_256CF9508);
  }
}

uint64_t sub_23DC8F280(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23DC8F314(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23DC8F29C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23DC8F490(a1, a2, a3, (_QWORD *)*v3, sub_23DC8FF64, (uint64_t (*)(_QWORD))sub_23DC8FF80);
  *v3 = result;
  return result;
}

uint64_t sub_23DC8F2C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23DC8F670(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23DC8F2E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23DC8F86C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23DC8F300(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23DC8F490(a1, a2, a3, a4, sub_23DC8FF48, type metadata accessor for BloodOxygenMetadataStatistics);
}

uint64_t sub_23DC8F314(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23DC908A8(0, (unint64_t *)&unk_254325838);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DC8F490(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DC8F670(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_23DC8FEC8();
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DC8F86C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23DC908A8(0, &qword_254324A70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DC8F9E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

char *sub_23DC8FAF8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DC8FBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a5;
  sub_23DCE1B14();
  MEMORY[0x24BDAC7A8]();
  v8 = sub_23DCE1640();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  type metadata accessor for SleepingSampleBaselineAccumulator();
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v12
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v12
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries) = v13;
  *(_QWORD *)(v12
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete) = v13;
  swift_retain();
  sub_23DCE1AFC();
  sub_23DCE1A9C();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange, v11, v8);
  v14 = (_QWORD *)(v12
                 + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_warmupProgressProvider);
  *v14 = a3;
  v14[1] = a4;
  *(_QWORD *)(v12
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_outlierContextProvider) = v17;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return v12;
}

uint64_t sub_23DC8FD78(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23DC87B34(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_23DC8FDC4(uint64_t a1)
{
  uint64_t v1;

  return sub_23DC97CF8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_23DC8FDE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325680)
  {
    sub_23DC87B34(255, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v0 = sub_23DCE1E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325680);
  }
}

uint64_t sub_23DC8FE44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_23DC87B34(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23DC8FE84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_23DC82800(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_23DC8FEC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325828)
  {
    sub_23DC87B34(255, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v0 = sub_23DCE2258();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325828);
  }
}

void sub_23DC8FF2C(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_2543257D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE40328], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23DC8FF48(uint64_t a1)
{
  sub_23DC82800(a1, &qword_256CF9520, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23DC8FF64(uint64_t a1)
{
  sub_23DC82800(a1, &qword_2543257E0, (uint64_t (*)(uint64_t))sub_23DC8FF80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23DC8FF80()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543255F8)
  {
    sub_23DCE1C64();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543255F8);
  }
}

void sub_23DC8FFE4(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_2543257C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

uint64_t sub_23DC90000(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v4;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

void sub_23DC90128()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_getObjectType();
  v1 = sub_23DCE1B14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE1B44();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v8 = objc_msgSend(v0, sel_queryQueue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5610], v5);
  v9 = sub_23DCE1B50();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    sub_23DCE1AFC();
    v10 = v0;
    v11 = sub_23DCE1B08();
    v12 = sub_23DCE1EEC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21 = v1;
      v15 = v14;
      v23 = v14;
      *(_DWORD *)v13 = 136446466;
      v16 = sub_23DCE2354();
      v22 = sub_23DCA47EC(v16, v17, &v23);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      v18 = sub_23DC8809C();
      v22 = sub_23DCA47EC(v18, v19, &v23);
      sub_23DCE1FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v11, v12, "[%{public}s:%{public}s] Requerying data for client for samples removed", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v15, -1, -1);
      MEMORY[0x24264179C](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    sub_23DC8AC84();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23DC903CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC8B790(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_23DC90474()
{
  unint64_t result;

  result = qword_254324C78;
  if (!qword_254324C78)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254324C78);
  }
  return result;
}

void sub_23DC904C8(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_2543257B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23DC904E4(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_256CF9528, (uint64_t (*)(uint64_t))MEMORY[0x24BE402C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
}

void sub_23DC90500(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_getObjectType();
  v3 = sub_23DCE1B14();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1B44();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v10 = objc_msgSend(v1, sel_queryQueue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5610], v7);
  v11 = sub_23DCE1B50();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      sub_23DCE1AFC();
      v12 = v1;
      v13 = sub_23DCE1B08();
      v14 = sub_23DCE1EEC();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v24 = v22;
        *(_DWORD *)v15 = 136446466;
        v16 = sub_23DCE2354();
        v23 = sub_23DCA47EC(v16, v17, &v24);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2082;
        v18 = sub_23DC8809C();
        v23 = sub_23DCA47EC(v18, v19, &v24);
        sub_23DCE1FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v13, v14, "[%{public}s:%{public}s] Requerying data for client for protected data availability", (uint8_t *)v15, 0x16u);
        v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x24264179C](v20, -1, -1);
        MEMORY[0x24264179C](v15, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_23DC8AC84();
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_23DC907A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  objc_super v17;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v5[qword_254324B40];
  v12 = type metadata accessor for SleepingSampleCacheRange();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (void *)sub_23DCE11FC();
  v17.receiver = v5;
  v17.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v17, sel_initWithUUID_configuration_client_delegate_, v13, a2, a3, a4);

  v15 = sub_23DCE122C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  return v14;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24264164C](a1, v6, a5);
}

void sub_23DC908A8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23DCE2258();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23DC908F0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;

  v3 = v2;
  v69 = a2;
  sub_23DC7F518(0, &qword_2543252E8, (void (*)(uint64_t))MEMORY[0x24BDCF510]);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v62 = (char *)&v54 - v5;
  sub_23DC7F518(0, &qword_2543252E0, (void (*)(uint64_t))MEMORY[0x24BDCF2D8]);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v60 = (char *)&v54 - v6;
  v65 = sub_23DCE113C();
  v63 = *(_QWORD *)(v65 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v61 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE12E0();
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_23DCE1C64();
  v11 = *(_QWORD *)(v55 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23DCE1100();
  v56 = *(_QWORD *)(v16 - 8);
  v57 = v16;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23DCE11E4();
  v67 = *(_QWORD *)(v19 - 8);
  v68 = v19;
  v20 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v54 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v54 - v22;
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  *(_QWORD *)(v2 + 16) = MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
  v24 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_gregorianDayRange;
  v25 = sub_23DCE1400();
  v64 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(uint64_t, uint64_t))(v64 + 16);
  v66 = v25;
  v26(v24, a1);
  sub_23DCE13D0();
  v27 = v55;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v15, v55);
  sub_23DC827C4((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC8799C);
  sub_23DCE13F4();
  sub_23DCE1BBC();
  v28 = v58;
  v29 = v10;
  v30 = v59;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v29, v59);
  v31 = v27;
  v32 = v3;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v31);
  sub_23DCE10DC();
  v33 = v54;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v18, v57);
  v34 = v60;
  sub_23DCE13F4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v34, 0, 1, v30);
  v35 = sub_23DCE12EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v62, 1, 1, v35);
  v36 = v61;
  sub_23DCE1130();
  v37 = objc_allocWithZone(MEMORY[0x24BDD41C0]);
  v38 = (void *)sub_23DCE116C();
  v39 = (void *)sub_23DCE110C();
  v40 = objc_msgSend(v37, sel_initWithAnchorDate_intervalComponents_, v38, v39);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v65);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_intervalCollection) = v40;
  v41 = *(id *)(v32 + 16);
  v42 = v40;
  v43 = _HKStatisticsOptionBaselineRelativeQuantities() | 0x22;
  v44 = objc_msgSend((id)objc_opt_self(), sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, v41, v42, v43, 0, 1);

  v45 = OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_calculator;
  *(_QWORD *)(v32 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_calculator) = v44;
  sub_23DCE11CC();
  v46 = *(id *)(v32 + 16);
  v47 = v69;
  v48 = sub_23DC94B90(a1, v46, v69);

  *(_QWORD *)(v32 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_dataSource) = v48;
  v49 = *(void **)(v32 + v45);
  objc_msgSend(v49, sel_setDataSource_, v48);
  v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE40C40]), sel_initWithProfile_quantityType_, v47, *(_QWORD *)(v32 + 16));
  *(_QWORD *)(v32
            + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_sourceOrderProvider) = v50;
  if (v49)
    objc_msgSend(v49, sel_setSourceOrderProvider_, v50);

  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(a1, v66);
  v51 = v68;
  v52 = *(void (**)(char *, uint64_t))(v67 + 8);
  v52(v33, v68);
  v52(v23, v51);
  return v32;
}

uint64_t sub_23DC90ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_gregorianDayRange;
  v2 = sub_23DCE1400();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_intervalCollection));
  swift_unknownObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_sourceOrderProvider));
  return swift_deallocClassInstance();
}

uint64_t sub_23DC90F68()
{
  return type metadata accessor for SleepingWristTemperatureAggregateEnumerator();
}

uint64_t type metadata accessor for SleepingWristTemperatureAggregateEnumerator()
{
  uint64_t result;

  result = qword_254325598;
  if (!qword_254325598)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DC90FAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23DCE1400();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23DC91038()
{
  return sub_23DC92C84(&qword_256CF9538, (unint64_t *)&unk_256CF9540, MEMORY[0x24BEE23F8], MEMORY[0x24BEE2420]);
}

unint64_t sub_23DC9106C()
{
  unint64_t result;

  result = qword_254325590;
  if (!qword_254325590)
  {
    result = MEMORY[0x2426416D0](&unk_23DCE3928, &type metadata for SleepingWristTemperatureAggregateEnumerator.Error);
    atomic_store(result, (unint64_t *)&qword_254325590);
  }
  return result;
}

uint64_t sub_23DC910B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  _QWORD *v34;
  void *v35;
  id v36;
  char *v37;
  char *v38;
  NSObject *v39;
  os_signpost_type_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint8_t *v45;
  os_signpost_id_t v46;
  uint8_t *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  id v51;
  NSObject *v52;
  char *v53;
  os_signpost_type_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint8_t *v67;
  os_signpost_id_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  void (*v81)(char *, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  id aBlock[10];

  aBlock[8] = *(id *)MEMORY[0x24BDAC8D0];
  sub_23DC92994();
  MEMORY[0x24BDAC7A8](v1);
  v92 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92A5C();
  v90 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  MEMORY[0x24BDAC7A8](v5);
  v89 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_23DCE1AC0();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_23DCE1A90();
  v94 = *(_QWORD *)(v96 - 8);
  v8 = MEMORY[0x24BDAC7A8](v96);
  v88 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v99 = (char *)&v83 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)&v83 - v12;
  v13 = sub_23DCE113C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23DCE11E4();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v21);
  v22 = sub_23DCE1AB4();
  v97 = *(_QWORD *)(v22 - 8);
  v98 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v100 = v24;
  sub_23DCE1A9C();
  v25 = *(void **)(v0
                 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_intervalCollection);
  v26 = v0;
  v27 = objc_msgSend(v25, sel_anchorDate);
  sub_23DCE11C0();

  v28 = objc_msgSend(v25, sel_intervalComponents);
  sub_23DCE1118();

  v29 = objc_allocWithZone(MEMORY[0x24BDD3FF8]);
  v30 = (void *)sub_23DCE116C();
  v31 = (void *)sub_23DCE110C();
  v32 = objc_msgSend(v29, sel_initWithAnchorDate_statisticsInterval_, v30, v31);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v87 = v26;
  v33 = *(void **)(v26 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_calculator);
  if (v33)
  {
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = v32;
    aBlock[4] = sub_23DC92CF0;
    aBlock[5] = v34;
    aBlock[0] = (id)MEMORY[0x24BDAC760];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_23DC919A4;
    aBlock[3] = &block_descriptor;
    v35 = _Block_copy(aBlock);
    v36 = v32;
    swift_release();
    objc_msgSend(v33, sel_setStatisticsHandler_, v35);
    _Block_release(v35);
  }
  v95 = v32;
  v37 = v93;
  sub_23DCE1A84();
  v38 = v100;
  v39 = sub_23DCE1AA8();
  v40 = sub_23DCE1F58();
  if ((sub_23DCE1F94() & 1) != 0)
  {
    v41 = v94;
    v42 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
    v43 = v99;
    v44 = v96;
    v42(v99, v37, v96);
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    v46 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v39, v40, v46, "SleepingWristTemperatureAggregateEnumerator", "", v45, 2u);
    v47 = v45;
    v48 = v44;
    MEMORY[0x24264179C](v47, -1, -1);

    v49 = v43;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v44);
  }
  else
  {

    v41 = v94;
    v42 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
    v48 = v96;
    v49 = v99;
  }
  v42(v49, v37, v48);
  sub_23DCE1AE4();
  swift_allocObject();
  sub_23DCE1AD8();
  v50 = *(void (**)(char *, uint64_t))(v41 + 8);
  v50(v37, v48);
  if (v33)
  {
    aBlock[0] = 0;
    if (!objc_msgSend(v33, sel_queryForInitialStatisticsWithError_, aBlock))
    {
      v59 = aBlock[0];
      v60 = (void *)sub_23DCE1154();

      swift_willThrow();
      swift_release();
      aBlock[0] = v60;
      sub_23DC7F564();
      sub_23DC802D0(0, (unint64_t *)&unk_256CF9550);
      swift_dynamicCast();

      v61 = aBlock[6];
      v62 = swift_allocObject();
      *(_QWORD *)(v62 + 16) = v61;
      sub_23DC92B74();
      v63 = swift_allocObject();
      *(_QWORD *)(v63 + 16) = sub_23DC92CE8;
      *(_QWORD *)(v63 + 24) = v62;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v98);

      return v63;
    }
    v51 = aBlock[0];
  }
  v52 = sub_23DCE1AA8();
  v53 = v88;
  sub_23DCE1ACC();
  v54 = sub_23DCE1F4C();
  if ((sub_23DCE1F94() & 1) != 0)
  {
    swift_retain();
    v55 = v84;
    sub_23DCE1AF0();
    swift_release();
    v56 = v85;
    v57 = v86;
    if ((*(unsigned int (**)(char *, uint64_t))(v85 + 88))(v55, v86) == *MEMORY[0x24BEE7810])
    {
      v58 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
      v58 = "";
    }
    v64 = v99;
    v42(v99, v53, v48);
    v65 = v53;
    v66 = v48;
    v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v67 = 0;
    v68 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v52, v54, v68, "SleepingWristTemperatureAggregateEnumerator", v58, v67, 2u);
    MEMORY[0x24264179C](v67, -1, -1);

    v50(v65, v66);
    swift_release();
    v50(v64, v66);
  }
  else
  {

    v50(v53, v48);
    swift_release();
  }
  v69 = v90;
  v70 = swift_allocBox();
  v72 = v71;
  v73 = v87;
  v74 = (uint64_t)v89;
  sub_23DCE13D0();
  v75 = v91;
  sub_23DC82858(v74, v91, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v76 = sub_23DCE1C64();
  v77 = *(_QWORD *)(v76 - 8);
  v78 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v92, v74, v76);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v76);
  sub_23DC827C4(v74, (uint64_t (*)(_QWORD))sub_23DC8799C);
  sub_23DC87A14(v78, v75 + *(int *)(v69 + 36), (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC87A14(v75, v72, (uint64_t (*)(_QWORD))sub_23DC92A5C);
  v79 = (_QWORD *)swift_allocObject();
  v80 = v95;
  v79[2] = v70;
  v79[3] = v80;
  v79[4] = v73;
  sub_23DC92B74();
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = sub_23DC92B68;
  *(_QWORD *)(v63 + 24) = v79;
  v81 = *(void (**)(char *, uint64_t))(v97 + 8);
  swift_retain();
  v81(v100, v98);
  return v63;
}

void sub_23DC919A4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

id sub_23DC91A10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  id v12;

  v12 = a1;
  sub_23DC92C0C(0, (unint64_t *)&qword_254325858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - v4;
  v6 = objc_msgSend(v12, sel_hk_isDatabaseAccessibilityError);
  *(_QWORD *)v5 = v12;
  v5[8] = v6;
  v7 = (void (*)(uint64_t))MEMORY[0x24BE3FED0];
  sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
  v9 = v8;
  swift_storeEnumTagMultiPayload();
  sub_23DC93534(0, (unint64_t *)&unk_254325848, v7, (void (*)(void))sub_23DC9106C);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 0, 1, v9);
  sub_23DC92D04((uint64_t)v5, a2);
  return v12;
}

uint64_t sub_23DC91B3C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  char v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v93 = a2;
  v97 = a1;
  v103 = a3;
  v86 = sub_23DCE1490();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v87 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v4);
  v84 = (char *)&v81 - v5;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)&v81 - v7;
  v8 = sub_23DCE11E4();
  v95 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v91 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_23DCE12E0();
  v90 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v98 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_23DCE1100();
  v92 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v89 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92D58();
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92994();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v101 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v102 = (uint64_t)&v81 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v81 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v81 - v24;
  sub_23DC7F518(0, (unint64_t *)&qword_2543255F0, (void (*)(uint64_t))MEMORY[0x24BDD2488]);
  MEMORY[0x24BDAC7A8](v26);
  v104 = (char *)&v81 - v27;
  v28 = sub_23DCE1C64();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v100 = (char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v81 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v88 = (char *)&v81 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v106 = (uint64_t)&v81 - v37;
  sub_23DC92A5C();
  v39 = v38;
  v40 = swift_projectBox();
  swift_beginAccess();
  v41 = *(int *)(v39 + 36);
  v99 = v40;
  v42 = v40 + v41;
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v43(v25, 1, 1, v28);
  v44 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_23DC82858(v42, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC82858((uint64_t)v25, v44, (uint64_t (*)(_QWORD))sub_23DC92994);
  v107 = v29;
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v45((uint64_t)v15, 1, v28) == 1)
  {
    if (v45(v44, 1, v28) == 1)
    {
      sub_23DC827C4((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC92994);
      sub_23DC827C4((uint64_t)v25, (uint64_t (*)(_QWORD))sub_23DC92994);
      v46 = 1;
      v47 = v107;
      v48 = (uint64_t)v104;
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_23DC82858((uint64_t)v15, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_23DC92994);
  if (v45(v44, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v107 + 8))(v23, v28);
LABEL_6:
    sub_23DC827C4((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC92D58);
    sub_23DC827C4((uint64_t)v25, (uint64_t (*)(_QWORD))sub_23DC92994);
    v48 = (uint64_t)v104;
    goto LABEL_7;
  }
  v74 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
  v82 = v43;
  v75 = v88;
  v74(v88, v23, v28);
  v74(v34, (char *)v44, v28);
  sub_23DC934A0((unint64_t *)&unk_2543255C0, MEMORY[0x24BDD24B0]);
  v76 = sub_23DCE1D00();
  v77 = *(void (**)(char *, uint64_t))(v107 + 8);
  v77(v34, v28);
  v78 = v75;
  v43 = v82;
  v77(v78, v28);
  sub_23DC827C4((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC827C4((uint64_t)v25, (uint64_t (*)(_QWORD))sub_23DC92994);
  v48 = (uint64_t)v104;
  if ((v76 & 1) != 0)
  {
    v46 = 1;
    v47 = v107;
    goto LABEL_9;
  }
LABEL_7:
  v49 = v102;
  sub_23DC82858(v42, v102, (uint64_t (*)(_QWORD))sub_23DC92994);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v45)(v49, 1, v28);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    return result;
  }
  v47 = v107;
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
  v52 = v100;
  v51(v100, v49, v28);
  v51((char *)v48, (uint64_t)v52, v28);
  v53 = v101;
  sub_23DCA36E0(v42, v101);
  sub_23DC827C4(v42, (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC87A14(v53, v42, (uint64_t (*)(_QWORD))sub_23DC92994);
  v46 = 0;
LABEL_9:
  v43((char *)v48, v46, 1, v28);
  swift_endAccess();
  v54 = v45(v48, 1, v28);
  v55 = v105;
  if (v54 == 1)
  {
    sub_23DC87CA4(v48, (uint64_t)&qword_2543255F0, (uint64_t)MEMORY[0x24BDD2488], (uint64_t (*)(_QWORD))sub_23DC7F518);
    sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v103, 1, 1, v56);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v106, v48, v28);
    v57 = (uint64_t)v98;
    sub_23DCE13F4();
    v58 = v89;
    sub_23DCE1BBC();
    v59 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v60 = v94;
    v59(v57, v94);
    v61 = v91;
    sub_23DCE10DC();
    v62 = v92;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v55);
    v63 = (void *)sub_23DCE116C();
    v64 = v95;
    v65 = v61;
    v66 = v96;
    (*(void (**)(char *, uint64_t))(v95 + 8))(v65, v96);
    v67 = objc_msgSend(v97, sel_statisticsForDate_, v63);

    if (v67)
    {
      sub_23DCE13F4();
      v68 = v103;
      v69 = v106;
      sub_23DC7E0EC(v67, v106, v57, 1, 1, 1, v103);

      v59(v57, v60);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v69, v28);
      sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
      v71 = v70;
      swift_storeEnumTagMultiPayload();
      v72 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
      v73 = v68;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v88, v106, v28);
      sub_23DCE13F4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v83, 1, 1, v105);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v84, 1, 1, v66);
      (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v87, *MEMORY[0x24BE3FE80], v86);
      v79 = v103;
      sub_23DCE14B4();
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v28);
      sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
      v71 = v80;
      swift_storeEnumTagMultiPayload();
      v72 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
      v73 = v79;
    }
    return v72(v73, 0, 1, v71);
  }
}

uint64_t sub_23DC924B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23DC910B0();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_23DC924F0()
{
  return 0;
}

uint64_t sub_23DC924F8()
{
  return 2;
}

size_t sub_23DC92500()
{
  size_t v0;

  v0 = sub_23DC92DB8();
  swift_release();
  return v0;
}

uint64_t sub_23DC92534(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_23DC92554(a1, a2, a3);
}

uint64_t sub_23DC92554(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  sub_23DC92C0C(0, (unint64_t *)&qword_254325858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - v7;
  sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
  v20 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - v11;
  v13 = sub_23DC910B0();
  result = swift_release();
  v15 = 0;
  if (!a2 || !a3)
  {
LABEL_12:
    *a1 = v13;
    return v15;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v18 = a1;
    sub_23DCE221C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v20) == 1)
    {
      v15 = 0;
LABEL_9:
      sub_23DC87CA4((uint64_t)v8, (uint64_t)&qword_254325858, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_23DC92C0C);
    }
    else
    {
      v15 = 0;
      v17 = a3;
      v19 = a3 - 1;
      v16 = (void (*)(uint64_t))MEMORY[0x24BE3FED0];
      while (1)
      {
        sub_23DC934E0((uint64_t)v8, (uint64_t)v12, (unint64_t *)&unk_254325848, v16, (void (*)(void))sub_23DC9106C);
        sub_23DC934E0((uint64_t)v12, a2, (unint64_t *)&unk_254325848, v16, (void (*)(void))sub_23DC9106C);
        if (v19 == v15)
          break;
        a2 += *(_QWORD *)(v10 + 72);
        sub_23DCE221C();
        ++v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v20) == 1)
          goto LABEL_9;
      }
      v15 = v17;
    }
    a1 = v18;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC92764(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  sub_23DC935A8(0, (unint64_t *)&qword_254325890, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - v7;
  sub_23DC93534(0, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
  v20 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - v11;
  v13 = sub_23DCA0B58();
  result = swift_release();
  v15 = 0;
  if (!a2 || !a3)
  {
LABEL_12:
    *a1 = v13;
    return v15;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v18 = a1;
    sub_23DCE221C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v20) == 1)
    {
      v15 = 0;
LABEL_9:
      sub_23DC87CA4((uint64_t)v8, (uint64_t)&qword_254325890, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_23DC935A8);
    }
    else
    {
      v15 = 0;
      v17 = a3;
      v19 = a3 - 1;
      v16 = (void (*)(uint64_t))MEMORY[0x24BE40328];
      while (1)
      {
        sub_23DC934E0((uint64_t)v8, (uint64_t)v12, (unint64_t *)&unk_254325880, v16, (void (*)(void))sub_23DC87A9C);
        sub_23DC934E0((uint64_t)v12, a2, (unint64_t *)&unk_254325880, v16, (void (*)(void))sub_23DC87A9C);
        if (v19 == v15)
          break;
        a2 += *(_QWORD *)(v10 + 72);
        sub_23DCE221C();
        ++v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v20) == 1)
          goto LABEL_9;
      }
      v15 = v17;
    }
    a1 = v18;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC92974()
{
  return sub_23DCE1D84();
}

void sub_23DC92994()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325618)
  {
    sub_23DCE1C64();
    sub_23DC934A0((unint64_t *)&unk_2543255D0, MEMORY[0x24BDD24C0]);
    sub_23DC92A18();
    v0 = sub_23DCE1CF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325618);
  }
}

unint64_t sub_23DC92A18()
{
  unint64_t result;

  result = qword_254325610;
  if (!qword_254325610)
  {
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254325610);
  }
  return result;
}

void sub_23DC92A5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325770)
  {
    sub_23DC8799C();
    sub_23DC92ABC();
    v0 = sub_23DCE21A4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325770);
  }
}

unint64_t sub_23DC92ABC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254325628;
  if (!qword_254325628)
  {
    sub_23DC8799C();
    v2 = v1;
    v3[0] = sub_23DC934A0((unint64_t *)&unk_2543255D0, MEMORY[0x24BDD24C0]);
    v3[1] = sub_23DC92A18();
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE0910], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254325628);
  }
  return result;
}

uint64_t sub_23DC92B34()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DC92B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DC91B3C(*(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

void sub_23DC92B74()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254325740)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3240];
    sub_23DC92C0C(255, &qword_254325798, MEMORY[0x24BEE3240]);
    sub_23DC92C84(&qword_254325790, &qword_254325798, v0, MEMORY[0x24BEE3250]);
    v1 = sub_23DCE2120();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254325740);
  }
}

void sub_23DC92C0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23DC93534(255, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23DC92C84(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23DC92C0C(255, a2, a3);
    result = MEMORY[0x2426416D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DC92CC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23DC92CE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DC91A10(*(void **)(v1 + 16), a1);
}

id sub_23DC92CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 + 16), sel__insertStatistics_, a2);
}

uint64_t sub_23DC92D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC92C0C(0, (unint64_t *)&qword_254325858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23DC92D58()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254325620)
  {
    sub_23DC92994();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254325620);
  }
}

size_t sub_23DC92DB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v13;
  size_t result;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  unint64_t (*v21)();
  ValueMetadata *v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  void (*v26)(void);
  ValueMetadata *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  sub_23DC92C0C(0, (unint64_t *)&qword_254325858, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v41 - v1;
  sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v41 - v6;
  v8 = *(unsigned __int8 *)(v5 + 80);
  swift_retain();
  v9 = sub_23DC910B0();
  swift_release();
  v47 = v9;
  sub_23DCE221C();
  v44 = v5;
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v48 = v4;
  v46 = v10;
  v11 = v10(v2, 1, v4);
  v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v11 != 1)
  {
    v13 = 0;
    v45 = (v8 + 32) & ~v8;
    v19 = MEMORY[0x24BEE4AF8] + v45;
    v20 = (void (*)(uint64_t))MEMORY[0x24BE3FED0];
    v42 = v2;
    v43 = v8 | 7;
    v21 = sub_23DC9106C;
    v22 = &type metadata for SleepingWristTemperatureAggregateEnumerator.Error;
    v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v24 = v44;
    v41 = v7;
    while (1)
    {
      v26 = (void (*)(void))v21;
      v27 = v22;
      result = sub_23DC934E0((uint64_t)v2, (uint64_t)v7, (unint64_t *)&unk_254325848, v20, (void (*)(void))v21);
      if (v13)
      {
        v12 = v23;
        v17 = __OFSUB__(v13--, 1);
        if (v17)
          goto LABEL_32;
      }
      else
      {
        v28 = v23[3];
        if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_33;
        v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
        if (v29 <= 1)
          v30 = 1;
        else
          v30 = v29;
        sub_23DC92C0C(0, (unint64_t *)&unk_256CF9560, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v31 = *(_QWORD *)(v24 + 72);
        v32 = v45;
        v12 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v12);
        if (!v31)
          goto LABEL_34;
        v33 = result - v32;
        if (result - v32 == 0x8000000000000000 && v31 == -1)
          goto LABEL_35;
        v35 = v33 / v31;
        v12[2] = v30;
        v12[3] = 2 * (v33 / v31);
        v36 = (char *)v12 + v32;
        v37 = v23[3] >> 1;
        v38 = v37 * v31;
        if (v23[2])
        {
          if (v12 < v23 || v36 >= (char *)v23 + v45 + v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v23)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v23[2] = 0;
        }
        v19 = (uint64_t)&v36[v38];
        v40 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        result = swift_release();
        v24 = v44;
        v7 = v41;
        v2 = v42;
        v17 = __OFSUB__(v40, 1);
        v13 = v40 - 1;
        if (v17)
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
      }
      sub_23DC934E0((uint64_t)v7, v19, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], v26);
      v19 += *(_QWORD *)(v24 + 72);
      sub_23DCE221C();
      v25 = v46(v2, 1, v48);
      v22 = v27;
      v21 = (unint64_t (*)())v26;
      v20 = (void (*)(uint64_t))MEMORY[0x24BE3FED0];
      v23 = v12;
      if (v25 == 1)
        goto LABEL_3;
    }
  }
  v13 = 0;
LABEL_3:
  swift_release();
  result = sub_23DC87CA4((uint64_t)v2, (uint64_t)&qword_254325858, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_23DC92C0C);
  v15 = v12[3];
  if (v15 >= 2)
  {
    v16 = v15 >> 1;
    v17 = __OFSUB__(v16, v13);
    v18 = v16 - v13;
    if (v17)
      goto LABEL_36;
    v12[2] = v18;
  }
  return (size_t)v12;
}

size_t sub_23DC9312C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  _QWORD *v12;
  uint64_t v13;
  size_t result;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  unint64_t (*v21)();
  ValueMetadata *v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  void (*v26)(void);
  ValueMetadata *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  sub_23DC935A8(0, (unint64_t *)&qword_254325890, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v41 - v1;
  sub_23DC93534(0, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v41 - v6;
  v8 = *(unsigned __int8 *)(v5 + 80);
  swift_retain();
  v9 = sub_23DCA0B58();
  swift_release();
  v47 = v9;
  sub_23DCE221C();
  v44 = v5;
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v48 = v4;
  v46 = v10;
  v11 = v10(v2, 1, v4);
  v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v11 != 1)
  {
    v13 = 0;
    v45 = (v8 + 32) & ~v8;
    v19 = MEMORY[0x24BEE4AF8] + v45;
    v20 = (void (*)(uint64_t))MEMORY[0x24BE40328];
    v43 = v8 | 7;
    v21 = sub_23DC87A9C;
    v22 = &type metadata for SleepingSampleDaySummarySequenceError;
    v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v24 = v44;
    v41 = v7;
    v42 = v2;
    while (1)
    {
      v26 = (void (*)(void))v21;
      v27 = v22;
      result = sub_23DC934E0((uint64_t)v2, (uint64_t)v7, (unint64_t *)&unk_254325880, v20, (void (*)(void))v21);
      if (v13)
      {
        v12 = v23;
        v17 = __OFSUB__(v13--, 1);
        if (v17)
          goto LABEL_32;
      }
      else
      {
        v28 = v23[3];
        if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_33;
        v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
        if (v29 <= 1)
          v30 = 1;
        else
          v30 = v29;
        sub_23DC935A8(0, &qword_256CF9570, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
        v31 = *(_QWORD *)(v24 + 72);
        v32 = v45;
        v12 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v12);
        if (!v31)
          goto LABEL_34;
        v33 = result - v32;
        if (result - v32 == 0x8000000000000000 && v31 == -1)
          goto LABEL_35;
        v35 = v33 / v31;
        v12[2] = v30;
        v12[3] = 2 * (v33 / v31);
        v36 = (char *)v12 + v32;
        v37 = v23[3] >> 1;
        v38 = v37 * v31;
        if (v23[2])
        {
          if (v12 < v23 || v36 >= (char *)v23 + v45 + v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v23)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v23[2] = 0;
        }
        v19 = (uint64_t)&v36[v38];
        v40 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        result = swift_release();
        v24 = v44;
        v7 = v41;
        v2 = v42;
        v17 = __OFSUB__(v40, 1);
        v13 = v40 - 1;
        if (v17)
        {
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
      }
      sub_23DC934E0((uint64_t)v7, v19, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], v26);
      v19 += *(_QWORD *)(v24 + 72);
      sub_23DCE221C();
      v25 = v46(v2, 1, v48);
      v22 = v27;
      v21 = (unint64_t (*)())v26;
      v20 = (void (*)(uint64_t))MEMORY[0x24BE40328];
      v23 = v12;
      if (v25 == 1)
        goto LABEL_3;
    }
  }
  v13 = 0;
LABEL_3:
  swift_release();
  result = sub_23DC87CA4((uint64_t)v2, (uint64_t)&qword_254325890, (uint64_t)MEMORY[0x24BEE1C68], (uint64_t (*)(_QWORD))sub_23DC935A8);
  v15 = v12[3];
  if (v15 >= 2)
  {
    v16 = v15 >> 1;
    v17 = __OFSUB__(v16, v13);
    v18 = v16 - v13;
    if (v17)
      goto LABEL_36;
    v12[2] = v18;
  }
  return (size_t)v12;
}

uint64_t sub_23DC934A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23DCE1C64();
    result = MEMORY[0x2426416D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DC934E0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(void))
{
  uint64_t v7;

  sub_23DC93534(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_23DC93534(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_23DCE2300();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_23DC935A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23DC93534(255, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

ValueMetadata *type metadata accessor for SleepingWristTemperatureAggregateEnumerator.Error()
{
  return &type metadata for SleepingWristTemperatureAggregateEnumerator.Error;
}

uint64_t sub_23DC93634(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_23DC8F280(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x242640EF0](i, a1);
        sub_23DC802D0(0, &qword_2543256F8);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23DC8F280(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_23DC8F280(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_23DC947A0(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_23DC802D0(0, &qword_2543256F8);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23DC8F280(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_23DC8F280(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_23DC947A0(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC93894(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_23DCE206C())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B08];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v30 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_23DC94B34();
  v3 = sub_23DCE20D8();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DCE2060();
  sub_23DC802D0(0, &qword_254325710);
  sub_23DC94A88();
  result = sub_23DCE1E5C();
  v1 = v34;
  v30 = v35;
  v5 = v36;
  v6 = v37;
  v7 = v38;
LABEL_11:
  v29 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 56;
  while (v1 < 0)
  {
    v16 = sub_23DCE2084();
    if (!v16)
      goto LABEL_45;
    *(_QWORD *)&v31 = v16;
    sub_23DC802D0(0, &qword_254325710);
    swift_dynamicCast();
LABEL_36:
    sub_23DC802D0(0, &qword_254325710);
    swift_dynamicCast();
    result = sub_23DCE2090();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = *(_QWORD *)(v3 + 48) + 40 * v12;
    *(_OWORD *)v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(_QWORD *)(v13 + 32) = v33;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v21 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29)
      goto LABEL_45;
    v18 = *(_QWORD *)(v30 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v29)
        goto LABEL_45;
      v18 = *(_QWORD *)(v30 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v29)
          goto LABEL_45;
        v18 = *(_QWORD *)(v30 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v29)
            goto LABEL_45;
          v18 = *(_QWORD *)(v30 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v29)
              goto LABEL_45;
            v18 = *(_QWORD *)(v30 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v29 != v20)
              {
                v18 = *(_QWORD *)(v30 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_23DC87874();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_23DC93CB4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    v5 = v4 + v3;
    if (!__OFADD__(v4, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v4 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = v4 + v3;
  if (__OFADD__(v4, v3))
    goto LABEL_23;
LABEL_5:
  v6 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v6;
  v4 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v8 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v4 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v5)
      v9 = v5;
    swift_bridgeObjectRetain();
    *v1 = MEMORY[0x242640EFC](v4, v9, 1, v6);
    swift_bridgeObjectRelease();
    v8 = *v1 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_23DC94060(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    v6 = *v1;
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23DCE1DCC();
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC93E74(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    v5 = v20 + v3;
    if (!__OFADD__(v20, v3))
      goto LABEL_5;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v4 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v5 = v4 + v3;
  if (__OFADD__(v4, v3))
    goto LABEL_24;
LABEL_5:
  v6 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v6;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5)
    v10 = v5;
  swift_bridgeObjectRetain();
  v11 = MEMORY[0x242640EFC](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *v1 = v11;
  v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (*(_QWORD *)(v9 + 24) >> 1) - v12;
  result = sub_23DC9427C(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v16 = v15;
  if (v15 < 1)
    goto LABEL_19;
  v17 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v18 = __OFADD__(v17, v15);
  v19 = v17 + v15;
  if (!v18)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
LABEL_19:
    swift_bridgeObjectRelease();
    if (v16 != v13)
      return sub_23DCE1DCC();
LABEL_26:
    sub_23DC82800(0, &qword_256CF9588, (uint64_t (*)(uint64_t))sub_23DC94DA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    return sub_23DCE1DCC();
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC94060(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23DC947B0();
        sub_23DC80074(&qword_256CF9580, (uint64_t (*)(uint64_t))sub_23DC947B0, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_23DC94488(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23DC802D0(0, &qword_2543256F8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DC9427C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_23DCE21D4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_23DC82800(0, &qword_256CF9588, (uint64_t (*)(uint64_t))sub_23DC94DA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
        sub_23DC94E74();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_23DC944E0(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_23DC94DA4();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t (*sub_23DC94488(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23DC94560(v6, a2, a3);
  return sub_23DC944DC;
}

uint64_t (*sub_23DC944E0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_23DC945CC(v6, a2, a3);
  return sub_23DC944DC;
}

void sub_23DC94534(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_23DC94560(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x242640EF0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s19HealthBalanceDaemon24SleepingSampleAggregatorC5ErrorOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_23DC945CC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x242640EF0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for SleepingSampleAggregator.Error;
  }
  __break(1u);
  return result;
}

id sub_23DC94638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t inited;
  void *v6;
  id v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;

  sub_23DC908A8(0, (unint64_t *)&qword_254324A90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE39A0;
  *(_QWORD *)(inited + 32) = (id)HDSampleEntityPredicateForDataType();
  v6 = (void *)sub_23DCE10AC();
  v7 = (id)HDSampleEntityPredicateForDateInterval();

  *(_QWORD *)(inited + 40) = v7;
  sub_23DCE1DCC();
  v8 = swift_bridgeObjectRetain();
  sub_23DC93CB4(v8);
  sub_23DC93634(inited);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingAllPredicates_, v9);

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE40C38]), sel_initForProfile_quantityType_predicate_restrictedSourceEntities_, a3, a2, v10, 0);
  return v11;
}

_OWORD *sub_23DC947A0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_23DC947B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256CF9578)
  {
    sub_23DC802D0(255, &qword_2543256F8);
    v0 = sub_23DCE1E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256CF9578);
  }
}

id sub_23DC94814(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t inited;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20[3];

  v20[0] = a2;
  v20[1] = a1;
  sub_23DC82800(0, (unint64_t *)&unk_2543244B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - v5;
  v7 = sub_23DCE1100();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC908A8(0, (unint64_t *)&qword_254324A90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE39B0;
  v12 = objc_msgSend(a3, sel_metadataManager);
  v13 = (id)*MEMORY[0x24BDD43B0];
  v14 = (id)_HKBackgroundAndSedentaryPrivateHeartRateContexts();
  sub_23DC802D0(0, &qword_254325710);
  sub_23DC94A88();
  v15 = sub_23DCE1E38();

  sub_23DC93894(v15);
  swift_bridgeObjectRelease();
  v16 = (void *)sub_23DCE1E2C();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v12, sel_predicateWithMetadataKey_allowedValues_, v13, v16);

  *(_QWORD *)(inited + 32) = v17;
  v20[2] = inited;
  sub_23DCE1DCC();
  sub_23DCD3D50((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23DC94AE0((uint64_t)v6);
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v18 = sub_23DC94638((uint64_t)v10, v20[0], (uint64_t)a3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
  }
  return v18;
}

unint64_t sub_23DC94A88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254325718;
  if (!qword_254325718)
  {
    v1 = sub_23DC802D0(255, &qword_254325710);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254325718);
  }
  return result;
}

uint64_t sub_23DC94AE0(uint64_t a1)
{
  uint64_t v2;

  sub_23DC82800(0, (unint64_t *)&unk_2543244B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23DC94B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325738)
  {
    v0 = sub_23DCE20E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325738);
  }
}

id sub_23DC94B90(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v24 = sub_23DCE1100();
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE13B8();
  sub_23DC908A8(0, (unint64_t *)&unk_254325838);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23DCE39C0;
  v9 = (id)HDSampleEntityPredicateForDataType();
  v10 = sub_23DC802D0(0, &qword_2543256F8);
  *(_QWORD *)(v8 + 56) = v10;
  *(_QWORD *)(v8 + 32) = v9;
  v11 = (void *)sub_23DCE10AC();
  v12 = (id)HDSampleEntityPredicateForDateInterval();

  *(_QWORD *)(v8 + 88) = v10;
  *(_QWORD *)(v8 + 64) = v12;
  v13 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingAllPredicates_, v13);

  v15 = v14;
  v16 = (id)HKRollingBaselineConfigurationForQuantityType();
  v17 = objc_allocWithZone(MEMORY[0x24BE40C48]);
  v18 = a2;
  v19 = a3;
  v20 = (void *)sub_23DCE116C();
  v21 = objc_msgSend(v17, sel_initForProfile_quantityType_predicate_restrictedSourceEntities_configuration_currentDate_, v19, v18, v15, 0, v16, v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  return v21;
}

void sub_23DC94DA4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_256CF9590)
  {
    sub_23DCE16C4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8];
    sub_23DC80074(&qword_256CF9598, (uint64_t (*)(uint64_t))MEMORY[0x24BE400E8], MEMORY[0x24BE40110]);
    sub_23DC80074(&qword_256CF95A0, v0, MEMORY[0x24BE400F8]);
    sub_23DC80074(&qword_256CF95A8, v0, MEMORY[0x24BE40100]);
    v1 = sub_23DCE1B80();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_256CF9590);
  }
}

unint64_t sub_23DC94E74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256CF95B0;
  if (!qword_256CF95B0)
  {
    sub_23DC82800(255, &qword_256CF9588, (uint64_t (*)(uint64_t))sub_23DC94DA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256CF95B0);
  }
  return result;
}

uint64_t sub_23DC94ED8()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  sub_23DCE1388();
  v1 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_profileExtensionWithIdentifier_, v1);

  if (v2)
  {
    sub_23DCE2000();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_23DC94FC0((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_23DC95098();
    if (swift_dynamicCast())
      return v4;
    else
      return 0;
  }
  else
  {
    sub_23DC9505C((uint64_t)v6);
    return 0;
  }
}

uint64_t sub_23DC94FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC95004();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23DC95004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543258A0)
  {
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543258A0);
  }
}

uint64_t sub_23DC9505C(uint64_t a1)
{
  uint64_t v2;

  sub_23DC95004();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23DC95098()
{
  unint64_t result;

  result = qword_254325330;
  if (!qword_254325330)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254325330);
  }
  return result;
}

void sub_23DC950E8()
{
  sub_23DC95100((SEL *)&selRef_isCompanionCapable);
}

void sub_23DC950F4()
{
  sub_23DC95100((SEL *)&selRef_isAppleWatch);
}

void sub_23DC95100(SEL *a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  unsigned int v7;
  id v8;

  v3 = objc_msgSend(v1, sel_daemon);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_behavior);
    v6 = objc_msgSend(v5, sel_features);

    if (v6)
    {
      v7 = objc_msgSend(v6, sel_harmonia);

      if (v7)
      {
        v8 = objc_msgSend(v4, sel_behavior);
        objc_msgSend(v8, *a1);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_23DC951E4@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  void *v22;
  char **v24;
  char *v25;
  id v26[2];
  char **v27;
  __int128 v28[2];

  v27 = (char **)a2;
  v3 = sub_23DCE11E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1640();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23DCE1400();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v26 - v15;
  sub_23DCE13E8();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  v17 = v26[1];
  sub_23DCE1610();
  sub_23DCE15E0();
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v4 + 16))(v6, a1, v3);
  v18 = sub_23DCB54F0(v17, (uint64_t)v9, (uint64_t)v6);
  if (sub_23DC94ED8())
  {
    v20 = v19;
    ObjectType = swift_getObjectType();
    v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
    swift_unknownObjectRelease();
    sub_23DC8BAC4(v18, a1, (uint64_t *)v28);
    swift_release();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return sub_23DC87714(v28, (uint64_t)v27);
  }
  else
  {
    sub_23DC95408(0);
    v24 = v27;
    v27[3] = v25;
    v24[4] = (char *)sub_23DC80074((unint64_t *)&qword_254324910, (uint64_t (*)(uint64_t))sub_23DC95408, (uint64_t)&unk_23DCE42D4);
    *v24 = v18;
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

void sub_23DC95408(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_254324920)
  {
    v2 = type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(255);
    v3 = sub_23DC80074((unint64_t *)&unk_254325580, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3EB8);
    v5 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_254324920);
  }
}

id sub_23DC95480(void *a1, void *a2, void *a3, void *a4, char a5)
{
  _BYTE *v5;
  _BYTE *v6;
  objc_class *ObjectType;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  objc_super v21;

  v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  v13 = OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_unitTest_didProcessNotificationSyncInstruction;
  sub_23DC973DC();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_DWORD *)(v14 + 32) = 0;
  *(_QWORD *)&v6[v13] = v14;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager] = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationStateKeyValueDomain] = a2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationSyncClient] = a3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_analyticsEventSubmissionManager] = a4;
  v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_shouldPostForwardedChangeNotifications] = a5;
  v21.receiver = v6;
  v21.super_class = ObjectType;
  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(v17, sel_setDelegate_, v19, v21.receiver, v21.super_class);

  return v19;
}

uint64_t sub_23DC955AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  ObjectType = swift_getObjectType();
  v3 = sub_23DCE182C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1B14();
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v10 = sub_23DCE1B08();
  v11 = sub_23DCE1EEC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v22 = v7;
    v13 = v12;
    v21 = swift_slowAlloc();
    v27 = v21;
    *(_DWORD *)v13 = 136446466;
    v14 = sub_23DCE2354();
    v23 = a1;
    v26 = sub_23DCA47EC(v14, v15, &v27);
    ObjectType = v1;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    v16 = sub_23DCE17D8();
    v26 = sub_23DCA47EC(v16, v17, &v27);
    a1 = v23;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_23DC7C000, v10, v11, "[%{public}s] Posting notification (%s) and syncing a send instruction", (uint8_t *)v13, 0x16u);
    v18 = v21;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v18, -1, -1);
    MEMORY[0x24264179C](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  }
  sub_23DC95854(a1);
  sub_23DC80338(a1);
  return sub_23DC95F00(a1);
}

uint64_t sub_23DC95854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  char *v44;
  id v45;
  void *v46;
  void *v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t aBlock;
  uint64_t v69;
  uint64_t (*v70)(uint64_t);
  void *v71;
  void (*v72)();
  uint64_t v73;

  v66 = sub_23DCE182C();
  v65 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v63 = v2;
  v64 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_23DCE1814();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v60 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_23DCE11E4();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v56 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_23DCE1C64();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_23DCE1304();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE17B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE17FC();
  v13 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  sub_23DCE17F0();
  if (v14)
  {
    v15 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = (void *)objc_opt_self();
  sub_23DCE17C0();
  sub_23DCE17A8();
  v50 = a1;
  v59 = *(void (**)(char *, uint64_t))(v10 + 8);
  v59(v12, v9);
  v17 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_createNotificationContentWithTitle_body_categoryIdentifier_, v13, v15, v17);

  sub_23DC82800(0, &qword_256CF9660, (uint64_t (*)(uint64_t))sub_23DC96758, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE39C0;
  aBlock = sub_23DCE1D30();
  v69 = v20;
  sub_23DCE20A8();
  v54 = v9;
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 72) = 15;
  v49 = v12;
  v21 = v6;
  v22 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v23 = v51;
  v22(v8, *MEMORY[0x24BE3FA50], v51);
  v24 = sub_23DCE12F8();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v23);
  aBlock = v24;
  v69 = v26;
  sub_23DCE20A8();
  v27 = v52;
  v28 = v50;
  sub_23DCE17E4();
  v29 = sub_23DCE1C34();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v55);
  *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 144) = v29;
  sub_23DCD7A38(inited);
  v30 = (void *)sub_23DCE1C70();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setUserInfo_, v30);

  v31 = v56;
  sub_23DCE11A8();
  v32 = (void *)sub_23DCE116C();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
  objc_msgSend(v18, sel_setExpirationDate_, v32);

  v33 = v60;
  sub_23DCE1820();
  v34 = v49;
  sub_23DCE1808();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v62);
  v35 = v65;
  v36 = v64;
  v37 = v28;
  v38 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v37, v66);
  v39 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v40 = (v63 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject();
  v42 = v67;
  *(_QWORD *)(v41 + 16) = v67;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v41 + v39, v36, v38);
  *(_QWORD *)(v41 + v40) = v18;
  v43 = *(void **)&v42[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager];
  v44 = v42;
  v45 = v18;
  sub_23DCE17A8();
  v46 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v72 = sub_23DC96850;
  v73 = v41;
  aBlock = MEMORY[0x24BDAC760];
  v69 = 1107296256;
  v70 = sub_23DCC6E74;
  v71 = &block_descriptor_0;
  v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v43, sel_removeDeliveredNotificationsWithCategoryIdentifier_completionHandler_, v46, v47);
  _Block_release(v47);

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v59)(v34, v54);
}

uint64_t sub_23DC95F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46[2];

  v2 = v1;
  v39 = a1;
  v46[1] = *(id *)MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v3 = sub_23DCE1B14();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE134C();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE1814();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23DCE1F34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  v40 = v2;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE406D0], v9);
  sub_23DCE1F28();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23DCE1F04();
  swift_bridgeObjectRelease();
  sub_23DCE1820();
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v7, *MEMORY[0x24BE3FB88], v38);
  sub_23DC87754((uint64_t)v18, (uint64_t)v16);
  sub_23DCE1364();
  swift_allocObject();
  v19 = sub_23DCE1358();
  v20 = *(void **)(v40
                 + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_analyticsEventSubmissionManager);
  v46[0] = 0;
  if ((objc_msgSend(v20, sel_submitEvent_error_, v19, v46) & 1) != 0)
  {
    v21 = v46[0];
    sub_23DC8FE84((uint64_t)v18, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return swift_release();
  }
  else
  {
    v23 = v46[0];
    v24 = (void *)sub_23DCE1154();

    swift_willThrow();
    swift_release();
    sub_23DC8FE84((uint64_t)v18, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    v25 = v42;
    sub_23DCE1AFC();
    v26 = v24;
    v27 = v24;
    v28 = sub_23DCE1B08();
    v29 = sub_23DCE1ED4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      v32 = (void *)swift_slowAlloc();
      v46[0] = v32;
      *(_DWORD *)v30 = 136446466;
      v33 = sub_23DCE2354();
      v45 = sub_23DCA47EC(v33, v34, (uint64_t *)v46);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2114;
      v35 = v24;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      v45 = v36;
      sub_23DCE1FD0();
      *v31 = v36;

      _os_log_impl(&dword_23DC7C000, v28, v29, "[%{public}s] Error submitting notification analytic: %{public}@)", (uint8_t *)v30, 0x16u);
      sub_23DC82800(0, (unint64_t *)&qword_254324A40, (uint64_t (*)(uint64_t))sub_23DC80D4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v32, -1, -1);
      MEMORY[0x24264179C](v30, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v25, v44);
  }
}

void sub_23DC96424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager);
  sub_23DCE17D8();
  v5 = (id)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_postNotificationWithIdentifier_content_trigger_completion_, v5, a3, 0, 0);

}

uint64_t (*sub_23DC9649C(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    v5 = sub_23DC97498;
  }
  else
  {
    v5 = 0;
  }
  sub_23DC973A8(a1);
  swift_getAtKeyPath();
  sub_23DC97390((uint64_t)v5);
  if (!v8)
    return 0;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v8;
  *(_QWORD *)(v6 + 24) = v9;
  return sub_23DC97498;
}

uint64_t sub_23DC96574@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t (*)(), uint64_t)@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t (*v13)();

  v5 = *a1;
  v6 = a1[1];
  if (*a1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    v8 = sub_23DC973A0;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  sub_23DC973A8(v5);
  v9 = a2(v8, v7);
  v11 = v10;
  sub_23DC97390((uint64_t)v8);
  if (v9)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v9;
    *(_QWORD *)(result + 24) = v11;
    v13 = sub_23DC973A0;
  }
  else
  {
    v13 = 0;
    result = 0;
  }
  *a3 = v13;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t type metadata accessor for ImbalanceUserNotificationCoordinator()
{
  return objc_opt_self();
}

void sub_23DC96758()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_256CF9668)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_256CF9668);
  }
}

uint64_t sub_23DC967C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23DCE182C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23DC96850()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23DCE182C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23DC96424(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

id sub_23DC96894(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v4 = v3;
  v8 = objc_msgSend(a1, sel_notificationManager);
  if (v8)
  {
    v9 = v8;
    swift_getMetatypeMetadata();
    v10 = a1;
    sub_23DCE2264();
    v11 = (id)HKCreateSerialDispatchQueue();
    swift_unknownObjectRelease();
    v12 = objc_allocWithZone(MEMORY[0x24BE40B48]);
    v13 = (void *)sub_23DCE1D0C();
    v14 = objc_msgSend(v12, sel_initWithProfile_clientIdentifier_queue_, v10, v13, v11);

    sub_23DC950E8();
    LOBYTE(v10) = v15;
    v16 = objc_allocWithZone(v4);
    return sub_23DC95480(v9, a2, v14, a3, v10 & 1);
  }
  else
  {

    return 0;
  }
}

uint64_t sub_23DC969D8(void *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t (*v23)();
  id v24;
  id v25;
  unsigned __int8 *v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t (*v37)();
  uint64_t v38;
  uint64_t (*v39)();
  void *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  os_log_t v56;
  uint64_t (*v57)();
  uint64_t (*v58)();
  uint64_t (*v59)();
  char *v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t (*v67)();
  uint64_t (*v68)();
  uint64_t v69;
  unint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t (*v73)();
  os_unfair_lock_s *v74;
  uint64_t *v75;
  uint64_t (*v76)();
  uint64_t result;
  _QWORD v78[2];
  id v79;
  uint64_t *v80;
  uint64_t v81;
  os_log_t v82;
  uint64_t (*v83)();
  id v84;
  uint64_t ObjectType;
  uint64_t v86;
  char *v87;
  unsigned __int8 *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92[3])();

  v2 = v1;
  v92[2] = *(uint64_t (**)())MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v4 = sub_23DCE1B14();
  v89 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v78 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v78 - v10;
  sub_23DC82800(0, (unint64_t *)&unk_256CF9670, (uint64_t (*)(uint64_t))MEMORY[0x24BE402C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v78 - v13;
  v15 = sub_23DCE182C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v78 - v20;
  v92[0] = 0;
  v84 = a1;
  v88 = (unsigned __int8 *)objc_msgSend(a1, sel_pendingNotificationSendInstructionsWithError_, v92);
  v86 = v4;
  if (!v88)
  {
    v39 = v92[0];
    v40 = (void *)sub_23DCE1154();

    swift_willThrow();
    goto LABEL_17;
  }
  v22 = v2[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_shouldPostForwardedChangeNotifications];
  v23 = v92[0];
  if (v22 != 1)
    goto LABEL_5;
  v24 = v88;
  sub_23DC809D8((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_23DC8FE84((uint64_t)v14, (unint64_t *)&unk_256CF9670, (uint64_t (*)(uint64_t))MEMORY[0x24BE402C8]);
LABEL_5:
    sub_23DCE1AFC();
    v25 = v88;
    v26 = v88;
    v27 = sub_23DCE1B08();
    v28 = sub_23DCE1EEC();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v83 = (uint64_t (*)())swift_slowAlloc();
      v92[0] = v83;
      *(_DWORD *)v30 = 136446466;
      LODWORD(v82) = v29;
      v31 = sub_23DCE2354();
      v90 = sub_23DCA47EC(v31, v32, (uint64_t *)v92);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v81 = v30 + 14;
      v33 = objc_msgSend(v26, sel_messageIdentifiers);
      sub_23DCE1E38();

      v34 = sub_23DCE1E44();
      v36 = v35;
      swift_bridgeObjectRelease();
      v90 = sub_23DCA47EC(v34, v36, (uint64_t *)v92);
      sub_23DCE1FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v27, (os_log_type_t)v82, "[%{public}s] Ignoring send instructions %{public}s", (uint8_t *)v30, 0x16u);
      v37 = v83;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v37, -1, -1);
      v38 = v30;
      v25 = v88;
      MEMORY[0x24264179C](v38, -1, -1);

    }
    else
    {

    }
    v4 = v86;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v9, v86);
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  sub_23DCE1AFC();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  v41 = v24;
  v42 = sub_23DCE1B08();
  v43 = sub_23DCE1EEC();
  v44 = v43;
  if (os_log_type_enabled(v42, v43))
  {
    v45 = swift_slowAlloc();
    v83 = (uint64_t (*)())swift_slowAlloc();
    v92[0] = v83;
    *(_DWORD *)v45 = 136446722;
    v82 = v42;
    v46 = sub_23DCE2354();
    v79 = v41;
    LODWORD(v81) = v44;
    v90 = sub_23DCA47EC(v46, v47, (uint64_t *)v92);
    v80 = &v91;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    v48 = sub_23DCE17D8();
    v90 = sub_23DCA47EC(v48, v49, (uint64_t *)v92);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    v50 = *(void (**)(char *, uint64_t))(v16 + 8);
    v50(v19, v15);
    *(_WORD *)(v45 + 22) = 2082;
    v78[1] = v45 + 24;
    v51 = v79;
    v52 = objc_msgSend(v79, sel_messageIdentifiers);
    sub_23DCE1E38();

    v53 = sub_23DCE1E44();
    v55 = v54;
    swift_bridgeObjectRelease();
    v90 = sub_23DCA47EC(v53, v55, (uint64_t *)v92);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    v56 = v82;
    _os_log_impl(&dword_23DC7C000, v82, (os_log_type_t)v81, "[%{public}s] Posting notification (%{public}s) from send instructions %{public}s", (uint8_t *)v45, 0x20u);
    v57 = v83;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v57, -1, -1);
    MEMORY[0x24264179C](v45, -1, -1);

  }
  else
  {
    v50 = *(void (**)(char *, uint64_t))(v16 + 8);
    v50(v19, v15);

  }
  v4 = v86;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v11, v86);
  sub_23DC95854((uint64_t)v21);
  v50(v21, v15);
  v25 = v88;
LABEL_14:
  v92[0] = 0;
  if (!objc_msgSend(v84, sel_markPendingNotificationInstructionsAsProcessed_error_, v25, v92))
  {
    v59 = v92[0];
    v40 = (void *)sub_23DCE1154();

    swift_willThrow();
LABEL_17:
    v60 = v87;
    sub_23DCE1AFC();
    v61 = v40;
    v62 = v40;
    v63 = sub_23DCE1B08();
    v64 = sub_23DCE1ED4();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v66 = (_QWORD *)swift_slowAlloc();
      v67 = (uint64_t (*)())swift_slowAlloc();
      v88 = v2;
      v68 = v67;
      v92[0] = v67;
      *(_DWORD *)v65 = 136446466;
      v69 = sub_23DCE2354();
      v90 = sub_23DCA47EC(v69, v70, (uint64_t *)v92);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v65 + 12) = 2114;
      v71 = v40;
      v72 = _swift_stdlib_bridgeErrorToNSError();
      v90 = v72;
      sub_23DCE1FD0();
      *v66 = v72;

      _os_log_impl(&dword_23DC7C000, v63, v64, "[%{public}s] Error processing pending send instructions: %{public}@", (uint8_t *)v65, 0x16u);
      sub_23DC82800(0, (unint64_t *)&qword_254324A40, (uint64_t (*)(uint64_t))sub_23DC80D4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v66, -1, -1);
      swift_arrayDestroy();
      v73 = v68;
      v2 = v88;
      MEMORY[0x24264179C](v73, -1, -1);
      MEMORY[0x24264179C](v65, -1, -1);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v87, v86);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v89 + 8))(v60, v4);
    }
    goto LABEL_20;
  }
  v58 = v92[0];

LABEL_20:
  v74 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_unitTest_didProcessNotificationSyncInstruction];
  swift_getKeyPath();
  v75 = (uint64_t *)&v74[4];
  v74 += 8;
  swift_retain();
  os_unfair_lock_lock(v74);
  sub_23DC96574(v75, (uint64_t (*)(uint64_t (*)(), uint64_t))sub_23DC97388, v92);
  os_unfair_lock_unlock(v74);
  v76 = v92[0];
  result = swift_release_n();
  if (v76)
  {
    ((void (*)(uint64_t))v76)(result);
    return sub_23DC97390((uint64_t)v76);
  }
  return result;
}

uint64_t (*sub_23DC97388(uint64_t a1, uint64_t a2))()
{
  return sub_23DC9649C(a1, a2);
}

uint64_t sub_23DC97390(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23DC973A0()
{
  uint64_t v0;

  return sub_23DCDA00C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_23DC973A8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23DC973B8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23DC973DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324B70)
  {
    sub_23DC82800(255, qword_254324B90, (uint64_t (*)(uint64_t))sub_23DC97458, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_23DCE212C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324B70);
  }
}

unint64_t sub_23DC97458()
{
  unint64_t result;

  result = qword_254324B80;
  if (!qword_254324B80)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_254324B80);
  }
  return result;
}

id SleepingSampleDaySummaryCurrentValueCache.registerObserver(_:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_getObjectType();
  return sub_23DC9A140(a1, a3, v3);
}

id SleepingSampleDaySummaryCurrentValueCache.unregisterObserver(_:)(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  return sub_23DC9A168(a1, v1);
}

uint64_t sub_23DC97528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x24264041C]() & 1) != 0
    && (sub_23DC99F98(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20))) & 1) != 0
    && *(_QWORD *)(a1 + *(int *)(a3 + 24)) == *(_QWORD *)(a2 + *(int *)(a3 + 24)))
  {
    return sub_23DCE11B4();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23DC975A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_23DCE1274();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCEF70], v0);
  sub_23DCE1280();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id SleepingSampleDaySummaryCurrentValueCache.__allocating_init(changeDetector:gregorianCalendarProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_23DC9A188(a1, a3, a4, v4, ObjectType, a2);
}

id SleepingSampleDaySummaryCurrentValueCache.init(changeDetector:gregorianCalendarProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_23DC9A1E4(a1, a3, a4, v4, ObjectType, a2);
}

uint64_t sub_23DC976E8@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t result;
  void *v34;
  unsigned __int8 v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);

  v60 = a2;
  v61 = a1;
  sub_23DC87938();
  v53 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v50 - v6;
  v7 = sub_23DCE1C64();
  v55 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v50 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v50 - v13;
  sub_23DC8799C();
  v56 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v50 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v50 = (uint64_t)&v50 - v22;
  v23 = sub_23DCE12E0();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23DCE1400();
  v58 = *(_QWORD *)(v27 - 8);
  v59 = v27;
  v28 = MEMORY[0x24BDAC7A8](v27);
  v57 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v50 - v31;
  (*(void (**)(uint64_t))(v2
                                  + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_gregorianCalendarProvider))(v30);
  sub_23DCE13E8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v34 = (void *)result;
    v35 = objc_msgSend((id)result, sel_isAppleWatch);

    if ((v35 & 1) != 0)
    {
LABEL_5:
      v48 = v58;
      v49 = v59;
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v32, v59);
      sub_23DCE1610();
      sub_23DCE15E0();
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v32, v49);
    }
    sub_23DCE13D0();
    v36 = v55;
    v37 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
    v37(v14, v21, v7);
    sub_23DC827C4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_23DC8799C);
    sub_23DCE13D0();
    v37(v10, &v18[*(int *)(v56 + 36)], v7);
    sub_23DC827C4((uint64_t)v18, (uint64_t (*)(_QWORD))sub_23DC8799C);
    v38 = v54;
    sub_23DCE1C40();
    v61 = *(void (**)(char *, uint64_t))(v36 + 8);
    v61(v10, v7);
    sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    result = sub_23DCE1CD0();
    if ((result & 1) != 0)
    {
      v39 = v53;
      v40 = v14;
      v41 = v51;
      v42 = &v51[*(int *)(v53 + 48)];
      v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v43(v51, v40, v7);
      v43(v42, v38, v7);
      v44 = v52;
      v45 = &v52[*(int *)(v39 + 48)];
      v37(v52, v41, v7);
      v37(v45, v42, v7);
      v43(v18, v44, v7);
      v46 = v61;
      v61(v45, v7);
      v47 = &v44[*(int *)(v39 + 48)];
      v43(v44, v41, v7);
      v43(v47, v42, v7);
      v43(&v18[*(int *)(v56 + 36)], v47, v7);
      v46(v44, v7);
      sub_23DC87A14((uint64_t)v18, v50, (uint64_t (*)(_QWORD))sub_23DC8799C);
      sub_23DCE13DC();
      goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC97B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_23DCE1640();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v10(a1, 1, v8)
    || ((*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4),
        v11 = sub_23DCB7098(),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
        (v11 & 1) == 0))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    v17 = *(int *)(type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0) + 20);
    v18 = a1 + v17;
    v19 = a2 + v17;
    v20 = sub_23DCE122C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v18, v20);
  }
  else
  {
    result = v10(a1, 1, v8);
    if ((_DWORD)result)
      return sub_23DC82858(a1, a2, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
    v13 = *(int *)(v8 + 24);
    v14 = *(_QWORD *)(a1 + v13);
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (!v15)
    {
      *(_QWORD *)(a1 + v13) = v16;
      return sub_23DC82858(a1, a2, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23DC97CF8(uint64_t a1, uint64_t a2)
{
  return sub_23DC97F84(a1, a2) & 1;
}

uint64_t sub_23DC97D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[4];
  uint64_t v26;

  v25[2] = a6;
  v10 = sub_23DCE1B14();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  if ((sub_23DCE1208() & 1) != 0)
  {
    sub_23DC8FE84(a1, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v14 = sub_23DCE1640();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a3, v14);
    v15 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
    v16 = a1 + v15[7];
    v17 = sub_23DCE11E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a5, v17);
    *(_QWORD *)(a1 + v15[5]) = a4;
    *(_QWORD *)(a1 + v15[6]) = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v15 - 1) + 56))(a1, 0, 1, v15);
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_23DCE1AFC();
    v19 = sub_23DCE1B08();
    v20 = sub_23DCE1EEC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v26 = v22;
      *(_DWORD *)v21 = 136446210;
      v25[0] = v21 + 4;
      v23 = sub_23DCE2354();
      v25[3] = sub_23DCA47EC(v23, v24, &v26);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v19, v20, "[%{public}s] Ignoring invalidated population attempt", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v22, -1, -1);
      MEMORY[0x24264179C](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_23DC97F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  uint64_t (*v21)(_QWORD);
  char v22;
  void (*v23)(char *, id *, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a2;
  v41 = a1;
  v38 = sub_23DCE1C64();
  v40 = *(_QWORD *)(v38 - 8);
  v2 = MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v32 - v4;
  sub_23DC8799C();
  v34 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v36 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - v8;
  v10 = sub_23DCE1400();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23DCE15C8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC9B6CC();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (id *)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DC82858(v41, (uint64_t)v20, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    v22 = 0;
  }
  else
  {
    v33 = v15;
    v23 = *(void (**)(char *, id *, uint64_t))(v15 + 32);
    v41 = v14;
    v23(v17, v20, v14);
    sub_23DCE15EC();
    sub_23DCE13D0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v24 = v37;
    sub_23DCE1514();
    sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v25 = v38;
    v26 = sub_23DCE1CC4();
    v28 = v39;
    v27 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v39, v24, v25);
    v29 = v36;
    sub_23DC82858((uint64_t)v9, v36, (uint64_t (*)(_QWORD))sub_23DC8799C);
    if ((v26 & 1) != 0)
      v22 = sub_23DCE1CD0();
    else
      v22 = 0;
    sub_23DC827C4(v29, (uint64_t (*)(_QWORD))sub_23DC8799C);
    v30 = *(void (**)(char *, uint64_t))(v27 + 8);
    v30(v28, v25);
    v30(v24, v25);
    sub_23DC827C4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23DC8799C);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v41);
  }
  return v22 & 1;
}

Swift::Void __swiftcall SleepingSampleDaySummaryCurrentValueCache.sleepingSampleDataTypesAddedInDateInterval(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[7];

  ObjectType = swift_getObjectType();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_23DC98430(v5, (uint64_t)a1._rawValue, ObjectType, (char *)aBlock);
  os_unfair_lock_unlock(v6);
  LOBYTE(ObjectType) = aBlock[0];
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers);
  v8 = swift_allocObject();
  *(Swift::OpaquePointer *)(v8 + 16) = a1;
  *(_BYTE *)(v8 + 24) = ObjectType;
  v9 = *(void **)(v7 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_23DC9A508;
  *(_QWORD *)(v10 + 24) = v8;
  aBlock[4] = sub_23DC9A538;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23DC99F50;
  aBlock[3] = &block_descriptor_1;
  v11 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_notifyObservers_, v11);
  _Block_release(v11);
  swift_release();
}

uint64_t sub_23DC98430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  BOOL v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t result;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v5 = v4;
  v46 = a3;
  v47 = (uint8_t *)a2;
  v54 = a4;
  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v44 - v8;
  v10 = sub_23DCE122C();
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE1B14();
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - v16;
  v18 = type metadata accessor for SleepingSampleCacheRange();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = v24;
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25((char *)a1, 1, v21)
    || (v45 = v4,
        sub_23DC82858(a1, (uint64_t)v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry), sub_23DC98940((uint64_t)v20), v5 = v45, sub_23DC827C4((uint64_t)v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry), v26 = sub_23DC81870((uint64_t)v47), sub_23DC827C4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SleepingSampleCacheRange), !v26))
  {
    sub_23DC9BC3C(a1, (uint64_t)v9, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v33 = v25(v9, 1, v21);
    result = sub_23DC8FE84((uint64_t)v9, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    if (v33 != 1)
    {
      v41 = 0;
      goto LABEL_12;
    }
    sub_23DCE1AFC();
    v35 = sub_23DCE1B08();
    v36 = sub_23DCE1EEC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v56 = v38;
      v45 = v5;
      *(_DWORD *)v37 = 136446210;
      v47 = v37 + 4;
      v39 = sub_23DCE2354();
      v55 = sub_23DCA47EC(v39, v40, &v56);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v35, v36, "[%{public}s] Resetting cache token for samples added while cache is empty", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v38, -1, -1);
      MEMORY[0x24264179C](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v50);
  }
  else
  {
    sub_23DCE1AFC();
    v27 = sub_23DCE1B08();
    v28 = sub_23DCE1EEC();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v56 = v30;
      *(_DWORD *)v29 = 136446210;
      v47 = v29 + 4;
      v31 = sub_23DCE2354();
      v55 = sub_23DCA47EC(v31, v32, &v56);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v27, v28, "[%{public}s] Evicting cache for samples added in the cached range", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v30, -1, -1);
      MEMORY[0x24264179C](v29, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v50);
  }
  sub_23DC8FE84(a1, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  v41 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(a1, 1, 1, v21);
  v42 = v51;
  sub_23DCE1220();
  v43 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v52 + 40))(a1 + *(int *)(v43 + 20), v42, v53);
LABEL_12:
  *v54 = v41;
  return result;
}

uint64_t sub_23DC98940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v27 - v2;
  v3 = sub_23DCE12E0();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23DCE1400();
  v6 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23DCE1C64();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23DCE1100();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23DCE11E4();
  v34 = *(_QWORD *)(v15 - 8);
  v35 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1628();
  sub_23DCE15EC();
  sub_23DCE13F4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  sub_23DCE1BBC();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v32);
  v18 = v10;
  v19 = v33;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v30);
  sub_23DCE10DC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_23DC99710(v19);
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v20 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
  v21 = (id)HKRollingBaselineConfigurationForQuantityType();

  if (v21)
  {
    objc_msgSend(v21, sel_maximumWindowDuration);
    v23 = v22;

  }
  else
  {
    v23 = 0;
  }
  v24 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v36, v17, v35);
  v25 = type metadata accessor for SleepingSampleCacheRange();
  result = sub_23DC9BBE0((uint64_t)v19, v24 + *(int *)(v25 + 20));
  *(_QWORD *)(v24 + *(int *)(v25 + 24)) = v23;
  return result;
}

uint64_t sub_23DC98C2C(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v5 = *a1;
  v6 = a1[1];
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a2, ObjectType, v6);
  if ((a3 & 1) != 0)
  {
    swift_getObjectType();
    result = swift_conformsToProtocol2();
    if (result)
      v9 = result;
    else
      v9 = 0;
    if (result)
      v10 = v5;
    else
      v10 = 0;
    if (v10)
    {
      v11 = swift_getObjectType();
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      v12(a2, v11, v9);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t SleepingSampleDaySummaryCurrentValueCache.sleepingSampleDataTypesRemoved(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[7];

  ObjectType = swift_getObjectType();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  v5 = v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_23DC98E50(v5, ObjectType);
  os_unfair_lock_unlock(v6);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  v9 = *(void **)(v7 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_23DC9A564;
  *(_QWORD *)(v10 + 24) = v8;
  aBlock[4] = sub_23DC9BD54;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23DC99F50;
  aBlock[3] = &block_descriptor_13;
  v11 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_notifyObservers_, v11);
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_23DC98E50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a2;
  v3 = sub_23DCE122C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1B14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v11 = sub_23DCE1B08();
  v12 = sub_23DCE1EEC();
  if (os_log_type_enabled(v11, v12))
  {
    v26 = v6;
    v13 = swift_slowAlloc();
    v25 = v7;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v27 = a1;
    v16 = v15;
    v30 = v15;
    v24 = v8;
    *(_DWORD *)v14 = 136446210;
    v23 = v14 + 4;
    v17 = sub_23DCE2354();
    v29 = sub_23DCA47EC(v17, v18, &v30);
    sub_23DCE1FD0();
    v6 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v11, v12, "[%{public}s] Evicting cache for samples removed", v14, 0xCu);
    swift_arrayDestroy();
    v19 = v16;
    a1 = v27;
    MEMORY[0x24264179C](v19, -1, -1);
    MEMORY[0x24264179C](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_23DC8FE84(a1, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  v20 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
  sub_23DCE1220();
  v21 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(a1 + *(int *)(v21 + 20), v6, v3);
}

Swift::String __swiftcall SleepingSampleDaySummaryCurrentValueCache.diagnosticDescription()()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  Swift::String result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v26 = sub_23DCE11E4();
  v22 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (void (*)(char *, uint64_t))((char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_23DCE1640();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v0;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  v14 = v13 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v13 + 16);
  v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_23DC9BC3C(v14, (uint64_t)v8, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  os_unfair_lock_unlock(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23DC8FE84((uint64_t)v8, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_23DCE20F0();
    swift_bridgeObjectRelease();
    v28 = 0xD000000000000014;
    v29 = 0x800000023DCE59E0;
    sub_23DCE11CC();
    sub_23DC976E8(v2, (uint64_t)v5);
    (*(void (**)(_QWORD, uint64_t))(v22 + 8))(v2, v26);
    sub_23DC80074(&qword_256CF9518, (uint64_t (*)(uint64_t))MEMORY[0x24BE40020], MEMORY[0x24BE40030]);
    v16 = v25;
    sub_23DCE224C();
    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v16);
    v17 = v28;
    v18 = (void *)v29;
  }
  else
  {
    sub_23DC87A14((uint64_t)v8, (uint64_t)v12, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_23DCE20F0();
    sub_23DCE1D54();
    sub_23DC80074(&qword_256CF9518, (uint64_t (*)(uint64_t))MEMORY[0x24BE40020], MEMORY[0x24BE40030]);
    sub_23DCE224C();
    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    sub_23DCE1D54();
    v27 = *(_QWORD *)(*(_QWORD *)&v12[*(int *)(v9 + 20)] + 16);
    sub_23DCE224C();
    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    sub_23DCE1D54();
    v27 = *(_QWORD *)&v12[*(int *)(v9 + 24)];
    sub_23DCE224C();
    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    sub_23DCE1D54();
    sub_23DC80074(&qword_256CF9690, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
    sub_23DCE224C();
    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    sub_23DCE1D54();
    v17 = v28;
    v18 = (void *)v29;
    sub_23DC827C4((uint64_t)v12, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  }
  v19 = v17;
  v20 = v18;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

id SleepingSampleDaySummaryCurrentValueCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SleepingSampleDaySummaryCurrentValueCache.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SleepingSampleDaySummaryCurrentValueCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23DC99688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_getObjectType();
  return sub_23DC9A140(a1, a3, v3);
}

id sub_23DC996CC(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  return sub_23DC9A168(a1, v1);
}

uint64_t sub_23DC99710@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t result;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  uint64_t v67;
  uint64_t v68;
  void **v69;
  void **v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void **v75;
  char *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  void **v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char v118;

  v2 = v1;
  v103 = a1;
  v3 = sub_23DCE11E4();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v116 = v3;
  v113 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE15C8();
  v108 = *(_QWORD *)(v7 - 8);
  v109 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v104 = (char *)&v94 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v105 = (char *)&v94 - v13;
  sub_23DC9B6CC();
  v115 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v100 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v94 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v107 = (void **)((char *)&v94 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v112 = (uint64_t)&v94 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v94 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v94 - v28;
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v102 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v99 = (char *)&v94 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v101 = (char *)&v94 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v94 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (char *)&v94 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v111 = (char *)&v94 - v43;
  v44 = *(_QWORD *)(v2
                  + *(int *)(type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0)
                           + 20));
  v45 = *(_QWORD *)(v44 + 16);
  v114 = v44;
  if (v45)
  {
    v106 = v39;
    v94 = v10;
    v96 = v20;
    v95 = v6;
    v46 = v45;
    v97 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v47 = v44 + v97;
    v110 = *(_QWORD *)(v15 + 72);
    swift_bridgeObjectRetain();
    v98 = v46;
    while (1)
    {
      sub_23DC82858(v47, (uint64_t)v29, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      sub_23DC82858((uint64_t)v29, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v117 = *(void **)v27;
        v48 = v117;
        v118 = v27[8];
        sub_23DC87A9C();
        swift_bridgeObjectRetain();
        swift_willThrowTypedImpl();

        v49 = v113;
        v50 = (uint64_t)v111;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v111, 1, 1, v116);
      }
      else
      {
        v51 = v108;
        v52 = v105;
        v53 = v27;
        v54 = v42;
        v55 = v27;
        v56 = v29;
        v57 = v109;
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v105, v53, v109);
        swift_bridgeObjectRetain();
        v50 = (uint64_t)v111;
        sub_23DCE14F0();
        v58 = v57;
        v29 = v56;
        v27 = v55;
        v42 = v54;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v58);
        v49 = v113;
      }
      sub_23DC827C4((uint64_t)v29, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      sub_23DC9BBE0(v50, (uint64_t)v42);
      swift_bridgeObjectRelease();
      v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
      v60 = v59(v42, 1, v116);
      result = sub_23DC8FE84((uint64_t)v42, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v60 != 1)
        break;
      v47 += v110;
      if (!--v46)
        goto LABEL_18;
    }
    v62 = v98 + 1;
    v63 = v114;
    v64 = v114 + v97 + v110 * (v98 - 1);
    v65 = -v110;
    v66 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    while (1)
    {
      if (v62 - 2 >= *(_QWORD *)(v63 + 16))
      {
        __break(1u);
        goto LABEL_26;
      }
      v67 = v112;
      sub_23DC82858(v64, v112, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      v68 = v67;
      v69 = v107;
      sub_23DC82858(v68, (uint64_t)v107, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v70 = v69;
        v71 = *v69;
        v117 = v71;
        v118 = *((_BYTE *)v70 + 8);
        sub_23DC87A9C();
        swift_willThrowTypedImpl();

        v72 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v106, 1, 1, v116);
      }
      else
      {
        v74 = v108;
        v73 = v109;
        v75 = v69;
        v76 = v104;
        (*(void (**)(char *, void **, uint64_t))(v108 + 32))(v104, v75, v109);
        v72 = (uint64_t)v106;
        sub_23DCE14F0();
        v77 = v73;
        v63 = v114;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v77);
      }
      sub_23DC827C4(v112, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      v78 = v59((char *)v72, 1, v116);
      result = sub_23DC8FE84(v72, (unint64_t *)&unk_2543244C0, v66);
      if (v78 != 1)
        break;
      --v62;
      v64 += v65;
      if (v62 < 2)
      {
        __break(1u);
        goto LABEL_18;
      }
    }
    v79 = (uint64_t)v96;
    sub_23DC82858(v64, (uint64_t)v96, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
    v80 = v100;
    sub_23DC82858(v79, v100, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v117 = *(void **)v80;
      v81 = v117;
      v118 = *(_BYTE *)(v80 + 8);
      sub_23DC87A9C();
      swift_willThrowTypedImpl();

      v82 = v113;
      v83 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v99, 1, 1, v116);
    }
    else
    {
      v85 = v108;
      v84 = v109;
      v86 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v94, v80, v109);
      v83 = (uint64_t)v99;
      sub_23DCE14F0();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v84);
      v82 = v113;
    }
    v88 = (uint64_t)v101;
    v87 = (uint64_t)v102;
    sub_23DC827C4(v79, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
    sub_23DC9BBE0(v83, v88);
    sub_23DC9BC3C(v88, v87, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    result = v59((char *)v87, 1, v116);
    if ((_DWORD)result != 1)
    {
      v89 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
      v90 = v95;
      v91 = v116;
      v89(v95, v87, v116);
      sub_23DC8FE84(v88, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      v92 = v82;
      v93 = v103;
      v89(v103, (uint64_t)v90, v91);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v93, 0, 1, v91);
      return swift_bridgeObjectRelease();
    }
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56))(v103, 1, 1, v116);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23DC99EE8(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  swift_unknownObjectRetain();
  swift_getObjectType();
  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (v6)
  {
    v8[0] = v6;
    v8[1] = v5;
    a2(v8);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_23DC99F50(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23DC99F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;

  sub_23DC9B6CC();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v14 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v19 = *(_QWORD *)(v8 + 72);
      v13 = v11 - 1;
      do
      {
        sub_23DC82858(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
        sub_23DC82858(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
        sub_23DCE15C8();
        sub_23DC80074(&qword_256CF9720, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], MEMORY[0x24BE3FFC8]);
        sub_23DC9BB9C();
        sub_23DC87A9C();
        v14 = sub_23DCE230C();
        sub_23DC827C4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
        sub_23DC827C4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
        v16 = v13-- != 0;
        if ((v14 & 1) == 0)
          break;
        v12 += v19;
      }
      while (v16);
    }
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

id sub_23DC9A140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a3+ OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers)+ 16), sel_registerObserver_queue_, a1, a2);
}

id sub_23DC9A168(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a2+ OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers)+ 16), sel_unregisterObserver_, a1);
}

id sub_23DC9A188(uint64_t a1, uint64_t a2, uint64_t a3, Class a4, uint64_t a5, uint64_t a6)
{
  return sub_23DC9A1E4(a1, a2, a3, (char *)objc_allocWithZone(a4), a5, a6);
}

id sub_23DC9A1E4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  objc_class *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void (*v30)(void);
  id v31;
  _QWORD v33[2];
  objc_super v34;

  v33[1] = a5;
  v33[0] = swift_getObjectType();
  v11 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state;
  v15 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
  v16 = a4;
  sub_23DCE1220();
  sub_23DC9BC94();
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + ((*(unsigned int *)(*(_QWORD *)v17 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_23DC82858((uint64_t)v13, v17 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v17 + 16), type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  sub_23DC827C4((uint64_t)v13, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  *(_QWORD *)&a4[v14] = v17;
  v18 = &v16[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_changeDetector];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a6;
  v19 = &v16[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_gregorianCalendarProvider];
  *(_QWORD *)v19 = a2;
  *((_QWORD *)v19 + 1) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  v20 = (objc_class *)v33[0];
  sub_23DCE2354();
  sub_23DC802D0(0, &qword_254324A50);
  v21 = (void *)sub_23DCE1FA0();
  sub_23DC82800(0, &qword_2543247B0, (uint64_t (*)(uint64_t))sub_23DC9BCF8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObserverSet);
  v22 = swift_allocObject();
  v23 = objc_allocWithZone(MEMORY[0x24BDD3DD0]);
  v24 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v23, sel_initWithName_loggingCategory_, v24, v21);

  *(_QWORD *)(v22 + 16) = v25;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers] = v22;

  v34.receiver = v16;
  v34.super_class = v20;
  v26 = objc_msgSendSuper2(&v34, sel_init);
  v27 = (void *)objc_opt_self();
  v28 = v26;
  v29 = objc_msgSend(v27, sel_sharedDiagnosticManager);
  objc_msgSend(v29, sel_addObject_, v28);

  v30 = *(void (**)(void))(a6 + 8);
  v31 = v28;
  v30();

  swift_unknownObjectRelease();
  swift_release();
  return v31;
}

uint64_t sub_23DC9A4E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23DC9A508(uint64_t *a1)
{
  uint64_t v1;

  return sub_23DC98C2C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_23DC9A514()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DC9A538(uint64_t a1)
{
  uint64_t v1;

  return sub_23DC99EE8(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_23DC9A540()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23DC9A564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(a1 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, ObjectType, v3);
}

uint64_t type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_254324B48);
}

uint64_t dispatch thunk of SleepingSampleDaySummaryCurrentValueCacheObserver.sleepingSampleDaySummaryCurrentValueCacheDidEvictCanonicalCacheEntryForSamplesAddedInDateInterval(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for SleepingSampleDaySummaryCurrentValueCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for SleepingSampleDaySummaryCurrentValueCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SleepingSampleDaySummaryCurrentValueCache.__allocating_init(changeDetector:gregorianCalendarProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *sub_23DC9A5F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_23DCE1640();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + v7[5]) = *(uint64_t *)((char *)a2 + v7[5]);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      v12 = v7[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23DCE11E4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_23DCE122C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_23DC9A780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = sub_23DCE1640();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    swift_bridgeObjectRelease();
    v6 = a1 + *(int *)(v4 + 28);
    v7 = sub_23DCE11E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_23DCE122C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

char *sub_23DC9A83C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23DCE1640();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    v10 = v6[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_23DCE11E4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23DCE122C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

char *sub_23DC9A998(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v13 = sub_23DCE1640();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v14 = v6[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_23DCE11E4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_9;
    }
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v10)
    {
      v19 = sub_23DCE1640();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(a1, a2, v19);
      *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v20 = v6[7];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = sub_23DCE11E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
      goto LABEL_9;
    }
    sub_23DC827C4((uint64_t)a1, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, v11);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_9:
  v24 = *(int *)(a3 + 20);
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_23DCE122C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

char *sub_23DC9ABB8(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_23DCE1640();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    v10 = v6[7];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_23DCE11E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_23DCE122C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

char *sub_23DC9AD00(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v13 = sub_23DCE1640();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v14 = v6[7];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_23DCE11E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_9;
    }
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v10)
    {
      v18 = sub_23DCE1640();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(a1, a2, v18);
      *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
      v19 = v6[7];
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = sub_23DCE11E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
      goto LABEL_9;
    }
    sub_23DC827C4((uint64_t)a1, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, v11);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_9:
  v23 = *(int *)(a3 + 20);
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23DCE122C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_23DC9AF04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DC9AF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_23DCE122C();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23DC9AF9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DC9AFA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_23DCE122C();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_254324868);
}

uint64_t sub_23DC9B050(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DC9B084()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DC82800(319, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_23DCE122C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_23DC9B120(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23DCE1640();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23DCE11E4();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_23DC9B1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_23DCE11E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23DC9B258(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23DCE11E4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t sub_23DC9B2FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_23DC9B3A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_23DC9B430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23DC9B4C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DC9B4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23DCE1640();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23DCE11E4();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23DC9B57C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DC9B588(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23DCE1640();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = sub_23DCE11E4();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23DC9B62C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23DCE1640();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE11E4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_23DC9B6CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325860)
  {
    sub_23DCE15C8();
    sub_23DC87A9C();
    v0 = sub_23DCE2300();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325860);
  }
}

uint64_t sub_23DC9B734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;

  v4 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC9BB24();
  v8 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v29 = (uint64_t)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v27 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v27 - v17;
  v27[0] = a1;
  sub_23DC9BC3C(a1, (uint64_t)v27 - v17, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  v27[1] = a2;
  sub_23DC9BC3C(a2, (uint64_t)v16, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  v19 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DC9BC3C((uint64_t)v18, (uint64_t)v10, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  sub_23DC9BC3C((uint64_t)v16, v19, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) != 1)
  {
    v22 = (uint64_t)v28;
    v23 = v29;
    sub_23DC9BC3C((uint64_t)v10, v29, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    if (v20(v19, 1, v4) != 1)
    {
      v24 = v22;
      sub_23DC87A14(v19, v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      if ((MEMORY[0x24264041C](v23, v22) & 1) != 0
        && (sub_23DC99F98(*(_QWORD *)(v23 + *(int *)(v4 + 20)), *(_QWORD *)(v22 + *(int *)(v4 + 20))) & 1) != 0
        && *(_QWORD *)(v23 + *(int *)(v4 + 24)) == *(_QWORD *)(v22 + *(int *)(v4 + 24)))
      {
        v25 = sub_23DCE11B4();
        sub_23DC827C4(v24, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC8FE84((uint64_t)v16, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC8FE84((uint64_t)v18, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC827C4(v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC8FE84((uint64_t)v10, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        if ((v25 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_23DC827C4(v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC8FE84((uint64_t)v16, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC8FE84((uint64_t)v18, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC827C4(v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_23DC8FE84((uint64_t)v10, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      }
LABEL_14:
      v21 = 0;
      return v21 & 1;
    }
    sub_23DC8FE84((uint64_t)v16, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    sub_23DC8FE84((uint64_t)v18, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    sub_23DC827C4(v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
LABEL_7:
    sub_23DC827C4((uint64_t)v10, (uint64_t (*)(_QWORD))sub_23DC9BB24);
    goto LABEL_14;
  }
  sub_23DC8FE84((uint64_t)v16, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  sub_23DC8FE84((uint64_t)v18, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  if (v20(v19, 1, v4) != 1)
    goto LABEL_7;
  sub_23DC8FE84((uint64_t)v10, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
LABEL_4:
  type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  v21 = sub_23DCE1208();
  return v21 & 1;
}

void sub_23DC9BB24()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_256CF9718)
  {
    sub_23DC82800(255, &qword_254324B60, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_256CF9718);
  }
}

unint64_t sub_23DC9BB9C()
{
  unint64_t result;

  result = qword_256CF9728;
  if (!qword_256CF9728)
  {
    result = MEMORY[0x2426416D0](&unk_23DCE3DE8, &type metadata for SleepingSampleDaySummarySequenceError);
    atomic_store(result, (unint64_t *)&qword_256CF9728);
  }
  return result;
}

uint64_t sub_23DC9BBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DC9BC3C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23DC82800(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_23DC9BC94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324B68)
  {
    type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(255);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_23DCE212C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324B68);
  }
}

unint64_t sub_23DC9BCF8()
{
  unint64_t result;

  result = qword_2543244D0;
  if (!qword_2543244D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2543244D0);
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadBaselineCalculatorFactory()
{
  return objc_opt_self();
}

uint64_t sub_23DC9BD78()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_23DCE1D0C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    v3 = (void *)sub_23DCE1D0C();
    v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (v4)
    {
      v5 = sub_23DCE1D30();
      v7 = v6;

      v8 = v5 == 1095587653 && v7 == 0xE400000000000000;
      if (v8 || (sub_23DCE2270() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        return type metadata accessor for EWMABaselineCalculator();
      }
      if (v5 != 0x6942746E65636552 || v7 != 0xEA00000000007361)
        sub_23DCE2270();
      swift_bridgeObjectRelease();
    }

  }
  return type metadata accessor for RecentBiasBaselineCalculator();
}

void sub_23DC9BF18(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  sub_23DC9CF64();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23DCE3B80;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_features);

    if (v5)
    {
      v6 = (void *)objc_opt_self();
      v7 = objc_msgSend(v5, sel_harmonia);

      *(_QWORD *)(v2 + 32) = objc_msgSend(v6, sel_featureFlagIsEnabled_, v7);
      *(_QWORD *)(v2 + 40) = objc_msgSend(v6, sel_activeRemoteDeviceIsPresentWhenRequiredForRegionAvailabilityOrDeviceCapabilityForFeatureWithIdentifier_, a1);
      *(_QWORD *)(v2 + 48) = objc_msgSend(v6, sel_capabilityIsSupportedOnActiveRemoteDeviceForFeatureWithIdentifier_, a1);
      sub_23DCE1370();
      v8 = (void *)sub_23DCE1D0C();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v6, sel_watchAppIsInstalledForBundleIdentifier_, v8);

      *(_QWORD *)(v2 + 56) = v9;
      *(_QWORD *)(v2 + 64) = objc_msgSend(v6, sel_notAgeGatedForUserDefaultsKey_, *MEMORY[0x24BDD2F78]);
      sub_23DCE1DCC();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23DC9C0C0()
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;

  if ((HDIsUnitTesting() & 1) != 0)
    return MEMORY[0x24BEE4AF8];
  sub_23DC9CF64();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23DCE3B90;
  v2 = (void *)objc_opt_self();
  sub_23DC82800(0, &qword_254324A78, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23DCE3BA0;
  v4 = (void *)*MEMORY[0x24BDD2E78];
  *(_QWORD *)(v3 + 32) = *MEMORY[0x24BDD2E78];
  type metadata accessor for HKFeatureIdentifier(0);
  v5 = v4;
  v6 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v2, sel_onboardingRecordsArePresentForPrerequisiteFeaturesWithIdentifiers_, v6);

  *(_QWORD *)(v1 + 32) = v7;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23DCE39B0;
  *(_QWORD *)(v8 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BB8]), sel_initWithFeatureIdentifier_isOnWhenSettingIsAbsent_, v5, 0);
  sub_23DCE1DCC();
  sub_23DC802D0(0, (unint64_t *)&unk_254324A10);
  v9 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v2, sel_prerequisiteFeaturesAreOnWithFeatureSettings_, v9);

  *(_QWORD *)(v1 + 40) = v10;
  *(_QWORD *)(v1 + 48) = objc_msgSend(v2, sel_wristDetectionIsEnabledForActiveWatch);
  sub_23DCE1DCC();
  return v1;
}

id sub_23DC9C2B4()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  uint64_t v58;

  v0 = *MEMORY[0x24BDD2E80];
  sub_23DC82800(0, (unint64_t *)&unk_254324A80, (uint64_t (*)(uint64_t))sub_23DC9CE94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE3BB0;
  v2 = (void *)*MEMORY[0x24BDD2CB8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD2CB8];
  sub_23DC9CF64();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23DCE39B0;
  v4 = v2;
  sub_23DC9BF18(v0);
  sub_23DC9CFBC(0, (unint64_t *)&unk_2543249F8);
  v5 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 32) = v5;
  sub_23DCE1DCC();
  v6 = (void *)*MEMORY[0x24BDD2C38];
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = v6;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23DCE3B90;
  v8 = v6;
  sub_23DC9BF18(v0);
  v9 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 32) = v9;
  sub_23DC9C0C0();
  v10 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 40) = v10;
  v11 = (void *)objc_opt_self();
  sub_23DCE1D30();
  v12 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsPresent_, v12);

  *(_QWORD *)(v7 + 48) = v13;
  sub_23DCE1DCC();
  v14 = (void *)*MEMORY[0x24BDD2C50];
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = v14;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23DCE3B90;
  v16 = v14;
  v17 = v0;
  v58 = v0;
  sub_23DC9BF18(v0);
  v18 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 32) = v18;
  v19 = *MEMORY[0x24BDD2F78];
  *(_QWORD *)(v15 + 40) = objc_msgSend(v11, sel_notAgeGatedForUserDefaultsKey_, *MEMORY[0x24BDD2F78]);
  sub_23DCE1D30();
  v20 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsNotPresent_, v20);

  *(_QWORD *)(v15 + 48) = v21;
  sub_23DCE1DCC();
  v22 = (void *)*MEMORY[0x24BDD2C58];
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = v22;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_23DCE3B90;
  v24 = v22;
  sub_23DC9BF18(v17);
  v25 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 32) = v25;
  *(_QWORD *)(v23 + 40) = objc_msgSend(v11, sel_notAgeGatedForUserDefaultsKey_, v19);
  sub_23DCE1D30();
  v26 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsNotPresent_, v26);

  *(_QWORD *)(v23 + 48) = v27;
  sub_23DCE1DCC();
  v28 = (void *)*MEMORY[0x24BDD2C70];
  *(_QWORD *)(inited + 88) = v23;
  *(_QWORD *)(inited + 96) = v28;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23DCE39B0;
  v30 = *MEMORY[0x24BDD4608];
  v31 = v28;
  *(_QWORD *)(v29 + 32) = objc_msgSend(v11, sel_notificationAuthorizedWithBundleIdentifier_, v30);
  sub_23DCE1DCC();
  v32 = (void *)*MEMORY[0x24BDD2C78];
  *(_QWORD *)(inited + 104) = v29;
  *(_QWORD *)(inited + 112) = v32;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_23DCE3B90;
  v34 = v32;
  sub_23DC9BF18(v58);
  v35 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v33 + 32) = v35;
  *(_QWORD *)(v33 + 40) = objc_msgSend(v11, sel_notAgeGatedForUserDefaultsKey_, v19);
  sub_23DCE1D30();
  v36 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsPresent_, v36);

  *(_QWORD *)(v33 + 48) = v37;
  sub_23DCE1DCC();
  v38 = (void *)*MEMORY[0x24BDD2CA8];
  *(_QWORD *)(inited + 120) = v33;
  *(_QWORD *)(inited + 128) = v38;
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_23DCE3B80;
  v40 = v38;
  sub_23DC9BF18(v58);
  v41 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 32) = v41;
  sub_23DC9C0C0();
  v42 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 40) = v42;
  *(_QWORD *)(v39 + 48) = objc_msgSend(v11, sel_notificationAuthorizedWithBundleIdentifier_, v30);
  sub_23DCE1D30();
  v43 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v44 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsPresent_, v43);

  *(_QWORD *)(v39 + 56) = v44;
  sub_23DCE1D30();
  v45 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v11, sel_notificationsOnForUserDefaultsKey_, v45);

  *(_QWORD *)(v39 + 64) = v46;
  sub_23DCE1DCC();
  v47 = (void *)*MEMORY[0x24BDD2CB0];
  *(_QWORD *)(inited + 136) = v39;
  *(_QWORD *)(inited + 144) = v47;
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_23DCE39A0;
  v49 = v47;
  sub_23DC9BF18(v58);
  v50 = sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v48 + 32) = v50;
  sub_23DCE1D30();
  v51 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(v11, sel_notificationsOnForUserDefaultsKey_, v51);

  *(_QWORD *)(v48 + 40) = v52;
  sub_23DCE1DCC();
  *(_QWORD *)(inited + 152) = v48;
  *(_QWORD *)(inited + 160) = sub_23DCE1F64();
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_23DCE39B0;
  *(_QWORD *)(v53 + 32) = objc_msgSend(v11, sel_heartRateIsEnabledInPrivacy);
  sub_23DCE1DCC();
  *(_QWORD *)(inited + 168) = v53;
  sub_23DCD7B98(inited);
  v54 = objc_allocWithZone(MEMORY[0x24BDD3BC8]);
  type metadata accessor for HKFeatureAvailabilityContext(0);
  sub_23DC9CF00();
  sub_23DC9D00C();
  v55 = (void *)sub_23DCE1C70();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v54, sel_initWithRequirementsByContext_, v55);

  return v56;
}

id sub_23DC9CA50(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id result;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;

  sub_23DC82800(0, (unint64_t *)&unk_254324700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v33 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v33 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v33 - v12;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v15 = result;
    v16 = objc_msgSend(result, sel_isAppleWatch);

    if (v16)
    {
      v17 = sub_23DCE122C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
    }
    else
    {
      v18 = HKNRCAPABILITY_HARMONIA();
      if (v18)
      {
        v19 = v18;
        sub_23DCE1214();

        v20 = sub_23DCE122C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
      }
      else
      {
        v21 = sub_23DCE122C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v8, 1, 1, v21);
      }
      sub_23DC9CD88((uint64_t)v8, (uint64_t)v11);
    }
    sub_23DC9CD88((uint64_t)v11, (uint64_t)v13);
    v22 = (void *)*MEMORY[0x24BDD2E80];
    v23 = a1;
    v24 = v22;
    v25 = sub_23DC9C2B4();
    v34 = v13;
    sub_23DC9CDE4((uint64_t)v13, (uint64_t)v5);
    v26 = objc_msgSend((id)objc_opt_self(), sel_uncheckedAvailability);
    v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE40AC0]), sel_init);
    sub_23DC802D0(0, &qword_254324A50);
    v28 = (void *)sub_23DCE1FA0();
    v29 = sub_23DCE122C();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v5, 1, v29) != 1)
    {
      v31 = (void *)sub_23DCE11FC();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    }
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE40AB8]), sel_initWithProfile_featureIdentifier_availabilityRequirements_currentOnboardingVersion_pairedDeviceCapability_regionAvailabilityProvider_disableAndExpiryProvider_loggingCategory_, v23, v24, v25, 1, v31, v26, v27, v28);

    sub_23DC9CE40((uint64_t)v34);
    return v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKNRCAPABILITY_HARMONIA()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("210C1233-537B-4A1E-8EE0-253962851B43"));
}

uint64_t sub_23DC9CD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, (unint64_t *)&unk_254324700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DC9CDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, (unint64_t *)&unk_254324700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DC9CE40(uint64_t a1)
{
  uint64_t v2;

  sub_23DC82800(0, (unint64_t *)&unk_254324700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23DC9CE94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543249E8)
  {
    type metadata accessor for HKFeatureAvailabilityContext(255);
    sub_23DC9CF00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543249E8);
  }
}

void sub_23DC9CF00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324970)
  {
    sub_23DC9CFBC(255, (unint64_t *)&qword_254324A08);
    v0 = sub_23DCE1E20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324970);
  }
}

void sub_23DC9CF64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324A90)
  {
    v0 = sub_23DCE2258();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324A90);
  }
}

uint64_t sub_23DC9CFBC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_23DC9D00C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543249C0;
  if (!qword_2543249C0)
  {
    type metadata accessor for HKFeatureAvailabilityContext(255);
    result = MEMORY[0x2426416D0](&unk_23DCE34CC, v1);
    atomic_store(result, (unint64_t *)&qword_2543249C0);
  }
  return result;
}

uint64_t dispatch thunk of SleepingSampleChangeProvider.registerObserver(_:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SleepingSampleChangeProvider.unregisterObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SleepingSampleChangeObserver.sleepingSampleDataTypesAddedInDateInterval(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SleepingSampleChangeObserver.sleepingSampleDataTypesRemoved(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

char *sub_23DC9D074(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t *v18;
  void *v19;
  char *result;
  void *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  objc_super v32;

  v31 = a4;
  ObjectType = swift_getObjectType();
  v29 = sub_23DCE1A30();
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4;
  v12 = objc_msgSend(a1, sel_dataManager);
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_dataManager] = v12;
  sub_23DC802D0(0, &qword_254324A50);
  v13 = (void *)sub_23DCE1FA0();
  sub_23DC82800(0, &qword_2543247B0, (uint64_t (*)(uint64_t))sub_23DC9BCF8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObserverSet);
  v14 = swift_allocObject();
  v15 = objc_allocWithZone(MEMORY[0x24BDD3DD0]);
  v16 = (void *)sub_23DCE1D0C();
  v17 = objc_msgSend(v15, sel_initWithName_loggingCategory_, v16, v13);

  *(_QWORD *)(v14 + 16) = v17;
  *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers] = v14;
  v18 = (uint64_t *)&v11[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_unitTest_didBeginObservingSleepingSampleDataTypes];
  *v18 = a2;
  v18[1] = a3;
  v19 = (void *)objc_opt_self();
  sub_23DC973A8(a2);
  result = (char *)objc_msgSend(v19, sel_sharedBehavior);
  if (result)
  {
    v21 = result;
    v22 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v22)
    {
      v23 = v31;
      swift_retain();
      v24 = v23;
    }
    else
    {
      v24 = 0;
    }
    v25 = (objc_class *)ObjectType;
    *(_QWORD *)&v11[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_settingsProvider] = v24;

    v32.receiver = v11;
    v32.super_class = v25;
    v26 = (char *)objc_msgSendSuper2(&v32, sel_init);
    objc_msgSend(a1, sel_registerProfileReadyObserver_queue_, v26, 0);
    if (*(_QWORD *)&v26[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_settingsProvider])
    {
      v27 = v29;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE40630], v29);
      sub_23DCE1A3C();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
    }
    swift_release();
    sub_23DC97390(a2);

    return v26;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23DC9D320()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_class *v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_23DCE1A30();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1B14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v11 = sub_23DCE1B08();
  v12 = sub_23DCE1EEC();
  v13 = os_log_type_enabled(v11, v12);
  v27 = (objc_class *)ObjectType;
  if (v13)
  {
    v25 = v4;
    v14 = swift_slowAlloc();
    v26 = v3;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v24 = v8;
    v17 = v16;
    v29 = v16;
    v23 = v7;
    *(_DWORD *)v15 = 136446210;
    v18 = sub_23DCE2354();
    v28 = sub_23DCA47EC(v18, v19, &v29);
    v4 = v25;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v11, v12, "[%{public}s] deinit", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v17, -1, -1);
    v20 = v15;
    v3 = v26;
    MEMORY[0x24264179C](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_23DC9D590();
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_settingsProvider])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE40630], v3);
    sub_23DCE1A48();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v30.receiver = v1;
  v30.super_class = v27;
  return objc_msgSendSuper2(&v30, sel_dealloc);
}

uint64_t sub_23DC9D590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v6 = sub_23DCE1B08();
  v7 = sub_23DCE1EEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v22 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v24 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_23DCE2354();
    v23 = sub_23DCA47EC(v11, v12, &v24);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v6, v7, "[%{public}s] stop observing sleeping sample data types", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v10, -1, -1);
    MEMORY[0x24264179C](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = sub_23DC9F164();
  v14 = v13;
  if (!(v13 >> 62))
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_6;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  result = sub_23DCE21D4();
  v15 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_6:
  if (v15 >= 1)
  {
    v17 = 0;
    v18 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_dataManager);
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x242640EF0](v17, v14);
      else
        v19 = *(id *)(v14 + 8 * v17 + 32);
      v20 = v19;
      ++v17;
      objc_msgSend(v18, sel_removeObserver_forDataType_, v1, v19);

    }
    while (v15 != v17);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC9D884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v6 = sub_23DCE1B08();
  v7 = sub_23DCE1EEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v23 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v25 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_23DCE2354();
    v24 = sub_23DCA47EC(v11, v12, &v25);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v6, v7, "[%{public}s] start observing sleeping sample data types", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v10, -1, -1);
    MEMORY[0x24264179C](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = sub_23DC9F164();
  v14 = v13;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23DCE21D4();
    v15 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v15)
      goto LABEL_13;
  }
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  v17 = 0;
  v18 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_dataManager);
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x242640EF0](v17, v14);
    else
      v19 = *(id *)(v14 + 8 * v17 + 32);
    v20 = v19;
    ++v17;
    objc_msgSend(v18, sel_addObserver_forDataType_, v1, v19);

  }
  while (v15 != v17);
LABEL_13:
  result = swift_bridgeObjectRelease_n();
  v21 = *(uint64_t (**)(uint64_t))(v1
                                          + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_unitTest_didBeginObservingSleepingSampleDataTypes);
  if (v21)
    return v21(v1);
  return result;
}

uint64_t sub_23DC9DB64(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  _QWORD *v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  char v52;
  char v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v69;
  _QWORD *v70;

  sub_23DC82800(0, (unint64_t *)&unk_2543244B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v57 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v57 - v8;
  v9 = sub_23DCE11E4();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v66 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v65 = (char *)&v57 - v12;
  v13 = sub_23DCE1100();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v64 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v59 = (char *)&v57 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v57 - v19;
  v21 = (_QWORD *)sub_23DCD7C9C(MEMORY[0x24BEE4AF8]);
  if (!(a1 >> 62))
  {
    v22 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v21;
  }
  swift_bridgeObjectRetain();
  result = sub_23DCE21D4();
  v22 = result;
  if (!result)
    goto LABEL_25;
LABEL_3:
  if (v22 >= 1)
  {
    v58 = v5;
    v24 = 0;
    v60 = a1 & 0xC000000000000001;
    v61 = v22;
    v62 = a1;
    do
    {
      if (v60)
        v27 = (id)MEMORY[0x242640EF0](v24, a1);
      else
        v27 = *(id *)(a1 + 8 * v24 + 32);
      v28 = v27;
      v69 = v27;
      v29 = objc_msgSend(v27, sel_startDate);
      sub_23DCE11C0();

      v30 = objc_msgSend(v28, sel_endDate);
      sub_23DCE11C0();

      v31 = v69;
      sub_23DCE10D0();
      v32 = objc_msgSend(v31, sel_sampleType);
      v33 = v32;
      if (v21[2] && (v34 = sub_23DCD89F8((uint64_t)v32), (v35 & 1) != 0))
      {
        v36 = (uint64_t)v63;
        (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v63, v21[7] + *(_QWORD *)(v14 + 72) * v34, v13);
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v38 = (char *)v36;
        v39 = 0;
      }
      else
      {
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v36 = (uint64_t)v63;
        v38 = v63;
        v39 = 1;
      }
      v68 = v37;
      v37((uint64_t)v38, v39, 1, v13);

      v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      v41 = v21;
      if (v40(v36, 1, v13) == 1)
      {
        sub_23DC94AE0(v36);
      }
      else
      {
        v42 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
        v43 = v14;
        v44 = v20;
        v45 = v59;
        v42(v59, v36, v13);
        v46 = v64;
        sub_23DCE10F4();
        v47 = *(void (**)(char *, uint64_t))(v43 + 8);
        v48 = v45;
        v20 = v44;
        v14 = v43;
        v31 = v69;
        v47(v48, v13);
        v47(v20, v13);
        v42(v20, (uint64_t)v46, v13);
      }
      v49 = (uint64_t)v67;
      v50 = objc_msgSend(v31, sel_sampleType);
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v49, v20, v13);
      v68(v49, 0, 1, v13);
      if (v40(v49, 1, v13) == 1)
      {
        sub_23DC94AE0(v49);
        v21 = v41;
        swift_bridgeObjectRetain();
        v51 = sub_23DCD89F8((uint64_t)v50);
        v53 = v52;
        swift_bridgeObjectRelease();
        if ((v53 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v70 = v41;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_23DCBD0FC();
            v21 = v70;
          }

          v55 = (uint64_t)v58;
          (*(void (**)(char *, unint64_t, uint64_t))(v14 + 32))(v58, v21[7] + *(_QWORD *)(v14 + 72) * v51, v13);
          sub_23DCBD504(v51, (uint64_t)v21);
          swift_bridgeObjectRelease();
          v56 = 0;
        }
        else
        {
          v56 = 1;
          v55 = (uint64_t)v58;
        }
        v68(v55, v56, 1, v13);

        sub_23DC94AE0(v55);
      }
      else
      {
        v25 = (uint64_t)v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v64, v49, v13);
        v26 = swift_isUniquelyReferenced_nonNull_native();
        v70 = v41;
        sub_23DC9E758(v25, v50, v26);
        v21 = v70;

        swift_bridgeObjectRelease();
      }
      ++v24;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
      a1 = v62;
    }
    while (v61 != v24);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DC9E10C(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v10;
  id v11;
  id v12;

  sub_23DC802D0(0, a5);
  v10 = sub_23DCE1DC0();
  v11 = a4;
  v12 = a1;
  a7(v10);

  return swift_bridgeObjectRelease();
}

void sub_23DC9E188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_class *ObjectType;
  char *v40;
  uint64_t v41;
  uint64_t aBlock[3];
  _QWORD *v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  objc_super v46;

  v37 = a4;
  v38 = a5;
  ObjectType = (objc_class *)swift_getObjectType();
  v36 = sub_23DCE1B14();
  v8 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23DCE1A30();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE40630], v11);
  v15 = sub_23DCE1A24();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!a2)
  {
    swift_bridgeObjectRelease();
    v20 = 0;
LABEL_9:
    sub_23DC9F120(a3, (uint64_t)aBlock);
    v21 = v43;
    if (v43)
    {
      v22 = __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v43);
      v23 = *(v21 - 1);
      MEMORY[0x24BDAC7A8](v22);
      v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      v26 = sub_23DCE2264();
      (*(void (**)(char *, _QWORD *))(v23 + 8))(v25, v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      if (v37)
      {
LABEL_11:
        type metadata accessor for NSKeyValueChangeKey(0);
        sub_23DC9F0D8();
        v27 = (void *)sub_23DCE1C70();
LABEL_18:
        v46.receiver = v40;
        v46.super_class = ObjectType;
        objc_msgSendSuper2(&v46, sel_observeValueForKeyPath_ofObject_change_context_, v20, v26, v27, v38, v36);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      v26 = 0;
      if (v37)
        goto LABEL_11;
    }
    v27 = 0;
    goto LABEL_18;
  }
  if (v15 == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_23DCE2270();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      v20 = (void *)sub_23DCE1D0C();
      goto LABEL_9;
    }
  }
  sub_23DCE1AFC();
  v28 = sub_23DCE1B08();
  v29 = sub_23DCE1EEC();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    aBlock[0] = v31;
    *(_DWORD *)v30 = 136446210;
    v32 = sub_23DCE2354();
    v41 = sub_23DCA47EC(v32, v33, aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v28, v29, "[%{public}s] Demo mode changed, notifying observers", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v31, -1, -1);
    MEMORY[0x24264179C](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v36);
  v34 = *(void **)(*(_QWORD *)&v40[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers] + 16);
  v44 = sub_23DCD9674;
  v45 = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23DC99F50;
  v43 = &block_descriptor_2;
  v35 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v34, sel_notifyObservers_, v35);
  _Block_release(v35);
}

uint64_t type metadata accessor for SleepingSampleChangeManager()
{
  return objc_opt_self();
}

id sub_23DC9E6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  swift_getObjectType();
  return sub_23DC9F0B0(a1, a3, v3);
}

id sub_23DC9E738(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers) + 16), sel_unregisterObserver_, a1);
}

id sub_23DC9E758(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_23DCD89F8((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = sub_23DCE1100();
        return (id)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, a1, v17);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_23DCBD0FC();
      goto LABEL_7;
    }
    sub_23DCBCBC8(v12, a3 & 1);
    v19 = sub_23DCD89F8((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23DC9E894(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_23DC802D0(0, (unint64_t *)&qword_254324988);
  result = (id)sub_23DCE22A0();
  __break(1u);
  return result;
}

uint64_t sub_23DC9E894(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_23DCE1100();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_23DC9E920(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_23DC9EAA0((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_23DC9EAA0((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x24264179C](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23DC9EAA0(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  unint64_t j;
  unint64_t v19;
  id v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  unint64_t i;
  unint64_t v35;
  id v36;
  char v37;
  unint64_t v38;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;

  v4 = a3;
  if (a3 >> 62)
    goto LABEL_38;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v45 = v4;
  if (v5)
  {
    while (1)
    {
      v46 = a4 + 56;
      if ((v4 & 0xC000000000000001) != 0)
        break;
      v23 = 0;
      v41 = v4 + 32;
      v42 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v43 = 0;
      while (v23 != v42)
      {
        v25 = *(id *)(v41 + 8 * v23);
        v4 = (uint64_t)v25;
        v26 = sub_23DCE1F7C();
        v27 = -1 << *(_BYTE *)(a4 + 32);
        v28 = v26 & ~v27;
        v29 = v28 >> 6;
        v30 = 1 << v28;
        if (((1 << v28) & *(_QWORD *)(v46 + 8 * (v28 >> 6))) != 0)
        {
          v4 = sub_23DC802D0(0, (unint64_t *)&qword_254324988);
          v31 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v28);
          v32 = sub_23DCE1F88();

          if ((v32 & 1) != 0)
          {

          }
          else
          {
            v33 = ~v27;
            for (i = v28 + 1; ; i = v35 + 1)
            {
              v35 = i & v33;
              if (((*(_QWORD *)(v46 + (((i & v33) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v33)) & 1) == 0)
                goto LABEL_20;
              v36 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v35);
              v37 = sub_23DCE1F88();

              if ((v37 & 1) != 0)
                break;
            }

            v29 = v35 >> 6;
            v30 = 1 << v35;
          }
          v38 = a1[v29];
          a1[v29] = v30 | v38;
          v24 = v5;
          if ((v30 & v38) == 0)
          {
            v9 = __OFADD__(v43++, 1);
            if (v9)
            {
              __break(1u);
LABEL_35:
              __break(1u);
              break;
            }
          }
        }
        else
        {
LABEL_20:

          v24 = v5;
        }
        if (++v23 == v24)
          goto LABEL_40;
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v5 = sub_23DCE21D4();
      v45 = v4;
      if (!v5)
        goto LABEL_39;
    }
    v43 = 0;
    v6 = 0;
    while (1)
    {
      v8 = MEMORY[0x242640EF0](v6, v45);
      v9 = __OFADD__(v6++, 1);
      if (v9)
        goto LABEL_35;
      v4 = v8;
      v10 = sub_23DCE1F7C();
      v11 = -1 << *(_BYTE *)(a4 + 32);
      v12 = v10 & ~v11;
      v13 = v12 >> 6;
      v14 = 1 << v12;
      if (((1 << v12) & *(_QWORD *)(v46 + 8 * (v12 >> 6))) == 0)
        goto LABEL_5;
      v4 = sub_23DC802D0(0, (unint64_t *)&qword_254324988);
      v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v12);
      v16 = sub_23DCE1F88();

      if ((v16 & 1) == 0)
        break;
      swift_unknownObjectRelease();
LABEL_16:
      v22 = a1[v13];
      a1[v13] = v14 | v22;
      v7 = v5;
      if ((v14 & v22) == 0)
      {
        if (__OFADD__(v43, 1))
          goto LABEL_37;
        ++v43;
      }
LABEL_6:
      if (v6 == v7)
        goto LABEL_40;
    }
    v17 = ~v11;
    for (j = v12 + 1; ; j = v19 + 1)
    {
      v19 = j & v17;
      if (((*(_QWORD *)(v46 + (((j & v17) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v17)) & 1) == 0)
        break;
      v20 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v19);
      v21 = sub_23DCE1F88();

      if ((v21 & 1) != 0)
      {
        swift_unknownObjectRelease();
        v13 = v19 >> 6;
        v14 = 1 << v19;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    v7 = v5;
    goto LABEL_6;
  }
LABEL_39:
  v43 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  swift_retain();
  return sub_23DC9EE58(a1, a2, v43, a4);
}

uint64_t sub_23DC9EE58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_23DC9FCA4();
  result = sub_23DCE20D8();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_23DCE1F7C();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

id sub_23DC9F0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers) + 16), sel_registerObserver_queue_, a1, a2);
}

unint64_t sub_23DC9F0D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256CF98C0;
  if (!qword_256CF98C0)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x2426416D0](&unk_23DCE350C, v1);
    atomic_store(result, (unint64_t *)&qword_256CF98C0);
  }
  return result;
}

uint64_t sub_23DC9F120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC95004();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DC9F164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, unint64_t, uint64_t);
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_23DCE146C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23DCE1460();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_23DCE215C();
    v6 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    v12 = v4;
    v7 = v4 + v6;
    v8 = *(_QWORD *)(v1 + 72);
    v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    do
    {
      v9(v3, v7, v0);
      sub_23DCE1454();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      sub_23DCE2144();
      sub_23DCE2168();
      sub_23DCE2174();
      sub_23DCE2150();
      v7 += v8;
      --v5;
    }
    while (v5);
    v10 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v10;
}

uint64_t sub_23DC9F2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[3];
  uint64_t v15;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v6 = sub_23DCE1B08();
  v7 = sub_23DCE1EEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v14[1] = v1;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_23DCE2354();
    v14[2] = sub_23DCA47EC(v11, v12, &v15);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v6, v7, "[%{public}s] profile ready", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v10, -1, -1);
    MEMORY[0x24264179C](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_23DC9D884();
}

uint64_t sub_23DC9F448(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock[6];

  v2 = v1;
  swift_getObjectType();
  v4 = sub_23DCE1B14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_bridgeObjectRetain();
  v9 = sub_23DC9DB64(v8);
  swift_bridgeObjectRelease();
  sub_23DCE1AFC();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v10 = sub_23DCE1B08();
  v11 = sub_23DCE1EC8();
  if (os_log_type_enabled(v10, v11))
  {
    v28 = v5;
    v30 = v2;
    v12 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    aBlock[0] = v27;
    *(_DWORD *)v12 = 136446722;
    v13 = sub_23DCE2354();
    v31 = sub_23DCA47EC(v13, v14, aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2050;
    v29 = v4;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_23DCE21D4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v31 = v15;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2080;
    sub_23DC802D0(0, (unint64_t *)&qword_254324988);
    sub_23DCE1100();
    sub_23DC9FD14();
    swift_bridgeObjectRetain();
    v16 = sub_23DCE1C88();
    v18 = v17;
    swift_bridgeObjectRelease();
    v31 = sub_23DCA47EC(v16, v18, aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v10, v11, "[%{public}s] sleeping samples added %{public}ld - %s, notifying observers", (uint8_t *)v12, 0x20u);
    v19 = v27;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v19, -1, -1);
    MEMORY[0x24264179C](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v29);
    v2 = v30;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v9;
  v22 = *(void **)(v20 + 16);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_23DC9FD6C;
  *(_QWORD *)(v23 + 24) = v21;
  aBlock[4] = (uint64_t)sub_23DC9BD54;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23DC99F50;
  aBlock[3] = (uint64_t)&block_descriptor_17;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_notifyObservers_, v24);
  _Block_release(v24);
  return swift_release();
}

uint64_t sub_23DC9F82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[6];
  uint64_t v39;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - v7;
  v9 = swift_bridgeObjectRetain();
  v10 = sub_23DCD996C(v9);
  swift_bridgeObjectRelease();
  v11 = sub_23DC9F164();
  if ((v10 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v12 = v10;
    else
      v12 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v13 = sub_23DCE206C();
    v14 = sub_23DCAD0F0(v12, v13);
    swift_bridgeObjectRelease();
    v10 = v14;
  }
  v15 = sub_23DC9E920(v11, v10);
  swift_bridgeObjectRelease();
  if ((v15 & 0xC000000000000001) != 0)
  {
    if (sub_23DCE206C() >= 1)
    {
LABEL_8:
      sub_23DCE1AFC();
      v16 = sub_23DCE1B08();
      v17 = sub_23DCE1EC8();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v37 = v2;
        aBlock[0] = v19;
        v20 = v19;
        v36 = v3;
        *(_DWORD *)v18 = 136446210;
        v21 = sub_23DCE2354();
        v39 = sub_23DCA47EC(v21, v22, aBlock);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v16, v17, "[%{public}s] sleeping samples removed, notifying observers", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v20, -1, -1);
        MEMORY[0x24264179C](v18, -1, -1);

        (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers);
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = v15;
      v32 = *(void **)(v30 + 16);
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = sub_23DC9A564;
      *(_QWORD *)(v33 + 24) = v31;
      aBlock[4] = (uint64_t)sub_23DC9A538;
      aBlock[5] = v33;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23DC99F50;
      aBlock[3] = (uint64_t)&block_descriptor_7;
      v34 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v32, sel_notifyObservers_, v34);
      _Block_release(v34);
      return swift_release();
    }
  }
  else if (*(uint64_t *)(v15 + 16) >= 1)
  {
    goto LABEL_8;
  }
  swift_release();
  sub_23DCE1AFC();
  v23 = sub_23DCE1B08();
  v24 = sub_23DCE1EC8();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)v25 = 136446210;
    v27 = sub_23DCE2354();
    v39 = sub_23DCA47EC(v27, v28, aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v23, v24, "[%{public}s] Ignoring sample removal observation for unregistered samples", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v26, -1, -1);
    MEMORY[0x24264179C](v25, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_23DC9FC80()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23DC9FCA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256CF98D0)
  {
    sub_23DC802D0(255, (unint64_t *)&qword_254324988);
    sub_23DC9FD14();
    v0 = sub_23DCE20E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256CF98D0);
  }
}

unint64_t sub_23DC9FD14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254324998;
  if (!qword_254324998)
  {
    v1 = sub_23DC802D0(255, (unint64_t *)&qword_254324988);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254324998);
  }
  return result;
}

uint64_t sub_23DC9FD6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(a1 + 8);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v2, ObjectType, v3);
}

uint64_t sub_23DC9FDB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DC9FDEC(uint64_t a1, uint64_t a2)
{
  return sub_23DCA0298(*(void **)a1, *(_BYTE *)(a1 + 8), *(void **)a2, *(_BYTE *)(a2 + 8));
}

void *sub_23DC9FE04()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  unsigned int v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  void *v7;
  void *v8;
  id v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  id aBlock[6];
  _QWORD v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v16[0] = 0;
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v16;
  v2 = (_QWORD *)swift_allocObject();
  v2[2] = sub_23DCA0120;
  v2[3] = v1;
  aBlock[4] = sub_23DCA0168;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23DCA00AC;
  aBlock[3] = &block_descriptor_3;
  v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v4 = objc_msgSend(v0, sel_enumerateWithError_handler_, aBlock, v3);
  _Block_release(v3);
  v5 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (!v4)
  {
    v8 = (void *)sub_23DCE1154();

    swift_willThrow();
    aBlock[0] = v8;
    v9 = v8;
    sub_23DC7F564();
    sub_23DC802D0(0, (unint64_t *)&unk_256CF9550);
    if (swift_dynamicCast())
    {

      v10 = objc_msgSend(v14, sel_hk_isDatabaseAccessibilityError);
      sub_23DCA0188();
      swift_allocError();
      *(_QWORD *)v11 = v14;
      if (v10)
        *(_BYTE *)(v11 + 8) = 1;
      else
        *(_BYTE *)(v11 + 8) = 0;
      swift_willThrow();
    }

    goto LABEL_12;
  }
  v7 = (void *)v16[0];
  if (!v16[0])
  {
    sub_23DCA0188();
    swift_allocError();
    *(_QWORD *)v12 = 0;
    *(_BYTE *)(v12 + 8) = 2;
    swift_willThrow();
LABEL_12:
    v7 = (void *)v16[0];
    swift_release();

    return v7;
  }
  swift_release();
  return v7;
}

void sub_23DCA00AC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void *sub_23DCA00F0()
{
  return sub_23DC9FE04();
}

uint64_t sub_23DCA0110()
{
  return swift_deallocObject();
}

void sub_23DCA0120(void *a1, _BYTE *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;

  v4 = *(void ***)(v2 + 16);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;

  *a2 = 1;
}

uint64_t sub_23DCA0158()
{
  return swift_deallocObject();
}

uint64_t sub_23DCA0168()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_23DCA0188()
{
  unint64_t result;

  result = qword_256CF98D8;
  if (!qword_256CF98D8)
  {
    result = MEMORY[0x2426416D0](&unk_23DCE3CA8, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_256CF98D8);
  }
  return result;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_23DCA0258(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23DCA0270(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

uint64_t sub_23DCA0298(void *a1, char a2, void *a3, char a4)
{
  id v6;
  id v7;
  char v8;

  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1)
        return 0;
LABEL_6:
      sub_23DC802D0(0, (unint64_t *)&qword_254324A30);
      v6 = a1;
      v7 = a3;
      v8 = sub_23DCE1F88();

      return v8 & 1;
    }
    if (a4 == 2 && !a3)
      return 1;
  }
  else if (!a4)
  {
    goto LABEL_6;
  }
  return 0;
}

uint64_t sub_23DCA0354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v7 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  v8 = sub_23DCE1400();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
  *a3 = v6;
  return result;
}

void sub_23DCA03C8(uint64_t a1)
{
  sub_23DCA39BC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_23DCA03E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t result;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;

  v89 = a2;
  v93 = a1;
  sub_23DC87938();
  v78 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v79 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v75 = (char *)&v74 - v5;
  sub_23DC8799C();
  v90 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v81 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v80 = (uint64_t)&v74 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v88 = (char *)&v74 - v11;
  v12 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_23DCE1400();
  v15 = *(_QWORD *)(v91 - 8);
  v16 = MEMORY[0x24BDAC7A8](v91);
  v74 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v85 = (char *)&v74 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v74 - v20;
  v22 = sub_23DCE11E4();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23DCE1C64();
  v92 = *(char **)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v87 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v83 = (char *)&v74 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v86 = (char *)&v74 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v74 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v74 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v84 = (char *)&v74 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v74 - v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v89, v22);
  sub_23DCE15EC();
  sub_23DCE13F4();
  v89 = v15;
  v43 = *(void (**)(char *, uint64_t))(v15 + 8);
  v76 = v21;
  v44 = v21;
  v45 = v91;
  v43(v44, v91);
  v77 = v14;
  sub_23DCE1C1C();
  v46 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v92 + 2);
  v46(v38, v42, v26);
  v47 = v85;
  sub_23DCE15EC();
  v48 = (uint64_t)v88;
  sub_23DCE13D0();
  v85 = (char *)v43;
  v43(v47, v45);
  v49 = v42;
  v46(v35, (char *)(v48 + *(int *)(v90 + 36)), v26);
  sub_23DC827C4(v48, (uint64_t (*)(_QWORD))sub_23DC8799C);
  sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  if ((sub_23DCE1CC4() & 1) != 0)
    v50 = v35;
  else
    v50 = v38;
  v51 = v84;
  v46(v84, v50, v26);
  v52 = v92;
  v53 = (void (*)(char *, uint64_t))*((_QWORD *)v92 + 1);
  v53(v35, v26);
  v53(v38, v26);
  v53(v49, v26);
  v54 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v52 + 4);
  v54(v49, v51, v26);
  v55 = v86;
  sub_23DCE1628();
  v56 = v87;
  sub_23DCE161C();
  v57 = sub_23DCE1CB8();
  v92 = v49;
  if ((v57 & 1) != 0)
    v58 = v56;
  else
    v58 = v49;
  v59 = v83;
  v46(v83, v58, v26);
  v53(v56, v26);
  v60 = v55;
  result = sub_23DCE1CD0();
  if ((result & 1) != 0)
  {
    v62 = v78;
    v63 = v75;
    v64 = &v75[*(int *)(v78 + 48)];
    v54(v75, v60, v26);
    v54(v64, v59, v26);
    v65 = v79;
    v66 = &v79[*(int *)(v62 + 48)];
    v46(v79, v63, v26);
    v46(v66, v64, v26);
    v67 = (uint64_t)v81;
    v54(v81, v65, v26);
    v53(v66, v26);
    v68 = &v65[*(int *)(v62 + 48)];
    v54(v65, v63, v26);
    v54(v68, v64, v26);
    v54((char *)(v67 + *(int *)(v90 + 36)), v68, v26);
    v53(v65, v26);
    v69 = v80;
    sub_23DC87A14(v67, v80, (uint64_t (*)(_QWORD))sub_23DC8799C);
    sub_23DC82858(v69, v67, (uint64_t (*)(_QWORD))sub_23DC8799C);
    v70 = v74;
    sub_23DCE15EC();
    sub_23DCE13F4();
    v71 = v91;
    ((void (*)(char *, uint64_t))v85)(v70, v91);
    v72 = v76;
    sub_23DCE13C4();
    sub_23DC827C4(v69, (uint64_t (*)(_QWORD))sub_23DC8799C);
    v53(v92, v26);
    v73 = v82 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 40))(v73, v72, v71);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23DCA0A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  v2 = sub_23DCE1400();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23DCA0AC0()
{
  return type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(0);
}

uint64_t type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_254324938);
}

uint64_t sub_23DCA0ADC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23DCE1400();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23DCA0B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  sub_23DC92994();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92A5C();
  v6 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE1400();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  v17 = *(void **)(v1 + 16);
  type metadata accessor for SleepingWristTemperatureAggregateEnumerator();
  swift_allocObject();
  sub_23DC908F0((uint64_t)v15, v17);
  v29 = swift_allocBox();
  v19 = v18;
  swift_beginAccess();
  sub_23DCE13D0();
  swift_endAccess();
  sub_23DC82858((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v20 = sub_23DCE1C64();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v4, v11, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v4, 0, 1, v20);
  sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8799C);
  sub_23DC87A14((uint64_t)v4, (uint64_t)&v8[*(int *)(v6 + 36)], (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC87A14((uint64_t)v8, v19, (uint64_t (*)(_QWORD))sub_23DC92A5C);
  v22 = sub_23DC910B0();
  swift_release();
  v23 = swift_allocObject();
  *(_BYTE *)(v23 + 16) = 0;
  v24 = (_QWORD *)swift_allocObject();
  v25 = v29;
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v22;
  v24[5] = v1;
  sub_23DCA34C8();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_23DCA34BC;
  *(_QWORD *)(v26 + 24) = v24;
  swift_retain();
  return v26;
}

uint64_t sub_23DCA0E20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t result;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)();
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  id v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  id v111;
  void (*v112)(char *, uint64_t);
  char *v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  void (*v118)(uint64_t, uint64_t);
  uint64_t v119;
  _QWORD v120[2];
  void (*v121)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  unsigned int (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  void (*v142)(uint64_t, char *, uint64_t);
  uint64_t (*v143)(char *, uint64_t);
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  _QWORD *v148;
  __int128 v149;
  uint64_t v150;
  _UNKNOWN **v151;

  v123 = a3;
  v138 = a2;
  v148 = a4;
  v125 = sub_23DCE12E0();
  v129 = *(_QWORD *)(v125 - 8);
  v5 = MEMORY[0x24BDAC7A8](v125);
  v124 = (char *)v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v128 = (char *)v120 - v7;
  v8 = sub_23DCE14E4();
  v9 = (void (*)(uint64_t))MEMORY[0x24BE3FED0];
  v133 = v8;
  v146 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v130 = (char *)v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v147 = (char *)v120 - v12;
  sub_23DCA3618();
  MEMORY[0x24BDAC7A8](v13);
  v137 = (char *)v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC93534(0, (unint64_t *)&unk_254325848, v9, (void (*)(void))sub_23DC9106C);
  v136 = v15;
  v135 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v132 = (uint64_t)v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v134 = (uint64_t)v120 - v18;
  sub_23DC92D58();
  v20 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92994();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v141 = (char *)v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v142 = (void (*)(uint64_t, char *, uint64_t))((char *)v120 - v27);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v139 = (uint64_t)v120 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v120 - v30;
  sub_23DCA368C();
  MEMORY[0x24BDAC7A8](v32);
  v143 = (uint64_t (*)(char *, uint64_t))((char *)v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = sub_23DCE1C64();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v127 = (char *)v120 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v140 = (char *)v120 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)v120 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40);
  v144 = (char *)v120 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v145 = (char *)v120 - v45;
  sub_23DC92A5C();
  v47 = v46;
  v48 = swift_projectBox();
  v122 = a1 + 16;
  swift_beginAccess();
  v49 = *(_BYTE *)(a1 + 16);
  v50 = v148;
  if ((v49 & 1) != 0)
    goto LABEL_15;
  swift_beginAccess();
  v51 = *(int *)(v47 + 36);
  v120[1] = v48;
  v52 = v48 + v51;
  v121 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  v121(v31, 1, 1, v34);
  v53 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_23DC82858(v52, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC82858((uint64_t)v31, v53, (uint64_t (*)(_QWORD))sub_23DC92994);
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v55 = v54(v22, 1, v34);
  v126 = v35;
  v131 = v54;
  if (v55 == 1)
  {
    v56 = v54((char *)v53, 1, v34);
    v57 = (uint64_t)v143;
    v58 = (uint64_t)v142;
    if (v56 == 1)
    {
      sub_23DC827C4((uint64_t)v22, (uint64_t (*)(_QWORD))sub_23DC92994);
      sub_23DC827C4((uint64_t)v31, (uint64_t (*)(_QWORD))sub_23DC92994);
      v59 = 1;
      v61 = v146;
      v60 = v147;
      v63 = v144;
      v62 = v145;
      goto LABEL_10;
    }
  }
  else
  {
    v64 = v35;
    v65 = v139;
    sub_23DC82858((uint64_t)v22, v139, (uint64_t (*)(_QWORD))sub_23DC92994);
    if (v54((char *)v53, 1, v34) != 1)
    {
      v81 = v34;
      v82 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
      v83 = v65;
      v84 = v64;
      v85 = v144;
      v82(v144, v83, v81);
      v82(v42, v53, v81);
      v34 = v81;
      sub_23DC80074((unint64_t *)&unk_2543255C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
      v86 = sub_23DCE1D00();
      v87 = *(void (**)(char *, uint64_t))(v84 + 8);
      v88 = v42;
      v63 = v85;
      v87(v88, v81);
      v87(v85, v81);
      sub_23DC827C4((uint64_t)v22, (uint64_t (*)(_QWORD))sub_23DC92994);
      v54 = v131;
      sub_23DC827C4((uint64_t)v31, (uint64_t (*)(_QWORD))sub_23DC92994);
      v57 = (uint64_t)v143;
      v58 = (uint64_t)v142;
      if ((v86 & 1) != 0)
      {
        v59 = 1;
        v61 = v146;
        v60 = v147;
        v62 = v145;
        goto LABEL_10;
      }
      goto LABEL_8;
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v34);
    v57 = (uint64_t)v143;
    v58 = (uint64_t)v142;
  }
  sub_23DC827C4((uint64_t)v22, (uint64_t (*)(_QWORD))sub_23DC92D58);
  sub_23DC827C4((uint64_t)v31, (uint64_t (*)(_QWORD))sub_23DC92994);
  v63 = v144;
LABEL_8:
  v66 = v63;
  sub_23DC82858(v52, v58, (uint64_t (*)(_QWORD))sub_23DC92994);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v54)(v58, 1, v34);
  v68 = v146;
  v69 = v147;
  v62 = v145;
  if ((_DWORD)result == 1)
    goto LABEL_25;
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v126 + 32);
  v71 = v140;
  v70(v140, v58, v34);
  v70((char *)v57, (uint64_t)v71, v34);
  v72 = (uint64_t)v141;
  sub_23DCA36E0(v52, (uint64_t)v141);
  sub_23DC827C4(v52, (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC87A14(v72, v52, (uint64_t (*)(_QWORD))sub_23DC92994);
  v59 = 0;
  v61 = v68;
  v60 = v69;
  v63 = v66;
LABEL_10:
  v121((char *)v57, v59, 1, v34);
  swift_endAccess();
  if (v131((char *)v57, 1, v34) == 1)
  {
    v73 = sub_23DCA368C;
LABEL_14:
    sub_23DC827C4(v57, (uint64_t (*)(_QWORD))v73);
    v50 = v148;
LABEL_15:
    sub_23DC93534(0, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
    v77 = v76;
    v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56);
    v79 = v50;
    v80 = 1;
    return v78(v79, v80, 1, v77);
  }
  v74 = v126;
  v75 = *(void (**)(char *, uint64_t, uint64_t))(v126 + 32);
  v75(v62, v57, v34);
  v57 = (uint64_t)v137;
  sub_23DCE221C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v57, 1, v136) == 1)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v34);
    v73 = sub_23DCA3618;
    goto LABEL_14;
  }
  v89 = v57;
  v90 = v134;
  sub_23DCA3898(v89, v134);
  v91 = v132;
  sub_23DCA38FC(v90, v132);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23DCA3960(v90);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v34);
    v92 = *(_QWORD *)v91;
    v93 = *(_BYTE *)(v91 + 8) | 0x80;
    v94 = v148;
    *v148 = v92;
    *((_BYTE *)v94 + 8) = v93;
    sub_23DC93534(0, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
    v96 = v95;
    swift_storeEnumTagMultiPayload();
    v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
    v79 = v94;
LABEL_23:
    v80 = 0;
    v77 = v96;
    return v78(v79, v80, 1, v77);
  }
  v142 = (void (*)(uint64_t, char *, uint64_t))v75;
  v144 = *(char **)(v61 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v144)(v60, v91, v133);
  sub_23DCE14A8();
  sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_23DCE1FF4();
  v97 = v149;
  v143 = *(uint64_t (**)(char *, uint64_t))(v74 + 8);
  result = v143(v63, v34);
  if (!v97)
  {
    v98 = *(void **)(v123 + 16);
    v99 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
    v100 = v127;
    v99(v127, v62, v34);
    swift_beginAccess();
    v101 = v98;
    v102 = v128;
    sub_23DCE13F4();
    swift_endAccess();
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v130, v60, v133);
    v99(v63, v100, v34);
    v103 = v63;
    v104 = v124;
    v105 = v125;
    (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v124, v102, v125);
    v141 = (char *)objc_allocWithZone(MEMORY[0x24BE40C00]);
    v106 = v101;
    v107 = (void *)sub_23DCE12A4();
    v108 = sub_23DCE1C34();
    *(_QWORD *)&v149 = 0;
    *((_QWORD *)&v149 + 1) = 0xE000000000000000;
    sub_23DCE20F0();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v149 = 0xD000000000000019;
    *((_QWORD *)&v149 + 1) = 0x800000023DCE5E00;
    sub_23DC80074((unint64_t *)&unk_2543255E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
    sub_23DCE224C();
    v109 = v34;
    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    v110 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v111 = objc_msgSend(v141, sel_initWithProfile_cachingSession_gregorianCalendar_morningIndexRange_ascending_options_debugIdentifier_, v106, 0, v107, v108, 1, 1, 34, v110);

    v112 = *(void (**)(char *, uint64_t))(v129 + 8);
    v112(v104, v105);
    v113 = v103;
    v114 = (void (*)(uint64_t, uint64_t))v143;
    v143(v113, v109);
    v112(v128, v105);
    v150 = sub_23DC802D0(0, &qword_254325708);
    v151 = &off_250E94C68;
    *(_QWORD *)&v149 = v111;
    type metadata accessor for SleepingSampleDaySummaryAggregator(0);
    v115 = swift_allocObject();
    *(_QWORD *)(v115 + 16) = v106;
    sub_23DC87714(&v149, v115 + 24);
    v142(v115+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_morningIndex, v127, v109);
    v116 = v133;
    ((void (*)(uint64_t, char *, uint64_t))v144)(v115+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature, v130, v133);
    v117 = v148;
    sub_23DCA1C90((uint64_t)v148);

    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v115 + 24);
    v114(v115+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_morningIndex, v109);
    v118 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
    v118(v115+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature, v116);
    swift_deallocClassInstance();
    v118((uint64_t)v147, v116);
    sub_23DCA3960(v134);
    v114((uint64_t)v145, v109);
    sub_23DC93534(0, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
    v96 = v119;
    swift_storeEnumTagMultiPayload();
    v78 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
    v79 = v117;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23DCA1C90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  NSObject *v62;
  os_signpost_type_t v63;
  char v64;
  void (*v65)(_BYTE *, _BYTE *, uint64_t);
  uint8_t *v66;
  os_signpost_id_t v67;
  uint8_t *v68;
  void (*v69)(_BYTE *, uint64_t);
  NSObject *v70;
  os_signpost_type_t v71;
  uint8_t *v72;
  os_signpost_id_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  const char *v80;
  _BYTE *v81;
  void *v82;
  NSObject *v83;
  int v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  _QWORD *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  uint8_t *v93;
  os_signpost_id_t v94;
  uint8_t *v95;
  void *v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  char v107;
  uint64_t v108;
  NSObject *v109;
  _BYTE *v110;
  os_signpost_type_t v111;
  _BYTE *v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  const char *v117;
  id v118;
  id v119;
  char v120;
  uint64_t v121;
  int v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  id v127;
  id v128;
  uint64_t v129;
  os_signpost_type_t v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  os_signpost_type_t v134;
  const char *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint8_t *v140;
  os_signpost_id_t v141;
  void (*v142)(_BYTE *, uint64_t);
  NSObject *v143;
  _BYTE *v144;
  os_signpost_type_t v145;
  char v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  const char *v150;
  _BYTE *v151;
  uint8_t *v152;
  os_signpost_id_t v153;
  os_signpost_type_t v154;
  NSObject *v155;
  const char *v156;
  const char *v157;
  _BYTE *v158;
  _BYTE *v159;
  uint8_t *v160;
  os_signpost_id_t v161;
  void (*v162)(_BYTE *, uint64_t);
  void (*v164)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v165;
  _BYTE *v166;
  void (*v167)(_BYTE *, uint64_t);
  NSObject *v168;
  _BYTE *v169;
  os_signpost_type_t v170;
  _BYTE *v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  const char *v175;
  const char *v176;
  uint64_t v177;
  uint8_t *v178;
  os_signpost_id_t v179;
  void (*v180)(_BYTE *, const char *);
  _BYTE v181[12];
  int v182;
  uint64_t v183;
  _BYTE *v184;
  _BYTE *v185;
  _BYTE *v186;
  uint64_t v187;
  _BYTE *v188;
  _BYTE *v189;
  _BYTE *v190;
  _BYTE *v191;
  _BYTE *v192;
  _BYTE *v193;
  _BYTE *v194;
  _BYTE *v195;
  _BYTE *v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  _BYTE *v201;
  _BYTE *v202;
  _BYTE *v203;
  _BYTE *v204;
  _BYTE *v205;
  _BYTE *v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  _BYTE *v210;
  _BYTE *v211;
  void (*v212)(_BYTE *, uint64_t);
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  const char *v216;
  void (*v217)(_QWORD, _QWORD, _QWORD);
  _QWORD *v218;
  uint64_t v219;
  const char *v220;
  _BYTE *v221;
  id v222;
  char v223;
  id v224;

  v187 = a1;
  v198 = sub_23DCE14E4();
  v199 = *(_QWORD *)(v198 - 8);
  v1 = MEMORY[0x24BDAC7A8](v198);
  v186 = &v181[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = MEMORY[0x24BDAC7A8](v1);
  v193 = &v181[-v4];
  v5 = MEMORY[0x24BDAC7A8](v3);
  v191 = &v181[-v6];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v190 = &v181[-v8];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v189 = &v181[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  v192 = &v181[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v196 = &v181[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v201 = &v181[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v207 = &v181[-v17];
  v18 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v18);
  v206 = &v181[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_23DCE1C64();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v188 = &v181[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v205 = &v181[-v23];
  v24 = sub_23DCE1AC0();
  v208 = *(_QWORD *)(v24 - 8);
  v209 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v194 = &v181[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = MEMORY[0x24BDAC7A8](v25);
  v195 = &v181[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v197 = &v181[-v30];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v203 = &v181[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  v184 = &v181[-v34];
  MEMORY[0x24BDAC7A8](v33);
  v216 = &v181[-v35];
  v36 = sub_23DCE1A90();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v202 = &v181[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = MEMORY[0x24BDAC7A8](v38);
  v200 = &v181[-v41];
  v42 = MEMORY[0x24BDAC7A8](v40);
  v204 = &v181[-v43];
  v44 = MEMORY[0x24BDAC7A8](v42);
  v210 = &v181[-v45];
  v46 = MEMORY[0x24BDAC7A8](v44);
  v185 = &v181[-v47];
  v48 = MEMORY[0x24BDAC7A8](v46);
  v211 = &v181[-v49];
  v50 = MEMORY[0x24BDAC7A8](v48);
  v52 = &v181[-v51];
  v53 = MEMORY[0x24BDAC7A8](v50);
  v55 = &v181[-v54];
  MEMORY[0x24BDAC7A8](v53);
  v57 = &v181[-v56];
  v58 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v58);
  v59 = sub_23DCE1AB4();
  v213 = *(_QWORD *)(v59 - 8);
  v214 = v59;
  MEMORY[0x24BDAC7A8](v59);
  v61 = &v181[-((v60 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23DCE1AFC();
  sub_23DCE1A9C();
  sub_23DCE1A84();
  v221 = v61;
  v62 = sub_23DCE1AA8();
  v63 = sub_23DCE1F58();
  v64 = sub_23DCE1F94();
  v220 = (const char *)v36;
  if ((v64 & 1) != 0)
  {
    v65 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16);
    v65(v55, v57, v36);
    v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v66 = 0;
    v67 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v62, v63, v67, "SleepingSampleDaySummaryAggregator.aggregate", "", v66, 2u);
    v68 = v66;
    v36 = (uint64_t)v220;
    MEMORY[0x24264179C](v68, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v55, v36);
  }
  else
  {

    v65 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 16);
  }
  v65(v55, v57, v36);
  sub_23DCE1AE4();
  swift_allocObject();
  v219 = sub_23DCE1AD8();
  v69 = *(void (**)(_BYTE *, uint64_t))(v37 + 8);
  v69(v57, v36);
  sub_23DCE1A84();
  v70 = sub_23DCE1AA8();
  v71 = sub_23DCE1F58();
  if ((sub_23DCE1F94() & 1) != 0)
  {
    v65(v55, v52, v36);
    v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v72 = 0;
    v73 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v70, v71, v73, "SleepingSampleDaySummaryAggregator.sleepDaySummaryProvider.sleepDaySummary", "", v72, 2u);
    v74 = v72;
    v36 = (uint64_t)v220;
    MEMORY[0x24264179C](v74, -1, -1);

    v69(v55, v36);
  }
  else
  {

  }
  v65(v55, v52, v36);
  swift_allocObject();
  v215 = v55;
  v75 = sub_23DCE1AD8();
  v69(v52, v36);
  v76 = v218[6];
  v77 = v218[7];
  __swift_project_boxed_opaque_existential_1(v218 + 3, v76);
  v78 = v217;
  v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v76, v77);
  v217 = (void (*)(_QWORD, _QWORD, _QWORD))v65;
  v80 = v216;
  v212 = v69;
  if (v78)
  {
    swift_release();
    v81 = v215;
    v224 = v78;
    v105 = v78;
    sub_23DC7F564();
    if (swift_dynamicCast())
    {

      v106 = v222;
      v107 = v223;
      sub_23DC87A9C();
      swift_allocError();
      *(_QWORD *)v108 = v106;
      *(_BYTE *)(v108 + 8) = v107;
      swift_willThrow();

      v109 = sub_23DCE1AA8();
      v110 = v210;
      sub_23DCE1ACC();
      v111 = sub_23DCE1F4C();
      if ((sub_23DCE1F94() & 1) != 0)
      {
        swift_retain();
        v112 = v203;
        sub_23DCE1AF0();
        v113 = v112;
        swift_release();
        v114 = v208;
        v115 = v112;
        v116 = v209;
        if ((*(unsigned int (**)(_BYTE *, uint64_t))(v208 + 88))(v115, v209) == *MEMORY[0x24BEE7810])
        {
          v117 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v114 + 8))(v113, v116);
          v117 = "";
        }
        v139 = v210;
        v217(v81, v210, v36);
        v140 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v140 = 0;
        v141 = sub_23DCE1A78();
        _os_signpost_emit_with_name_impl(&dword_23DC7C000, v109, v111, v141, "SleepingSampleDaySummaryAggregator.aggregate", v117, v140, 2u);
        MEMORY[0x24264179C](v140, -1, -1);

        v142 = v212;
        v212(v139, v36);
        v138 = v213;
        v137 = v214;
        v142(v81, v36);
        goto LABEL_44;
      }
      goto LABEL_28;
    }

    v224 = v78;
    v118 = v78;
    if (swift_dynamicCast())
    {

      v119 = v222;
      v120 = v223 | 0x40;
      sub_23DC87A9C();
      swift_allocError();
      *(_QWORD *)v121 = v119;
      *(_BYTE *)(v121 + 8) = v120;
      swift_willThrow();

      v109 = sub_23DCE1AA8();
      v110 = v204;
      sub_23DCE1ACC();
      v122 = sub_23DCE1F4C();
      if ((sub_23DCE1F94() & 1) != 0)
      {
        LODWORD(v220) = v122;
        swift_retain();
        v123 = v197;
        sub_23DCE1AF0();
        swift_release();
        v125 = v208;
        v124 = v209;
        if ((*(unsigned int (**)(_BYTE *, uint64_t))(v208 + 88))(v123, v209) == *MEMORY[0x24BEE7810])
        {
          v126 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v125 + 8))(v123, v124);
          v126 = "";
        }
        v137 = v214;
        v151 = v204;
        v217(v81, v204, v36);
        v152 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v152 = 0;
        v153 = sub_23DCE1A78();
        v154 = v220;
        v155 = v109;
        v156 = v126;
LABEL_40:
        _os_signpost_emit_with_name_impl(&dword_23DC7C000, v155, v154, v153, "SleepingSampleDaySummaryAggregator.aggregate", v156, v152, 2u);
        MEMORY[0x24264179C](v152, -1, -1);

        v159 = v151;
        goto LABEL_43;
      }
    }
    else
    {

      v222 = v78;
      v127 = v78;
      sub_23DC802D0(0, (unint64_t *)&unk_256CF9550);
      if (!swift_dynamicCast())
      {

        v143 = sub_23DCE1AA8();
        v144 = v202;
        sub_23DCE1ACC();
        v145 = sub_23DCE1F4C();
        v146 = sub_23DCE1F94();
        v137 = v214;
        if ((v146 & 1) == 0)
        {

          v136 = v144;
          goto LABEL_29;
        }
        swift_retain();
        v147 = v194;
        sub_23DCE1AF0();
        swift_release();
        v149 = v208;
        v148 = v209;
        if ((*(unsigned int (**)(_BYTE *, uint64_t))(v208 + 88))(v147, v209) == *MEMORY[0x24BEE7810])
        {
          v150 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v149 + 8))(v147, v148);
          v150 = "";
        }
        v217(v81, v202, v36);
        v160 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v160 = 0;
        v161 = sub_23DCE1A78();
        _os_signpost_emit_with_name_impl(&dword_23DC7C000, v143, v145, v161, "SleepingSampleDaySummaryAggregator.aggregate", v150, v160, 2u);
        MEMORY[0x24264179C](v160, -1, -1);

        v159 = v202;
LABEL_43:
        v162 = v212;
        v212(v159, v36);
        v138 = v213;
        v162(v81, v36);
        goto LABEL_44;
      }

      v128 = v224;
      sub_23DC87A9C();
      swift_allocError();
      *(_QWORD *)v129 = v128;
      *(_BYTE *)(v129 + 8) = -64;
      swift_willThrow();

      v109 = sub_23DCE1AA8();
      v110 = v200;
      sub_23DCE1ACC();
      v130 = sub_23DCE1F4C();
      if ((sub_23DCE1F94() & 1) != 0)
      {
        swift_retain();
        v131 = v195;
        sub_23DCE1AF0();
        swift_release();
        v133 = v208;
        v132 = v209;
        v134 = v130;
        if ((*(unsigned int (**)(_BYTE *, uint64_t))(v208 + 88))(v131, v209) == *MEMORY[0x24BEE7810])
        {
          v135 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(_BYTE *, uint64_t))(v133 + 8))(v131, v132);
          v135 = "";
        }
        v220 = v135;
        v137 = v214;
        v151 = v200;
        v217(v81, v200, v36);
        v152 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v152 = 0;
        v153 = sub_23DCE1A78();
        v154 = v134;
        v155 = v109;
        v156 = v220;
        goto LABEL_40;
      }
    }
LABEL_28:

    v136 = v110;
    v137 = v214;
LABEL_29:
    v138 = v213;
    v212(v136, v36);
LABEL_44:
    swift_release();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v138 + 8))(v221, v137);
  }
  v82 = (void *)v79;
  v83 = sub_23DCE1AA8();
  sub_23DCE1ACC();
  v84 = sub_23DCE1F4C();
  v85 = sub_23DCE1F94();
  v183 = v75;
  if ((v85 & 1) != 0)
  {
    v182 = v84;
    swift_retain();
    sub_23DCE1AF0();
    swift_release();
    v87 = v208;
    v86 = v209;
    if ((*(unsigned int (**)(const char *, uint64_t))(v208 + 88))(v80, v209) == *MEMORY[0x24BEE7810])
    {
      v88 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(const char *, uint64_t))(v87 + 8))(v80, v86);
      v88 = "";
    }
    v216 = v88;
    v89 = v218;
    v91 = v215;
    v92 = v211;
    v217(v215, v211, v36);
    v93 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v93 = 0;
    v94 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v83, (os_signpost_type_t)v182, v94, "SleepingSampleDaySummaryAggregator.sleepDaySummaryProvider.sleepDaySummary", v216, v93, 2u);
    v95 = v93;
    v36 = (uint64_t)v220;
    MEMORY[0x24264179C](v95, -1, -1);

    v69(v92, v36);
    v90 = v91;
  }
  else
  {

    v89 = v218;
    v90 = v211;
    v91 = v215;
  }
  v69(v90, v36);
  v96 = (void *)v89[2];
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v97 = (void *)*MEMORY[0x24BDD35B8];
  v98 = v82;
  v99 = (void *)MEMORY[0x242640CE0](v97);
  v100 = v96;
  objc_msgSend(v98, sel_morningIndex);
  v101 = (uint64_t)v205;
  sub_23DCE1C28();
  v102 = objc_msgSend(v98, sel_calendar);
  v103 = (uint64_t)v206;
  sub_23DCE12BC();

  v104 = sub_23DC94814((uint64_t)v98, (uint64_t)v99, v100);
  sub_23DC7FAA4(v101, v103, 0x3FB999999999999ALL, 0, (uint64_t)v104, v99, v100, 16);

  sub_23DC7E940((uint64_t)v207);
  sub_23DCA91E4(v100, v98);
  sub_23DC7E940((uint64_t)v201);
  v157 = (const char *)sub_23DCA947C(v100, v98);
  v158 = v196;
  sub_23DC7E940((uint64_t)v196);
  sub_23DCD47BC((uint64_t)v192);
  objc_msgSend(v98, sel_morningIndex);
  sub_23DCE1C28();
  v216 = v157;
  v164 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v199 + 16);
  v165 = v198;
  v164(v189, v207, v198);
  v164(v190, v201, v165);
  v164(v191, v158, v165);
  v164(v193, (_BYTE *)v218+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature, v165);
  v166 = v192;
  v164(v186, v192, v165);
  sub_23DCE1874();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  v167 = *(void (**)(_BYTE *, uint64_t))(v199 + 8);
  v167(v166, v165);
  v167(v196, v165);
  v167(v201, v165);
  v167(v207, v165);
  v168 = sub_23DCE1AA8();
  v169 = v185;
  sub_23DCE1ACC();
  v170 = sub_23DCE1F4C();
  if ((sub_23DCE1F94() & 1) != 0)
  {
    swift_retain();
    v171 = v184;
    sub_23DCE1AF0();
    swift_release();
    v173 = v208;
    v172 = v209;
    v174 = (*(uint64_t (**)(_BYTE *, uint64_t))(v208 + 88))(v171, v209);
    v175 = v220;
    if (v174 == *MEMORY[0x24BEE7810])
    {
      v176 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v173 + 8))(v171, v172);
      v176 = "";
    }
    v217(v91, v169, v175);
    v178 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v178 = 0;
    v179 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v168, v170, v179, "SleepingSampleDaySummaryAggregator.aggregate", v176, v178, 2u);
    MEMORY[0x24264179C](v178, -1, -1);

    v180 = (void (*)(_BYTE *, const char *))v212;
    v212(v169, (uint64_t)v175);
    v177 = v213;
    v180(v91, v175);
  }
  else
  {

    v177 = v213;
    v212(v169, (uint64_t)v220);
  }
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v177 + 8))(v221, v214);
}

uint64_t sub_23DCA3068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23DCA0B58();
  result = swift_release();
  *a1 = v2;
  return result;
}

size_t sub_23DCA30A4()
{
  size_t v0;

  v0 = sub_23DC9312C();
  swift_release();
  return v0;
}

uint64_t sub_23DCA30D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_23DC92764(a1, a2, a3);
}

uint64_t sub_23DCA30F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  v1 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_morningIndex;
  v2 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature;
  v4 = sub_23DCE14E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_23DCA3180()
{
  return type metadata accessor for SleepingSampleDaySummaryAggregator(0);
}

uint64_t type metadata accessor for SleepingSampleDaySummaryAggregator(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_254325448);
}

uint64_t sub_23DCA319C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23DCE1C64();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE14E4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SleepingSampleDaySummarySequenceError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for SleepingSampleDaySummarySequenceError(id *a1)
{

}

uint64_t assignWithCopy for SleepingSampleDaySummarySequenceError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for SleepingSampleDaySummarySequenceError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummarySequenceError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3D && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 61);
  v3 = (*(_BYTE *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummarySequenceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 61;
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_23DCA33C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_23DCA33CC(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_23DCA33DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummarySequenceError()
{
  return &type metadata for SleepingSampleDaySummarySequenceError;
}

uint64_t sub_23DCA3400()
{
  return sub_23DCA35D8(&qword_256CF98E0, &qword_256CF98E8, MEMORY[0x24BEE23F8], MEMORY[0x24BEE2420]);
}

uint64_t sub_23DCA3434(uint64_t a1)
{
  uint64_t result;

  result = sub_23DC80074(&qword_254324928, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3E50);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23DCA3470()
{
  return swift_deallocObject();
}

uint64_t sub_23DCA3480()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DCA34BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_23DCA0E20(v1[2], v1[4], v1[5], a1);
}

void sub_23DCA34C8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254325748)
  {
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3240];
    sub_23DCA3560(255, &qword_2543257A8, MEMORY[0x24BEE3240]);
    sub_23DCA35D8(&qword_2543257A0, &qword_2543257A8, v0, MEMORY[0x24BEE3250]);
    v1 = sub_23DCE2120();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254325748);
  }
}

void sub_23DCA3560(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_23DC93534(255, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328], (void (*)(void))sub_23DC87A9C);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_23DCA35D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_23DCA3560(255, a2, a3);
    result = MEMORY[0x2426416D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23DCA3618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325858)
  {
    sub_23DC93534(255, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325858);
  }
}

void sub_23DCA368C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543255F0)
  {
    sub_23DCE1C64();
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543255F0);
  }
}

uint64_t sub_23DCA36E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t result;
  uint64_t v13;
  _QWORD v14[2];

  v4 = sub_23DCE1C64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92994();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82858(a1, (uint64_t)v10, v11);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23DC8799C();
    sub_23DC80074((unint64_t *)&unk_2543255C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
    if ((sub_23DCE1D00() & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v13 = 1;
    }
    else
    {
      v14[1] = 1;
      sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      sub_23DCE1FE8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v13 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v13, 1, v4);
  }
  return result;
}

uint64_t sub_23DCA3898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCA38FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCA3960(uint64_t a1)
{
  uint64_t v2;

  sub_23DC93534(0, (unint64_t *)&unk_254325848, (void (*)(uint64_t))MEMORY[0x24BE3FED0], (void (*)(void))sub_23DC9106C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23DCA39BC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

BOOL sub_23DCA39FC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  void *v17;
  char v18;
  unsigned __int8 v19;
  uint64_t v20;
  id v21;
  id v22;
  char v23;
  id v24;
  id v25;
  char v26;

  if (v19 > 0x3Fu)
    return 0;
  if (!v18)
  {
    if (v19)
      return 0;
    sub_23DC802D0(0, (unint64_t *)&qword_254324A30);
    v24 = v17;
    v25 = v16;
    v26 = sub_23DCE1F88();

    return (v26 & 1) != 0;
  }
  if (v18 != 1)
  {
    if (v19 != 2 || v17)
    {

      return 0;
    }
    return 1;
  }
  if (v19 != 1)
    return 0;
  sub_23DC802D0(0, (unint64_t *)&qword_254324A30);
  v20 = 1;
  v21 = v17;
  v22 = v16;
  v23 = sub_23DCE1F88();

  if ((v23 & 1) == 0)
    return 0;
  return v20;
}

uint64_t sub_23DCA3CA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23DCA3D60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DCA3DBC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23DCA3E24())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23DCA3E6C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  swift_getObjectType();
  v4 = sub_23DCE1B14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v8 = sub_23DCE1B08();
  v9 = sub_23DCE1EEC();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = a1;
    v10 = swift_slowAlloc();
    v16 = v4;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446210;
    v13 = sub_23DCE2354();
    v18 = sub_23DCA47EC(v13, v14, &v19);
    a1 = v17;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v8, v9, "[%{public}s] returning extension for healthd", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v12, -1, -1);
    MEMORY[0x24264179C](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x80))(a1);
}

uint64_t sub_23DCA40A0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_23DCE1B14();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v38 - v10;
  sub_23DCE1AFC();
  v12 = sub_23DCE1B08();
  v13 = sub_23DCE1EEC();
  v14 = os_log_type_enabled(v12, v13);
  v41 = ObjectType;
  if (v14)
  {
    v38 = v6;
    v15 = swift_slowAlloc();
    v39 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v40 = v5;
    v18 = v17;
    v43 = v17;
    *(_DWORD *)v16 = 136446210;
    v19 = sub_23DCE2354();
    v42 = sub_23DCA47EC(v19, v20, &v43);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v12, v13, "[%{public}s] returning extension for profile", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    v5 = v40;
    MEMORY[0x24264179C](v21, -1, -1);
    v22 = v16;
    v2 = v39;
    MEMORY[0x24264179C](v22, -1, -1);

    v23 = *(void (**)(char *, uint64_t))(v38 + 8);
  }
  else
  {

    v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  }
  v23(v11, v5);
  v24 = objc_msgSend(a1, sel_profileIdentifier);
  v25 = objc_msgSend(v24, sel_type);

  if (v25 == (id)1 && (objc_opt_self(), (v26 = swift_dynamicCastObjCClass()) != 0))
  {
    v27 = v26;
    v28 = *(uint64_t (**)(uint64_t))((*MEMORY[0x24BEE4EA0] & *v2) + 0x88);
    v29 = a1;
    v30 = v28(v27);

  }
  else
  {
    sub_23DCE1AFC();
    v31 = sub_23DCE1B08();
    v32 = sub_23DCE1EEC();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v43 = v34;
      *(_DWORD *)v33 = 136446210;
      v35 = sub_23DCE2354();
      v42 = sub_23DCA47EC(v35, v36, &v43);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v31, v32, "[%{public}s] profile extension not supported for non-primary profile", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v34, -1, -1);
      MEMORY[0x24264179C](v33, -1, -1);
    }

    v23(v9, v5);
    return 0;
  }
  return v30;
}

id sub_23DCA4484(void *a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for ProductionProfileExtension());
  return sub_23DCB7488(a1);
}

uint64_t static HealthBalanceDaemonPlugin.shouldLoad(for:)(void *a1)
{
  id v1;
  unsigned int v2;

  v1 = objc_msgSend(a1, sel_behavior);
  v2 = objc_msgSend(v1, sel_isRealityDevice);

  return v2 ^ 1;
}

id HealthBalanceDaemonPlugin.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id HealthBalanceDaemonPlugin.init()()
{
  char *v0;
  uint64_t *v1;
  char *v2;
  uint64_t v3;
  objc_super v5;

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier];
  v2 = v0;
  *v1 = sub_23DCE1388();
  v1[1] = v3;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for HealthBalanceDaemonPlugin();
  return objc_msgSendSuper2(&v5, sel_init);
}

id HealthBalanceDaemonPlugin.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthBalanceDaemonPlugin();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t HealthBalanceDaemonPlugin.taskServerClasses()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23DCA4E44();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23DCE3610;
  sub_23DC8F138(0, (unint64_t *)&unk_254324858, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_23DCA4ED4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleDaySummaryQueryServer);
  *(_QWORD *)(v0 + 32) = v1;
  sub_23DC8F138(0, (unint64_t *)&unk_254324848, (uint64_t (*)(uint64_t))sub_23DC95408, sub_23DCA4EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleDaySummaryQueryServer);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = type metadata accessor for TrainingLoadSummaryQueryServer();
  return v0;
}

uint64_t sub_23DCA47EC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23DCA48BC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23DC8535C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23DC8535C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23DCA48BC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23DCE1FDC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23DCA4A74(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23DCE2138();
  if (!v8)
  {
    sub_23DCE21B0();
    __break(1u);
LABEL_17:
    result = sub_23DCE2210();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23DCA4A74(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23DCA4B08(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23DCA4CDC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23DCA4CDC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23DCA4B08(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23DCA4C7C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23DCE20FC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23DCE21B0();
      __break(1u);
LABEL_10:
      v2 = sub_23DCE1D60();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23DCE2210();
    __break(1u);
LABEL_14:
    result = sub_23DCE21B0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23DCA4C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_23DCA5034();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23DCA4CDC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23DCA5034();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HealthBalanceDaemonPlugin()
{
  return objc_opt_self();
}

void sub_23DCA4E44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324A98[0])
  {
    sub_23DCA4E98();
    v0 = sub_23DCE2258();
    if (!v1)
      atomic_store(v0, qword_254324A98);
  }
}

unint64_t sub_23DCA4E98()
{
  unint64_t result;

  result = qword_2543244F0;
  if (!qword_2543244F0)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_2543244F0);
  }
  return result;
}

uint64_t sub_23DCA4ED4()
{
  return sub_23DC80074(&qword_254324930, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, (uint64_t)&unk_23DCE3834);
}

uint64_t sub_23DCA4EF0()
{
  return sub_23DC80074((unint64_t *)&unk_254324900, (uint64_t (*)(uint64_t))sub_23DC95408, (uint64_t)&unk_23DCE380C);
}

uint64_t sub_23DCA4F0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for HealthBalanceDaemonPlugin()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.pluginIdentifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.pluginIdentifier.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.pluginIdentifier.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.extension(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.createBalanceDaemonExtension(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.createBalanceProfileExtension(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

void sub_23DCA5034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325810[0])
  {
    v0 = sub_23DCE2258();
    if (!v1)
      atomic_store(v0, qword_254325810);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for HealthBalanceAnalyticsEnvironment(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for HealthBalanceAnalyticsEnvironment()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HealthBalanceAnalyticsEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HealthBalanceAnalyticsEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for HealthBalanceAnalyticsEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthBalanceAnalyticsEnvironment(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthBalanceAnalyticsEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthBalanceAnalyticsEnvironment()
{
  return &type metadata for HealthBalanceAnalyticsEnvironment;
}

BOOL sub_23DCA532C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_23DCA5384((uint64_t)v7, (uint64_t)v9);
}

BOOL sub_23DCA5384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  char v9;
  char v10;
  int v11;
  int v12;
  _BOOL4 v13;
  char v14;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v6 || (v7 = sub_23DCE2270(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    v9 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
        v9 = 1;
      if ((v9 & 1) != 0)
        return 0;
    }
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
    {
      v10 = sub_23DCE2270();
      result = 0;
      if ((v10 & 1) == 0)
        return result;
    }
    if (((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0)
    {
      v11 = *(unsigned __int8 *)(a1 + 49);
      v12 = *(unsigned __int8 *)(a2 + 49);
      if (v11 == 2)
      {
        if (v12 != 2)
          return 0;
      }
      else
      {
        result = 0;
        v13 = (v11 & 1) == 0;
        if (v12 == 2 || ((v13 ^ v12) & 1) == 0)
          return result;
      }
      if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56))
      {
        v14 = *(_BYTE *)(a2 + 72);
        if ((*(_BYTE *)(a1 + 72) & 1) == 0)
        {
          if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
            v14 = 1;
          return (v14 & 1) == 0;
        }
        if ((*(_BYTE *)(a2 + 72) & 1) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_23DCA54C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  unsigned __int8 v26;
  id v27;
  char isEscapingClosureAtFileLocation;
  char v29;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id aBlock;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;

  v7 = v6;
  v33 = a1;
  v40 = *MEMORY[0x24BDAC8D0];
  sub_23DC81D20(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(id *)&v7[OBJC_IVAR____TtC19HealthBalanceDaemon58StatisticsCollectionCalculatorDateIntervalFilterDataSource_dataSource];
  sub_23DCA5BC0(a2, (uint64_t)v15);
  v16 = sub_23DCE1100();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    v18 = (void *)sub_23DCE10AC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
  }
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v7;
  v19[3] = a3;
  v19[4] = a4;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_23DCA5C28;
  *(_QWORD *)(v20 + 24) = v19;
  v38 = sub_23DCA5C44;
  v39 = v20;
  v21 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_23DCA58D0;
  v37 = &block_descriptor_4;
  v22 = _Block_copy(&aBlock);
  v23 = v7;
  swift_retain();
  swift_release();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a5;
  *(_QWORD *)(v24 + 24) = a6;
  v38 = sub_23DCA0168;
  v39 = v24;
  aBlock = v21;
  v35 = 1107296256;
  v36 = sub_23DCA5900;
  v37 = &block_descriptor_10;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v26 = objc_msgSend(v32, sel_collectionCalculator_queryForInterval_error_sampleHandler_mergeHandler_, v33, v18, &aBlock, v22, v25);
  _Block_release(v25);
  _Block_release(v22);

  v27 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  v29 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v29 & 1) != 0)
    goto LABEL_9;
  if ((v26 & 1) == 0)
  {
    sub_23DCE1154();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23DCA57D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD, uint64_t, double, double, double), double a6, double a7, double a8)
{
  void (*v17)(uint64_t, _QWORD, uint64_t, double, double, double);

  if (objc_msgSend(*(id *)(a4+ OBJC_IVAR____TtC19HealthBalanceDaemon58StatisticsCollectionCalculatorDateIntervalFilterDataSource_includedDateIntervals), sel_hasOverlapWithStartTime_endTime_, a7, a8))return a5(a1, a2 & 1, a3, a6, a7, a8) & 1;
  v17 = *(void (**)(uint64_t, _QWORD, uint64_t, double, double, double))(a4
                                                                                + OBJC_IVAR____TtC19HealthBalanceDaemon58StatisticsCollectionCalculatorDateIntervalFilterDataSource_unitTest_excludedSampleHandler);
  if (v17)
  {
    swift_retain();
    v17(a1, a2 & 1, a3, a6, a7, a8);
    sub_23DC97390((uint64_t)v17);
  }
  return 1;
}

uint64_t sub_23DCA58D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4) & 1;
}

uint64_t sub_23DCA5900(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t type metadata accessor for StatisticsCollectionCalculatorDateIntervalFilterDataSource()
{
  return objc_opt_self();
}

uint64_t sub_23DCA5B88()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23DCA5BB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23DCA5BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC81D20(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCA5C04()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23DCA5C28(uint64_t a1, char a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v6;

  return sub_23DCA57D8(a1, a2, a3, *(_QWORD *)(v6 + 16), *(uint64_t (**)(uint64_t, _QWORD, uint64_t, double, double, double))(v6 + 24), a4, a5, a6);
}

uint64_t sub_23DCA5C34()
{
  return swift_deallocObject();
}

uint64_t sub_23DCA5C44()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_23DCA5C68()
{
  return swift_deallocObject();
}

uint64_t sub_23DCA5C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  void (*v4)(_QWORD *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  sub_23DCA8F50(0);
  sub_23DCA9044();
  sub_23DCE1E68();
  sub_23DCE1E8C();
  if (v7[4] == v7[0])
  {
    sub_23DCA8F2C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    v4 = (void (*)(_QWORD *, _QWORD))sub_23DCE1EA4();
    sub_23DC82858(v5, a1, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v4(v7, 0);
    sub_23DCA8F2C(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
}

uint64_t sub_23DCA5D6C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v1 = sub_23DCA9100(7);
    *(_QWORD *)(v0 + 16) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23DCA5DC8()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v1 = sub_23DCA9100(28);
    *(_QWORD *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

double sub_23DCA5E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;

  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    v1 = sub_23DCA5D6C();
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      if (v2 == 1)
      {
        v3 = 0;
        v4 = 0.0;
      }
      else
      {
        v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
        v5 = (double *)(v1 + 40);
        v4 = 0.0;
        v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v4 = v4 + *(v5 - 1) + *v5;
          v5 += 2;
          v6 -= 2;
        }
        while (v6);
        if (v2 == v3)
          goto LABEL_12;
      }
      v7 = v2 - v3;
      v8 = (double *)(v1 + 8 * v3 + 32);
      do
      {
        v9 = *v8++;
        v4 = v4 + v9;
        --v7;
      }
      while (v7);
    }
    else
    {
      v4 = 0.0;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    *(double *)(v0 + 32) = v4;
    *(_BYTE *)(v0 + 40) = 0;
    return v4;
  }
  return *(double *)(v0 + 32);
}

double sub_23DCA5ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v1 = sub_23DCA5DC8();
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      if (v2 == 1)
      {
        v3 = 0;
        v4 = 0.0;
      }
      else
      {
        v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
        v5 = (double *)(v1 + 40);
        v4 = 0.0;
        v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v4 = v4 + *(v5 - 1) + *v5;
          v5 += 2;
          v6 -= 2;
        }
        while (v6);
        if (v2 == v3)
          goto LABEL_12;
      }
      v7 = v2 - v3;
      v8 = (double *)(v1 + 8 * v3 + 32);
      do
      {
        v9 = *v8++;
        v4 = v4 + v9;
        --v7;
      }
      while (v7);
    }
    else
    {
      v4 = 0.0;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    *(double *)(v0 + 48) = v4;
    *(_BYTE *)(v0 + 56) = 0;
    return v4;
  }
  return *(double *)(v0 + 48);
}

uint64_t sub_23DCA5F7C(NSObject *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  void *v36;
  id v37;
  NSObject *v38;
  id v39;
  char v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  double v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  double v52;
  double v53;
  double v54;
  _QWORD *v55;
  id v56;
  NSObject *v57;
  id v58;
  NSObject *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  id v65;
  id v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  double v72;
  _QWORD *v73;
  char v74;
  unint64_t v75;
  unint64_t v76;
  double v77;
  double v78;
  double v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  void (*v96)(char *, uint64_t);
  char *v97;
  uint64_t v98;
  void (*v99)(id *, _QWORD);
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  int v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  id v117[4];

  v4 = v3;
  v109 = a3;
  v110 = a2;
  v116 = a1;
  sub_23DC87938();
  v104 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v105 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v102 = (char *)&v100 - v8;
  sub_23DCA8F2C(0);
  v106 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v103 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v107 = (uint64_t)&v100 - v12;
  v115 = sub_23DCE1B14();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23DCE1C64();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v108 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v111 = (char *)&v100 - v19;
  sub_23DCA368C();
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v100 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v100 - v27;
  v29 = v4 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex;
  swift_beginAccess();
  sub_23DC82858(v29, (uint64_t)v28, (uint64_t (*)(_QWORD))sub_23DCA368C);
  v112 = v16;
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v31 = v30(v28, 1, v15);
  v32 = v15;
  sub_23DC827C4((uint64_t)v28, (uint64_t (*)(_QWORD))sub_23DCA368C);
  if (v31 == 1)
  {
    v33 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v26, v110, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v26, 0, 1, v15);
    swift_beginAccess();
    sub_23DCA90BC((uint64_t)v26, v29);
    swift_endAccess();
  }
  sub_23DC82858(v29, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_23DCA368C);
  if (v30(v23, 1, v15) == 1)
    return sub_23DC827C4((uint64_t)v23, (uint64_t (*)(_QWORD))sub_23DCA368C);
  v100 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
  v100(v111, v23, v15);
  v35 = OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit;
  v36 = *(void **)(v4 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit);
  if (v36)
  {
    v37 = v36;
    v38 = v116;
    v39 = -[NSObject _unit](v116, sel__unit);
    sub_23DC802D0(0, &qword_256CF9BB0);
    v40 = sub_23DCE1F88();

    if ((v40 & 1) == 0)
    {
      sub_23DCE1AFC();
      v56 = v37;
      v57 = v38;
      v58 = v56;
      v59 = v57;
      v60 = sub_23DCE1B08();
      v61 = sub_23DCE1ED4();
      v116 = v60;
      if (os_log_type_enabled(v60, v61))
      {
        v62 = swift_slowAlloc();
        v63 = swift_slowAlloc();
        v101 = v32;
        v64 = (_QWORD *)v63;
        *(_DWORD *)v62 = 138412546;
        v65 = -[NSObject _unit](v59, sel__unit);
        v117[0] = v65;
        sub_23DCE1FD0();
        *v64 = v65;

        *(_WORD *)(v62 + 12) = 2112;
        v117[0] = v58;
        v66 = v58;
        sub_23DCE1FD0();
        v64[1] = v36;

        _os_log_impl(&dword_23DC7C000, v116, v61, "Received invalid different unit %@ when previously had %@", (uint8_t *)v62, 0x16u);
        sub_23DC80CF8();
        swift_arrayDestroy();
        v67 = v64;
        v32 = v101;
        MEMORY[0x24264179C](v67, -1, -1);
        MEMORY[0x24264179C](v62, -1, -1);
      }
      else
      {

      }
      v81 = v115;
      v82 = v114;

      (*(void (**)(char *, uint64_t))(v82 + 8))(v14, v81);
      return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v111, v32);
    }
    v101 = v32;
  }
  else
  {
    v101 = v15;
    v38 = v116;
    v41 = -[NSObject _unit](v116, sel__unit);
    v37 = *(id *)(v4 + v35);
    *(_QWORD *)(v4 + v35) = v41;
  }

  v42 = sub_23DCE1C4C();
  result = sub_23DCA5D6C();
  v43 = result;
  v44 = *(_QWORD *)(result + 16);
  v115 = v42;
  if (v44)
  {
    v45 = 0;
    v46 = v4 + 64;
    v113 = result + 32;
    v114 = v42 ^ 0x7FFFFFFFFFFFFFFFLL;
    while (v45 < *(_QWORD *)(v43 + 16))
    {
      if (v45 == v114)
        goto LABEL_55;
      v47 = *(double *)(v113 + 8 * v45);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v46 + 16) < (int64_t)(v42 + 1))
      {
        do
        {
          swift_beginAccess();
          v48 = *(_QWORD **)v46;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v46 = v48;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v48 = sub_23DC8EAC0(0, v48[2] + 1, 1, v48);
            *(_QWORD *)v46 = v48;
          }
          v51 = v48[2];
          v50 = v48[3];
          if (v51 >= v50 >> 1)
          {
            v48 = sub_23DC8EAC0((_QWORD *)(v50 > 1), v51 + 1, 1, v48);
            *(_QWORD *)v46 = v48;
          }
          v48[2] = v51 + 1;
          v48[v51 + 4] = 0;
          swift_endAccess();
        }
        while (*(_QWORD *)(*(_QWORD *)v46 + 16) < v42 + 1);
      }
      -[NSObject _value](v116, sel__value);
      v53 = v52;
      v54 = sub_23DCA5E24();
      swift_beginAccess();
      v55 = *(_QWORD **)(v4 + 64);
      result = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v4 + 64) = v55;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23DCB40D8(v55);
        v55 = (_QWORD *)result;
        *(_QWORD *)v46 = result;
      }
      if (v115 < 0)
        goto LABEL_56;
      if (v42 >= v55[2])
        goto LABEL_57;
      ++v45;
      *(double *)&v55[v42 + 4] = v47 * v53 / v54 + *(double *)&v55[v42 + 4];
      result = swift_endAccess();
      ++v42;
      if (v45 == v44)
      {
        swift_bridgeObjectRelease();
        v38 = v116;
        v42 = v115;
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
LABEL_28:
  if ((v109 & 1) != 0)
    return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v111, v101);
  result = sub_23DCA5DC8();
  v68 = result;
  v69 = *(_QWORD *)(result + 16);
  if (v69)
  {
    v70 = 0;
    v71 = v4 + 72;
    v113 = result + 32;
    v114 = v42 ^ 0x7FFFFFFFFFFFFFFFLL;
    while (v70 < *(_QWORD *)(v68 + 16))
    {
      if (v70 == v114)
        goto LABEL_59;
      v72 = *(double *)(v113 + 8 * v70);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v71 + 16) < (int64_t)(v42 + 1))
      {
        do
        {
          swift_beginAccess();
          v73 = *(_QWORD **)v71;
          v74 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)v71 = v73;
          if ((v74 & 1) == 0)
          {
            v73 = sub_23DC8EAC0(0, v73[2] + 1, 1, v73);
            *(_QWORD *)v71 = v73;
          }
          v76 = v73[2];
          v75 = v73[3];
          if (v76 >= v75 >> 1)
          {
            v73 = sub_23DC8EAC0((_QWORD *)(v75 > 1), v76 + 1, 1, v73);
            *(_QWORD *)v71 = v73;
          }
          v73[2] = v76 + 1;
          v73[v76 + 4] = 0;
          swift_endAccess();
        }
        while (*(_QWORD *)(*(_QWORD *)v71 + 16) < v42 + 1);
      }
      -[NSObject _value](v116, sel__value);
      v78 = v77;
      v79 = sub_23DCA5ED0();
      swift_beginAccess();
      v80 = *(_QWORD **)(v4 + 72);
      result = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v4 + 72) = v80;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_23DCB40D8(v80);
        v80 = (_QWORD *)result;
        *(_QWORD *)v71 = result;
      }
      if (v115 < 0)
        goto LABEL_60;
      if (v42 >= v80[2])
        goto LABEL_61;
      ++v70;
      *(double *)&v80[v42 + 4] = v72 * v78 / v79 + *(double *)&v80[v42 + 4];
      result = swift_endAccess();
      ++v42;
      if (v70 == v69)
      {
        swift_bridgeObjectRelease();
        v38 = v116;
        goto LABEL_48;
      }
    }
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  swift_bridgeObjectRelease();
LABEL_48:
  -[NSObject _value](v38, sel__value);
  v83 = v101;
  v84 = v108;
  v85 = v110;
  if (v86 <= 0.0)
    return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v111, v101);
  sub_23DCA5DC8();
  swift_bridgeObjectRelease();
  sub_23DCE1C40();
  sub_23DC8E674();
  result = sub_23DCE1CD0();
  if ((result & 1) == 0)
  {
LABEL_62:
    __break(1u);
    return result;
  }
  v87 = v104;
  v88 = v102;
  v89 = &v102[*(int *)(v104 + 48)];
  v90 = v112;
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
  v91(v102, v85, v83);
  v91(v89, (uint64_t)v84, v83);
  v92 = v105;
  v93 = &v105[*(int *)(v87 + 48)];
  v91(v105, (uint64_t)v88, v83);
  v91(v93, (uint64_t)v89, v83);
  v94 = (uint64_t)v103;
  v95 = v100;
  v100(v103, v92, v83);
  v96 = *(void (**)(char *, uint64_t))(v90 + 8);
  v96(v93, v83);
  v97 = &v92[*(int *)(v87 + 48)];
  v95(v92, v88, v83);
  v95(v97, v89, v83);
  v95((char *)(v94 + *(int *)(v106 + 36)), v97, v83);
  v96(v92, v83);
  v98 = v107;
  sub_23DC87A14(v94, v107, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  swift_beginAccess();
  sub_23DC80074((unint64_t *)&unk_2543255C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  if ((sub_23DCE1D00() & 1) == 0)
  {
    sub_23DC8F138(0, qword_256CF9AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, MEMORY[0x24BEE4968]);
    v99 = (void (*)(id *, _QWORD))sub_23DCE2330();
    sub_23DCA8F50(0);
    sub_23DCE2318();
    v99(v117, 0);
  }
  swift_endAccess();
  sub_23DC827C4(v98, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v96(v108, v83);
  return ((uint64_t (*)(char *, uint64_t))v96)(v111, v83);
}

uint64_t sub_23DCA6C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  char *v98;
  void (*v99)(char *, uint64_t);
  int v100;
  char *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t result;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, uint64_t, uint64_t);
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  void (*v118)(char *, uint64_t);
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  unsigned int v133;
  void (*v134)(char *, uint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  char *v137;
  char v138;
  char *v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  BOOL v153;
  uint64_t v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t);
  char *v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  char *v160;
  char *v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  void (*v164)(char *, char *, uint64_t);
  char *v165;
  void (*v166)(char *, char *, uint64_t);
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  double v171;
  char *v172;
  char *v173;
  void (*v174)(char *, char *, uint64_t);
  id v175;
  char *v176;
  void (*v177)(char *, uint64_t, uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  void (*v186)(char *, char *, uint64_t);
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  Class v194;
  id v195;
  char *v196;
  char *v197;
  void (*v198)(char *, uint64_t, uint64_t);
  char *v199;
  NSObject *v200;
  os_log_type_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  void (*v207)(char *, uint64_t);
  uint64_t v208;
  unint64_t v209;
  char *v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  char *v214;
  void (*v215)(char *, uint64_t);
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  id v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t (*v237)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t);
  void (*v238)(char *, uint64_t);
  void (*v239)(char *, uint64_t, uint64_t);
  void (*v240)(char *, uint64_t);
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  unsigned int (*v269)(char *, uint64_t, uint64_t);
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  void (*v274)(char *, char *, uint64_t);
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  void (*v283)(char *, uint64_t, uint64_t);
  void (*v284)(char *, uint64_t);
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;

  v225 = a2;
  v264 = a1;
  v222 = sub_23DCE1B14();
  v221 = *(_QWORD *)(v222 - 8);
  MEMORY[0x24BDAC7A8](v222);
  v224 = (char *)&v216 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v251 = sub_23DCE16C4();
  v250 = *(_QWORD *)(v251 - 8);
  v4 = MEMORY[0x24BDAC7A8](v251);
  v249 = (char *)&v216 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v248 = (char *)&v216 - v6;
  v242 = sub_23DCE16E8();
  v244 = *(_QWORD *)(v242 - 8);
  v7 = MEMORY[0x24BDAC7A8](v242);
  v247 = (char *)&v216 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v280 = (char *)&v216 - v9;
  v279 = sub_23DCE16A0();
  v278 = *(_QWORD *)(v279 - 8);
  v10 = MEMORY[0x24BDAC7A8](v279);
  v246 = (char *)&v216 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v288 = (char *)&v216 - v12;
  v277 = sub_23DCE1688();
  v276 = *(_QWORD *)(v277 - 8);
  v13 = MEMORY[0x24BDAC7A8](v277);
  v245 = (char *)&v216 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v287 = (char *)&v216 - v15;
  sub_23DC92D58();
  v263 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v262 = (uint64_t)&v216 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC92994();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v258 = (uint64_t)&v216 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v261 = (char *)&v216 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v282 = (uint64_t)&v216 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v265 = (char *)&v216 - v25;
  sub_23DC87938();
  v260 = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v286 = (char *)&v216 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v259 = (char *)&v216 - v29;
  sub_23DC8799C();
  v223 = v30;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v227 = (char *)&v216 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v234 = (uint64_t)&v216 - v33;
  sub_23DC92A5C();
  v270 = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v228 = (uint64_t)&v216 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v266 = (uint64_t)&v216 - v37;
  sub_23DC7F518(0, &qword_2543256D0, sub_23DCA8F2C);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v257 = (uint64_t)&v216 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v284 = (void (*)(char *, uint64_t))((char *)&v216 - v41);
  sub_23DCA8F50(0);
  v267 = v42;
  v283 = *(void (**)(char *, uint64_t, uint64_t))(v42 - 8);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v256 = (char *)&v216 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v216 - v45;
  sub_23DC8F138(0, qword_256CF9AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, MEMORY[0x24BEE4968]);
  v48 = v47;
  v272 = *(_QWORD *)(v47 - 8);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v218 = (char *)&v216 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v255 = (char *)&v216 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v271 = (char *)&v216 - v53;
  sub_23DCA8F2C(0);
  v55 = v54;
  v56 = *(_QWORD *)(v54 - 8);
  v57 = MEMORY[0x24BDAC7A8](v54);
  v243 = (char *)&v216 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v232 = (uint64_t)&v216 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v275 = (uint64_t)&v216 - v62;
  MEMORY[0x24BDAC7A8](v61);
  v226 = (uint64_t)&v216 - v63;
  sub_23DCA368C();
  v65 = MEMORY[0x24BDAC7A8](v64);
  v252 = (char *)&v216 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v65);
  v68 = (char *)&v216 - v67;
  v69 = sub_23DCE1C64();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = MEMORY[0x24BDAC7A8](v69);
  v220 = (char *)&v216 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = MEMORY[0x24BDAC7A8](v71);
  v219 = (char *)&v216 - v74;
  v75 = MEMORY[0x24BDAC7A8](v73);
  v231 = (char *)&v216 - v76;
  v77 = MEMORY[0x24BDAC7A8](v75);
  v281 = (char *)&v216 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v254 = (char *)&v216 - v80;
  v81 = MEMORY[0x24BDAC7A8](v79);
  v268 = (char *)&v216 - v82;
  v83 = MEMORY[0x24BDAC7A8](v81);
  v285 = (char *)&v216 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v253 = (char *)&v216 - v86;
  MEMORY[0x24BDAC7A8](v85);
  v88 = (char *)&v216 - v87;
  v89 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex;
  swift_beginAccess();
  v90 = v89;
  v91 = v70;
  sub_23DC82858(v90, (uint64_t)v68, (uint64_t (*)(_QWORD))sub_23DCA368C);
  v269 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  if (v269(v68, 1, v69) == 1)
  {
    sub_23DC827C4((uint64_t)v68, (uint64_t (*)(_QWORD))sub_23DCA368C);
    return MEMORY[0x24BEE4AF8];
  }
  v274 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  v274(v88, v68, v69);
  v217 = v2;
  v92 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_validDataDayRanges;
  swift_beginAccess();
  v93 = v56;
  v94 = v48;
  v95 = v55;
  v96 = v272;
  v97 = *(void (**)(char *, uint64_t, uint64_t))(v272 + 16);
  v98 = v271;
  v241 = v92;
  v239 = v97;
  v97(v271, v92, v94);
  sub_23DCE2324();
  v240 = *(void (**)(char *, uint64_t))(v96 + 8);
  v240(v98, v94);
  v99 = v284;
  sub_23DCA5C80((uint64_t)v284);
  v238 = (void (*)(char *, uint64_t))*((_QWORD *)v283 + 1);
  v238(v46, v267);
  v237 = *(uint64_t (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v93 + 48);
  v100 = v237((void (*)(_QWORD, _QWORD))v99, 1, v95);
  v101 = v88;
  if (v100 == 1)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v69);
    sub_23DCA8F74((uint64_t)v284);
    return MEMORY[0x24BEE4AF8];
  }
  v272 = v91;
  v273 = v95;
  v102 = v226;
  sub_23DC87A14((uint64_t)v284, v226, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v103 = *(void **)(v217 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit);
  if (!v103)
  {
LABEL_8:
    sub_23DC827C4(v102, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    (*(void (**)(char *, uint64_t))(v272 + 8))(v101, v69);
    return MEMORY[0x24BEE4AF8];
  }
  v104 = sub_23DC8E674();
  v105 = v103;
  v106 = v225;
  if ((sub_23DCE1CB8() & 1) != 0)
  {

    goto LABEL_8;
  }
  v236 = v94;
  v229 = v105;
  v230 = v101;
  v291 = MEMORY[0x24BEE4AF8];
  v108 = v264;
  v235 = v104;
  result = sub_23DCE1CD0();
  if ((result & 1) == 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  v109 = v106;
  v110 = v260;
  v111 = v259;
  v112 = &v259[*(int *)(v260 + 48)];
  v113 = *(void (**)(char *, uint64_t, uint64_t))(v272 + 16);
  v113(v259, v108, v69);
  v271 = v112;
  v113(v112, v109, v69);
  v114 = v286;
  v115 = &v286[*(int *)(v110 + 48)];
  v113(v286, (uint64_t)v111, v69);
  v113(v115, (uint64_t)v112, v69);
  v116 = (uint64_t)v227;
  v117 = v274;
  v274(v227, v114, v69);
  v118 = *(void (**)(char *, uint64_t))(v272 + 8);
  v118(v115, v69);
  v119 = &v114[*(int *)(v110 + 48)];
  v117(v114, v111, v69);
  v117(v119, v271, v69);
  v117((char *)(v116 + *(int *)(v223 + 36)), v119, v69);
  v284 = v118;
  v118(v114, v69);
  v120 = v234;
  sub_23DC87A14(v116, v234, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v121 = v228;
  sub_23DC82858(v120, v228, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v122 = (uint64_t)v265;
  v283 = v113;
  v113(v265, v120, v69);
  v272 = *(_QWORD *)(v272 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v272)(v122, 0, 1, v69);
  sub_23DC827C4(v120, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v123 = v270;
  sub_23DC87A14(v122, v121 + *(int *)(v270 + 36), (uint64_t (*)(_QWORD))sub_23DC92994);
  v124 = v266;
  sub_23DC87A14(v121, v266, (uint64_t (*)(_QWORD))sub_23DC92A5C);
  v125 = v124 + *(int *)(v123 + 36);
  v126 = (char *)(v217 + 72);
  v234 = v217 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_activityType;
  v228 = v217 + 64;
  swift_beginAccess();
  v227 = v126;
  swift_beginAccess();
  v271 = 0;
  v127 = (uint64_t)v261;
  v128 = v281;
  v270 = v125;
  v233 = v69;
  while (1)
  {
    v129 = v282;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v272)(v282, 1, 1, v69);
    v130 = v262;
    v131 = v262 + *(int *)(v263 + 48);
    sub_23DC82858(v125, v262, (uint64_t (*)(_QWORD))sub_23DC92994);
    sub_23DC82858(v129, v131, (uint64_t (*)(_QWORD))sub_23DC92994);
    v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v269;
    if (v269((char *)v130, 1, v69) == 1)
      break;
    sub_23DC82858(v130, v127, (uint64_t (*)(_QWORD))sub_23DC92994);
    if (v132(v131, 1, v69) == 1)
    {
      v284((char *)v127, v69);
      v134 = (void (*)(char *, uint64_t, uint64_t))v274;
      goto LABEL_17;
    }
    v135 = v285;
    v136 = v127;
    v134 = (void (*)(char *, uint64_t, uint64_t))v274;
    v274(v285, (char *)v136, v69);
    v137 = v268;
    v134(v268, v131, v69);
    sub_23DC80074((unint64_t *)&unk_2543255C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
    v138 = sub_23DCE1D00();
    v139 = v137;
    v140 = v284;
    v284(v139, v69);
    v140(v135, v69);
    v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v269;
    sub_23DC827C4(v130, (uint64_t (*)(_QWORD))sub_23DC92994);
    sub_23DC827C4(v282, (uint64_t (*)(_QWORD))sub_23DC92994);
    if ((v138 & 1) != 0)
      goto LABEL_32;
LABEL_19:
    v141 = v270;
    v142 = v258;
    sub_23DC82858(v270, v258, (uint64_t (*)(_QWORD))sub_23DC92994);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v132)(v142, 1, v69);
    if ((_DWORD)result == 1)
      goto LABEL_40;
    v143 = v254;
    v134(v254, v142, v69);
    v144 = v253;
    v134(v253, (uint64_t)v143, v69);
    v145 = (uint64_t)v265;
    sub_23DCA36E0(v141, (uint64_t)v265);
    sub_23DC827C4(v141, (uint64_t (*)(_QWORD))sub_23DC92994);
    sub_23DC87A14(v145, v141, (uint64_t (*)(_QWORD))sub_23DC92994);
    v134(v128, (uint64_t)v144, v69);
    v146 = v255;
    v147 = v236;
    v239(v255, v241, v236);
    v148 = v128;
    v149 = v256;
    sub_23DCE2324();
    v150 = ((uint64_t (*)(char *, uint64_t))v240)(v146, v147);
    MEMORY[0x24BDAC7A8](v150);
    *(&v216 - 2) = (uint64_t)v148;
    v151 = v257;
    v152 = v271;
    sub_23DCA88C8((uint64_t (*)(char *))sub_23DCA8FC0, (uint64_t)(&v216 - 4), v257);
    v238(v149, v267);
    v153 = v237((void (*)(_QWORD, _QWORD))v151, 1, v273) == 1;
    v271 = v152;
    v154 = v151;
    if (v153)
    {
      sub_23DCA8F74(v151);
      sub_23DCE167C();
      v155 = v285;
      v156 = (void (*)(char *, char *, uint64_t))v283;
      v283(v285, (uint64_t)v148, v69);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v272)(v252, 1, 1, v69);
      sub_23DCE1694();
      v157 = v268;
      sub_23DCE1BC8();
      sub_23DCE1BE0();
      v158 = v284;
      v284(v157, v69);
      result = sub_23DCE1CD0();
      if ((result & 1) == 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v159 = v260;
      v160 = v259;
      v161 = &v259[*(int *)(v260 + 48)];
      v156(v259, v148, v69);
      v162 = v274;
      v274(v161, v155, v69);
      v163 = &v286[*(int *)(v159 + 48)];
      v156(v286, v160, v69);
      v156(v163, v161, v69);
      v164 = v162;
      v165 = v287;
      v166 = v164;
      v167 = (uint64_t)v243;
      v166(v243, v286, v69);
      v158(v163, v69);
      v168 = v286;
      v169 = &v286[*(int *)(v159 + 48)];
      v166(v286, v160, v69);
      v166(v169, v161, v69);
    }
    else
    {
      v170 = v232;
      sub_23DC87A14(v154, v232, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      result = sub_23DCE1C4C();
      v171 = 0.0;
      v172 = v148;
      v173 = v268;
      v174 = v274;
      if (result < *(_QWORD *)(*(_QWORD *)v228 + 16))
      {
        if (result < 0)
          goto LABEL_38;
        v171 = *(double *)(*(_QWORD *)v228 + 8 * result + 32);
      }
      v175 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v229, v171);
      sub_23DCE167C();
      v176 = v285;
      v177 = v283;
      v283(v285, (uint64_t)v172, v69);
      v178 = v252;
      v177(v252, v170, v69);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v272)(v178, 0, 1, v69);
      sub_23DCE1694();
      v177(v176, v170, v69);
      v179 = v231;
      sub_23DCE1BC8();
      sub_23DCE1BE0();
      v158 = v284;
      v284(v179, v69);
      LOBYTE(v179) = sub_23DCE1CD0();
      result = sub_23DC827C4(v170, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      if ((v179 & 1) == 0)
        goto LABEL_37;
      v180 = v260;
      v181 = v259;
      v182 = v173;
      v183 = &v259[*(int *)(v260 + 48)];
      v184 = v176;
      v166 = v174;
      v174(v259, v184, v69);
      v174(v183, v182, v69);
      v168 = v286;
      v185 = &v286[*(int *)(v180 + 48)];
      v186 = (void (*)(char *, char *, uint64_t))v283;
      v283(v286, (uint64_t)v181, v69);
      v186(v185, v183, v69);
      v167 = (uint64_t)v243;
      v166(v243, v168, v69);
      v158(v185, v69);
      v169 = &v168[*(int *)(v180 + 48)];
      v166(v168, v181, v69);
      v166(v169, v183, v69);
      v165 = v287;
    }
    v166((char *)(v167 + *(int *)(v273 + 36)), v169, v69);
    v158(v168, v69);
    v187 = v275;
    sub_23DC87A14(v167, v275, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    (*(void (**)(char *, char *, uint64_t))(v276 + 16))(v245, v165, v277);
    (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v246, v288, v279);
    v188 = v280;
    sub_23DCE16DC();
    v283(v285, (uint64_t)v281, v69);
    sub_23DC82858(v187, v167, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v189 = v244;
    v190 = v242;
    (*(void (**)(char *, char *, uint64_t))(v244 + 16))(v247, v188, v242);
    v191 = v248;
    sub_23DCE16B8();
    v192 = v250;
    v193 = v251;
    (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v249, v191, v251);
    sub_23DC94DA4();
    v195 = objc_allocWithZone(v194);
    sub_23DCE1B68();
    MEMORY[0x242640B90]();
    if (*(_QWORD *)((v291 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v291 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_23DCE1DD8();
    sub_23DCE1DFC();
    sub_23DCE1DCC();
    (*(void (**)(char *, uint64_t))(v192 + 8))(v191, v193);
    (*(void (**)(char *, uint64_t))(v189 + 8))(v280, v190);
    sub_23DC827C4(v275, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    (*(void (**)(char *, uint64_t))(v278 + 8))(v288, v279);
    (*(void (**)(char *, uint64_t))(v276 + 8))(v287, v277);
    v128 = v281;
    v69 = v233;
    v284(v281, v233);
    v108 = v264;
    v127 = (uint64_t)v261;
    v125 = v270;
  }
  v133 = v132(v131, 1, v69);
  v134 = (void (*)(char *, uint64_t, uint64_t))v274;
  if (v133 != 1)
  {
LABEL_17:
    sub_23DC827C4(v130, (uint64_t (*)(_QWORD))sub_23DC92D58);
    sub_23DC827C4(v282, (uint64_t (*)(_QWORD))sub_23DC92994);
    goto LABEL_19;
  }
  sub_23DC827C4(v130, (uint64_t (*)(_QWORD))sub_23DC92994);
  sub_23DC827C4(v282, (uint64_t (*)(_QWORD))sub_23DC92994);
LABEL_32:
  sub_23DC827C4(v266, (uint64_t (*)(_QWORD))sub_23DC92A5C);
  v196 = v224;
  sub_23DCE1AFC();
  v197 = v219;
  v198 = v283;
  v283(v219, v108, v69);
  v199 = v220;
  v198(v220, v225, v69);
  swift_retain_n();
  v200 = sub_23DCE1B08();
  v201 = sub_23DCE1EEC();
  v202 = v201;
  if (os_log_type_enabled(v200, v201))
  {
    v203 = swift_slowAlloc();
    v288 = (char *)swift_slowAlloc();
    v290 = v288;
    *(_DWORD *)v203 = 136315650;
    LODWORD(v287) = v202;
    v204 = v236;
    sub_23DC80074((unint64_t *)&unk_2543255E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
    v205 = sub_23DCE224C();
    v289 = sub_23DCA47EC(v205, v206, (uint64_t *)&v290);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    v207 = v284;
    v284(v197, v69);
    *(_WORD *)(v203 + 12) = 2080;
    v208 = sub_23DCE224C();
    v289 = sub_23DCA47EC(v208, v209, (uint64_t *)&v290);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    v207(v199, v69);
    *(_WORD *)(v203 + 22) = 2080;
    v210 = v218;
    v239(v218, v241, v204);
    sub_23DCA8FDC();
    v211 = sub_23DCE224C();
    v213 = v212;
    v240(v210, v204);
    v289 = sub_23DCA47EC(v211, v213, (uint64_t *)&v290);
    sub_23DCE1FD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v200, (os_log_type_t)v287, "Getting results [%s: %s], valid dates %s", (uint8_t *)v203, 0x20u);
    v214 = v288;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v214, -1, -1);
    MEMORY[0x24264179C](v203, -1, -1);

    (*(void (**)(char *, uint64_t))(v221 + 8))(v224, v222);
    sub_23DC827C4(v226, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v207(v230, v69);
  }
  else
  {
    swift_release_n();

    v215 = v284;
    v284(v199, v69);
    v215(v197, v69);
    (*(void (**)(char *, uint64_t))(v221 + 8))(v196, v222);
    sub_23DC827C4(v226, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v215(v230, v69);
  }
  return v291;
}

uint64_t sub_23DCA8778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  uint64_t v14;

  sub_23DCA8F2C(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1C64();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8E674();
  v11 = sub_23DCE1CD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_23DC82858(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  if ((v11 & 1) != 0)
    v12 = sub_23DCE1CB8();
  else
    v12 = 0;
  sub_23DC827C4((uint64_t)v6, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

uint64_t sub_23DCA88C8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *);
  uint64_t v36;
  _QWORD v37[4];
  uint64_t v38;

  v35 = a1;
  v36 = a2;
  v31 = a3;
  sub_23DCA8F2C(0);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v29 - v8;
  sub_23DCA8F50(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8F138(0, &qword_256CF9B98, (uint64_t (*)(uint64_t))sub_23DCA8F50, sub_23DCA9044, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2C00]);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - v16;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v33 = v11;
  v32(v13, v3, v10);
  sub_23DC80074(&qword_256CF9BA8, (uint64_t (*)(uint64_t))sub_23DCA8F50, MEMORY[0x24BEE4928]);
  sub_23DCE1D6C();
  v18 = &v17[*(int *)(v15 + 36)];
  sub_23DCA9044();
  v19 = *(_QWORD *)v18;
  sub_23DCE1E8C();
  if (v19 == v37[0])
  {
LABEL_5:
    sub_23DCA9060((uint64_t)v17);
    v26 = 1;
    v27 = v31;
  }
  else
  {
    while (1)
    {
      v20 = (void (*)(_QWORD *, _QWORD))sub_23DCE1EA4();
      v21 = v34;
      sub_23DC82858(v22, v34, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v20(v37, 0);
      v32(v13, (uint64_t)v17, v10);
      sub_23DCE1E98();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v10);
      sub_23DC87A14(v21, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v23 = v38;
      v24 = v35(v7);
      if (v23)
      {
        sub_23DC827C4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        return sub_23DCA9060((uint64_t)v17);
      }
      if ((v24 & 1) != 0)
        break;
      v38 = 0;
      sub_23DC827C4((uint64_t)v7, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v25 = *(_QWORD *)v18;
      sub_23DCE1E8C();
      if (v25 == v37[0])
        goto LABEL_5;
    }
    sub_23DCA9060((uint64_t)v17);
    v27 = v31;
    sub_23DC87A14((uint64_t)v7, v31, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v26 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, v26, 1, v30);
}

uint64_t sub_23DCA8BC8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 56) = 1;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 64) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = v5;
  v6 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex;
  v7 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_23DC8E674();
  sub_23DCE233C();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit) = 0;
  v8 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_activityType;
  *(_QWORD *)v8 = a1;
  *(_BYTE *)(v8 + 8) = a2 & 1;
  return v2;
}

uint64_t sub_23DCA8C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23DC827C4(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex, (uint64_t (*)(_QWORD))sub_23DCA368C);
  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_validDataDayRanges;
  sub_23DC8F138(0, qword_256CF9AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, MEMORY[0x24BEE4968]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_23DCA8D50()
{
  sub_23DCA8C9C();
  return swift_deallocClassInstance();
}

uint64_t sub_23DCA8D74()
{
  return type metadata accessor for RecentBiasBaselineCalculator();
}

uint64_t type metadata accessor for RecentBiasBaselineCalculator()
{
  uint64_t result;

  result = qword_256CF9AA8;
  if (!qword_256CF9AA8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DCA8DB8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DCA368C();
  if (v0 <= 0x3F)
  {
    sub_23DC8F138(319, qword_256CF9AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, MEMORY[0x24BEE4968]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23DCA8E94@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = a2 & 1;
  v6 = swift_allocObject();
  result = sub_23DCA8BC8(a1, v5);
  *a3 = v6;
  return result;
}

uint64_t sub_23DCA8EE4(NSObject *a1, uint64_t a2, int a3)
{
  return sub_23DCA5F7C(a1, a2, a3);
}

uint64_t sub_23DCA8F04(uint64_t a1, uint64_t a2)
{
  return sub_23DCA6C60(a1, a2);
}

uint64_t sub_23DCA8F24()
{
  return 57;
}

void sub_23DCA8F2C(uint64_t a1)
{
  sub_23DC8F138(a1, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
}

void sub_23DCA8F50(uint64_t a1)
{
  sub_23DC8F138(a1, &qword_256CF9B88, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, MEMORY[0x24BEE4908]);
}

uint64_t sub_23DCA8F74(uint64_t a1)
{
  uint64_t v2;

  sub_23DC7F518(0, &qword_2543256D0, sub_23DCA8F2C);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DCA8FC0(uint64_t a1)
{
  uint64_t v1;

  return sub_23DCA8778(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_23DCA8FDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256CF9B90;
  if (!qword_256CF9B90)
  {
    sub_23DC8F138(255, qword_256CF9AB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], sub_23DC8E674, MEMORY[0x24BEE4968]);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE4990], v1);
    atomic_store(result, (unint64_t *)&qword_256CF9B90);
  }
  return result;
}

uint64_t sub_23DCA9044()
{
  return sub_23DC80074(&qword_256CF9BA0, (uint64_t (*)(uint64_t))sub_23DCA8F50, MEMORY[0x24BEE4930]);
}

uint64_t sub_23DCA9060(uint64_t a1)
{
  uint64_t v2;

  sub_23DC8F138(0, &qword_256CF9B98, (uint64_t (*)(uint64_t))sub_23DCA8F50, sub_23DCA9044, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2C00]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DCA90BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCA368C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCA9100(uint64_t result)
{
  uint64_t v1;
  double v2;
  _QWORD *v3;
  unint64_t v4;
  double v5;
  long double v6;
  unint64_t v7;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    if (!result)
      return MEMORY[0x24BEE4AF8];
    v2 = 1.0 / (double)result * 1.57079633;
    v3 = sub_23DC8EAC0(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v4 = v3[2];
    v5 = 0.0;
    do
    {
      v6 = cos(v5);
      v7 = v3[3];
      if (v4 >= v7 >> 1)
        v3 = sub_23DC8EAC0((_QWORD *)(v7 > 1), v4 + 1, 1, v3);
      v3[2] = v4 + 1;
      *(long double *)&v3[v4 + 4] = v6;
      v5 = v2 + v5;
      ++v4;
      --v1;
    }
    while (v1);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_23DCA91E4(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t inited;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  void *v27;
  uint64_t v28;

  v26 = a1;
  sub_23DC81D20(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1100();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCA9714();
  v16 = (void *)*MEMORY[0x24BDD3608];
  v17 = a2;
  v27 = (void *)MEMORY[0x242640CE0](v16);
  v18 = v26;
  objc_msgSend(v17, sel_morningIndex);
  sub_23DCE1C28();
  v19 = objc_msgSend(v17, sel_calendar);
  sub_23DCE12BC();

  sub_23DC9CF64();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE39B0;
  *(_QWORD *)(inited + 32) = (id)HDDataEntityPredicateForObjectsFromAppleWatchSources();
  v28 = inited;
  sub_23DCE1DCC();
  sub_23DCD3D50((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23DC94AE0((uint64_t)v5);
    swift_bridgeObjectRelease();
    v21 = 0;
    v22 = v27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v23 = (uint64_t)v27;
    v21 = sub_23DC94638((uint64_t)v9, (uint64_t)v27, (uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v22 = (void *)v23;
  }
  v24 = sub_23DC7FAA4((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v21, v22, v18, 4);

  return v24;
}

uint64_t sub_23DCA947C(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t inited;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  void *v27;
  uint64_t v28;

  v26 = a1;
  sub_23DC81D20(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1100();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCA9714();
  v16 = (void *)*MEMORY[0x24BDD3628];
  v17 = a2;
  v27 = (void *)MEMORY[0x242640CE0](v16);
  v18 = v26;
  objc_msgSend(v17, sel_morningIndex);
  sub_23DCE1C28();
  v19 = objc_msgSend(v17, sel_calendar);
  sub_23DCE12BC();

  sub_23DC9CF64();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE39B0;
  *(_QWORD *)(inited + 32) = (id)HDDataEntityPredicateForObjectsFromAppleWatchSources();
  v28 = inited;
  sub_23DCE1DCC();
  sub_23DCD3D50((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_23DC94AE0((uint64_t)v5);
    swift_bridgeObjectRelease();
    v21 = 0;
    v22 = v27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v23 = (uint64_t)v27;
    v21 = sub_23DC94638((uint64_t)v9, (uint64_t)v27, (uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v22 = (void *)v23;
  }
  v24 = sub_23DC7FAA4((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v21, v22, v18, 16);

  return v24;
}

unint64_t sub_23DCA9714()
{
  unint64_t result;

  result = qword_2543256F0;
  if (!qword_2543256F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543256F0);
  }
  return result;
}

void sub_23DCA9750(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;

  v21 = a4;
  v22 = a5;
  v20 = a3;
  v23 = a6;
  v8 = sub_23DCE14E4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_percentUnit);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, 0.025);

  v16 = objc_msgSend(v12, sel_percentUnit);
  v17 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, 0.045);

  sub_23DCA9714();
  v18 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3608]);
  v19 = objc_msgSend(v18, sel_canonicalUnit);

  if (v19)
  {
    *(_QWORD *)&v24 = a1;
    *((_QWORD *)&v24 + 1) = a2;
    v25 = v20;
    v26 = v21;
    v27 = sub_23DCAA6BC;
    v28 = KeyPath;
    swift_unknownObjectRetain();
    swift_retain();
    sub_23DCE185C();
    sub_23DCAF5D4(&v24, (uint64_t)v10, v15, v17, 1, 0, v19, v23);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_23DCA9934(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;

  v21 = a4;
  v22 = a5;
  v20 = a3;
  v23 = a6;
  v8 = sub_23DCE14E4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel__countPerMinuteUnit);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, 6.4);

  v16 = objc_msgSend(v12, sel__countPerMinuteUnit);
  v17 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, 18.0);

  sub_23DCA9714();
  v18 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD35B8]);
  v19 = objc_msgSend(v18, sel_canonicalUnit);

  if (v19)
  {
    *(_QWORD *)&v24 = a1;
    *((_QWORD *)&v24 + 1) = a2;
    v25 = v20;
    v26 = v21;
    v27 = sub_23DCAA6BC;
    v28 = KeyPath;
    swift_unknownObjectRetain();
    swift_retain();
    sub_23DCE1898();
    sub_23DCAF5D4(&v24, (uint64_t)v10, v15, v17, 0, 0, v19, v23);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_23DCA9B14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;

  v21 = a4;
  v22 = a5;
  v20 = a3;
  v23 = a6;
  v8 = sub_23DCE14E4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel__countPerMinuteUnit);
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, 1.0);

  v16 = objc_msgSend(v12, sel__countPerMinuteUnit);
  v17 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, 3.0);

  sub_23DCA9714();
  v18 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3628]);
  v19 = objc_msgSend(v18, sel_canonicalUnit);

  if (v19)
  {
    *(_QWORD *)&v24 = a1;
    *((_QWORD *)&v24 + 1) = a2;
    v25 = v20;
    v26 = v21;
    v27 = sub_23DCAA674;
    v28 = KeyPath;
    swift_unknownObjectRetain();
    swift_retain();
    sub_23DCE1880();
    sub_23DCAF5D4(&v24, (uint64_t)v10, v15, v17, 0, 0, v19, v23);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23DCA9CF0()
{
  return sub_23DCE188C();
}

void sub_23DCA9D14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  id v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  void *v66;
  id v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __int128 v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t (*v87)();
  uint64_t v88;

  v70 = a4;
  v81 = a2;
  v82 = a3;
  v78 = sub_23DCE18A4();
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v77 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCAA374(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE1490();
  v74 = *(void (**)(char *, uint64_t))(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v61 - v12;
  sub_23DC82800(0, &qword_254325300, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FED0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v14);
  v65 = (char *)&v61 - v15;
  v16 = sub_23DCE14E4();
  v79 = *(_QWORD *)(v16 - 8);
  v80 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v83 = (char *)&v61 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v61 - v21;
  swift_unknownObjectRetain();
  sub_23DCE188C();
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel__changeInDegreeCelsiusUnit);
  v25 = (void *)objc_opt_self();
  v69 = objc_msgSend(v25, sel_quantityWithUnit_doubleValue_, v24, 0.55);

  v26 = objc_msgSend(v23, sel__changeInDegreeCelsiusUnit);
  v67 = objc_msgSend(v25, sel_quantityWithUnit_doubleValue_, v26, 1.1);

  sub_23DCAA48C(0);
  v27 = swift_allocObject();
  v28 = *(_QWORD *)(*(_QWORD *)v27 + 104);
  v68 = v27;
  v29 = (_QWORD *)(v27 + v28);
  sub_23DCA9714();
  *v29 = 0;
  v29[1] = 0;
  v30 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
  v31 = objc_msgSend(v30, sel__unitForChangeInCanonicalUnit);

  v66 = v31;
  if (v31)
  {
    sub_23DCE149C();
    v33 = v73;
    v32 = v74;
    (*((void (**)(char *, _QWORD, uint64_t))v74 + 13))(v73, *MEMORY[0x24BE3FE80], v9);
    sub_23DC80074(&qword_2543252F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FE90], MEMORY[0x24BE3FE98]);
    v34 = sub_23DCE1D00();
    v35 = (void (*)(char *, uint64_t))*((_QWORD *)v32 + 1);
    v35(v33, v9);
    v74 = v35;
    v35(v13, v9);
    if ((v34 & 1) != 0)
    {
      v71 = v13;
      v72 = v9;
      v62 = v22;
      v63 = v8;
      v64 = a1;
      v36 = v82;
      v73 = (char *)(v70 >> 1);
      if (v70 >> 1 != v82)
      {
        v37 = (uint64_t)v73;
        v38 = v79;
        v39 = v75;
        v40 = v71;
        while (!__OFSUB__(v37--, 1))
        {
          if (v37 < v36 || v37 >= (uint64_t)v73)
            goto LABEL_16;
          v43 = v76;
          v42 = v77;
          v44 = v81 + *(_QWORD *)(v76 + 72) * v37;
          v45 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
          v46 = v78;
          v45(v77, v44, v78);
          v47 = v83;
          sub_23DCE188C();
          v48 = *(void (**)(char *, uint64_t))(v43 + 8);
          v48(v42, v46);
          v49 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
          v50 = v47;
          v51 = v80;
          v49(v39, v50, v80);
          sub_23DCE149C();
          LOBYTE(v42) = sub_23DCE1478();
          v74(v40, v72);
          (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v51);
          if ((v42 & 1) != 0)
          {
            v57 = v77;
            v56 = v78;
            v45(v77, v44, v78);
            v58 = v83;
            sub_23DCE188C();
            v48(v57, v56);
            v54 = (uint64_t)v65;
            v52 = v80;
            v49(v65, v58, v80);
            v53 = v79;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v54, 0, 1, v52);
            a1 = v64;
            v8 = v63;
            v55 = v70;
            v36 = v82;
            goto LABEL_13;
          }
          v36 = v82;
          if (v37 == v82)
            goto LABEL_10;
        }
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
LABEL_10:
      v53 = v79;
      v52 = v80;
      v54 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v65, 1, 1, v80);
      a1 = v64;
      v8 = v63;
      v55 = v70;
LABEL_13:
      v22 = v62;
    }
    else
    {
      v53 = v79;
      v52 = v80;
      v54 = (uint64_t)v65;
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v65, v22, v80);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
      v36 = v82;
      v55 = v70;
    }
    *(_QWORD *)&v84 = a1;
    *((_QWORD *)&v84 + 1) = v81;
    v85 = v36;
    v86 = v55;
    v87 = sub_23DCA9CF0;
    v88 = 0;
    v59 = v68;
    sub_23DCAA5B4(v54, v68 + *(_QWORD *)(*(_QWORD *)v68 + 112));
    v60 = (uint64_t)v83;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v83, v22, v52);
    swift_unknownObjectRetain();
    sub_23DCAF5D4(&v84, v60, v69, v67, 0, 1, v66, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v52);
    swift_unknownObjectRelease();
    sub_23DCAA610((uint64_t)v8, v59 + *(_QWORD *)(*(_QWORD *)v59 + 96));
    return;
  }
LABEL_17:
  __break(1u);
}

void sub_23DCAA374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_2543253E8)
  {
    sub_23DCAA3EC();
    v3 = v2;
    v4 = sub_23DC80074(&qword_254325758, (uint64_t (*)(uint64_t))sub_23DCAA3EC, MEMORY[0x24BEE2B40]);
    v6 = type metadata accessor for SleepingSampleBaselineCalculator(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_2543253E8);
  }
}

void sub_23DCAA3EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325760)
  {
    sub_23DC82800(255, &qword_254325730, (uint64_t (*)(uint64_t))MEMORY[0x24BE40328], MEMORY[0x24BEE2150]);
    sub_23DCE14E4();
    sub_23DCAA55C(&qword_254325728, MEMORY[0x24BEE2180]);
    v0 = sub_23DCE2180();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325760);
  }
}

void sub_23DCAA48C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_254325578)
  {
    sub_23DCAA3EC();
    v3 = v2;
    v4 = sub_23DCAA4EC();
    v6 = type metadata accessor for SleepingWristTemperatureBaselineCalculator(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_254325578);
  }
}

unint64_t sub_23DCAA4EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_254325750;
  if (!qword_254325750)
  {
    sub_23DCAA3EC();
    v2 = v1;
    v3 = sub_23DCAA55C(&qword_254325720, MEMORY[0x24BEE2170]);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE2B38], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_254325750);
  }
  return result;
}

uint64_t sub_23DCAA55C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_23DC82800(255, &qword_254325730, (uint64_t (*)(uint64_t))MEMORY[0x24BE40328], MEMORY[0x24BEE2150]);
    result = MEMORY[0x2426416D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DCAA5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, &qword_254325300, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FED0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCAA610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCAA374(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCAA654()
{
  return sub_23DCE1880();
}

uint64_t sub_23DCAA674()
{
  return swift_getAtKeyPath();
}

uint64_t sub_23DCAA67C()
{
  return sub_23DCE185C();
}

uint64_t sub_23DCAA69C()
{
  return sub_23DCE1898();
}

uint64_t sub_23DCAA6C0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23DCAA6C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23DCE14E4();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE191C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_23DCAA774(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  id v22;
  id v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23DCE14E4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[9];
    v9 = a3[10];
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    v11 = *(void **)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + v9) = v11;
    v12 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v13 = a3[13];
    v14 = a3[14];
    v15 = *(void **)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + v13) = v15;
    *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
    v16 = a3[15];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23DCE191C();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v21 = v10;
    v22 = v11;
    v23 = v15;
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_23DCAA888(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23DCE14E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  v5 = a1 + a2[15];
  v6 = sub_23DCE191C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23DCAA914(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  id v20;
  id v21;
  id v22;

  v6 = sub_23DCE14E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[9];
  v8 = a3[10];
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[13];
  v13 = a3[14];
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v15 = a3[15];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_23DCE191C();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20 = v9;
  v21 = v10;
  v22 = v14;
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  return a1;
}

uint64_t sub_23DCAA9FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23DCE14E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[9];
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = a3[10];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v15 = a3[13];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[15];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_23DCE191C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_23DCAAAF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23DCE14E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v10 = a3[15];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23DCE191C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_23DCAABAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23DCE14E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[9];
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = a3[10];
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  v11 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[13];
  v13 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);

  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  v14 = a3[15];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_23DCE191C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_23DCAAC8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCAAC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23DCE14E4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_23DCE191C();
    v10 = a1 + *(int *)(a3 + 60);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_23DCAAD40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCAAD4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23DCE14E4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return result;
    }
    v10 = sub_23DCE191C();
    v12 = a1 + *(int *)(a4 + 60);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SleepingSampleBaselineCalculator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepingSampleBaselineCalculator);
}

uint64_t sub_23DCAADFC(uint64_t *a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  void (*v68)(_QWORD, _QWORD, _QWORD);
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  void (*v71)(_QWORD, _QWORD, _QWORD);
  char v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  void (*v75)(_QWORD, _QWORD, _QWORD);
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  void (*v115)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v116;
  void (*v117)(char *, char *, uint64_t);
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  char *v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  _QWORD *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  void (*v155)(_QWORD, _QWORD, _QWORD);
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  void (*v173)(_QWORD, _QWORD, _QWORD);
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;

  v173 = a2;
  v174 = a3;
  sub_23DCA368C();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v158 = (char *)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v162 = (char *)&v144 - v7;
  sub_23DC87938();
  v170 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v171 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v168 = (char *)&v144 - v11;
  sub_23DCA8F2C(0);
  v169 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v164 = (uint64_t)&v144 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v167 = (char *)&v144 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v172 = (uint64_t)&v144 - v20;
  sub_23DC8FF80();
  v166 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v144 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v150 = (uint64_t)&v144 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v144 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v144 - v30;
  v32 = sub_23DCE1C64();
  v33 = *(_QWORD **)(v32 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v160 = (char *)&v144 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v156 = (char *)&v144 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v157 = (char *)&v144 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v159 = (char *)&v144 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v161 = (char *)&v144 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v163 = (char *)&v144 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v165 = (char *)&v144 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v50 = (char *)&v144 - v49;
  v51 = MEMORY[0x24BDAC7A8](v48);
  v175 = (char *)&v144 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v55 = (char *)&v144 - v54;
  v56 = MEMORY[0x24BDAC7A8](v53);
  v58 = (char *)&v144 - v57;
  MEMORY[0x24BDAC7A8](v56);
  v176 = (char *)&v144 - v59;
  v60 = sub_23DCE18EC();
  v61 = *(_QWORD *)(v174 + 16);
  if (!v61)
  {
    *a1 = v60;
    v79 = *MEMORY[0x24BE40388];
    v80 = sub_23DCE191C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 104))(a1, v79, v80);
    return 0;
  }
  v153 = v60;
  v146 = v24;
  v147 = v15;
  v151 = a1;
  v62 = v61;
  v155 = (void (*)(_QWORD, _QWORD, _QWORD))v50;
  v63 = v33;
  v64 = v166;
  v149 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v65 = v174 + v149;
  sub_23DC82858(v174 + v149, (uint64_t)v31, (uint64_t (*)(_QWORD))sub_23DC8FF80);
  v66 = (void (*)(char *, char *, uint64_t))v63[4];
  v66(v58, v31, v32);
  v66(v176, v58, v32);
  v152 = v62;
  v145 = *(_QWORD *)(v64 + 72);
  sub_23DC82858(v65 + v145 * (v62 - 1), (uint64_t)v29, (uint64_t (*)(_QWORD))sub_23DC8FF80);
  v154 = v66;
  v66(v55, v29, v32);
  v67 = v165;
  sub_23DCE1BC8();
  v68 = v155;
  sub_23DCE1BE0();
  v69 = (void (*)(char *, uint64_t))v63[1];
  v69(v67, v32);
  v70 = sub_23DC8E674();
  v71 = v173;
  v72 = sub_23DCE1CC4();
  v148 = v63;
  v73 = (void (*)(char *, char *, uint64_t))v63[2];
  v74 = v176;
  v75 = v68;
  v76 = v175;
  if ((v72 & 1) != 0)
  {
    v77 = v175;
    v78 = v75;
  }
  else
  {
    v77 = v175;
    v78 = v71;
  }
  v73(v77, (char *)v78, v32);
  v69((char *)v75, v32);
  result = sub_23DCE1CD0();
  v82 = v171;
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v165 = v55;
  v166 = v70;
  v83 = v170;
  v84 = v168;
  v85 = &v168[*(int *)(v170 + 48)];
  v73(v168, v74, v32);
  v73(v85, v76, v32);
  v86 = &v82[*(int *)(v83 + 48)];
  v73(v82, v84, v32);
  v73(v86, v85, v32);
  v87 = v167;
  v88 = v154;
  v154(v167, v82, v32);
  v69(v86, v32);
  v89 = &v82[*(int *)(v83 + 48)];
  v88(v82, v84, v32);
  v88(v89, v85, v32);
  v88(&v87[*(int *)(v169 + 36)], v89, v32);
  v69(v82, v32);
  v90 = (uint64_t)v87;
  v91 = v172;
  sub_23DC87A14(v90, v172, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v92 = (uint64_t)v173;
  LOBYTE(v89) = sub_23DCE1CD0();
  v93 = (void (*)(_QWORD, _QWORD, _QWORD))v73;
  v94 = v163;
  v155 = v93;
  v93(v163, v92, v32);
  v95 = v91;
  v96 = v164;
  sub_23DC82858(v95, v164, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  if ((v89 & 1) != 0)
    v97 = sub_23DCE1CB8() << 63 >> 63;
  else
    v97 = 0;
  v98 = (uint64_t)v162;
  sub_23DC827C4(v96, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v99 = ((uint64_t (*)(char *, uint64_t))v69)(v94, v32);
  v100 = v97 + v152;
  if (v100 < v153)
  {
    v101 = v153;
    v69(v175, v32);
    v69(v165, v32);
    v69(v176, v32);
    sub_23DCABE18();
    v103 = *(int *)(v102 + 48);
    v104 = *(int *)(v102 + 64);
    v105 = (uint64_t)v151;
    sub_23DC87A14(v172, (uint64_t)v151, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    *(_QWORD *)(v105 + v103) = v100;
    *(_QWORD *)(v105 + v104) = v101;
    v106 = *MEMORY[0x24BE40358];
    v107 = sub_23DCE191C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 104))(v105, v106, v107);
    return 0;
  }
  v177 = 0;
  MEMORY[0x24BDAC7A8](v99);
  *(&v144 - 4) = v92;
  *(&v144 - 3) = (uint64_t)&v177;
  *(&v144 - 2) = v109;
  v110 = swift_bridgeObjectRetain();
  v111 = sub_23DCABBD8(v110, (uint64_t (*)(_QWORD, double))sub_23DCABB8C);
  swift_bridgeObjectRelease();
  v112 = *(_QWORD *)(v111 + 16);
  if (v112)
  {
    v113 = v150;
    sub_23DC82858(v111 + v149, v150, (uint64_t (*)(_QWORD))sub_23DC8FF80);
    v88((char *)v98, (char *)v113, v32);
    v114 = v148;
    v115 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v148[7];
    v115(v98, 0, 1, v32);
  }
  else
  {
    v114 = v148;
    v115 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v148[7];
    v115(v98, 1, 1, v32);
  }
  v116 = v159;
  v117 = (void (*)(char *, char *, uint64_t))v155;
  v155(v159, v176, v32);
  v118 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v114[6];
  if (v118(v98, 1, v32) == 1)
  {
    v88(v161, v116, v32);
    result = sub_23DC827C4(v98, (uint64_t (*)(_QWORD))sub_23DCA368C);
    v119 = v160;
    if (v112)
      goto LABEL_18;
LABEL_21:
    v123 = 1;
    v122 = (uint64_t)v158;
LABEL_22:
    v115(v122, v123, 1, v32);
    v117(v119, v175, v32);
    if (v118(v122, 1, v32) == 1)
    {
      v124 = v156;
      v88(v156, v119, v32);
      sub_23DC827C4(v122, (uint64_t (*)(_QWORD))sub_23DCA368C);
    }
    else
    {
      v69(v119, v32);
      v124 = v156;
      v88(v156, (char *)v122, v32);
    }
    v125 = v171;
    v126 = v161;
    v127 = v157;
    sub_23DCE1BEC();
    v69(v124, v32);
    v128 = sub_23DCE1CD0();
    sub_23DC827C4(v172, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v69(v175, v32);
    v69(v165, v32);
    result = ((uint64_t (*)(char *, uint64_t))v69)(v176, v32);
    if ((v128 & 1) != 0)
    {
      v129 = v111;
      v130 = v170;
      v131 = v126;
      v132 = v168;
      v133 = &v168[*(int *)(v170 + 48)];
      v88(v168, v131, v32);
      v88(v133, v127, v32);
      v134 = &v125[*(int *)(v130 + 48)];
      v117(v125, v132, v32);
      v117(v134, v133, v32);
      v135 = (uint64_t)v167;
      v88(v167, v125, v32);
      v69(v134, v32);
      v136 = *(int *)(v130 + 48);
      v108 = v129;
      v137 = &v125[v136];
      v88(v125, v132, v32);
      v88(v137, v133, v32);
      v88((char *)(v135 + *(int *)(v169 + 36)), v137, v32);
      v69(v125, v32);
      v138 = (uint64_t)v147;
      sub_23DC87A14(v135, (uint64_t)v147, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      sub_23DCABDB0();
      v140 = *(int *)(v139 + 48);
      v141 = (uint64_t)v151;
      sub_23DC87A14(v138, (uint64_t)v151, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      *(_QWORD *)(v141 + v140) = v177;
      v142 = *MEMORY[0x24BE40398];
      v143 = sub_23DCE191C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 104))(v141, v142, v143);
      return v108;
    }
    goto LABEL_29;
  }
  v69(v116, v32);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v88)(v161, v98, v32);
  v119 = v160;
  if (!v112)
    goto LABEL_21;
LABEL_18:
  if (v112 <= *(_QWORD *)(v111 + 16))
  {
    v120 = v118;
    v121 = (uint64_t)v146;
    sub_23DC82858(v111 + v149 + (v112 - 1) * v145, (uint64_t)v146, (uint64_t (*)(_QWORD))sub_23DC8FF80);
    v122 = (uint64_t)v158;
    v88(v158, (char *)v121, v32);
    v123 = 0;
    v118 = v120;
    goto LABEL_22;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_23DCAB9CC(uint64_t *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a2;
  v5 = sub_23DCE1C64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  sub_23DCE14A8();
  sub_23DCE18D4();
  sub_23DCE1C04();
  sub_23DC8E674();
  v12 = sub_23DCE1CB8();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  v13(v11, v5);
  if ((v12 & 1) != 0 || (v14 = *a1, v14 >= sub_23DCE18E0()) || (v15 = (void *)sub_23DCE14D8()) == 0)
  {
    sub_23DC8FF80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
  else
  {
    v16 = v15;
    objc_msgSend(v15, sel_doubleValueForUnit_, v23);
    v18 = v17;

    if (__OFADD__(*a1, 1))
    {
      __break(1u);
    }
    else
    {
      ++*a1;
      sub_23DC8FF80();
      v20 = v19;
      v21 = *(int *)(v19 + 48);
      sub_23DCE14A8();
      *(_QWORD *)(a3 + v21) = v18;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 0, 1, v20);
    }
  }
}

uint64_t sub_23DCABB8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  BOOL v6;
  uint64_t v7;

  v1 = *(uint64_t **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  result = sub_23DCE1BD4();
  v4 = *v1;
  v5 = result | (*v1 < v2);
  if (!(result & 1 | (*v1 < v2)))
    return v5 & 1;
  v6 = __OFADD__(v4, 1);
  v7 = v4 + 1;
  if (!v6)
  {
    *v1 = v7;
    return v5 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_23DCABBD8(uint64_t a1, uint64_t (*a2)(_QWORD, double))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD, double);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_23DC8FF80();
  v6 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v24 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  result = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v19 = v2;
    v14 = *(_QWORD *)(v9 + 72);
    v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = a1 + v22;
    v16 = MEMORY[0x24BEE4AF8];
    v23 = v6;
    v20 = v14;
    v21 = a2;
    do
    {
      sub_23DC82858(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      if ((a2(v11, *(double *)&v11[*(int *)(v6 + 48)]) & 1) != 0)
      {
        sub_23DC87A14((uint64_t)v11, v24, (uint64_t (*)(_QWORD))sub_23DC8FF80);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23DC8F29C(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        v17 = *(_QWORD *)(v25 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_23DC8F29C(v17 > 1, v18 + 1, 1);
          v16 = v25;
        }
        *(_QWORD *)(v16 + 16) = v18 + 1;
        v14 = v20;
        sub_23DC87A14(v24, v16 + v22 + v18 * v20, (uint64_t (*)(_QWORD))sub_23DC8FF80);
        a2 = v21;
        v6 = v23;
      }
      else
      {
        sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

void sub_23DCABDB0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543256C8)
  {
    sub_23DCA8F2C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543256C8);
  }
}

void sub_23DCABE18()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_2543256C0)
  {
    sub_23DCA8F2C(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_2543256C0);
  }
}

void sub_23DCABE84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x242641820](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_23DCABED4();

  }
}

uint64_t sub_23DCABED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];

  v1 = v0;
  swift_getObjectType();
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1B44();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v11 = v10;
  LOBYTE(v10) = sub_23DCE1B50();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    sub_23DCE1AFC();
    v13 = sub_23DCE1B08();
    v14 = sub_23DCE1EEC();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v27[0] = v16;
      v25 = v2;
      *(_DWORD *)v15 = 136446210;
      v17 = sub_23DCE2354();
      v26 = sub_23DCA47EC(v17, v18, v27);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v13, v14, "[%{public}s] requesting widgets reload", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v16, -1, -1);
      MEMORY[0x24264179C](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader + 24);
    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader), v19);
    v21 = (_QWORD *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadReasons);
    swift_beginAccess();
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 8);
    v23 = swift_bridgeObjectRetain();
    v22(v23, v19, v20);
    swift_bridgeObjectRelease();
    *v21 = MEMORY[0x24BEE4B08];
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23DCAC184()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void (*v3)(void);
  char *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_changeProvider + 8];
  swift_getObjectType();
  v3 = *(void (**)(void))(v2 + 16);
  swift_unknownObjectRetain();
  v4 = v0;
  v3();
  swift_unknownObjectRelease();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_23DCAC354(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id result;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v2 = v1;
  swift_getObjectType();
  v4 = sub_23DCE1B14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE1B44();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  v13 = *a1;
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v14 = v12;
  LOBYTE(v12) = sub_23DCE1B50();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    sub_23DCE1AFC();
    v16 = sub_23DCE1B08();
    v17 = sub_23DCE1EEC();
    if (os_log_type_enabled(v16, v17))
    {
      v26 = v5;
      v27 = v4;
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v29[0] = v19;
      *(_DWORD *)v18 = 136446466;
      v20 = sub_23DCE2354();
      v28 = sub_23DCA47EC(v20, v21, v29);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      v22 = 0xD000000000000018;
      v23 = 0x800000023DCE64B0;
      if ((_DWORD)v13 != 1)
      {
        v22 = 0xD00000000000001ALL;
        v23 = 0x800000023DCE6490;
      }
      if ((_DWORD)v13)
        v24 = v22;
      else
        v24 = 0xD000000000000010;
      if ((_DWORD)v13)
        v25 = v23;
      else
        v25 = 0x800000023DCE64D0;
      v28 = sub_23DCA47EC(v24, v25, v29);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v16, v17, "[%{public}s] running reload operation with reason: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v19, -1, -1);
      MEMORY[0x24264179C](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_beginAccess();
    sub_23DCACCA4(&v28, v13);
    swift_endAccess();
    result = *(id *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation);
    if (result)
      return objc_msgSend(result, sel_execute);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23DCAC67C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t aBlock[6];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = sub_23DCE1B14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v9 = sub_23DCE1B08();
  v10 = sub_23DCE1EEC();
  if (os_log_type_enabled(v9, v10))
  {
    v26 = v5;
    v11 = swift_slowAlloc();
    v27 = a1;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136446210;
    v25 = v6;
    v14 = sub_23DCE2354();
    v28 = sub_23DCA47EC(v14, v15, aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v9, v10, "[%{public}s] profileDidBecomeReady", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v13, -1, -1);
    v16 = v12;
    a1 = v27;
    MEMORY[0x24264179C](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_changeProvider + 8);
  v18 = swift_getObjectType();
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v17 + 8))(v2, &off_250E95160, v19, v18, v17);
  v20 = objc_msgSend(a1, sel_database);
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_23DCAE6C0;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23DCC6E74;
  aBlock[3] = (uint64_t)&block_descriptor_5;
  v23 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v20, sel_performWhenDataProtectedByFirstUnlockIsAvailableOnQueue_block_, v19, v23);
  _Block_release(v23);

  v24 = *(void (**)(void))(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_didBecomeReady);
  if (v24)
    v24();
}

void sub_23DCAC964(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[3];

  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 16;
  sub_23DCE1AFC();
  v7 = sub_23DCE1B08();
  v8 = sub_23DCE1EEC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v17 = v2;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v19[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_23DCE2354();
    v18 = sub_23DCA47EC(v12, v13, v19);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v7, v8, "[%{public}s] first unlock occurred", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v11, -1, -1);
    MEMORY[0x24264179C](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  v14 = MEMORY[0x242641820](v6);
  if (v14)
  {
    v15 = (void *)v14;
    LOBYTE(v18) = 0;
    sub_23DCAC354((unsigned __int8 *)&v18);

  }
}

uint64_t type metadata accessor for BalanceWidgetSchedulingManager()
{
  return objc_opt_self();
}

id sub_23DCACBE4()
{
  return sub_23DCAE438("[%{public}s] sleeping sample cache evicted from samples added", 1);
}

id sub_23DCACC04()
{
  return sub_23DCAE438("[%{public}s] sleeping samples removed", 2);
}

unint64_t sub_23DCACC24(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_23DCE1F7C();
  result = sub_23DCE2054();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_23DCACCA4(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_23DCE22DC();
  sub_23DCE22E8();
  v6 = sub_23DCE22F4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_23DCAD874(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23DCACDC0(_QWORD *a1, void *a2)
{
  return sub_23DCACE08(a1, a2, (unint64_t *)&qword_254324988, 0x24BDD3F08, (unint64_t *)&qword_256CF98D0, (unint64_t *)&qword_254324998);
}

uint64_t sub_23DCACDE4(_QWORD *a1, void *a2)
{
  return sub_23DCACE08(a1, a2, &qword_256CF9F40, 0x24BDD3DC0, &qword_256CF9BE8, qword_256CF9BF0);
}

uint64_t sub_23DCACE08(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  id v34;
  unint64_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v11 = v6;
  v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0)
      v15 = *v6;
    else
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = a2;
    v17 = sub_23DCE2078();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_23DC802D0(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_23DCE206C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v29 = sub_23DCAD114(v15, result + 1, a5, a3, a4, a6);
    v43 = v29;
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v29 + 24) <= v30)
    {
      v35 = a5;
      v36 = v30 + 1;
      v37 = v16;
      sub_23DCAD5DC(v36, v35, a3, a4, a6);
      v31 = v43;
    }
    else
    {
      v31 = v29;
      v32 = v16;
    }
    sub_23DCACC24((uint64_t)v16, v31);
    *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    v19 = sub_23DCE1F7C();
    v20 = -1 << *(_BYTE *)(v14 + 32);
    v21 = v19 & ~v20;
    v40 = a4;
    if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      sub_23DC802D0(0, a3);
      v22 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
      v23 = sub_23DCE1F88();

      if ((v23 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v27 = *(void **)(*(_QWORD *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        v28 = v27;
        return 0;
      }
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
        v26 = sub_23DCE1F88();

        if ((v26 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = *v6;
    *v6 = 0x8000000000000000;
    v34 = a2;
    sub_23DCAD9C0((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_23DCAD0F0(uint64_t a1, uint64_t a2)
{
  return sub_23DCAD114(a1, a2, (unint64_t *)&qword_256CF98D0, (unint64_t *)&qword_254324988, 0x24BDD3F08, (unint64_t *)&qword_254324998);
}

uint64_t sub_23DCAD114(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_23DCAE6C8(0, a3, a4, a5, a6);
    v10 = sub_23DCE20CC();
    v23 = v10;
    sub_23DCE2060();
    if (sub_23DCE2084())
    {
      sub_23DC802D0(0, a4);
      do
      {
        swift_dynamicCast();
        v10 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v17)
        {
          sub_23DCAD5DC(v17 + 1, a3, a4, a5, a6);
          v10 = v23;
        }
        result = sub_23DCE1F7C();
        v12 = v10 + 56;
        v13 = -1 << *(_BYTE *)(v10 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v16) = v22;
        ++*(_QWORD *)(v10 + 16);
      }
      while (sub_23DCE2084());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v10;
}

uint64_t sub_23DCAD338()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_23DCAE39C();
  result = sub_23DCE20C0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_23DCE22DC();
      sub_23DCE22E8();
      result = sub_23DCE22F4();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23DCAD5DC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_23DCAE6C8(0, a2, a3, a4, a5);
  v8 = sub_23DCE20C0();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_23DCE1F7C();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

uint64_t sub_23DCAD874(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23DCAD338();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_23DCADB74();
      goto LABEL_14;
    }
    sub_23DCADEB4();
  }
  v8 = *v3;
  sub_23DCE22DC();
  sub_23DCE22E8();
  result = sub_23DCE22F4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_23DCE2294();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_23DCAD9C0(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23DCAD5DC(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_23DCADD00(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_23DCAE128(v13, a4, a5, a6, a7);
  }
  v14 = *v7;
  v15 = sub_23DCE1F7C();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_23DC802D0(0, a5);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_23DCE1F88();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_23DCE2294();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_23DCE1F88();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

void *sub_23DCADB74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_23DCAE39C();
  v2 = *v0;
  v3 = sub_23DCE20B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23DCADD00(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v5 = v4;
  sub_23DCAE6C8(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_23DCE20B4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v10 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v10 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
    goto LABEL_28;
  v23 = *(_QWORD *)(v10 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23DCADEB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_23DCAE39C();
  result = sub_23DCE20C0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_23DCE22DC();
    sub_23DCE22E8();
    result = sub_23DCE22F4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23DCAE128(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_23DCAE6C8(0, a2, a3, a4, a5);
  v8 = sub_23DCE20C0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_33;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_33;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v20);
    result = sub_23DCE1F7C();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_23DCAE39C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543244F8)
  {
    sub_23DCAE3F4();
    v0 = sub_23DCE20E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543244F8);
  }
}

unint64_t sub_23DCAE3F4()
{
  unint64_t result;

  result = qword_254324720;
  if (!qword_254324720)
  {
    result = MEMORY[0x2426416D0](&protocol conformance descriptor for BalanceWidgetReloadReason, &type metadata for BalanceWidgetReloadReason);
    atomic_store(result, (unint64_t *)&qword_254324720);
  }
  return result;
}

id sub_23DCAE438(const char *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  char v14;
  id result;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _BYTE v23[12];
  int v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  LODWORD(v3) = a2;
  v25 = a1;
  v4 = v2;
  swift_getObjectType();
  v26 = sub_23DCE1B14();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_23DCE1B44();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(void **)(v4 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  v14 = sub_23DCE1B50();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) != 0)
  {
    sub_23DCE1AFC();
    v16 = sub_23DCE1B08();
    v17 = sub_23DCE1EEC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v3;
      v3 = v19;
      v28 = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = sub_23DCE2354();
      v27 = sub_23DCA47EC(v20, v21, &v28);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v16, v17, v25, v18, 0xCu);
      swift_arrayDestroy();
      v22 = v3;
      LOBYTE(v3) = v24;
      MEMORY[0x24264179C](v22, -1, -1);
      MEMORY[0x24264179C](v18, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v26);
    LOBYTE(v28) = v3;
    return sub_23DCAC354((unsigned __int8 *)&v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23DCAE678()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23DCAE69C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23DCAE6C0()
{
  uint64_t v0;

  sub_23DCAC964(*(_QWORD *)(v0 + 16));
}

void sub_23DCAE6C8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_23DC802D0(255, a3);
    sub_23DCAE750(a5, a3);
    v8 = sub_23DCE20E4();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23DCAE750(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_23DC802D0(255, a2);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DCAE790()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE1640();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

_QWORD *sub_23DCAE830(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v2 = (_BYTE *)(swift_bridgeObjectRetain() + 40);
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    if ((*v2 & 1) == 0)
    {
      v4 = *((_QWORD *)v2 - 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_23DC8EAC0(0, v3[2] + 1, 1, v3);
      v6 = v3[2];
      v5 = v3[3];
      if (v6 >= v5 >> 1)
        v3 = sub_23DC8EAC0((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
      v3[2] = v6 + 1;
      v3[v6 + 4] = v4;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23DCAE928(void (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void (*v52)(char *);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[3];
  uint64_t v67;

  v61 = a1;
  v62 = a2;
  sub_23DCB54AC(0);
  MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8FF80();
  v6 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  v58 = v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v49 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t)&v48 - v9;
  v10 = sub_23DCE14E4();
  v63 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE18A4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v53 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCB40A8(0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v64 = (uint64_t)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v48 - v18;
  sub_23DCB5374(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_OWORD *)(v2 + 16);
  v66[0] = *(_OWORD *)v2;
  v66[1] = v23;
  v24 = v23;
  v25 = *(void (**)(char *))(v2 + 32);
  v26 = *(_QWORD *)(v2 + 40);
  v51 = *((_QWORD *)&v66[0] + 1);
  v52 = v25;
  v27 = *((_QWORD *)&v23 + 1) >> 1;
  sub_23DCB54C8((uint64_t)v66);
  v55 = v26;
  result = swift_retain();
  v50 = MEMORY[0x24BEE4AF8];
  v54 = v24;
  v56 = v27;
  while (1)
  {
    if (v24 == v27)
    {
      v29 = 1;
      v30 = v27;
      goto LABEL_7;
    }
    if (v24 < v54 || v24 >= v27)
      break;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v19, v51 + *(_QWORD *)(v13 + 72) * v24, v12);
    v29 = 0;
    v30 = v24 + 1;
LABEL_7:
    v31 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v19, v29, 1, v12);
    v32 = v64;
    sub_23DC87A14((uint64_t)v19, v64, (uint64_t (*)(_QWORD))sub_23DCB40A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v32, 1, v12) != 1)
    {
      v33 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v53, v64, v12);
      v52(v33);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v33, v12);
      v31 = 0;
    }
    v34 = v31;
    v35 = v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v22, v34, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v22, 1, v10) == 1)
    {
      sub_23DCB5484((uint64_t)v66);
      swift_release();
      return v50;
    }
    v65 = v30;
    v36 = v19;
    v37 = v12;
    v38 = v10;
    v39 = v59;
    (*(void (**)(char *))(v35 + 32))(v59);
    v40 = (uint64_t)v60;
    v41 = v67;
    v61(v39);
    v67 = v41;
    if (v41)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v38);
      sub_23DCB5484((uint64_t)v66);
      v47 = v50;
      swift_bridgeObjectRelease();
      swift_release();
      return v47;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v38);
    v10 = v38;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v40, 1, v57) == 1)
    {
      result = sub_23DC827C4(v40, (uint64_t (*)(_QWORD))sub_23DCB54AC);
      v12 = v37;
      v19 = v36;
      v27 = v56;
      v24 = v65;
    }
    else
    {
      v42 = v48;
      sub_23DC87A14(v40, v48, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      sub_23DC87A14(v42, v49, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v50 = sub_23DC8EBD8(0, *(_QWORD *)(v50 + 16) + 1, 1, v50);
      v19 = v36;
      v45 = *(_QWORD *)(v50 + 16);
      v44 = *(_QWORD *)(v50 + 24);
      v27 = v56;
      v24 = v65;
      if (v45 >= v44 >> 1)
        v50 = sub_23DC8EBD8(v44 > 1, v45 + 1, 1, v50);
      v46 = v50;
      *(_QWORD *)(v50 + 16) = v45 + 1;
      result = sub_23DC87A14(v49, v46+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v45, (uint64_t (*)(_QWORD))sub_23DC8FF80);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23DCAEE4C(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;

  v4 = v3;
  v41 = a2;
  sub_23DCB5B14(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_23DCE182C();
  v42 = *(_QWORD *)(v44 - 8);
  v10 = MEMORY[0x24BDAC7A8](v44);
  v40 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)&v35 - v12;
  v13 = *(_QWORD *)(a3 + 56);
  v38 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v39 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v19 = MEMORY[0x24BEE4AF8];
  v36 = a1;
  v37 = a3;
  if (v16)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v18 >= v39)
    goto LABEL_33;
  v23 = *(_QWORD *)(v38 + 8 * v18);
  if (v23)
    goto LABEL_19;
  v24 = v18 + 1;
  if (v18 + 1 >= v39)
    goto LABEL_33;
  v23 = *(_QWORD *)(v38 + 8 * v24);
  if (v23)
  {
LABEL_18:
    v18 = v24;
LABEL_19:
    v16 = (v23 - 1) & v23;
    for (i = __clz(__rbit64(v23)) + (v18 << 6); ; i = v20 | (v18 << 6))
    {
      v25 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * i);
      v26 = v25[1];
      v43[0] = *v25;
      v43[1] = v26;
      swift_bridgeObjectRetain();
      a1(v43);
      if (v4)
        break;
      v27 = a3;
      v28 = a1;
      swift_bridgeObjectRelease();
      v29 = v42;
      v30 = v44;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v9, 1, v44) == 1)
      {
        result = sub_23DC827C4((uint64_t)v9, (uint64_t (*)(_QWORD))sub_23DCB5B14);
        a1 = v28;
        a3 = v27;
        v4 = 0;
        if (!v16)
          goto LABEL_7;
      }
      else
      {
        v31 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v32 = v35;
        v31(v35, v9, v30);
        v31(v40, v32, v30);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_23DC8EBEC(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
        v4 = 0;
        v34 = *(_QWORD *)(v19 + 16);
        v33 = *(_QWORD *)(v19 + 24);
        if (v34 >= v33 >> 1)
          v19 = sub_23DC8EBEC(v33 > 1, v34 + 1, 1, v19);
        *(_QWORD *)(v19 + 16) = v34 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(v19+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v34, v40, v44);
        a1 = v36;
        a3 = v37;
        if (!v16)
          goto LABEL_7;
      }
LABEL_6:
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v19;
  }
  v24 = v18 + 2;
  if (v18 + 2 >= v39)
  {
LABEL_33:
    swift_release();
    return v19;
  }
  v23 = *(_QWORD *)(v38 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v18 + 3;
  if (v18 + 3 >= v39)
    goto LABEL_33;
  v23 = *(_QWORD *)(v38 + 8 * v24);
  if (v23)
    goto LABEL_18;
  v24 = v18 + 4;
  if (v18 + 4 >= v39)
    goto LABEL_33;
  v23 = *(_QWORD *)(v38 + 8 * v24);
  if (v23)
    goto LABEL_18;
  while (1)
  {
    v18 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v18 >= v39)
      goto LABEL_33;
    v23 = *(_QWORD *)(v38 + 8 * v18);
    ++v24;
    if (v23)
      goto LABEL_19;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23DCAF208@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  char *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v2 = v1;
  v24 = a1;
  v3 = *(_QWORD **)v1;
  v4 = sub_23DCE1640();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[10];
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v3[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, &v2[v3[12]], v9);
  sub_23DCE1D6C();
  v16 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 104)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v16, v4);
  v17 = (uint64_t *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 112)];
  v18 = *v17;
  v19 = v17[1];
  v20 = *(_QWORD *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
  swift_retain();
  swift_unknownObjectRetain();
  return sub_23DCB03B8((uint64_t)v15, (uint64_t)v8, v18, v19, v20, v9, v23, v24);
}

uint64_t sub_23DCAF3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a3;
  v29 = a1;
  v3 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v26 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v26(v14, 2, 2, v15);
  v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v18(v12, v14, v3);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v20 = v19(v12, 2, v16);
  v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  if (v20 == 2)
  {
    do
    {
      v21(v12, v3);
      sub_23DCB05C0(v29, v9);
      v21(v14, v3);
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v14, v9, v3);
      v18(v12, v14, v3);
    }
    while (v19(v12, 2, v16) == 2);
  }
  v21(v12, v3);
  v22 = (uint64_t)v27;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v27, v14, v3);
  if (v19((char *)v22, 2, v16))
  {
    v23 = 1;
    v24 = v28;
  }
  else
  {
    v24 = v28;
    sub_23DC8FD78(v22, v28, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v23 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(v24, v23, 1, v16);
}

uint64_t sub_23DCAF5D4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, int a5@<W4>, int a6@<W5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int *v23;
  id v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[16];
  char *v40;
  _OWORD *v41;
  id v42;
  _OWORD v43[2];

  LODWORD(v33) = a6;
  LODWORD(v32) = a5;
  v14 = sub_23DCE191C();
  v37 = *(_QWORD *)(v14 - 8);
  v38 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v36 = (uint64_t *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23DCE1C64();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23DCE14E4();
  v21 = *(_QWORD *)(v20 - 8);
  v34 = v20;
  v35 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(a8, a2, v20);
  sub_23DCAA374(0);
  v23 = v22;
  *(_QWORD *)(a8 + v22[9]) = a3;
  *(_QWORD *)(a8 + v22[10]) = a4;
  *(_BYTE *)(a8 + v22[11]) = (_BYTE)v32;
  *(_BYTE *)(a8 + v22[12]) = (_BYTE)v33;
  *(_QWORD *)(a8 + v22[13]) = a7;
  v33 = a3;
  v32 = a4;
  v24 = a7;
  sub_23DCE14A8();
  *(_QWORD *)&v43[0] = 0;
  v40 = v19;
  v41 = v43;
  v42 = v24;
  v25 = sub_23DCAE928((void (*)(char *))sub_23DCB5468, (uint64_t)v39);
  v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  v26(v19, v16);
  v27 = a1[1];
  v43[0] = *a1;
  v43[1] = v27;
  sub_23DCB5484((uint64_t)v43);
  swift_release();
  sub_23DCE14A8();
  v28 = v36;
  v29 = sub_23DCAADFC(v36, (void (*)(_QWORD, _QWORD, _QWORD))v19, v25);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(a2, v34);
  v26(v19, v16);
  result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v37 + 32))(a8 + v23[15], v28, v38);
  *(_QWORD *)(a8 + v23[14]) = v29;
  return result;
}

uint64_t sub_23DCAF7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  uint64_t inited;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  double *v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double *v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  double *v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  double *v79;
  double v80;
  double v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  void *v86;
  id v87;
  double v88;
  id v89;
  double v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;

  v2 = v1;
  sub_23DC8FF80();
  v101 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v98 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v97 = (uint64_t)&v95 - v8;
  sub_23DC82800(0, &qword_2543252F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FDB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v99 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v95 - v12;
  v14 = sub_23DCE191C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23DCE14E4();
  MEMORY[0x24BDAC7A8](v18);
  (*(void (**)(char *, uint64_t))(v20 + 16))((char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_23DCAA374(0);
  v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v2 + v21[15], v14);
  v23 = sub_23DCE1448();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
  v100 = a1;
  result = sub_23DCE1784();
  v25 = *(_QWORD *)(v2 + v22[14]);
  if (v25)
  {
    v26 = swift_bridgeObjectRetain();
    v27 = sub_23DCAFFA4(v26, 0.05);
    if ((v28 & 1) != 0)
      return swift_bridgeObjectRelease();
    v29 = *(double *)&v27;
    v102 = v25;
    result = sub_23DCB0284(&v102);
    v30 = v102;
    v31 = *(_QWORD *)(v102 + 16);
    if ((unsigned __int128)((uint64_t)v31 * (__int128)3) >> 64 == (uint64_t)(3 * v31) >> 63)
    {
      v32 = v31 >> 2;
      if (v31 >> 2 < v31)
      {
        v33 = (3 * v31) >> 2;
        if (v33 < v31)
        {
          v96 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
          v34 = v102 + v96;
          v35 = *(_QWORD *)(v5 + 72);
          v36 = v101;
          v37 = *(int *)(v101 + 48);
          v38 = *(double *)(v102 + v96 + v33 * v35 + v37);
          v95 = v35;
          v39 = *(double *)(v102 + v96 + v35 * v32 + v37);
          v40 = v38 - v39;
          v41 = (v38 - v39) * 1.5;
          if ((sub_23DCE18C8() & 1) == 0)
          {
LABEL_10:
            v48 = v29;
            v49 = v39 - v41;
            if (*(_BYTE *)(v2 + v22[12]) == 1)
            {
              sub_23DC82800(0, (unint64_t *)&unk_254325800, (uint64_t (*)(uint64_t))sub_23DCB5390, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
              inited = swift_initStackObject();
              v51 = inited;
              *(_OWORD *)(inited + 16) = xmmword_23DCE39C0;
              if (*(_QWORD *)(v30 + 16))
              {
                v52 = v97;
                sub_23DC82858(v34, v97, (uint64_t (*)(_QWORD))sub_23DC8FF80);
                *(_QWORD *)(v51 + 32) = *(_QWORD *)(v52 + *(int *)(v36 + 48));
                *(_BYTE *)(v51 + 40) = 0;
                v53 = sub_23DCE1C64();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
              }
              else
              {
                *(_QWORD *)(inited + 32) = 0;
                *(_BYTE *)(inited + 40) = 1;
              }
              v54 = (void *)sub_23DCE14D8();
              v55 = v54;
              if (v54)
              {
                objc_msgSend(v54, sel_doubleValueForUnit_, *(_QWORD *)(v2 + v22[13]));
                v57 = v56;

              }
              else
              {
                v57 = 0;
              }
              *(_QWORD *)(v51 + 48) = v57;
              *(_BYTE *)(v51 + 56) = v55 == 0;
              v58 = (double *)sub_23DCAE830(v51);
              swift_bridgeObjectRelease();
              v59 = *((_QWORD *)v58 + 2);
              if (v59)
              {
                v60 = v58[4];
                v61 = v59 - 1;
                if (v61)
                {
                  v62 = v58 + 5;
                  do
                  {
                    v63 = *v62++;
                    v64 = v63;
                    if (v63 < v60)
                      v60 = v64;
                    --v61;
                  }
                  while (v61);
                }
                swift_bridgeObjectRelease();
                if (v49 > v60)
                  v49 = v60;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            v65 = v38 + v41;
            if (*(_BYTE *)(v2 + v22[11]) == 1)
            {
              sub_23DC82800(0, (unint64_t *)&unk_254325800, (uint64_t (*)(uint64_t))sub_23DCB5390, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
              v66 = swift_initStackObject();
              v67 = v66;
              *(_OWORD *)(v66 + 16) = xmmword_23DCE39C0;
              v68 = *(_QWORD *)(v102 + 16);
              if (v68)
              {
                v69 = v98;
                sub_23DC82858(v102 + v96 + (v68 - 1) * v95, v98, (uint64_t (*)(_QWORD))sub_23DC8FF80);
                *(_QWORD *)(v67 + 32) = *(_QWORD *)(v69 + *(int *)(v36 + 48));
                *(_BYTE *)(v67 + 40) = 0;
                v70 = sub_23DCE1C64();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
              }
              else
              {
                *(_QWORD *)(v66 + 32) = 0;
                *(_BYTE *)(v66 + 40) = 1;
              }
              v71 = (void *)sub_23DCE14D8();
              v72 = v71;
              if (v71)
              {
                objc_msgSend(v71, sel_doubleValueForUnit_, *(_QWORD *)(v2 + v22[13]));
                v74 = v73;

              }
              else
              {
                v74 = 0;
              }
              *(_QWORD *)(v67 + 48) = v74;
              *(_BYTE *)(v67 + 56) = v72 == 0;
              v75 = (double *)sub_23DCAE830(v67);
              swift_bridgeObjectRelease();
              v76 = *((_QWORD *)v75 + 2);
              if (v76)
              {
                v77 = v75[4];
                v78 = v76 - 1;
                if (v78)
                {
                  v79 = v75 + 5;
                  do
                  {
                    v80 = *v79++;
                    v81 = v80;
                    if (v77 < v80)
                      v77 = v81;
                    --v78;
                  }
                  while (v78);
                }
                swift_bridgeObjectRelease();
                if (v65 <= v77)
                  v65 = v77;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            v82 = *(_QWORD *)(v2 + v22[13]);
            objc_msgSend(*(id *)(v2 + v22[9]), sel_doubleValueForUnit_, v82);
            v84 = v48 - v83;
            v85 = v83 + v48;
            v86 = (void *)objc_opt_self();
            v87 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v48);
            if (v84 >= v49)
              v88 = v49;
            else
              v88 = v84;
            v89 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v88);
            if (v65 > v85)
              v90 = v65;
            else
              v90 = v85;
            v91 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v90);
            objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E60]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v89, v91, 1, 1);

            v92 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v40);
            v93 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v49);
            v94 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v65);
            objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E60]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v93, v94, 1, 1);

            sub_23DCE143C();
            sub_23DCE1778();
            return swift_bridgeObjectRelease();
          }
          v42 = sub_23DCE1904();
          result = sub_23DCE18EC();
          v43 = __OFSUB__(v42, result);
          v44 = v42 - result;
          if (!v43)
          {
            result = sub_23DCE18F8();
            if (!__OFSUB__(v45, result))
            {
              v46 = (double)v44 / (double)(v45 - result);
              objc_msgSend(*(id *)(v2 + v22[10]), sel_doubleValueForUnit_, *(_QWORD *)(v2 + v22[13]));
              v41 = v41 * v46 + (1.0 - v46) * v47;
              goto LABEL_10;
            }
LABEL_57:
            __break(1u);
            return result;
          }
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_56;
  }
  return result;
}

uint64_t sub_23DCAFFA4(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  void (*v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)();
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  long double v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_23DC8FF80();
  v38 = v4;
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCB53E4();
  v7 = v6;
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCB544C(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char **)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v39 = (uint64_t *)((char *)&v37 - v13);
  v14 = 1.0 - a2;
  v15 = *(_QWORD *)(a1 + 16);
  v44 = a1;
  *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRetain());
  v17 = 0;
  v18 = 0.0;
  v19 = 0.0;
  v43 = v15;
  v20 = v15;
  v21 = sub_23DC8FF80;
  if (!v15)
    goto LABEL_7;
LABEL_2:
  if (--v20 >= v43)
  {
    __break(1u);
    goto LABEL_12;
  }
  v22 = (uint64_t)&v40[*(int *)(v7 + 48)];
  *(double *)&result = COERCE_DOUBLE(sub_23DC82858(v44+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v20, v22, (uint64_t (*)(_QWORD))v21));
  if (__OFADD__(v17, 1))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v23 = (uint64_t)v12 + *(int *)(v7 + 48);
  *v12 = v17;
  sub_23DC87A14(v22, v23, (uint64_t (*)(_QWORD))v21);
  v24 = 0;
  ++v17;
  while (1)
  {
    v25 = v39;
    v26 = v41;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v12, v24, 1, v7);
    sub_23DC87A14((uint64_t)v12, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_23DCB544C);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v7) == 1)
      break;
    v27 = (char *)v25 + *(int *)(v7 + 48);
    v28 = v17;
    v29 = v21;
    v30 = *(int *)(v38 + 48);
    v31 = *(double *)&v27[v30];
    v32 = *v25;
    v33 = sub_23DCE1C64();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = v37;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v27, v33);
    *(double *)&v35[v30] = v31;
    v21 = v29;
    v17 = v28;
    v36 = pow(v14, (double)v32);
    v19 = v19 + v31 * v36;
    v18 = v18 + v36;
    *(double *)&result = COERCE_DOUBLE((*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v33));
    if (v20)
      goto LABEL_2;
LABEL_7:
    v24 = 1;
  }
  swift_bridgeObjectRelease();
  if (v18 > 0.0)
    *(double *)&result = v19 / v18;
  else
    *(double *)&result = 0.0;
  return result;
}

uint64_t sub_23DCB0284(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7[2];

  sub_23DC8FF80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_23DCB40C4(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v7[1] = v5;
  result = sub_23DCB40EC(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_23DCB0308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_23DCB0388()
{
  sub_23DCB0308();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SleepingSampleBaselineComparisonEnumerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepingSampleBaselineComparisonEnumerator);
}

uint64_t sub_23DCB03B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a4;
  v33 = a5;
  v30 = a1;
  v31 = a3;
  v29 = a2;
  v12 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23DCE1640();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator(0, a6, a7, v17);
  *((_BYTE *)a8 + *(int *)(v18 + 40)) = 0;
  v19 = (char *)a8 + *(int *)(v18 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a1, AssociatedTypeWitness);
  v22 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v29, v13);
  type metadata accessor for SleepingSampleBaselineAccumulator();
  v23 = swift_allocObject();
  v24 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v23
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v23
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries) = v24;
  *(_QWORD *)(v23
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete) = v24;
  sub_23DCE1AFC();
  sub_23DCE1A9C();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v23+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange, v16, v13);
  v25 = (_QWORD *)(v23
                 + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_warmupProgressProvider);
  v26 = v32;
  *v25 = v31;
  v25[1] = v26;
  *(_QWORD *)(v23
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_outlierContextProvider) = v33;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v30, AssociatedTypeWitness);
  *a8 = v23;
  return result;
}

uint64_t sub_23DCB05C0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  char *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;

  v78 = a1;
  v79 = a2;
  sub_23DCA368C();
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE18A4();
  v6 = (void (*)(uint64_t))MEMORY[0x24BE40328];
  v65 = v5;
  v63 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8F0D4();
  MEMORY[0x24BDAC7A8](v8);
  v73 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC87B34(0, (unint64_t *)&unk_254325880, v6);
  v70 = *(_QWORD *)(v10 - 8);
  v71 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)&v63 - v13;
  sub_23DC8799C();
  v75 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v76 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_23DCE1400();
  v69 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23DCE1C64();
  v77 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v63 - v21;
  sub_23DCB5A94(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23DCE15C8();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCB0C78((uint64_t)v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    v30 = v70;
    v31 = v71;
    v32 = (uint64_t)v73;
    v76 = (char *)v18;
    sub_23DC827C4((uint64_t)v25, (uint64_t (*)(_QWORD))sub_23DCB5A94);
    v33 = *(int *)(v78 + 40);
    if ((v2[v33] & 1) != 0)
    {
      sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v79, 1, 2, v34);
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_23DCE1FB8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v31) == 1)
    {
      sub_23DC827C4(v32, (uint64_t (*)(_QWORD))sub_23DC8F0D4);
      v49 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, char *))(v77 + 56))(v67, 1, 1, v76);
      sub_23DCB15D8(v49);
      sub_23DC827C4(v49, (uint64_t (*)(_QWORD))sub_23DCA368C);
      v2[v33] = 1;
      sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      v48 = v50;
      v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56);
      v46 = v79;
LABEL_13:
      v47 = 2;
      return v45((uint64_t)v46, v47, 2, v48);
    }
    v51 = v66;
    sub_23DC8FD78(v32, v66, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
    v52 = v68;
    sub_23DCB5AB0(v51, v68);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v54 = v79;
    if (EnumCaseMultiPayload != 1)
    {
      v59 = v63;
      v58 = (unint64_t)v64;
      v60 = v52;
      v61 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v64, v60, v65);
      sub_23DCB0D90(v58);
      (*(void (**)(unint64_t, uint64_t))(v59 + 8))(v58, v61);
      sub_23DC8FE44(v51, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
      sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      v48 = v62;
      v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
      v46 = v54;
      goto LABEL_13;
    }
    sub_23DC8FE44(v51, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
    v55 = *(_QWORD *)v52;
    v56 = *(_BYTE *)(v52 + 8);
    v2[v33] = 1;
    *(_QWORD *)v54 = v55;
    v54[8] = v56;
    sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v44 = v57;
    swift_storeEnumTagMultiPayload();
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
    v46 = v54;
  }
  else
  {
    v73 = v2;
    v36 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v36(v29, v25, v26);
    sub_23DCE1514();
    sub_23DCE15EC();
    v37 = (uint64_t)v76;
    sub_23DCE13D0();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v17, v72);
    v38 = v74;
    v39 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v74, v37 + *(int *)(v75 + 36), v18);
    sub_23DC827C4(v37, (uint64_t (*)(_QWORD))sub_23DC8799C);
    sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    sub_23DCE1FF4();
    v40 = v80;
    v41 = *(void (**)(char *, uint64_t))(v39 + 8);
    v41(v38, v18);
    v41(v22, v18);
    if (!v40)
      v73[*(int *)(v78 + 40)] = 1;
    v42 = v79;
    v36(v79, v29, v26);
    sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v44 = v43;
    swift_storeEnumTagMultiPayload();
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
    v46 = v42;
  }
  v47 = 0;
  v48 = v44;
  return v45((uint64_t)v46, v47, 2, v48);
}

uint64_t sub_23DCB0C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
  swift_beginAccess();
  if (*(_QWORD *)(*v3 + 16))
  {
    result = swift_beginAccess();
    v5 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      v6 = sub_23DCE15C8();
      v7 = MEMORY[0x24BE3FFB0];
      v8 = *(_QWORD *)(v6 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(a1, v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v6);
      sub_23DCB51A8(0, 1, (uint64_t (*)(void))sub_23DC8EA84, (uint64_t (*)(_QWORD))v7);
      swift_endAccess();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v6);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v9 = sub_23DCE15C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  return result;
}

uint64_t sub_23DCB0D90(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  void (*v39)(char *, uint64_t);
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char v65;
  unint64_t v66;
  unint64_t v67;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v90 = a1;
  sub_23DCA368C();
  MEMORY[0x24BDAC7A8](v2);
  v86 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  v76 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v83 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v84 = (char *)&v69 - v7;
  v8 = sub_23DCE1400();
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23DCE1C64();
  v89 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v81 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v82 = (char *)&v69 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v69 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v69 - v18;
  v20 = sub_23DCE18A4();
  v91 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v85 = (char *)&v69 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v77 = (char *)&v69 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v69 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v88 = (char *)&v69 - v31;
  v32 = (unint64_t *)(v1
                           + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates);
  swift_beginAccess();
  v33 = *(_QWORD *)(*v32 + 16);
  v87 = v1;
  v34 = (char *)(v1
               + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange);
  if (v33 >= sub_23DCE1604())
  {
    v35 = *v32;
    v36 = *(_QWORD *)(*v32 + 16);
    if (v36)
    {
      v37 = v91;
      v73 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      v72 = *(_QWORD *)(v91 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v91 + 16);
      v38(v88, v35 + v73 + v72 * (v36 - 1), v20);
      v71 = (void (*)(char *, uint64_t, uint64_t))v38;
      v38(v30, v90, v20);
      sub_23DCE1868();
      sub_23DCE1868();
      v74 = sub_23DC8E674();
      LOBYTE(v38) = sub_23DCE1CB8();
      v39 = *(void (**)(char *, uint64_t))(v89 + 8);
      v39(v17, v10);
      v70 = v39;
      v39(v19, v10);
      v40 = *(_QWORD *)(v37 + 8);
      v75 = v20;
      ((void (*)(char *, uint64_t))v40)(v30, v20);
      if ((v38 & 1) != 0)
      {
        v69 = (void (*)(char *, uint64_t))v40;
        v41 = v78;
        sub_23DCE15EC();
        v42 = (uint64_t)v84;
        sub_23DCE13D0();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v80);
        v43 = v82;
        v44 = v90;
        sub_23DCE1868();
        v45 = v43;
        LOBYTE(v43) = sub_23DCE1CC4();
        v46 = v89;
        v47 = v81;
        (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v81, v45, v10);
        v48 = v83;
        sub_23DC82858(v42, v83, (uint64_t (*)(_QWORD))sub_23DC8799C);
        if ((v43 & 1) != 0)
        {
          v49 = sub_23DCE1CD0();
          sub_23DC827C4(v48, (uint64_t (*)(_QWORD))sub_23DC8799C);
          v50 = v47;
          v51 = v70;
          v70(v50, v10);
          v51(v45, v10);
          sub_23DC827C4(v42, (uint64_t (*)(_QWORD))sub_23DC8799C);
          v37 = v91;
          v52 = v87;
          if ((v49 & 1) != 0)
          {
            v71(v77, v44, v75);
            v53 = (unint64_t *)(v52
                                     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete);
            swift_beginAccess();
            v54 = *v53;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v53 = v54;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v54 = sub_23DC8EAAC(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
              *v53 = v54;
            }
            v57 = *(_QWORD *)(v54 + 16);
            v56 = *(_QWORD *)(v54 + 24);
            if (v57 >= v56 >> 1)
            {
              v54 = sub_23DC8EAAC(v56 > 1, v57 + 1, 1, v54);
              *v53 = v54;
            }
            *(_QWORD *)(v54 + 16) = v57 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v54 + v73 + v57 * v72, v77, v75);
            swift_endAccess();
            v46 = v89;
          }
        }
        else
        {
          sub_23DC827C4(v48, (uint64_t (*)(_QWORD))sub_23DC8799C);
          v63 = v70;
          v70(v47, v10);
          v63(v45, v10);
          sub_23DC827C4(v42, (uint64_t (*)(_QWORD))sub_23DC8799C);
          v37 = v91;
        }
        v64 = (uint64_t)v86;
        sub_23DCE1868();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v64, 0, 1, v10);
        sub_23DCB15D8(v64);
        sub_23DC827C4(v64, (uint64_t (*)(_QWORD))sub_23DCA368C);
        v10 = v75;
        v69(v88, v75);
        v34 = v85;
        v71(v85, v44, v10);
        swift_beginAccess();
        v40 = *v32;
        v65 = swift_isUniquelyReferenced_nonNull_native();
        *v32 = v40;
        if ((v65 & 1) != 0)
          goto LABEL_18;
      }
      else
      {
        __break(1u);
      }
      v40 = sub_23DC8EAAC(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
      *v32 = v40;
LABEL_18:
      v67 = *(_QWORD *)(v40 + 16);
      v66 = *(_QWORD *)(v40 + 24);
      if (v67 >= v66 >> 1)
      {
        v40 = sub_23DC8EAAC(v66 > 1, v67 + 1, 1, v40);
        *v32 = v40;
      }
      *(_QWORD *)(v40 + 16) = v67 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v40 + v73 + v67 * v72, v34, v10);
      return swift_endAccess();
    }
  }
  v58 = v91;
  (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v23, v90, v20);
  swift_beginAccess();
  v59 = *v32;
  v60 = swift_isUniquelyReferenced_nonNull_native();
  *v32 = v59;
  if ((v60 & 1) == 0)
  {
    v59 = sub_23DC8EAAC(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
    *v32 = v59;
  }
  v62 = *(_QWORD *)(v59 + 16);
  v61 = *(_QWORD *)(v59 + 24);
  if (v62 >= v61 >> 1)
  {
    v59 = sub_23DC8EAAC(v61 > 1, v62 + 1, 1, v59);
    *v32 = v59;
  }
  *(_QWORD *)(v59 + 16) = v62 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v59+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v62, v23, v20);
  return swift_endAccess();
}

uint64_t sub_23DCB1578@<X0>(uint64_t *a1@<X8>)
{
  sub_23DCAF208(a1);
  return swift_release();
}

uint64_t sub_23DCB159C()
{
  uint64_t v0;

  v0 = sub_23DCB5B04();
  swift_release();
  return v0;
}

uint64_t sub_23DCB15D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t *v98;
  uint64_t result;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, unint64_t, uint64_t);
  uint64_t v104;
  NSObject *v105;
  os_signpost_type_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint8_t *v110;
  os_signpost_id_t v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  __objc2_class **p_superclass;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  int v133;
  char *v134;
  void (*v135)(uint64_t, uint64_t);
  unint64_t v136;
  unint64_t v137;
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  void *v157;
  id v158;
  uint64_t v159;
  id v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  char *v166;
  char v167;
  char v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  void (*v184)(char *, uint64_t);
  uint64_t v185;
  char *v186;
  char *v187;
  void (*v188)(char *, char *, uint64_t);
  char *v189;
  char *v190;
  void (*v191)(char *, char *, uint64_t);
  uint64_t v192;
  void (*v193)(char *, uint64_t);
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t *v202;
  unint64_t v203;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  char *v209;
  unint64_t v210;
  uint64_t *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  NSObject *v216;
  os_signpost_type_t v217;
  uint64_t v218;
  uint64_t v219;
  const char *v220;
  uint64_t v221;
  uint8_t *v222;
  os_signpost_id_t v223;
  void (*v224)(char *, uint64_t);
  uint64_t v225;
  void (*v226)(char *, uint64_t);
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(char *, char *, uint64_t);
  char *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  char *v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  unint64_t v273;
  uint64_t v274;
  id v275;
  id v276;
  uint64_t KeyPath;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  char *v283;
  char *v284;
  uint64_t v285;
  void (*v286)(char *, uint64_t);
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  void (*v299)(uint64_t, unint64_t, uint64_t);
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  void (*v306)(char *, char *, uint64_t);
  uint64_t v307;
  uint64_t v308;
  void (*v309)(char *, uint64_t);
  uint64_t v310;
  unint64_t v311;
  unint64_t v312;
  unint64_t v313;
  __int128 v314;
  unint64_t v315;
  uint64_t v316;
  uint64_t (*v317)(uint64_t);
  uint64_t v318;

  v2 = v1;
  v270 = a1;
  v230 = sub_23DCE1AC0();
  v229 = *(_QWORD *)(v230 - 8);
  MEMORY[0x24BDAC7A8](v230);
  v233 = (char *)&v225 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, (unint64_t *)&unk_254325310, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v258 = (uint64_t)&v225 - v5;
  v6 = sub_23DCE179C();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v256 = (uint64_t)&v225 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v255 = (uint64_t)&v225 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v254 = (uint64_t)&v225 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v253 = (uint64_t)&v225 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v252 = (uint64_t)&v225 - v15;
  sub_23DC80EF0(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v297 = (char *)&v225 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v225 - v19;
  sub_23DC87938();
  v251 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v250 = (char *)&v225 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v249 = (char *)&v225 - v24;
  v282 = sub_23DCE15C8();
  v257 = *(_QWORD *)(v282 - 8);
  v25 = MEMORY[0x24BDAC7A8](v282);
  v281 = (char *)&v225 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v248 = (char *)&v225 - v27;
  sub_23DCB40A8(0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v247 = (uint64_t)&v225 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v289 = (uint64_t)&v225 - v31;
  v32 = sub_23DCE14E4();
  MEMORY[0x24BDAC7A8](v32);
  v267 = (char *)&v225 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCAA374(0);
  v266 = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v268 = (uint64_t)&v225 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v265 = (uint64_t)&v225 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v264 = (uint64_t)&v225 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v294 = (uint64_t)&v225 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v293 = (uint64_t)&v225 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v292 = (uint64_t)&v225 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v291 = (uint64_t)&v225 - v47;
  sub_23DCA368C();
  v49 = MEMORY[0x24BDAC7A8](v48);
  v238 = (uint64_t)&v225 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49);
  v269 = (uint64_t)&v225 - v51;
  v52 = sub_23DCE1C64();
  v308 = *(_QWORD *)(v52 - 8);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v261 = (char *)&v225 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v260 = (char *)&v225 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v262 = (char *)&v225 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v283 = (char *)&v225 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v304 = (char *)&v225 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v65 = (char *)&v225 - v64;
  v66 = MEMORY[0x24BDAC7A8](v63);
  v237 = (char *)&v225 - v67;
  MEMORY[0x24BDAC7A8](v66);
  v284 = (char *)&v225 - v68;
  sub_23DCA8F2C(0);
  v301 = v69;
  v70 = MEMORY[0x24BDAC7A8](v69);
  v246 = (char *)&v225 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = MEMORY[0x24BDAC7A8](v70);
  v280 = (uint64_t)&v225 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v303 = (uint64_t)&v225 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v236 = (uint64_t)&v225 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v272 = (char *)&v225 - v79;
  MEMORY[0x24BDAC7A8](v78);
  v307 = (uint64_t)&v225 - v80;
  v235 = sub_23DCE1A90();
  v81 = *(_QWORD *)(v235 - 8);
  v82 = MEMORY[0x24BDAC7A8](v235);
  v232 = (char *)&v225 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x24BDAC7A8](v82);
  v234 = (char *)&v225 - v85;
  MEMORY[0x24BDAC7A8](v84);
  v87 = (char *)&v225 - v86;
  v88 = sub_23DCE18A4();
  v89 = *(_QWORD *)(v88 - 8);
  v90 = MEMORY[0x24BDAC7A8](v88);
  v263 = (char *)&v225 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = MEMORY[0x24BDAC7A8](v90);
  v259 = (char *)&v225 - v93;
  v94 = MEMORY[0x24BDAC7A8](v92);
  v295 = (char *)&v225 - v95;
  MEMORY[0x24BDAC7A8](v94);
  v97 = (char *)&v225 - v96;
  v98 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates);
  result = swift_beginAccess();
  v290 = v98;
  v100 = *v98;
  v101 = *(_QWORD *)(*v98 + 16);
  if (!v101)
    return result;
  v279 = v20;
  v288 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v305 = *(_QWORD *)(v89 + 72);
  v102 = v100 + v288 + v305 * (v101 - 1);
  v298 = v89;
  v103 = *(void (**)(uint64_t, unint64_t, uint64_t))(v89 + 16);
  v271 = v97;
  v299 = v103;
  v103((uint64_t)v97, v102, v88);
  v285 = v2;
  v104 = v2
       + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_signposter;
  sub_23DCE1A84();
  v225 = v104;
  v105 = sub_23DCE1AA8();
  v106 = sub_23DCE1F58();
  v107 = sub_23DCE1F94();
  v300 = v88;
  if ((v107 & 1) != 0)
  {
    v231 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    v108 = v234;
    v109 = v235;
    v231(v234, v87, v235);
    v110 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v110 = 0;
    v111 = sub_23DCE1A78();
    _os_signpost_emit_with_name_impl(&dword_23DC7C000, v105, v106, v111, "SleepingSampleBaselineAccumulator.completeDaySummariesIfPossible", "", v110, 2u);
    MEMORY[0x24264179C](v110, -1, -1);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v108, v109);
    v112 = v231;
  }
  else
  {

    v112 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    v109 = v235;
    v108 = v234;
  }
  v113 = (uint64_t)v272;
  v114 = v290;
  v231 = v112;
  v112(v108, v87, v109);
  sub_23DCE1AE4();
  swift_allocObject();
  v228 = sub_23DCE1AD8();
  v226 = *(void (**)(char *, uint64_t))(v81 + 8);
  v226(v87, v109);
  v115 = v285;
  v116 = (uint64_t *)(v285
                   + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete);
  swift_beginAccess();
  v117 = v115;
  v227 = v116;
  v118 = *v116;
  p_superclass = _TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator.superclass;
  v245 = *(_QWORD *)(*v116 + 16);
  if (v245)
  {
    v244 = v115
         + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
    v242 = OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_warmupProgressProvider;
    v239 = OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_outlierContextProvider;
    v240 = (unint64_t *)(v115
                              + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
    v243 = v118 + v288;
    v120 = swift_bridgeObjectRetain();
    v121 = 0;
    v296 = -v305;
    v241 = v120;
    while (1)
    {
      if (v121 >= *(_QWORD *)(v120 + 16))
        goto LABEL_67;
      v122 = v121;
      v299((uint64_t)v295, v243 + v121 * v305, v300);
      v123 = v284;
      sub_23DCE1868();
      v124 = v307;
      sub_23DCE15F8();
      v125 = v308;
      v309 = *(void (**)(char *, uint64_t))(v308 + 8);
      v309(v123, v52);
      v126 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
      v127 = v270;
      LODWORD(v125) = v126(v270, 1, v52);
      sub_23DC82858(v124, v113, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v128 = v269;
      sub_23DC82858(v127, v269, (uint64_t (*)(_QWORD))sub_23DCA368C);
      if ((_DWORD)v125 == 1)
      {
        sub_23DC827C4(v128, (uint64_t (*)(_QWORD))sub_23DCA368C);
        sub_23DC827C4(v113, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        LODWORD(v286) = 1;
      }
      else
      {
        v129 = v238;
        sub_23DC82858(v128, v238, (uint64_t (*)(_QWORD))sub_23DCA368C);
        if (v126(v129, 1, v52) == 1)
          goto LABEL_73;
        sub_23DC8E674();
        v130 = sub_23DCE1CD0();
        v131 = v237;
        (*(void (**)(char *, uint64_t, uint64_t))(v308 + 16))(v237, v129, v52);
        v132 = v236;
        sub_23DC82858(v113, v236, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        if ((v130 & 1) != 0)
          v133 = sub_23DCE1CB8();
        else
          v133 = 0;
        sub_23DC827C4(v132, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        v134 = v131;
        v135 = (void (*)(uint64_t, uint64_t))v309;
        v309(v134, v52);
        sub_23DC827C4(v128, (uint64_t (*)(_QWORD))sub_23DCA368C);
        sub_23DC827C4(v113, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        v135(v129, v52);
        LODWORD(v286) = v133 ^ 1;
        v114 = v290;
      }
      v302 = *(_QWORD *)(*v114 + 16);
      if (!v302)
        goto LABEL_75;
      v273 = v122 + 1;
      swift_bridgeObjectRetain();
      v136 = 0;
      v137 = v288;
      while (1)
      {
        sub_23DCE1868();
        v139 = sub_23DC8E674();
        v140 = v307;
        v141 = v52;
        v142 = sub_23DCE1CD0();
        v143 = v65;
        v144 = v304;
        v306 = *(void (**)(char *, char *, uint64_t))(v308 + 16);
        v306(v304, v143, v52);
        v145 = v140;
        v146 = v303;
        sub_23DC82858(v145, v303, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        if ((v142 & 1) != 0)
          break;
        sub_23DC827C4(v146, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        v138 = v309;
        v309(v144, v52);
        v138(v143, v52);
        v65 = v143;
LABEL_18:
        ++v136;
        v137 += v305;
        if (v302 == v136)
          goto LABEL_74;
      }
      v147 = sub_23DCE1CB8();
      sub_23DC827C4(v146, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v148 = v309;
      v309(v144, v141);
      v148(v143, v141);
      v65 = v143;
      v52 = v141;
      if ((v147 & 1) == 0)
        goto LABEL_18;
      v274 = v139;
      swift_bridgeObjectRelease();
      v149 = *v290;
      v150 = *(_QWORD *)(*v290 + 16);
      if (v150 < v136)
        goto LABEL_68;
      v151 = v149 + v288;
      v287 = v149 + v288;
      v278 = (2 * v150) | 1;
      v152 = swift_bridgeObjectRetain();
      v153 = (uint64_t)v295;
      sub_23DCA9934(v152, v151, v136, (2 * v150) | 1, (uint64_t)v295, v291);
      sub_23DCA9750(v149, v151, v136, (2 * v150) | 1, v153, v292);
      sub_23DCA9B14(v149, v151, v136, (2 * v150) | 1, v153, v293);
      sub_23DCA9D14(v149, v151, v136, (2 * v150) | 1);
      v155 = *(_QWORD *)(*(_QWORD *)v154 + 104);
      v156 = *(_OWORD *)(v285 + v242);
      v302 = v154;
      *(_OWORD *)(v154 + v155) = v156;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      KeyPath = swift_getKeyPath();
      v157 = (void *)objc_opt_self();
      v158 = objc_msgSend(v157, sel_hourUnit);
      v159 = objc_opt_self();
      v276 = objc_msgSend((id)v159, sel_quantityWithUnit_doubleValue_, v158, 1.0);

      v160 = objc_msgSend(v157, sel_hourUnit);
      v275 = objc_msgSend((id)v159, sel_quantityWithUnit_doubleValue_, v160, 3.8);

      v161 = objc_msgSend(v157, sel_secondUnit);
      *(_QWORD *)&v314 = v149;
      *((_QWORD *)&v314 + 1) = v287;
      v315 = v136;
      v316 = v278;
      v317 = sub_23DCB51A0;
      v318 = KeyPath;
      v287 = v149;
      swift_bridgeObjectRetain();
      swift_retain();
      v162 = (uint64_t)v267;
      sub_23DCE1850();
      sub_23DCAF5D4(&v314, v162, v276, v275, 0, 0, v161, v294);
      swift_release();
      LOBYTE(v159) = sub_23DCE18B0();
      v163 = v264;
      sub_23DC82858(v292, v264, (uint64_t (*)(_QWORD))sub_23DCAA374);
      if ((v159 & 1) == 0)
      {
        sub_23DC827C4(v163, (uint64_t (*)(_QWORD))sub_23DCAA374);
        v165 = v265;
        sub_23DC82858(v293, v265, (uint64_t (*)(_QWORD))sub_23DCAA374);
        v166 = v263;
LABEL_29:
        sub_23DC827C4(v165, (uint64_t (*)(_QWORD))sub_23DCAA374);
LABEL_30:
        v169 = v268;
        sub_23DC82858(v294, v268, (uint64_t (*)(_QWORD))sub_23DCAA374);
LABEL_31:
        sub_23DC827C4(v169, (uint64_t (*)(_QWORD))sub_23DCAA374);
        if ((v286 & 1) == 0)
          goto LABEL_54;
        goto LABEL_32;
      }
      v164 = sub_23DCE18B0();
      sub_23DC827C4(v163, (uint64_t (*)(_QWORD))sub_23DCAA374);
      v165 = v265;
      sub_23DC82858(v293, v265, (uint64_t (*)(_QWORD))sub_23DCAA374);
      v166 = v263;
      if ((v164 & 1) == 0)
        goto LABEL_29;
      v167 = sub_23DCE18B0();
      sub_23DC827C4(v165, (uint64_t (*)(_QWORD))sub_23DCAA374);
      if ((v167 & 1) == 0)
        goto LABEL_30;
      v168 = sub_23DCE18B0();
      v169 = v268;
      sub_23DC82858(v294, v268, (uint64_t (*)(_QWORD))sub_23DCAA374);
      if ((v168 & 1) == 0)
        goto LABEL_31;
      v170 = sub_23DCE18B0();
      sub_23DC827C4(v169, (uint64_t (*)(_QWORD))sub_23DCAA374);
      if (((v286 | v170) & 1) == 0)
      {
LABEL_54:
        swift_release();
        swift_bridgeObjectRelease();
        sub_23DC827C4(v294, (uint64_t (*)(_QWORD))sub_23DCAA374);
        sub_23DC827C4(v293, (uint64_t (*)(_QWORD))sub_23DCAA374);
        sub_23DC827C4(v292, (uint64_t (*)(_QWORD))sub_23DCAA374);
        sub_23DC827C4(v291, (uint64_t (*)(_QWORD))sub_23DCAA374);
        (*(void (**)(char *, uint64_t))(v298 + 8))(v295, v300);
        swift_bridgeObjectRelease();
        sub_23DC827C4(v307, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        v117 = v285;
        p_superclass = (__objc2_class **)(_TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator
                                        + 8);
        break;
      }
LABEL_32:
      v171 = v300;
      if (v150 != v136)
      {
        v172 = v287 + v288 + v305 * (v150 - 1);
        while ((uint64_t)v150 > (uint64_t)v136)
        {
          v299((uint64_t)v166, v172, v171);
          v173 = v297;
          sub_23DCE1844();
          v174 = sub_23DCE11E4();
          v175 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 48))(v173, 1, v174);
          v176 = (uint64_t)v173;
          v171 = v300;
          sub_23DC827C4(v176, (uint64_t (*)(_QWORD))sub_23DC80EF0);
          (*(void (**)(char *, uint64_t))(v298 + 8))(v166, v171);
          if (v175 != 1)
          {
            v299(v289, v172, v171);
            v177 = 0;
            goto LABEL_39;
          }
          --v150;
          v172 += v296;
          if (v136 == v150)
            goto LABEL_37;
        }
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
LABEL_37:
      v177 = 1;
LABEL_39:
      v178 = v298;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v298 + 56))(v289, v177, 1, v171);
      sub_23DCE1868();
      v179 = v262;
      v180 = v284;
      if (v136 >= *(_QWORD *)(*v290 + 16))
        goto LABEL_69;
      v181 = v259;
      v299((uint64_t)v259, *v290 + v137, v171);
      sub_23DCE1868();
      v286 = *(void (**)(char *, uint64_t))(v178 + 8);
      v286(v181, v171);
      v182 = v260;
      sub_23DCE1868();
      v183 = v261;
      sub_23DCE1BC8();
      sub_23DCE1BE0();
      v184 = v309;
      v309(v183, v52);
      v184(v182, v52);
      if ((sub_23DCE1CD0() & 1) == 0)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      v185 = v251;
      v186 = v249;
      v187 = &v249[*(int *)(v251 + 48)];
      v188 = *(void (**)(char *, char *, uint64_t))(v308 + 32);
      v188(v249, v180, v52);
      v278 = (uint64_t)v187;
      v188(v187, v179, v52);
      v189 = v250;
      v190 = &v250[*(int *)(v185 + 48)];
      v191 = v306;
      v306(v250, v186, v52);
      v191(v190, v187, v52);
      v192 = (uint64_t)v246;
      v188(v246, v189, v52);
      v193 = v309;
      v309(v190, v52);
      v194 = &v189[*(int *)(v185 + 48)];
      v195 = v300;
      v188(v189, v186, v52);
      v188(v194, (char *)v278, v52);
      v188((char *)(v192 + *(int *)(v301 + 36)), v194, v52);
      v193(v189, v52);
      sub_23DC87A14(v192, v280, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v196 = v247;
      sub_23DC82858(v289, v247, (uint64_t (*)(_QWORD))sub_23DCB40A8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v298 + 48))(v196, 1, v195) == 1)
      {
        sub_23DC827C4(v196, (uint64_t (*)(_QWORD))sub_23DCB40A8);
        v197 = sub_23DCE11E4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 56))(v279, 1, 1, v197);
      }
      else
      {
        sub_23DCE1844();
        v286((char *)v196, v195);
      }
      sub_23DCAF7FC(v252);
      sub_23DCAF7FC(v253);
      sub_23DCAF7FC(v254);
      sub_23DCB3584(v255);
      sub_23DCAF7FC(v256);
      v198 = (uint64_t)v248;
      sub_23DCE1520();
      if (*(_QWORD *)(v285 + v239))
      {
        sub_23DCBA2D0(v198, v258);
      }
      else
      {
        v199 = sub_23DCE1550();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 56))(v258, 1, 1, v199);
      }
      v200 = v282;
      v201 = v257;
      v113 = (uint64_t)v272;
      sub_23DCE155C();
      (*(void (**)(char *, uint64_t, uint64_t))(v201 + 16))(v281, v198, v200);
      v202 = v240;
      swift_beginAccess();
      v203 = *v202;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v202 = v203;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v203 = sub_23DC8EA84(0, *(_QWORD *)(v203 + 16) + 1, 1, v203);
        *v240 = v203;
      }
      v206 = *(_QWORD *)(v203 + 16);
      v205 = *(_QWORD *)(v203 + 24);
      if (v206 >= v205 >> 1)
      {
        v203 = sub_23DC8EA84(v205 > 1, v206 + 1, 1, v203);
        *v240 = v203;
      }
      *(_QWORD *)(v203 + 16) = v206 + 1;
      v207 = v203
           + ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80))
           + *(_QWORD *)(v201 + 72) * v206;
      v208 = v282;
      (*(void (**)(unint64_t, char *, uint64_t))(v201 + 32))(v207, v281, v282);
      swift_endAccess();
      v114 = v290;
      swift_beginAccess();
      if (*(_QWORD *)(*v114 + 16) <= v136)
        goto LABEL_71;
      sub_23DCB51A8(0, v136 + 1, (uint64_t (*)(void))sub_23DC8EAAC, (uint64_t (*)(_QWORD))MEMORY[0x24BE40328]);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v198, v208);
      sub_23DC827C4(v289, (uint64_t (*)(_QWORD))sub_23DCB40A8);
      sub_23DC827C4(v294, (uint64_t (*)(_QWORD))sub_23DCAA374);
      sub_23DC827C4(v293, (uint64_t (*)(_QWORD))sub_23DCAA374);
      sub_23DC827C4(v292, (uint64_t (*)(_QWORD))sub_23DCAA374);
      sub_23DC827C4(v291, (uint64_t (*)(_QWORD))sub_23DCAA374);
      v286(v295, v300);
      sub_23DC827C4(v307, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v121 = v273;
      v120 = v241;
      if (v273 == v245)
      {
        swift_bridgeObjectRelease();
        p_superclass = _TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator.superclass;
        v117 = v285;
        break;
      }
    }
  }
  v209 = (char *)p_superclass[130] + v117;
  swift_beginAccess();
  v210 = *(_QWORD *)(*(_QWORD *)v209 + 16);
  v211 = v227;
  swift_beginAccess();
  v212 = v233;
  v213 = v235;
  v214 = v232;
  v215 = v234;
  if (!v210)
    goto LABEL_58;
  if (*(_QWORD *)(*v211 + 16) >= v210)
  {
    sub_23DCB51A8(0, v210, (uint64_t (*)(void))sub_23DC8EAAC, (uint64_t (*)(_QWORD))MEMORY[0x24BE40328]);
LABEL_58:
    swift_endAccess();
    v216 = sub_23DCE1AA8();
    sub_23DCE1ACC();
    v217 = sub_23DCE1F4C();
    if ((sub_23DCE1F94() & 1) != 0)
    {
      swift_retain();
      sub_23DCE1AF0();
      swift_release();
      v218 = v229;
      v219 = v230;
      if ((*(unsigned int (**)(char *, uint64_t))(v229 + 88))(v212, v230) == *MEMORY[0x24BEE7810])
      {
        v220 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v218 + 8))(v212, v219);
        v220 = "";
      }
      v221 = v300;
      v231(v215, v214, v213);
      v222 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v222 = 0;
      v223 = sub_23DCE1A78();
      _os_signpost_emit_with_name_impl(&dword_23DC7C000, v216, v217, v223, "SleepingSampleBaselineAccumulator.completeDaySummariesIfPossible", v220, v222, 2u);
      MEMORY[0x24264179C](v222, -1, -1);

      v224 = v226;
      v226(v214, v213);
      v224(v215, v213);
    }
    else
    {

      v221 = v300;
      v226(v214, v213);
    }
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v298 + 8))(v271, v221);
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  swift_bridgeObjectRelease();
LABEL_75:
  v312 = 0;
  v313 = 0xE000000000000000;
  sub_23DCE20F0();
  swift_bridgeObjectRelease();
  v312 = 0xD000000000000027;
  v313 = 0x800000023DCE66C0;
  v310 = 0;
  v311 = 0xE000000000000000;
  sub_23DCE2198();
  sub_23DCE1D54();
  sub_23DCE2198();
  sub_23DCE1D54();
  swift_bridgeObjectRelease();
  result = sub_23DCE21BC();
  __break(1u);
  return result;
}

uint64_t sub_23DCB33BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
  v2 = sub_23DCE1640();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_signposter;
  v4 = sub_23DCE1AB4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23DCB3484()
{
  return type metadata accessor for SleepingSampleBaselineAccumulator();
}

uint64_t type metadata accessor for SleepingSampleBaselineAccumulator()
{
  uint64_t result;

  result = qword_254325428;
  if (!qword_254325428)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DCB34C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23DCE1640();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE1AB4();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_23DCB3574()
{
  JUMPOUT(0x2426416D0);
}

void sub_23DCB3584(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  void (*v87)(char *, uint64_t);
  char *v88;
  char *v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  v150 = a1;
  sub_23DC87938();
  v124 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v125 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v123 = (char *)&v117 - v5;
  v131 = sub_23DCE1C64();
  v130 = *(_QWORD *)(v131 - 8);
  v6 = MEMORY[0x24BDAC7A8](v131);
  v127 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v126 = (char *)&v117 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v129 = (char *)&v117 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v128 = (char *)&v117 - v12;
  sub_23DCB5358(0);
  MEMORY[0x24BDAC7A8](v13);
  v138 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23DCE191C();
  v16 = *(_QWORD *)(v15 - 8);
  v139 = v15;
  v140 = v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v121 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v132 = (char *)&v117 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v133 = (char *)&v117 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v135 = (char *)&v117 - v23;
  sub_23DCA8F2C(0);
  v136 = *(_QWORD *)(v24 - 8);
  v137 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v122 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v141 = (uint64_t)&v117 - v27;
  v142 = sub_23DCE1490();
  v28 = *(_QWORD *)(v142 - 8);
  v29 = MEMORY[0x24BDAC7A8](v142);
  v31 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v143 = (char *)&v117 - v32;
  sub_23DC81D20(0);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23DCE1100();
  v37 = *(_QWORD *)(v36 - 8);
  v145 = v36;
  v146 = v37;
  MEMORY[0x24BDAC7A8](v36);
  v144 = (uint64_t)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCB5374(0);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v117 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_23DCE14E4();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v134 = (char *)&v117 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v117 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v147 = (char *)&v117 - v49;
  v50 = sub_23DCE179C();
  v148 = *(_QWORD *)(v50 - 8);
  v149 = v50;
  MEMORY[0x24BDAC7A8](v50);
  v151 = (uint64_t)&v117 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCAF7FC(v151);
  v52 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  if (!v52)
    goto LABEL_27;
  sub_23DC82858(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112), (uint64_t)v41, (uint64_t (*)(_QWORD))sub_23DCB5374);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
  {
    sub_23DC827C4((uint64_t)v41, (uint64_t (*)(_QWORD))sub_23DCB5374);
LABEL_27:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v150, v151, v149);
    return;
  }
  v53 = v147;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v147, v41, v42);
  swift_unknownObjectRetain();
  sub_23DCE14CC();
  v55 = v145;
  v54 = v146;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v35, 1, v145) == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v53, v42);
    swift_unknownObjectRelease();
    sub_23DC827C4((uint64_t)v35, (uint64_t (*)(_QWORD))sub_23DC81D20);
    goto LABEL_27;
  }
  v119 = v52;
  v120 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v144, v35, v55);
  v56 = v143;
  sub_23DCE149C();
  v57 = v142;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v31, *MEMORY[0x24BE3FE68], v142);
  v58 = sub_23DCE1484();
  v59 = *(void (**)(char *, uint64_t))(v28 + 8);
  v59(v31, v57);
  v59(v56, v57);
  if ((v58 & 1) == 0)
  {
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v144, v55);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v53, v120);
    goto LABEL_27;
  }
  v60 = v144;
  v61 = sub_23DCD65F4(v144);
  if ((v62 & 1) != 0)
  {
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v60, v55);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v147, v120);
    goto LABEL_27;
  }
  v118 = v61;
  v63 = v135;
  sub_23DCE1700();
  v64 = v138;
  sub_23DCE18BC();
  v65 = v139;
  v135 = *(char **)(v140 + 8);
  ((void (*)(char *, uint64_t))v135)(v63, v139);
  v66 = v120;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v48, v147, v120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v64, 1, v137) == 1)
  {
    v67 = v128;
    sub_23DCE14A8();
    v68 = v126;
    sub_23DCE14A8();
    v69 = v127;
    sub_23DCE1BC8();
    v70 = v129;
    sub_23DCE1BE0();
    v71 = v130;
    v72 = *(void (**)(char *, uint64_t))(v130 + 8);
    v73 = v131;
    v72(v69, v131);
    v127 = (char *)v72;
    v72(v68, v73);
    sub_23DC8E674();
    LOBYTE(v69) = sub_23DCE1CD0();
    v136 = *(_QWORD *)(v43 + 8);
    ((void (*)(char *, uint64_t))v136)(v48, v120);
    if ((v69 & 1) == 0)
    {
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v74 = v124;
    v75 = v123;
    v76 = &v123[*(int *)(v124 + 48)];
    v77 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
    v77(v123, v67, v73);
    v77(v76, v70, v73);
    v78 = v125;
    v79 = v71;
    v80 = &v125[*(int *)(v74 + 48)];
    v81 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
    v81(v125, v75, v73);
    v81(v80, v76, v73);
    v82 = (uint64_t)v122;
    v77(v122, v78, v73);
    v83 = (void (*)(char *, uint64_t))v127;
    ((void (*)(char *, uint64_t))v127)(v80, v73);
    v84 = &v78[*(int *)(v74 + 48)];
    v77(v78, v75, v73);
    v77(v84, v76, v73);
    v77((char *)(v82 + *(int *)(v137 + 36)), v84, v73);
    v83(v78, v73);
    sub_23DC87A14(v82, v141, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    sub_23DC827C4(v138, (uint64_t (*)(_QWORD))sub_23DCB5358);
    v66 = v120;
    v85 = v142;
    v65 = v139;
    v86 = (void (*)(char *, uint64_t))v136;
  }
  else
  {
    v87 = *(void (**)(char *, uint64_t))(v43 + 8);
    v87(v48, v66);
    sub_23DC87A14(v64, v141, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v85 = v57;
    v86 = v87;
  }
  v88 = v134;
  sub_23DCE1790();
  v89 = v143;
  sub_23DCE149C();
  v86(v88, v66);
  v90 = sub_23DCE1478();
  v59(v89, v85);
  v91 = v118 + (v90 & 1);
  if (__OFADD__(v118, v90 & 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  v92 = sub_23DCE1760();
  v93 = (uint64_t)v133;
  if (v92 > 3)
  {
    sub_23DCABE18();
    v104 = *(int *)(v103 + 48);
    v143 = (char *)*(int *)(v103 + 64);
    sub_23DC82858(v141, v93, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v105 = v132;
    sub_23DCE1700();
    v106 = sub_23DCE1904();
    v107 = (void (*)(char *, uint64_t))v135;
    ((void (*)(char *, uint64_t))v135)(v105, v65);
    v108 = v121;
    sub_23DCE1700();
    v109 = sub_23DCE1910();
    v107(v108, v65);
    v110 = v109 - 1;
    if (!__OFSUB__(v109, 1))
    {
      v100 = __OFSUB__(v110, v91);
      v111 = v110 - v91;
      if (!v100)
      {
        v100 = __OFADD__(v106, v111);
        v112 = v106 + v111;
        if (!v100)
        {
          *(_QWORD *)(v93 + v104) = v112;
          v113 = v132;
          sub_23DCE1700();
          v114 = sub_23DCE1910();
          ((void (*)(char *, uint64_t))v135)(v113, v65);
          *(_QWORD *)&v143[v93] = v114;
          v102 = v145;
          goto LABEL_26;
        }
        goto LABEL_34;
      }
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  sub_23DCA9714();
  v94 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
  v95 = objc_msgSend(v94, sel__rollingBaselineConfiguration);

  if (v95)
  {
    v96 = (char *)objc_msgSend(v95, sel_minimumSampleCount);

    sub_23DCABE18();
    v98 = *(int *)(v97 + 48);
    v99 = *(int *)(v97 + 64);
    sub_23DC82858(v141, v93, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v100 = __OFSUB__(v96, v91);
    v101 = &v96[-v91];
    v102 = v145;
    if (!v100)
    {
      *(_QWORD *)(v93 + v98) = v101;
      if (!__OFSUB__(v96, 1))
      {
        *(_QWORD *)(v93 + v99) = v96 - 1;
LABEL_26:
        v115 = v146;
        v116 = v147;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v140 + 104))(v93, *MEMORY[0x24BE40358], v65);
        sub_23DCE170C();
        swift_unknownObjectRelease();
        sub_23DC827C4(v141, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v144, v102);
        v86(v116, v120);
        goto LABEL_27;
      }
      goto LABEL_32;
    }
    goto LABEL_30;
  }
LABEL_35:
  __break(1u);
}

void sub_23DCB40A8(uint64_t a1)
{
  sub_23DC82800(a1, &qword_254325328, (uint64_t (*)(uint64_t))MEMORY[0x24BE40328], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DCB40C4(unint64_t a1)
{
  return sub_23DC8EBD8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_23DCB40D8(_QWORD *a1)
{
  return sub_23DC8EAC0(0, a1[2], 0, a1);
}

uint64_t sub_23DCB40EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  sub_23DC8FF80();
  v135 = v3;
  v129 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v126 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v136 = (uint64_t)&v121 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v133 = (uint64_t)&v121 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v132 = (uint64_t)&v121 - v10;
  v11 = a1[1];
  result = sub_23DCE2240();
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_138;
    if (v11)
      return sub_23DCB4ACC(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_146;
  v134 = a1;
  v123 = result;
  v130 = v1;
  if (v11 < 2)
  {
    v17 = (char *)MEMORY[0x24BEE4AF8];
    v128 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
    v122 = MEMORY[0x24BEE4AF8];
    if (v11 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      v113 = v17;
      if (v19 >= 2)
      {
        v114 = *v134;
        do
        {
          v115 = v19 - 2;
          if (v19 < 2)
            goto LABEL_133;
          if (!v114)
            goto LABEL_145;
          v116 = *(_QWORD *)&v113[16 * v115 + 32];
          v117 = *(_QWORD *)&v113[16 * v19 + 24];
          v118 = v130;
          sub_23DCB4D04(v114 + *(_QWORD *)(v129 + 72) * v116, v114 + *(_QWORD *)(v129 + 72) * *(_QWORD *)&v113[16 * v19 + 16], v114 + *(_QWORD *)(v129 + 72) * v117, v128);
          v130 = v118;
          if (v118)
            break;
          if (v117 < v116)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v113 = sub_23DCD24E4((uint64_t)v113);
          if (v115 >= *((_QWORD *)v113 + 2))
            goto LABEL_135;
          v119 = &v113[16 * v115 + 32];
          *(_QWORD *)v119 = v116;
          *((_QWORD *)v119 + 1) = v117;
          v120 = *((_QWORD *)v113 + 2);
          if (v19 > v120)
            goto LABEL_136;
          memmove(&v113[16 * v19 + 16], &v113[16 * v19 + 32], 16 * (v120 - v19));
          *((_QWORD *)v113 + 2) = v120 - 1;
          v19 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_23DCE1DF0();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v129 + 80);
    v122 = v15;
    v128 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    if (v18 + 1 >= v11)
    {
      ++v18;
      v22 = v134;
    }
    else
    {
      v22 = v134;
      v23 = *v134;
      v131 = v23;
      v24 = *(_QWORD *)(v129 + 72);
      v25 = v132;
      sub_23DC82858(v23 + v24 * v21, v132, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      v26 = v23 + v24 * v20;
      v27 = v133;
      sub_23DC82858(v26, v133, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      v28 = *(int *)(v135 + 48);
      v29 = *(double *)(v25 + v28);
      v30 = *(double *)(v27 + v28);
      sub_23DC827C4(v27, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      sub_23DC827C4(v25, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      v18 = v20 + 2;
      v137 = v24;
      if (v20 + 2 >= v11)
      {
        v39 = v24;
        if (v29 >= v30)
          goto LABEL_39;
      }
      else
      {
        v127 = v20;
        v124 = v17;
        v31 = v24 * v21;
        v32 = v131;
        v33 = v24 * v18;
        while (1)
        {
          v34 = v11;
          v35 = v18;
          v36 = v132;
          sub_23DC82858(v32 + v33, v132, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v37 = v133;
          sub_23DC82858(v32 + v31, v133, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v38 = *(double *)(v36 + *(int *)(v135 + 48)) >= *(double *)(v37 + *(int *)(v135 + 48));
          sub_23DC827C4(v37, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          sub_23DC827C4(v36, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          if (v29 < v30 == v38)
            break;
          ++v18;
          v39 = v137;
          v32 += v137;
          v11 = v34;
          if (v34 == v35 + 1)
          {
            v18 = v34;
            v22 = v134;
            v17 = v124;
            v20 = v127;
            if (v29 < v30)
              goto LABEL_26;
            goto LABEL_39;
          }
        }
        v22 = v134;
        v17 = v124;
        v20 = v127;
        v11 = v34;
        v39 = v137;
        if (v29 >= v30)
          goto LABEL_39;
      }
LABEL_26:
      if (v18 < v20)
        goto LABEL_139;
      if (v20 < v18)
      {
        v124 = v17;
        v125 = v11;
        v40 = 0;
        v41 = v39 * (v18 - 1);
        v42 = v18 * v39;
        v43 = v20;
        v127 = v20;
        v44 = v20 * v39;
        do
        {
          if (v43 != v18 + v40 - 1)
          {
            v45 = v131;
            if (!v131)
              goto LABEL_144;
            v46 = v131 + v44;
            sub_23DC87A14(v131 + v44, v126, (uint64_t (*)(_QWORD))sub_23DC8FF80);
            if (v44 < v41 || v46 >= v45 + v42)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v44 != v41)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_23DC87A14(v126, v45 + v41, (uint64_t (*)(_QWORD))sub_23DC8FF80);
            v22 = v134;
            v39 = v137;
          }
          ++v43;
          --v40;
          v41 -= v39;
          v42 -= v39;
          v44 += v39;
        }
        while (v43 < v18 + v40);
        v17 = v124;
        v11 = v125;
        v20 = v127;
      }
    }
LABEL_39:
    if (v18 >= v11)
      goto LABEL_56;
    if (__OFSUB__(v18, v20))
      goto LABEL_137;
    if (v18 - v20 >= v123)
      goto LABEL_56;
    if (__OFADD__(v20, v123))
      goto LABEL_140;
    v47 = v20 + v123 >= v11 ? v11 : v20 + v123;
    if (v47 < v20)
      break;
    if (v18 != v47)
    {
      v124 = v17;
      v125 = v47;
      v48 = *(_QWORD *)(v129 + 72);
      v137 = v48 * (v18 - 1);
      v131 = v48;
      v49 = v18 * v48;
      v127 = v20;
      do
      {
        v50 = 0;
        v51 = v20;
        do
        {
          v52 = *v22;
          v53 = v132;
          sub_23DC82858(v49 + v50 + *v22, v132, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v54 = v137 + v50 + v52;
          v55 = v133;
          sub_23DC82858(v54, v133, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v56 = *(int *)(v135 + 48);
          v57 = *(double *)(v53 + v56);
          v58 = *(double *)(v55 + v56);
          sub_23DC827C4(v55, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          sub_23DC827C4(v53, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          if (v57 >= v58)
            break;
          v59 = *v22;
          if (!*v22)
            goto LABEL_142;
          v60 = v59 + v137 + v50;
          sub_23DC87A14(v59 + v49 + v50, v136, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          swift_arrayInitWithTakeFrontToBack();
          sub_23DC87A14(v136, v60, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v50 -= v131;
          ++v51;
          v22 = v134;
        }
        while (v18 != v51);
        ++v18;
        v137 += v131;
        v49 += v131;
        v20 = v127;
      }
      while (v18 != v125);
      v18 = v125;
      v17 = v124;
    }
LABEL_56:
    if (v18 < v20)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v17 = sub_23DCD2218(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v62 = *((_QWORD *)v17 + 2);
    v61 = *((_QWORD *)v17 + 3);
    v19 = v62 + 1;
    if (v62 >= v61 >> 1)
      v17 = sub_23DCD2218((char *)(v61 > 1), v62 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v63 = v17 + 32;
    v64 = &v17[16 * v62 + 32];
    *(_QWORD *)v64 = v20;
    *((_QWORD *)v64 + 1) = v18;
    if (v62)
    {
      while (1)
      {
        v65 = v19 - 1;
        if (v19 >= 4)
        {
          v70 = &v63[16 * v19];
          v71 = *((_QWORD *)v70 - 8);
          v72 = *((_QWORD *)v70 - 7);
          v76 = __OFSUB__(v72, v71);
          v73 = v72 - v71;
          if (v76)
            goto LABEL_121;
          v75 = *((_QWORD *)v70 - 6);
          v74 = *((_QWORD *)v70 - 5);
          v76 = __OFSUB__(v74, v75);
          v68 = v74 - v75;
          v69 = v76;
          if (v76)
            goto LABEL_122;
          v77 = v19 - 2;
          v78 = &v63[16 * v19 - 32];
          v80 = *(_QWORD *)v78;
          v79 = *((_QWORD *)v78 + 1);
          v76 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          if (v76)
            goto LABEL_124;
          v76 = __OFADD__(v68, v81);
          v82 = v68 + v81;
          if (v76)
            goto LABEL_127;
          if (v82 >= v73)
          {
            v100 = &v63[16 * v65];
            v102 = *(_QWORD *)v100;
            v101 = *((_QWORD *)v100 + 1);
            v76 = __OFSUB__(v101, v102);
            v103 = v101 - v102;
            if (v76)
              goto LABEL_131;
            v93 = v68 < v103;
            goto LABEL_93;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v94 = *((_QWORD *)v17 + 4);
            v95 = *((_QWORD *)v17 + 5);
            v76 = __OFSUB__(v95, v94);
            v87 = v95 - v94;
            v88 = v76;
            goto LABEL_87;
          }
          v67 = *((_QWORD *)v17 + 4);
          v66 = *((_QWORD *)v17 + 5);
          v76 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          v69 = v76;
        }
        if ((v69 & 1) != 0)
          goto LABEL_123;
        v77 = v19 - 2;
        v83 = &v63[16 * v19 - 32];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v86 = __OFSUB__(v84, v85);
        v87 = v84 - v85;
        v88 = v86;
        if (v86)
          goto LABEL_126;
        v89 = &v63[16 * v65];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v76 = __OFSUB__(v90, v91);
        v92 = v90 - v91;
        if (v76)
          goto LABEL_129;
        if (__OFADD__(v87, v92))
          goto LABEL_130;
        if (v87 + v92 >= v68)
        {
          v93 = v68 < v92;
LABEL_93:
          if (v93)
            v65 = v77;
          goto LABEL_95;
        }
LABEL_87:
        if ((v88 & 1) != 0)
          goto LABEL_125;
        v96 = &v63[16 * v65];
        v98 = *(_QWORD *)v96;
        v97 = *((_QWORD *)v96 + 1);
        v76 = __OFSUB__(v97, v98);
        v99 = v97 - v98;
        if (v76)
          goto LABEL_128;
        if (v99 < v87)
          goto LABEL_14;
LABEL_95:
        v104 = v18;
        v105 = v65 - 1;
        if (v65 - 1 >= v19)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v134)
          goto LABEL_143;
        v106 = v17;
        v107 = &v63[16 * v105];
        v108 = *(_QWORD *)v107;
        v109 = &v63[16 * v65];
        v110 = *((_QWORD *)v109 + 1);
        v111 = v130;
        sub_23DCB4D04(*v134 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v107, *v134 + *(_QWORD *)(v129 + 72) * *(_QWORD *)v109, *v134 + *(_QWORD *)(v129 + 72) * v110, v128);
        v130 = v111;
        if (v111)
          goto LABEL_115;
        if (v110 < v108)
          goto LABEL_118;
        if (v65 > *((_QWORD *)v106 + 2))
          goto LABEL_119;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v63[16 * v105 + 8] = v110;
        v112 = *((_QWORD *)v106 + 2);
        if (v65 >= v112)
          goto LABEL_120;
        v17 = v106;
        v19 = v112 - 1;
        memmove(&v63[16 * v65], v109 + 16, 16 * (v112 - 1 - v65));
        *((_QWORD *)v106 + 2) = v112 - 1;
        v93 = v112 > 2;
        v18 = v104;
        if (!v93)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = v134[1];
    if (v18 >= v11)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23DCE21B0();
  __break(1u);
  return result;
}

uint64_t sub_23DCB4ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a1;
  sub_23DC8FF80();
  v33 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v30 = (uint64_t)&v27 - v11;
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v27 - v14;
  v32 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v36 = v16 * (v32 - 1);
    v31 = v16;
    v35 = v16 * v32;
LABEL_5:
    v17 = 0;
    v18 = v29;
    while (1)
    {
      v19 = *a4;
      sub_23DC82858(v35 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      v20 = v36 + v17 + v19;
      v21 = v30;
      sub_23DC82858(v20, v30, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      v22 = *(int *)(v33 + 48);
      v23 = *(double *)&v15[v22];
      v24 = *(double *)(v21 + v22);
      sub_23DC827C4(v21, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      result = sub_23DC827C4((uint64_t)v15, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      if (v23 >= v24)
      {
LABEL_4:
        v36 += v31;
        v35 += v31;
        if (++v32 == v28)
          return result;
        goto LABEL_5;
      }
      v25 = *a4;
      if (!*a4)
        break;
      v26 = v25 + v36 + v17;
      sub_23DC87A14(v25 + v35 + v17, v34, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23DC87A14(v34, v26, (uint64_t (*)(_QWORD))sub_23DC8FF80);
      v17 -= v31;
      if (v32 == ++v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23DCB4D04(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  double v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v28;
  unint64_t v30;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;

  sub_23DC8FF80();
  v43 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v41 - v12;
  v15 = *(_QWORD *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1)
    goto LABEL_70;
  v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1)
    goto LABEL_71;
  v17 = (uint64_t)(a2 - a1) / v15;
  v46 = a1;
  v45 = a4;
  v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = a4 + v20;
      v44 = a4 + v20;
      v46 = a2;
      v42 = a1;
      if (v20 >= 1 && a1 < a2)
      {
        v32 = -v15;
        do
        {
          v33 = a3 + v32;
          sub_23DC82858(v30 + v32, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v34 = a2 + v32;
          sub_23DC82858(a2 + v32, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          v35 = *(int *)(v43 + 48);
          v36 = *(double *)&v13[v35];
          v37 = *(double *)&v11[v35];
          sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          sub_23DC827C4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DC8FF80);
          if (v36 >= v37)
          {
            v38 = v44;
            v44 += v32;
            if (a3 < v38 || v33 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v38)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v34 = a2;
          }
          else
          {
            if (a3 < a2 || v33 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v46 += v32;
          }
          v30 = v44;
          if (v44 <= a4)
            break;
          a2 = v34;
          a3 += v32;
        }
        while (v34 > v42);
      }
      goto LABEL_68;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v19;
    v44 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      do
      {
        sub_23DC82858(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DC8FF80);
        sub_23DC82858(a4, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8FF80);
        v22 = *(int *)(v43 + 48);
        v23 = *(double *)&v13[v22];
        v24 = *(double *)&v11[v22];
        sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DC8FF80);
        sub_23DC827C4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DC8FF80);
        v25 = v46;
        if (v23 >= v24)
        {
          v28 = v45 + v15;
          if (v46 < v45 || v46 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 != v45)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v45 = v28;
          v26 = a2;
        }
        else
        {
          v26 = a2 + v15;
          if (v46 < a2 || v46 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 == a2)
          {
            v25 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v46 = v25 + v15;
        a4 = v45;
        if (v45 >= v42)
          break;
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_68:
    sub_23DCD2324(&v46, &v45, (uint64_t *)&v44);
    return 1;
  }
LABEL_72:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DCB5180()
{
  return sub_23DCE1850();
}

uint64_t sub_23DCB51A0(uint64_t a1)
{
  uint64_t v1;

  return j__swift_getAtKeyPath(a1, v1);
}

uint64_t sub_23DCB51A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = *(_QWORD *)(a4(0) - 8);
  v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy();
  if (!v9)
    goto LABEL_22;
  v19 = *(_QWORD *)(v6 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_28;
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v22 = *(_QWORD *)(v6 + 16);
    v23 = __OFADD__(v22, v10);
    v24 = v22 - v9;
    if (!v23)
    {
      *(_QWORD *)(v6 + 16) = v24;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

void sub_23DCB5358(uint64_t a1)
{
  sub_23DC82800(a1, &qword_2543256D0, (uint64_t (*)(uint64_t))sub_23DCA8F2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23DCB5374(uint64_t a1)
{
  sub_23DC82800(a1, &qword_254325300, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FED0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23DCB5390()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325698)
  {
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325698);
  }
}

void sub_23DCB53E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543256A0)
  {
    sub_23DC8FF80();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543256A0);
  }
}

void sub_23DCB544C(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_2543256A8, (uint64_t (*)(uint64_t))sub_23DCB53E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

void sub_23DCB5468(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23DCAB9CC(*(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23DCB5484(uint64_t a1)
{
  swift_unknownObjectRelease();
  return a1;
}

void sub_23DCB54AC(uint64_t a1)
{
  sub_23DC82800(a1, &qword_254325600, (uint64_t (*)(uint64_t))sub_23DC8FF80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DCB54C8(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

char *sub_23DCB54F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD, _QWORD);
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  id v50;
  void *v51;
  char *v52;
  uint64_t *v53;
  char *v54;
  void (*v55)(char *, uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  _QWORD v59[2];
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  void (*v65)(_QWORD, _QWORD);
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;

  v73 = a3;
  v5 = sub_23DCE1640();
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC8799C();
  v59[1] = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v65 = (void (*)(_QWORD, _QWORD))((char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)v59 - v10;
  v11 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v11);
  v75 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE11E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v62 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23DCE1C64();
  v61 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v60 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v63 = (char *)v59 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v74 = (char *)v59 - v21;
  v22 = sub_23DCE1400();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)v59 - v27;
  v29 = a1;
  sub_23DCE15EC();
  type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(0);
  v30 = swift_allocObject();
  v66 = v29;
  *(_QWORD *)(v30 + 16) = v29;
  v31 = v64;
  v67 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v30 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange, v28, v22);
  v68 = v14;
  v69 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v62, v73, v13);
  v32 = a2;
  sub_23DCE15EC();
  sub_23DCE13F4();
  v33 = *(void (**)(char *, uint64_t))(v23 + 8);
  v33(v28, v22);
  v34 = v74;
  v35 = v61;
  sub_23DCE1C1C();
  sub_23DCE15EC();
  sub_23DCE13D0();
  v33(v26, v22);
  v36 = v63;
  sub_23DC8E674();
  LOBYTE(a2) = sub_23DCE1CC4();
  v37 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v75 = (char *)v16;
  v37(v36, v34, v16);
  v38 = (uint64_t)v31;
  v39 = (uint64_t)v31;
  v40 = v65;
  sub_23DC82858(v39, (uint64_t)v65, (uint64_t (*)(_QWORD))sub_23DC8799C);
  if ((a2 & 1) != 0)
    v41 = sub_23DCE1CD0();
  else
    v41 = 0;
  sub_23DC827C4((uint64_t)v40, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v65 = *(void (**)(_QWORD, _QWORD))(v35 + 8);
  v65(v36, v75);
  sub_23DC827C4(v38, (uint64_t (*)(_QWORD))sub_23DC8799C);
  v43 = v70;
  v42 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v72, v32, v71);
  type metadata accessor for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider();
  v44 = swift_allocObject();
  v45 = 0;
  *(_OWORD *)(v44 + 24) = xmmword_23DCE4200;
  v46 = v35;
  v47 = v66;
  *(_QWORD *)(v44 + 16) = v66;
  if ((v41 & 1) != 0)
  {
    v48 = v60;
    v49 = v75;
    v37(v60, v74, (uint64_t)v75);
    type metadata accessor for OutlierContextProvider();
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v47;
    (*(void (**)(uint64_t, char *, char *))(v46 + 32))(v45 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay, v48, v49);
    v50 = v47;
  }
  sub_23DC8F138(0, (unint64_t *)&qword_254324920, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_23DC8E5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleBaselineComparisonEnumerator);
  v51 = v47;
  v52 = (char *)swift_allocObject();
  *((_QWORD *)v52 + 2) = v67;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v52[*(_QWORD *)(*(_QWORD *)v52 + 104)], v72, v42);
  v53 = (uint64_t *)&v52[*(_QWORD *)(*(_QWORD *)v52 + 112)];
  *v53 = v44;
  v53[1] = (uint64_t)&off_250E95D58;
  *(_QWORD *)&v52[*(_QWORD *)(*(_QWORD *)v52 + 120)] = v45;
  v54 = &v52[*(_QWORD *)(*(_QWORD *)v52 + 104)];
  swift_beginAccess();
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 24);
  v56 = v51;
  swift_retain();
  swift_retain();
  v55(v54, v32, v42);
  swift_endAccess();
  v57 = v73;
  sub_23DCA03E0(v32, v73);
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v57, v69);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v32, v42);
  v65(v74, v75);
  return v52;
}

uint64_t type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult);
}

void sub_23DCB5A94(uint64_t a1)
{
  sub_23DC82800(a1, &qword_254325320, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DCB5AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC87B34(0, (unint64_t *)&unk_254325880, (void (*)(uint64_t))MEMORY[0x24BE40328]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepingSampleBaselineComparisonEnumerator.Iterator);
}

void sub_23DCB5B14(uint64_t a1)
{
  sub_23DC82800(a1, (unint64_t *)&unk_256CF9670, (uint64_t (*)(uint64_t))MEMORY[0x24BE402C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

uint64_t sub_23DCB5B30()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23DCB5B38()
{
  unint64_t v0;

  sub_23DC87B34(319, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

_BYTE *sub_23DCB5B9C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (_BYTE *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = *(void **)a2;
        v12 = a2[8];
        v13 = v11;
        *(_QWORD *)a1 = v11;
        a1[8] = v12;
      }
      else
      {
        v14 = sub_23DCE15C8();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
    }
  }
  return a1;
}

void sub_23DCB5CD0(id *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {

    }
    else
    {
      v3 = sub_23DCE15C8();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    }
  }
}

_BYTE *sub_23DCB5D70(_BYTE *a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = *a2;
      v10 = *((_BYTE *)a2 + 8);
      v11 = v9;
      *(_QWORD *)a1 = v9;
      a1[8] = v10;
    }
    else
    {
      v12 = sub_23DCE15C8();
      (*(void (**)(_BYTE *, void **, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

_BYTE *sub_23DCB5E80(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  void *v12;
  char v13;
  id v14;
  void *v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v20;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (v10)
  {
    if (!v11)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = *(void **)a2;
        v13 = a2[8];
        v14 = v12;
        *(_QWORD *)a1 = v12;
        a1[8] = v13;
      }
      else
      {
        v18 = sub_23DCE15C8();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v11)
  {
    sub_23DC8FE44((uint64_t)a1, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DC8FE44((uint64_t)a1, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = *(void **)a2;
      v16 = a2[8];
      v17 = v15;
      *(_QWORD *)a1 = v15;
      a1[8] = v16;
    }
    else
    {
      v20 = sub_23DCE15C8();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23DCB6064(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(v8 + 64));
    }
    else
    {
      v9 = sub_23DCE15C8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_23DCB6158(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 2, v6);
  v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      if (a1 == a2)
        return a1;
      sub_23DC8FE44((uint64_t)a1, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      if (!swift_getEnumCaseMultiPayload())
      {
        v15 = sub_23DCE15C8();
        (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v12 = *(_QWORD *)(v8 + 64);
      goto LABEL_8;
    }
    sub_23DC8FE44((uint64_t)a1, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    return a1;
  }
  if (v11)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v8 + 64));
  }
  else
  {
    v13 = sub_23DCE15C8();
    (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_23DCB62F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCB6300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_23DCB635C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCB6368(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23DCB63CC(uint64_t a1)
{
  uint64_t v2;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_23DCB6414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC87B34(0, (unint64_t *)&qword_254325860, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t sub_23DCB6464()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23DCB646C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23DCB6504(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 + ((v6 + 8) & (unint64_t)~v6) + 1 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ~v6;
    v13 = (char *)a1 + v6;
    v14 = (char *)a2 + v6;
    v15 = (unint64_t)(v13 + 8) & v12;
    v16 = (unint64_t)(v14 + 8) & v12;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v17(v15, v16, AssociatedTypeWitness);
    *(_BYTE *)(v15 + v7) = *(_BYTE *)(v16 + v7);
  }
  return a1;
}

uint64_t sub_23DCB65F0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_23DCB6654(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, AssociatedTypeWitness);
  *(_BYTE *)(v7 + *(_QWORD *)(v5 + 64)) = *(_BYTE *)(v8 + *(_QWORD *)(v5 + 64));
  return a1;
}

_QWORD *sub_23DCB6700(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  swift_retain();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v7, v8, AssociatedTypeWitness);
  *(_BYTE *)(v7 + *(_QWORD *)(v5 + 64)) = *(_BYTE *)(v8 + *(_QWORD *)(v5 + 64));
  return a1;
}

_QWORD *sub_23DCB67A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
  *(_BYTE *)(v7 + *(_QWORD *)(v5 + 64)) = *(_BYTE *)(v8 + *(_QWORD *)(v5 + 64));
  return a1;
}

_QWORD *sub_23DCB6834(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v7, v8, AssociatedTypeWitness);
  *(_BYTE *)(v7 + *(_QWORD *)(v5 + 64)) = *(_BYTE *)(v8 + *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t sub_23DCB68D0(_QWORD *a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (a2 <= v6)
    goto LABEL_24;
  v8 = *(_QWORD *)(v4 + 64) + ((v7 + 8) & ~v7) + 1;
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v12 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10)
        goto LABEL_24;
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(_WORD *)((char *)a1 + v8))
        goto LABEL_24;
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_24:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((_BYTE *)a1 + v8))
    goto LABEL_24;
LABEL_15:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v14 = v8;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  return v6 + v13 + 1;
}

void sub_23DCB6A60(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64)
     + ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + 1;
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if (*(_DWORD *)(v6 + 64) + ((*(unsigned __int8 *)(v6 + 80) + 8) & ~*(unsigned __int8 *)(v6 + 80)) != -1)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_23DCB6C80()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UITriggerObserver()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for UITriggerExecutor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for UITriggerExecutor()
{
  return swift_release();
}

_QWORD *assignWithCopy for UITriggerExecutor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for UITriggerExecutor(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UITriggerExecutor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UITriggerExecutor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UITriggerExecutor()
{
  return &type metadata for UITriggerExecutor;
}

uint64_t sub_23DCB6E00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = sub_23DCE1814();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23DCE1274();
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23DCE11E4();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23DCE122C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE182C();
  v14 = *(_QWORD *)(v13 - 8);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  if (a1)
  {
    v18 = result;
    sub_23DCE1220();
    v19 = sub_23DCE11F0();
    v23[0] = v20;
    v23[1] = v19;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_23DCE11CC();
    v22 = v24;
    v21 = v25;
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v5, *MEMORY[0x24BDCEF70], v25);
    sub_23DCE1280();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
    sub_23DCE1C1C();
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v27, *MEMORY[0x24BE40298], v28);
    sub_23DCE17CC();
    sub_23DC955AC((uint64_t)v17);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v18);
  }
  return result;
}

uint64_t sub_23DCB7098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_23DC8799C();
  v47 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v50 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v49 = (uint64_t)&v44 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v44 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v51 = (char *)&v44 - v8;
  v9 = sub_23DCE12E0();
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v44 - v13;
  v54 = sub_23DCE1400();
  v15 = *(_QWORD *)(v54 - 8);
  v16 = MEMORY[0x24BDAC7A8](v54);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v44 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v44 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v44 - v25;
  v55 = v0;
  v27 = sub_23DCE1604();
  if (v27 != sub_23DCE1604())
    goto LABEL_5;
  v45 = v21;
  v46 = v18;
  v28 = v51;
  sub_23DCE15EC();
  sub_23DCE13F4();
  v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30 = v54;
  v29(v26, v54);
  sub_23DCE15EC();
  sub_23DCE13F4();
  v29(v24, v30);
  v31 = MEMORY[0x242640098](v14, v12);
  v32 = *(void (**)(char *, uint64_t))(v52 + 8);
  v33 = v12;
  v34 = v53;
  v32(v33, v53);
  v32(v14, v34);
  if ((v31 & 1) != 0)
  {
    v35 = v45;
    sub_23DCE15EC();
    v36 = (uint64_t)v28;
    sub_23DCE13D0();
    v29(v35, v30);
    v37 = v46;
    sub_23DCE15EC();
    v38 = (uint64_t)v48;
    sub_23DCE13D0();
    v29(v37, v30);
    sub_23DCE1C64();
    sub_23DC8E674();
    v39 = sub_23DCE1CD0();
    v40 = v49;
    sub_23DCB7400(v36, v49);
    v41 = v50;
    sub_23DCB7400(v38, v50);
    if ((v39 & 1) != 0)
      v42 = sub_23DCE1CC4();
    else
      v42 = 0;
    sub_23DCB7444(v41);
    sub_23DCB7444(v40);
    sub_23DCB7444(v38);
    sub_23DCB7444(v36);
  }
  else
  {
LABEL_5:
    v42 = 0;
  }
  return v42 & 1;
}

uint64_t sub_23DCB7400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC8799C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCB7444(uint64_t a1)
{
  uint64_t v2;

  sub_23DC8799C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of HealthBalanceProfileExtension.currentValueCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_23DCB7488(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  char v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  char v46;
  char v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  void *v59;
  objc_super v60;

  sub_23DCE1A6C();
  v3 = v1;
  v4 = a1;
  v5 = sub_23DCE1A60();
  v6 = objc_allocWithZone((Class)type metadata accessor for SleepingSampleChangeManager());
  v7 = sub_23DC9D074(v4, 0, 0, v5);
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache());
  v9 = sub_23DCB8890(v7, (uint64_t)sub_23DC975A8, 0, v8);
  v10 = OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_currentValueCache;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_currentValueCache] = v9;
  v11 = v4;
  v12 = objc_msgSend(v11, sel_daemon);
  v13 = v12;
  if (v12)
  {
    v14 = objc_msgSend(v12, sel_behavior);

    LOBYTE(v13) = objc_msgSend(v14, sel_isAppleWatch);
  }

  v15 = sub_23DCD9CA4((char)v13);
  v16 = *(void **)&v3[v10];
  v17 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceWidgetSchedulingManager());
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_widgetSchedulingManager] = sub_23DCB8608(v11, v15, v16, 0, 0, v17, 1.0);
  v18 = sub_23DC9CA50(v11);
  v19 = OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_sleepingSampleAnalysisFeatureAvailabilityManager;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_sleepingSampleAnalysisFeatureAvailabilityManager] = v18;
  sub_23DC802D0(0, &qword_254324C90);
  sub_23DCE1F1C();
  v20 = objc_allocWithZone(MEMORY[0x24BE40AD0]);
  v21 = v11;
  v22 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithCategory_domainName_profile_, 105, v22, v21);

  type metadata accessor for ImbalanceUserNotificationCoordinator();
  sub_23DC802D0(0, &qword_254324A50);
  v24 = v21;
  v25 = v23;
  v26 = (void *)sub_23DCE1FA0();
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v26, v24);

  v59 = v25;
  v28 = sub_23DC96894(v24, v25, v27);

  v29 = OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_imbalanceUserNotificationCoordinator;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_imbalanceUserNotificationCoordinator] = v28;
  v30 = v24;
  sub_23DC950F4();
  LOBYTE(v28) = v31;

  v32 = 0;
  if ((v28 & 1) != 0)
  {
    sub_23DCB8BAC(0);
    type metadata accessor for ImbalanceNotificationManagerHealthDelegate();
    v33 = *(void **)&v3[v10];
    v34 = *(void **)&v3[v19];
    v35 = v30;
    v36 = v59;
    v37 = v33;
    v38 = v34;
    v39 = sub_23DCE1A60();
    v40 = v29;
    v41 = *(void **)&v3[v29];
    v42 = v41;
    v43 = (uint64_t)v41;
    v29 = v40;
    v44 = sub_23DCB8490(v35, (uint64_t)v36, (uint64_t)v37, v38, v39, v43);
    v32 = sub_23DCB7910(v35, v44);
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_imbalanceNotificationManager] = v32;
  v45 = v30;
  sub_23DC950E8();
  v47 = v46;

  if ((v47 & 1) != 0)
  {
    v48 = v45;
    v49 = (void *)sub_23DCE1FA0();
    v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3918]), sel_initWithLoggingCategory_healthDataSource_, v49, v48);

    v51 = objc_allocWithZone((Class)type metadata accessor for AnalyticsDailyMultiEventManager());
    v52 = sub_23DCBFC18(v48, v50, 0, 0);
  }
  else
  {
    v52 = 0;
  }
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_analyticsDailyEventManager] = v52;
  v53 = *(void **)&v3[v29];
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = v53;
  type metadata accessor for UITriggerObserver();
  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = sub_23DCB8BA4;
  *(_QWORD *)(v55 + 24) = v54;
  *(_QWORD *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_uiTriggerObserver] = v55;
  v56 = v53;

  v60.receiver = v3;
  v60.super_class = (Class)type metadata accessor for ProductionProfileExtension();
  v57 = objc_msgSendSuper2(&v60, sel_init);

  return v57;
}

id sub_23DCB7910(void *a1, _QWORD *a2)
{
  objc_class *v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v4 = a1;
  sub_23DCE2354();
  v5 = objc_allocWithZone(MEMORY[0x24BE40B80]);
  v6 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithProfile_debugIdentifier_delegate_, v4, v6, 0);

  v8 = objc_allocWithZone(v2);
  v9 = sub_23DCB7C60(v7, a2);

  return v9;
}

void *sub_23DCB79CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  void *v7;
  id v8;

  v1 = sub_23DCE1D30();
  v3 = v2;
  if (v1 == sub_23DCE1D30() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v6 = sub_23DCE2270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_8:
    v7 = *(void **)(v0
                  + OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_sleepingSampleAnalysisFeatureAvailabilityManager);
    v8 = v7;
    return v7;
  }
  return 0;
}

id sub_23DCB7AEC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductionProfileExtension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProductionProfileExtension()
{
  return objc_opt_self();
}

id sub_23DCB7BC4()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_currentValueCache);
}

void sub_23DCB7BD4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_23DC802D0(0, &qword_256CF9D88);
  sub_23DCE1DC0();
  swift_retain();
  v4 = a2;
  v3();
  swift_release();
  swift_bridgeObjectRelease();

}

id sub_23DCB7C60(void *a1, _QWORD *a2)
{
  char *v2;
  objc_class *ObjectType;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id aBlock[6];
  objc_super v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[qword_256CFA4D0] = a1;
  *(_QWORD *)&v2[qword_256CFA4D8] = a2;
  v25.receiver = v2;
  v25.super_class = ObjectType;
  v6 = a1;
  swift_retain();
  v7 = objc_msgSendSuper2(&v25, sel_init);
  objc_msgSend(v6, sel_setDelegate_, v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23DCB8C2C;
  *(_QWORD *)(v9 + 24) = v8;
  v10 = (void *)a2[3];
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = sub_23DCB8C34;
  v11[3] = v9;
  aBlock[4] = sub_23DCB8C3C;
  aBlock[5] = v11;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23DCB7BD4;
  aBlock[3] = &block_descriptor_6;
  v12 = _Block_copy(aBlock);
  v13 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_beginReceivingEventsWithHandler_, v12);
  _Block_release(v12);
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_23DCB8C2C;
  *(_QWORD *)(v14 + 24) = v8;
  v15 = a2[9];
  v16 = (uint64_t *)(v15 + 16);
  v17 = (os_unfair_lock_s *)(v15 + 32);
  swift_retain();
  os_unfair_lock_lock(v17);
  sub_23DCDCD78(v16, (uint64_t)sub_23DCB8C68, v14);
  os_unfair_lock_unlock(v17);
  v18 = a2[5];
  v19 = swift_getObjectType();
  (*(void (**)(_QWORD *, _UNKNOWN **, _QWORD, uint64_t, uint64_t))(v18 + 8))(a2, &off_250E95EB8, 0, v19, v18);
  swift_release();
  aBlock[0] = 0;
  if (objc_msgSend(v13, sel_requestWorkWithPriority_error_, 2, aBlock))
  {
    v20 = aBlock[0];
    swift_release();

    swift_release();
  }
  else
  {
    v21 = aBlock[0];
    v22 = (void *)sub_23DCE1154();

    swift_willThrow();
    swift_release();

    swift_release();
  }
  return v7;
}

id sub_23DCB7F48(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, id);
  id v25;
  void *v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  void *v38;
  char *v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  id v46;
  uint64_t v47;
  id v48[2];

  v46 = a3;
  v48[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)sub_23DCE1B14();
  v8 = (_QWORD *)*(v7 - 1);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v41 - v12;
  sub_23DCE1AFC();
  swift_bridgeObjectRetain_n();
  v14 = sub_23DCE1B08();
  v15 = sub_23DCE1EEC();
  v16 = os_log_type_enabled(v14, v15);
  v44 = a4;
  if (v16)
  {
    v17 = swift_slowAlloc();
    v45 = v11;
    v18 = v17;
    v43 = (void *)swift_slowAlloc();
    v48[0] = v43;
    *(_DWORD *)v18 = 136446466;
    v19 = sub_23DCE2354();
    v47 = sub_23DCA47EC(v19, v20, (uint64_t *)v48);
    v42 = v8;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    swift_bridgeObjectRetain();
    v47 = sub_23DCA47EC(a1, a2, (uint64_t *)v48);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23DC7C000, v14, v15, "[%{public}s] Requesting work for %{public}s", (uint8_t *)v18, 0x16u);
    v21 = v43;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v21, -1, -1);
    v22 = v18;
    v11 = v45;
    MEMORY[0x24264179C](v22, -1, -1);

    v23 = (uint64_t (*)(char *, id))v42[1];
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v23 = (uint64_t (*)(char *, id))v8[1];
  }
  v23(v13, v7);
  v48[0] = 0;
  if (objc_msgSend(v46, sel_requestWorkWithPriority_error_, 2, v48))
    return v48[0];
  v46 = v48[0];
  v25 = v48[0];
  v26 = (void *)sub_23DCE1154();

  swift_willThrow();
  sub_23DCE1AFC();
  swift_bridgeObjectRetain();
  v27 = v26;
  swift_bridgeObjectRetain();
  v28 = v26;
  v29 = sub_23DCE1B08();
  v30 = sub_23DCE1ED4();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v45 = v11;
    v42 = (_QWORD *)v32;
    v43 = (void *)swift_slowAlloc();
    v48[0] = v43;
    *(_DWORD *)v31 = 136446722;
    v33 = sub_23DCE2354();
    v46 = v7;
    v47 = sub_23DCA47EC(v33, v34, (uint64_t *)v48);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    swift_bridgeObjectRetain();
    v47 = sub_23DCA47EC(a1, a2, (uint64_t *)v48);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 22) = 2114;
    v35 = v26;
    v36 = _swift_stdlib_bridgeErrorToNSError();
    v47 = v36;
    sub_23DCE1FD0();
    v37 = v42;
    *v42 = v36;

    _os_log_impl(&dword_23DC7C000, v29, v30, "[%{public}s] Failed to request work for %{public}s: %{public}@", (uint8_t *)v31, 0x20u);
    sub_23DC80CF8();
    swift_arrayDestroy();
    MEMORY[0x24264179C](v37, -1, -1);
    v38 = v43;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v38, -1, -1);
    MEMORY[0x24264179C](v31, -1, -1);

    v39 = v45;
    v40 = v46;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v39 = v11;
    v40 = v7;
  }
  return (id)v23(v39, v40);
}

_QWORD *sub_23DCB8490(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;

  swift_getMetatypeMetadata();
  v12 = a1;
  sub_23DCE2264();
  v13 = (id)HKCreateSerialDispatchQueue();
  swift_unknownObjectRelease();
  v14 = objc_allocWithZone(MEMORY[0x24BE40BB0]);
  v15 = (void *)sub_23DCE1D0C();
  v16 = objc_msgSend(v14, sel_initWithProfile_clientIdentifier_eventHandlerQueue_, v12, v15, v13);

  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureAvailabilityProviding_healthDataSource_currentCountryCode_, a4, v12, 0);
  v18 = (_QWORD *)swift_allocObject();
  sub_23DC973DC();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = 0;
  *(_DWORD *)(v19 + 32) = 0;
  v18[2] = a2;
  v18[3] = v16;
  v18[4] = a3;
  v18[5] = &protocol witness table for SleepingSampleDaySummaryCurrentValueCache;
  v18[6] = v17;
  v18[7] = a5;
  v18[8] = a6;
  v18[9] = v19;
  return v18;
}

char *sub_23DCB8608(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6, double a7)
{
  objc_class *ObjectType;
  char *v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  _QWORD aBlock[6];
  objc_super v30;
  _QWORD v31[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v31[3] = &type metadata for BalanceWidgetTimelineReloader;
  v31[4] = &off_250E95698;
  v31[0] = a2;
  *(_QWORD *)&a6[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation] = 0;
  sub_23DC87830((uint64_t)v31, (uint64_t)&a6[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader]);
  v15 = &a6[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_changeProvider];
  *(_QWORD *)v15 = a3;
  *((_QWORD *)v15 + 1) = &protocol witness table for SleepingSampleDaySummaryCurrentValueCache;
  v16 = a6;
  v17 = a3;
  v18 = (void *)sub_23DCE1D0C();
  v19 = (id)HKCreateSerialDispatchQueue();

  *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue] = v19;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadReasons] = MEMORY[0x24BEE4B08];
  v20 = (uint64_t *)&v16[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_didBecomeReady];
  *v20 = a4;
  v20[1] = a5;
  sub_23DC973A8(a4);

  v30.receiver = v16;
  v30.super_class = ObjectType;
  v21 = (char *)objc_msgSendSuper2(&v30, sel_init);
  objc_msgSend(a1, sel_registerProfileReadyObserver_queue_, v21, 0);
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue];
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = objc_allocWithZone(MEMORY[0x24BDD41D0]);
  aBlock[4] = sub_23DCB8C94;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23DCC6E74;
  aBlock[3] = &block_descriptor_19;
  v25 = _Block_copy(aBlock);
  swift_retain();
  v26 = objc_msgSend(v24, sel_initWithMode_clock_queue_delay_block_, 1, 1, v22, v25, a7);
  _Block_release(v25);

  swift_release();
  sub_23DC97390(a4);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  swift_release();
  v27 = *(void **)&v21[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation];
  *(_QWORD *)&v21[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation] = v26;

  return v21;
}

id sub_23DCB8890(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  objc_super v31;

  ObjectType = (objc_class *)swift_getObjectType();
  v9 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state;
  v13 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  v14 = a4;
  sub_23DCE1220();
  sub_23DC9BC94();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + ((*(unsigned int *)(*(_QWORD *)v15 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_23DCB8C9C((uint64_t)v11, v15 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v15 + 16));
  sub_23DCB8CE0((uint64_t)v11);
  *(_QWORD *)&a4[v12] = v15;
  v16 = &v14[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_changeDetector];
  *(_QWORD *)v16 = a1;
  *((_QWORD *)v16 + 1) = &off_250E94B38;
  v17 = &v14[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_gregorianCalendarProvider];
  *(_QWORD *)v17 = a2;
  *((_QWORD *)v17 + 1) = a3;
  v18 = a1;
  swift_retain();
  sub_23DCE2354();
  sub_23DC802D0(0, &qword_254324A50);
  v19 = (void *)sub_23DCE1FA0();
  sub_23DC82800(0, &qword_2543247B0, (uint64_t (*)(uint64_t))sub_23DC9BCF8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObserverSet);
  v20 = swift_allocObject();
  v21 = objc_allocWithZone(MEMORY[0x24BDD3DD0]);
  v22 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithName_loggingCategory_, v22, v19);

  *(_QWORD *)(v20 + 16) = v23;
  *(_QWORD *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers] = v20;

  v31.receiver = v14;
  v31.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v31, sel_init);
  v25 = (void *)objc_opt_self();
  v26 = v24;
  v27 = objc_msgSend(v25, sel_sharedDiagnosticManager);
  objc_msgSend(v27, sel_addObject_, v26);

  v28 = *(void **)(*(_QWORD *)&v18[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers] + 16);
  v29 = v26;
  objc_msgSend(v28, sel_registerObserver_queue_, v29, 0);

  swift_release();
  return v29;
}

uint64_t sub_23DCB8B80()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23DCB8BA4()
{
  uint64_t v0;

  return sub_23DCB6E00(*(_QWORD *)(v0 + 16));
}

void sub_23DCB8BAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_256CF9D80)
  {
    v2 = type metadata accessor for ImbalanceNotificationManagerHealthDelegate();
    v4 = type metadata accessor for ImbalanceNotificationManager(a1, v2, (uint64_t)&off_250E95ED0, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_256CF9D80);
  }
}

uint64_t sub_23DCB8C08()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23DCB8C2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23DCB7F48(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23DCB8C34()
{
  uint64_t v0;

  return sub_23DCDE058(*(uint64_t (**)(uint64_t, unint64_t))(v0 + 16));
}

void sub_23DCB8C3C(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23DCDC37C(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_23DCB8C44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DCB8C68()
{
  uint64_t v0;

  return sub_23DCDE09C(*(uint64_t (**)(uint64_t, unint64_t))(v0 + 16));
}

uint64_t sub_23DCB8C70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_23DCB8C94()
{
  uint64_t v0;

  sub_23DCABE84(v0);
}

uint64_t sub_23DCB8C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCB8CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DCB8D2C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23DCD26D0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_23DCB95B4(v5);
  *a1 = v2;
  return result;
}

unint64_t BalanceWidgetReloadReason.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000018;
  if (*v0 != 1)
    v1 = 0xD00000000000001ALL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000010;
}

BOOL static BalanceWidgetReloadReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BalanceWidgetReloadReason.hash(into:)()
{
  return sub_23DCE22E8();
}

uint64_t BalanceWidgetReloadReason.hashValue.getter()
{
  sub_23DCE22DC();
  sub_23DCE22E8();
  return sub_23DCE22F4();
}

unint64_t sub_23DCB8E7C()
{
  unint64_t result;

  result = qword_254324728[0];
  if (!qword_254324728[0])
  {
    result = MEMORY[0x2426416D0](&protocol conformance descriptor for BalanceWidgetReloadReason, &type metadata for BalanceWidgetReloadReason);
    atomic_store(result, qword_254324728);
  }
  return result;
}

uint64_t dispatch thunk of BalanceWidgetReloader.reloadWidgets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t getEnumTagSinglePayload for BalanceWidgetReloadReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BalanceWidgetReloadReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23DCB8FA4 + 4 * byte_23DCE44A5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23DCB8FD8 + 4 * byte_23DCE44A0[v4]))();
}

uint64_t sub_23DCB8FD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DCB8FE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DCB8FE8);
  return result;
}

uint64_t sub_23DCB8FF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DCB8FFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23DCB9000(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DCB9008(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BalanceWidgetReloadReason()
{
  return &type metadata for BalanceWidgetReloadReason;
}

ValueMetadata *type metadata accessor for BalanceWidgetTimelineReloader()
{
  return &type metadata for BalanceWidgetTimelineReloader;
}

uint64_t sub_23DCB9034(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_23DCE1B14();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCBA000();
  v9 = v8;
  sub_23DCE1AFC();
  swift_bridgeObjectRetain();
  v10 = sub_23DCE1B08();
  v11 = sub_23DCE1EEC();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v25 = v4;
    v13 = v12;
    v14 = swift_slowAlloc();
    v27 = v14;
    *(_DWORD *)v13 = 136446466;
    v23 = v7;
    v26 = sub_23DCA47EC(0xD00000000000001DLL, 0x800000023DCE4570, &v27);
    v24 = v3;
    sub_23DCE1FD0();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    v26 = sub_23DCA47EC(v23, v9, &v27);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23DC7C000, v10, v11, "[%{public}s] reloading widgets with reason: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v14, -1, -1);
    MEMORY[0x24264179C](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (!(a2 >> 62))
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v15)
      goto LABEL_6;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_23DCE21D4();
  v15 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_6:
  if (v15 >= 1)
  {
    v17 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v18 = (id)MEMORY[0x242640EF0](v17, a2);
      else
        v18 = *(id *)(a2 + 8 * v17 + 32);
      v19 = v18;
      ++v17;
      sub_23DCBA000();
      v20 = (void *)sub_23DCE1D0C();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend(v19, sel_reloadTimelineWithReason_, v20);

    }
    while (v15 != v17);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_23DCB9330(uint64_t a1)
{
  unint64_t *v1;

  return sub_23DCB9034(a1, *v1);
}

uint64_t sub_23DCB9338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_23DCBA28C(0, &qword_2543244E8, (uint64_t)&type metadata for BalanceWidgetReloadReason, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_23DCB9420(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_23DC87874();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_23DCB9420(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_23DCB95B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_23DCE2240();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_23DCB9C9C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_23DCB9D68((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_23DCD24E4((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_23DCE1DF0();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_23DCE2270();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_23DCE2270()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23DCD2218(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_23DCD2218((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_23DCB9D68((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_23DCE2270() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_23DCE21B0();
  __break(1u);
  return result;
}

uint64_t sub_23DCB9C9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_23DCE2270(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23DCB9D68(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_23DCE2270() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_23DCE2270() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_23DCD243C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

uint64_t sub_23DCBA000()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  int64_t v16;
  uint64_t v17[3];

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23DCB9338(v0);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v17[0] = MEMORY[0x24BEE4AF8];
    v15 = v1;
    v16 = v2;
    sub_23DC8F2E4(0, v2, 0);
    v3 = v1;
    v4 = v16;
    v5 = 0;
    v6 = v17[0];
    do
    {
      v7 = 0xD000000000000018;
      if (*(_BYTE *)(v3 + v5 + 32) == 1)
      {
        v8 = 0x800000023DCE64B0;
      }
      else
      {
        v7 = 0xD00000000000001ALL;
        v8 = 0x800000023DCE6490;
      }
      if (*(_BYTE *)(v3 + v5 + 32))
        v9 = v7;
      else
        v9 = 0xD000000000000010;
      if (*(_BYTE *)(v3 + v5 + 32))
        v10 = v8;
      else
        v10 = 0x800000023DCE64D0;
      v17[0] = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_23DC8F2E4(v11 > 1, v12 + 1, 1);
        v3 = v15;
        v4 = v16;
        v6 = v17[0];
      }
      ++v5;
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = v6 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
    }
    while (v4 != v5);
    swift_release();
  }
  else
  {
    swift_release();
    v6 = MEMORY[0x24BEE4AF8];
  }
  v17[0] = v6;
  swift_bridgeObjectRetain();
  sub_23DCB8D2C(v17);
  swift_bridgeObjectRelease();
  v17[0] = 0x2065636E616C6162;
  v17[1] = 0xE90000000000005BLL;
  sub_23DCBA28C(0, &qword_254324958, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_23DCBA22C();
  sub_23DCE1CAC();
  swift_release();
  sub_23DCE1D54();
  swift_bridgeObjectRelease();
  sub_23DCE1D54();
  return v17[0];
}

unint64_t sub_23DCBA22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254324960;
  if (!qword_254324960)
  {
    sub_23DCBA28C(255, &qword_254324958, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254324960);
  }
  return result;
}

void sub_23DCBA28C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_23DCBA2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  char v66;
  char v67;
  id v68;
  void *v69;
  id v70;
  _BOOL4 v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  char *v84;
  uint64_t v85;
  char v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  char v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t (*v103)(uint64_t);
  uint64_t v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  char *v114;
  void (*v115)(char *, uint64_t);
  char *v116;
  char *v117;
  char v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t (*v125)(uint64_t);
  void (*v126)(char *, uint64_t);
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  unsigned int v132;
  void (*v133)(char *, uint64_t, uint64_t);
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  v165 = a1;
  v162 = a2;
  v140 = sub_23DCE12E0();
  v145 = *(_QWORD *)(v140 - 8);
  MEMORY[0x24BDAC7A8](v140);
  v144 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_23DCE14E4();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v141 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v149 = (char *)&v128 - v6;
  v7 = sub_23DCE11E4();
  v154 = *(_QWORD *)(v7 - 8);
  v155 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v150 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_23DCE15C8();
  v160 = *(_QWORD *)(v151 - 8);
  v9 = MEMORY[0x24BDAC7A8](v151);
  v139 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v138 = (char *)&v128 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v146 = (char *)&v128 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v159 = (char *)&v128 - v15;
  v157 = sub_23DCE1748();
  v148 = *(_QWORD *)(v157 - 8);
  v16 = MEMORY[0x24BDAC7A8](v157);
  v152 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v156 = (char *)&v128 - v18;
  v161 = sub_23DCE179C();
  v147 = *(void (**)(char *, uint64_t))(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v158 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23DCE1550();
  v163 = *(_QWORD *)(v20 - 8);
  v164 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v128 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v128 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v128 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v128 - v33;
  v35 = sub_23DCE1C64();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v128 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = v2;
  sub_23DCE1514();
  sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_23DCE1FF4();
  v39 = v168;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  if (!v39)
  {
    v129 = v26;
    v130 = v29;
    v131 = v23;
    v136 = v32;
    v168 = MEMORY[0x24BEE4AF8];
    v44 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28];
    v45 = sub_23DC80074(&qword_254325308, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], MEMORY[0x24BE3FF38]);
    sub_23DC82800(0, &qword_254325670, v44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23DCBC0B8();
    v137 = v34;
    v135 = v45;
    sub_23DCE203C();
    v46 = v158;
    v47 = v165;
    sub_23DCE15BC();
    v48 = v156;
    sub_23DCE1754();
    v49 = (void (*)(char *, uint64_t))*((_QWORD *)v147 + 1);
    v49(v46, v161);
    v50 = *MEMORY[0x24BE401B0];
    v51 = v148;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v148 + 104);
    v53 = v152;
    v54 = v157;
    v52(v152, v50, v157);
    LOBYTE(v44) = sub_23DCE173C();
    v55 = *(void (**)(char *, uint64_t))(v51 + 8);
    v55(v53, v54);
    v55(v48, v54);
    v56 = v47;
    v57 = v151;
    v148 = *(_QWORD *)(v160 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v148)(v159, v56, v151);
    v147 = v49;
    v134 = v55;
    v133 = v52;
    v132 = v50;
    if ((v44 & 1) != 0)
    {
      v160 = *(_QWORD *)(v160 + 8);
      ((void (*)(char *, uint64_t))v160)(v159, v57);
      v58 = v154;
      v59 = v155;
      v60 = v136;
    }
    else
    {
      v61 = v53;
      v62 = v52;
      v63 = v159;
      sub_23DCE1574();
      v64 = v156;
      sub_23DCE1754();
      v49(v46, v161);
      v65 = v157;
      v62(v61, v50, v157);
      LOBYTE(v62) = sub_23DCE173C();
      v55(v61, v65);
      v55(v64, v65);
      v160 = *(_QWORD *)(v160 + 8);
      ((void (*)(char *, uint64_t))v160)(v63, v57);
      v58 = v154;
      v59 = v155;
      v60 = v136;
      if ((v62 & 1) == 0)
        goto LABEL_13;
    }
    v66 = sub_23DCBB198();
    if (v66 != 2)
    {
      v67 = v66;
      v68 = sub_23DCBB50C();
      if (v68)
      {
        v69 = v68;
        v70 = objc_msgSend(v68, sel_state);

        v71 = v70 == 0;
        if ((v67 & 1) == 0)
          goto LABEL_13;
      }
      else
      {
        v71 = 1;
        if ((v67 & 1) == 0)
          goto LABEL_13;
      }
      if (v71)
      {
        sub_23DCE1538();
        sub_23DC80074(&qword_256CF9D90, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], MEMORY[0x24BE3FF30]);
        v72 = v137;
        v73 = v164;
        sub_23DCE1D9C();
        v74 = *(void (**)(char *, uint64_t))(v163 + 8);
        v74(v72, v73);
        sub_23DCE1D9C();
        v168 = v166 | v167;
        sub_23DC80074(&qword_256CF9D98, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], MEMORY[0x24BE3FF40]);
        v60 = v136;
        sub_23DCE2348();
        v74(v60, v73);
      }
    }
LABEL_13:
    v75 = (uint64_t)v149;
    sub_23DCE19B8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v75, 1, v59) == 1)
    {
      sub_23DCBC118(v75);
      v41 = v162;
      v42 = v163;
      v43 = v164;
      v76 = v137;
LABEL_29:
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v41, v76, v43);
      v40 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, v40, 1, v43);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v150, v75, v59);
    sub_23DCE1538();
    v77 = v164;
    v78 = sub_23DCE200C();
    v42 = v163;
    v159 = *(char **)(v163 + 8);
    ((void (*)(char *, uint64_t))v159)(v60, v77);
    v79 = v161;
    if ((v78 & 1) != 0)
    {
LABEL_25:
      v117 = v158;
      sub_23DCE1508();
      v118 = sub_23DCE1718();
      v119 = v147;
      v147(v117, v79);
      v43 = v164;
      v120 = v79;
      v76 = v137;
      v121 = v150;
      if ((v118 & 1) != 0)
      {
        sub_23DCE15BC();
        v122 = v141;
        sub_23DCE1790();
        v119(v117, v120);
        v123 = (uint64_t)v144;
        sub_23DCE14C0();
        (*(void (**)(char *, uint64_t))(v142 + 8))(v122, v143);
        LOBYTE(v122) = sub_23DCBBBE4(v121, v123);
        (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v123, v140);
        if ((v122 & 1) != 0)
        {
          v124 = v136;
          sub_23DCE152C();
          v125 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28];
          sub_23DC80074(&qword_256CF9D90, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], MEMORY[0x24BE3FF30]);
          sub_23DCE1D9C();
          v126 = (void (*)(char *, uint64_t))v159;
          ((void (*)(char *, uint64_t))v159)(v76, v43);
          v121 = v150;
          sub_23DCE1D9C();
          v168 = v166 | v167;
          sub_23DC80074(&qword_256CF9D98, v125, MEMORY[0x24BE3FF40]);
          sub_23DCE2348();
          v126(v124, v43);
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v121, v155);
      v41 = v162;
      goto LABEL_29;
    }
    v80 = v158;
    v81 = v165;
    sub_23DCE15BC();
    v82 = v156;
    sub_23DCE1754();
    v83 = v147;
    v147(v80, v79);
    v84 = v152;
    v85 = v157;
    v133(v152, v132, v157);
    v86 = sub_23DCE173C();
    v87 = v134;
    v134(v84, v85);
    v87(v82, v85);
    v88 = v146;
    v89 = v81;
    v90 = v151;
    ((void (*)(char *, uint64_t, uint64_t))v148)(v146, v89, v151);
    if ((v86 & 1) != 0)
    {
      sub_23DCE1568();
      sub_23DCE1754();
      v83(v80, v79);
      v133(v84, *MEMORY[0x24BE401A8], v85);
      sub_23DC80074(&qword_256CF9DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BE401C0], MEMORY[0x24BE401E0]);
      v91 = sub_23DCE1D00();
      v92 = v134;
      v134(v84, v85);
      v92(v82, v85);
      v93 = (void (*)(char *, uint64_t))v160;
      ((void (*)(char *, uint64_t))v160)(v146, v90);
      v94 = v138;
      v95 = (void (*)(char *, uint64_t, uint64_t))v148;
      ((void (*)(char *, uint64_t, uint64_t))v148)(v138, v165, v90);
      v96 = v90;
      if ((v91 & 1) == 0)
      {
        v97 = v92;
        v98 = v158;
        sub_23DCE1574();
        sub_23DCE1754();
        v147(v98, v161);
        v99 = sub_23DCE1730();
        v93 = (void (*)(char *, uint64_t))v160;
        LOBYTE(v98) = v99;
        v92(v82, v85);
        v93(v94, v96);
        v100 = v139;
        v95(v139, v165, v96);
        if ((v98 & 1) == 0)
        {
          v101 = v158;
          sub_23DCE1508();
          sub_23DCE1754();
          v79 = v161;
          v147(v101, v161);
          LOBYTE(v101) = sub_23DCE1730();
          v97(v82, v85);
          v93(v100, v96);
          v102 = v136;
          if ((v101 & 1) == 0)
          {
            sub_23DCE1544();
            v103 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28];
            sub_23DC80074(&qword_256CF9D90, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], MEMORY[0x24BE3FF30]);
            v104 = v79;
            v105 = v137;
            v106 = v164;
            sub_23DCE1D9C();
            v107 = (void (*)(char *, uint64_t))v159;
            ((void (*)(char *, uint64_t))v159)(v105, v106);
            sub_23DCE1D9C();
            v168 = v166 | v167;
            sub_23DC80074(&qword_256CF9D98, v103, MEMORY[0x24BE3FF40]);
            sub_23DCE2348();
            v107(v102, v106);
            v108 = v158;
            sub_23DCE15BC();
            v109 = v141;
            sub_23DCE1790();
            v147(v108, v104);
            v110 = (uint64_t)v144;
            sub_23DCE14C0();
            (*(void (**)(char *, uint64_t))(v142 + 8))(v109, v143);
            LOBYTE(v109) = sub_23DCBB624(v150, v110);
            v111 = v131;
            v79 = v104;
            (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v110, v140);
            if ((v109 & 1) != 0)
            {
              sub_23DCE1544();
              v112 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
              v113 = v164;
              v112(v129, v137, v164);
              v112(v111, v102, v113);
              v114 = v130;
              sub_23DCE2024();
              v79 = v104;
              sub_23DCE2018();
              v115 = (void (*)(char *, uint64_t))v159;
              ((void (*)(char *, uint64_t))v159)(v114, v113);
              v115(v102, v113);
            }
          }
          goto LABEL_25;
        }
        goto LABEL_24;
      }
    }
    else
    {
      v116 = v88;
      v93 = (void (*)(char *, uint64_t))v160;
      ((void (*)(char *, uint64_t))v160)(v116, v90);
      v94 = v138;
      v95 = (void (*)(char *, uint64_t, uint64_t))v148;
      ((void (*)(char *, uint64_t, uint64_t))v148)(v138, v165, v90);
      v96 = v90;
    }
    v93(v94, v96);
    v100 = v139;
    v95(v139, v165, v96);
LABEL_24:
    v93(v100, v96);
    v79 = v161;
    goto LABEL_25;
  }
  v40 = 1;
  v41 = v162;
  v42 = v163;
  v43 = v164;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, v40, 1, v43);
}

uint64_t sub_23DCBB198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_23DCE1B14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(*(id *)(v0 + 16), sel_onboardingCompletionManager);
  v6 = *MEMORY[0x24BDD2E28];
  v29[0] = 0;
  v7 = objc_msgSend(v5, sel_onboardingCompletionsForHighestVersionOfFeatureIdentifier_error_, v6, v29);

  v8 = v29[0];
  if (v7)
  {
    sub_23DC802D0(0, &qword_256CF9DA8);
    v9 = sub_23DCE1DC0();
    v10 = v8;

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_23DCE21D4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    return v11 != 0;
  }
  else
  {
    v13 = v29[0];
    v14 = (void *)sub_23DCE1154();

    swift_willThrow();
    sub_23DCE1AFC();
    v15 = v14;
    v16 = v14;
    v17 = sub_23DCE1B08();
    v18 = sub_23DCE1ED4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v29[0] = v27;
      *(_DWORD *)v19 = 136446466;
      v20 = sub_23DCE2354();
      v28 = sub_23DCA47EC(v20, v21, (uint64_t *)v29);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2114;
      v22 = v14;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      v28 = v23;
      sub_23DCE1FD0();
      v24 = v26;
      *v26 = v23;

      _os_log_impl(&dword_23DC7C000, v17, v18, "[%{public}s] Error reading onboarding completions: %{public}@", (uint8_t *)v19, 0x16u);
      sub_23DC80CF8();
      swift_arrayDestroy();
      MEMORY[0x24264179C](v24, -1, -1);
      v25 = v27;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v25, -1, -1);
      MEMORY[0x24264179C](v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 2;
  }
}

id sub_23DCBB50C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  id v5;
  __int128 v6;
  __int128 v7;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_profileExtensionsConformingToProtocol_, &unk_256D02A70);
  v2 = sub_23DCE1DC0();

  if (!*(_QWORD *)(v2 + 16))
  {
    v6 = 0u;
    v7 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_23DC8535C(v2 + 32, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v7 + 1))
  {
LABEL_6:
    sub_23DC9505C((uint64_t)&v6);
    return 0;
  }
  sub_23DC853DC();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v3 = objc_msgSend(objc_msgSend(v5, sel_getPregnancyModelProvider), sel_getCurrentPregnancyModel);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3;
}

BOOL sub_23DCBB624(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  double v36;
  double v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;

  v50 = a2;
  v48 = a1;
  v39 = *v2;
  v3 = sub_23DCE1B14();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE14E4();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23DCE12E0();
  v7 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE1C64();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23DCE11E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = sub_23DCE1100();
  v44 = *(_QWORD *)(v18 - 8);
  v45 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v48;
  sub_23DCE1160();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
  sub_23DCE10D0();
  v22 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v49 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay, v9);
  v23 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v46, v50, v47);
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v24 = (id)*MEMORY[0x24BDD36E0];
  v25 = (void *)MEMORY[0x242640CE0](v24);
  v26 = *(void **)(v22 + 16);
  v27 = sub_23DC94638((uint64_t)v20, (uint64_t)v25, (uint64_t)v26);

  v28 = (void *)MEMORY[0x242640CE0](v24);
  v29 = v26;
  v30 = (uint64_t)v12;
  v31 = (uint64_t)v51;
  sub_23DC7FAA4(v30, v23, 2, 1, (uint64_t)v27, v28, v29, 1);
  sub_23DC7E940(v31);
  v32 = (void *)sub_23DCE14D8();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v31, v41);
  if (v32)
  {
    v33 = (void *)objc_opt_self();
    v34 = v32;
    v35 = objc_msgSend(v33, sel_appleEffortScoreUnit, v39);
    objc_msgSend(v34, sel_doubleValueForUnit_, v35);
    v37 = v36;

    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v45);
    return v37 <= 3.0;
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v45);
    return 0;
  }
}

BOOL sub_23DCBBBE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  BOOL v20;
  _QWORD v22[4];
  uint64_t v23;

  v23 = a2;
  v22[0] = *v2;
  v4 = sub_23DCE1B14();
  v22[1] = *(_QWORD *)(v4 - 8);
  v22[2] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v22[3] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE12E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23DCE11E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (void *)v2[2];
  (*(void (**)(char *, uint64_t))(v18 + 16))(v16, (uint64_t)v2 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v6);
  type metadata accessor for OxygenSaturationElevationContextProvider(0);
  swift_allocObject();
  v19 = v17;
  sub_23DCD26E4(v19, v16, (uint64_t)v13, (uint64_t)v9);

  v20 = sub_23DCCE63C();
  swift_release();
  return v20;
}

uint64_t sub_23DCBBFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay;
  v2 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_23DCBBFF8()
{
  return type metadata accessor for OutlierContextProvider();
}

uint64_t type metadata accessor for OutlierContextProvider()
{
  uint64_t result;

  result = qword_254325348;
  if (!qword_254325348)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DCBC03C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23DCE1C64();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_23DCBC0B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254325678;
  if (!qword_254325678)
  {
    sub_23DC82800(255, &qword_254325670, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FF28], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254325678);
  }
  return result;
}

uint64_t sub_23DCBC118(uint64_t a1)
{
  uint64_t v2;

  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23DCBC16C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  uint64_t *v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  char v29[40];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[3];
  __int128 v36[2];
  uint64_t v37;
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_23DCBF9BC();
    v2 = (_QWORD *)sub_23DCE21F8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v27)
    goto LABEL_32;
  v13 = *(_QWORD *)(v28 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v27)
          {
            v13 = *(_QWORD *)(v28 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v27)
                break;
              v13 = *(_QWORD *)(v28 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23DC87874();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    sub_23DC87830(*(_QWORD *)(a1 + 56) + 40 * v11, (uint64_t)v39);
    *(_QWORD *)&v38 = v18;
    *((_QWORD *)&v38 + 1) = v17;
    v35[2] = v38;
    v36[0] = v39[0];
    v36[1] = v39[1];
    v37 = v40;
    v30 = v18;
    v31 = v17;
    sub_23DC87714(v36, (uint64_t)v29);
    sub_23DC876C0();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v20 = v30;
    v19 = v31;
    sub_23DC947A0(&v32, v34);
    sub_23DC947A0(v34, v35);
    sub_23DC947A0(v35, &v33);
    result = sub_23DCD8A28(v20, v19);
    v21 = result;
    if ((v22 & 1) != 0)
    {
      v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v20;
      v8[1] = v19;
      v9 = (_OWORD *)(v2[7] + 32 * v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_23DC947A0(&v33, v9);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v23 = (uint64_t *)(v2[6] + 16 * result);
    *v23 = v20;
    v23[1] = v19;
    result = (unint64_t)sub_23DC947A0(&v33, (_OWORD *)(v2[7] + 32 * result));
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_23DCBC528(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, _OWORD *, _BYTE *))
{
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  void *v12;
  _BYTE __dst[440];
  _OWORD v15[3];
  _OWORD v16[2];

  v7 = a1 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_dataType;
  v8 = *(_OWORD *)(a1
                 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                 + 48);
  v15[2] = *(_OWORD *)(a1
                     + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                     + 32);
  v16[0] = v8;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)(a1
                                           + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                                           + 57);
  v9 = *(_OWORD *)(a1
                 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                 + 16);
  v15[0] = *(_OWORD *)(a1
                     + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment);
  v15[1] = v9;
  memcpy(__dst, (const void *)(a1 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_summaryAnalytics), sizeof(__dst));
  v10 = a3;
  swift_retain();
  v11 = a5(v7, v15, __dst);
  sub_23DCBC16C(v11);
  swift_release();

  swift_bridgeObjectRelease();
  v12 = (void *)sub_23DCE1C70();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23DCBC67C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_dataType;
  v2 = sub_23DCE146C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23DCBC6EC()
{
  return type metadata accessor for HealthBalanceAnalysisAnalyticsEvent();
}

uint64_t type metadata accessor for HealthBalanceAnalysisAnalyticsEvent()
{
  uint64_t result;

  result = qword_254325338;
  if (!qword_254325338)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23DCBC730()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23DCE146C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

double sub_23DCBC7B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23DCD8A28(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23DCBCF18();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_23DC87714((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_23DCBD31C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23DCBC8A8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  sub_23DCBFAB4();
  v37 = a2;
  v6 = sub_23DCE21EC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_23DC87714(v25, (uint64_t)v38);
    }
    else
    {
      sub_23DC87830((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_23DCE22DC();
    sub_23DCE1D48();
    result = sub_23DCE22F4();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_23DC87714(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23DCBCBC8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  int v41;

  v3 = v2;
  v5 = sub_23DCE1100();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_23DCBFB64();
  v41 = a2;
  v10 = sub_23DCE21EC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v21);
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 56) + v27 * v21;
    if ((v41 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v28, v5);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
      v29 = v26;
    }
    result = sub_23DCE1F7C();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      v19 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v26;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v27 * v19, v8, v5);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v41 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

void *sub_23DCBCF18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  sub_23DCBFAB4();
  v2 = *v0;
  v3 = sub_23DCE21E0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_23DC87830(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23DC87714(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23DCBD0FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23DCE1100();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCBFB64();
  v24 = v0;
  v5 = *v0;
  v6 = sub_23DCE21E0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_23DCBD31C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23DCE2048();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23DCE22DC();
        swift_bridgeObjectRetain();
        sub_23DCE1D48();
        v11 = sub_23DCE22F4();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_23DCBD504(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_23DCE2048();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_23DCE1F7C();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12)
            goto LABEL_6;
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        v15 = *(_QWORD *)(a2 + 48);
        v16 = (_QWORD *)(v15 + 8 * v3);
        v17 = (_QWORD *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1)
          *v16 = *v17;
        v18 = *(_QWORD *)(a2 + 56);
        v19 = *(_QWORD *)(*(_QWORD *)(sub_23DCE1100() - 8) + 72);
        v20 = v19 * v3;
        v21 = v18 + v19 * v3;
        v22 = v19 * v6;
        v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v20 == v22)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v26 = *v25;
    v27 = (-1 << v3) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_23DCBD6DC(char a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  LOBYTE(v28) = a1;
  v9 = MEMORY[0x24BEE1328];
  v29 = MEMORY[0x24BEE1328];
  v30 = MEMORY[0x24BEE1340];
  v10 = (_QWORD *)*a5;
  v12 = sub_23DCD8A28(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 40 * v12;
      __swift_destroy_boxed_opaque_existential_1(v19);
      return sub_23DC87714(&v28, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23DCBCF18();
    goto LABEL_7;
  }
  sub_23DCBC8A8(v15, a4 & 1);
  v21 = sub_23DCD8A28(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    result = sub_23DCE22A0();
    __break(1u);
    return result;
  }
  v12 = v21;
  v18 = (_QWORD *)*a5;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v9);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  sub_23DCBDE28(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DCBD880(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)&v28 = a1;
  v9 = MEMORY[0x24BEE1768];
  v29 = MEMORY[0x24BEE1768];
  v30 = MEMORY[0x24BEE1788];
  v10 = (_QWORD *)*a5;
  v12 = sub_23DCD8A28(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 40 * v12;
      __swift_destroy_boxed_opaque_existential_1(v19);
      return sub_23DC87714(&v28, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23DCBCF18();
    goto LABEL_7;
  }
  sub_23DCBC8A8(v15, a4 & 1);
  v21 = sub_23DCD8A28(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    result = sub_23DCE22A0();
    __break(1u);
    return result;
  }
  v12 = v21;
  v18 = (_QWORD *)*a5;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v9);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_23DCBDD98(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DCBDA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v10 = MEMORY[0x24BEE0D00];
  v30 = MEMORY[0x24BEE0D00];
  v31 = MEMORY[0x24BEE0D28];
  *(_QWORD *)&v29 = a1;
  *((_QWORD *)&v29 + 1) = a2;
  v11 = (_QWORD *)*a6;
  v13 = sub_23DCD8A28(a3, a4);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    v19 = (_QWORD *)*a6;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7] + 40 * v13;
      __swift_destroy_boxed_opaque_existential_1(v20);
      return sub_23DC87714(&v29, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_23DCBCF18();
    goto LABEL_7;
  }
  sub_23DCBC8A8(v16, a5 & 1);
  v22 = sub_23DCD8A28(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_23DCE22A0();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = (_QWORD *)*a6;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29, v10);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_23DCBDEB4(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DCBDBCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a6;
  v35 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  v15 = (_QWORD *)*a5;
  v17 = sub_23DCD8A28(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  v21 = v16;
  v22 = v15[3];
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    v23 = (_QWORD *)*a5;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 40 * v17;
      __swift_destroy_boxed_opaque_existential_1(v24);
      return sub_23DC87714(&v33, v24);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_23DCBCF18();
    goto LABEL_7;
  }
  sub_23DCBC8A8(v20, a4 & 1);
  v26 = sub_23DCD8A28(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_23DCE22A0();
    __break(1u);
    return result;
  }
  v17 = v26;
  v23 = (_QWORD *)*a5;
  if ((v21 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, v34);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_23DCBDF40(v17, a2, a3, (uint64_t)v30, v23, a6, a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23DCBDD98(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)&v11 = a4;
  v12 = MEMORY[0x24BEE1768];
  v13 = MEMORY[0x24BEE1788];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23DC87714(&v11, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23DCBDE28(unint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  LOBYTE(v11) = a4;
  v12 = MEMORY[0x24BEE1328];
  v13 = MEMORY[0x24BEE1340];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23DC87714(&v11, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23DCBDEB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = MEMORY[0x24BEE0D00];
  v14 = MEMORY[0x24BEE0D28];
  *(_QWORD *)&v12 = a4;
  *((_QWORD *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  v7 = (_QWORD *)(a6[6] + 16 * a1);
  *v7 = a2;
  v7[1] = a3;
  result = sub_23DC87714(&v12, a6[7] + 40 * a1);
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

uint64_t sub_23DCBDF40(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a6;
  v21 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v14 = (_QWORD *)(a5[6] + 16 * a1);
  *v14 = a2;
  v14[1] = a3;
  result = sub_23DC87714(&v19, a5[7] + 40 * a1);
  v16 = a5[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a5[2] = v18;
  return result;
}

uint64_t sub_23DCBDFF8(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t result;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  void (*v143)(char *, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  _BYTE v149[24];
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155[8];
  unint64_t v156;
  char v157;
  char v158;
  char v159;
  char v160;

  v6 = sub_23DCE146C();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v123 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v142 = (char *)&v122 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v146 = a3[1];
  v130 = a3[2];
  v129 = a3[3];
  v128 = a3[7];
  v127 = a3[11];
  v126 = a3[12];
  v125 = a3[13];
  v124 = a3[17];
  v134 = a3[21];
  v133 = a3[22];
  v132 = a3[23];
  v131 = a3[27];
  v138 = a3[31];
  v137 = a3[32];
  v136 = a3[33];
  v135 = a3[37];
  v139 = a3[41];
  v140 = a3[42];
  v147 = a3[43];
  v141 = a3[47];
  v154 = MEMORY[0x24BEE4B00];
  v144 = v11;
  v145 = a1;
  v143 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v143((char *)&v122 - v12, a1, v6);
  v13 = sub_23DCE1D3C();
  v14 = MEMORY[0x24BEE0D00];
  v15 = MEMORY[0x24BEE0D28];
  v152 = MEMORY[0x24BEE0D00];
  v153 = MEMORY[0x24BEE0D28];
  *(_QWORD *)&v151 = v13;
  *((_QWORD *)&v151 + 1) = v16;
  sub_23DC87714(&v151, (uint64_t)v149);
  v17 = v154;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v156 = v17;
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  sub_23DCBDA28(*v21, v21[1], 0x63697274656DLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native, &v156);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  v23 = v156;
  v154 = v156;
  swift_bridgeObjectRelease();
  v24 = a2[1];
  if (v24)
  {
    v25 = *a2;
    v152 = v14;
    v153 = v15;
    *(_QWORD *)&v151 = v25;
    *((_QWORD *)&v151 + 1) = v24;
    sub_23DC87714(&v151, (uint64_t)v149);
    swift_bridgeObjectRetain();
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v156 = v23;
    v154 = 0x8000000000000000;
    v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v27);
    v29 = (char *)&v122 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v29);
    sub_23DCBDBCC((uint64_t)v29, 0xD000000000000016, 0x800000023DCE5260, v26, &v156, v14, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v31 = v156;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23DCBC7B0(0xD000000000000016, 0x800000023DCE5260, (uint64_t)&v151);
    sub_23DCBFA24((uint64_t)&v151);
    v31 = v154;
  }
  v32 = MEMORY[0x24BEE1328];
  v33 = *((_BYTE *)a2 + 48);
  v34 = MEMORY[0x24BEE1340];
  v152 = MEMORY[0x24BEE1328];
  v153 = MEMORY[0x24BEE1340];
  LOBYTE(v151) = v33;
  sub_23DC87714(&v151, (uint64_t)v149);
  v35 = swift_isUniquelyReferenced_nonNull_native();
  v156 = v31;
  v36 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v122 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v39 + 16))(v38);
  sub_23DCBD6DC(*v38, 0xD000000000000021, 0x800000023DCE52B0, v35, &v156);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  v40 = v156;
  v154 = v156;
  swift_bridgeObjectRelease();
  sub_23DCBFB18((uint64_t)a2 + 49, (uint64_t)&v159, &qword_254325690);
  sub_23DCBFB18((uint64_t)&v159, (uint64_t)&v160, &qword_254325690);
  if (v160 == 2)
  {
    sub_23DCBC7B0(0xD00000000000001BLL, 0x800000023DCE53E0, (uint64_t)&v151);
    sub_23DCBFA24((uint64_t)&v151);
  }
  else
  {
    v152 = v32;
    v153 = v34;
    LOBYTE(v151) = v160;
    sub_23DC87714(&v151, (uint64_t)v149);
    v41 = swift_isUniquelyReferenced_nonNull_native();
    v156 = v40;
    v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v42);
    v44 = (char *)&v122 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v45 + 16))(v44);
    sub_23DCBDBCC((uint64_t)v44, 0xD00000000000001BLL, 0x800000023DCE53E0, v41, &v156, v32, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v154 = v156;
    swift_bridgeObjectRelease();
  }
  v46 = MEMORY[0x24BEE1768];
  sub_23DCBFB18((uint64_t)(a2 + 8), (uint64_t)v155, &qword_2543256B8);
  sub_23DCBFB18((uint64_t)v155, (uint64_t)&v156, &qword_2543256B8);
  v47 = MEMORY[0x24BEE1788];
  if ((v157 & 1) != 0)
  {
    sub_23DCBC7B0(0xD000000000000013, 0x800000023DCE5300, (uint64_t)&v151);
    sub_23DCBFA24((uint64_t)&v151);
    v48 = v154;
  }
  else
  {
    v152 = v46;
    v153 = MEMORY[0x24BEE1788];
    *(_QWORD *)&v151 = v156;
    sub_23DC87714(&v151, (uint64_t)v149);
    v49 = v154;
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v148 = v49;
    v154 = 0x8000000000000000;
    v51 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v51);
    v53 = (char *)&v122 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v54 + 16))(v53);
    sub_23DCBDBCC((uint64_t)v53, 0xD000000000000013, 0x800000023DCE5300, v50, &v148, v46, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v48 = v148;
    swift_bridgeObjectRelease();
  }
  v55 = v146;
  v56 = a2[7];
  v152 = v46;
  v153 = v47;
  *(_QWORD *)&v151 = v56;
  sub_23DC87714(&v151, (uint64_t)v149);
  v57 = swift_isUniquelyReferenced_nonNull_native();
  v148 = v48;
  v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
  MEMORY[0x24BDAC7A8](v58);
  v60 = (uint64_t *)((char *)&v122 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v61 + 16))(v60);
  sub_23DCBD880(*v60, 0xD00000000000001ALL, 0x800000023DCE54A0, v57, &v148);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  v62 = v148;
  swift_bridgeObjectRelease();
  v152 = v46;
  v153 = v47;
  *(_QWORD *)&v151 = v55;
  sub_23DC87714(&v151, (uint64_t)v149);
  v63 = swift_isUniquelyReferenced_nonNull_native();
  v148 = v62;
  v64 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
  MEMORY[0x24BDAC7A8](v64);
  v66 = (uint64_t *)((char *)&v122 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v67 + 16))(v66);
  sub_23DCBD880(*v66, 0xD00000000000001BLL, 0x800000023DCE6B20, v63, &v148);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  v154 = v148;
  swift_bridgeObjectRelease();
  v68 = v142;
  v69 = v145;
  v70 = v143;
  v143(v142, v145, v6);
  v71 = (*(uint64_t (**)(char *, uint64_t))(v144 + 88))(v68, v6);
  if (v71 == *MEMORY[0x24BE3FE10])
  {
    v72 = v46;
    v73 = v47;
    v55 = v139;
    LODWORD(v74) = v141;
    v75 = v140;
    goto LABEL_21;
  }
  if (v71 == *MEMORY[0x24BE3FDD0])
  {
    v72 = v46;
    v73 = v47;
    v55 = v138;
    v75 = v137;
    v147 = v136;
    v76 = (unint64_t *)&v158;
LABEL_20:
    v74 = *(v76 - 32);
LABEL_21:
    v152 = v72;
    v153 = v73;
    v77 = v72;
    *(_QWORD *)&v151 = v55;
    sub_23DC87714(&v151, (uint64_t)v149);
    v78 = v154;
    v79 = swift_isUniquelyReferenced_nonNull_native();
    v148 = v78;
    v80 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v80);
    v82 = (uint64_t *)((char *)&v122 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v83 + 16))(v82);
    sub_23DCBD880(*v82, 0xD00000000000001ELL, 0x800000023DCE6B40, v79, &v148);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v84 = v148;
    swift_bridgeObjectRelease();
    v152 = v77;
    v153 = v73;
    *(_QWORD *)&v151 = v75;
    sub_23DC87714(&v151, (uint64_t)v149);
    v85 = swift_isUniquelyReferenced_nonNull_native();
    v148 = v84;
    v86 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v86);
    v88 = (uint64_t *)((char *)&v122 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v89 + 16))(v88);
    sub_23DCBD880(*v88, 0xD000000000000029, 0x800000023DCE6B60, v85, &v148);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v90 = v148;
    swift_bridgeObjectRelease();
    v152 = v77;
    v153 = v73;
    *(_QWORD *)&v151 = v147;
    sub_23DC87714(&v151, (uint64_t)v149);
    v91 = swift_isUniquelyReferenced_nonNull_native();
    v148 = v90;
    v92 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v92);
    v94 = (uint64_t *)((char *)&v122 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v95 + 16))(v94);
    sub_23DCBD880(*v94, 0xD00000000000002ALL, 0x800000023DCE6B90, v91, &v148);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v96 = v148;
    v154 = v148;
    swift_bridgeObjectRelease();
    if (v74 == 2)
    {
      sub_23DCBC7B0(0x7461697665447369, 0xEB000000006E6F69, (uint64_t)v149);
      sub_23DCBFA24((uint64_t)v149);
    }
    else
    {
      v97 = MEMORY[0x24BEE1328];
      v152 = MEMORY[0x24BEE1328];
      v98 = MEMORY[0x24BEE1340];
      v153 = MEMORY[0x24BEE1340];
      LOBYTE(v151) = v74 & 1;
      sub_23DC87714(&v151, (uint64_t)v149);
      v99 = swift_isUniquelyReferenced_nonNull_native();
      v148 = v96;
      v100 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
      MEMORY[0x24BDAC7A8](v100);
      v102 = (char *)&v122 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v103 + 16))(v102);
      sub_23DCBDBCC((uint64_t)v102, 0x7461697665447369, 0xEB000000006E6F69, v99, &v148, v97, v98);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
      v104 = v148;
      v154 = v148;
      swift_bridgeObjectRelease();
      if ((v74 & 0xFF00) != 0x200)
      {
        v152 = v97;
        v153 = v98;
        LOBYTE(v151) = BYTE1(v74) & 1;
        sub_23DC87714(&v151, (uint64_t)v149);
        v106 = swift_isUniquelyReferenced_nonNull_native();
        v148 = v104;
        v107 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
        MEMORY[0x24BDAC7A8](v107);
        v109 = (char *)&v122 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v110 + 16))(v109);
        sub_23DCBDBCC((uint64_t)v109, 0xD000000000000013, 0x800000023DCE6BC0, v106, &v148, v97, v98);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
        v154 = v148;
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    sub_23DCBC7B0(0xD000000000000013, 0x800000023DCE6BC0, (uint64_t)v149);
    sub_23DCBFA24((uint64_t)v149);
    if (v74 == 2)
    {
      sub_23DCBC7B0(0x74654D646E756F62, 0xEB00000000646F68, (uint64_t)v149);
      sub_23DCBFA24((uint64_t)v149);
      return v154;
    }
LABEL_27:
    v111 = 7500137;
    if ((v74 & 0x10000) != 0)
      v111 = 0x6E696772616DLL;
    v112 = 0xE600000000000000;
    v113 = MEMORY[0x24BEE0D00];
    v152 = MEMORY[0x24BEE0D00];
    v114 = MEMORY[0x24BEE0D28];
    v153 = MEMORY[0x24BEE0D28];
    if ((v74 & 0x10000) == 0)
      v112 = 0xE300000000000000;
    *(_QWORD *)&v151 = v111;
    *((_QWORD *)&v151 + 1) = v112;
    sub_23DC87714(&v151, (uint64_t)v149);
    v115 = v154;
    v116 = swift_isUniquelyReferenced_nonNull_native();
    v148 = v115;
    v117 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v149, v150);
    MEMORY[0x24BDAC7A8](v117);
    v119 = (char *)&v122 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v120 + 16))(v119);
    sub_23DCBDBCC((uint64_t)v119, 0x74654D646E756F62, 0xEB00000000646F68, v116, &v148, v113, v114);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
    v105 = v148;
    swift_bridgeObjectRelease();
    return v105;
  }
  v72 = v46;
  if (v71 == *MEMORY[0x24BE3FDC8])
  {
    v73 = v47;
    v55 = v134;
    v75 = v133;
    v147 = v132;
    v76 = &v156;
    goto LABEL_20;
  }
  if (v71 == *MEMORY[0x24BE3FDD8])
  {
    v73 = v47;
    v55 = v127;
    v75 = v126;
    v147 = v125;
    v76 = (unint64_t *)&v151 + 1;
    goto LABEL_20;
  }
  if (v71 == *MEMORY[0x24BE3FDC0])
  {
    v73 = v47;
    v75 = v130;
    v147 = v129;
    v76 = &v154;
    goto LABEL_20;
  }
  v70(v123, v69, v6);
  *(_QWORD *)&v151 = 0;
  *((_QWORD *)&v151 + 1) = 0xE000000000000000;
  sub_23DCE20F0();
  sub_23DCE1D54();
  sub_23DCE2198();
  result = sub_23DCE21BC();
  __break(1u);
  return result;
}

uint64_t sub_23DCBF024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  char *v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  int v71;
  uint64_t v72;
  __int128 v73;
  int v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  _BYTE v90[8];
  char v91;
  uint64_t v92;
  __int128 v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[8];
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;

  v86 = a1;
  v5 = a3 + 288;
  v6 = sub_23DCE146C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v67 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v66 - v10;
  v75 = *(_QWORD *)(a3 + 40);
  v74 = *(unsigned __int8 *)(a3 + 48);
  v72 = *(_QWORD *)(a3 + 120);
  v71 = *(unsigned __int8 *)(a3 + 128);
  v79 = *(_QWORD *)(a3 + 200);
  v78 = *(unsigned __int8 *)(a3 + 208);
  v81 = *(_QWORD *)(a3 + 280);
  v80 = *(unsigned __int8 *)(a3 + 288);
  v85 = *(_QWORD *)(a3 + 360);
  v84 = *(unsigned __int8 *)(v5 + 80);
  v73 = *(_OWORD *)(a3 + 72);
  v70 = *(_OWORD *)(a3 + 56);
  v69 = *(_OWORD *)(a3 + 152);
  v68 = *(_OWORD *)(a3 + 136);
  v77 = *(_OWORD *)(a3 + 232);
  v76 = *(_OWORD *)(a3 + 216);
  v12 = *(_OWORD *)(v5 + 8);
  v87 = *(_OWORD *)(v5 + 24);
  v88 = v12;
  v83 = *(_OWORD *)(v5 + 104);
  v82 = *(_OWORD *)(v5 + 88);
  v13 = MEMORY[0x24BEE4B00];
  v100 = MEMORY[0x24BEE4B00];
  v14 = MEMORY[0x24BEE1768];
  sub_23DCBFB18(a2 + 16, (uint64_t)v97, &qword_2543256B8);
  sub_23DCBFB18((uint64_t)v97, (uint64_t)&v98, &qword_2543256B8);
  if ((v99 & 1) != 0)
  {
    sub_23DCBC7B0(6645601, 0xE300000000000000, (uint64_t)&v93);
    sub_23DCBFA24((uint64_t)&v93);
  }
  else
  {
    v95 = v14;
    v96 = MEMORY[0x24BEE1788];
    *(_QWORD *)&v93 = v98;
    sub_23DC87714(&v93, (uint64_t)v90);
    v15 = v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v89 = v13;
    v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v92);
    MEMORY[0x24BDAC7A8](v17);
    v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v20 + 16))(v19);
    sub_23DCBDBCC((uint64_t)v19, 6645601, 0xE300000000000000, isUniquelyReferenced_nonNull_native, &v89, v15, MEMORY[0x24BEE1788]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    v100 = v89;
    swift_bridgeObjectRelease();
  }
  v21 = *(_QWORD *)(a2 + 32);
  v22 = *(_QWORD *)(a2 + 40);
  v95 = MEMORY[0x24BEE0D00];
  v96 = MEMORY[0x24BEE0D28];
  *(_QWORD *)&v93 = v21;
  *((_QWORD *)&v93 + 1) = v22;
  sub_23DC87714(&v93, (uint64_t)v90);
  swift_bridgeObjectRetain();
  v23 = v100;
  v24 = swift_isUniquelyReferenced_nonNull_native();
  v89 = v23;
  v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v92);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (uint64_t *)((char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  sub_23DCBDA28(*v27, v27[1], 0x6369676F6C6F6962, 0xED00007865536C61, v24, &v89);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  v100 = v89;
  swift_bridgeObjectRelease();
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v30 = v86;
  v29(v11, v86, v6);
  v31 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v11, v6);
  if (v31 == *MEMORY[0x24BE3FE10])
  {
    v32 = v85;
    v33 = v84;
    v34 = v82;
    v35 = (char *)&v101;
  }
  else
  {
    if (v31 == *MEMORY[0x24BE3FDD0])
    {
      v32 = v81;
      if ((v80 & 1) != 0)
        goto LABEL_7;
LABEL_10:
      v36 = MEMORY[0x24BEE1788];
      v96 = MEMORY[0x24BEE1788];
      v37 = MEMORY[0x24BEE1768];
      v95 = MEMORY[0x24BEE1768];
      *(_QWORD *)&v93 = v32;
      sub_23DC87714(&v93, (uint64_t)v90);
      v38 = v100;
      v39 = swift_isUniquelyReferenced_nonNull_native();
      v89 = v38;
      v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v92);
      MEMORY[0x24BDAC7A8](v40);
      v42 = (char *)&v66 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v43 + 16))(v42);
      sub_23DCBDBCC((uint64_t)v42, 0xD000000000000016, 0x800000023DCE6B00, v39, &v89, v37, v36);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
      v100 = v89;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v31 == *MEMORY[0x24BE3FDC8])
    {
      v32 = v79;
      v33 = v78;
      v34 = v76;
      v35 = &v99;
    }
    else if (v31 == *MEMORY[0x24BE3FDD8])
    {
      v32 = v72;
      v33 = v71;
      v34 = v68;
      v35 = &v91;
    }
    else
    {
      if (v31 != *MEMORY[0x24BE3FDC0])
      {
        v29(v67, v30, v6);
        *(_QWORD *)&v93 = 0;
        *((_QWORD *)&v93 + 1) = 0xE000000000000000;
        sub_23DCE20F0();
        sub_23DCE1D54();
        sub_23DCE2198();
        result = sub_23DCE21BC();
        __break(1u);
        return result;
      }
      v32 = v75;
      v33 = v74;
      v34 = v70;
      v35 = &v94;
    }
  }
  v87 = *((_OWORD *)v35 - 16);
  v88 = v34;
  if ((v33 & 1) == 0)
    goto LABEL_10;
LABEL_7:
  sub_23DCBC7B0(0xD000000000000016, 0x800000023DCE6B00, (uint64_t)&v93);
  sub_23DCBFA24((uint64_t)&v93);
LABEL_11:
  if (v88 == 2)
  {
    sub_23DCBC7B0(0x646E756F42776F6CLL, 0xE800000000000000, (uint64_t)v90);
    sub_23DCBFA24((uint64_t)v90);
    sub_23DCBC7B0(0x6E756F4268676968, 0xE900000000000064, (uint64_t)v90);
    sub_23DCBFA24((uint64_t)v90);
    sub_23DCBC7B0(5394761, 0xE300000000000000, (uint64_t)v90);
    sub_23DCBFA24((uint64_t)v90);
    return v100;
  }
  else
  {
    v45 = MEMORY[0x24BEE13C8];
    v46 = MEMORY[0x24BEE13F8];
    v95 = MEMORY[0x24BEE13C8];
    v96 = MEMORY[0x24BEE13F8];
    *(_QWORD *)&v93 = *((_QWORD *)&v88 + 1);
    sub_23DC87714(&v93, (uint64_t)v90);
    v47 = v100;
    v48 = swift_isUniquelyReferenced_nonNull_native();
    v89 = v47;
    v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v92);
    MEMORY[0x24BDAC7A8](v49);
    v51 = (char *)&v66 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v52 + 16))(v51);
    sub_23DCBDBCC((uint64_t)v51, 0x646E756F42776F6CLL, 0xE800000000000000, v48, &v89, v45, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    v100 = v89;
    swift_bridgeObjectRelease();
    v95 = v45;
    v96 = v46;
    *(_QWORD *)&v93 = v87;
    sub_23DC87714(&v93, (uint64_t)v90);
    v53 = v100;
    v54 = swift_isUniquelyReferenced_nonNull_native();
    v89 = v53;
    v55 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v92);
    MEMORY[0x24BDAC7A8](v55);
    v57 = (char *)&v66 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v58 + 16))(v57);
    sub_23DCBDBCC((uint64_t)v57, 0x6E756F4268676968, 0xE900000000000064, v54, &v89, v45, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    v100 = v89;
    swift_bridgeObjectRelease();
    v95 = v45;
    v96 = v46;
    *(_QWORD *)&v93 = *((_QWORD *)&v87 + 1);
    sub_23DC87714(&v93, (uint64_t)v90);
    v59 = v100;
    v60 = swift_isUniquelyReferenced_nonNull_native();
    v89 = v59;
    v61 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v90, v92);
    MEMORY[0x24BDAC7A8](v61);
    v63 = (char *)&v66 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v64 + 16))(v63);
    sub_23DCBDBCC((uint64_t)v63, 5394761, 0xE300000000000000, v60, &v89, v45, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    v44 = v89;
    swift_bridgeObjectRelease();
  }
  return v44;
}

void sub_23DCBF9BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325780)
  {
    v0 = sub_23DCE2204();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325780);
  }
}

uint64_t sub_23DCBFA24(uint64_t a1)
{
  uint64_t v2;

  sub_23DCBFA60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23DCBFA60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325650)
  {
    sub_23DC876C0();
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325650);
  }
}

void sub_23DCBFAB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254325778)
  {
    sub_23DC876C0();
    v0 = sub_23DCE2204();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254325778);
  }
}

uint64_t sub_23DCBFB18(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_23DC87A58(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_23DCBFB64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324A58)
  {
    sub_23DCBFBDC();
    sub_23DCE1100();
    sub_23DC9FD14();
    v0 = sub_23DCE2204();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324A58);
  }
}

unint64_t sub_23DCBFBDC()
{
  unint64_t result;

  result = qword_254324988;
  if (!qword_254324988)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254324988);
  }
  return result;
}

id sub_23DCBFC18(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  uint64_t *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  objc_super v18;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(_QWORD *)&v5[OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_eventSubmissionManager] = a2;
  v11 = (uint64_t *)&v5[OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_unitTest_didObserveAnalyticsSubmissionCoordinator];
  *v11 = a3;
  v11[1] = a4;
  v12 = a2;
  sub_23DC973A8(a3);
  v18.receiver = v5;
  v18.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v18, sel_init);
  v14 = objc_msgSend(a1, sel_daemon);
  if (v14)
  {
    v15 = v14;
    v16 = v13;
    objc_msgSend(v15, sel_registerDaemonReadyObserver_queue_, v16, 0);
    sub_23DC97390(a3);

  }
  else
  {
    sub_23DC97390(a3);
  }

  return v13;
}

void sub_23DCBFE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  if (a3)
    v7 = sub_23DCE1148();
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);

}

uint64_t type metadata accessor for AnalyticsDailyMultiEventManager()
{
  return objc_opt_self();
}

uint64_t sub_23DCBFF84()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23DCBFFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23DCBFE84(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_23DCBFFB0(void (*a1)(_QWORD, _QWORD, _QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  unsigned int v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  id v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint8_t *v78;
  id v79;
  void *v80;
  void (*v81)(_QWORD, uint64_t, void *);
  id v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  id v94;
  id v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(_QWORD);
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  os_log_type_t v122;
  uint64_t v123;
  void *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  id v135;
  char *v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  void *v140;
  uint64_t v141;
  unint64_t v142;
  id v143;
  _QWORD v144[4];
  __int128 v145;
  void (*v146)(_QWORD);
  uint64_t v147;
  int v148;
  char *v149;
  char *v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  char *v161;
  void (*v162)(_QWORD, _QWORD, _QWORD);
  id v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t ObjectType;
  unint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  _QWORD v179[55];
  uint64_t v180[55];
  uint64_t v181[57];

  v3 = v2;
  v181[55] = *MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v6 = sub_23DCE146C();
  v168 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v167 = (char *)v144 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v174 = (char *)v144 - v12;
  v13 = sub_23DCE1B14();
  v172 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v144 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v166 = (char *)v144 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v150 = (char *)v144 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v173 = (char *)v144 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v144 - v26;
  v169 = v3;
  v28 = MEMORY[0x242641820](v3 + OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_profile);
  if (!v28)
  {
    sub_23DCE1AFC();
    v71 = sub_23DCE1B08();
    v72 = sub_23DCE1ED4();
    if (os_log_type_enabled(v71, v72))
    {
      v175 = v13;
      v73 = swift_slowAlloc();
      v162 = a1;
      v74 = (uint8_t *)v73;
      v75 = swift_slowAlloc();
      v181[0] = v75;
      *(_DWORD *)v74 = 136446210;
      v76 = sub_23DCE2354();
      v180[0] = sub_23DCA47EC(v76, v77, v181);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v71, v72, "[%{public}s] Profile not available, completing without submission", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v75, -1, -1);
      v78 = v74;
      a1 = v162;
      MEMORY[0x24264179C](v78, -1, -1);

      (*(void (**)(char *, uint64_t))(v172 + 8))(v19, v175);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v172 + 8))(v19, v13);
    }
    a1(0, 2, 0);
    return;
  }
  v29 = (void *)v28;
  v161 = v9;
  v176 = v6;
  sub_23DCE1AFC();
  v30 = sub_23DCE1B08();
  v31 = sub_23DCE1EEC();
  v32 = os_log_type_enabled(v30, v31);
  v162 = a1;
  v155 = a2;
  v175 = v13;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v149 = v16;
    v34 = (uint8_t *)v33;
    v35 = swift_slowAlloc();
    v181[0] = v35;
    *(_DWORD *)v34 = 136446210;
    v170 = (void (*)(char *, uint64_t))(v34 + 4);
    v36 = sub_23DCE2354();
    v180[0] = sub_23DCA47EC(v36, v37, v181);
    sub_23DCE1FD0();
    v16 = v149;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v30, v31, "[%{public}s] Submitting HealthBalanceDailyAnalyticsEvent", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v35, -1, -1);
    MEMORY[0x24264179C](v34, -1, -1);
  }

  v170 = *(void (**)(char *, uint64_t))(v172 + 8);
  v170(v27, v13);
  sub_23DCE1D30();
  v38 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v163 = v29;
  v39 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v38, sel_initWithSuiteName_, v39);

  if (!v40)
  {
    __break(1u);
    goto LABEL_38;
  }
  sub_23DCE1D30();
  v41 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v42 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v41, sel_initWithSuiteName_, v42);

  if (!v43)
  {
LABEL_38:
    __break(1u);
    return;
  }
  sub_23DCE1A6C();
  v44 = sub_23DCE1A60();
  v45 = objc_allocWithZone(MEMORY[0x24BEA9950]);
  v46 = (void *)sub_23DCE1D0C();
  v47 = objc_msgSend(v45, sel_initWithIdentifier_healthStore_options_, v46, 0, 2);

  type metadata accessor for HealthBalanceDailyAnalyticsEvent();
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 64) = 0u;
  *(_OWORD *)(v48 + 80) = 0u;
  *(_OWORD *)(v48 + 96) = 0u;
  *(_OWORD *)(v48 + 112) = 0u;
  *(_OWORD *)(v48 + 121) = 0u;
  sub_23DCC0FC4((uint64_t)v181);
  sub_23DCC1010((uint64_t)v181, v48 + 144);
  v49 = v163;
  *(_QWORD *)(v48 + 16) = v163;
  *(_QWORD *)(v48 + 24) = objc_msgSend(v49, sel_notificationManager);
  *(_QWORD *)(v48 + 32) = v40;
  *(_QWORD *)(v48 + 40) = v43;
  *(_QWORD *)(v48 + 48) = v44;
  *(_QWORD *)(v48 + 56) = v47;
  v50 = *(void **)(v169 + OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_eventSubmissionManager);
  v180[0] = 0;
  v160 = v50;
  v51 = objc_msgSend(v50, sel_submitEvent_error_, v48, v180);
  v52 = (void *)v180[0];
  if (!v51)
  {
    v79 = (id)v180[0];
    v80 = (void *)sub_23DCE1154();

    swift_willThrow();
    swift_release();
    v81 = (void (*)(_QWORD, uint64_t, void *))v162;
LABEL_15:
    sub_23DCE1AFC();
    v82 = v80;
    v83 = v80;
    v84 = sub_23DCE1B08();
    v85 = sub_23DCE1ED4();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = swift_slowAlloc();
      v87 = (_QWORD *)swift_slowAlloc();
      v176 = swift_slowAlloc();
      v180[0] = v176;
      *(_DWORD *)v86 = 136446466;
      v88 = sub_23DCE2354();
      v179[0] = sub_23DCA47EC(v88, v89, v180);
      v149 = v16;
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2114;
      v90 = v80;
      v91 = _swift_stdlib_bridgeErrorToNSError();
      v179[0] = v91;
      sub_23DCE1FD0();
      *v87 = v91;

      _os_log_impl(&dword_23DC7C000, v84, v85, "[%{public}s] Error submitting event: %{public}@", (uint8_t *)v86, 0x16u);
      sub_23DC80CF8();
      swift_arrayDestroy();
      MEMORY[0x24264179C](v87, -1, -1);
      v92 = v176;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v92, -1, -1);
      MEMORY[0x24264179C](v86, -1, -1);

      v93 = v149;
    }
    else
    {

      v93 = v16;
    }
    v170(v93, v175);
    v94 = v80;
    v81(0, 1, v80);

    return;
  }
  v53 = v175;
  v159 = *(_QWORD *)(v48 + 104);
  if (!v159)
  {
LABEL_10:
    v60 = v52;
    v61 = v166;
    sub_23DCE1AFC();
    v62 = sub_23DCE1B08();
    v63 = sub_23DCE1ED4();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      v65 = v53;
      v66 = swift_slowAlloc();
      v180[0] = v66;
      *(_DWORD *)v64 = 136446210;
      v67 = sub_23DCE2354();
      v179[0] = sub_23DCA47EC(v67, v68, v180);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v62, v63, "[%{public}s] Daily event failed to populate, cannot continue", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v66, -1, -1);
      MEMORY[0x24264179C](v64, -1, -1);

      v69 = v166;
      v70 = v65;
    }
    else
    {

      v69 = v61;
      v70 = v53;
    }
    v170(v69, v70);
    v162(0, 1, 0);

    swift_release();
    return;
  }
  v54 = *(_QWORD *)(v48 + 72);
  v56 = *(_QWORD *)(v48 + 80);
  v55 = *(_QWORD *)(v48 + 88);
  v57 = *(_QWORD *)(v48 + 96);
  v156 = *(_QWORD *)(v48 + 64);
  v157 = v57;
  v172 = *(_QWORD *)(v48 + 112);
  v58 = *(_QWORD *)(v48 + 128);
  v158 = *(_QWORD *)(v48 + 120);
  v59 = *(unsigned __int8 *)(v48 + 136);
  sub_23DCC1010(v48 + 144, (uint64_t)v179);
  sub_23DCC1010((uint64_t)v179, (uint64_t)v180);
  if (sub_23DC877A8((uint64_t)v180) == 1)
  {
    v53 = v175;
    goto LABEL_10;
  }
  v144[2] = v48;
  v95 = v52;
  v96 = v59;
  v97 = v156;
  v98 = v157;
  v154 = v55;
  v99 = v55;
  v100 = v172;
  sub_23DCC10A8(v156, v54, v56, v99, v157, v159);
  v101 = sub_23DCE1460();
  v103 = *(_QWORD *)(v101 + 16);
  if (v103)
  {
    v151 = v96;
    v152 = v58;
    v153 = v54;
    v169 = v56;
    v149 = v16;
    v104 = *(unsigned __int8 *)(v168 + 80);
    v144[1] = v101;
    v105 = v101 + ((v104 + 32) & ~v104);
    v148 = v100 & 1;
    v147 = *(_QWORD *)(v168 + 72);
    v106 = *(void (**)(_QWORD))(v168 + 16);
    *(_QWORD *)&v102 = 136446466;
    v145 = v102;
    v144[3] = MEMORY[0x24BEE4AD8] + 8;
    v107 = v176;
    v109 = v173;
    v108 = v174;
    v146 = v106;
    while (1)
    {
      v164 = v105;
      v165 = v103;
      v106(v108);
      sub_23DCE1AFC();
      v110 = v167;
      ((void (*)(char *, char *, uint64_t))v106)(v167, v108, v107);
      v111 = sub_23DCE1B08();
      v112 = sub_23DCE1EEC();
      if (os_log_type_enabled(v111, v112))
      {
        v113 = swift_slowAlloc();
        v114 = (void *)swift_slowAlloc();
        v178 = v114;
        *(_DWORD *)v113 = v145;
        v115 = sub_23DCE2354();
        v116 = v110;
        *(_QWORD *)(v113 + 4) = sub_23DCA47EC(v115, v117, (uint64_t *)&v178);
        swift_bridgeObjectRelease();
        *(_WORD *)(v113 + 12) = 2080;
        v118 = v161;
        ((void (*)(char *, char *, uint64_t))v106)(v161, v110, v176);
        v119 = sub_23DCE1D3C();
        *(_QWORD *)(v113 + 14) = sub_23DCA47EC(v119, v120, (uint64_t *)&v178);
        swift_bridgeObjectRelease();
        v121 = v168;
        v166 = *(char **)(v168 + 8);
        ((void (*)(char *, uint64_t))v166)(v116, v176);
        v122 = v112;
        v123 = v121;
        _os_log_impl(&dword_23DC7C000, v111, v122, "[%{public}s] Submitting HealthBalanceAnalysisAnalyticsEvent(%s)", (uint8_t *)v113, 0x16u);
        swift_arrayDestroy();
        v124 = v114;
        v108 = v174;
        MEMORY[0x24264179C](v124, -1, -1);
        v107 = v176;
        MEMORY[0x24264179C](v113, -1, -1);

        v170(v173, v175);
      }
      else
      {
        v123 = v168;
        v166 = *(char **)(v168 + 8);
        ((void (*)(char *, uint64_t))v166)(v110, v107);

        v170(v109, v175);
        v118 = v161;
      }
      v125 = v172 >> 8;
      ((void (*)(char *, char *, uint64_t))v106)(v118, v108, v107);
      type metadata accessor for HealthBalanceAnalysisAnalyticsEvent();
      v126 = swift_allocObject();
      (*(void (**)(uint64_t, char *, uint64_t))(v123 + 32))(v126 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_dataType, v118, v107);
      v127 = v126 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment;
      v128 = v156;
      v129 = v157;
      v131 = v153;
      v130 = v154;
      *(_QWORD *)v127 = v156;
      *(_QWORD *)(v127 + 8) = v131;
      *(_QWORD *)(v127 + 16) = v169;
      *(_BYTE *)(v127 + 24) = v130 & 1;
      v132 = v159;
      *(_QWORD *)(v127 + 32) = v129;
      *(_QWORD *)(v127 + 40) = v132;
      *(_BYTE *)(v127 + 48) = v148;
      *(_BYTE *)(v127 + 49) = v125;
      v133 = v152;
      *(_QWORD *)(v127 + 56) = v158;
      *(_QWORD *)(v127 + 64) = v133;
      v134 = (void *)(v126 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_summaryAnalytics);
      *(_BYTE *)(v127 + 72) = v151 & 1;
      memcpy(v134, v180, 0x1B8uLL);
      v178 = 0;
      sub_23DCC10A8(v128, v131, v169, v130, v129, v132);
      LODWORD(v125) = objc_msgSend(v160, sel_submitEvent_error_, v126, &v178);
      swift_release();
      if (!(_DWORD)v125)
        break;
      v135 = v178;
      v108 = v174;
      v107 = v176;
      ((void (*)(char *, uint64_t))v166)(v174, v176);
      v106 = v146;
      v105 = v164 + v147;
      v103 = v165 - 1;
      v109 = v173;
      if (v165 == 1)
      {
        swift_bridgeObjectRelease();
        v136 = v150;
        v98 = v157;
        v56 = v169;
        v54 = v153;
        v97 = v156;
        goto LABEL_32;
      }
    }
    v143 = v178;
    swift_bridgeObjectRelease();
    sub_23DC85430(v156, v153, v169, v154, v157, v159);
    v80 = (void *)sub_23DCE1154();

    swift_willThrow();
    swift_release();
    ((void (*)(char *, uint64_t))v166)(v174, v176);
    v81 = (void (*)(_QWORD, uint64_t, void *))v162;
    v16 = v149;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  v136 = v150;
LABEL_32:
  sub_23DC85430(v97, v54, v56, v154, v98, v159);
  sub_23DCE1AFC();
  v137 = sub_23DCE1B08();
  v138 = sub_23DCE1EEC();
  if (os_log_type_enabled(v137, v138))
  {
    v139 = (uint8_t *)swift_slowAlloc();
    v140 = (void *)swift_slowAlloc();
    v178 = v140;
    *(_DWORD *)v139 = 136446210;
    v141 = sub_23DCE2354();
    v177 = sub_23DCA47EC(v141, v142, (uint64_t *)&v178);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v137, v138, "[%{public}s] All events submitted successfully", v139, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v140, -1, -1);
    MEMORY[0x24264179C](v139, -1, -1);
  }

  v170(v136, v175);
  v162(0, 0, 0);
  swift_release();

}

double sub_23DCC0FC4(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 3;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_QWORD *)(a1 + 432) = 0;
  return result;
}

uint64_t sub_23DCC1010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCC1054();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23DCC1054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324C80)
  {
    v0 = sub_23DCE1FAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324C80);
  }
}

uint64_t sub_23DCC10A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23DCC10D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, _QWORD, uint64_t);
  void (*v8)(char *, uint64_t);
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_23DCE146C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v7(v6, *MEMORY[0x24BE3FDC0], v3);
  sub_23DCC26A8(a1, (uint64_t)v6);
  v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v6, v3);
  v7(v6, *MEMORY[0x24BE3FDD8], v3);
  sub_23DCC26A8(a1, (uint64_t)v6);
  v8(v6, v3);
  v7(v6, *MEMORY[0x24BE3FDC8], v3);
  sub_23DCC26A8(a1, (uint64_t)v6);
  v8(v6, v3);
  v7(v6, *MEMORY[0x24BE3FDD0], v3);
  sub_23DCC26A8(a1, (uint64_t)v6);
  v8(v6, v3);
  v7(v6, *MEMORY[0x24BE3FE10], v3);
  sub_23DCC26A8(a1, (uint64_t)v6);
  v8(v6, v3);
  result = sub_23DCE15B0();
  if ((result & 1) != 0)
  {
    v10 = *(_QWORD *)(v1 + 408);
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    *(_QWORD *)(v1 + 408) = v12;
  }
  if ((sub_23DCE15B0() & 1) != 0)
  {
    v13 = 3;
  }
  else
  {
    sub_23DCE15C8();
    if ((sub_23DCE19D0() & 1) != 0)
    {
      v13 = 2;
    }
    else if ((sub_23DCE1598() & 1) != 0)
    {
      v13 = 4;
    }
    else
    {
      v13 = 1;
    }
  }
  *(_BYTE *)(v1 + 416) = v13;
  result = MEMORY[0x242640374]();
  if (result >= 1)
  {
    v14 = *(_QWORD *)(v1 + 424);
    v11 = __OFADD__(v14, 1);
    v15 = v14 + 1;
    if (v11)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    *(_QWORD *)(v1 + 424) = v15;
    *(_BYTE *)(v1 + 416) = 5;
  }
  v16 = MEMORY[0x24264038C]();
  result = sub_23DCE1A54();
  if (v16 < result)
  {
LABEL_17:
    if (!__OFADD__(*(_QWORD *)v1, 1))
    {
      ++*(_QWORD *)v1;
      return result;
    }
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)(v1 + 432);
  v11 = __OFADD__(v17, 1);
  v18 = v17 + 1;
  if (!v11)
  {
    *(_QWORD *)(v1 + 432) = v18;
    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_23DCC133C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[1];
  v2 = v0[11];
  v3 = v0[21];
  v4 = v0[31];
  v5 = v0[41];
  v6 = v0[51];
  sub_23DC82800(0, (unint64_t *)&unk_2543257E8, (uint64_t (*)(uint64_t))sub_23DCC3E74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE4670;
  *(_QWORD *)(inited + 32) = 0xD00000000000001BLL;
  *(_QWORD *)(inited + 40) = 0x800000023DCE6B20;
  v8 = MEMORY[0x24BEE1768];
  v9 = MEMORY[0x24BEE1788];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 88) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 96) = 0x800000023DCE6E70;
  *(_QWORD *)(inited + 128) = v8;
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 104) = v2;
  *(_QWORD *)(inited + 144) = 0xD000000000000015;
  *(_QWORD *)(inited + 152) = 0x800000023DCE6E90;
  *(_QWORD *)(inited + 184) = v8;
  *(_QWORD *)(inited + 192) = v9;
  *(_QWORD *)(inited + 160) = v3;
  *(_QWORD *)(inited + 200) = 0xD000000000000020;
  *(_QWORD *)(inited + 208) = 0x800000023DCE6EB0;
  *(_QWORD *)(inited + 240) = v8;
  *(_QWORD *)(inited + 248) = v9;
  *(_QWORD *)(inited + 216) = v4;
  *(_QWORD *)(inited + 256) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 264) = 0x800000023DCE6EE0;
  *(_QWORD *)(inited + 296) = v8;
  *(_QWORD *)(inited + 304) = v9;
  *(_QWORD *)(inited + 272) = v5;
  *(_QWORD *)(inited + 312) = 0xD000000000000017;
  *(_QWORD *)(inited + 320) = 0x800000023DCE6F00;
  *(_QWORD *)(inited + 352) = v8;
  *(_QWORD *)(inited + 360) = v9;
  *(_QWORD *)(inited + 328) = v6;
  return sub_23DCD769C(inited);
}

void sub_23DCC1498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;

  v1 = *(unsigned __int8 *)(v0 + 416);
  sub_23DC82800(0, (unint64_t *)&unk_2543257E8, (uint64_t (*)(uint64_t))sub_23DCC3E74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE4680;
  *(_QWORD *)(inited + 32) = 0x746174537473616CLL;
  *(_QWORD *)(inited + 40) = 0xEA00000000007375;
  __asm { BR              X10 }
}

unint64_t sub_23DCC1560(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8 = MEMORY[0x24BEE0D28];
  a1[9] = MEMORY[0x24BEE0D00];
  a1[10] = v8;
  a1[6] = 0x6E776F6E6B6E75;
  a1[7] = 0xE700000000000000;
  v9 = MEMORY[0x24BEE1768];
  a1[11] = v1 + 8;
  a1[12] = 0x800000023DCE6D50;
  v10 = MEMORY[0x24BEE1788];
  a1[16] = v9;
  a1[17] = v10;
  a1[13] = v7;
  a1[18] = v1 + 7;
  a1[19] = 0x800000023DCE6D70;
  a1[23] = v9;
  a1[24] = v10;
  a1[20] = v6;
  a1[25] = v1 + 18;
  a1[26] = 0x800000023DCE6D90;
  a1[30] = v9;
  a1[31] = v10;
  a1[27] = v5;
  a1[32] = v1 + 14;
  a1[33] = 0x800000023DCE6DC0;
  a1[37] = v9;
  a1[38] = v10;
  a1[34] = v4;
  a1[39] = v1 + 12;
  a1[40] = 0x800000023DCE6DF0;
  a1[44] = v9;
  a1[45] = v10;
  a1[41] = v3;
  a1[46] = v1 + 16;
  a1[47] = 0x800000023DCE6E20;
  a1[51] = v9;
  a1[52] = v10;
  a1[48] = v12;
  a1[53] = v1 + 6;
  a1[54] = 0x800000023DCE6E50;
  a1[58] = v9;
  a1[59] = v10;
  a1[55] = v2;
  return sub_23DCD769C((uint64_t)a1);
}

void sub_23DCC1700(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23DCC174C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23DCC17E0 + 4 * byte_23DCE473C[a2]))(0x6E776F6E6B6E75);
}

uint64_t sub_23DCC17E0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E776F6E6B6E75 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_23DCE2270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23DCC18C0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E696772616DLL;
  else
    v3 = 7500137;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E696772616DLL;
  else
    v5 = 7500137;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23DCE2270();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23DCC1954()
{
  sub_23DCE22DC();
  sub_23DCE1D48();
  swift_bridgeObjectRelease();
  return sub_23DCE22F4();
}

void sub_23DCC19C8(char a1)
{
  sub_23DCE22DC();
  __asm { BR              X10 }
}

uint64_t sub_23DCC1A1C()
{
  sub_23DCE1D48();
  swift_bridgeObjectRelease();
  return sub_23DCE22F4();
}

void sub_23DCC1ABC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23DCC1B00()
{
  sub_23DCE1D48();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DCC1B8C()
{
  sub_23DCE1D48();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DCC1BD8()
{
  sub_23DCE22DC();
  sub_23DCE1D48();
  swift_bridgeObjectRelease();
  return sub_23DCE22F4();
}

void sub_23DCC1C48(uint64_t a1, char a2)
{
  sub_23DCE22DC();
  __asm { BR              X10 }
}

uint64_t sub_23DCC1C98()
{
  sub_23DCE1D48();
  swift_bridgeObjectRelease();
  return sub_23DCE22F4();
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E696772616DLL;
  else
    return 7500137;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.summaryCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.summaryCount.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.summaryCount.modify())()
{
  return nullsub_1;
}

HealthBalanceDaemon::SleepingSampleDaySummaryCollectionAnalytics::MetricSummary::BoundMethod_optional __swiftcall SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HealthBalanceDaemon::SleepingSampleDaySummaryCollectionAnalytics::MetricSummary::BoundMethod_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23DCE2234();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_23DCC1DE8(char *a1, char *a2)
{
  return sub_23DCC18C0(*a1, *a2);
}

uint64_t sub_23DCC1DF4()
{
  return sub_23DCC1954();
}

uint64_t sub_23DCC1DFC()
{
  return sub_23DCC1B8C();
}

uint64_t sub_23DCC1E04()
{
  return sub_23DCC1BD8();
}

HealthBalanceDaemon::SleepingSampleDaySummaryCollectionAnalytics::MetricSummary::BoundMethod_optional sub_23DCC1E0C(Swift::String *a1)
{
  return SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.init(rawValue:)(*a1);
}

uint64_t sub_23DCC1E18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isOutOfRange.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isOutOfRange.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isOutOfRange.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isSilencedDeviation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isSilencedDeviation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isSilencedDeviation.modify())()
{
  return nullsub_1;
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.boundMethod.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.boundMethod.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.boundMethod.modify())()
{
  return nullsub_1;
}

double SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedLowBound.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedLowBound.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedLowBound.modify())()
{
  return nullsub_1;
}

double SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedHighBound.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedHighBound.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedHighBound.modify())()
{
  return nullsub_1;
}

double SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedIQR.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedIQR.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedIQR.modify())()
{
  return nullsub_1;
}

void sub_23DCC1F04(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  void *v20;
  id v21;
  id v22;
  double v23;
  double v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  void *v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v6 = sub_23DCE14E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, &qword_2543252F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FDB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v52 - v11;
  v13 = sub_23DCE1448();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE176C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v17 = sub_23DCE146C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
    v18 = sub_23DCE179C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
    sub_23DCC3ED8((uint64_t)v12);
    *(_QWORD *)a3 = 2;
    a3[1] = 0.0;
    a3[2] = 0.0;
    a3[3] = 0.0;
    return;
  }
  v52 = v7;
  v53 = v6;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v56 = a1;
  v55 = sub_23DCE1718();
  if ((v55 & 1) != 0)
    v19 = 0;
  else
    v19 = 2;
  v54 = v19;
  v20 = (void *)sub_23DCE1418();
  v21 = sub_23DCC2D84();
  v22 = objc_msgSend(v20, sel_minimum);
  objc_msgSend(v22, sel_doubleValueForUnit_, v21);
  v24 = v23;

  v25 = objc_msgSend(v20, sel_maximum);
  objc_msgSend(v25, sel_doubleValueForUnit_, v21);
  v27 = v26;

  sub_23DCC2F78(v24);
  v29 = v28;
  sub_23DCC2F78(v27);
  v31 = v30;

  if (v29 > v31)
  {
    __break(1u);
    return;
  }
  v32 = (void *)sub_23DCE1430();
  sub_23DCC2374(v32);
  v34 = v33;

  sub_23DC80D4C();
  v35 = (void *)sub_23DCE1418();
  v36 = (void *)sub_23DCE1424();
  v37 = sub_23DCE1F88();

  if ((v37 & 1) != 0)
  {
    v38 = sub_23DCE146C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(a2, v38);
    v39 = sub_23DCE179C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v56, v39);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v57 = 0;
  }
  else
  {
    v57 = 1;
    v40 = v56;
    sub_23DCE1790();
    v41 = (void *)sub_23DCE14D8();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v53);
    if (v41)
    {
      v42 = (void *)sub_23DCE1424();
      v43 = objc_msgSend(v42, sel_containsQuantity_, v41);

      if ((v43 & 1) == 0)
      {
        v48 = (void *)sub_23DCE1418();
        v49 = objc_msgSend(v48, sel_containsQuantity_, v41);

        v50 = sub_23DCE146C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(a2, v50);
        v51 = sub_23DCE179C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v40, v51);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        v46 = v54;
        if (v49)
          v46 = 1;
        goto LABEL_14;
      }

    }
    v44 = sub_23DCE146C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(a2, v44);
    v45 = sub_23DCE179C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v40, v45);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  v46 = v54;
LABEL_14:
  v47 = 0x10000;
  if (!v57)
    v47 = 0;
  *(_QWORD *)a3 = v55 & 1 | ((unint64_t)v46 << 8) | v47;
  a3[1] = v29;
  a3[2] = v31;
  *((_QWORD *)a3 + 3) = v34;
}

uint64_t sub_23DCC2374(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  __int128 v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v3 = sub_23DCE146C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = sub_23DCC2D84();
  objc_msgSend(a1, sel_doubleValueForUnit_, v10);
  v12 = v11;

  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13(v9, v1, v3);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v14 == *MEMORY[0x24BE3FE10])
  {
    v19 = v12;
    v20 = xmmword_23DCE46D0;
    v15 = 0x4000000000000000;
LABEL_10:
    v18 = v15;
    sub_23DCC3F2C();
    return sub_23DCE1C94();
  }
  if (v14 == *MEMORY[0x24BE3FDD0])
  {
    v19 = v12;
    v16 = xmmword_23DCE46C0;
LABEL_5:
    v20 = v16;
    v15 = 0x3FE0000000000000;
    goto LABEL_10;
  }
  if (v14 == *MEMORY[0x24BE3FDC8])
  {
    v19 = v12;
    v20 = xmmword_23DCE46B0;
    v15 = 0x3F747AE147AE147BLL;
    goto LABEL_10;
  }
  if (v14 == *MEMORY[0x24BE3FDD8])
  {
    v19 = v12;
    v20 = xmmword_23DCE46A0;
    v15 = 0x3FD0000000000000;
    goto LABEL_10;
  }
  if (v14 == *MEMORY[0x24BE3FDC0])
  {
    v19 = v12;
    v16 = xmmword_23DCE4690;
    goto LABEL_5;
  }
  v13(v7, v1, v3);
  *(_QWORD *)&v20 = 0;
  *((_QWORD *)&v20 + 1) = 0xE000000000000000;
  sub_23DCE20F0();
  sub_23DCE1D54();
  sub_23DCE2198();
  result = sub_23DCE21BC();
  __break(1u);
  return result;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.available.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.available.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.available.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.unavailable.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.unavailable.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.unavailable.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.insufficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.insufficient.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.insufficient.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.deviations.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.daysSinceLastDeviation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.lastSummary.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 48);
  v3 = *(_OWORD *)(v1 + 64);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.lastSummary.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v3;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.lastSummary.modify())()
{
  return nullsub_1;
}

uint64_t sub_23DCC26A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];

  v3 = v2;
  v29 = a2;
  v31 = a1;
  v4 = sub_23DCE146C();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23DCE1490();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE14E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE179C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v28 - v17;
  sub_23DCE1580();
  sub_23DCE1790();
  sub_23DCE149C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_23DCC28F8((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v32);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  v19 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v29, v35);
  sub_23DCC1F04((uint64_t)v16, v19, (double *)v36);
  v20 = v36[1];
  *(_OWORD *)(v3 + 48) = v36[0];
  *(_OWORD *)(v3 + 64) = v20;
  LOBYTE(v19) = sub_23DCE1718();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  if ((v19 & 1) == 0)
  {
    if ((*(_BYTE *)(v3 + 40) & 1) != 0)
      return result;
    v26 = *(_QWORD *)(v3 + 32);
    v27 = v26 + 1;
    if (!__OFADD__(v26, 1))
    {
      v25 = (_BYTE *)(v3 + 40);
      *(_QWORD *)(v3 + 32) = v27;
      goto LABEL_7;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  v22 = *(_QWORD *)(v3 + 24);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(v3 + 24) = v24;
  *(_QWORD *)(v3 + 32) = 0;
  v25 = (_BYTE *)(v3 + 40);
LABEL_7:
  *v25 = 0;
  return result;
}

uint64_t sub_23DCC28F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_23DCE1490();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if ((_DWORD)result == *MEMORY[0x24BE3FE80])
  {
    v8 = v1[1];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (!v9)
    {
      v1[1] = v10;
      return result;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((_DWORD)result == *MEMORY[0x24BE3FE58])
  {
    v11 = v1[2];
    v9 = __OFADD__(v11, 1);
    v12 = v11 + 1;
    if (!v9)
    {
      v1[2] = v12;
      return result;
    }
    goto LABEL_21;
  }
  if ((_DWORD)result == *MEMORY[0x24BE3FE70]
    || (_DWORD)result == *MEMORY[0x24BE3FE68]
    || (_DWORD)result == *MEMORY[0x24BE3FE88])
  {
    if (!__OFADD__(*v1, 1))
    {
      ++*v1;
      return result;
    }
    goto LABEL_22;
  }
  v15 = v1[1];
  v9 = __OFADD__(v15, 1);
  v16 = v15 + 1;
  if (v9)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  v1[1] = v16;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.watchSleepCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  result = *(__n128 *)(v1 + 56);
  v6 = *(_OWORD *)(v1 + 72);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.watchSleepCounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 40) = v2;
  *(_BYTE *)(v1 + 48) = v3;
  result = *(__n128 *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 56) = result;
  *(_OWORD *)(v1 + 72) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.watchSleepCounts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.wristTempCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_BYTE *)(v1 + 128);
  v4 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  result = *(__n128 *)(v1 + 136);
  v6 = *(_OWORD *)(v1 + 152);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.wristTempCounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 120) = v2;
  *(_BYTE *)(v1 + 128) = v3;
  result = *(__n128 *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 136) = result;
  *(_OWORD *)(v1 + 152) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.wristTempCounts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.spO2Counts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 200);
  v3 = *(_BYTE *)(v1 + 208);
  v4 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  result = *(__n128 *)(v1 + 216);
  v6 = *(_OWORD *)(v1 + 232);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.spO2Counts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 184) = v4;
  *(_QWORD *)(v1 + 200) = v2;
  *(_BYTE *)(v1 + 208) = v3;
  result = *(__n128 *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 216) = result;
  *(_OWORD *)(v1 + 232) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.spO2Counts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.respiratoryRateCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 280);
  v3 = *(_BYTE *)(v1 + 288);
  v4 = *(_OWORD *)(v1 + 264);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 248);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  result = *(__n128 *)(v1 + 296);
  v6 = *(_OWORD *)(v1 + 312);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.respiratoryRateCounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 248) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 264) = v4;
  *(_QWORD *)(v1 + 280) = v2;
  *(_BYTE *)(v1 + 288) = v3;
  result = *(__n128 *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 296) = result;
  *(_OWORD *)(v1 + 312) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.respiratoryRateCounts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.sleepingRHRCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(v1 + 360);
  v3 = *(_BYTE *)(v1 + 368);
  v4 = *(_OWORD *)(v1 + 344);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 328);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  result = *(__n128 *)(v1 + 376);
  v6 = *(_OWORD *)(v1 + 392);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.sleepingRHRCounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_BYTE *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 328) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 344) = v4;
  *(_QWORD *)(v1 + 360) = v2;
  *(_BYTE *)(v1 + 368) = v3;
  result = *(__n128 *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 376) = result;
  *(_OWORD *)(v1 + 392) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.sleepingRHRCounts.modify())()
{
  return nullsub_1;
}

uint64_t sub_23DCC2C54(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23DCC2C8C + 4 * byte_23DCE4754[a1]))(0xD000000000000014, 0x800000023DCE4E60);
}

uint64_t sub_23DCC2C8C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_23DCC2CA4()
{
  return 0x617461446F6ELL;
}

uint64_t sub_23DCC2CB8()
{
  return 0x656D656E69666572;
}

uint64_t sub_23DCC2CD4()
{
  return 0x6C616369707974;
}

uint64_t sub_23DCC2CEC()
{
  return 0x737265696C74756FLL;
}

void sub_23DCC2D04(char *a1)
{
  sub_23DCC1700(*a1);
}

void sub_23DCC2D10()
{
  char *v0;

  sub_23DCC19C8(*v0);
}

void sub_23DCC2D18(uint64_t a1)
{
  char *v1;

  sub_23DCC1ABC(a1, *v1);
}

void sub_23DCC2D20(uint64_t a1)
{
  char *v1;

  sub_23DCC1C48(a1, *v1);
}

uint64_t sub_23DCC2D28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23DCC3E2C();
  *a1 = result;
  return result;
}

uint64_t sub_23DCC2D54@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23DCC2C54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_23DCC2D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  int v9;
  char **v11;
  id result;
  _QWORD v13[2];

  v1 = sub_23DCE146C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v13 - v6;
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v8((char *)v13 - v6, v0, v1);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v9 == *MEMORY[0x24BE3FE10] || v9 == *MEMORY[0x24BE3FDD0])
  {
    v11 = &selRef__countPerMinuteUnit;
    return objc_msgSend((id)objc_opt_self(), *v11);
  }
  if (v9 == *MEMORY[0x24BE3FDC8])
  {
    v11 = &selRef_percentUnit;
    return objc_msgSend((id)objc_opt_self(), *v11);
  }
  if (v9 == *MEMORY[0x24BE3FDD8])
  {
    v11 = &selRef__changeInDegreeCelsiusUnit;
    return objc_msgSend((id)objc_opt_self(), *v11);
  }
  if (v9 == *MEMORY[0x24BE3FDC0])
  {
    v11 = &selRef_hourUnit;
    return objc_msgSend((id)objc_opt_self(), *v11);
  }
  v8(v5, v0, v1);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_23DCE20F0();
  sub_23DCE1D54();
  sub_23DCE2198();
  result = (id)sub_23DCE21BC();
  __break(1u);
  return result;
}

uint64_t sub_23DCC2F78(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  double v15;
  __int128 v16;

  v3 = sub_23DCE146C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v14 - v8, v1, v3);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == *MEMORY[0x24BE3FE10])
  {
    v15 = a1;
    v16 = xmmword_23DCE4720;
    v12 = 0x4014000000000000;
LABEL_11:
    v14 = v12;
    sub_23DCC3F2C();
    return sub_23DCE1C94();
  }
  if (v11 == *MEMORY[0x24BE3FDD0])
  {
    v15 = a1;
    v16 = xmmword_23DCE4710;
    v12 = 0x4000000000000000;
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BE3FDC8])
  {
    v15 = a1;
    v16 = xmmword_23DCE4700;
    v12 = 0x3F947AE147AE147BLL;
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BE3FDD8])
  {
    v15 = a1;
    v16 = xmmword_23DCE46F0;
    v12 = 0x3FE0000000000000;
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x24BE3FDC0])
  {
    v15 = a1;
    v16 = xmmword_23DCE46E0;
    v12 = 0x3FF0000000000000;
    goto LABEL_11;
  }
  v10(v7, v1, v3);
  *(_QWORD *)&v16 = 0;
  *((_QWORD *)&v16 + 1) = 0xE000000000000000;
  sub_23DCE20F0();
  sub_23DCE1D54();
  sub_23DCE2198();
  result = sub_23DCE21BC();
  __break(1u);
  return result;
}

BOOL _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV06MetricG0V2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  int v2;
  int v3;
  double v4;
  double v5;
  double v6;
  int v7;
  double v8;
  double v9;
  double v10;
  _BOOL8 result;
  _BOOL4 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v18;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  v2 = *((unsigned __int8 *)a1 + 1);
  v3 = *((unsigned __int8 *)a1 + 2);
  v5 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v7 = *((unsigned __int8 *)a2 + 1);
  v9 = a2[1];
  v8 = a2[2];
  v10 = a2[3];
  if (v2 == 2)
  {
    if (v7 != 2)
      return 0;
    goto LABEL_7;
  }
  result = 0;
  v12 = (v2 & 1) == 0;
  if (v7 != 2 && ((v12 ^ v7) & 1) != 0)
  {
LABEL_7:
    if (v3)
      v13 = 0x6E696772616DLL;
    else
      v13 = 7500137;
    if (v3)
      v14 = 0xE600000000000000;
    else
      v14 = 0xE300000000000000;
    if (*((_BYTE *)a2 + 2))
      v15 = 0x6E696772616DLL;
    else
      v15 = 7500137;
    if (*((_BYTE *)a2 + 2))
      v16 = 0xE600000000000000;
    else
      v16 = 0xE300000000000000;
    if (v13 != v15 || v14 != v16)
    {
      v18 = sub_23DCE2270();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v18 & 1) == 0 || v5 != v9 || v4 != v8)
        return result;
      return v6 == v10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5 == v9 && v4 == v8)
      return v6 == v10;
    return 0;
  }
  return result;
}

BOOL _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  double v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];

  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)a1, *(int64x2_t *)a2), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 16), *(int64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) == 0)return 0;
  v3 = *(_OWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_OWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  if (*(_OWORD *)(a1 + 48) != 2)
  {
    v11[0] = *(_OWORD *)(a1 + 48);
    v11[1] = v3;
    if (v5 != 2)
    {
      LOWORD(v8) = v5 & 0xFF01;
      BYTE2(v8) = BYTE2(v5) & 1;
      v9 = v6;
      v10 = v7;
      if (_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV06MetricG0V2eeoiySbAE_AEtFZ_0((double *)v11, &v8))
      {
        return 1;
      }
    }
    return 0;
  }
  return *(_QWORD *)(a2 + 48) == 2;
}

uint64_t _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  uint64_t result;
  unsigned __int8 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  __int128 v77;
  __int128 v78;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v63 = *(_OWORD *)(a1 + 104);
  v64 = *(_OWORD *)(a1 + 88);
  v66 = *(_QWORD *)(a1 + 120);
  v65 = *(_BYTE *)(a1 + 128);
  v61 = *(_OWORD *)(a1 + 152);
  v62 = *(_OWORD *)(a1 + 136);
  v50 = *(_OWORD *)(a1 + 184);
  v51 = *(_OWORD *)(a1 + 168);
  v47 = *(_QWORD *)(a1 + 200);
  v46 = *(_BYTE *)(a1 + 208);
  v48 = *(_OWORD *)(a1 + 232);
  v49 = *(_OWORD *)(a1 + 216);
  v40 = *(_OWORD *)(a1 + 264);
  v41 = *(_OWORD *)(a1 + 248);
  v60 = *(_QWORD *)(a1 + 280);
  v59 = *(_BYTE *)(a1 + 288);
  v38 = *(_OWORD *)(a1 + 312);
  v39 = *(_OWORD *)(a1 + 296);
  v32 = *(_OWORD *)(a1 + 344);
  v33 = *(_OWORD *)(a1 + 328);
  v58 = *(_QWORD *)(a1 + 360);
  v29 = *(_BYTE *)(a1 + 368);
  v30 = *(_OWORD *)(a1 + 392);
  v31 = *(_OWORD *)(a1 + 376);
  v21 = *(_BYTE *)(a1 + 416);
  v22 = *(_QWORD *)(a1 + 424);
  v23 = *(_QWORD *)(a1 + 432);
  v24 = *(_QWORD *)(a1 + 408);
  v54 = *(_OWORD *)(a2 + 104);
  v55 = *(_OWORD *)(a2 + 88);
  v57 = *(_QWORD *)(a2 + 120);
  v56 = *(_BYTE *)(a2 + 128);
  v52 = *(_OWORD *)(a2 + 152);
  v53 = *(_OWORD *)(a2 + 136);
  v44 = *(_OWORD *)(a2 + 184);
  v45 = *(_OWORD *)(a2 + 168);
  v2 = *(_QWORD *)(a2 + 200);
  v3 = *(_BYTE *)(a2 + 208);
  v42 = *(_OWORD *)(a2 + 232);
  v43 = *(_OWORD *)(a2 + 216);
  v36 = *(_OWORD *)(a2 + 264);
  v37 = *(_OWORD *)(a2 + 248);
  v4 = *(_QWORD *)(a2 + 280);
  v5 = *(_BYTE *)(a2 + 288);
  v34 = *(_OWORD *)(a2 + 312);
  v35 = *(_OWORD *)(a2 + 296);
  v27 = *(_OWORD *)(a2 + 344);
  v28 = *(_OWORD *)(a2 + 328);
  v6 = *(_QWORD *)(a2 + 360);
  v7 = *(_BYTE *)(a2 + 368);
  v8 = *(_OWORD *)(a1 + 24);
  v73 = *(_OWORD *)(a1 + 8);
  v74 = v8;
  v9 = *(_OWORD *)(a1 + 72);
  v77 = *(_OWORD *)(a1 + 56);
  v78 = v9;
  v10 = *(_OWORD *)(a2 + 24);
  v67 = *(_OWORD *)(a2 + 8);
  v68 = v10;
  v11 = *(_OWORD *)(a2 + 72);
  v71 = *(_OWORD *)(a2 + 56);
  v72 = v11;
  v25 = *(_OWORD *)(a2 + 376);
  v26 = *(_OWORD *)(a2 + 392);
  v12 = *(_QWORD *)(a2 + 408);
  v14 = *(_QWORD *)(a2 + 424);
  v13 = *(_QWORD *)(a2 + 432);
  v15 = *(_BYTE *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_BYTE *)(a1 + 48);
  v75 = *(_QWORD *)(a1 + 40);
  v76 = v17;
  v69 = v16;
  v70 = v15;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v67))return 0;
  v73 = v64;
  v74 = v63;
  v75 = v66;
  v76 = v65;
  v77 = v62;
  v78 = v61;
  v67 = v55;
  v68 = v54;
  v69 = v57;
  v70 = v56;
  v71 = v53;
  v72 = v52;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v67))return 0;
  v73 = v51;
  v74 = v50;
  v75 = v47;
  v76 = v46;
  v77 = v49;
  v78 = v48;
  v67 = v45;
  v68 = v44;
  v69 = v2;
  v70 = v3;
  v71 = v43;
  v72 = v42;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v67))return 0;
  v73 = v41;
  v74 = v40;
  v75 = v60;
  v76 = v59;
  v77 = v39;
  v78 = v38;
  v67 = v37;
  v68 = v36;
  v69 = v4;
  v70 = v5;
  v71 = v35;
  v72 = v34;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v67))return 0;
  v73 = v33;
  v74 = v32;
  v75 = v58;
  v76 = v29;
  v77 = v31;
  v78 = v30;
  v67 = v28;
  v68 = v27;
  v69 = v6;
  v70 = v7;
  v71 = v25;
  v72 = v26;
  v18 = _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v73, (uint64_t)&v67);
  result = 0;
  if (v18 && v24 == v12)
  {
    sub_23DCC1700(v21);
    if (v23 == v13)
      return v20 & (v22 == v14);
    else
      return 0;
  }
  return result;
}

unint64_t sub_23DCC37FC()
{
  unint64_t result;

  result = qword_256CF9E90;
  if (!qword_256CF9E90)
  {
    result = MEMORY[0x2426416D0](&protocol conformance descriptor for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod, &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod);
    atomic_store(result, (unint64_t *)&qword_256CF9E90);
  }
  return result;
}

uint64_t sub_23DCC3840@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 24);
  return result;
}

_QWORD *sub_23DCC384C(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 24) = *result;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 0;
  return result;
}

void *__swift_memcpy440_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B8uLL);
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 440))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 440) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 440) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[32])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23DCC3B18 + 4 * byte_23DCE475F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23DCC3B4C + 4 * byte_23DCE475A[v4]))();
}

uint64_t sub_23DCC3B4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DCC3B54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DCC3B5CLL);
  return result;
}

uint64_t sub_23DCC3B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DCC3B70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23DCC3B74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DCC3B7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23DCC3B88(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2)
    v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v4 = -2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.Status(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.Status(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23DCC3D64 + 4 * byte_23DCE4769[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23DCC3D98 + 4 * byte_23DCE4764[v4]))();
}

uint64_t sub_23DCC3D98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DCC3DA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23DCC3DA8);
  return result;
}

uint64_t sub_23DCC3DB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23DCC3DBCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23DCC3DC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23DCC3DC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.Status()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.Status;
}

unint64_t sub_23DCC3DE8()
{
  unint64_t result;

  result = qword_256CF9E98;
  if (!qword_256CF9E98)
  {
    result = MEMORY[0x2426416D0](&unk_23DCE49AC, &type metadata for SleepingSampleDaySummaryCollectionAnalytics.Status);
    atomic_store(result, (unint64_t *)&qword_256CF9E98);
  }
  return result;
}

uint64_t sub_23DCC3E2C()
{
  unint64_t v0;

  v0 = sub_23DCE2234();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

void sub_23DCC3E74()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254325668)
  {
    sub_23DC876C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254325668);
  }
}

uint64_t sub_23DCC3ED8(uint64_t a1)
{
  uint64_t v2;

  sub_23DC82800(0, &qword_2543252F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FDB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23DCC3F2C()
{
  unint64_t result;

  result = qword_254325608;
  if (!qword_254325608)
  {
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE13E0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_254325608);
  }
  return result;
}

void sub_23DCC3F8C()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  id v27;
  char *v28;
  unint64_t v29;
  id v30;
  unsigned __int8 v31;
  id v32;
  void *v33;
  char *v34;
  id v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  unsigned __int8 v57;
  id v58;
  void *v59;
  char *v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  id v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  id v73;
  char *v74;
  unint64_t v75;
  char *v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  int v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  objc_class *v91;
  uint64_t v92;
  char *v93;
  objc_super v94;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_23DCE122C();
  v86 = *(_QWORD *)(v2 - 8);
  v87 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v85 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23DCE1B14();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v88 = (char *)&v80 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v80 - v10;
  sub_23DCE1AFC();
  v12 = v0;
  v13 = sub_23DCE1B08();
  v14 = sub_23DCE1EEC();
  v15 = os_log_type_enabled(v13, v14);
  v91 = ObjectType;
  if (v15)
  {
    v90 = v4;
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v93 = (char *)v17;
    *(_DWORD *)v16 = 136446466;
    v18 = sub_23DCE2354();
    v92 = sub_23DCA47EC(v18, v19, (uint64_t *)&v93);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v20 = objc_msgSend(v12, (SEL)&stru_250E987B8.type);
    v21 = objc_msgSend(v20, sel_debugIdentifier);

    if (v21)
    {
      v22 = sub_23DCE1D30();
      v24 = v23;

    }
    else
    {
      v27 = objc_msgSend(v12, sel_queryUUID);
      v28 = v85;
      sub_23DCE1214();

      v22 = sub_23DCE11F0();
      v24 = v29;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v28, v87);
    }
    v92 = sub_23DCA47EC(v22, v24, (uint64_t *)&v93);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v13, v14, "[%{public}s:%s] Training Load Query started", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v17, -1, -1);
    MEMORY[0x24264179C](v16, -1, -1);

    v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26 = v90;
    v25(v11, v90);
    ObjectType = v91;
  }
  else
  {

    v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    v25(v11, v4);
    v26 = v4;
  }
  v94.receiver = v12;
  v94.super_class = ObjectType;
  objc_msgSendSuper2(&v94, sel__queue_start);
  v30 = objc_msgSend(v12, sel_configuration);
  v31 = objc_msgSend(v30, sel_shouldDeactivateAfterInitialResults);

  if ((v31 & 1) == 0)
  {
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E80]), sel_initWithIdentifier_, *MEMORY[0x24BDD36E0]);
    if (v32)
    {
      v33 = v32;
      v34 = v88;
      sub_23DCE1AFC();
      v35 = v12;
      v36 = sub_23DCE1B08();
      v37 = sub_23DCE1EEC();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        v83 = v37;
        v81 = v12;
        v38 = v26;
        v39 = swift_slowAlloc();
        v82 = swift_slowAlloc();
        v93 = (char *)v82;
        *(_DWORD *)v39 = 136446466;
        v40 = sub_23DCE2354();
        v92 = sub_23DCA47EC(v40, v41, (uint64_t *)&v93);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        v42 = objc_msgSend(v35, (SEL)&stru_250E987B8.type);
        v43 = objc_msgSend(v42, sel_debugIdentifier);

        v90 = v38;
        v84 = v25;
        if (v43)
        {
          v44 = sub_23DCE1D30();
          v46 = v45;

        }
        else
        {
          v49 = objc_msgSend(v35, sel_queryUUID);
          v50 = v85;
          sub_23DCE1214();

          v44 = sub_23DCE11F0();
          v46 = v51;
          (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v87);
        }
        v12 = v81;
        v92 = sub_23DCA47EC(v44, v46, (uint64_t *)&v93);
        sub_23DCE1FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v36, (os_log_type_t)v83, "[%{public}s:%s] Training Load Query, adding observer on workout effort", (uint8_t *)v39, 0x16u);
        v52 = v82;
        swift_arrayDestroy();
        MEMORY[0x24264179C](v52, -1, -1);
        MEMORY[0x24264179C](v39, -1, -1);

        v47 = v88;
        v26 = v90;
        v48 = v90;
        v25 = v84;
      }
      else
      {

        v47 = v34;
        v48 = v26;
      }
      v25(v47, v48);
      v53 = objc_msgSend(v35, sel_profile);
      if (v53)
      {
        v54 = v53;
        v55 = objc_msgSend(v53, sel_associationManager);

        objc_msgSend(v55, sel_addObserver_forDataType_, v35, v33);
      }

    }
  }
  v56 = objc_msgSend(v12, sel_configuration);
  v57 = objc_msgSend(v56, sel_shouldDeactivateAfterInitialResults);

  if ((v57 & 1) == 0)
  {
    v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E80]), sel_initWithIdentifier_, *MEMORY[0x24BDD3588]);
    if (v58)
    {
      v59 = v58;
      v60 = v89;
      sub_23DCE1AFC();
      v61 = v12;
      v62 = sub_23DCE1B08();
      v63 = sub_23DCE1EEC();
      if (os_log_type_enabled(v62, v63))
      {
        v90 = v26;
        v64 = swift_slowAlloc();
        v88 = (char *)swift_slowAlloc();
        v93 = v88;
        *(_DWORD *)v64 = 136446466;
        v65 = sub_23DCE2354();
        v92 = sub_23DCA47EC(v65, v66, (uint64_t *)&v93);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 12) = 2080;
        v67 = objc_msgSend(v61, (SEL)&stru_250E987B8.type);
        v68 = objc_msgSend(v67, sel_debugIdentifier);

        v69 = v25;
        if (v68)
        {
          v70 = sub_23DCE1D30();
          v72 = v71;

        }
        else
        {
          v73 = objc_msgSend(v61, sel_queryUUID);
          v74 = v85;
          sub_23DCE1214();

          v70 = sub_23DCE11F0();
          v72 = v75;
          (*(void (**)(char *, uint64_t))(v86 + 8))(v74, v87);
        }
        v92 = sub_23DCA47EC(v70, v72, (uint64_t *)&v93);
        sub_23DCE1FD0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v62, v63, "[%{public}s:%s] Training Load Query, adding observer on estimated workout effort", (uint8_t *)v64, 0x16u);
        v76 = v88;
        swift_arrayDestroy();
        MEMORY[0x24264179C](v76, -1, -1);
        MEMORY[0x24264179C](v64, -1, -1);

        v69(v89, v90);
      }
      else
      {

        v25(v60, v26);
      }
      v77 = objc_msgSend(v61, sel_profile);
      if (v77)
      {
        v78 = v77;
        v79 = objc_msgSend(v77, sel_associationManager);

        objc_msgSend(v79, sel_addObserver_forDataType_, v61, v59);
      }

    }
  }
  sub_23DCC48B8();
}

void sub_23DCC48B8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  int v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  unint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  id v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  void *v84;
  id v85;
  unint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  id v90;
  id v91;
  id v92;
  unint64_t v93;
  id v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t ObjectType;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  void *v106;
  uint64_t v107[4];

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_23DCE1B14();
  v101 = *(_QWORD *)(v2 - 8);
  v102 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v97 - v6;
  v8 = sub_23DCE122C();
  v103 = *(_QWORD *)(v8 - 8);
  v104 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCCD1A8(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v97 - v15;
  v17 = sub_23DCE1B44();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v20 = objc_msgSend(v1, sel_queryQueue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x24BEE5610], v17);
  v21 = sub_23DCE1B50();
  (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  v22 = objc_msgSend(v1, sel_clientProxy);
  if (!v22)
    goto LABEL_40;
  v17 = (uint64_t)v22;
  v23 = objc_msgSend(v22, sel_remoteObjectProxy);
  swift_unknownObjectRelease();
  sub_23DCE2000();
  swift_unknownObjectRelease();
  sub_23DCCD1C4();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_40;
  v105 = v106;
  v24 = objc_msgSend(v1, sel_profile);
  if (!v24)
  {
    sub_23DCE1AFC();
    v34 = v1;
    v35 = sub_23DCE1B08();
    v36 = sub_23DCE1EEC();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v107[0] = v38;
      *(_DWORD *)v37 = 136446466;
      v39 = sub_23DCE2354();
      v106 = (void *)sub_23DCA47EC(v39, v40, v107);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      v41 = objc_msgSend(v34, sel_configuration);
      v42 = objc_msgSend(v41, sel_debugIdentifier);

      if (v42)
      {
        v43 = sub_23DCE1D30();
        v45 = v44;

      }
      else
      {
        v77 = objc_msgSend(v34, sel_queryUUID);
        sub_23DCE1214();

        v43 = sub_23DCE11F0();
        v45 = v78;
        (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
      }
      v106 = (void *)sub_23DCA47EC(v43, v45, v107);
      sub_23DCE1FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v35, v36, "[%{public}s:%s] Training Load Query, no profile", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v38, -1, -1);
      MEMORY[0x24264179C](v37, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v5, v102);
    sub_23DCE1D30();
    v79 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v80 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v81 = objc_msgSend(v79, sel_initWithDomain_code_userInfo_, v80, 127, 0);

    v82 = (void *)sub_23DCE1148();
    v83 = objc_msgSend(v34, sel_queryUUID);
    sub_23DCE1214();

    v84 = (void *)sub_23DCE11FC();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
    objc_msgSend(v105, sel_client_deliverError_forQuery_, v82, v84);
    swift_unknownObjectRelease();
    goto LABEL_32;
  }
  v99 = v24;
  v25 = objc_msgSend(v1, sel_configuration);
  sub_23DCE19AC();
  v26 = swift_dynamicCastClass();
  if (!v26)
  {

    sub_23DCE1AFC();
    v46 = v1;
    v47 = sub_23DCE1B08();
    v48 = sub_23DCE1EEC();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v98 = swift_slowAlloc();
      v107[0] = v98;
      *(_DWORD *)v49 = 136446466;
      v50 = sub_23DCE2354();
      v106 = (void *)sub_23DCA47EC(v50, v51, v107);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      v52 = objc_msgSend(v46, sel_configuration);
      v53 = objc_msgSend(v52, sel_debugIdentifier);

      if (v53)
      {
        v54 = sub_23DCE1D30();
        v56 = v55;

      }
      else
      {
        v85 = objc_msgSend(v46, sel_queryUUID);
        sub_23DCE1214();

        v54 = sub_23DCE11F0();
        v56 = v86;
        (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
      }
      v62 = v105;
      v106 = (void *)sub_23DCA47EC(v54, v56, v107);
      sub_23DCE1FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v47, v48, "[%{public}s:%s] Training Load Query, no configuration", (uint8_t *)v49, 0x16u);
      v87 = v98;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v87, -1, -1);
      MEMORY[0x24264179C](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v101 + 8))(v7, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v101 + 8))(v7, v102);
      v62 = v105;
    }
    sub_23DCE1D30();
    v88 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v89 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v90 = objc_msgSend(v88, sel_initWithDomain_code_userInfo_, v89, 100, 0);

    v82 = (void *)sub_23DCE1148();
    v91 = objc_msgSend(v46, sel_queryUUID);
    sub_23DCE1214();

    v84 = (void *)sub_23DCE11FC();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
    objc_msgSend(v62, sel_client_deliverError_forQuery_, v82, v84);
    swift_unknownObjectRelease();

LABEL_32:
    return;
  }
  v27 = (void (*)(uint64_t))v26;
  sub_23DCE19A0();
  v18 = sub_23DCE140C();
  v17 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18) == 1)
    goto LABEL_40;
  sub_23DC82858((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_23DCCD1A8);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v14, v18);
  if (v28 == *MEMORY[0x24BE3FD78])
  {
    v29 = objc_msgSend(v1, sel_configuration);
    v30 = objc_msgSend(v29, sel_debugIdentifier);

    if (v30)
    {
      v31 = sub_23DCE1D30();
      v33 = v32;

    }
    else
    {
      v68 = objc_msgSend(v1, sel_queryUUID);
      sub_23DCE1214();

      v31 = sub_23DCE11F0();
      v33 = v69;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
    }
    v70 = v99;
    v71 = v31;
    v72 = v33;
    v73 = (uint64_t)v105;
    v74 = v99;
    v75 = (char *)v27;
    v76 = 0;
  }
  else
  {
    if (v28 != *MEMORY[0x24BE3FD68])
    {
      if (v28 != *MEMORY[0x24BE3FD70])
      {
        while (1)
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v18);
LABEL_40:
          sub_23DCE21BC();
          __break(1u);
        }
      }
      v63 = objc_msgSend(v1, sel_configuration);
      v64 = objc_msgSend(v63, sel_debugIdentifier);

      if (v64)
      {
        v65 = sub_23DCE1D30();
        v67 = v66;

      }
      else
      {
        v94 = objc_msgSend(v1, sel_queryUUID);
        sub_23DCE1214();

        v65 = sub_23DCE11F0();
        v67 = v95;
        (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
      }
      v96 = v99;
      sub_23DCC7AEC(v65, v67, v105, (uint64_t)v99, v27);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      goto LABEL_38;
    }
    v57 = objc_msgSend(v1, sel_configuration);
    v58 = objc_msgSend(v57, sel_debugIdentifier);

    if (v58)
    {
      v59 = sub_23DCE1D30();
      v61 = v60;

    }
    else
    {
      v92 = objc_msgSend(v1, sel_queryUUID);
      sub_23DCE1214();

      v59 = sub_23DCE11F0();
      v61 = v93;
      (*(void (**)(char *, uint64_t))(v103 + 8))(v10, v104);
    }
    v70 = v99;
    v71 = v59;
    v72 = v61;
    v73 = (uint64_t)v105;
    v74 = v99;
    v75 = (char *)v27;
    v76 = 1;
  }
  sub_23DCC6F64(v71, v72, v73, v74, v75, v76);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
LABEL_38:
  sub_23DC827C4((uint64_t)v16, (uint64_t (*)(_QWORD))sub_23DCCD1A8);
}

void sub_23DCC554C()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  v36 = sub_23DCE122C();
  v2 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE1B14();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39.receiver = v0;
  v39.super_class = ObjectType;
  objc_msgSendSuper2(&v39, sel__queue_stop);
  sub_23DCE1AFC();
  v9 = v0;
  v10 = sub_23DCE1B08();
  v11 = sub_23DCE1EEC();
  if (os_log_type_enabled(v10, v11))
  {
    v34 = v6;
    v35 = v5;
    v12 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v38 = v33;
    *(_DWORD *)v12 = 136446466;
    v13 = sub_23DCE2354();
    v37 = sub_23DCA47EC(v13, v14, &v38);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v15 = objc_msgSend(v9, sel_configuration);
    v16 = objc_msgSend(v15, sel_debugIdentifier);

    if (v16)
    {
      v17 = sub_23DCE1D30();
      v19 = v18;

    }
    else
    {
      v20 = objc_msgSend(v9, sel_queryUUID);
      sub_23DCE1214();

      v17 = sub_23DCE11F0();
      v19 = v21;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v36);
    }
    v37 = sub_23DCA47EC(v17, v19, &v38);
    sub_23DCE1FD0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v10, v11, "[%{public}s:%s] Training Load Query, Queue Stop, removing observer for effort", (uint8_t *)v12, 0x16u);
    v22 = v33;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v22, -1, -1);
    MEMORY[0x24264179C](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E80]), sel_initWithIdentifier_, *MEMORY[0x24BDD36E0]);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v9, sel_profile);
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_associationManager);

      objc_msgSend(v27, sel_removeObserver_forDataType_, v9, v24);
    }

  }
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3E80]), sel_initWithIdentifier_, *MEMORY[0x24BDD3588]);
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend(v9, sel_profile);
    if (v30)
    {
      v31 = v30;
      v32 = objc_msgSend(v30, sel_associationManager);

      objc_msgSend(v32, sel_removeObserver_forDataType_, v9, v29);
    }

  }
}

uint64_t sub_23DCC59D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  char *v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  id v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  void *v90;
  id v91;
  char *v92;
  uint64_t (*v93)(uint64_t);
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t (*v96)(char *, uint64_t);
  char *v97;
  uint64_t v98;
  char *v99;
  id v100;
  char *v101;
  unint64_t v102;
  char *v103;
  id v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  id v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  id v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  char *v122;
  unint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  void (*v129)(char *, uint64_t);
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  id v134;
  char *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  objc_class *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t aBlock[6];
  uint64_t v162;
  objc_super v163;

  v6 = v5;
  v160 = a5;
  ObjectType = (objc_class *)swift_getObjectType();
  v148 = sub_23DCE122C();
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v146 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE1B14();
  v158 = *(_QWORD *)(v12 - 8);
  v159 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v152 = (char *)&v139 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v151 = (char *)&v139 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v139 = (char *)&v139 - v20;
  v145 = (void (*)(char *, uint64_t))sub_23DCE1B20();
  v144 = *((_QWORD *)v145 - 1);
  MEMORY[0x24BDAC7A8](v145);
  v143 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_23DCE1B38();
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v140 = (char *)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, &qword_2543252E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v139 - v24;
  v155 = sub_23DCE11E4();
  v26 = *(_QWORD *)(v155 - 8);
  v27 = MEMORY[0x24BDAC7A8](v155);
  v150 = (char *)&v139 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v153 = (char *)&v139 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v156 = (char *)&v139 - v31;
  sub_23DCCD0A4();
  v33 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v157 = (uint64_t)&v139 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC802D0(0, (unint64_t *)&unk_256CF9EB0);
  v35 = (void *)sub_23DCE1DB4();
  v163.receiver = v6;
  v163.super_class = ObjectType;
  v154 = ObjectType;
  v149 = a2;
  objc_msgSendSuper2(&v163, sel_associationsUpdatedForObject_subObject_type_objects_anchor_, a1, a2, a3, v35, v160);

  objc_opt_self();
  v36 = swift_dynamicCastObjCClass();
  if (v36)
  {
    v37 = (void *)v36;
    v160 = a1;
    swift_unknownObjectRetain();
    v38 = (char *)objc_msgSend(v6, sel_configuration);
    sub_23DCE19AC();
    if (swift_dynamicCastClass())
    {
      v152 = v38;
      sub_23DCC6B34(v157, v157 + *(int *)(v33 + 48));
      sub_23DCE1988();
      v39 = sub_23DCE12E0();
      v40 = *(_QWORD *)(v39 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v25, 1, v39);
      if ((_DWORD)result == 1)
      {
        __break(1u);
        return result;
      }
      v42 = v156;
      sub_23DCE1C58();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v39);
      v43 = objc_msgSend(v37, sel_endDate);
      v44 = v153;
      sub_23DCE11C0();

      sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v45 = v155;
      LOBYTE(v43) = sub_23DCE1CB8();
      v46 = *(void (**)(char *, uint64_t))(v26 + 8);
      v46(v44, v45);
      if ((v43 & 1) != 0)
      {
        v47 = v151;
        sub_23DCE1AFC();
        v48 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
        v49 = v150;
        v48(v150, v42, v45);
        swift_unknownObjectRetain_n();
        v50 = v6;
        v51 = sub_23DCE1B08();
        LODWORD(v149) = sub_23DCE1EEC();
        if (os_log_type_enabled(v51, (os_log_type_t)v149))
        {
          v145 = v46;
          v52 = swift_slowAlloc();
          v144 = swift_slowAlloc();
          aBlock[0] = v144;
          *(_DWORD *)v52 = 136446978;
          v53 = sub_23DCE2354();
          v162 = sub_23DCA47EC(v53, v54, aBlock);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v52 + 12) = 2080;
          v55 = objc_msgSend(v50, sel_configuration);
          v56 = objc_msgSend(v55, sel_debugIdentifier);

          if (v56)
          {
            v57 = sub_23DCE1D30();
            v59 = v58;

          }
          else
          {
            v121 = objc_msgSend(v50, sel_queryUUID);
            v122 = v146;
            sub_23DCE1214();

            v57 = sub_23DCE11F0();
            v59 = v123;
            (*(void (**)(char *, uint64_t))(v147 + 8))(v122, v148);
          }
          v162 = sub_23DCA47EC(v57, v59, aBlock);
          sub_23DCE1FD0();

          swift_bridgeObjectRelease();
          *(_WORD *)(v52 + 22) = 2080;
          v124 = objc_msgSend(v37, sel_endDate);
          sub_23DCE11C0();

          sub_23DC80074(&qword_256CF9690, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
          v125 = v155;
          v126 = sub_23DCE224C();
          v128 = v127;
          v129 = v145;
          v145(v44, v125);
          v162 = sub_23DCA47EC(v126, v128, aBlock);
          sub_23DCE1FD0();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v52 + 32) = 2080;
          v130 = v150;
          v131 = sub_23DCE224C();
          v162 = sub_23DCA47EC(v131, v132, aBlock);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          v129(v130, v125);
          _os_log_impl(&dword_23DC7C000, v51, (os_log_type_t)v149, "[%{public}s:%s] Associations Updated, workout's end date %s is older than lower bound of query range %s", (uint8_t *)v52, 0x2Au);
          v133 = v144;
          swift_arrayDestroy();
          MEMORY[0x24264179C](v133, -1, -1);
          MEMORY[0x24264179C](v52, -1, -1);
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v158 + 8))(v151, v159);
          v129(v156, v125);
          return sub_23DC827C4(v157, (uint64_t (*)(_QWORD))sub_23DCCD0A4);
        }

        v46(v49, v45);
        swift_unknownObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v158 + 8))(v47, v159);
        v99 = v42;
      }
      else
      {
        v87 = v149;
        if (!v149
          || (sub_23DC802D0(0, (unint64_t *)&unk_256CF9EE8),
              objc_msgSend(v87, sel_isKindOfClass_, swift_getObjCClassFromMetadata())))
        {
          v88 = objc_msgSend(v6, sel_queryQueue);
          v89 = swift_allocObject();
          *(_QWORD *)(v89 + 16) = v6;
          aBlock[4] = (uint64_t)sub_23DCCD128;
          aBlock[5] = v89;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_23DCC6E74;
          aBlock[3] = (uint64_t)&block_descriptor_7;
          v90 = _Block_copy(aBlock);
          v91 = v6;
          v92 = v140;
          sub_23DCE1B2C();
          v162 = MEMORY[0x24BEE4AF8];
          v93 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
          sub_23DC80074(&qword_256CF9ED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
          sub_23DC82800(0, &qword_256CF9ED8, v93, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
          sub_23DCCD148();
          v94 = v143;
          v95 = v145;
          sub_23DCE203C();
          MEMORY[0x242640D28](0, v92, v94, v90);
          _Block_release(v90);
          swift_unknownObjectRelease();

          (*(void (**)(char *, _QWORD *))(v144 + 8))(v94, v95);
          (*(void (**)(char *, uint64_t))(v141 + 8))(v92, v142);
          v46(v156, v45);
          sub_23DC827C4(v157, (uint64_t (*)(_QWORD))sub_23DCCD0A4);
          return swift_release();
        }
        v103 = v139;
        sub_23DCE1AFC();
        v104 = v6;
        v105 = sub_23DCE1B08();
        v106 = sub_23DCE1EEC();
        if (os_log_type_enabled(v105, v106))
        {
          v145 = v46;
          v107 = swift_slowAlloc();
          v108 = swift_slowAlloc();
          aBlock[0] = v108;
          *(_DWORD *)v107 = 136446466;
          v109 = sub_23DCE2354();
          v162 = sub_23DCA47EC(v109, v110, aBlock);
          sub_23DCE1FD0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v107 + 12) = 2080;
          v111 = objc_msgSend(v104, sel_configuration);
          v112 = objc_msgSend(v111, sel_debugIdentifier);

          if (v112)
          {
            v113 = sub_23DCE1D30();
            v115 = v114;

          }
          else
          {
            v134 = objc_msgSend(v104, sel_queryUUID);
            v135 = v146;
            sub_23DCE1214();

            v113 = sub_23DCE11F0();
            v115 = v136;
            (*(void (**)(char *, uint64_t))(v147 + 8))(v135, v148);
          }
          v138 = v158;
          v137 = v159;
          v162 = sub_23DCA47EC(v113, v115, aBlock);
          sub_23DCE1FD0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v105, v106, "[%{public}s:%s] Associations Updated, sub-object is NOT workout activity", (uint8_t *)v107, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x24264179C](v108, -1, -1);
          MEMORY[0x24264179C](v107, -1, -1);
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v137);
          v145(v156, v155);
          return sub_23DC827C4(v157, (uint64_t (*)(_QWORD))sub_23DCCD0A4);
        }
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v158 + 8))(v103, v159);
        v99 = v156;
      }
      v46(v99, v45);
      return sub_23DC827C4(v157, (uint64_t (*)(_QWORD))sub_23DCCD0A4);
    }

    v74 = v152;
    sub_23DCE1AFC();
    v75 = v6;
    v76 = sub_23DCE1B08();
    v77 = sub_23DCE1EEC();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      aBlock[0] = v79;
      *(_DWORD *)v78 = 136446466;
      v80 = sub_23DCE2354();
      v162 = sub_23DCA47EC(v80, v81, aBlock);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2080;
      v82 = objc_msgSend(v75, sel_configuration);
      v83 = objc_msgSend(v82, sel_debugIdentifier);

      if (v83)
      {
        v84 = sub_23DCE1D30();
        v86 = v85;

      }
      else
      {
        v116 = objc_msgSend(v75, sel_queryUUID);
        v117 = v146;
        sub_23DCE1214();

        v84 = sub_23DCE11F0();
        v86 = v118;
        (*(void (**)(char *, uint64_t))(v147 + 8))(v117, v148);
      }
      v120 = v158;
      v119 = v159;
      v162 = sub_23DCA47EC(v84, v86, aBlock);
      sub_23DCE1FD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23DC7C000, v76, v77, "[%{public}s:%s] Associations Updated, No Custom Configuration for Query", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v79, -1, -1);
      MEMORY[0x24264179C](v78, -1, -1);
      swift_unknownObjectRelease();

      v96 = *(uint64_t (**)(char *, uint64_t))(v120 + 8);
      v97 = v152;
      v98 = v119;
      return v96(v97, v98);
    }

    swift_unknownObjectRelease();
    v96 = *(uint64_t (**)(char *, uint64_t))(v158 + 8);
    v97 = v74;
LABEL_19:
    v98 = v159;
    return v96(v97, v98);
  }
  sub_23DCE1AFC();
  v60 = v6;
  v61 = sub_23DCE1B08();
  v62 = sub_23DCE1EEC();
  v63 = v15;
  if (!os_log_type_enabled(v61, v62))
  {

    v96 = *(uint64_t (**)(char *, uint64_t))(v158 + 8);
    v97 = v15;
    goto LABEL_19;
  }
  v64 = swift_slowAlloc();
  v65 = swift_slowAlloc();
  aBlock[0] = v65;
  *(_DWORD *)v64 = 136446466;
  v66 = sub_23DCE2354();
  v162 = sub_23DCA47EC(v66, v67, aBlock);
  sub_23DCE1FD0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v64 + 12) = 2080;
  v68 = objc_msgSend(v60, sel_configuration);
  v69 = objc_msgSend(v68, sel_debugIdentifier);

  v70 = v159;
  if (v69)
  {
    v71 = sub_23DCE1D30();
    v73 = v72;

  }
  else
  {
    v100 = objc_msgSend(v60, sel_queryUUID);
    v101 = v146;
    sub_23DCE1214();

    v71 = sub_23DCE11F0();
    v73 = v102;
    (*(void (**)(char *, uint64_t))(v147 + 8))(v101, v148);
  }
  v162 = sub_23DCA47EC(v71, v73, aBlock);
  sub_23DCE1FD0();

  swift_bridgeObjectRelease();
  _os_log_impl(&dword_23DC7C000, v61, v62, "[%{public}s:%s] Associations Updated, object is NOT workout", (uint8_t *)v64, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24264179C](v65, -1, -1);
  MEMORY[0x24264179C](v64, -1, -1);

  return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v63, v70);
}

uint64_t sub_23DCC6B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t result;
  char *v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v34 = a2;
  v32 = a1;
  sub_23DC82800(0, &qword_2543256D0, (uint64_t (*)(uint64_t))sub_23DCA8F2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v30 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v30 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - v12;
  v14 = sub_23DCE1C64();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v33 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v31 = (char *)&v30 - v18;
  sub_23DCE1994();
  sub_23DCA8F2C(0);
  v20 = v19;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
  result = v21(v13, 1, v19);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v23 = &v13[*(int *)(v20 + 36)];
  v30 = v15;
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
  v24(v34, v23, v14);
  sub_23DC827C4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  sub_23DCE1994();
  result = v21(v11, 1, v20);
  if ((_DWORD)result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_23DCE1FF4();
  v25 = v35;
  sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  if (v25 > 28)
  {
    sub_23DCE1994();
    result = v21(v5, 1, v20);
    if ((_DWORD)result == 1)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    v21 = v33;
    v24((uint64_t)v33, v5, v14);
    sub_23DC827C4((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    sub_23DC9BD78();
    if (!__OFSUB__(0, (*(uint64_t (**)(void))(v26 + 32))()))
      goto LABEL_10;
    __break(1u);
  }
  sub_23DCE1994();
  result = v21(v8, 1, v20);
  if ((_DWORD)result != 1)
  {
    v21 = v33;
    v24((uint64_t)v33, &v8[*(int *)(v20 + 36)], v14);
    sub_23DC827C4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    sub_23DC9BD78();
    result = (*(uint64_t (**)(void))(v27 + 32))();
    if (!__OFADD__(result, 28))
    {
LABEL_10:
      v28 = v31;
      sub_23DCE1C40();
      v29 = v30;
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v30 + 8))(v21, v14);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v32, v28, v14);
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_23DCC6E74(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23DCC6F64(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, char *a5, uint64_t a6)
{
  uint64_t ObjectType;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void *ObjCClassFromMetadata;
  id v63;
  id v64;
  char *v65;
  void *v66;
  id v67;
  id v68;
  char *v69;
  id v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  void *v91;
  id v92;
  id v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  void *v97;
  uint64_t v98;
  int v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  id aBlock[6];
  uint64_t v127;

  v121 = a6;
  v104 = a4;
  v108 = a3;
  ObjectType = swift_getObjectType();
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23DC82800(0, &qword_2543252E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v101 = (char *)&v97 - v12;
  v109 = sub_23DCE113C();
  v107 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v124 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, &qword_2543252E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v10);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v100 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v110 = (char *)&v97 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v112 = (char *)&v97 - v19;
  v125 = sub_23DCE11E4();
  v120 = *(_QWORD *)(v125 - 8);
  v20 = MEMORY[0x24BDAC7A8](v125);
  v118 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v123 = (char *)&v97 - v23;
  v103 = v24;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v97 - v25;
  v105 = sub_23DCE1C64();
  v119 = *(_QWORD *)(v105 - 8);
  v27 = MEMORY[0x24BDAC7A8](v105);
  v117 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v116 = (char *)&v97 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v97 - v32;
  v102 = v34;
  MEMORY[0x24BDAC7A8](v31);
  v36 = (char *)&v97 - v35;
  v37 = sub_23DCE1B14();
  v111 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v97 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  swift_bridgeObjectRetain_n();
  v40 = sub_23DCE1B08();
  v41 = sub_23DCE1EEC();
  v99 = v41;
  v42 = os_log_type_enabled(v40, v41);
  v106 = ObjectType;
  v113 = a1;
  v114 = v26;
  v122 = v33;
  if (v42)
  {
    v43 = swift_slowAlloc();
    v98 = v37;
    v44 = v43;
    v97 = (void *)swift_slowAlloc();
    aBlock[0] = v97;
    *(_DWORD *)v44 = 136446466;
    v45 = sub_23DCE2354();
    v127 = sub_23DCA47EC(v45, v46, (uint64_t *)aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    swift_bridgeObjectRetain();
    v127 = sub_23DCA47EC(v113, a2, (uint64_t *)aBlock);
    v33 = v122;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23DC7C000, v40, (os_log_type_t)v99, "[%{public}s:%s] Query Type is Workout", (uint8_t *)v44, 0x16u);
    v47 = v97;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v47, -1, -1);
    MEMORY[0x24264179C](v44, -1, -1);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v39, v98);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v39, v37);
  }
  sub_23DCC6B34((uint64_t)v36, (uint64_t)v33);
  v48 = v112;
  sub_23DCE1988();
  v49 = sub_23DCE12E0();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  result = v51(v48, 1, v49);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v111 = a2;
  v115 = v36;
  sub_23DCE1C58();
  v53 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53(v48, v49);
  v54 = v110;
  sub_23DCE1988();
  result = v51(v54, 1, v49);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_23DCE1C58();
  v53(v54, v49);
  sub_23DCE1988();
  v55 = sub_23DCE12EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v101, 1, 1, v55);
  sub_23DCE1130();
  sub_23DC802D0(0, &qword_256CF9F10);
  sub_23DC82800(0, &qword_256CF9F18, (uint64_t (*)(uint64_t))sub_23DCCD218, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_23DCE39C0;
  v57 = sub_23DCE116C();
  v58 = sub_23DC802D0(0, &qword_256CF9F28);
  *(_QWORD *)(v56 + 56) = v58;
  v59 = sub_23DCCD26C((unint64_t *)&unk_256CF9F30, &qword_256CF9F28, 0x24BDBCE60, MEMORY[0x24BEE5BE8]);
  *(_QWORD *)(v56 + 64) = v59;
  *(_QWORD *)(v56 + 32) = v57;
  v60 = sub_23DCE116C();
  *(_QWORD *)(v56 + 96) = v58;
  *(_QWORD *)(v56 + 104) = v59;
  *(_QWORD *)(v56 + 72) = v60;
  v61 = (char *)sub_23DCE1EBC();
  v127 = MEMORY[0x24BEE4B08];
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v63 = objc_msgSend(ObjCClassFromMetadata, sel_quantityTypeForIdentifier_, *MEMORY[0x24BDD36E0]);
  if (v63)
  {
    sub_23DCACDE4(aBlock, v63);

  }
  v112 = a5;
  v64 = objc_msgSend(ObjCClassFromMetadata, sel_quantityTypeForIdentifier_, *MEMORY[0x24BDD3588]);
  v65 = v115;
  if (v64)
  {
    sub_23DCACDE4(aBlock, v64);

  }
  sub_23DC802D0(0, &qword_256CF9F40);
  sub_23DCCD26C(qword_256CF9BF0, &qword_256CF9F40, 0x24BDD3DC0, MEMORY[0x24BEE5BD8]);
  v66 = (void *)sub_23DCE1E2C();
  swift_bridgeObjectRelease();
  v67 = objc_msgSend(v61, sel_hk_filterRepresentationForDataTypes_isSubpredicate_, v66, 0);

  v68 = objc_allocWithZone(MEMORY[0x24BE40D08]);
  v69 = (char *)v67;
  v70 = v104;
  v71 = sub_23DCE116C();
  v110 = v61;
  v72 = (void *)v71;
  v73 = (void *)sub_23DCE110C();
  v101 = v69;
  v104 = objc_msgSend(v68, sel_initWithFilter_options_anchorDate_intervalComponents_profile_, v69, v121, v72, v73, v70);

  v74 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v75 = v120;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v118, v123, v125);
  v76 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
  v77 = v119;
  v78 = v105;
  v76(v116, v65, v105);
  v76(v117, v122, v78);
  v79 = (*(unsigned __int8 *)(v75 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  v80 = (v103 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
  v81 = *(unsigned __int8 *)(v77 + 80);
  v82 = (v81 + v80 + 8) & ~v81;
  v83 = (v102 + v81 + v82) & ~v81;
  v84 = (v102 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
  v85 = (char *)swift_allocObject();
  v86 = v113;
  *((_QWORD *)v85 + 2) = v74;
  *((_QWORD *)v85 + 3) = v86;
  v87 = v108;
  *((_QWORD *)v85 + 4) = v111;
  *((_QWORD *)v85 + 5) = v87;
  *((_QWORD *)v85 + 6) = v121;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v85[v79], v118, v125);
  v88 = v112;
  *(_QWORD *)&v85[v80] = v112;
  v89 = v119;
  v90 = *(void (**)(char *, char *, uint64_t))(v119 + 32);
  v90(&v85[v82], v116, v78);
  v90(&v85[v83], v117, v78);
  *(_QWORD *)&v85[v84] = v106;
  aBlock[4] = sub_23DCCD3E0;
  aBlock[5] = v85;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23DCCCE78;
  aBlock[3] = &block_descriptor_9;
  v91 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v92 = v88;
  swift_release();
  v93 = v104;
  objc_msgSend(v104, sel_fetchTrainingLoadCollectionWithCompletion_, v91);
  _Block_release(v91);

  (*(void (**)(char *, uint64_t))(v107 + 8))(v124, v109);
  v94 = *(void (**)(char *, uint64_t))(v120 + 8);
  v95 = v125;
  v94(v123, v125);
  v94(v114, v95);
  v96 = *(void (**)(char *, uint64_t))(v89 + 8);
  v96(v122, v78);
  return ((uint64_t (*)(char *, uint64_t))v96)(v115, v78);
}

uint64_t sub_23DCC7AEC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t a1))
{
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  void *v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void *v117;
  id v118;
  unsigned int v119;
  id v120;
  unint64_t isEscapingClosureAtFileLocation;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  id v125;
  void *v126;
  id v127;
  id v128;
  id v129;
  unint64_t v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  NSObject *v135;
  char *v136;
  void (*v137)(char *, NSObject *, uint64_t);
  char *v138;
  char *v139;
  char *v140;
  void (*v141)(char *, char *, uint64_t);
  void (*v142)(uint64_t);
  char *v143;
  uint64_t v144;
  void (*v145)(uint64_t);
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  NSObject *v150;
  void (*v151)(uint64_t);
  uint64_t v152;
  char v153;
  void *v154;
  char *v155;
  unint64_t v156;
  id v157;
  id v158;
  NSObject *v159;
  os_log_type_t v160;
  uint64_t v161;
  _QWORD *v162;
  void *v163;
  void *v164;
  uint64_t v165;
  unint64_t v166;
  id v167;
  uint64_t v168;
  id v169;
  void *v170;
  id v171;
  void *v172;
  id v173;
  char *v174;
  void *v175;
  uint64_t *v176;
  void *v177;
  id v178;
  char *v179;
  void *v180;
  void *v181;
  NSObject *v182;
  void (*v183)(void (*)(uint64_t), void (*)(uint64_t), unint64_t);
  uint64_t v184;
  void (*v185)(uint64_t);
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  void (*v193)(uint64_t);
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  void (*v198)(uint64_t);
  void (*v199)(uint64_t);
  uint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  BOOL v207;
  uint64_t v208;
  char *v209;
  double v210;
  NSObject *v211;
  NSObject *v212;
  char *v213;
  char *v214;
  id v215;
  void (*v216)(char *, char *, NSObject *);
  char *v217;
  unint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  char *v224;
  NSObject *v225;
  uint64_t v226;
  unint64_t v227;
  char *v228;
  void (*v229)(uint64_t);
  char *v230;
  uint64_t v231;
  unint64_t v232;
  os_log_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  NSObject *v237;
  uint64_t v238;
  char *v239;
  char *v240;
  void (*v241)(char *, char *, NSObject *);
  char *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  char *v247;
  void (*v248)(char *, uint64_t, NSObject *);
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(uint64_t);
  uint64_t v255;
  unint64_t v256;
  void (*v257)(uint64_t);
  unint64_t v258;
  uint64_t v259;
  void *v260;
  void *v261;
  id v262;
  char *v263;
  void (*v264)(char *, uint64_t);
  uint64_t v265;
  void (*v266)(uint64_t, NSObject *);
  char *v268;
  char *v269;
  uint64_t v270;
  char v271;
  void (*v272)(char *, int *, NSObject *);
  uint64_t v273;
  int *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  uint64_t v279;
  char *v280;
  void (*v281)(uint64_t);
  char *v282;
  int *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  void (*v288)(uint64_t);
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  id v293;
  void *v294;
  id v295;
  char *v296;
  void (*v297)(uint64_t, char *, _QWORD *);
  uint64_t v298;
  char v299;
  void (*v300)(uint64_t, _QWORD *);
  uint64_t v301;
  id v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  int *v306;
  void (*v307)(uint64_t);
  uint64_t v308;
  id v309;
  void *v310;
  id v311;
  id v312;
  id v313;
  id v314;
  id v315;
  uint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  id v319;
  int *v320;
  uint64_t v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  NSObject *v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  char *v330;
  id v331;
  id v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  id v339;
  uint64_t v340;
  char *v341;
  int *v342;
  void (*v343)(uint64_t);
  char *v344;
  char *v345;
  char *v346;
  id v347;
  void *v348;
  _QWORD *v349;
  char *v350;
  char *v351;
  char *v352;
  char *v353;
  void (*v354)(uint64_t);
  NSObject *v355;
  NSObject *v356;
  NSObject *v357;
  char *v358;
  char *v359;
  char *v360;
  char *v361;
  char *v362;
  char *v363;
  uint64_t v364;
  char *v365;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v367;
  uint64_t v368;
  int *v369;
  unint64_t v370;
  os_log_t v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  NSObject *v375;
  char *v376;
  uint64_t v377;
  void (*v378)(uint64_t);
  uint64_t v379;
  char *v380;
  int *v381;
  uint64_t (*v382)(char *, uint64_t, uint64_t);
  uint64_t v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  char *v387;
  uint64_t v388;
  void (*v389)(uint64_t);
  void (*v390)(uint64_t);
  char *v391;
  char *v392;
  char *v393;
  char *v394;
  unint64_t v395;
  uint64_t v396;
  char v397;
  id aBlock[6];
  uint64_t v399[6];

  v388 = a4;
  v339 = a3;
  v329 = a1;
  v399[5] = *MEMORY[0x24BDAC8D0];
  ObjectType = swift_getObjectType();
  v338 = sub_23DCE122C();
  v337 = *(_QWORD *)(v338 - 8);
  MEMORY[0x24BDAC7A8](v338);
  v336 = (char *)&v318 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v394 = (char *)&v318 - v11;
  v12 = (_QWORD *)sub_23DCE11E4();
  v13 = (void (*)(uint64_t))*(v12 - 1);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v392 = (char *)&v318 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v360 = (char *)&v318 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v359 = (char *)&v318 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v393 = (char *)&v318 - v20;
  sub_23DC82800(0, (unint64_t *)&qword_2543255F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], v9);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v380 = (char *)&v318 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v389 = (void (*)(uint64_t))((char *)&v318 - v24);
  sub_23DC87938();
  v379 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v376 = (char *)&v318 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v375 = ((char *)&v318 - v28);
  sub_23DCA8F2C(0);
  v381 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v364 = (uint64_t)&v318 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v377 = (uint64_t)&v318 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v355 = ((char *)&v318 - v35);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v372 = (char *)&v318 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v330 = (char *)&v318 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v374 = (uint64_t)&v318 - v40;
  sub_23DCCE4E8(0);
  v327 = v41;
  v42 = MEMORY[0x24BDAC7A8](v41);
  v369 = (int *)((char *)&v318 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = MEMORY[0x24BDAC7A8](v42);
  v326 = ((char *)&v318 - v45);
  MEMORY[0x24BDAC7A8](v44);
  v357 = ((char *)&v318 - v46);
  v335 = sub_23DCE113C();
  v334 = *(_QWORD *)(v335 - 8);
  v47 = MEMORY[0x24BDAC7A8](v335);
  v346 = (char *)&v318 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v345 = (char *)&v318 - v49;
  v386 = sub_23DCE1C64();
  v370 = *(_QWORD *)(v386 - 8);
  v50 = MEMORY[0x24BDAC7A8](v386);
  v358 = (char *)&v318 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v50);
  v385 = (char *)&v318 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v363 = (char *)&v318 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v362 = (char *)&v318 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v323 = (char *)&v318 - v59;
  v60 = MEMORY[0x24BDAC7A8](v58);
  v324 = (char *)&v318 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v352 = (char *)&v318 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v353 = (char *)&v318 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v351 = (char *)&v318 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v325 = (char *)&v318 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v365 = (char *)&v318 - v71;
  MEMORY[0x24BDAC7A8](v70);
  v73 = ((char *)&v318 - v72);
  sub_23DC82800(0, &qword_2543252E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], v9);
  v75 = MEMORY[0x24BDAC7A8](v74);
  v341 = (char *)&v318 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = MEMORY[0x24BDAC7A8](v75);
  v361 = (char *)&v318 - v78;
  v79 = MEMORY[0x24BDAC7A8](v77);
  v350 = (char *)&v318 - v80;
  MEMORY[0x24BDAC7A8](v79);
  v391 = (char *)&v318 - v81;
  v384 = sub_23DCE12E0();
  v383 = *(_QWORD *)(v384 - 8);
  MEMORY[0x24BDAC7A8](v384);
  v344 = (char *)&v318 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_23DCE1B14();
  v390 = *(void (**)(uint64_t))(v83 - 8);
  v84 = MEMORY[0x24BDAC7A8](v83);
  v387 = (char *)&v318 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = MEMORY[0x24BDAC7A8](v84);
  v322 = (char *)&v318 - v87;
  MEMORY[0x24BDAC7A8](v86);
  v89 = (char *)&v318 - v88;
  sub_23DCE1AFC();
  swift_bridgeObjectRetain_n();
  v90 = sub_23DCE1B08();
  v91 = sub_23DCE1EEC();
  LODWORD(v382) = v91;
  v92 = os_log_type_enabled(v90, v91);
  v356 = v73;
  v378 = a5;
  v340 = v83;
  v328 = a2;
  v321 = ObjectType;
  if (v92)
  {
    v93 = a2;
    v94 = swift_slowAlloc();
    v95 = (void *)swift_slowAlloc();
    aBlock[0] = v95;
    *(_DWORD *)v94 = 136446466;
    v373 = v94 + 4;
    v96 = sub_23DCE2354();
    v399[0] = sub_23DCA47EC(v96, v97, (uint64_t *)aBlock);
    v98 = v329;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 12) = 2080;
    swift_bridgeObjectRetain();
    v399[0] = sub_23DCA47EC(v98, v93, (uint64_t *)aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23DC7C000, v90, (os_log_type_t)v382, "[%{public}s:%s] Query Type is All Day", (uint8_t *)v94, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v95, -1, -1);
    v99 = (uint64_t)v356;
    MEMORY[0x24264179C](v94, -1, -1);

    v100 = (int *)*((_QWORD *)v390 + 1);
    ((void (*)(char *, uint64_t))v100)(v89, v340);
  }
  else
  {
    v99 = (uint64_t)v73;

    swift_bridgeObjectRelease_n();
    v100 = (int *)*((_QWORD *)v390 + 1);
    ((void (*)(char *, uint64_t))v100)(v89, v83);
  }
  v101 = v391;
  sub_23DCE1988();
  v102 = v383;
  v103 = v384;
  v382 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v383 + 48);
  v104 = v382(v101, 1, v384);
  v105 = (uint64_t)v365;
  if (v104 == 1)
    goto LABEL_130;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v344, v101, v103);
  sub_23DCC6B34(v99, v105);
  sub_23DCE1C10();
  sub_23DCE1C10();
  v106 = (void *)sub_23DCE110C();
  v107 = (void *)sub_23DCE110C();
  v108 = (id)HDActivityCacheEntityPredicateForCachesInDateComponentsRange();

  v109 = objc_allocWithZone(MEMORY[0x24BE40A10]);
  v110 = objc_msgSend(v109, sel_initWithProfile_, v388);
  v111 = sub_23DC9BD78();
  v113 = v112;
  v114 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v112 + 8);
  v399[3] = v111;
  v399[4] = v112;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v399);
  v368 = v111;
  v367 = v113;
  v114(0, 1, v111, v113);
  v395 = MEMORY[0x24BEE4AF8];
  v115 = swift_allocObject();
  *(_QWORD *)(v115 + 16) = &v395;
  v116 = swift_allocObject();
  *(_QWORD *)(v116 + 16) = sub_23DCCE59C;
  *(_QWORD *)(v116 + 24) = v115;
  v333 = v115;
  aBlock[4] = sub_23DCA0168;
  aBlock[5] = (id)v116;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23DCA00AC;
  aBlock[3] = &block_descriptor_18;
  v117 = _Block_copy(aBlock);
  v118 = v108;
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v332 = v110;
  v119 = objc_msgSend(v110, sel_enumerateActivitySummariesWithPredicate_error_handler_, v118, aBlock, v117);
  _Block_release(v117);
  v331 = v118;

  v120 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    goto LABEL_115;
  if (!v119)
  {
    v154 = (void *)sub_23DCE1154();

    swift_willThrow();
    v155 = v387;
    sub_23DCE1AFC();
    v156 = v328;
    swift_bridgeObjectRetain();
    v157 = v154;
    swift_bridgeObjectRetain();
    v158 = v154;
    v159 = sub_23DCE1B08();
    v160 = sub_23DCE1EEC();
    if (os_log_type_enabled(v159, v160))
    {
      v161 = swift_slowAlloc();
      v162 = (_QWORD *)swift_slowAlloc();
      v163 = (void *)swift_slowAlloc();
      v320 = v100;
      v164 = v163;
      aBlock[0] = v163;
      *(_DWORD *)v161 = 136446722;
      v165 = sub_23DCE2354();
      v396 = sub_23DCA47EC(v165, v166, (uint64_t *)aBlock);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v161 + 12) = 2080;
      swift_bridgeObjectRetain();
      v396 = sub_23DCA47EC(v329, v156, (uint64_t *)aBlock);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v161 + 22) = 2112;
      v167 = v154;
      v168 = _swift_stdlib_bridgeErrorToNSError();
      v396 = v168;
      sub_23DCE1FD0();
      *v162 = v168;

      _os_log_impl(&dword_23DC7C000, v159, v160, "[%{public}s:%s] Initial Activity Summary Query errored with %@", (uint8_t *)v161, 0x20u);
      sub_23DC80CF8();
      swift_arrayDestroy();
      MEMORY[0x24264179C](v162, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v164, -1, -1);
      MEMORY[0x24264179C](v161, -1, -1);

      ((void (*)(char *, uint64_t))v320)(v387, v340);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      ((void (*)(char *, uint64_t))v100)(v155, v340);
    }
    v123 = v386;
    isEscapingClosureAtFileLocation = v370;
    v99 = (uint64_t)v365;
    sub_23DCE1D30();
    v169 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v170 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v171 = objc_msgSend(v169, sel_initWithDomain_code_userInfo_, v170, 100, 0);

    v172 = (void *)sub_23DCE1148();
    v173 = objc_msgSend(v347, sel_queryUUID);
    v174 = v336;
    sub_23DCE1214();

    v175 = (void *)sub_23DCE11FC();
    (*(void (**)(char *, uint64_t))(v337 + 8))(v174, v338);
    objc_msgSend(v339, sel_client_deliverError_forQuery_, v172, v175);

    v176 = (uint64_t *)&v363;
    goto LABEL_21;
  }
  v116 = v395;
  isEscapingClosureAtFileLocation = v370;
  v99 = (uint64_t)v365;
  if (v395 >> 62)
    goto LABEL_118;
  v122 = *(_QWORD *)((v395 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_9:
  v123 = v386;
  if (!v122)
  {
    swift_bridgeObjectRelease();
    v177 = (void *)sub_23DCE1DB4();
    v178 = objc_msgSend(v347, sel_queryUUID);
    v179 = v336;
    sub_23DCE1214();

    v180 = (void *)sub_23DCE11FC();
    (*(void (**)(char *, uint64_t))(v337 + 8))(v179, v338);
    objc_msgSend(v339, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v177, v180);

    v176 = &v364;
LABEL_21:
    v181 = (void *)*(v176 - 32);
    goto LABEL_49;
  }
  if ((v116 & 0xC000000000000001) != 0)
  {
    v124 = v386;
    v125 = (id)MEMORY[0x242640EF0](0, v116);
  }
  else
  {
    if (!*(_QWORD *)((v116 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_121;
    }
    v124 = v386;
    v125 = *(id *)(v116 + 32);
  }
  v126 = v125;
  swift_bridgeObjectRelease();
  v127 = objc_msgSend(v126, sel_activeEnergyBurned);
  v128 = objc_msgSend(v127, sel__unit);

  v129 = v128;
  v130 = swift_bridgeObjectRetain();
  v131 = sub_23DCCD4AC(v130, (uint64_t)v129, 0.0);
  swift_bridgeObjectRelease();
  v319 = v129;

  v132 = sub_23DC8E674();
  v123 = v356;
  v133 = v124;
  v388 = v132;
  if ((sub_23DCE1CD0() & 1) == 0)
  {
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  v320 = v100;
  v318 = 0;
  v348 = v126;
  v134 = v379;
  v135 = v375;
  v387 = (char *)v375 + *(int *)(v379 + 48);
  v136 = v387;
  v137 = *(void (**)(char *, NSObject *, uint64_t))(isEscapingClosureAtFileLocation + 16);
  v137((char *)v375, v123, v133);
  v137(v136, v99, v133);
  v138 = v376;
  v139 = &v376[*(int *)(v134 + 48)];
  v137(v376, v135, v133);
  v140 = v387;
  v137(v139, v387, v133);
  v141 = *(void (**)(char *, char *, uint64_t))(isEscapingClosureAtFileLocation + 32);
  v141(v330, v138, v133);
  v142 = *(void (**)(uint64_t))(isEscapingClosureAtFileLocation + 8);
  ((void (*)(char *, uint64_t))v142)(v139, v133);
  v143 = &v138[*(int *)(v379 + 48)];
  v141(v138, (char *)v135, v133);
  v141(v143, v140, v133);
  v144 = (uint64_t)v330;
  v141(&v330[v381[9]], v143, v133);
  ((void (*)(char *, uint64_t))v142)(v138, v133);
  v145 = sub_23DCA8F2C;
  v146 = v374;
  sub_23DC87A14(v144, v374, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v123 = v326;
  sub_23DC82858(v146, (uint64_t)v326, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v147 = v325;
  v391 = (char *)v137;
  v137(v325, v146, v133);
  sub_23DC827C4(v146, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v148 = v327;
  v149 = (char *)v123 + *(int *)(v327 + 36);
  v387 = (char *)v141;
  v141(v149, v147, v133);
  v150 = v357;
  sub_23DC87A14((uint64_t)v123, (uint64_t)v357, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
  v151 = (void (*)(uint64_t))((char *)v150 + *(int *)(v148 + 36));
  v100 = (int *)((char *)v150 + v381[9]);
  v152 = sub_23DC80074((unint64_t *)&unk_2543255C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  v343 = v151;
  v342 = v100;
  v373 = v152;
  v153 = sub_23DCE1D00();
  v390 = v142;
  v354 = v13;
  if ((v153 & 1) != 0)
  {
    v371 = 0;
    v100 = *(int **)(v370 + 56);
    v145 = v142;
    v99 = (uint64_t)v365;
    goto LABEL_31;
  }
  v182 = 0;
  isEscapingClosureAtFileLocation = v386;
  v183 = (void (*)(void (*)(uint64_t), void (*)(uint64_t), unint64_t))v391;
  v13 = v343;
  v99 = (uint64_t)v342;
  do
  {
    v183(v389, v13, isEscapingClosureAtFileLocation);
    v123 = v357;
    v116 = isEscapingClosureAtFileLocation;
    if ((sub_23DCE1CD0() & 1) == 0)
      goto LABEL_109;
    v371 = v182;
    v184 = v379;
    v185 = (void (*)(uint64_t))v375;
    v186 = (char *)v375 + *(int *)(v379 + 48);
    v183((void (*)(uint64_t))v375, (void (*)(uint64_t))v123, isEscapingClosureAtFileLocation);
    v183((void (*)(uint64_t))v186, (void (*)(uint64_t))v99, isEscapingClosureAtFileLocation);
    v187 = v376;
    v188 = &v376[*(int *)(v184 + 48)];
    v183((void (*)(uint64_t))v376, v185, isEscapingClosureAtFileLocation);
    v183((void (*)(uint64_t))v188, (void (*)(uint64_t))v186, isEscapingClosureAtFileLocation);
    v189 = v374;
    v190 = v387;
    ((void (*)(uint64_t, char *, unint64_t))v387)(v374, v187, isEscapingClosureAtFileLocation);
    ((void (*)(char *, unint64_t))v390)(v188, isEscapingClosureAtFileLocation);
    v191 = *(int *)(v184 + 48);
    v145 = v390;
    v192 = &v187[v191];
    v193 = v185;
    v100 = v381;
    ((void (*)(char *, void (*)(uint64_t), unint64_t))v190)(v187, v193, isEscapingClosureAtFileLocation);
    ((void (*)(char *, char *, unint64_t))v190)(v192, v186, isEscapingClosureAtFileLocation);
    ((void (*)(uint64_t, char *, unint64_t))v190)(v189 + v100[9], v192, isEscapingClosureAtFileLocation);
    ((void (*)(char *, unint64_t))v145)(v187, isEscapingClosureAtFileLocation);
    v194 = (uint64_t)v372;
    sub_23DC87A14(v189, (uint64_t)v372, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v116 = sub_23DCE1CD0();
    v99 = (uint64_t)v353;
    ((void (*)(char *, void (*)(uint64_t), unint64_t))v391)(v353, v13, isEscapingClosureAtFileLocation);
    v195 = v194;
    v123 = v355;
    sub_23DC82858(v195, (uint64_t)v355, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    if ((v116 & 1) == 0)
    {
LABEL_110:
      sub_23DC827C4((uint64_t)v123, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      ((void (*)(uint64_t, unint64_t))v145)(v99, isEscapingClosureAtFileLocation);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    v116 = sub_23DCE1CB8();
    sub_23DC827C4((uint64_t)v123, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    ((void (*)(uint64_t, unint64_t))v145)(v99, isEscapingClosureAtFileLocation);
    if ((v116 & 1) == 0)
      goto LABEL_111;
    sub_23DC827C4((uint64_t)v372, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    aBlock[0] = (id)1;
    sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    v196 = v351;
    sub_23DCE1FE8();
    ((void (*)(void (*)(uint64_t), unint64_t))v145)(v13, isEscapingClosureAtFileLocation);
    v197 = v387;
    ((void (*)(void (*)(uint64_t), char *, unint64_t))v387)(v13, v196, isEscapingClosureAtFileLocation);
    v100 = *(int **)(v370 + 56);
    v198 = v389;
    ((void (*)(void (*)(uint64_t), _QWORD, uint64_t, unint64_t))v100)(v389, 0, 1, isEscapingClosureAtFileLocation);
    v199 = v145;
    v200 = (uint64_t)v352;
    ((void (*)(char *, void (*)(uint64_t), unint64_t))v197)(v352, v198, isEscapingClosureAtFileLocation);
    v201 = v350;
    sub_23DCE1988();
    v116 = (uint64_t)v201;
    v202 = v201;
    v123 = v384;
    if (v382(v202, 1, v384) == 1)
    {
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
    }
    v99 = sub_23DCCDAC0(v348, v200, v116);
    ((void (*)(uint64_t, unint64_t))v199)(v200, isEscapingClosureAtFileLocation);
    (*(void (**)(uint64_t, NSObject *))(v383 + 8))(v116, v123);
    v145 = v199;
    v183 = (void (*)(void (*)(uint64_t), void (*)(uint64_t), unint64_t))v391;
    if ((v99 & 1) != 0)
    {
      v355 = v100;
      v99 = (uint64_t)v365;
      v203 = v324;
      v150 = v357;
      goto LABEL_33;
    }
    v123 = ((char *)&v371->isa + 1);
    if (__OFADD__(v371, 1))
      goto LABEL_112;
    v13 = v343;
    v99 = (uint64_t)v342;
    isEscapingClosureAtFileLocation = v386;
    v182 = ((char *)&v371->isa + 1);
  }
  while ((sub_23DCE1D00() & 1) == 0);
  v371 = v123;
  v99 = (uint64_t)v365;
  v150 = v357;
LABEL_31:
  v355 = v100;
  ((void (*)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))v100)(v389, 1, 1, v386);
  v203 = v324;
LABEL_33:
  sub_23DC827C4((uint64_t)v150, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
  v204 = sub_23DCE1C34();
  v205 = sub_23DCE1C34();
  v206 = v204 - v205;
  if (__OFSUB__(v204, v205))
    goto LABEL_122;
  v207 = __OFSUB__(v206, v371);
  v208 = v206 - (_QWORD)v371;
  if (v207)
  {
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v209 = v203;
  if (v208 < 1)
    v210 = 0.0;
  else
    v210 = v131 / (double)v208;
  v211 = v386;
  v212 = v356;
  v213 = v322;
  v214 = (char *)objc_opt_self();
  v215 = v319;
  v353 = (char *)objc_msgSend(v214, sel_quantityWithUnit_doubleValue_, v319, v210);
  v352 = v214;
  v357 = objc_msgSend(v214, sel_quantityWithUnit_doubleValue_, v215, 0.0);
  sub_23DCE1AFC();
  v216 = (void (*)(char *, char *, NSObject *))v391;
  ((void (*)(char *, NSObject *, NSObject *))v391)(v209, v212, v211);
  v217 = v323;
  v216(v323, v365, v211);
  v218 = v328;
  swift_bridgeObjectRetain_n();
  v99 = sub_23DCE1B08();
  LODWORD(v389) = sub_23DCE1EEC();
  if (os_log_type_enabled((os_log_t)v99, (os_log_type_t)v389))
  {
    v219 = swift_slowAlloc();
    v220 = (char *)swift_slowAlloc();
    aBlock[0] = v220;
    *(_DWORD *)v219 = 136447234;
    v221 = sub_23DCE2354();
    v396 = sub_23DCA47EC(v221, v222, (uint64_t *)aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v219 + 12) = 2080;
    swift_bridgeObjectRetain();
    v396 = sub_23DCA47EC(v329, v218, (uint64_t *)aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v219 + 22) = 2048;
    swift_beginAccess();
    v372 = v220;
    v371 = (os_log_t)v99;
    if (v395 >> 62)
    {
      swift_bridgeObjectRetain();
      v223 = sub_23DCE21D4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v223 = *(_QWORD *)((v395 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v396 = v223;
    v99 = (uint64_t)&v397;
    sub_23DCE1FD0();
    *(_WORD *)(v219 + 32) = 2080;
    sub_23DC80074((unint64_t *)&unk_2543255E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C8]);
    v224 = v324;
    v225 = v386;
    v226 = sub_23DCE224C();
    v396 = sub_23DCA47EC(v226, v227, (uint64_t *)aBlock);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    v228 = v224;
    v229 = v390;
    ((void (*)(char *, NSObject *))v390)(v228, v225);
    *(_WORD *)(v219 + 42) = 2080;
    v230 = v323;
    v231 = sub_23DCE224C();
    v396 = sub_23DCA47EC(v231, v232, (uint64_t *)aBlock);
    v123 = v225;
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, NSObject *))v229)(v230, v225);
    v233 = v371;
    _os_log_impl(&dword_23DC7C000, v371, (os_log_type_t)v389, "[%{public}s:%s] Processing %ld Activity Summaries between %s and %s", (uint8_t *)v219, 0x34u);
    v234 = (uint64_t)v372;
    swift_arrayDestroy();
    MEMORY[0x24264179C](v234, -1, -1);
    MEMORY[0x24264179C](v219, -1, -1);

    v235 = v322;
  }
  else
  {
    v123 = v211;
    swift_bridgeObjectRelease_n();
    ((void (*)(char *, NSObject *))v145)(v209, v211);
    ((void (*)(char *, NSObject *))v145)(v217, v211);

    v235 = v213;
  }
  ((void (*)(char *, uint64_t))v320)(v235, v340);
  v236 = v365;
  v237 = v356;
  if ((sub_23DCE1CD0() & 1) == 0)
    goto LABEL_124;
  v238 = v379;
  v239 = (char *)v375;
  v240 = (char *)v375 + *(int *)(v379 + 48);
  v241 = (void (*)(char *, char *, NSObject *))v391;
  ((void (*)(NSObject *, NSObject *, NSObject *))v391)(v375, v237, v123);
  v389 = (void (*)(uint64_t))v240;
  v241(v240, v236, v123);
  v242 = v376;
  v243 = &v376[*(int *)(v238 + 48)];
  v241(v376, v239, v123);
  v241(v243, v240, v123);
  v244 = (uint64_t)v330;
  v245 = v387;
  ((void (*)(char *, char *, NSObject *))v387)(v330, v242, v123);
  ((void (*)(char *, NSObject *))v390)(v243, v123);
  v246 = &v242[*(int *)(v238 + 48)];
  ((void (*)(char *, char *, NSObject *))v245)(v242, v239, v123);
  ((void (*)(char *, void (*)(uint64_t), NSObject *))v245)(v246, v389, v123);
  v247 = v246;
  v248 = (void (*)(char *, uint64_t, NSObject *))v241;
  v145 = v390;
  ((void (*)(uint64_t, char *, NSObject *))v245)(v244 + v381[9], v247, v123);
  ((void (*)(char *, NSObject *))v145)(v242, v123);
  v99 = (uint64_t)sub_23DCA8F2C;
  v249 = v374;
  sub_23DC87A14(v244, v374, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v250 = (uint64_t)v326;
  sub_23DC82858(v249, (uint64_t)v326, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v251 = v325;
  v248(v325, v249, v123);
  sub_23DC827C4(v249, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v252 = v327;
  ((void (*)(uint64_t, char *, NSObject *))v245)(v250 + *(int *)(v327 + 36), v251, v123);
  v253 = v250;
  v100 = v369;
  sub_23DC87A14(v253, (uint64_t)v369, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
  v254 = (void (*)(uint64_t))((char *)v100 + *(int *)(v252 + 36));
  v255 = (uint64_t)v100 + v381[9];
  v389 = v254;
  if ((sub_23DCE1D00() & 1) == 0)
  {
    isEscapingClosureAtFileLocation = 0;
    v349 = v12;
    v372 = (char *)v255;
    do
    {
      v248(v380, (uint64_t)v389, v123);
      v116 = (uint64_t)v123;
      if ((sub_23DCE1CD0() & 1) == 0)
        goto LABEL_106;
      v272 = (void (*)(char *, int *, NSObject *))v248;
      v273 = v379;
      v274 = v100;
      v275 = (char *)v375;
      v276 = (char *)v375 + *(int *)(v379 + 48);
      v272((char *)v375, v274, v123);
      v272(v276, (int *)v255, v123);
      v277 = v376;
      v278 = &v376[*(int *)(v273 + 48)];
      v272(v376, (int *)v275, v123);
      v272(v278, (int *)v276, v123);
      v279 = v374;
      v280 = v387;
      ((void (*)(uint64_t, char *, NSObject *))v387)(v374, v277, v123);
      v281 = v390;
      ((void (*)(char *, NSObject *))v390)(v278, v123);
      v282 = &v277[*(int *)(v273 + 48)];
      v283 = v381;
      ((void (*)(char *, char *, NSObject *))v280)(v277, v275, v123);
      ((void (*)(char *, char *, NSObject *))v280)(v282, v276, v123);
      v284 = v282;
      v12 = v281;
      ((void (*)(uint64_t, char *, NSObject *))v280)(v279 + v283[9], v284, v123);
      ((void (*)(char *, NSObject *))v281)(v277, v123);
      v145 = v389;
      v285 = v377;
      v13 = sub_23DCA8F2C;
      sub_23DC87A14(v279, v377, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v99 = v388;
      v116 = sub_23DCE1CD0();
      v100 = (int *)v363;
      ((void (*)(char *, void (*)(uint64_t), NSObject *))v391)(v363, v145, v123);
      v286 = v285;
      v255 = v364;
      sub_23DC82858(v286, v364, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      if ((v116 & 1) == 0)
      {
LABEL_107:
        sub_23DC827C4(v255, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        ((void (*)(int *, NSObject *))v12)(v100, v123);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
        goto LABEL_110;
      }
      v116 = sub_23DCE1CB8();
      sub_23DC827C4(v255, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      ((void (*)(int *, NSObject *))v12)(v100, v123);
      if ((v116 & 1) == 0)
        goto LABEL_108;
      sub_23DC827C4(v377, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v396 = 1;
      sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      v287 = v362;
      v288 = v389;
      sub_23DCE1FE8();
      ((void (*)(void (*)(uint64_t), NSObject *))v12)(v288, v123);
      v289 = v387;
      ((void (*)(void (*)(uint64_t), char *, NSObject *))v387)(v288, v287, v123);
      v290 = v380;
      ((void (*)(char *, _QWORD, uint64_t, NSObject *))v355)(v380, 0, 1, v123);
      ((void (*)(char *, char *, NSObject *))v289)(v385, v290, v123);
      v291 = v361;
      v145 = v378;
      sub_23DCE1988();
      v292 = v384;
      if (v382(v291, 1, v384) == 1)
      {
        __break(1u);
        goto LABEL_128;
      }
      sub_23DCE1C58();
      v371 = *(os_log_t *)(v383 + 8);
      ((void (*)(char *, uint64_t))v371)(v291, v292);
      swift_beginAccess();
      v255 = (uint64_t)v360;
      v100 = (int *)v359;
      v13 = v354;
      v12 = v349;
      while (1)
      {
        v116 = v395;
        if (v395 >> 62)
        {
          swift_bridgeObjectRetain();
          v123 = sub_23DCE21D4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v123 = *(NSObject **)((v395 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        (*((void (**)(int *, char *, _QWORD *))v13 + 2))(v100, v393, v12);
        if ((uint64_t)isEscapingClosureAtFileLocation >= (uint64_t)v123)
          break;
        swift_beginAccess();
        if ((v395 & 0xC000000000000001) != 0)
        {
          v293 = (id)MEMORY[0x242640EF0](isEscapingClosureAtFileLocation);
        }
        else
        {
          if ((isEscapingClosureAtFileLocation & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
            goto LABEL_107;
          }
          if (isEscapingClosureAtFileLocation >= *(_QWORD *)((v395 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_105;
          v293 = *(id *)(v395 + 8 * isEscapingClosureAtFileLocation + 32);
        }
        v294 = v293;
        swift_endAccess();
        v295 = objc_msgSend(v294, sel__endDate);

        if (v295)
        {
          v296 = v392;
          sub_23DCE11C0();

          v297 = (void (*)(uint64_t, char *, _QWORD *))*((_QWORD *)v13 + 4);
          v298 = (uint64_t)v394;
          v297((uint64_t)v394, v296, v12);
          (*((void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))v13 + 7))(v298, 0, 1, v12);
          if ((*((unsigned int (**)(uint64_t, uint64_t, _QWORD *))v13 + 6))(v298, 1, v12) != 1)
          {
            v297(v255, v394, v12);
            goto LABEL_71;
          }
        }
        else
        {
          (*((void (**)(char *, uint64_t, uint64_t, _QWORD *))v13 + 7))(v394, 1, 1, v12);
        }
        sub_23DCE11D8();
        sub_23DC8FE84((uint64_t)v394, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_71:
        v299 = sub_23DCE1184();
        v300 = (void (*)(uint64_t, _QWORD *))*((_QWORD *)v13 + 1);
        v300(v255, v12);
        v300((uint64_t)v100, v12);
        if ((v299 & 1) == 0)
          goto LABEL_76;
        ++isEscapingClosureAtFileLocation;
      }
      v300 = (void (*)(uint64_t, _QWORD *))*((_QWORD *)v13 + 1);
      v300((uint64_t)v100, v12);
LABEL_76:
      v100 = (int *)v358;
      v255 = (uint64_t)v372;
      if (v395 >> 62)
      {
        swift_bridgeObjectRetain();
        v301 = sub_23DCE21D4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v301 = *(_QWORD *)((v395 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v116 = v386;
      ((void (*)(int *, char *, uint64_t))v391)(v100, v385, v386);
      if ((uint64_t)isEscapingClosureAtFileLocation >= v301)
      {
        v145 = v390;
        ((void (*)(int *, uint64_t))v390)(v100, v116);
        v123 = v116;
LABEL_93:
        v100 = (int *)v385;
        if (isEscapingClosureAtFileLocation)
        {
          v268 = (char *)v357;
          v269 = v385;
          v270 = 0;
        }
        else
        {
          v268 = v353;
          v269 = v385;
          v270 = 1;
        }
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v367 + 16))(v268, v269, v270, v368);
        goto LABEL_53;
      }
      swift_beginAccess();
      if ((v395 & 0xC000000000000001) == 0)
      {
        if ((isEscapingClosureAtFileLocation & 0x8000000000000000) == 0)
        {
          if (isEscapingClosureAtFileLocation < *(_QWORD *)((v395 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v302 = *(id *)(v395 + 8 * isEscapingClosureAtFileLocation + 32);
            goto LABEL_83;
          }
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
          goto LABEL_117;
        }
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
      v302 = (id)MEMORY[0x242640EF0](isEscapingClosureAtFileLocation);
LABEL_83:
      v303 = v302;
      swift_endAccess();
      v304 = (uint64_t)v341;
      sub_23DCE1988();
      v305 = v384;
      if (v382((char *)v304, 1, v384) == 1)
        goto LABEL_129;
      v116 = sub_23DCCDAC0(v303, (uint64_t)v100, v304);

      v306 = v100;
      v123 = v386;
      v307 = v390;
      ((void (*)(int *, uint64_t))v390)(v306, v386);
      v308 = v305;
      v145 = v307;
      ((void (*)(uint64_t, uint64_t))v371)(v304, v308);
      v255 = (uint64_t)v372;
      if ((v116 & 1) == 0)
        goto LABEL_93;
      swift_beginAccess();
      v100 = (int *)v385;
      if ((v395 & 0xC000000000000001) == 0)
      {
        if ((isEscapingClosureAtFileLocation & 0x8000000000000000) != 0)
          goto LABEL_116;
        if (isEscapingClosureAtFileLocation < *(_QWORD *)((v395 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v309 = *(id *)(v395 + 8 * isEscapingClosureAtFileLocation + 32);
          goto LABEL_89;
        }
LABEL_117:
        __break(1u);
LABEL_118:
        swift_bridgeObjectRetain();
        v122 = sub_23DCE21D4();
        goto LABEL_9;
      }
      v309 = (id)MEMORY[0x242640EF0](isEscapingClosureAtFileLocation);
LABEL_89:
      v310 = v309;
      swift_endAccess();
      v311 = v310;
      v312 = objc_msgSend(v311, sel_activityMoveMode);
      v313 = objc_msgSend(v311, sel_activeEnergyBurned);
      v314 = v313;
      if (v312 != (id)1)
      {
        v315 = objc_msgSend(v313, sel__unit);

        v314 = objc_msgSend(v352, sel_quantityWithUnit_doubleValue_, v315, 0.0);
      }
      ++isEscapingClosureAtFileLocation;
      (*(void (**)(id, int *, _QWORD, uint64_t))(v367 + 16))(v314, v100, 0, v368);

      v123 = v386;
      v145 = v390;
LABEL_53:
      v300((uint64_t)v393, v12);
      ((void (*)(int *, NSObject *))v145)(v100, v123);
      v271 = sub_23DCE1D00();
      v248 = (void (*)(char *, uint64_t, NSObject *))v391;
      v100 = v369;
    }
    while ((v271 & 1) == 0);
  }
  ((void (*)(char *, uint64_t, uint64_t, NSObject *))v355)(v380, 1, 1, v123);
  sub_23DC827C4((uint64_t)v100, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
  v99 = (uint64_t)v365;
  v256 = (*(uint64_t (**)(NSObject *, char *, uint64_t))(v367 + 24))(v356, v365, v368);
  v257 = v378;
  v258 = sub_23DCCD6F4(v256, (uint64_t)v257);
  swift_bridgeObjectRelease();

  if (v258 >> 62)
  {
LABEL_125:
    sub_23DCE21C8();
    swift_bridgeObjectRelease();
    isEscapingClosureAtFileLocation = v370;
    v260 = v348;
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  sub_23DCE227C();
  v259 = swift_dynamicCastMetatype();
  isEscapingClosureAtFileLocation = v370;
  v260 = v348;
  if (!v259)
  {
    v316 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v316)
    {
      v317 = (_QWORD *)((v258 & 0xFFFFFFFFFFFFFF8) + 32);
      do
      {
        if (!*v317)
          break;
        ++v317;
        --v316;
      }
      while (v316);
    }
  }
  swift_bridgeObjectRelease();
LABEL_48:
  v261 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v262 = objc_msgSend(v347, sel_queryUUID);
  v263 = v336;
  sub_23DCE1214();

  v181 = (void *)sub_23DCE11FC();
  (*(void (**)(char *, uint64_t))(v337 + 8))(v263, v338);
  objc_msgSend(v339, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v261, v181);

LABEL_49:
  v264 = *(void (**)(char *, uint64_t))(v334 + 8);
  v265 = v335;
  v264(v346, v335);
  v264(v345, v265);
  v266 = *(void (**)(uint64_t, NSObject *))(isEscapingClosureAtFileLocation + 8);
  v266(v99, v123);
  v266((uint64_t)v356, v123);
  (*(void (**)(char *, uint64_t))(v383 + 8))(v344, v384);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v399);
  return swift_release();
}

id sub_23DCCA5E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC19HealthBalanceDaemon30TrainingLoadSummaryQueryServer____lazy_storage___loadBaselineUnit;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthBalanceDaemon30TrainingLoadSummaryQueryServer____lazy_storage___loadBaselineUnit);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthBalanceDaemon30TrainingLoadSummaryQueryServer____lazy_storage___loadBaselineUnit);
  }
  else
  {
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(v4, sel_appleEffortScoreUnit);
    v6 = objc_msgSend(v4, sel_secondUnit);
    v7 = objc_msgSend(v5, sel_unitMultipliedByUnit_, v6);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_23DCCA6B0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  char **v21;
  char **v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  char *v41;
  uint64_t v42;
  BOOL v43;
  char *v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;

  v62 = a2;
  v4 = sub_23DCE113C();
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1100();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v56 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE11E4();
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v64 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23DCE1274();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23DCE12E0();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDCEF70], v10);
  v63 = v15;
  sub_23DCE1280();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v16 = sub_23DCE1DF0();
  *(_QWORD *)(v16 + 16) = 56;
  *(_OWORD *)(v16 + 32) = 0u;
  v49 = v16 + 32;
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(_OWORD *)(v16 + 144) = 0u;
  *(_OWORD *)(v16 + 160) = 0u;
  *(_OWORD *)(v16 + 176) = 0u;
  *(_OWORD *)(v16 + 192) = 0u;
  *(_OWORD *)(v16 + 208) = 0u;
  *(_OWORD *)(v16 + 224) = 0u;
  *(_OWORD *)(v16 + 240) = 0u;
  *(_OWORD *)(v16 + 256) = 0u;
  *(_OWORD *)(v16 + 272) = 0u;
  *(_OWORD *)(v16 + 288) = 0u;
  *(_OWORD *)(v16 + 304) = 0u;
  *(_OWORD *)(v16 + 320) = 0u;
  *(_OWORD *)(v16 + 336) = 0u;
  *(_OWORD *)(v16 + 352) = 0u;
  *(_OWORD *)(v16 + 368) = 0u;
  *(_OWORD *)(v16 + 384) = 0u;
  *(_OWORD *)(v16 + 400) = 0u;
  *(_OWORD *)(v16 + 416) = 0u;
  *(_OWORD *)(v16 + 432) = 0u;
  *(_OWORD *)(v16 + 448) = 0u;
  v50 = v16;
  *(_OWORD *)(v16 + 464) = 0u;
  if (a1 >> 62)
    goto LABEL_24;
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    v45 = sub_23DCCE054(v50);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v63, v48);
    return v45;
  }
  while (2)
  {
    if (v17 >= 1)
    {
      v19 = 0;
      v20 = a1 & 0xC000000000000001;
      v53 = *MEMORY[0x24BDCF220];
      v21 = &selRef_setDelegate_;
      v22 = &selRef_setDelegate_;
      v52 = xmmword_23DCE3BA0;
      v51 = a1 & 0xC000000000000001;
      while (1)
      {
        v23 = v20 ? (id)MEMORY[0x242640EF0](v19, a1) : *(id *)(a1 + 8 * v19 + 32);
        v24 = v23;
        v25 = objc_msgSend(v23, v21[91]);
        v26 = sub_23DCCA5E4();
        objc_msgSend(v25, v22[52], v26);
        v28 = v27;

        if (v28 > 0.0)
          break;

LABEL_6:
        if (v17 == ++v19)
          goto LABEL_25;
      }
      v29 = v17;
      v30 = v2;
      v31 = a1;
      v32 = objc_msgSend(v24, sel_dateInterval);
      v33 = v56;
      sub_23DCE10B8();

      v34 = v64;
      sub_23DCE10DC();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v58);
      sub_23DC82800(0, &qword_256CF9F58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      v35 = sub_23DCE12D4();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v52;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v36 + 104))(v38 + v37, v53, v35);
      a1 = sub_23DCCE264(v38);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v39 = v59;
      sub_23DCE1298();
      swift_bridgeObjectRelease();
      v2 = sub_23DCE1124();
      LOBYTE(v37) = v40;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v61);
      if ((v37 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v55);
      }
      else
      {
        if (v2 <= 55)
        {
          v41 = (char *)objc_msgSend(v24, sel_workoutsCount);
          if (v2 < 0)
          {
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            swift_bridgeObjectRetain();
            result = sub_23DCE21D4();
            v17 = result;
            if (!result)
              goto LABEL_25;
            continue;
          }
          if ((unint64_t)v2 >= *(_QWORD *)(v50 + 16))
            goto LABEL_22;
          v42 = *(_QWORD *)(v49 + 8 * v2);
          v43 = __OFADD__(v42, v41);
          v44 = &v41[v42];
          if (v43)
            goto LABEL_23;
          a1 = v31;
          *(_QWORD *)(v49 + 8 * v2) = v44;

          (*(void (**)(char *, uint64_t))(v54 + 8))(v64, v55);
          goto LABEL_20;
        }
        (*(void (**)(char *, uint64_t))(v54 + 8))(v64, v55);
      }

      a1 = v31;
LABEL_20:
      v2 = v30;
      v17 = v29;
      v20 = v51;
      v21 = &selRef_setDelegate_;
      v22 = &selRef_setDelegate_;
      goto LABEL_6;
    }
    break;
  }
  __break(1u);
  return result;
}

void sub_23DCCABF0(void *a1, void *a2, uint64_t a3, unint64_t a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, char *a11)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  unint64_t v48;
  id v49;
  void *v50;
  id v51;
  os_log_t v52;
  Class isa;
  char *v54;
  _QWORD *v55;
  id v56;
  id v57;
  int64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  char *v72;
  void *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  id v78;
  void *v79;
  void (*v80)(char *, char *, id);
  id v81;
  void *v82;
  unint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  char *v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  os_log_t v107;
  unint64_t v108;
  uint64_t v109;
  id v110;
  char *v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v108 = a4;
  v109 = a8;
  v105 = a7;
  v113 = a6;
  sub_23DC82800(0, (unint64_t *)&unk_2543244B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v102 - v16;
  v18 = sub_23DCE1100();
  v19 = *(NSObject **)(v18 - 8);
  v106 = (_QWORD *)v18;
  v107 = v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v102 - v23;
  v114 = sub_23DCE122C();
  v112 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v111 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23DCE1B14();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v30 = (void *)MEMORY[0x242641820](a3 + 16);
  if (!v30)
    return;
  v31 = v30;
  v110 = v30;
  if (a2)
  {
    v32 = a2;
    sub_23DCE1AFC();
    v33 = a2;
    swift_bridgeObjectRetain();
    v34 = a2;
    swift_bridgeObjectRetain();
    v35 = sub_23DCE1B08();
    v36 = sub_23DCE1EEC();
    if (os_log_type_enabled(v35, v36))
    {
      v107 = v35;
      v37 = swift_slowAlloc();
      v106 = (_QWORD *)swift_slowAlloc();
      v109 = swift_slowAlloc();
      v116 = v109;
      *(_DWORD *)v37 = 136446722;
      v38 = sub_23DCE2354();
      v115 = sub_23DCA47EC(v38, v39, &v116);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      v115 = sub_23DCA47EC(v108, a5, &v116);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 22) = 2112;
      v40 = a2;
      v41 = _swift_stdlib_bridgeErrorToNSError();
      v115 = v41;
      sub_23DCE1FD0();
      v42 = v106;
      *v106 = v41;

      v35 = v107;
      _os_log_impl(&dword_23DC7C000, v107, v36, "[%{public}s:%s] Workout Training Load Query Helper fetch errored with %@", (uint8_t *)v37, 0x20u);
      sub_23DC80CF8();
      swift_arrayDestroy();
      MEMORY[0x24264179C](v42, -1, -1);
      v43 = v109;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v43, -1, -1);
      MEMORY[0x24264179C](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    v59 = v113;
    v60 = v114;
    v62 = v111;
    v61 = v112;
    sub_23DCE1D30();
    v63 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v64 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    v65 = objc_msgSend(v63, sel_initWithDomain_code_userInfo_, v64, 100, 0);

    v66 = (void *)sub_23DCE1148();
    v67 = v110;
    v68 = objc_msgSend(v110, sel_queryUUID);
    sub_23DCE1214();

    v69 = (void *)sub_23DCE11FC();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
    objc_msgSend(v59, sel_client_deliverError_forQuery_, v66, v69);

    return;
  }
  if (!a1)
  {
    v70 = (void *)sub_23DCE1DB4();
    v71 = objc_msgSend(v31, sel_queryUUID);
    v72 = v111;
    sub_23DCE1214();

    v73 = (void *)sub_23DCE11FC();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v72, v114);
    objc_msgSend(v113, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v70, v73);

    return;
  }
  v44 = (void *)a9;
  v116 = MEMORY[0x24BEE4AF8];
  v45 = a1;
  v46 = objc_msgSend(v45, sel_totalTrainingLoadCollection);
  v47 = objc_msgSend(v46, sel_trainingLoads);

  if (v47)
  {
    v104 = sub_23DC802D0(0, (unint64_t *)&unk_256CF9F48);
    v48 = sub_23DCE1DC0();

    if (v48 >> 62)
    {
      swift_bridgeObjectRetain();
      v88 = sub_23DCE21D4();
      swift_bridgeObjectRelease();
      if (v88)
        goto LABEL_9;
    }
    else if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      if ((v48 & 0xC000000000000001) != 0)
      {
        v49 = (id)MEMORY[0x242640EF0](0, v48);
      }
      else
      {
        if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_55;
        }
        v49 = *(id *)(v48 + 32);
      }
      v50 = v49;
      swift_bridgeObjectRelease();
      v51 = objc_msgSend(v50, sel_dateInterval);

      sub_23DCE10B8();
      v52 = v107;
      isa = v107[4].isa;
      v54 = v22;
      v55 = v106;
      ((void (*)(char *, char *, _QWORD *))isa)(v17, v54, v106);
      ((void (*)(char *, _QWORD, uint64_t, _QWORD *))v52[7].isa)(v17, 0, 1, v55);
      if (((unsigned int (*)(char *, uint64_t, _QWORD *))v52[6].isa)(v17, 1, v55) != 1)
      {
        v102 = a10;
        v103 = a11;
        ((void (*)(char *, char *, _QWORD *))isa)(v24, v17, v55);
        if ((v105 & 1) == 0)
        {
          v56 = objc_msgSend(v45, sel_totalTrainingLoadCollection);
          v57 = objc_msgSend(v56, sel_trainingLoads);

          if (v57)
          {
            v58 = sub_23DCE1DC0();

          }
          else
          {
            v58 = MEMORY[0x24BEE4AF8];
          }
          v87 = sub_23DCCB70C(v58, a9, v102, v103, (uint64_t)v24, 0, 1);
          swift_bridgeObjectRelease();
          ((void (*)(char *, _QWORD *))v107[1].isa)(v24, v55);
          v116 = v87;
          goto LABEL_41;
        }
        v105 = a9;
        v74 = objc_msgSend(v45, sel_activityTypes);
        sub_23DC802D0(0, &qword_254325710);
        v48 = sub_23DCE1DC0();

        if (!(v48 >> 62))
        {
          v75 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v75)
          {
LABEL_21:
            if (v75 < 1)
            {
              __break(1u);
              return;
            }
            v76 = 0;
            v108 = v48 & 0xC000000000000001;
            do
            {
              if (v108)
                v78 = (id)MEMORY[0x242640EF0](v76, v48);
              else
                v78 = *(id *)(v48 + 8 * v76 + 32);
              v79 = v78;
              v80 = (void (*)(char *, char *, id))sub_23DCE1FC4();
              v81 = objc_msgSend(v45, sel_trainingLoadCollectionForActivityType_, v80);
              if (v81)
              {
                v82 = v81;
                v83 = v48;
                v84 = v45;
                v85 = objc_msgSend(v81, sel_trainingLoads);

                if (v85)
                {
                  v86 = sub_23DCE1DC0();

                }
                else
                {
                  v86 = MEMORY[0x24BEE4AF8];
                }
                v45 = v84;
                v48 = v83;
              }
              else
              {
                v86 = MEMORY[0x24BEE4AF8];
              }
              if ((sub_23DCCA6B0(v86, v109) & 1) != 0)
              {
                v77 = sub_23DCCB70C(v86, v105, v102, v103, (uint64_t)v24, v80, 0);
                swift_bridgeObjectRelease();
                sub_23DC93E74(v77);
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              ++v76;

            }
            while (v75 != v76);
          }
LABEL_56:
          swift_bridgeObjectRelease();
          ((void (*)(char *, _QWORD *))v107[1].isa)(v24, v106);
          v44 = (void *)v105;
          goto LABEL_41;
        }
LABEL_55:
        swift_bridgeObjectRetain();
        v75 = sub_23DCE21D4();
        swift_bridgeObjectRelease();
        if (v75)
          goto LABEL_21;
        goto LABEL_56;
      }
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t, uint64_t, _QWORD *))v107[7].isa)(v17, 1, 1, v106);
LABEL_40:
    sub_23DC8FE84((uint64_t)v17, (unint64_t *)&unk_2543244B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
  }
LABEL_41:
  v89 = v44;
  v90 = swift_bridgeObjectRetain();
  v91 = sub_23DCCD6F4(v90, (uint64_t)v89);
  swift_bridgeObjectRelease_n();

  if (v91 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23DCE21C8();
    swift_bridgeObjectRelease_n();
    v94 = v112;
    v93 = v113;
    v95 = v111;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23DCE227C();
    v92 = swift_dynamicCastMetatype();
    v94 = v112;
    v93 = v113;
    v95 = v111;
    if (!v92)
    {
      v100 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v100)
      {
        v101 = (_QWORD *)((v91 & 0xFFFFFFFFFFFFFF8) + 32);
        do
        {
          if (!*v101)
            break;
          ++v101;
          --v100;
        }
        while (v100);
      }
    }
    swift_bridgeObjectRelease();
  }
  v96 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v97 = v110;
  v98 = objc_msgSend(v110, sel_queryUUID);
  sub_23DCE1214();

  v99 = (void *)sub_23DCE11FC();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v114);
  objc_msgSend(v93, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v96, v99);

}

uint64_t sub_23DCCB70C(int64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, void (*a6)(char *, char *, id), char a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  char *v73;
  id v74;
  double v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t, id);
  id v82;
  char *v83;
  char *v84;
  void (*v85)(char *, char *, id);
  uint64_t v86;
  void (*v87)(char *, id);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char v98;
  char *v99;
  void (*v100)(char *, _QWORD, uint64_t, id);
  void (*v101)(char *, char *, id);
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  id v106;
  char *v107;
  char *v108;
  void (*v109)(char *, char *, id);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  id v120;
  char v121;
  char *v122;
  id v123;
  char *v124;
  void (*v125)(char *, char *, id);
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char v133;
  char *v134;
  char v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  BOOL v140;
  uint64_t v141;
  double v142;
  id v143;
  void *v144;
  id v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  id v150;
  char *v151;
  char *v152;
  uint64_t v153;
  void (*v154)(char *, char *, id);
  void (*v155)(char *, id);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  void (*v167)(void);
  id v168;
  char *v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, char *, id);
  char *v173;
  char *v174;
  id v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, id);
  char *v180;
  uint64_t v181;
  uint64_t v182;
  id v183;
  char v184;
  char *v185;
  uint64_t v186;
  id v187;
  void (*v188)(char *, char *, id);
  char *v189;
  char *v190;
  uint64_t v191;
  char *v192;
  void (*v193)(char *, char *, char *);
  id v194;
  void *v195;
  id v196;
  char *v197;
  char *v198;
  void (*v199)(char *, uint64_t);
  char *v200;
  id v201;
  void *v202;
  id v203;
  char *v204;
  char *v205;
  id v206;
  char *v207;
  id v208;
  char *v209;
  void *v210;
  char *v211;
  char v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  _QWORD v217[2];
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  unint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  void (*v246)(char *, _QWORD, uint64_t, id);
  char *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  void (*v256)(char *, uint64_t, id);
  uint64_t v257;
  void (*v258)(char *, id);
  void (*v259)(char *, char *, id);
  uint64_t v260;
  char *v261;
  uint64_t v262;
  unint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  id v267;
  int64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  uint64_t v273[5];

  v259 = a6;
  v243 = a5;
  v223 = a4;
  v244 = a2;
  v268 = a1;
  v8 = a7 & 1;
  v262 = sub_23DCE1100();
  v260 = *(_QWORD *)(v262 - 8);
  MEMORY[0x24BDAC7A8](v262);
  v261 = (char *)v217 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23DC82800(0, &qword_2543252E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF2D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v234 = (char *)v217 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v228 = (char *)v217 - v14;
  v15 = sub_23DCE11E4();
  v269 = *(_QWORD *)(v15 - 8);
  v270 = (char *)v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v242 = (char *)v217 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v264 = (char *)v217 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v265 = (char *)v217 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v271 = (char *)v217 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v225 = (char *)v217 - v24;
  sub_23DC82800(0, (unint64_t *)&qword_2543255F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], v10);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v253 = (char *)v217 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v266 = (char *)v217 - v28;
  v29 = (_QWORD *)sub_23DCE1C64();
  v232 = (char *)*(v29 - 1);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v252 = (char *)v217 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v237 = (char *)v217 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v233 = (char *)v217 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v227 = (char *)v217 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v230 = (char *)v217 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v226 = (char *)v217 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)v217 - v42;
  sub_23DC87938();
  v250 = v44;
  v45 = MEMORY[0x24BDAC7A8](v44);
  v249 = (char *)v217 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)v217 - v47;
  sub_23DCA8F2C(0);
  v248 = v49;
  v50 = MEMORY[0x24BDAC7A8](v49);
  v236 = (char *)v217 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x24BDAC7A8](v50);
  v235 = (uint64_t)v217 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v229 = (unint64_t)v217 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  v263 = (unint64_t)v217 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  v220 = (char *)v217 - v59;
  MEMORY[0x24BDAC7A8](v58);
  v254 = (char *)v217 - v60;
  sub_23DCCE4E8(0);
  v222 = v61;
  v62 = MEMORY[0x24BDAC7A8](v61);
  v241 = (char *)v217 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = MEMORY[0x24BDAC7A8](v62);
  v221 = (char *)v217 - v65;
  MEMORY[0x24BDAC7A8](v64);
  v67 = (char *)v217 - v66;
  v68 = sub_23DC9BD78();
  v70 = v69;
  v71 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v69 + 8);
  v273[3] = v68;
  v273[4] = v69;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v273);
  v72 = v8;
  v73 = v223;
  v240 = v68;
  v239 = v70;
  v71((void (*)(_QWORD, _QWORD, _QWORD))v259, v72, v68, v70);
  v74 = v267;
  v75 = sub_23DCCD5C8(v268, 0.0);
  v217[1] = v74;

  v76 = sub_23DC8E674();
  v267 = v29;
  v255 = (char *)v76;
  result = sub_23DCE1CD0();
  if ((result & 1) == 0)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v231 = v67;
  v78 = v250;
  v79 = &v48[*(int *)(v250 + 48)];
  v219 = v43;
  v80 = v232;
  v81 = (void (*)(char *, uint64_t, id))*((_QWORD *)v232 + 2);
  v256 = v81;
  v218 = a3;
  v82 = v267;
  v81(v48, (uint64_t)a3, v267);
  v81(v79, (uint64_t)v73, v82);
  v83 = v249;
  v84 = &v249[*(int *)(v78 + 48)];
  v81(v249, (uint64_t)v48, v82);
  v81(v84, (uint64_t)v79, v82);
  v85 = (void (*)(char *, char *, id))*((_QWORD *)v80 + 4);
  v86 = (uint64_t)v220;
  v85(v220, v83, v82);
  v87 = (void (*)(char *, id))*((_QWORD *)v80 + 1);
  v87(v84, v82);
  v88 = &v83[*(int *)(v78 + 48)];
  v247 = v48;
  v85(v83, v48, v82);
  v85(v88, v79, v82);
  v89 = v248;
  v85((char *)(v86 + *(int *)(v248 + 36)), v88, v82);
  v87(v83, v82);
  v90 = (uint64_t)v254;
  sub_23DC87A14(v86, (uint64_t)v254, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v91 = (uint64_t)v221;
  sub_23DC82858(v90, (uint64_t)v221, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v92 = v219;
  v256(v219, v90, v82);
  sub_23DC827C4(v90, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
  v93 = v222;
  v94 = v91 + *(int *)(v222 + 36);
  v259 = v85;
  v85((char *)v94, v92, v82);
  v95 = v231;
  sub_23DC87A14(v91, (uint64_t)v231, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
  v96 = &v95[*(int *)(v93 + 36)];
  v97 = &v95[*(int *)(v89 + 36)];
  v245 = sub_23DC80074((unint64_t *)&unk_2543255C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24B0]);
  v98 = sub_23DCE1D00();
  v258 = v87;
  if ((v98 & 1) == 0)
  {
    v251 = 0;
    v101 = (void (*)(char *, char *, id))v256;
    v102 = v96;
    v257 = (uint64_t)v96;
    v224 = v97;
    while (1)
    {
      v101(v266, v102, v267);
      if ((sub_23DCE1CD0() & 1) == 0)
        break;
      v103 = v250;
      v104 = v247;
      v105 = &v247[*(int *)(v250 + 48)];
      v106 = v267;
      v101(v247, v95, v267);
      v101(v105, v97, v106);
      v107 = v249;
      v108 = &v249[*(int *)(v103 + 48)];
      v101(v249, v104, v106);
      v101(v108, v105, v106);
      v109 = v259;
      v259(v254, v107, v106);
      v258(v108, v106);
      v110 = *(int *)(v103 + 48);
      v111 = (uint64_t)v254;
      v112 = &v107[v110];
      v109(v107, v104, v106);
      v109(v112, v105, v106);
      v113 = v112;
      v97 = (char *)v258;
      v109((char *)(v111 + *(int *)(v248 + 36)), v113, v106);
      v114 = v107;
      v115 = (uint64_t)v255;
      ((void (*)(char *, id))v97)(v114, v106);
      v116 = v111;
      v117 = v257;
      v118 = v263;
      sub_23DC87A14(v116, v263, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      LOBYTE(v105) = sub_23DCE1CD0();
      v95 = v230;
      v101(v230, (char *)v117, v106);
      v119 = v118;
      v90 = v229;
      sub_23DC82858(v119, v229, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      if ((v105 & 1) == 0)
        goto LABEL_69;
      v120 = v267;
      v121 = sub_23DCE1CB8();
      sub_23DC827C4(v90, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      result = ((uint64_t (*)(char *, id))v97)(v95, v120);
      if ((v121 & 1) == 0)
        goto LABEL_70;
      v90 = v115;
      sub_23DC827C4(v263, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v272 = 1;
      sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      v122 = v226;
      v123 = v267;
      sub_23DCE1FE8();
      ((void (*)(uint64_t, id))v97)(v117, v123);
      v124 = v122;
      v125 = v259;
      v259((char *)v117, v124, v123);
      v126 = v266;
      v246 = (void (*)(char *, _QWORD, uint64_t, id))*((_QWORD *)v232 + 7);
      v246(v266, 0, 1, v123);
      v127 = v227;
      v125(v227, v126, v123);
      v128 = v228;
      sub_23DCE1988();
      v129 = v97;
      v130 = sub_23DCE12E0();
      v131 = *(_QWORD *)(v130 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48))(v128, 1, v130);
      if ((_DWORD)result == 1)
        goto LABEL_79;
      v132 = v225;
      sub_23DCE1C58();
      (*(void (**)(char *, uint64_t))(v131 + 8))(v128, v130);
      v133 = sub_23DCE10E8();
      (*(void (**)(char *, char *))(v269 + 8))(v132, v270);
      result = ((uint64_t (*)(char *, id))v129)(v127, v267);
      v101 = (void (*)(char *, char *, id))v256;
      if ((v133 & 1) != 0)
      {
        v136 = v223;
        v137 = v218;
        v95 = v231;
        v99 = v251;
        goto LABEL_15;
      }
      v134 = v251;
      v99 = v251 + 1;
      if (__OFADD__(v251, 1))
        goto LABEL_71;
      v102 = (char *)v257;
      v97 = v224;
      v135 = sub_23DCE1D00();
      v251 = v134 + 1;
      v95 = v231;
      if ((v135 & 1) != 0)
      {
        v100 = v246;
        goto LABEL_13;
      }
    }
LABEL_68:
    __break(1u);
LABEL_69:
    sub_23DC827C4(v90, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    result = ((uint64_t (*)(char *, id))v97)(v95, v267);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v99 = 0;
  v100 = (void (*)(char *, _QWORD, uint64_t, id))*((_QWORD *)v232 + 7);
  v101 = (void (*)(char *, char *, id))v256;
LABEL_13:
  v246 = v100;
  v100(v266, 1, 1, v267);
  v136 = v223;
  v137 = v218;
LABEL_15:
  sub_23DC827C4((uint64_t)v95, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
  v138 = sub_23DCE1C34();
  result = sub_23DCE1C34();
  v139 = v138 - result;
  if (__OFSUB__(v138, result))
    goto LABEL_75;
  v140 = __OFSUB__(v139, v99);
  v141 = v139 - (_QWORD)v99;
  if (!v140)
  {
    if (v141 < 1)
      v142 = 0.0;
    else
      v142 = v75 / (double)v141;
    v143 = sub_23DCCA5E4();
    v144 = (void *)objc_opt_self();
    v231 = (char *)objc_msgSend(v144, sel_quantityWithUnit_doubleValue_, v143, v142);

    v145 = sub_23DCCA5E4();
    v230 = (char *)objc_msgSend(v144, sel_quantityWithUnit_doubleValue_, v145, 0.0);

    result = sub_23DCE1CD0();
    if ((result & 1) == 0)
      goto LABEL_77;
    v146 = v250;
    v147 = v247;
    v148 = &v247[*(int *)(v250 + 48)];
    v149 = v136;
    v150 = v267;
    v101(v247, v137, v267);
    v266 = v148;
    v101(v148, v149, v150);
    v151 = v249;
    v152 = &v249[*(int *)(v146 + 48)];
    v101(v249, v147, v150);
    v101(v152, v148, v150);
    v153 = (uint64_t)v220;
    v154 = v259;
    v259(v220, v151, v150);
    v155 = v258;
    v258(v152, v150);
    v156 = &v151[*(int *)(v146 + 48)];
    v154(v151, v147, v150);
    v154(v156, v266, v150);
    v157 = v248;
    v154((char *)(v153 + *(int *)(v248 + 36)), v156, v150);
    v155(v151, v150);
    v158 = (uint64_t)v254;
    sub_23DC87A14(v153, (uint64_t)v254, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v159 = v221;
    sub_23DC82858(v158, (uint64_t)v221, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v160 = v219;
    v101(v219, (char *)v158, v150);
    sub_23DC827C4(v158, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    v161 = v222;
    v154(&v159[*(int *)(v222 + 36)], v160, v150);
    v97 = v241;
    sub_23DC87A14((uint64_t)v159, (uint64_t)v241, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
    v90 = (uint64_t)&v97[*(int *)(v161 + 36)];
    v95 = &v97[*(int *)(v157 + 36)];
    v162 = sub_23DCE1D00();
    v163 = v269;
    if ((v162 & 1) != 0)
    {
LABEL_22:
      v246(v253, 1, 1, v267);
      sub_23DC827C4((uint64_t)v97, (uint64_t (*)(_QWORD))sub_23DCCE4E8);
      v164 = (*(uint64_t (**)(char *, char *, uint64_t))(v239 + 24))(v218, v223, v240);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v273);
      return v164;
    }
    v165 = 0;
    v166 = v268 & 0xFFFFFFFFFFFFFF8;
    v266 = (char *)(v268 & 0xFFFFFFFFFFFFFF8);
    if (v268 < 0)
      v166 = v268;
    v229 = v166;
    v263 = v268 & 0xC000000000000001;
    v257 = v90;
    v232 = v95;
    while (1)
    {
      v101(v253, (char *)v90, v267);
      if ((sub_23DCE1CD0() & 1) == 0)
        break;
      v171 = v250;
      v172 = v101;
      v173 = v247;
      v174 = &v247[*(int *)(v250 + 48)];
      v175 = v267;
      v172(v247, v97, v267);
      v251 = v174;
      v172(v174, v95, v175);
      v176 = v249;
      v177 = &v249[*(int *)(v171 + 48)];
      v172(v249, v173, v175);
      v172(v177, v174, v175);
      v178 = (uint64_t)v254;
      v179 = v259;
      v259(v254, v176, v175);
      v159 = (char *)v258;
      v258(v177, v175);
      v180 = &v176[*(int *)(v171 + 48)];
      v179(v176, v173, v175);
      v179(v180, v251, v175);
      v179((char *)(v178 + *(int *)(v248 + 36)), v180, v175);
      ((void (*)(char *, id))v159)(v176, v175);
      v181 = v235;
      sub_23DC87A14(v178, v235, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v182 = v257;
      v95 = v255;
      LOBYTE(v179) = sub_23DCE1CD0();
      v90 = (uint64_t)v237;
      v256(v237, v182, v175);
      v97 = v236;
      sub_23DC82858(v181, (uint64_t)v236, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      if ((v179 & 1) == 0)
        goto LABEL_66;
      v183 = v267;
      v184 = sub_23DCE1CB8();
      sub_23DC827C4((uint64_t)v97, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      ((void (*)(uint64_t, id))v159)(v90, v183);
      if ((v184 & 1) == 0)
        goto LABEL_67;
      sub_23DC827C4(v181, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
      v272 = 1;
      sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
      v185 = v233;
      v186 = v257;
      v187 = v267;
      sub_23DCE1FE8();
      ((void (*)(uint64_t, id))v159)(v186, v187);
      v188 = v259;
      v259((char *)v186, v185, v187);
      v189 = v253;
      v246(v253, 0, 1, v187);
      v188(v252, v189, v187);
      v190 = v234;
      sub_23DCE1988();
      v191 = sub_23DCE12E0();
      v90 = *(_QWORD *)(v191 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v90 + 48))(v190, 1, v191);
      if ((_DWORD)result == 1)
        goto LABEL_78;
      v192 = v271;
      sub_23DCE1C58();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v190, v191);
      v95 = v270;
      if ((unint64_t)v268 >> 62)
      {
        swift_bridgeObjectRetain();
        v97 = (char *)sub_23DCE21D4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v97 = (char *)*((_QWORD *)v266 + 2);
      }
      v159 = v265;
      v193 = *(void (**)(char *, char *, char *))(v163 + 16);
      v193(v265, v192, v95);
      if ((uint64_t)v165 >= (uint64_t)v97)
      {
        v90 = *(_QWORD *)(v163 + 8);
        ((void (*)(char *, char *))v90)(v159, v95);
LABEL_51:
        v207 = v242;
        v193(v242, v192, v95);
        ((void (*)(char *, char *))v90)(v207, v95);
        v208 = 0;
        v209 = v95;
      }
      else
      {
        while (1)
        {
          if (v263)
          {
            v194 = (id)MEMORY[0x242640EF0](v165, v268);
          }
          else
          {
            if ((v165 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
            if (v165 >= *((_QWORD *)v266 + 2))
              goto LABEL_64;
            v194 = *(id *)(v268 + 8 * v165 + 32);
          }
          v195 = v194;
          v196 = objc_msgSend(v194, sel_dateInterval);

          v197 = v261;
          sub_23DCE10B8();

          v198 = v264;
          sub_23DCE10C4();
          v199 = *(void (**)(char *, uint64_t))(v260 + 8);
          v199(v197, v262);
          v159 = v265;
          LOBYTE(v197) = sub_23DCE1184();
          v163 = v269;
          v90 = *(_QWORD *)(v269 + 8);
          v200 = v198;
          v95 = v270;
          ((void (*)(char *, char *))v90)(v200, v270);
          ((void (*)(char *, char *))v90)(v159, v95);
          if ((v197 & 1) == 0)
            break;
          ++v165;
          v192 = v271;
          v193(v159, v271, v95);
          if (v97 == (char *)v165)
          {
            v165 = (unint64_t)v97;
            ((void (*)(char *, char *))v90)(v159, v95);
            goto LABEL_51;
          }
        }
        result = ((uint64_t (*)(char *, char *, char *))v193)(v242, v271, v95);
        if (v263)
        {
          v201 = (id)MEMORY[0x242640EF0](v165, v268);
        }
        else
        {
          if ((v165 & 0x8000000000000000) != 0)
            goto LABEL_72;
          if (v165 >= *((_QWORD *)v266 + 2))
            goto LABEL_73;
          v201 = *(id *)(v268 + 8 * v165 + 32);
        }
        v202 = v201;
        v203 = objc_msgSend(v201, sel_dateInterval);

        v204 = v261;
        sub_23DCE10B8();

        v205 = v242;
        LOBYTE(v202) = sub_23DCE10E8();
        v199(v204, v262);
        ((void (*)(char *, char *))v90)(v205, v95);
        if ((v202 & 1) != 0)
        {
          if (v263)
            v206 = (id)MEMORY[0x242640EF0](v165, v268);
          else
            v206 = *(id *)(v268 + 8 * v165 + 32);
          v210 = v206;
          v163 = v269;
          v208 = objc_msgSend(v206, sel_quantity);

          ++v165;
        }
        else
        {
          v208 = 0;
          v163 = v269;
        }
        v209 = v95;
      }
      v211 = v264;
      sub_23DCE10DC();
      v212 = sub_23DCE1184();
      ((void (*)(char *, char *))v90)(v211, v209);
      v213 = v209;
      if (v208)
      {
        v167 = *(void (**)(void))(v239 + 16);
        v168 = v208;
        v169 = v252;
        v167();
        v159 = v169;

        v163 = v269;
        v170 = v271;
        v97 = v241;
      }
      else
      {
        v159 = v252;
        if ((v212 & 1) != 0)
        {
          v214 = v231;
          v215 = v252;
          v216 = 1;
        }
        else
        {
          v214 = v230;
          v215 = v252;
          v216 = 0;
        }
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v239 + 16))(v214, v215, v216, v240);
        v170 = v271;
        v97 = v241;
      }
      v101 = (void (*)(char *, char *, id))v256;
      ((void (*)(char *, char *))v90)(v170, v213);
      v258(v159, v267);
      v90 = v257;
      v95 = v232;
      if ((sub_23DCE1D00() & 1) != 0)
        goto LABEL_22;
    }
LABEL_65:
    __break(1u);
LABEL_66:
    sub_23DC827C4((uint64_t)v97, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
    ((void (*)(uint64_t, id))v159)(v90, v267);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

void sub_23DCCCE78(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_23DCCCEEC(void *a1, uint64_t a2, _QWORD *a3)
{
  id v4;

  v4 = a1;
  MEMORY[0x242640B90]();
  if (*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23DCE1DD8();
  sub_23DCE1DFC();
  return sub_23DCE1DCC();
}

uint64_t type metadata accessor for TrainingLoadSummaryQueryServer()
{
  return objc_opt_self();
}

void sub_23DCCD0A4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_256CF9EC0)
  {
    sub_23DCE1C64();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_256CF9EC0);
  }
}

uint64_t sub_23DCCD104()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23DCCD128()
{
  sub_23DCC48B8();
}

unint64_t sub_23DCCD148()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256CF9EE0;
  if (!qword_256CF9EE0)
  {
    sub_23DC82800(255, &qword_256CF9ED8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256CF9EE0);
  }
  return result;
}

void sub_23DCCD1A8(uint64_t a1)
{
  sub_23DC82800(a1, &qword_256CF9EF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FD80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
}

unint64_t sub_23DCCD1C4()
{
  unint64_t result;

  result = qword_256CF9F00;
  if (!qword_256CF9F00)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_256CF9F00);
  }
  return result;
}

unint64_t sub_23DCCD218()
{
  unint64_t result;

  result = qword_256CF9F20;
  if (!qword_256CF9F20)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_256CF9F20);
  }
  return result;
}

uint64_t sub_23DCCD26C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_23DC802D0(255, a2);
    result = MEMORY[0x2426416D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23DCCD2AC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23DCCD2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = sub_23DCE11E4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_23DCE1C64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7 + 8) & ~v7;
  v9 = (*(_QWORD *)(v6 + 64) + v7 + v8) & ~v7;
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v0 + v8, v5);
  v10(v0 + v9, v5);
  return swift_deallocObject();
}

void sub_23DCCD3E0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(sub_23DCE11E4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(sub_23DCE1C64() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  sub_23DCCABF0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48), v2 + v6, *(_QWORD *)(v2 + v7), (char *)(v2 + ((v7 + v9 + 8) & ~v9)), (char *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + ((v7 + v9 + 8) & ~v9)) & ~v9)));
}

double sub_23DCCD4AC(unint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;

  if (a1 >> 62)
    goto LABEL_11;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_23DCE21D4())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x242640EF0](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(v8, sel_activeEnergyBurned);
      objc_msgSend(v11, sel_doubleValueForUnit_, a2);
      v13 = v12;

      a3 = a3 + v13;
      ++v7;
      if (v10 == v6)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return a3;
}

double sub_23DCCD5C8(unint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  double v11;
  double v12;

  if (a1 >> 62)
    goto LABEL_11;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_23DCE21D4())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x242640EF0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, sel_quantity);
      v10 = sub_23DCCA5E4();
      objc_msgSend(v9, sel_doubleValueForUnit_, v10);
      v12 = v11;

      a2 = a2 + v12;
      ++v5;
      if (v8 == v4)
        goto LABEL_9;
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_23DCCD6F4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  char v25;
  char *v26;
  char v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  id v46;
  uint64_t v47;

  v42 = a2;
  sub_23DCA8F2C(0);
  v43 = v3;
  v41 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1C64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v13 = sub_23DCE16C4();
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v38 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, &qword_2543256D0, (uint64_t (*)(uint64_t))sub_23DCA8F2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v30 - v16;
  v47 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_19:
    v18 = sub_23DCE21D4();
    if (v18)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v18)
    {
LABEL_3:
      v19 = 0;
      v36 = a1 & 0xFFFFFFFFFFFFFF8;
      v37 = a1 & 0xC000000000000001;
      v34 = a1;
      v35 = v6;
      v45 = v12;
      v32 = v5;
      v33 = v10;
      v31 = v18;
      while (1)
      {
        if (v37)
        {
          v21 = (id)MEMORY[0x242640EF0](v19, a1);
        }
        else
        {
          if (v19 >= *(_QWORD *)(v36 + 16))
          {
            __break(1u);
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
          v21 = *(id *)(a1 + 8 * v19 + 32);
        }
        v46 = v21;
        if (__OFADD__(v19, 1))
          goto LABEL_18;
        v44 = v19 + 1;
        v22 = v7;
        sub_23DCE1994();
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v17, 1, v43);
        if ((_DWORD)result == 1)
        {
          __break(1u);
          return result;
        }
        v24 = v38;
        sub_23DCE1B74();
        sub_23DCE16AC();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
        sub_23DC8E674();
        v25 = sub_23DCE1CD0();
        v26 = v12;
        v27 = v25;
        v10 = v33;
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v33, v26, v6);
        sub_23DC82858((uint64_t)v17, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        if ((v27 & 1) != 0)
        {
          v28 = sub_23DCE1CB8();
          sub_23DC827C4((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
          v29 = *(void (**)(char *, uint64_t))(v7 + 8);
          v29(v10, v6);
          v29(v45, v6);
          sub_23DC827C4((uint64_t)v17, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
          v7 = v22;
          if ((v28 & 1) != 0)
          {
            sub_23DCE2144();
            sub_23DCE2168();
            v7 = v22;
            sub_23DCE2174();
            sub_23DCE2150();
            goto LABEL_6;
          }
        }
        else
        {
          sub_23DC827C4((uint64_t)v5, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
          v20 = *(void (**)(char *, uint64_t))(v7 + 8);
          v20(v10, v6);
          v20(v45, v6);
          sub_23DC827C4((uint64_t)v17, (uint64_t (*)(_QWORD))sub_23DCA8F2C);
        }

LABEL_6:
        ++v19;
        v12 = v45;
        a1 = v34;
        v6 = v35;
        if (v44 == v31)
          return v47;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23DCCDAC0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  void *v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  id v50;
  void *v51;
  void (*v52)(uint64_t, char *, uint64_t);
  unsigned int v53;
  char *v54;
  char v55;
  void (*v56)(char *, char *, uint64_t);
  char v57;
  void (*v58)(char *, uint64_t);
  uint64_t v60;
  char *v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  id v71;

  v5 = sub_23DCE12E0();
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v63 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v60 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v60 - v13;
  v15 = sub_23DCE11E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v67 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v66 = (char *)&v60 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v65 = (char *)&v60 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v60 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v60 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v64 = (char *)&v60 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v60 - v31;
  sub_23DCE1C58();
  v71 = a1;
  v33 = objc_msgSend(a1, sel__startDate);
  if (v33)
  {
    v34 = v33;
    sub_23DCE11C0();

    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v28, v15);
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v36 = v14;
    v37 = 0;
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v36 = v14;
    v37 = 1;
  }
  v68 = v35;
  v35(v36, v37, 1, v15);
  v39 = v69;
  v38 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v7, a3, v70);
  v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v62(v14, 1, v15) != 1)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v38);
    v44 = v64;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v64, v14, v15);
    goto LABEL_12;
  }
  v40 = objc_msgSend(v71, sel__endDate);
  if (!v40)
  {
    v43 = (uint64_t)v61;
    v68(v61, 1, 1, v15);
    goto LABEL_10;
  }
  v41 = v40;
  sub_23DCE11C0();

  v42 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v43 = (uint64_t)v61;
  v42(v61, v28, v15);
  v68((char *)v43, 0, 1, v15);
  if (v62((char *)v43, 1, v15) == 1)
  {
LABEL_10:
    sub_23DCE11D8();
    sub_23DC8FE84(v43, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    goto LABEL_11;
  }
  v42(v25, (char *)v43, v15);
LABEL_11:
  v45 = v64;
  sub_23DCE128C();
  v46 = v25;
  v44 = v45;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v46, v15);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v7, v70);
  sub_23DC8FE84((uint64_t)v14, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_12:
  v47 = v67;
  v48 = v65;
  v49 = (uint64_t)v63;
  v50 = objc_msgSend(v71, sel__endDate);
  if (v50)
  {
    v51 = v50;
    sub_23DCE11C0();

    v52 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
    v52(v49, v28, v15);
    v68((char *)v49, 0, 1, v15);
    v53 = v62((char *)v49, 1, v15);
    v54 = v66;
    if (v53 != 1)
    {
      v52((uint64_t)v48, (char *)v49, v15);
      goto LABEL_17;
    }
  }
  else
  {
    v68((char *)v49, 1, 1, v15);
    v54 = v66;
  }
  sub_23DCE11D8();
  sub_23DC8FE84(v49, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_17:
  sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v55 = sub_23DCE1CB8();
  v56 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v56(v54, v48, v15);
  v56(v47, v32, v15);
  if ((v55 & 1) != 0)
    v57 = 0;
  else
    v57 = sub_23DCE1CB8() ^ 1;
  v58 = *(void (**)(char *, uint64_t))(v16 + 8);
  v58(v47, v15);
  v58(v54, v15);
  v58(v48, v15);
  v58(v44, v15);
  v58(v32, v15);
  return v57 & 1;
}

BOOL sub_23DCCE054(_BOOL8 result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  if (v2 <= 0x1B)
    v2 = 27;
  v3 = v2 - 27;
  v4 = result + 128;
  v5 = 32;
  while (1)
  {
    if (v3 == v1)
      goto LABEL_42;
    v6 = *(_QWORD *)(result + v5);
    v7 = *(_QWORD *)(v4 + v5 - 120);
    v8 = __OFADD__(v6, v7);
    v9 = v6 + v7;
    if (v8)
      goto LABEL_41;
    v10 = *(_QWORD *)(v4 + v5 - 112);
    v8 = __OFADD__(v9, v10);
    v11 = v9 + v10;
    if (v8)
      goto LABEL_41;
    v12 = *(_QWORD *)(v4 + v5 - 104);
    v8 = __OFADD__(v11, v12);
    v13 = v11 + v12;
    if (v8)
      goto LABEL_41;
    v14 = *(_QWORD *)(v4 + v5 - 96);
    v8 = __OFADD__(v13, v14);
    v15 = v13 + v14;
    if (v8)
      goto LABEL_41;
    v16 = *(_QWORD *)(v4 + v5 - 88);
    v8 = __OFADD__(v15, v16);
    v17 = v15 + v16;
    if (v8)
      goto LABEL_41;
    v18 = *(_QWORD *)(v4 + v5 - 80);
    v8 = __OFADD__(v17, v18);
    v19 = v17 + v18;
    if (v8)
      goto LABEL_41;
    v20 = *(_QWORD *)(v4 + v5 - 72);
    v8 = __OFADD__(v19, v20);
    v21 = v19 + v20;
    if (v8)
      goto LABEL_41;
    v22 = *(_QWORD *)(v4 + v5 - 64);
    v8 = __OFADD__(v21, v22);
    v23 = v21 + v22;
    if (v8)
      goto LABEL_41;
    v24 = *(_QWORD *)(v4 + v5 - 56);
    v8 = __OFADD__(v23, v24);
    v25 = v23 + v24;
    if (v8)
      goto LABEL_41;
    v26 = *(_QWORD *)(v4 + v5 - 48);
    v8 = __OFADD__(v25, v26);
    v27 = v25 + v26;
    if (v8)
      goto LABEL_41;
    v28 = *(_QWORD *)(v4 + v5 - 40);
    v8 = __OFADD__(v27, v28);
    v29 = v27 + v28;
    if (v8)
      goto LABEL_41;
    v30 = *(_QWORD *)(v4 + v5 - 32);
    v8 = __OFADD__(v29, v30);
    v31 = v29 + v30;
    if (v8)
      goto LABEL_41;
    v32 = *(_QWORD *)(v4 + v5 - 24);
    v8 = __OFADD__(v31, v32);
    v33 = v31 + v32;
    if (v8)
      goto LABEL_41;
    v34 = *(_QWORD *)(v4 + v5 - 16);
    v8 = __OFADD__(v33, v34);
    v35 = v33 + v34;
    if (v8)
      goto LABEL_41;
    v36 = *(_QWORD *)(v4 + v5 - 8);
    v8 = __OFADD__(v35, v36);
    v37 = v35 + v36;
    if (v8)
      goto LABEL_41;
    v38 = *(_QWORD *)(v4 + v5);
    v8 = __OFADD__(v37, v38);
    v39 = v37 + v38;
    if (v8)
      goto LABEL_41;
    v40 = *(_QWORD *)(v4 + v5 + 8);
    v8 = __OFADD__(v39, v40);
    v41 = v39 + v40;
    if (v8)
      goto LABEL_41;
    v42 = *(_QWORD *)(v4 + v5 + 16);
    v8 = __OFADD__(v41, v42);
    v43 = v41 + v42;
    if (v8)
      goto LABEL_41;
    v44 = *(_QWORD *)(v4 + v5 + 24);
    v8 = __OFADD__(v43, v44);
    v45 = v43 + v44;
    if (v8)
      goto LABEL_41;
    v46 = *(_QWORD *)(v4 + v5 + 32);
    v8 = __OFADD__(v45, v46);
    v47 = v45 + v46;
    if (v8)
      goto LABEL_41;
    v48 = *(_QWORD *)(v4 + v5 + 40);
    v8 = __OFADD__(v47, v48);
    v49 = v47 + v48;
    if (v8)
      goto LABEL_41;
    v50 = *(_QWORD *)(v4 + v5 + 48);
    v8 = __OFADD__(v49, v50);
    v51 = v49 + v50;
    if (v8)
      goto LABEL_41;
    v52 = *(_QWORD *)(v4 + v5 + 56);
    v8 = __OFADD__(v51, v52);
    v53 = v51 + v52;
    if (v8)
      goto LABEL_41;
    v54 = *(_QWORD *)(v4 + v5 + 64);
    v8 = __OFADD__(v53, v54);
    v55 = v53 + v54;
    if (v8)
      goto LABEL_41;
    v56 = *(_QWORD *)(v4 + v5 + 72);
    v8 = __OFADD__(v55, v56);
    v57 = v55 + v56;
    if (v8
      || (v58 = *(_QWORD *)(v4 + v5 + 80), v8 = __OFADD__(v57, v58), v59 = v57 + v58, v8)
      || (v60 = *(_QWORD *)(v4 + v5 + 88), v8 = __OFADD__(v59, v60), v61 = v59 + v60, v8))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v61 >= 6)
      break;
    if (v5 != 248)
    {
      v5 += 8;
      if (v1++ | v61)
        continue;
    }
    return 0;
  }
  if (v5 == 256)
    goto LABEL_44;
  v63 = 0;
  while (1)
  {
    v64 = *(_QWORD *)(result + v5);
    v8 = __OFADD__(v63, v64);
    v63 += v64;
    if (v8)
      break;
    v5 += 8;
    if (v5 == 256)
      return v63 > 0;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23DCCE264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_23DCE12D4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_23DC8F138(0, &qword_256CF9F60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], sub_23DCCE4CC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE24D8]);
    v9 = sub_23DCE20D8();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_23DCCE4CC();
      v14 = sub_23DCE1CA0();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_23DC80074(&qword_256CF9F70, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_23DCE1D00();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23DCCE4CC()
{
  return sub_23DC80074(&qword_256CF9F68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
}

void sub_23DCCE4E8(uint64_t a1)
{
  sub_23DC8F138(a1, &qword_256CF9F78, (uint64_t (*)(uint64_t))sub_23DCA8F2C, (uint64_t (*)(void))sub_23DCCE50C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE2C00]);
}

unint64_t sub_23DCCE50C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256CF9F80;
  if (!qword_256CF9F80)
  {
    sub_23DCA8F2C(255);
    v2 = v1;
    v3[0] = sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
    v3[1] = sub_23DC92A18();
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE1BD8], v2, v3);
    atomic_store(result, (unint64_t *)&qword_256CF9F80);
  }
  return result;
}

uint64_t sub_23DCCE58C()
{
  return swift_deallocObject();
}

uint64_t sub_23DCCE59C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23DCCCEEC(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_23DCCE5A4()
{
  return swift_deallocObject();
}

uint64_t sub_23DCCE5BC(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for BloodOxygenMetadataStatistics(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23DCD24F8(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23DCD117C(v6);
  *a1 = v3;
  return result;
}

BOOL sub_23DCCE63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD *v6;
  BOOL v7;
  void *v8;
  unsigned __int8 v9;
  id v10;
  char isEscapingClosureAtFileLocation;
  id aBlock[7];

  v1 = v0;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = type metadata accessor for BloodOxygenComparisonSummary(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCCEAD0();
  v6 = (_QWORD *)swift_allocObject();
  v7 = (char)v6;
  v6[2] = sub_23DCD1064;
  v6[3] = v1;
  aBlock[4] = sub_23DCA5C44;
  aBlock[5] = v6;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23DCCF830;
  aBlock[3] = &block_descriptor_8;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v9 = objc_msgSend(v5, sel_enumerateWithError_handler_, aBlock, v8);
  _Block_release(v8);
  v10 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if ((v9 & 1) != 0)
  {
    sub_23DCCF884((uint64_t)v4);
    v7 = sub_23DCCFA80();

    sub_23DC827C4((uint64_t)v4, type metadata accessor for BloodOxygenComparisonSummary);
    swift_release();
  }
  else
  {
    sub_23DCE1154();

    swift_willThrow();
    swift_release();

  }
  return v7;
}

uint64_t sub_23DCCE848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  void (*v28)(uint64_t, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;

  v2 = v1;
  sub_23DC87938();
  v5 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v33 - v9;
  sub_23DCD2618(0, (unint64_t *)&qword_2543244E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE08B8]);
  v34 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v33 - v15;
  v17 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange;
  v18 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetDay;
  v19 = sub_23DCE1C64();
  sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  result = sub_23DCE1CD0();
  if ((result & 1) != 0)
  {
    v21 = *(int *)(v5 + 48);
    v33[1] = v2;
    v33[2] = a1;
    v22 = &v10[v21];
    v33[0] = (uint64_t)v16;
    v23 = (uint64_t)v14;
    v24 = v5;
    v25 = *(_QWORD **)(v19 - 8);
    v26 = (void (*)(char *, uint64_t, uint64_t))v25[2];
    v26(v10, v17, v19);
    v26(v22, v18, v19);
    v27 = &v8[*(int *)(v24 + 48)];
    v26(v8, (uint64_t)v10, v19);
    v26(v27, (uint64_t)v22, v19);
    v28 = (void (*)(uint64_t, char *, uint64_t))v25[4];
    v28(v23, v8, v19);
    v29 = (void (*)(char *, uint64_t))v25[1];
    v29(v27, v19);
    v30 = &v8[*(int *)(v24 + 48)];
    v28((uint64_t)v8, v10, v19);
    v28((uint64_t)v30, v22, v19);
    v28(v23 + *(int *)(v34 + 36), v30, v19);
    v29(v8, v19);
    v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE08B8];
    v32 = v33[0];
    sub_23DCD2BCC(v23, v33[0], (unint64_t *)&qword_2543244E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE08B8]);
    sub_23DCE1CDC();
    return sub_23DCD2694(v32, (unint64_t *)&qword_2543244E0, v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23DCCEAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *ObjCClassFromMetadata;
  id v8;
  void *v9;
  void *v10;
  uint64_t inited;
  id v12;
  id v13;
  void (*v14)(char *, uint64_t);
  void *v15;
  void *v16;
  id v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v29;
  uint64_t v30;
  unint64_t v31;

  v1 = sub_23DCE1100();
  v30 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v29 - v5;
  sub_23DC802D0(0, &qword_256CFA1F0);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v8 = (id)*MEMORY[0x24BDD3608];
  v9 = (void *)MEMORY[0x242640CE0]();
  v10 = *(void **)(v0 + 16);
  v29 = objc_msgSend(ObjCClassFromMetadata, sel_entityEnumeratorWithType_profile_, v9, v10);

  sub_23DCBA28C(0, (unint64_t *)&qword_254324A90, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE3B90;
  *(_QWORD *)(inited + 32) = (id)HDDataEntityPredicateForObjectsFromAppleWatchSources();
  v12 = objc_msgSend(v10, sel_metadataManager);
  v13 = objc_msgSend(v12, sel_predicateWithMetadataKey_exists_, *MEMORY[0x24BDD3168], 1);

  *(_QWORD *)(inited + 40) = v13;
  sub_23DCCE848((uint64_t)v4);
  sub_23DCE1094();
  v14 = *(void (**)(char *, uint64_t))(v30 + 8);
  v14(v4, v1);
  v15 = (void *)sub_23DCE10AC();
  v14(v6, v1);
  v16 = (void *)MEMORY[0x242640CE0](v8);
  v17 = (id)HDSampleEntityPredicateForDateInterval();

  *(_QWORD *)(inited + 48) = v17;
  v31 = inited;
  sub_23DCE1DCC();
  v18 = v31;
  v19 = v29;
  sub_23DC93634(v18);
  swift_bridgeObjectRelease();
  v20 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingAllPredicates_, v20);

  objc_msgSend(v19, sel_setPredicate_, v21);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_23DCE39B0;
  sub_23DCE1D30();
  sub_23DC802D0(0, &qword_256CFA1F8);
  v23 = v19;
  v24 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v25 = swift_getObjCClassFromMetadata();
  v26 = objc_msgSend((id)objc_opt_self(), sel_orderingTermWithProperty_entityClass_ascending_, v24, v25, 1);

  *(_QWORD *)(v22 + 32) = v26;
  v31 = v22;
  sub_23DCE1DCC();
  sub_23DC802D0(0, qword_256CFA200);
  v27 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setOrderingTerms_, v27);

  return v23;
}

BOOL sub_23DCCEED0(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  id v8;

  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
  {
    v6 = a1;
    sub_23DCCF01C(v5);
  }
  else
  {
    v7 = (void *)objc_opt_self();
    sub_23DCE20F0();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(a1, sel_description, 0xD00000000000002DLL, 0x800000023DCE7210);
    sub_23DCE1D30();

    sub_23DCE1D54();
    swift_bridgeObjectRelease();
    v6 = (id)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_hk_assignError_code_description_, a3, 0, v6);
  }

  return v5 != 0;
}

id sub_23DCCF01C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  id v31;
  id v32;
  void (*v33)(char *, uint64_t);
  id result;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  double v47;
  double v48;
  id v49;
  char *v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  int v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  id v101;
  void *v102;
  __int128 v103;
  __int128 v104;

  v2 = v1;
  v101 = a1;
  v3 = sub_23DCE12E0();
  v92 = *(_QWORD *)(v3 - 8);
  v93 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v94 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCD0AAC();
  v89 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v91 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v95 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v97 = (uint64_t *)((char *)&v85 - v10);
  v11 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x24BDAC7A8](v11);
  v96 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23DCE11E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v90 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v99 = (char *)&v85 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v85 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v85 - v23;
  v25 = OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_lastSample;
  v26 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_lastSample);
  if (v26)
  {
    v27 = v26;
    v98 = v12;
    v28 = v25;
    v29 = v1;
    v30 = v11;
    v31 = objc_msgSend(v27, sel_endDate);
    sub_23DCE11C0();

    v32 = objc_msgSend(v101, sel_endDate);
    sub_23DCE11C0();

    sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    LOBYTE(v32) = sub_23DCE1CB8();

    v33 = *(void (**)(char *, uint64_t))(v15 + 8);
    v33(v22, v14);
    result = (id)((uint64_t (*)(char *, uint64_t))v33)(v24, v14);
    v11 = v30;
    v2 = v29;
    v25 = v28;
    v12 = v98;
    if ((v32 & 1) != 0)
    {
      __break(1u);
      goto LABEL_27;
    }
  }
  v98 = v14;
  v100 = v15;
  v35 = objc_msgSend(v101, sel_metadata);
  v36 = MEMORY[0x24BEE4AD8];
  if (!v35)
  {
    v103 = 0u;
    v104 = 0u;
LABEL_13:
    sub_23DCD10D8((uint64_t)&v103, (uint64_t)&qword_2543258A0, v36 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23DCBA28C);
    goto LABEL_25;
  }
  v37 = v35;
  v38 = sub_23DCE1C7C();

  v39 = sub_23DCE1D30();
  if (*(_QWORD *)(v38 + 16) && (v41 = sub_23DCD8A28(v39, v40), (v42 & 1) != 0))
  {
    sub_23DC8535C(*(_QWORD *)(v38 + 56) + 32 * v41, (uint64_t)&v103);
  }
  else
  {
    v103 = 0u;
    v104 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v104 + 1))
    goto LABEL_13;
  sub_23DC802D0(0, &qword_2543256D8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    v84 = *(void **)(v2 + v25);
    *(_QWORD *)(v2 + v25) = v101;

    return v101;
  }
  v43 = v102;
  v44 = (void *)objc_opt_self();
  v45 = v43;
  v46 = objc_msgSend(v44, sel_pascalUnitWithMetricPrefix_, 9);
  objc_msgSend(v45, sel_doubleValueForUnit_, v46);
  v48 = v47;

  v49 = objc_msgSend(v101, sel_endDate);
  v50 = v99;
  sub_23DCE11C0();

  v51 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics;
  swift_beginAccess();
  v52 = (void (*)(_QWORD, _QWORD, _QWORD))v97;
  sub_23DCD107C(v51, (uint64_t)v97);
  v53 = (*(uint64_t (**)(_QWORD, uint64_t, int *))(v12 + 48))(v52, 1, v11);
  v88 = v45;
  if (v53 == 1)
  {
    sub_23DCD10D8((uint64_t)v52, (uint64_t)qword_256CFA090, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23DC82800);
    v54 = (uint64_t)v24;
    v55 = v24;
    v56 = v98;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v55, v50, v98);
    v57 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v94, v2 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar, v93);
    v58 = v95;
    sub_23DCD0054(v54, v57, v95, v48);

    (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v56);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v58, 0, 1, v11);
LABEL_23:
    swift_beginAccess();
    v79 = v58;
    v80 = v51;
    goto LABEL_24;
  }
  v87 = v51;
  v59 = (uint64_t)v52;
  v60 = v96;
  sub_23DC87A14(v59, v96, type metadata accessor for BloodOxygenMetadataStatistics);
  v61 = v60 + v11[5];
  sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v62 = v98;
  v63 = sub_23DCE1CD0();
  v64 = v50;
  v65 = v90;
  v97 = *(_QWORD **)(v100 + 16);
  ((void (*)(char *, char *, uint64_t))v97)(v90, v64, v62);
  v66 = v61;
  v67 = v91;
  sub_23DC82858(v66, v91, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  v86 = v24;
  if ((v63 & 1) != 0)
    v68 = sub_23DCE1CB8();
  else
    v68 = 0;
  sub_23DC827C4(v67, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  v69 = *(void (**)(char *, uint64_t))(v100 + 8);
  v69(v65, v62);
  v70 = v62;
  if ((v68 & 1) == 0)
  {
    sub_23DCD028C();
    v81 = (uint64_t)v86;
    v82 = v99;
    ((void (*)(char *, char *, uint64_t))v97)(v86, v99, v62);
    v83 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v94, v2 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar, v93);
    v58 = v95;
    sub_23DCD0054(v81, v83, v95, v48);

    sub_23DC827C4(v96, type metadata accessor for BloodOxygenMetadataStatistics);
    v69(v82, v70);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v58, 0, 1, v11);
    v51 = v87;
    goto LABEL_23;
  }

  v71 = v11[6];
  v72 = v96;
  if (v48 >= *(double *)(v96 + v71))
    v48 = *(double *)(v96 + v71);
  result = (id)((uint64_t (*)(char *, uint64_t))v69)(v99, v70);
  *(double *)(v72 + v71) = v48;
  v73 = v11[7];
  v74 = *(_QWORD *)(v72 + v73);
  v75 = __OFADD__(v74, 1);
  v76 = v74 + 1;
  v77 = v87;
  if (!v75)
  {
    *(_QWORD *)(v72 + v73) = v76;
    v78 = v95;
    sub_23DC87A14(v72, v95, type metadata accessor for BloodOxygenMetadataStatistics);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v12 + 56))(v78, 0, 1, v11);
    swift_beginAccess();
    v79 = v78;
    v80 = v77;
LABEL_24:
    sub_23DCD25BC(v79, v80);
    swift_endAccess();
    goto LABEL_25;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23DCCF830(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  char v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = v2();

  return v4 & 1;
}

uint64_t sub_23DCCF884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - v4;
  sub_23DCD028C();
  v6 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_completedBaselineStatistics;
  swift_beginAccess();
  v7 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v7)
  {
    v19 = *(_QWORD **)v6;
    swift_bridgeObjectRetain_n();
    sub_23DCCE5BC(&v19);
    swift_bridgeObjectRelease();
    v8 = v19;
    v9 = v7 >> 1;
    if (v9 >= v19[2])
    {
      __break(1u);
      result = swift_release();
      __break(1u);
    }
    else
    {
      v10 = type metadata accessor for BloodOxygenMetadataStatistics(0);
      v11 = *(_QWORD *)(v10 - 8);
      sub_23DC82858((uint64_t)v8+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v9, (uint64_t)v5, type metadata accessor for BloodOxygenMetadataStatistics);
      swift_release();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
      v12 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
      swift_beginAccess();
      v13 = type metadata accessor for BloodOxygenComparisonSummary(0);
      sub_23DCD107C(v12, a1 + *(int *)(v13 + 20));
      return sub_23DCD1120((uint64_t)v5, a1);
    }
  }
  else
  {
    v15 = type metadata accessor for BloodOxygenMetadataStatistics(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    v16 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
    swift_beginAccess();
    v17 = type metadata accessor for BloodOxygenComparisonSummary(0);
    return sub_23DCD107C(v16, a1 + *(int *)(v17 + 20));
  }
  return result;
}

BOOL sub_23DCCFA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  double v25;
  double v26;
  double v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  sub_23DC82800(0, qword_256CFA090, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v28 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v28 - v17;
  sub_23DCD107C(v1, (uint64_t)&v28 - v17);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v19(v18, 1, v2) == 1)
  {
    v20 = (uint64_t)v18;
LABEL_7:
    sub_23DCD10D8(v20, (uint64_t)qword_256CFA090, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23DC82800);
    return 0;
  }
  v21 = *(double *)&v18[*(int *)(v2 + 24)];
  sub_23DC827C4((uint64_t)v18, type metadata accessor for BloodOxygenMetadataStatistics);
  v22 = __exp10(v21 * 0.0154 + -0.445);
  sub_23DCD107C(v1, (uint64_t)v16);
  if (v19(v16, 1, v2) == 1)
  {
    v20 = (uint64_t)v16;
    goto LABEL_7;
  }
  sub_23DC87A14((uint64_t)v16, (uint64_t)v8, type metadata accessor for BloodOxygenMetadataStatistics);
  v23 = type metadata accessor for BloodOxygenComparisonSummary(0);
  sub_23DCD107C(v1 + *(int *)(v23 + 20), (uint64_t)v13);
  if (v19(v13, 1, v2) == 1)
  {
    sub_23DC827C4((uint64_t)v8, type metadata accessor for BloodOxygenMetadataStatistics);
    v20 = (uint64_t)v13;
    goto LABEL_7;
  }
  sub_23DC87A14((uint64_t)v13, (uint64_t)v6, type metadata accessor for BloodOxygenMetadataStatistics);
  v25 = *(double *)&v8[*(int *)(v2 + 24)];
  sub_23DC827C4((uint64_t)v8, type metadata accessor for BloodOxygenMetadataStatistics);
  v26 = v25 - v22;
  v27 = *(double *)&v6[*(int *)(v2 + 24)];
  sub_23DC827C4((uint64_t)v6, type metadata accessor for BloodOxygenMetadataStatistics);
  return v27 <= v26;
}

uint64_t sub_23DCCFD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetDay;
  v2 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetEndDate;
  v4 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_gregorianCalendar;
  v6 = sub_23DCE12E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23DCCFDDC()
{
  return type metadata accessor for OxygenSaturationElevationContextProvider(0);
}

uint64_t type metadata accessor for OxygenSaturationElevationContextProvider(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_256CF9FB0);
}

uint64_t sub_23DCCFDF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23DCE1C64();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE11E4();
    if (v2 <= 0x3F)
    {
      result = sub_23DCE12E0();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_23DCCFEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
  v13 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics, 1, 1, v13);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_lastSample) = 0;
  sub_23DCD2BCC(a1, v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v15 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetDay;
  v16 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  v17 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar;
  v18 = sub_23DCE12E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  *(_QWORD *)(v6
            + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_completedBaselineStatistics) = a4;
  v19 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
  swift_beginAccess();
  sub_23DCD25BC(a5, v19);
  swift_endAccess();
  v20 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics;
  swift_beginAccess();
  sub_23DCD25BC(a6, v20);
  swift_endAccess();
  return v6;
}

uint64_t sub_23DCD0054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a1;
  sub_23DCD0AAC();
  MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE1100();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE1C64();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v26 - v17;
  v19 = (void *)sub_23DCE116C();
  v20 = (void *)sub_23DCE12A4();
  objc_msgSend(v19, sel_hk_morningIndexWithCalendar_, v20);

  sub_23DCE1C28();
  sub_23DCE1BBC();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  v21 = (uint64_t)v27;
  sub_23DCE10A0();
  v22 = sub_23DCE12E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a2, v22);
  v23 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v26, v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a3, v16, v12);
  v24 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  result = sub_23DC87A14(v21, a3 + v24[5], (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  *(double *)(a3 + v24[6]) = a4;
  *(_QWORD *)(a3 + v24[7]) = 1;
  return result;
}

uint64_t sub_23DCD028C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  sub_23DCD2618(0, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v41 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - v3;
  v5 = sub_23DCE1C64();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v37 - v12;
  v14 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v40 = (uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v37 - v18;
  v20 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics;
  swift_beginAccess();
  v43 = v20;
  sub_23DCD107C(v20, (uint64_t)v13);
  v44 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_23DCD10D8((uint64_t)v13, (uint64_t)qword_256CFA090, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23DC82800);
  v38 = v14;
  v39 = v11;
  sub_23DC87A14((uint64_t)v13, (uint64_t)v19, type metadata accessor for BloodOxygenMetadataStatistics);
  v22 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange;
  sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  v23 = sub_23DCE1CD0();
  v24 = v42;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v7, v19, v5);
  sub_23DCD2568(v22, (uint64_t)v4);
  if ((v23 & 1) != 0)
  {
    v25 = sub_23DCE1CB8();
    sub_23DCD2694((uint64_t)v4, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    if ((v25 & 1) != 0)
    {
      v26 = v40;
      sub_23DC82858((uint64_t)v19, v40, type metadata accessor for BloodOxygenMetadataStatistics);
      v27 = (unint64_t *)(v1
                               + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_completedBaselineStatistics);
      swift_beginAccess();
      v28 = *v27;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v27 = v28;
      v30 = v38;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v28 = sub_23DC8EA98(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
        *v27 = v28;
      }
      v31 = v44;
      v33 = *(_QWORD *)(v28 + 16);
      v32 = *(_QWORD *)(v28 + 24);
      if (v33 >= v32 >> 1)
      {
        v28 = sub_23DC8EA98(v32 > 1, v33 + 1, 1, v28);
        *v27 = v28;
      }
      *(_QWORD *)(v28 + 16) = v33 + 1;
      sub_23DC87A14(v26, v28+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v33, type metadata accessor for BloodOxygenMetadataStatistics);
      swift_endAccess();
      sub_23DC827C4((uint64_t)v19, type metadata accessor for BloodOxygenMetadataStatistics);
      v34 = (uint64_t)v39;
      goto LABEL_14;
    }
  }
  else
  {
    sub_23DCD2694((uint64_t)v4, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
  }
  sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_23DCE1FF4();
  v30 = v38;
  v34 = (uint64_t)v39;
  if (v45)
  {
    sub_23DC827C4((uint64_t)v19, type metadata accessor for BloodOxygenMetadataStatistics);
    v31 = v44;
  }
  else
  {
    sub_23DC87A14((uint64_t)v19, (uint64_t)v39, type metadata accessor for BloodOxygenMetadataStatistics);
    v31 = v44;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v34, 0, 1, v30);
    v35 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
    swift_beginAccess();
    sub_23DCD25BC(v34, v35);
    swift_endAccess();
  }
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v34, 1, 1, v30);
  v36 = v43;
  swift_beginAccess();
  sub_23DCD25BC(v34, v36);
  return swift_endAccess();
}

uint64_t sub_23DCD0784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23DCD2694(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetDay;
  v2 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar;
  v4 = sub_23DCE12E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  sub_23DCD10D8(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics, (uint64_t)qword_256CFA090, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23DC82800);
  sub_23DCD10D8(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics, (uint64_t)qword_256CFA090, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_23DC82800);

  return swift_deallocClassInstance();
}

uint64_t sub_23DCD0894()
{
  return type metadata accessor for BloodOxygenMetadataStatisticsBuilder(0);
}

uint64_t type metadata accessor for BloodOxygenMetadataStatisticsBuilder(uint64_t a1)
{
  return sub_23DC9B050(a1, (uint64_t *)&unk_256CFA080);
}

void sub_23DCD08B0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23DCD2618(319, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  if (v0 <= 0x3F)
  {
    sub_23DCE1C64();
    if (v1 <= 0x3F)
    {
      sub_23DCE12E0();
      if (v2 <= 0x3F)
      {
        sub_23DC82800(319, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for BloodOxygenMetadataStatistics(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_256CFA1A0);
}

uint64_t *sub_23DCD09C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23DCE1C64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23DCE11E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    sub_23DCD0AAC();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    v14 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
  }
  return a1;
}

void sub_23DCD0AAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256CFA140)
  {
    sub_23DCE11E4();
    sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v0 = sub_23DCE1EB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256CFA140);
  }
}

uint64_t sub_23DCD0B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23DCE11E4();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v9(v5, v6);
  sub_23DCD0AAC();
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v5 + *(int *)(v7 + 36), v6);
}

uint64_t sub_23DCD0BB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  sub_23DCD0AAC();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_23DCD0C70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  sub_23DCD0AAC();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23DCD0D34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  sub_23DCD0AAC();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_23DCD0DF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  sub_23DCD0AAC();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_23DCD0EB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCD0EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23DCE1C64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_23DCD0AAC();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23DCD0F34()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCD0F40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_23DCE1C64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_23DCD0AAC();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23DCD0FBC()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DCE1C64();
  if (v0 <= 0x3F)
  {
    sub_23DCD0AAC();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for BloodOxygenComparisonSummary(uint64_t a1)
{
  return sub_23DC9B050(a1, qword_256CFA260);
}

BOOL sub_23DCD1064(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23DCCEED0(a1, a2, a3);
}

uint64_t sub_23DCD106C()
{
  return swift_deallocObject();
}

uint64_t sub_23DCD107C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCD10D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_23DCD1120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCD117C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v134 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v128 = *(_QWORD *)(v134 - 8);
  v3 = MEMORY[0x24BDAC7A8](v134);
  v125 = (uint64_t)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v135 = (uint64_t)&v120 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v132 = (uint64_t)&v120 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v131 = (uint64_t)&v120 - v9;
  v10 = a1[1];
  result = sub_23DCE2240();
  if (result >= v10)
  {
    if (v10 < 0)
      goto LABEL_138;
    if (v10)
      return sub_23DCD1B5C(0, v10, 1, a1);
    return result;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_146;
  v133 = a1;
  v122 = result;
  v129 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x24BEE4AF8];
    v127 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    v121 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      v112 = v16;
      if (v18 >= 2)
      {
        v113 = *v133;
        do
        {
          v114 = v18 - 2;
          if (v18 < 2)
            goto LABEL_133;
          if (!v113)
            goto LABEL_145;
          v115 = *(_QWORD *)&v112[16 * v114 + 32];
          v116 = *(_QWORD *)&v112[16 * v18 + 24];
          v117 = v129;
          sub_23DCD1D94(v113 + *(_QWORD *)(v128 + 72) * v115, v113 + *(_QWORD *)(v128 + 72) * *(_QWORD *)&v112[16 * v18 + 16], v113 + *(_QWORD *)(v128 + 72) * v116, v127);
          v129 = v117;
          if (v117)
            break;
          if (v116 < v115)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v112 = sub_23DCD24E4((uint64_t)v112);
          if (v114 >= *((_QWORD *)v112 + 2))
            goto LABEL_135;
          v118 = &v112[16 * v114 + 32];
          *(_QWORD *)v118 = v115;
          *((_QWORD *)v118 + 1) = v116;
          v119 = *((_QWORD *)v112 + 2);
          if (v18 > v119)
            goto LABEL_136;
          memmove(&v112[16 * v18 + 16], &v112[16 * v18 + 32], 16 * (v119 - v18));
          *((_QWORD *)v112 + 2) = v119 - 1;
          v18 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_23DCE1DF0();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v128 + 80);
    v121 = v14;
    v127 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      v21 = v133;
    }
    else
    {
      v21 = v133;
      v22 = *v133;
      v130 = v22;
      v23 = *(_QWORD *)(v128 + 72);
      v24 = v131;
      sub_23DC82858(v22 + v23 * v20, v131, type metadata accessor for BloodOxygenMetadataStatistics);
      v25 = v22 + v23 * v19;
      v26 = v132;
      sub_23DC82858(v25, v132, type metadata accessor for BloodOxygenMetadataStatistics);
      v27 = *(int *)(v134 + 24);
      v28 = *(double *)(v24 + v27);
      v29 = *(double *)(v26 + v27);
      sub_23DC827C4(v26, type metadata accessor for BloodOxygenMetadataStatistics);
      sub_23DC827C4(v24, type metadata accessor for BloodOxygenMetadataStatistics);
      v17 = v19 + 2;
      v136 = v23;
      if (v19 + 2 >= v10)
      {
        v38 = v23;
        if (v28 >= v29)
          goto LABEL_39;
      }
      else
      {
        v126 = v19;
        v123 = v16;
        v30 = v23 * v20;
        v31 = v130;
        v32 = v23 * v17;
        while (1)
        {
          v33 = v10;
          v34 = v17;
          v35 = v131;
          sub_23DC82858(v31 + v32, v131, type metadata accessor for BloodOxygenMetadataStatistics);
          v36 = v132;
          sub_23DC82858(v31 + v30, v132, type metadata accessor for BloodOxygenMetadataStatistics);
          v37 = *(double *)(v35 + *(int *)(v134 + 24)) >= *(double *)(v36 + *(int *)(v134 + 24));
          sub_23DC827C4(v36, type metadata accessor for BloodOxygenMetadataStatistics);
          sub_23DC827C4(v35, type metadata accessor for BloodOxygenMetadataStatistics);
          if (v28 < v29 == v37)
            break;
          ++v17;
          v38 = v136;
          v31 += v136;
          v10 = v33;
          if (v33 == v34 + 1)
          {
            v17 = v33;
            v21 = v133;
            v16 = v123;
            v19 = v126;
            if (v28 < v29)
              goto LABEL_26;
            goto LABEL_39;
          }
        }
        v21 = v133;
        v16 = v123;
        v19 = v126;
        v10 = v33;
        v38 = v136;
        if (v28 >= v29)
          goto LABEL_39;
      }
LABEL_26:
      if (v17 < v19)
        goto LABEL_139;
      if (v19 < v17)
      {
        v123 = v16;
        v124 = v10;
        v39 = 0;
        v40 = v38 * (v17 - 1);
        v41 = v17 * v38;
        v42 = v19;
        v126 = v19;
        v43 = v19 * v38;
        do
        {
          if (v42 != v17 + v39 - 1)
          {
            v44 = v130;
            if (!v130)
              goto LABEL_144;
            v45 = v130 + v43;
            sub_23DC87A14(v130 + v43, v125, type metadata accessor for BloodOxygenMetadataStatistics);
            if (v43 < v40 || v45 >= v44 + v41)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v40)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_23DC87A14(v125, v44 + v40, type metadata accessor for BloodOxygenMetadataStatistics);
            v21 = v133;
            v38 = v136;
          }
          ++v42;
          --v39;
          v40 -= v38;
          v41 -= v38;
          v43 += v38;
        }
        while (v42 < v17 + v39);
        v16 = v123;
        v10 = v124;
        v19 = v126;
      }
    }
LABEL_39:
    if (v17 >= v10)
      goto LABEL_56;
    if (__OFSUB__(v17, v19))
      goto LABEL_137;
    if (v17 - v19 >= v122)
      goto LABEL_56;
    if (__OFADD__(v19, v122))
      goto LABEL_140;
    v46 = v19 + v122 >= v10 ? v10 : v19 + v122;
    if (v46 < v19)
      break;
    if (v17 != v46)
    {
      v123 = v16;
      v124 = v46;
      v47 = *(_QWORD *)(v128 + 72);
      v136 = v47 * (v17 - 1);
      v130 = v47;
      v48 = v17 * v47;
      v126 = v19;
      do
      {
        v49 = 0;
        v50 = v19;
        do
        {
          v51 = *v21;
          v52 = v131;
          sub_23DC82858(v48 + v49 + *v21, v131, type metadata accessor for BloodOxygenMetadataStatistics);
          v53 = v136 + v49 + v51;
          v54 = v132;
          sub_23DC82858(v53, v132, type metadata accessor for BloodOxygenMetadataStatistics);
          v55 = *(int *)(v134 + 24);
          v56 = *(double *)(v52 + v55);
          v57 = *(double *)(v54 + v55);
          sub_23DC827C4(v54, type metadata accessor for BloodOxygenMetadataStatistics);
          sub_23DC827C4(v52, type metadata accessor for BloodOxygenMetadataStatistics);
          if (v56 >= v57)
            break;
          v58 = *v21;
          if (!*v21)
            goto LABEL_142;
          v59 = v58 + v136 + v49;
          sub_23DC87A14(v58 + v48 + v49, v135, type metadata accessor for BloodOxygenMetadataStatistics);
          swift_arrayInitWithTakeFrontToBack();
          sub_23DC87A14(v135, v59, type metadata accessor for BloodOxygenMetadataStatistics);
          v49 -= v130;
          ++v50;
          v21 = v133;
        }
        while (v17 != v50);
        ++v17;
        v136 += v130;
        v48 += v130;
        v19 = v126;
      }
      while (v17 != v124);
      v17 = v124;
      v16 = v123;
    }
LABEL_56:
    if (v17 < v19)
      goto LABEL_132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23DCD2218(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v61 = *((_QWORD *)v16 + 2);
    v60 = *((_QWORD *)v16 + 3);
    v18 = v61 + 1;
    if (v61 >= v60 >> 1)
      v16 = sub_23DCD2218((char *)(v60 > 1), v61 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v62 = v16 + 32;
    v63 = &v16[16 * v61 + 32];
    *(_QWORD *)v63 = v19;
    *((_QWORD *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        v64 = v18 - 1;
        if (v18 >= 4)
        {
          v69 = &v62[16 * v18];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_121;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_122;
          v76 = v18 - 2;
          v77 = &v62[16 * v18 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_124;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_127;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_131;
            v92 = v67 < v102;
            goto LABEL_93;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v93 = *((_QWORD *)v16 + 4);
            v94 = *((_QWORD *)v16 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_87;
          }
          v66 = *((_QWORD *)v16 + 4);
          v65 = *((_QWORD *)v16 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_123;
        v76 = v18 - 2;
        v82 = &v62[16 * v18 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_126;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_129;
        if (__OFADD__(v86, v91))
          goto LABEL_130;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_93:
          if (v92)
            v64 = v76;
          goto LABEL_95;
        }
LABEL_87:
        if ((v87 & 1) != 0)
          goto LABEL_125;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_128;
        if (v98 < v86)
          goto LABEL_14;
LABEL_95:
        v103 = v17;
        v104 = v64 - 1;
        if (v64 - 1 >= v18)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v133)
          goto LABEL_143;
        v105 = v16;
        v106 = &v62[16 * v104];
        v107 = *(_QWORD *)v106;
        v108 = &v62[16 * v64];
        v109 = *((_QWORD *)v108 + 1);
        v110 = v129;
        sub_23DCD1D94(*v133 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v106, *v133 + *(_QWORD *)(v128 + 72) * *(_QWORD *)v108, *v133 + *(_QWORD *)(v128 + 72) * v109, v127);
        v129 = v110;
        if (v110)
          goto LABEL_115;
        if (v109 < v107)
          goto LABEL_118;
        if (v64 > *((_QWORD *)v105 + 2))
          goto LABEL_119;
        *(_QWORD *)v106 = v107;
        *(_QWORD *)&v62[16 * v104 + 8] = v109;
        v111 = *((_QWORD *)v105 + 2);
        if (v64 >= v111)
          goto LABEL_120;
        v16 = v105;
        v18 = v111 - 1;
        memmove(&v62[16 * v64], v108 + 16, 16 * (v111 - 1 - v64));
        *((_QWORD *)v105 + 2) = v111 - 1;
        v92 = v111 > 2;
        v17 = v103;
        if (!v92)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v133[1];
    if (v17 >= v10)
      goto LABEL_104;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23DCE21B0();
  __break(1u);
  return result;
}

uint64_t sub_23DCD1B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a1;
  v32 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v7 = MEMORY[0x24BDAC7A8](v32);
  v33 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v29 = (uint64_t)&v26 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v26 - v13;
  v31 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v35 = v15 * (v31 - 1);
    v30 = v15;
    v34 = v15 * v31;
LABEL_5:
    v16 = 0;
    v17 = v28;
    while (1)
    {
      v18 = *a4;
      sub_23DC82858(v34 + v16 + *a4, (uint64_t)v14, type metadata accessor for BloodOxygenMetadataStatistics);
      v19 = v35 + v16 + v18;
      v20 = v29;
      sub_23DC82858(v19, v29, type metadata accessor for BloodOxygenMetadataStatistics);
      v21 = *(int *)(v32 + 24);
      v22 = *(double *)&v14[v21];
      v23 = *(double *)(v20 + v21);
      sub_23DC827C4(v20, type metadata accessor for BloodOxygenMetadataStatistics);
      result = sub_23DC827C4((uint64_t)v14, type metadata accessor for BloodOxygenMetadataStatistics);
      if (v22 >= v23)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v27)
          return result;
        goto LABEL_5;
      }
      v24 = *a4;
      if (!*a4)
        break;
      v25 = v24 + v35 + v16;
      sub_23DC87A14(v24 + v34 + v16, v33, type metadata accessor for BloodOxygenMetadataStatistics);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23DC87A14(v33, v25, type metadata accessor for BloodOxygenMetadataStatistics);
      v16 -= v30;
      if (v31 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23DCD1D94(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  double v22;
  double v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v42 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v8 = MEMORY[0x24BDAC7A8](v42);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v40 - v11;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_70;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_71;
  v16 = (uint64_t)(a2 - a1) / v14;
  v45 = a1;
  v44 = a4;
  v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = a4 + v19;
      v43 = a4 + v19;
      v45 = a2;
      v41 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        v31 = -v14;
        do
        {
          v32 = a3 + v31;
          sub_23DC82858(v29 + v31, (uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
          v33 = a2 + v31;
          sub_23DC82858(a2 + v31, (uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
          v34 = *(int *)(v42 + 24);
          v35 = *(double *)&v12[v34];
          v36 = *(double *)&v10[v34];
          sub_23DC827C4((uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
          sub_23DC827C4((uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
          if (v35 >= v36)
          {
            v37 = v43;
            v43 += v31;
            if (a3 < v37 || v32 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v45 += v31;
          }
          v29 = v43;
          if (v43 <= a4)
            break;
          a2 = v33;
          a3 += v31;
        }
        while (v33 > v41);
      }
      goto LABEL_68;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v41 = a4 + v18;
    v43 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_23DC82858(a2, (uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
        sub_23DC82858(a4, (uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
        v21 = *(int *)(v42 + 24);
        v22 = *(double *)&v12[v21];
        v23 = *(double *)&v10[v21];
        sub_23DC827C4((uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
        sub_23DC827C4((uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
        v24 = v45;
        if (v22 >= v23)
        {
          v27 = v44 + v14;
          if (v45 < v44 || v45 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v44 = v27;
          v25 = a2;
        }
        else
        {
          v25 = a2 + v14;
          if (v45 < a2 || v45 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v45 = v24 + v14;
        a4 = v44;
        if (v44 >= v41)
          break;
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_23DCD2330(&v45, &v44, (uint64_t *)&v43, type metadata accessor for BloodOxygenMetadataStatistics);
    return 1;
  }
LABEL_72:
  result = sub_23DCE2210();
  __break(1u);
  return result;
}

char *sub_23DCD2218(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23DC82800(0, &qword_256CFA1E0, (uint64_t (*)(uint64_t))sub_23DCD250C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23DCD2324(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_23DCD2330(a1, a2, a3, (uint64_t (*)(_QWORD))sub_23DC8FF80);
}

uint64_t sub_23DCD2330(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_23DCE2210();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23DCD243C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_23DCE2210();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_23DCD24E4(uint64_t a1)
{
  return sub_23DCD2218(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23DCD24F8(_QWORD *a1)
{
  return sub_23DC8F300(0, a1[2], 0, a1);
}

void sub_23DCD250C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256CFA1E8)
  {
    v0 = sub_23DCE1EB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256CFA1E8);
  }
}

uint64_t sub_23DCD2568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCD2618(0, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCD25BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_23DCD2618(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_23DCE1C64();
    v7 = sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23DCD2694(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  sub_23DCD2618(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_23DCD26D0(uint64_t a1)
{
  return sub_23DC8F86C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23DCD26E4(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t result;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v76 = a4;
  v77 = a3;
  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v71 = (char *)&v57 - v10;
  v75 = sub_23DCE12E0();
  v11 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v69 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC87938();
  v65 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v64 = (char *)&v57 - v17;
  v18 = sub_23DCE1C64();
  v19 = *(_QWORD **)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v57 - v23;
  sub_23DCD2618(0, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
  v62 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v63 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v68 = (uint64_t)&v57 - v28;
  *(_QWORD *)(v4 + 16) = a1;
  v61 = (void (*)(uint64_t, uint64_t, uint64_t))v19[2];
  v61(v4 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetDay, (uint64_t)a2, v18);
  v29 = v4 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetEndDate;
  v30 = sub_23DCE11E4();
  v66 = *(_QWORD *)(v30 - 8);
  v67 = v30;
  (*(void (**)(uint64_t, uint64_t))(v66 + 16))(v29, v77);
  v73 = v4;
  v70 = v11;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v60(v4 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_gregorianCalendar, v76, v75);
  v31 = a1;
  sub_23DCE1BC8();
  v32 = a2;
  sub_23DCE1BF8();
  v33 = (void (*)(char *, uint64_t))v19[1];
  v33(v22, v18);
  sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  v34 = v24;
  v35 = v32;
  result = sub_23DCE1CD0();
  if ((result & 1) != 0)
  {
    v37 = (void (*)(uint64_t, uint64_t))v33;
    v39 = v64;
    v38 = v65;
    v40 = &v64[*(int *)(v65 + 48)];
    v41 = (void (*)(char *, char *, uint64_t))v19[4];
    v58 = (uint64_t)v34;
    v41(v64, v34, v18);
    v42 = v35;
    v74 = v35;
    v43 = (void (*)(char *, char *, uint64_t))v61;
    v61((uint64_t)v40, (uint64_t)v42, v18);
    v44 = &v16[*(int *)(v38 + 48)];
    v43(v16, v39, v18);
    v43(v44, v40, v18);
    v45 = (uint64_t)v63;
    v41(v63, v16, v18);
    v59 = v37;
    v37((uint64_t)v44, v18);
    v46 = &v16[*(int *)(v38 + 48)];
    v41(v16, v39, v18);
    v41(v46, v40, v18);
    v41((char *)(v45 + *(int *)(v62 + 36)), v46, v18);
    v37((uint64_t)v16, v18);
    v47 = v68;
    sub_23DCD2BCC(v45, v68, (unint64_t *)&unk_254324978, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE1B68]);
    v48 = v58;
    v43((char *)v58, v74, v18);
    v49 = (uint64_t)v69;
    v51 = v75;
    v50 = v76;
    v60((uint64_t)v69, v76, v75);
    v52 = type metadata accessor for BloodOxygenMetadataStatistics(0);
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
    v54 = (uint64_t)v71;
    v53(v71, 1, 1, v52);
    v55 = (uint64_t)v72;
    v53(v72, 1, 1, v52);
    type metadata accessor for BloodOxygenMetadataStatisticsBuilder(0);
    v56 = swift_allocObject();
    sub_23DCCFEB4(v47, v48, v49, MEMORY[0x24BEE4AF8], v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v50, v51);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v77, v67);
    v59((uint64_t)v74, v18);
    result = v73;
    *(_QWORD *)(v73 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_builder) = v56;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23DCD2BCC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_23DCD2618(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_23DCD2C18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, int *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
    v8 = *((_QWORD *)v7 - 1);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_23DCE1C64();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = v7[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23DCE11E4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      sub_23DCD0AAC();
      v17(&v14[*(int *)(v18 + 36)], &v15[*(int *)(v18 + 36)], v16);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v19 = *(int *)(a3 + 20);
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    if (v9((uint64_t *)v21, 1, v7))
    {
      sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = sub_23DCE1C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      v24 = v7[5];
      v25 = &v20[v24];
      v26 = &v21[v24];
      v27 = sub_23DCE11E4();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v28(v25, v26, v27);
      sub_23DCD0AAC();
      v28(&v25[*(int *)(v29 + 36)], &v26[*(int *)(v29 + 36)], v27);
      *(_QWORD *)&v20[v7[6]] = *(_QWORD *)&v21[v7[6]];
      *(_QWORD *)&v20[v7[7]] = *(_QWORD *)&v21[v7[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(v20, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23DCD2E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  v4 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    v6 = sub_23DCE1C64();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    v7 = a1 + *(int *)(v4 + 20);
    v8 = sub_23DCE11E4();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    sub_23DCD0AAC();
    v9(v7 + *(int *)(v10 + 36), v8);
  }
  v11 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v11, 1, v4);
  if (!(_DWORD)result)
  {
    v13 = sub_23DCE1C64();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
    v14 = v11 + *(int *)(v4 + 20);
    v15 = sub_23DCE11E4();
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v17(v14, v15);
    sub_23DCD0AAC();
    return ((uint64_t (*)(uint64_t, uint64_t))v17)(v14 + *(int *)(v16 + 36), v15);
  }
  return result;
}

char *sub_23DCD2FDC(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;

  v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = v6[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23DCE11E4();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    sub_23DCD0AAC();
    v15(&v12[*(int *)(v16 + 36)], &v13[*(int *)(v16 + 36)], v14);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v17 = *(int *)(a3 + 20);
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (v8(v19, 1, v6))
  {
    sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    v22 = v6[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    v25 = sub_23DCE11E4();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    sub_23DCD0AAC();
    v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
    *(_QWORD *)&v18[v6[6]] = *(_QWORD *)&v19[v6[6]];
    *(_QWORD *)&v18[v6[7]] = *(_QWORD *)&v19[v6[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v18, 0, 1, v6);
  }
  return a1;
}

char *sub_23DCD3214(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;

  v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (v10)
    {
      v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_6:
      sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, v11);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_9;
    }
    v13 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v14 = v6[5];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_23DCE11E4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    sub_23DCD0AAC();
    v18(&v15[*(int *)(v19 + 36)], &v16[*(int *)(v19 + 36)], v17);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    if (v10)
    {
      sub_23DC827C4((uint64_t)a1, type metadata accessor for BloodOxygenMetadataStatistics);
      v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_6;
    }
    v20 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(a1, a2, v20);
    v21 = v6[5];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23DCE11E4();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24);
    v25(v22, v23, v24);
    sub_23DCD0AAC();
    v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  }
LABEL_9:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = v8(&a1[v27], 1, v6);
  v31 = v8(v29, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      v34 = sub_23DCE1C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v28, v29, v34);
      v35 = v6[5];
      v36 = &v28[v35];
      v37 = &v29[v35];
      v38 = sub_23DCE11E4();
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      v39(v36, v37, v38);
      sub_23DCD0AAC();
      v39(&v36[*(int *)(v40 + 36)], &v37[*(int *)(v40 + 36)], v38);
      *(_QWORD *)&v28[v6[6]] = *(_QWORD *)&v29[v6[6]];
      *(_QWORD *)&v28[v6[7]] = *(_QWORD *)&v29[v6[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v28, 0, 1, v6);
      return a1;
    }
    v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v31)
    {
      v41 = sub_23DCE1C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v28, v29, v41);
      v42 = v6[5];
      v43 = &v28[v42];
      v44 = &v29[v42];
      v45 = sub_23DCE11E4();
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24);
      v46(v43, v44, v45);
      sub_23DCD0AAC();
      v46(&v43[*(int *)(v47 + 36)], &v44[*(int *)(v47 + 36)], v45);
      *(_QWORD *)&v28[v6[6]] = *(_QWORD *)&v29[v6[6]];
      *(_QWORD *)&v28[v6[7]] = *(_QWORD *)&v29[v6[7]];
      return a1;
    }
    sub_23DC827C4((uint64_t)v28, type metadata accessor for BloodOxygenMetadataStatistics);
    v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, v32);
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  return a1;
}

char *sub_23DCD35F4(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, int *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;

  v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = v6[5];
    v12 = &a1[v11];
    v13 = &a2[v11];
    v14 = sub_23DCE11E4();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    sub_23DCD0AAC();
    v15(&v12[*(int *)(v16 + 36)], &v13[*(int *)(v16 + 36)], v14);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v17 = *(int *)(a3 + 20);
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (v8(v19, 1, v6))
  {
    sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    v22 = v6[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    v25 = sub_23DCE11E4();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
    v26(v23, v24, v25);
    sub_23DCD0AAC();
    v26(&v23[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
    *(_QWORD *)&v18[v6[6]] = *(_QWORD *)&v19[v6[6]];
    *(_QWORD *)&v18[v6[7]] = *(_QWORD *)&v19[v6[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v18, 0, 1, v6);
  }
  return a1;
}

char *sub_23DCD382C(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;

  v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (v10)
    {
      v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
LABEL_6:
      sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, v11);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_9;
    }
    v13 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    v14 = v6[5];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_23DCE11E4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
    v18(v15, v16, v17);
    sub_23DCD0AAC();
    v18(&v15[*(int *)(v19 + 36)], &v16[*(int *)(v19 + 36)], v17);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    if (v10)
    {
      sub_23DC827C4((uint64_t)a1, type metadata accessor for BloodOxygenMetadataStatistics);
      v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
      goto LABEL_6;
    }
    v20 = sub_23DCE1C64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(a1, a2, v20);
    v21 = v6[5];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23DCE11E4();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40);
    v25(v22, v23, v24);
    sub_23DCD0AAC();
    v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  }
LABEL_9:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = v8(&a1[v27], 1, v6);
  v31 = v8(v29, 1, v6);
  if (v30)
  {
    if (!v31)
    {
      v34 = sub_23DCE1C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v28, v29, v34);
      v35 = v6[5];
      v36 = &v28[v35];
      v37 = &v29[v35];
      v38 = sub_23DCE11E4();
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
      v39(v36, v37, v38);
      sub_23DCD0AAC();
      v39(&v36[*(int *)(v40 + 36)], &v37[*(int *)(v40 + 36)], v38);
      *(_QWORD *)&v28[v6[6]] = *(_QWORD *)&v29[v6[6]];
      *(_QWORD *)&v28[v6[7]] = *(_QWORD *)&v29[v6[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v28, 0, 1, v6);
      return a1;
    }
    v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  else
  {
    if (!v31)
    {
      v41 = sub_23DCE1C64();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v28, v29, v41);
      v42 = v6[5];
      v43 = &v28[v42];
      v44 = &v29[v42];
      v45 = sub_23DCE11E4();
      v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40);
      v46(v43, v44, v45);
      sub_23DCD0AAC();
      v46(&v43[*(int *)(v47 + 36)], &v44[*(int *)(v47 + 36)], v45);
      *(_QWORD *)&v28[v6[6]] = *(_QWORD *)&v29[v6[6]];
      *(_QWORD *)&v28[v6[7]] = *(_QWORD *)&v29[v6[7]];
      return a1;
    }
    sub_23DC827C4((uint64_t)v28, type metadata accessor for BloodOxygenMetadataStatistics);
    v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  }
  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, v32);
  memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  return a1;
}

uint64_t sub_23DCD3C0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCD3C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_23DCD3C6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCD3C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC82800(0, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_23DCD3CD0()
{
  unint64_t v0;

  sub_23DC82800(319, qword_256CFA090, type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23DCD3D50(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  id v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  char *v61;
  unint64_t *v62;
  unint64_t *v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  id v66;
  char *v67;
  char *v68;
  char v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  unint64_t *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(uint64_t);
  void (*v96)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  int v100;
  void (*v101)(uint64_t);
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  void (*v108)(uint64_t);
  char *v109;
  char *v110;
  char *v111;
  id v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  void (*v131)(char *, char *, uint64_t);
  unint64_t v132;
  unsigned int (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  void (*v138)(char *, uint64_t, uint64_t, uint64_t);
  char *v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;

  v3 = sub_23DCE1100();
  v129 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v125 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v124 = (char *)&v109 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v128 = (char *)&v109 - v8;
  v9 = sub_23DCE11E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v109 = (char *)&v109 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v110 = (char *)&v109 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v109 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v123 = (char *)&v109 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v127 = (char *)&v109 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v122 = (char *)&v109 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v126 = (char *)&v109 - v26;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, v27);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v109 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29);
  v114 = (char *)&v109 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v121 = (uint64_t)&v109 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v120 = (char *)&v109 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v119 = (uint64_t)&v109 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v118 = (char *)&v109 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v109 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v109 - v45;
  v141 = v10;
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v47((char *)&v109 - v45, 1, 1, v9);
  v138 = v47;
  v47(v44, 1, 1, v9);
  v48 = objc_msgSend(v1, sel_primarySleepPeriod);
  if (v48)
  {
    v112 = v48;
    v49 = objc_msgSend(v48, sel_segments);
    sub_23DCD5078();
    v50 = sub_23DCE1DC0();

    v113 = a1;
    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      v51 = sub_23DCE21D4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v139 = v44;
    v52 = v19;
    if (v51)
    {
      if (v51 < 1)
      {
        __break(1u);
        return;
      }
      v53 = 0;
      v135 = v50 & 0xC000000000000001;
      v54 = (unint64_t *)&unk_2543244C0;
      v117 = v52;
      v115 = v51;
      v136 = v31;
      v137 = v46;
      v116 = v50;
      v134 = v3;
      do
      {
        if (v135)
          v55 = (id)MEMORY[0x242640EF0](v53, v50);
        else
          v55 = *(id *)(v50 + 8 * v53 + 32);
        v56 = v55;
        objc_msgSend(v55, sel_category);
        if ((_HKCategoryValueSleepAnalysisIsAsleep() & 1) != 0)
        {
          v57 = (uint64_t)v46;
          v58 = v119;
          sub_23DC87754(v57, v119);
          v133 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
          if (v133(v58, 1, v9) == 1)
          {
            v59 = objc_msgSend(v56, sel_dateInterval);
            v60 = v128;
            sub_23DCE10B8();

            v61 = v126;
            sub_23DCE10DC();
            (*(void (**)(char *, uint64_t))(v129 + 8))(v60, v3);
            v62 = v54;
            v63 = v54;
            v64 = v9;
            v65 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
            sub_23DC87CE0(v58, v62, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
          }
          else
          {
            v61 = v126;
            (*(void (**)(char *, uint64_t, uint64_t))(v141 + 32))(v126, v58, v9);
            v63 = v54;
            v64 = v9;
            v65 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
          }
          v66 = objc_msgSend(v56, sel_dateInterval);
          v67 = v124;
          sub_23DCE10B8();

          v68 = v122;
          sub_23DCE10DC();
          v140 = *(void (**)(char *, uint64_t))(v129 + 8);
          v140(v67, v134);
          v132 = sub_23DC817E4();
          v69 = sub_23DCE1CB8();
          v70 = v141;
          v71 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
          if ((v69 & 1) != 0)
            v72 = v68;
          else
            v72 = v61;
          v73 = (uint64_t)v118;
          v131 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
          v71(v118, v72, v64);
          v74 = *(void (**)(char *, uint64_t))(v70 + 8);
          v74(v68, v64);
          v130 = v74;
          v74(v61, v64);
          v75 = (uint64_t)v137;
          sub_23DC87CE0((uint64_t)v137, v63, v65);
          v138((char *)v73, 0, 1, v64);
          sub_23DCD50B4(v73, v75, v63, v65);
          v76 = v121;
          sub_23DC87754((uint64_t)v139, v121);
          if (v133(v76, 1, v64) == 1)
          {
            v77 = objc_msgSend(v56, sel_dateInterval);
            v78 = v56;
            v79 = v63;
            v80 = v128;
            sub_23DCE10B8();

            v81 = v127;
            sub_23DCE10C4();
            v82 = v134;
            v140(v80, v134);
            sub_23DC87CE0(v76, v63, v65);
            v83 = v82;
          }
          else
          {
            v81 = v127;
            (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v127, v76, v64);
            v83 = v134;
            v78 = v56;
            v79 = v63;
          }
          v84 = objc_msgSend(v78, sel_dateInterval);
          v85 = v125;
          sub_23DCE10B8();

          v86 = v123;
          sub_23DCE10C4();
          v140(v85, v83);
          if ((sub_23DCE1CC4() & 1) != 0)
            v87 = v86;
          else
            v87 = v81;
          v88 = (uint64_t)v120;
          v131(v120, v87, v64);

          v89 = v130;
          v130(v86, v64);
          v89(v81, v64);
          v90 = (uint64_t)v139;
          sub_23DC87CE0((uint64_t)v139, v79, v65);
          v138((char *)v88, 0, 1, v64);
          sub_23DCD50B4(v88, v90, v79, v65);
          v52 = v117;
          v46 = v137;
          v3 = v83;
          v50 = v116;
          v51 = v115;
          v9 = v64;
          v54 = v79;
        }
        else
        {

        }
        ++v53;
        v31 = v136;
      }
      while (v51 != v53);
    }
    v91 = v52;
    swift_bridgeObjectRelease();
    v92 = (uint64_t)v114;
    sub_23DC87754((uint64_t)v46, (uint64_t)v114);
    v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v141 + 48);
    if (v93((char *)v92, 1, v9) == 1)
    {

      v94 = v113;
    }
    else
    {
      v98 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 32);
      v98(v91, v92, v9);
      v99 = (uint64_t)v139;
      sub_23DC87754((uint64_t)v139, (uint64_t)v31);
      v100 = v93(v31, 1, v9);
      v94 = v113;
      if (v100 != 1)
      {
        v102 = v31;
        v103 = v110;
        v98(v110, (uint64_t)v102, v9);
        v104 = v141;
        v105 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
        v137 = v46;
        v105(v109, v91, v9);
        v106 = v99;
        v105(v111, v103, v9);
        sub_23DCE10D0();

        v107 = *(void (**)(char *, uint64_t))(v104 + 8);
        v107(v103, v9);
        v107(v91, v9);
        v108 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
        sub_23DC87CE0(v106, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
        sub_23DC87CE0((uint64_t)v137, (unint64_t *)&unk_2543244C0, v108);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56))(v94, 0, 1, v3);
        return;
      }

      (*(void (**)(char *, uint64_t))(v141 + 8))(v91, v9);
      v114 = v31;
    }
    v101 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_23DC87CE0((uint64_t)v139, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_23DC87CE0((uint64_t)v46, (unint64_t *)&unk_2543244C0, v101);
    sub_23DC87CE0((uint64_t)v114, (unint64_t *)&unk_2543244C0, v101);
    v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56);
    v97 = v94;
  }
  else
  {
    v95 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_23DC87CE0((uint64_t)v44, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_23DC87CE0((uint64_t)v46, (unint64_t *)&unk_2543244C0, v95);
    v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56);
    v97 = a1;
  }
  v96(v97, 1, 1, v3);
}

void sub_23DCD47BC(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  double v20;
  id v21;
  id v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v34 = a1;
  v3 = sub_23DCE1490();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - v8;
  v10 = sub_23DCE12E0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v11);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v31 - v16;
  v18 = objc_msgSend(v1, sel_summaryFilteredToPrimaryPeriod);
  if (v18)
  {
    v19 = v18;
    v32 = v4;
    v33 = v3;
    objc_msgSend(v18, sel_sleepDuration);
    if (v20 <= COERCE_DOUBLE(1))
    {
      objc_msgSend(v2, sel_morningIndex);
      sub_23DCE1C28();
      v28 = objc_msgSend(v2, sel_calendar);
      sub_23DCE12BC();

      v29 = sub_23DCE1100();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 1, 1, v29);
      v30 = sub_23DCE11E4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v17, 1, 1, v30);
      (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v6, *MEMORY[0x24BE3FE80], v33);
      sub_23DCE14B4();

    }
    else
    {
      sub_23DCD4C40(v19, (void (*)(char *, uint64_t))v2, (uint64_t)v17);
      objc_msgSend(v2, sel_morningIndex);
      sub_23DCE1C28();
      v21 = objc_msgSend(v2, sel_calendar);
      sub_23DCE12BC();

      v22 = objc_msgSend((id)objc_opt_self(), sel_secondUnit);
      objc_msgSend(v19, sel_sleepDuration);
      v24 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v22, v23);

      sub_23DCD3D50((uint64_t)v9);
      sub_23DC87754((uint64_t)v17, (uint64_t)v15);
      (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v6, *MEMORY[0x24BE3FE88], v33);
      sub_23DCE14B4();

      sub_23DC87CE0((uint64_t)v17, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    }
  }
  else
  {
    objc_msgSend(v1, sel_morningIndex);
    sub_23DCE1C28();
    v25 = objc_msgSend(v1, sel_calendar);
    sub_23DCE12BC();

    v26 = sub_23DCE1100();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
    v27 = sub_23DCE11E4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE3FE80], v3);
    sub_23DCE14B4();
  }
}

uint64_t sub_23DCD4C40@<X0>(void *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  id v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v46 = a2;
  v53 = a3;
  v4 = sub_23DCE12E0();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1C64();
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE1100();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244B0, v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - v16;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v44 - v19;
  v21 = sub_23DCE11E4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v44 - v26;
  v28 = objc_msgSend(a1, sel_creationInterval);
  if (v28)
  {
    v29 = v28;
    sub_23DCE10B8();

    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v15, v30, 1, v8);
  sub_23DCD50B4((uint64_t)v15, (uint64_t)v17, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) == 1)
  {
    sub_23DC87CE0((uint64_t)v17, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v31(v20, 1, 1, v21);
LABEL_7:
    sub_23DC87CE0((uint64_t)v20, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    v33 = v53;
    v34 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v33, v34, 1, v21);
  }
  sub_23DCE10C4();
  v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32(v17, v8);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v31(v20, 0, 1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    goto LABEL_7;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v20, v21);
  v35 = v46;
  objc_msgSend(v46, sel_morningIndex);
  v36 = v47;
  sub_23DCE1C28();
  v37 = objc_msgSend(v35, sel_calendar);
  v38 = v50;
  sub_23DCE12BC();

  v46 = v32;
  v39 = v45;
  sub_23DCE1BBC();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
  sub_23DCE10C4();
  v46(v39, v8);
  sub_23DC817E4();
  if ((sub_23DCE1CB8() & 1) != 0)
    v40 = v25;
  else
    v40 = v27;
  v41 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v53, v40, v21);
  v42 = *(void (**)(char *, uint64_t))(v22 + 8);
  v42(v25, v21);
  v42(v27, v21);
  v33 = v41;
  v34 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v33, v34, 1, v21);
}

unint64_t sub_23DCD5078()
{
  unint64_t result;

  result = qword_254325700;
  if (!qword_254325700)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254325700);
  }
  return result;
}

uint64_t sub_23DCD50B4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_23DC7F518(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_23DCD5100(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v2 + 16) = 14;
  *(_OWORD *)(v2 + 24) = xmmword_23DCE4AF0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 64) = v5;
  *(_QWORD *)(v2 + 72) = v5;
  v6 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData;
  v7 = sub_23DCE1C64();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_lastDayIndex, 1, 1, v7);
  *(_QWORD *)(v2 + 40) = a1;
  *(_BYTE *)(v2 + 48) = a2 & 1;
  return v2;
}

uint64_t sub_23DCD51B4(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  double v58;
  double v59;
  double v60;
  _QWORD **v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  _QWORD *v73;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v75;
  unint64_t v76;
  double v77;
  _QWORD *v78;
  char v79;
  double v80;
  unint64_t v81;
  unint64_t v82;
  id v83;
  uint64_t v84;
  double v85;
  char *v86;
  id v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  Class v104;
  id v105;
  uint64_t v106;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t (*v122)(char *, uint64_t, uint64_t);
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  id v140;

  v4 = v3;
  v140 = a1;
  sub_23DC87938();
  v112 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v115 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v109 = (char *)&v108 - v10;
  sub_23DCA8F2C(0);
  v110 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v111 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v113 = (uint64_t)&v108 - v14;
  v120 = sub_23DCE16C4();
  v119 = *(_QWORD *)(v120 - 8);
  v15 = MEMORY[0x24BDAC7A8](v120);
  v114 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v118 = (void (*)(char *, uint64_t))((char *)&v108 - v17);
  v117 = sub_23DCE16E8();
  v116 = *(char **)(v117 - 8);
  v18 = MEMORY[0x24BDAC7A8](v117);
  v108 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v108 - v20;
  v22 = sub_23DCE1C64();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v126 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v128 = (char *)&v108 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v125 = (char *)&v108 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v127 = (char *)&v108 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v130 = (char *)&v108 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v138 = (char *)&v108 - v34;
  v136 = sub_23DCE16A0();
  v135 = *(_QWORD *)(v136 - 8);
  v35 = MEMORY[0x24BDAC7A8](v136);
  v123 = (char *)&v108 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v134 = (char *)&v108 - v37;
  v133 = sub_23DCE1688();
  v132 = *(_QWORD *)(v133 - 8);
  v38 = MEMORY[0x24BDAC7A8](v133);
  v121 = (char *)&v108 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v131 = (char *)&v108 - v40;
  sub_23DCA368C();
  v42 = MEMORY[0x24BDAC7A8](v41);
  v124 = (char *)&v108 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v108 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v108 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v108 - v50;
  v52 = v4 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData;
  swift_beginAccess();
  v139 = v52;
  sub_23DCD6364(v52, (uint64_t)v51);
  v122 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v52) = v122(v51, 1, v22);
  sub_23DCD63A8((uint64_t)v51);
  v53 = (_DWORD)v52 == 1;
  v54 = a2;
  if (v53 && (a3 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v49, a2, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v49, 0, 1, v22);
    v55 = v139;
    swift_beginAccess();
    sub_23DCA90BC((uint64_t)v49, v55);
    swift_endAccess();
  }
  v56 = v4 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_lastDayIndex;
  v57 = *(char **)(v23 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v57)(v49, v54, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v49, 0, 1, v22);
  swift_beginAccess();
  sub_23DCA90BC((uint64_t)v49, v56);
  swift_endAccess();
  v58 = *(double *)(v4 + 32);
  objc_msgSend(v140, sel__value);
  v60 = v59;
  v61 = (_QWORD **)(v4 + 56);
  swift_beginAccess();
  v62 = *(_QWORD *)(v4 + 56);
  v63 = *(_QWORD *)(v62 + 16);
  v64 = 0.0;
  v65 = 0.0;
  if (v63)
    v65 = *(double *)(v62 + 8 * v63 + 24);
  v129 = v54;
  v66 = *(double *)(v4 + 24);
  objc_msgSend(v140, sel__value);
  v68 = v67;
  v69 = v4 + 64;
  swift_beginAccess();
  v70 = *(_QWORD *)(v4 + 64);
  v71 = *(_QWORD *)(v70 + 16);
  if (v71)
    v64 = *(double *)(v70 + 8 * v71 + 24);
  v72 = v58 * v60;
  swift_beginAccess();
  v73 = *v61;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v61 = v73;
  v137 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v73 = sub_23DC8EAC0(0, v73[2] + 1, 1, v73);
    *v61 = v73;
  }
  v76 = v73[2];
  v75 = v73[3];
  if (v76 >= v75 >> 1)
  {
    v73 = sub_23DC8EAC0((_QWORD *)(v75 > 1), v76 + 1, 1, v73);
    *v61 = v73;
  }
  v77 = v66 * v68;
  v73[2] = v76 + 1;
  *(double *)&v73[v76 + 4] = v72 + (1.0 - v58) * v65;
  swift_endAccess();
  swift_beginAccess();
  v78 = *(_QWORD **)v69;
  v79 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v69 = v78;
  if ((v79 & 1) == 0)
  {
    v78 = sub_23DC8EAC0(0, v78[2] + 1, 1, v78);
    *(_QWORD *)v69 = v78;
  }
  v80 = v77 + (1.0 - v66) * v64;
  v82 = v78[2];
  v81 = v78[3];
  if (v82 >= v81 >> 1)
  {
    v78 = sub_23DC8EAC0((_QWORD *)(v81 > 1), v82 + 1, 1, v78);
    *(_QWORD *)v69 = v78;
  }
  v78[2] = v82 + 1;
  *(double *)&v78[v82 + 4] = v80;
  swift_endAccess();
  v83 = objc_msgSend(v140, sel__unit);
  v84 = *(_QWORD *)(*(_QWORD *)v69 + 16);
  if (v84)
    v85 = *(double *)(*(_QWORD *)v69 + 8 * v84 + 24);
  else
    v85 = 0.0;
  v86 = v131;
  v87 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v83, v85);

  sub_23DCE167C();
  v88 = v129;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v138, v129, v22);
  sub_23DCD6364(v139, (uint64_t)v46);
  v89 = v127;
  v90 = (uint64_t)v124;
  v91 = v134;
  sub_23DCE1694();
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v121, v86, v133);
  (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v123, v91, v136);
  sub_23DCE16DC();
  ((void (*)(char *, uint64_t, uint64_t))v57)(v130, v88, v22);
  sub_23DCD6364(v139, v90);
  v92 = v125;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v125, v88, v22);
  if (v122((char *)v90, 1, v22) == 1)
  {
    v93 = *(_QWORD *)(v23 + 32);
    ((void (*)(char *, char *, uint64_t))v93)(v89, v92, v22);
    sub_23DCD63A8(v90);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v92, v22);
    v93 = *(_QWORD *)(v23 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v93)(v89, v90, v22);
  }
  v94 = v128;
  v95 = v126;
  sub_23DCE1BC8();
  sub_23DCE1BE0();
  v96 = *(void (**)(char *, uint64_t))(v23 + 8);
  v96(v95, v22);
  sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
  if ((sub_23DCE1CD0() & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v97 = v112;
  v98 = v109;
  v99 = &v109[*(int *)(v112 + 48)];
  ((void (*)(char *, char *, uint64_t))v93)(v109, v89, v22);
  ((void (*)(char *, char *, uint64_t))v93)(v99, v94, v22);
  v100 = v115;
  v101 = &v115[*(int *)(v97 + 48)];
  ((void (*)(char *, char *, uint64_t))v57)(v115, v98, v22);
  ((void (*)(char *, char *, uint64_t))v57)(v101, v99, v22);
  v102 = (uint64_t)v111;
  ((void (*)(char *, char *, uint64_t))v93)(v111, v100, v22);
  v96(v101, v22);
  v103 = &v100[*(int *)(v97 + 48)];
  ((void (*)(char *, char *, uint64_t))v93)(v100, v98, v22);
  ((void (*)(char *, char *, uint64_t))v93)(v103, v99, v22);
  ((void (*)(uint64_t, char *, uint64_t))v93)(v102 + *(int *)(v110 + 36), v103, v22);
  v96(v100, v22);
  sub_23DCD63E4(v102, v113);
  v89 = v116;
  v57 = v137;
  v88 = v117;
  (*((void (**)(char *, char *, uint64_t))v116 + 2))(v108, v137, v117);
  v96 = v118;
  sub_23DCE16B8();
  v93 = v119;
  v94 = (char *)v120;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v119 + 16))(v114, v96, v120);
  sub_23DC94DA4();
  v105 = objc_allocWithZone(v104);
  sub_23DCE1B68();
  v106 = swift_beginAccess();
  MEMORY[0x242640B90](v106);
  if (*(_QWORD *)((*(_QWORD *)(v4 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 + 72) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
LABEL_27:
    sub_23DCE1DD8();
  sub_23DCE1DFC();
  sub_23DCE1DCC();
  swift_endAccess();
  (*(void (**)(_QWORD, char *))(v93 + 8))(v96, v94);
  (*((void (**)(char *, uint64_t))v89 + 1))(v57, v88);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v134, v136);
  return (*(uint64_t (**)(char *, uint64_t))(v132 + 8))(v131, v133);
}

uint64_t sub_23DCD5E0C(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  char v20;
  void (*v21)(char *, uint64_t);
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);

  v32 = a4;
  v35 = a2;
  v36 = a3;
  sub_23DCA368C();
  MEMORY[0x24BDAC7A8](v4);
  v33 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23DCE1C64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  v15 = sub_23DCE16C4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1B74();
  sub_23DCE16AC();
  v19 = *(void (**)(char *, uint64_t))(v16 + 8);
  v34 = v15;
  v19(v18, v15);
  v20 = sub_23DCE1BD4();
  v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v14, v6);
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v7 + 16))(v12, v36, v6);
  if ((v20 & 1) != 0)
  {
    v21(v12, v6);
    v22 = 0;
  }
  else
  {
    sub_23DCE1B74();
    sub_23DCE16AC();
    v36 = v19;
    v19(v18, v34);
    sub_23DC80074(&qword_254324950, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24A8]);
    v23 = sub_23DCE1CB8();
    v21(v14, v6);
    v21(v12, v6);
    if ((v23 & 1) != 0)
    {
      v22 = 0;
    }
    else
    {
      v24 = v32 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData;
      swift_beginAccess();
      v25 = v24;
      v26 = v33;
      sub_23DCD6364(v25, v33);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v26, 1, v6) == 1)
      {
        sub_23DCD63A8(v26);
        v22 = 0;
      }
      else
      {
        v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
        v28 = v31;
        v27(v31, v26, v6);
        sub_23DCE1B74();
        sub_23DCE16AC();
        v36(v18, v34);
        v22 = sub_23DCE1CB8() ^ 1;
        v21(v14, v6);
        v21(v28, v6);
      }
    }
  }
  return v22 & 1;
}

uint64_t sub_23DCD6120()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23DCD63A8(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData);
  sub_23DCD63A8(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_lastDayIndex);
  return swift_deallocClassInstance();
}

uint64_t sub_23DCD6178()
{
  return type metadata accessor for EWMABaselineCalculator();
}

uint64_t type metadata accessor for EWMABaselineCalculator()
{
  uint64_t result;

  result = qword_256CFA2D0;
  if (!qword_256CFA2D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DCD61BC()
{
  unint64_t v0;

  sub_23DCA368C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_23DCD6258@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = a2 & 1;
  v6 = swift_allocObject();
  result = sub_23DCD5100(a1, v5);
  *a3 = v6;
  return result;
}

uint64_t sub_23DCD62A8(void *a1, uint64_t a2, char a3)
{
  return sub_23DCD51B4(a1, a2, a3);
}

uint64_t sub_23DCD62C8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[7];

  v5 = *v2;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 72);
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  swift_bridgeObjectRetain();
  return sub_23DC8E8E0((uint64_t (*)(id *))sub_23DCD6344, (uint64_t)v8, v6);
}

uint64_t sub_23DCD633C()
{
  return 112;
}

uint64_t sub_23DCD6344(uint64_t a1)
{
  uint64_t v1;

  return sub_23DCD5E0C(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32)) & 1;
}

uint64_t sub_23DCD6364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCA368C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23DCD63A8(uint64_t a1)
{
  uint64_t v2;

  sub_23DCA368C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23DCD63E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCA8F2C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23DCD6428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;

  type metadata accessor for SleepingSampleBaselineCalculator(319, *(_QWORD *)(a1 + 80), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 8), a4);
  if (v4 <= 0x3F)
  {
    sub_23DCB5374(319);
    if (v5 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t sub_23DCD64C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = type metadata accessor for SleepingSampleBaselineCalculator(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 88) + 8) + 8), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_unknownObjectRelease();
  sub_23DCD765C(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
  return v4;
}

uint64_t sub_23DCD6534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23DCD64C4(a1, a2, a3, a4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SleepingWristTemperatureBaselineCalculator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepingWristTemperatureBaselineCalculator);
}

BOOL sub_23DCD6564(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  char v8;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a1)
  {
    if (v4)
    {
      sub_23DC802D0(0, &qword_256CFA398);
      v6 = v4;
      v7 = v2;
      v8 = sub_23DCE1F88();

      if ((v8 & 1) != 0)
        return v3 == v5;
    }
  }
  else if (!v4)
  {
    return v3 == v5;
  }
  return 0;
}

uint64_t sub_23DCD65F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a1;
  v2 = sub_23DCE1BA4();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_23DCE1BB0();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE11E4();
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23DCE1100();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v1 + 24);
  v12 = v11;
  if (v11 == (void *)1)
  {
    v13 = sub_23DCD695C();
    v14 = *(void **)(v1 + 24);
    *(_QWORD *)(v1 + 24) = v13;
    *(_QWORD *)(v1 + 32) = v15;
    sub_23DCD763C(v14);
    v12 = *(void **)(v1 + 24);
    if (v12 == (void *)1)
      return 0;
    v16 = v12;
  }
  if (!v12)
  {
    sub_23DCD764C(v11);
    sub_23DCD764C(v11);
    v29 = 0;
LABEL_15:
    sub_23DCD763C(v29);
    return 0;
  }
  sub_23DCD764C(v11);
  sub_23DCD764C(v11);
  v17 = v12;
  v18 = objc_msgSend(v17, sel_startDate);
  sub_23DCE11C0();

  v19 = objc_msgSend(v17, sel_endDate);
  sub_23DCE11C0();

  sub_23DCE10D0();
  LOBYTE(v19) = sub_23DCE1088();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((v19 & 1) == 0)
  {
    sub_23DCD763C(v12);

    return 0;
  }
  v20 = v36;
  sub_23DCE1B8C();
  v21 = v35;
  v22 = v37;
  v23 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v20, v37);
  if (v23 != *MEMORY[0x24BDD2368])
  {
    if (v23 != *MEMORY[0x24BDD2370] && v23 != *MEMORY[0x24BDD23E0] && v23 != *MEMORY[0x24BDD2380])
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);

    v29 = v12;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v21 + 96))(v20, v22);
  v24 = v32;
  v25 = v33;
  v26 = v20;
  v27 = v34;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v26, v34);
  v28 = sub_23DCE1B98();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v24, v27);

  sub_23DCD763C(v12);
  return v28;
}

id sub_23DCD695C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = v0;
  v2 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v2);
  sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v3 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
  v4 = sub_23DCD7394((uint64_t)v3, *(id *)(v1 + 16), 0);

  if (v4)
    sub_23DCD6C54(v4);
  return v4;
}

id sub_23DCD6C54(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  _QWORD v44[3];
  id v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  id v54[2];

  v54[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23DCE11E4();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v44 - v4;
  v6 = sub_23DCE1100();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v44 - v11;
  v13 = sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
  v48 = (id)*MEMORY[0x24BDD3360];
  v49 = v13;
  v14 = (void *)MEMORY[0x242640CE0]();
  v15 = objc_msgSend(v14, sel__rollingBaselineConfiguration);

  if (!v15)
    __break(1u);
  v16 = objc_msgSend(a1, sel_startDate);
  sub_23DCE11C0();

  v17 = objc_msgSend(a1, sel_endDate);
  sub_23DCE11C0();

  sub_23DCE10D0();
  sub_23DCE1F70();

  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v10, v6);
  v19 = objc_msgSend(a1, sel_sourceRevision);
  v20 = objc_msgSend(v19, sel_source);

  v53 = (_QWORD *)v53[2];
  v21 = objc_msgSend(v53, sel_sourceManager);
  v22 = objc_msgSend(v20, sel_bundleIdentifier);
  if (!v22)
  {
    sub_23DCE1D30();
    v22 = (id)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
  }
  v54[0] = 0;
  v23 = objc_msgSend(v21, sel_allSourcesForBundleIdentifier_error_, v22, v54);

  v24 = v54[0];
  if (v23)
  {
    v45 = v20;
    v46 = v18;
    v47 = v6;
    v44[2] = sub_23DC802D0(0, &qword_256CFA3A0);
    v44[1] = sub_23DCD733C();
    v22 = (id)sub_23DCE1E38();
    v25 = v24;

    v49 = MEMORY[0x242640CE0](v48);
    sub_23DCD75F0(0, (unint64_t *)&unk_254325838, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v26 = v12;
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23DCE3610;
    sub_23DCE10DC();
    v28 = (void *)sub_23DCE116C();
    v29 = v51;
    v30 = *(void (**)(char *, uint64_t))(v50 + 8);
    v30(v5, v51);
    v31 = (id)HDSampleEntityPredicateForStartDate();

    v32 = sub_23DC802D0(0, &qword_2543256F8);
    *(_QWORD *)(v27 + 56) = v32;
    *(_QWORD *)(v27 + 32) = v31;
    sub_23DCE10C4();
    v33 = (void *)sub_23DCE116C();
    v30(v5, v29);
    v34 = (id)HDSampleEntityPredicateForStartDate();

    *(_QWORD *)(v27 + 88) = v32;
    *(_QWORD *)(v27 + 64) = v34;
    v35 = (void *)v49;
    v36 = (void *)sub_23DCE1E2C();
    swift_bridgeObjectRelease();
    v37 = (id)HDDataEntityPredicateForSourceEntitySet();

    *(_QWORD *)(v27 + 120) = v32;
    *(_QWORD *)(v27 + 96) = v37;
    v38 = (void *)sub_23DCE1DB4();
    swift_bridgeObjectRelease();
    v39 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingAllPredicates_, v38);

    v40 = v52;
    v41 = sub_23DCD7524((uint64_t)v35, (uint64_t)v53, (uint64_t)v39);
    if (!v40)
      v22 = v41;
    v46(v26, v47);

  }
  else
  {
    v42 = v54[0];
    sub_23DCE1154();

    swift_willThrow();
    v18(v12, v6);
  }
  return v22;
}

uint64_t sub_23DCD7184()
{
  uint64_t v0;

  sub_23DCD763C(*(id *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result()
{
  return &type metadata for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result;
}

unint64_t sub_23DCD733C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256CFA3A8;
  if (!qword_256CFA3A8)
  {
    v1 = sub_23DC802D0(255, &qword_256CFA3A0);
    result = MEMORY[0x2426416D0](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_256CFA3A8);
  }
  return result;
}

id sub_23DCD7394(uint64_t a1, id a2, uint64_t a3)
{
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  sub_23DC802D0(0, &qword_256CFA1F0);
  *(_QWORD *)&v13 = 0;
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mostRecentSampleWithType_profile_encodingOptions_predicate_anchor_error_, a1, a2, 0, a3, 0, &v13);
  v7 = (void *)v13;
  if (v6)
  {
    a2 = v6;
    v8 = (id)v13;
    sub_23DCE2000();
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
    v9 = v7;
  }
  sub_23DC94FC0((uint64_t)&v13, (uint64_t)v15);
  if (!v7 || v16)
  {
    sub_23DC94FC0((uint64_t)v15, (uint64_t)&v13);
    if (*((_QWORD *)&v14 + 1))
    {
      sub_23DC802D0(0, &qword_256CFA398);
      if (swift_dynamicCast())
        a2 = v12;
      else
        a2 = 0;
    }
    else
    {
      sub_23DC9505C((uint64_t)&v13);
      a2 = 0;
    }

  }
  else
  {
    v10 = v7;
    swift_willThrow();
    sub_23DC9505C((uint64_t)v15);

  }
  return a2;
}

id sub_23DCD7524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  BOOL v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  sub_23DC802D0(0, &qword_256CFA1F0);
  v10[0] = 0;
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_countOfSamplesWithType_profile_matchingPredicate_withError_, a1, a2, a3, v10);
  v7 = v6;
  if (v10[0])
    v8 = v6 == 0;
  else
    v8 = 0;
  if (v8)
  {
    v10[0];
    swift_willThrow();
  }
  return v7;
}

void sub_23DCD75F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE4AD8] + 8);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_23DCD763C(id a1)
{
  if (a1 != (id)1)

}

id sub_23DCD764C(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_23DCD765C(uint64_t a1)
{
  uint64_t v2;

  sub_23DCB5374(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23DCD769C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23DCBFAB4();
  v2 = sub_23DCE21F8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23DC82858(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_23DCC3E74);
    v7 = v15;
    v8 = v16;
    result = sub_23DCD8A28(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_23DC87714(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23DCD77D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23DCD8E10();
  v2 = (_QWORD *)sub_23DCE21F8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_23DCD8ABC((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23DCD78DC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23DCD8EB4(0, (unint64_t *)&qword_254325780);
  v2 = sub_23DCE21F8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23DCD8F08(v6, (uint64_t)&v15, (unint64_t *)&qword_256CFA3E0);
    v7 = v15;
    v8 = v16;
    result = sub_23DCD8A28(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23DC947A0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23DCD7A38(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23DCD8EB4(0, &qword_256CFA3E8);
  v2 = sub_23DCE21F8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23DCD8F08(v6, (uint64_t)v15, (unint64_t *)&qword_256CF9668);
    result = sub_23DCD8A8C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_23DC947A0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23DCD7B98(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23DCD9160();
  v2 = (_QWORD *)sub_23DCE21F8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_23DCD8ABC((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23DCD7C9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  sub_23DCD90E4();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (_QWORD *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_23DCBFB64();
  v7 = sub_23DCE21F8();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_23DC82858(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_23DCD90E4);
    v15 = *v6;
    result = sub_23DCD89F8(*v6);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v15;
    v19 = v8[7];
    v20 = sub_23DCE1100();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23DCD7E2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  id v26;
  id v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  uint64_t inited;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v62;
  void *v63;
  id v64;
  char *v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  _QWORD *v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  id v81;
  id v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  id v88[3];

  v88[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23DCE1B14();
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v83 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v76 - v7;
  v9 = sub_23DCE1268();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v76 - v14;
  sub_23DC82800(0, (unint64_t *)&unk_256CF94F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v76 - v20;
  v82 = (id)*MEMORY[0x24BDD2E88];
  v86 = objc_msgSend(a1, sel_featureAvailabilityProvidingForFeatureIdentifier_);
  if (!v86)
    goto LABEL_6;
  v78 = (void *)*MEMORY[0x24BDD2E48];
  v81 = objc_msgSend(a1, sel_featureAvailabilityProvidingForFeatureIdentifier_);
  if (!v81)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_23DCE1AFC();
    v29 = sub_23DCE1B08();
    v30 = sub_23DCE1EE0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (void *)swift_slowAlloc();
      v88[0] = v32;
      *(_DWORD *)v31 = 136446210;
      v87 = sub_23DCA47EC(0xD000000000000023, 0x800000023DCE73B0, (uint64_t *)v88);
      sub_23DCE1FD0();
      _os_log_impl(&dword_23DC7C000, v29, v30, "[%{public}s] Unable to find feature availability providing", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264179C](v32, -1, -1);
      MEMORY[0x24264179C](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v84 + 8))(v8, v85);
    v33 = sub_23DCE1940();
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v35 = a2;
    return v34(v35, 1, 1, v33);
  }
  sub_23DCE125C();
  sub_23DCE1250();
  v79 = *(void (**)(char *, uint64_t))(v10 + 8);
  v79(v15, v9);
  v22 = sub_23DCE1244();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v21, 1, v22);
  v80 = a2;
  v77 = v23;
  if (v25 == 1)
  {
    sub_23DCD8D40((uint64_t)v21);
    v26 = a1;
    v27 = v86;
    swift_unknownObjectRetain();
    v28 = 0;
  }
  else
  {
    sub_23DCE1238();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    v36 = a1;
    v37 = v86;
    swift_unknownObjectRetain();
    v27 = v37;
    v28 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
  }
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureAvailabilityProviding_healthDataSource_currentCountryCode_, v27, a1, v28);

  swift_unknownObjectRelease();
  sub_23DCE125C();
  sub_23DCE1250();
  v79(v13, v9);
  if (v24(v19, 1, v22) == 1)
  {
    sub_23DCD8D40((uint64_t)v19);
    v39 = a1;
    v40 = v81;
    swift_unknownObjectRetain();
    v41 = 0;
  }
  else
  {
    sub_23DCE1238();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v19, v22);
    v42 = a1;
    v40 = v81;
    swift_unknownObjectRetain();
    v41 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
  }
  v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3BF8]), sel_initWithFeatureAvailabilityProviding_healthDataSource_currentCountryCode_, v40, a1, v41);

  swift_unknownObjectRelease();
  v88[0] = 0;
  v44 = objc_msgSend(v38, sel_featureStatusWithError_, v88);
  v45 = v88[0];
  if (v44)
  {
    v46 = v44;
    v88[0] = 0;
    v47 = v45;
    v48 = objc_msgSend(v43, sel_featureStatusWithError_, v88);
    v49 = v88[0];
    v50 = v80;
    if (v48)
    {
      v51 = v48;
      sub_23DC82800(0, &qword_256CFA3C0, (uint64_t (*)(uint64_t))sub_23DCD8D94, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23DCE39C0;
      v53 = v82;
      *(_QWORD *)(inited + 32) = v82;
      *(_QWORD *)(inited + 40) = v46;
      v54 = v78;
      *(_QWORD *)(inited + 48) = v78;
      *(_QWORD *)(inited + 56) = v51;
      v55 = v49;
      v56 = v53;
      v57 = v46;
      v58 = v54;
      v59 = v51;
      sub_23DCD77D8(inited);
      sub_23DCE1928();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v60 = sub_23DCE1940();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v50, 0, 1, v60);
    }
    v64 = v88[0];
    v63 = (void *)sub_23DCE1154();

    swift_willThrow();
  }
  else
  {
    v62 = v88[0];
    v63 = (void *)sub_23DCE1154();

    swift_willThrow();
    v50 = v80;
  }
  v65 = v83;
  sub_23DCE1AFC();
  v66 = v63;
  v67 = v63;
  v68 = sub_23DCE1B08();
  v69 = sub_23DCE1ED4();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = swift_slowAlloc();
    v71 = (_QWORD *)swift_slowAlloc();
    v72 = (void *)swift_slowAlloc();
    v88[0] = v72;
    *(_DWORD *)v70 = 136446466;
    v82 = v38;
    v87 = sub_23DCA47EC(0xD000000000000023, 0x800000023DCE73B0, (uint64_t *)v88);
    sub_23DCE1FD0();
    *(_WORD *)(v70 + 12) = 2114;
    v73 = v63;
    v74 = _swift_stdlib_bridgeErrorToNSError();
    v79 = (void (*)(char *, uint64_t))v43;
    v75 = v74;
    v87 = v74;
    sub_23DCE1FD0();
    *v71 = v75;

    _os_log_impl(&dword_23DC7C000, v68, v69, "[%{public}s] Error retrieving feature status: %{public}@", (uint8_t *)v70, 0x16u);
    sub_23DC80CF8();
    swift_arrayDestroy();
    MEMORY[0x24264179C](v71, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v72, -1, -1);
    MEMORY[0x24264179C](v70, -1, -1);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
  }
  else
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v84 + 8))(v65, v85);
  }
  v33 = sub_23DCE1940();
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v35 = v50;
  return v34(v35, 1, 1, v33);
}

void sub_23DCD86CC(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  id v8;
  unint64_t v9;
  char v10;
  id v11;
  id v12;
  unsigned __int8 v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  id v20;
  unsigned __int8 v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_23DCE1670();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = 0;
  sub_23DC80074(&qword_256CFA3B0, v6, MEMORY[0x24BE40078]);
  sub_23DCE2348();
  v7 = sub_23DCE1934();
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_6;
  v8 = (id)*MEMORY[0x24BDD2E88];
  v9 = sub_23DCD8ABC((uint64_t)v8);
  if ((v10 & 1) == 0)
  {

LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v11 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v9);

  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v11, sel_objectForKeyedSubscript_, *MEMORY[0x24BDD2C30]);
  v13 = objc_msgSend(v12, sel_areAllRequirementsSatisfied);

  if ((v13 & 1) != 0)
  {
    sub_23DCE1664();
    sub_23DC80074(&qword_256CFA3B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE40058], MEMORY[0x24BE40068]);
    sub_23DCE1D9C();
    v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v14(a1, v2);
    sub_23DCE1D9C();
    v26 = v24 | v25;
    sub_23DCE2348();

    v14((uint64_t)v5, v2);
  }
  else
  {

  }
LABEL_7:
  v15 = sub_23DCE1934();
  if (!*(_QWORD *)(v15 + 16))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  v16 = (id)*MEMORY[0x24BDD2E48];
  v17 = sub_23DCD8ABC((uint64_t)v16);
  if ((v18 & 1) == 0)
  {

    goto LABEL_12;
  }
  v19 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v17);

  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v19, sel_objectForKeyedSubscript_, *MEMORY[0x24BDD2C30]);
  v21 = objc_msgSend(v20, sel_areAllRequirementsSatisfied);

  if ((v21 & 1) != 0)
  {
    sub_23DCE1658();
    sub_23DC80074(&qword_256CFA3B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE40058], MEMORY[0x24BE40068]);
    sub_23DCE1D9C();
    v22 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v22(a1, v2);
    sub_23DCE1D9C();
    v26 = v24 | v25;
    sub_23DCE2348();

    v22((uint64_t)v5, v2);
  }
  else
  {

  }
}

unint64_t sub_23DCD89F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23DCE1F7C();
  return sub_23DCD8B48(a1, v2);
}

unint64_t sub_23DCD8A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DCE22DC();
  sub_23DCE1D48();
  v4 = sub_23DCE22F4();
  return sub_23DCD8C60(a1, a2, v4);
}

unint64_t sub_23DCD8A8C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23DCE2090();
  return sub_23DCD8FB0(a1, v2);
}

unint64_t sub_23DCD8ABC(uint64_t a1)
{
  uint64_t v2;

  sub_23DCE1D30();
  sub_23DCE22DC();
  sub_23DCE1D48();
  v2 = sub_23DCE22F4();
  swift_bridgeObjectRelease();
  return sub_23DCD9260(a1, v2);
}

unint64_t sub_23DCD8B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_23DC802D0(0, (unint64_t *)&qword_254324988);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_23DCE1F88();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_23DCE1F88();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_23DCD8C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23DCE2270() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23DCE2270() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23DCD8D40(uint64_t a1)
{
  uint64_t v2;

  sub_23DC82800(0, (unint64_t *)&unk_256CF94F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCED08], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23DCD8D94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_256CFA3C8)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_23DC802D0(255, &qword_256CFA3D0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_256CFA3C8);
  }
}

void sub_23DCD8E10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256CFA3D8)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_23DC802D0(255, &qword_256CFA3D0);
    sub_23DC80074(&qword_256CF9148, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, (uint64_t)&unk_23DCE3590);
    v0 = sub_23DCE2204();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256CFA3D8);
  }
}

void sub_23DCD8EB4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23DCE2204();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23DCD8F08(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_23DCD8F54(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_23DCD8F54(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_23DCD8FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_23DCD9074(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x242640E84](v9, a1);
      sub_23DCD90B0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_23DCD9074(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_23DCD90B0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

void sub_23DCD90E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2543249A0)
  {
    sub_23DC802D0(255, (unint64_t *)&qword_254324988);
    sub_23DCE1100();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2543249A0);
  }
}

void sub_23DCD9160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254324A60)
  {
    type metadata accessor for HKFeatureAvailabilityContext(255);
    sub_23DC82800(255, (unint64_t *)&qword_254324970, (uint64_t (*)(uint64_t))sub_23DCD920C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_23DC80074((unint64_t *)&qword_2543249C0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureAvailabilityContext, (uint64_t)&unk_23DCE34CC);
    v0 = sub_23DCE2204();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254324A60);
  }
}

unint64_t sub_23DCD920C()
{
  unint64_t result;

  result = qword_254324A08;
  if (!qword_254324A08)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254324A08);
  }
  return result;
}

unint64_t sub_23DCD9260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_23DCE1D30();
    v8 = v7;
    if (v6 == sub_23DCE1D30() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_23DCE2270();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_23DCE1D30();
          v15 = v14;
          if (v13 == sub_23DCE1D30() && v15 == v16)
            break;
          v18 = sub_23DCE2270();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t ObserverSet.__allocating_init(name:loggingCategory:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ObserverSet.init(name:loggingCategory:)(a1, a2, a3);
  return v6;
}

id ObserverSet.registerObserver(_:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 + 16), sel_registerObserver_queue_, a1, a2);
}

id ObserverSet.unregisterObserver(_:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_unregisterObserver_, a1);
}

uint64_t sub_23DCD9454(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    sub_23DCE215C();
    v4 = *(_QWORD *)(sub_23DCE146C() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23DCE1454();
      sub_23DCE2144();
      sub_23DCE2168();
      sub_23DCE2174();
      sub_23DCE2150();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void ObserverSet.notifyObservers(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD v9[6];

  v5 = *v2;
  v6 = (void *)v2[2];
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = *(_QWORD *)(v5 + 80);
  v7[3] = a1;
  v7[4] = a2;
  v9[4] = sub_23DCD98BC;
  v9[5] = v7;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_23DC99F50;
  v9[3] = &block_descriptor_9;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_notifyObservers_, v8);
  _Block_release(v8);
}

uint64_t ObserverSet.init(name:loggingCategory:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  id v5;
  void *v6;
  id v7;

  v5 = objc_allocWithZone(MEMORY[0x24BDD3DD0]);
  v6 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithName_loggingCategory_, v6, a3);

  *(_QWORD *)(v3 + 16) = v7;
  return v3;
}

uint64_t sub_23DCD9674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  swift_unknownObjectRetain();
  swift_getObjectType();
  v2 = swift_conformsToProtocol2();
  if (v2)
    v3 = v2;
  else
    v3 = 0;
  if (v2)
    v4 = a1;
  else
    v4 = 0;
  if (!v4)
    return swift_unknownObjectRelease();
  ObjectType = swift_getObjectType();
  v6 = sub_23DCE1460();
  v7 = sub_23DCD9454(v6);
  swift_bridgeObjectRelease();
  v8 = sub_23DCD996C(v7);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v8, ObjectType, v3);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DCD974C(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v18[2];

  v7 = sub_23DCE1FAC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - v10;
  v12 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a1;
  swift_unknownObjectRetain();
  v15 = swift_dynamicCast();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v15 & 1) != 0)
  {
    v16(v11, 0, 1, a4);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, a4);
    a2(v14);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, a4);
  }
  else
  {
    v16(v11, 1, 1, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_23DCD9898()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DCD98BC(uint64_t a1)
{
  uint64_t v1;

  return sub_23DCD974C(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t ObserverSet.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ObserverSet.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_23DCD9908()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObserverSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObserverSet);
}

uint64_t method lookup function for ObserverSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObserverSet.__allocating_init(name:loggingCategory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_23DCD996C(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23DCE21D4();
    swift_bridgeObjectRelease();
  }
  sub_23DCBFBDC();
  sub_23DC9FD14();
  result = sub_23DCE1E50();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23DCE21D4();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x242640EF0](i, a1);
        sub_23DCACDC0(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_23DCACDC0(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

id sub_23DCD9AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  sub_23DCE1D30();
  sub_23DCD9BE8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE3BA0;
  *(_QWORD *)(inited + 32) = sub_23DCE1D30();
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  sub_23DCD78DC(inited);
  v8 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v9 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_23DCE1C70();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v8, sel_initWithDomain_code_userInfo_, v9, a1, v10);

  return v11;
}

void sub_23DCD9BE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256CFA3F0)
  {
    sub_23DCD9C3C();
    v0 = sub_23DCE2258();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256CFA3F0);
  }
}

void sub_23DCD9C3C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_256CFA3E0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_256CFA3E0);
  }
}

uint64_t sub_23DCD9CA4(char a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  sub_23DC9CF64();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23DCE39A0;
  if ((a1 & 1) != 0)
    sub_23DCE137C();
  else
    sub_23DCE13AC();
  sub_23DCE1394();
  v3 = objc_allocWithZone(MEMORY[0x24BE16A10]);
  v4 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithExtensionBundleIdentifier_kind_, v4, v5);

  *(_QWORD *)(v2 + 32) = v6;
  if ((a1 & 1) != 0)
    sub_23DCE137C();
  else
    sub_23DCE13AC();
  sub_23DCE13A0();
  v7 = objc_allocWithZone(MEMORY[0x24BE16A10]);
  v8 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithExtensionBundleIdentifier_kind_, v8, v9);

  *(_QWORD *)(v2 + 40) = v10;
  sub_23DCE1DCC();
  return v2;
}

id sub_23DCD9E2C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  id result;
  void *v17;
  id v18[2];

  v2 = v1;
  v18[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23DCE1F34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC80EF0(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC87754(a1, (uint64_t)v10);
  v11 = sub_23DCE11E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    v13 = (void *)sub_23DCE116C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE406D0], v4);
  sub_23DCE1F28();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  v15 = objc_msgSend(v2, sel_setDate_forKey_error_, v13, v14, v18);

  result = v18[0];
  if ((v15 & 1) == 0)
  {
    v17 = result;
    sub_23DCE1154();

    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_23DCDA00C(uint64_t (*a1)(void))
{
  return a1();
}

id sub_23DCDA02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_23DCE1B14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 48);
  v29[0] = 0;
  v6 = objc_msgSend(v5, sel_featureStatusWithError_, v29);
  if (v6)
  {
    v7 = v6;
    v8 = *MEMORY[0x24BDD2CB0];
    v9 = v29[0];
    v10 = objc_msgSend(v7, sel_objectForKeyedSubscript_, v8);

    v11 = objc_msgSend(v10, sel_areAllRequirementsSatisfied);
  }
  else
  {
    v12 = v29[0];
    v13 = (void *)sub_23DCE1154();

    swift_willThrow();
    sub_23DCE1AFC();
    v14 = v13;
    v15 = v13;
    v16 = sub_23DCE1B08();
    v17 = sub_23DCE1ED4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v29[0] = v27;
      *(_DWORD *)v18 = 136446466;
      v19 = sub_23DCE2354();
      v28 = sub_23DCA47EC(v19, v20, (uint64_t *)v29);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2114;
      v21 = v13;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v28 = v22;
      sub_23DCE1FD0();
      v23 = v26;
      *v26 = v22;

      _os_log_impl(&dword_23DC7C000, v16, v17, "[%{public}s] Error reading feature status: %{public}@", (uint8_t *)v18, 0x16u);
      sub_23DC80CF8();
      swift_arrayDestroy();
      MEMORY[0x24264179C](v23, -1, -1);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v24, -1, -1);
      MEMORY[0x24264179C](v18, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v11;
}

uint64_t sub_23DCDA34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[4];

  v25 = a1;
  v1 = sub_23DCE1274();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v26[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23DCE12E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23DCE11E4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (void (*)(char *, uint64_t))((char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DCE11CC();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCEF70], v1);
  sub_23DCE1280();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23DC951E4(v12, (uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_QWORD, uint64_t))(v10 + 8))(v12, v9);
  v13 = __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *))(v15 + 16))((char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_23DCE1D90();
  v17 = *(_QWORD *)(v16 + 16);
  sub_23DC9B6CC();
  v19 = v18;
  v20 = *(_QWORD *)(v18 - 8);
  if (v17)
  {
    v21 = v25;
    sub_23DCDDDA4(v16 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)), v25);
    v22 = 0;
    v23 = v21;
  }
  else
  {
    v22 = 1;
    v23 = v25;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v23, v22, 1, v19);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_23DCDA578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  void (*v52)(char *, unint64_t, uint64_t);
  void (*v53)(char *, uint64_t);
  char *v54;
  char v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  void *v79;
  char v80;
  _QWORD v81[4];

  v74 = a1;
  v64 = a2;
  v68 = sub_23DCE179C();
  v72 = *(_QWORD *)(v68 - 8);
  v2 = MEMORY[0x24BDAC7A8](v68);
  v69 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v71 = (char *)&v63 - v4;
  sub_23DC82800(0, &qword_254325320, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v63 - v6;
  v8 = sub_23DCE15C8();
  v77 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v63 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v76 = (char *)&v63 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v70 = (char *)&v63 - v15;
  sub_23DC9B6CC();
  v75 = v16;
  v63 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v63 - v20;
  v22 = sub_23DCE1274();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23DCE12E0();
  v66 = *(_QWORD *)(v26 - 8);
  v67 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23DCE11E4();
  v29 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v31 = (void (*)(char *, uint64_t))((char *)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DCE11CC();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v25, *MEMORY[0x24BDCEF70], v22);
  sub_23DCE1280();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  sub_23DC951E4(v31, (uint64_t)v81);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v28, v67);
  (*(void (**)(_QWORD, uint64_t))(v29 + 8))(v31, v65);
  v32 = __swift_project_boxed_opaque_existential_1(v81, v81[3]);
  MEMORY[0x24BDAC7A8](v32);
  (*(void (**)(char *))(v34 + 16))((char *)&v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = sub_23DCE1D90();
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v37 = v35 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
    v74 = *(_QWORD *)(v63 + 72);
    v67 = v35;
    swift_bridgeObjectRetain();
    v38 = MEMORY[0x24BEE4AF8];
    v39 = v77;
    do
    {
      sub_23DCDDDA4(v37, (uint64_t)v21);
      sub_23DCDDDA4((uint64_t)v21, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v79 = *(void **)v19;
        v40 = v79;
        v80 = v19[8];
        sub_23DC87A9C();
        swift_willThrowTypedImpl();

        v41 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v7, v19, v8);
        v41 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v7, v41, 1, v8);
      sub_23DC827C4((uint64_t)v21, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v7, 1, v8) == 1)
      {
        sub_23DC8FE84((uint64_t)v7, &qword_254325320, (uint64_t (*)(uint64_t))MEMORY[0x24BE3FFB0]);
      }
      else
      {
        v42 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
        v43 = v70;
        v42(v70, v7, v8);
        v42(v76, v43, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v44 = v38;
        else
          v44 = sub_23DC8EA84(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
        v46 = *(_QWORD *)(v44 + 16);
        v45 = *(_QWORD *)(v44 + 24);
        if (v46 >= v45 >> 1)
          v44 = sub_23DC8EA84(v45 > 1, v46 + 1, 1, v44);
        *(_QWORD *)(v44 + 16) = v46 + 1;
        v38 = v44;
        v47 = v44
            + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))
            + *(_QWORD *)(v77 + 72) * v46;
        v39 = v77;
        v42((char *)v47, v76, v8);
      }
      v37 += v74;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = MEMORY[0x24BEE4AF8];
    v39 = v77;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  v48 = *(_QWORD *)(v38 + 16);
  v49 = v68;
  v50 = v73;
  if (v48)
  {
    v51 = v38 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    v76 = *(char **)(v39 + 72);
    v52 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v52(v50, v51, v8);
      v54 = v71;
      sub_23DCE14FC();
      v55 = sub_23DCE16F4();
      v56 = *(void (**)(char *, uint64_t))(v72 + 8);
      v56(v54, v49);
      v57 = v78;
      v52(v78, (unint64_t)v50, v8);
      if ((v55 & 1) != 0)
      {
        v58 = v69;
        sub_23DCE14FC();
        v59 = sub_23DCE1718();
        v56(v58, v49);
        v53 = *(void (**)(char *, uint64_t))(v77 + 8);
        v53(v78, v8);
        if ((v59 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v39 = v77;
          v60 = v64;
          (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v64, v73, v8);
          v61 = 0;
          goto LABEL_26;
        }
      }
      else
      {
        v53 = *(void (**)(char *, uint64_t))(v77 + 8);
        v53(v57, v8);
      }
      v50 = v73;
      v53(v73, v8);
      v51 += (unint64_t)v76;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    v61 = 1;
    v60 = v64;
    v39 = v77;
  }
  else
  {
    v61 = 1;
    v60 = v64;
  }
LABEL_26:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v60, v61, 1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DCDAC70@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[8];

  v13[3] = *v1;
  v3 = sub_23DCE1B14();
  v13[4] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_23DC82800(0, (unint64_t *)&unk_256CFA5C0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v13 - v5;
  v7 = type metadata accessor for ImbalanceNotificationAnalysisState();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCDB078((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23DC8FE84((uint64_t)v6, (unint64_t *)&unk_256CFA5C0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
  }
  else
  {
    sub_23DC87A14((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
    sub_23DCE1C64();
    sub_23DC934A0((unint64_t *)&unk_2543255D0, MEMORY[0x24BDD24C0]);
    sub_23DCE1FF4();
    if (!v13[6])
    {
      sub_23DC87A14((uint64_t)v10, a1, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
      v11 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v11, 1, v7);
    }
    sub_23DC827C4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
  }
  v11 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v11, 1, v7);
}

uint64_t sub_23DCDB078@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, _QWORD, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  unint64_t *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, _QWORD, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;

  v65 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v64 = (char *)&v52 - v3;
  v4 = sub_23DCE11E4();
  v5 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  v62 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1F34();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v59 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v52 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v52 - v13;
  sub_23DC82800(0, (unint64_t *)&qword_2543255F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], v1);
  MEMORY[0x24BDAC7A8](v15);
  v66 = (char *)&v52 - v16;
  v17 = sub_23DCE1C64();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v21(v14, *MEMORY[0x24BE406F0], v7);
  sub_23DCE1F28();
  v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v14, v7);
  v23 = v67;
  v24 = sub_23DCE1F10();
  v67 = v23;
  if (v23)
    return swift_bridgeObjectRelease();
  v26 = (void *)v24;
  v53 = v22;
  v54 = v21;
  v57 = v17;
  v58 = v18;
  v55 = v7;
  v56 = v20;
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v27 = v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v66, 1, 1, v57);
    goto LABEL_8;
  }
  objc_msgSend(v26, sel_integerValue);
  v27 = v66;
  sub_23DCE1C28();
  v29 = v57;
  v28 = v58;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v27, 0, 1, v57);

  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v29);
  v31 = v67;
  if (v30 == 1)
  {
LABEL_8:
    v36 = (unint64_t *)&qword_2543255F0;
    v37 = (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488];
    v38 = (uint64_t)v27;
LABEL_9:
    sub_23DC8FE84(v38, v36, v37);
LABEL_10:
    v39 = v65;
    v40 = type metadata accessor for ImbalanceNotificationAnalysisState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
  }
  v32 = v56;
  v66 = *(char **)(v28 + 32);
  ((void (*)(char *, char *, uint64_t))v66)(v56, v27, v29);
  v33 = v63;
  v34 = v55;
  v54(v63, *MEMORY[0x24BE406E8], v55);
  sub_23DCE1F28();
  v53(v33, v34);
  v35 = v64;
  sub_23DCE1F04();
  if (v31)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v32, v29);
  }
  swift_bridgeObjectRelease();
  v42 = v61;
  v41 = v62;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v35, 1, v61) == 1)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v57);
    v36 = (unint64_t *)&unk_2543244C0;
    v37 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v38 = (uint64_t)v35;
    goto LABEL_9;
  }
  v43 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  v43(v60, v35, v42);
  v44 = v59;
  v45 = v55;
  v54(v59, *MEMORY[0x24BE406F8], v55);
  sub_23DCE1F28();
  v53(v44, v45);
  v46 = (void *)sub_23DCE1F10();
  swift_bridgeObjectRelease();
  v47 = v57;
  if (!v46)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v61);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v56, v47);
    goto LABEL_10;
  }
  v48 = objc_msgSend(v46, sel_integerValue);

  v49 = (void (*)(uint64_t, char *, uint64_t))v43;
  v50 = v65;
  ((void (*)(uint64_t, char *, uint64_t))v66)(v65, v56, v47);
  v51 = type metadata accessor for ImbalanceNotificationAnalysisState();
  v49(v50 + *(int *)(v51 + 20), v60, v61);
  *(_QWORD *)(v50 + *(int *)(v51 + 24)) = v48;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 0, 1, v51);
}

uint64_t sub_23DCDB5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[5];

  v7[4] = *v0;
  v1 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_23DCE1F34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE406D8], v2);
  sub_23DCE1F28();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23DCE1F04();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23DCDB908(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v2);
  sub_23DCDBBCC(a1);
  return sub_23DC8FE84(a1, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
}

id sub_23DCDBBCC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  id result;
  void *v17;
  id v18[2];

  v2 = v1;
  v18[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_23DCE1F34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - v9;
  sub_23DC87754(a1, (uint64_t)v18 - v9);
  v11 = sub_23DCE11E4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    v13 = (void *)sub_23DCE116C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE406D8], v4);
  sub_23DCE1F28();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = (void *)sub_23DCE1D0C();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  v15 = objc_msgSend(v2, sel_setDate_forKey_error_, v13, v14, v18);

  result = v18[0];
  if ((v15 & 1) == 0)
  {
    v17 = result;
    sub_23DCE1154();

    return (id)swift_willThrow();
  }
  return result;
}

id sub_23DCDBDC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23DCE1B14();
  MEMORY[0x24BDAC7A8](v2);
  return sub_23DCDC028(a1);
}

id sub_23DCDC028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t inited;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id result;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a1;
  v45 = *MEMORY[0x24BDAC8D0];
  v1 = sub_23DCE1F34();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v34 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - v7;
  sub_23DC82800(0, &qword_256CF9660, (uint64_t (*)(uint64_t))sub_23DC96758, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23DCE3610;
  v10 = *MEMORY[0x24BE406E8];
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v36(v8, v10, v1);
  v11 = (void *)sub_23DCE1F28();
  v13 = v12;
  v35 = *(void (**)(char *, uint64_t))(v2 + 8);
  v35(v8, v1);
  v43 = v11;
  v44 = v13;
  sub_23DCE20A8();
  v37 = type metadata accessor for ImbalanceNotificationAnalysisState();
  v14 = v42 + *(int *)(v37 + 20);
  v15 = sub_23DCE11E4();
  *(_QWORD *)(inited + 96) = v15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_1, v14, v15);
  v17 = v38;
  v18 = v36;
  v36(v38, *MEMORY[0x24BE406F0], v1);
  v19 = (void *)sub_23DCE1F28();
  v21 = v20;
  v22 = v17;
  v23 = v35;
  v35(v22, v1);
  v43 = v19;
  v44 = v21;
  sub_23DCE20A8();
  v24 = sub_23DCE1C34();
  *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 144) = v24;
  v25 = v39;
  v18(v39, *MEMORY[0x24BE406F8], v1);
  v26 = (void *)sub_23DCE1F28();
  v28 = v27;
  v23(v25, v1);
  v43 = v26;
  v44 = v28;
  sub_23DCE20A8();
  v29 = *(_QWORD *)(v42 + *(int *)(v37 + 24));
  *(_QWORD *)(inited + 240) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 216) = v29;
  sub_23DCD7A38(inited);
  v30 = (void *)sub_23DCE1C70();
  swift_bridgeObjectRelease();
  v43 = 0;
  LOBYTE(v23) = objc_msgSend(v40, sel_setValuesWithDictionary_error_, v30, &v43);

  result = v43;
  if ((v23 & 1) == 0)
  {
    v32 = result;
    v33 = sub_23DCE1154();

    v41 = v33;
    return (id)swift_willThrow();
  }
  return result;
}

void sub_23DCDC37C(void *a1, uint64_t a2, void (*a3)(void))
{
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  void *v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  a3();
  sub_23DC802D0(0, &qword_256CF9D88);
  v4 = (void *)sub_23DCE1DB4();
  v9[0] = 0;
  v5 = objc_msgSend(a1, sel_removeEvents_error_, v4, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    v8 = (void *)sub_23DCE1154();

    swift_willThrow();
  }
}

void sub_23DCDC48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_23DCE1B14();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 24);
  sub_23DC9CF64();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23DCE39B0;
  v7 = (void *)sub_23DCE1D0C();
  v8 = (void *)sub_23DCE116C();
  v9 = objc_msgSend(v5, sel_eventWithIdentifier_dueDate_eventOptions_, v7, v8, 0);

  *(_QWORD *)(v6 + 32) = v9;
  v29[0] = (id)v6;
  sub_23DCE1DCC();
  sub_23DC802D0(0, &qword_256CF9D88);
  v10 = (void *)sub_23DCE1DB4();
  swift_bridgeObjectRelease();
  v29[0] = 0;
  v11 = objc_msgSend(v5, sel_replaceAllScheduledEventsWithEvents_error_, v10, v29);

  if (v11)
  {
    v12 = v29[0];

  }
  else
  {
    v13 = v29[0];
    v14 = (void *)sub_23DCE1154();

    swift_willThrow();
    sub_23DCE1AFC();
    v15 = v14;
    v16 = v14;
    v17 = sub_23DCE1B08();
    v18 = sub_23DCE1ED4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v27 = (void *)swift_slowAlloc();
      v29[0] = v27;
      *(_DWORD *)v19 = 136446466;
      v20 = sub_23DCE2354();
      v28 = sub_23DCA47EC(v20, v21, (uint64_t *)v29);
      sub_23DCE1FD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2114;
      v22 = v14;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      v28 = v23;
      sub_23DCE1FD0();
      v24 = v26;
      *v26 = v23;

      _os_log_impl(&dword_23DC7C000, v17, v18, "[%{public}s] Error scheduling event %{public}@", (uint8_t *)v19, 0x16u);
      sub_23DC80CF8();
      swift_arrayDestroy();
      MEMORY[0x24264179C](v24, -1, -1);
      v25 = v27;
      swift_arrayDestroy();
      MEMORY[0x24264179C](v25, -1, -1);
      MEMORY[0x24264179C](v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_23DCDC82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v18[1] = a1;
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v18 - v2;
  v18[0] = sub_23DCE1814();
  v4 = *(_QWORD *)(v18[0] - 8);
  MEMORY[0x24BDAC7A8](v18[0]);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_23DCE122C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23DCE182C();
  v19 = *(_QWORD *)(v12 - 8);
  v20 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1220();
  sub_23DCE11F0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_23DCE1514();
  sub_23DCE194C();
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, *MEMORY[0x24BE402B0], v18[0]);
  v15 = v21;
  sub_23DCE17CC();
  if (*(_QWORD *)(v15 + 64))
    sub_23DC955AC((uint64_t)v14);
  sub_23DCE11CC();
  v16 = sub_23DCE11E4();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 0, 1, v16);
  sub_23DCD9E2C((uint64_t)v3);
  sub_23DC8FE84((uint64_t)v3, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v20);
}

uint64_t sub_23DCDCA8C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v13[1] = a1;
  v14 = sub_23DCE1814();
  v13[0] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v2 = (char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23DCE1C64();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_23DCE122C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23DCE182C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1220();
  sub_23DCE11F0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23DCE1514();
  (*(void (**)(char *, _QWORD, uint64_t))(v13[0] + 104))(v2, *MEMORY[0x24BE402A0], v14);
  sub_23DCE17CC();
  if (*(_QWORD *)(v15 + 64))
    sub_23DC955AC((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23DCDCC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD aBlock[6];

  v1 = sub_23DCE17B4();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 64);
  if (v6)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BE40250], v1);
    v7 = *(void **)(v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager);
    sub_23DCE17A8();
    v8 = (void *)sub_23DCE1D0C();
    swift_bridgeObjectRelease();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23DCC6E74;
    aBlock[3] = &block_descriptor_10;
    v9 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_removeDeliveredNotificationsWithCategoryIdentifier_completionHandler_, v8, v9);
    _Block_release(v9);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_23DCDCD78(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  if (v6)
    sub_23DC97390(v6);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  *a1 = (uint64_t)sub_23DCDDFF0;
  a1[1] = v7;
  return swift_retain();
}

uint64_t sub_23DCDCDE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t (*v86)();
  uint64_t v87;
  unint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t (*v92)();
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  os_unfair_lock_s *v97;
  uint64_t (**v98)();
  os_unfair_lock_s *v99;
  uint64_t (*v100)();
  _QWORD v101[2];
  char *v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t (*v139)();
  uint64_t v140;

  v121 = a1;
  v101[1] = *v1;
  v2 = sub_23DCE1B14();
  v125 = *(_QWORD *)(v2 - 8);
  v126 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v122 = (char *)v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v102 = (char *)v101 - v5;
  v120 = type metadata accessor for SleepingSampleCacheRange();
  MEMORY[0x24BDAC7A8](v120);
  v127 = (char *)v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_23DC82800(0, (unint64_t *)&unk_256CFA5C0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v8);
  v119 = (uint64_t)v101 - v9;
  sub_23DC82800(0, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v7);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v137 = (uint64_t)v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v129 = (char *)v101 - v13;
  v115 = (void (*)(char *, uint64_t))sub_23DCE1400();
  v114 = *((_QWORD *)v115 - 1);
  MEMORY[0x24BDAC7A8](v115);
  v113 = (char *)v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_23DCE1100();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC87938();
  v111 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v110 = (char *)v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v107 = (char *)v101 - v19;
  sub_23DC8799C();
  v108 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v109 = (char *)v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v112 = (uint64_t)v101 - v23;
  v124 = sub_23DCE1640();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v134 = (char *)v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23DCE11E4();
  v26 = *(_QWORD *)(v25 - 8);
  v131 = v25;
  v132 = v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v135 = (char *)v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v138 = (char *)v101 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v31 = sub_23DCE1C64();
  v104 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v106 = (char *)v101 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)v101 - v34;
  v36 = sub_23DCE1274();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)v101 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23DCE12E0();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)v101 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v101 - v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v39, *MEMORY[0x24BDCEF70], v36);
  sub_23DCE1280();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  sub_23DCE11CC();
  v105 = v41;
  v47 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v136 = v40;
  v47(v44, v46, v40);
  sub_23DCE1C1C();
  sub_23DC934A0(&qword_254324950, MEMORY[0x24BDD24A8]);
  result = sub_23DCE1CD0();
  if ((result & 1) != 0)
  {
    v49 = v111;
    v50 = *(int *)(v111 + 48);
    v133 = v46;
    v51 = v107;
    v103 = v47;
    v52 = &v107[v50];
    v53 = v104;
    v54 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
    v128 = v35;
    v54(v107, v35, v31);
    v54(v52, v35, v31);
    v55 = v110;
    v56 = &v110[*(int *)(v49 + 48)];
    v54(v110, v51, v31);
    v54(v56, v52, v31);
    v57 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    v58 = (uint64_t)v109;
    v57(v109, v55, v31);
    v59 = *(void (**)(char *, uint64_t))(v53 + 8);
    v59(v56, v31);
    v60 = &v55[*(int *)(v49 + 48)];
    v57(v55, v51, v31);
    v57(v60, v52, v31);
    v57((char *)(v58 + *(int *)(v108 + 36)), v60, v31);
    v59(v55, v31);
    sub_23DC87A14(v58, v112, (uint64_t (*)(_QWORD))sub_23DC8799C);
    v61 = v136;
    v103(v44, v133, v136);
    sub_23DCE1610();
    sub_23DCE15D4();
    v62 = v106;
    sub_23DCE1628();
    v63 = v113;
    sub_23DCE15EC();
    sub_23DCE13F4();
    (*(void (**)(char *, _QWORD *))(v114 + 8))(v63, v115);
    v64 = v116;
    sub_23DCE1BBC();
    v114 = *(_QWORD *)(v105 + 8);
    ((void (*)(char *, uint64_t))v114)(v44, v61);
    v115 = v59;
    v59(v62, v31);
    v65 = v138;
    sub_23DCE10DC();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v64, v118);
    v66 = v119;
    v67 = v128;
    sub_23DCDAC70(v119);
    v68 = type metadata accessor for ImbalanceNotificationAnalysisState();
    v69 = v31;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v66, 1, v68) == 1)
    {
      sub_23DC8FE84(v66, (unint64_t *)&unk_256CFA5C0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
      v71 = v131;
      v70 = v132;
      v72 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v132 + 56))(v129, 1, 1, v131);
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
    }
    else
    {
      v74 = v66 + *(int *)(v68 + 20);
      v71 = v131;
      v70 = v132;
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 16);
      v72 = (uint64_t)v129;
      v73(v129, v74, v131);
      sub_23DC827C4(v66, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v72, 0, 1, v71);
    }
    v75 = (uint64_t)v127;
    v73(v135, (uint64_t)v65, v71);
    sub_23DC87754(v72, v137);
    sub_23DC802D0(0, (unint64_t *)&qword_2543256F0);
    v76 = (void *)MEMORY[0x242640CE0]((id)*MEMORY[0x24BDD3360]);
    v77 = (id)HKRollingBaselineConfigurationForQuantityType();

    if (v77)
    {
      objc_msgSend(v77, sel_maximumWindowDuration);
      v79 = v78;

    }
    else
    {
      v79 = 0;
    }
    v80 = v122;
    (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v75, v135, v71);
    v81 = v120;
    sub_23DC9BBE0(v137, v75 + *(int *)(v120 + 20));
    *(_QWORD *)(v75 + *(int *)(v81 + 24)) = v79;
    if (sub_23DC81870(v121))
    {
      v82 = v102;
      sub_23DCE1AFC();
      v83 = sub_23DCE1B08();
      v84 = sub_23DCE1EEC();
      if (os_log_type_enabled(v83, v84))
      {
        v85 = (uint8_t *)swift_slowAlloc();
        v86 = (uint64_t (*)())swift_slowAlloc();
        v139 = v86;
        *(_DWORD *)v85 = 136446210;
        v87 = sub_23DCE2354();
        v137 = v69;
        v140 = sub_23DCA47EC(v87, v88, (uint64_t *)&v139);
        v71 = v131;
        v72 = (uint64_t)v129;
        sub_23DCE1FD0();
        v69 = v137;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v83, v84, "[%{public}s] Requesting analysis for relevant samples added", v85, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v86, -1, -1);
        MEMORY[0x24264179C](v85, -1, -1);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v102, v126);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v125 + 8))(v82, v126);
      }
      v97 = *(os_unfair_lock_s **)(v130 + 72);
      v98 = (uint64_t (**)())&v97[4];
      v99 = v97 + 8;
      os_unfair_lock_lock(v97 + 8);
      sub_23DCDDB08(v98, &v139);
      os_unfair_lock_unlock(v99);
      v100 = v139;
      if (v139)
      {
        v139();
        sub_23DC97390((uint64_t)v100);
      }
      sub_23DC827C4(v75, (uint64_t (*)(_QWORD))type metadata accessor for SleepingSampleCacheRange);
      sub_23DC8FE84(v72, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v138, v71);
    }
    else
    {
      sub_23DCE1AFC();
      v89 = sub_23DCE1B08();
      v90 = sub_23DCE1EC8();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = (uint8_t *)swift_slowAlloc();
        v92 = (uint64_t (*)())swift_slowAlloc();
        v139 = v92;
        v137 = v69;
        *(_DWORD *)v91 = 136446210;
        v93 = sub_23DCE2354();
        v140 = sub_23DCA47EC(v93, v94, (uint64_t *)&v139);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v89, v90, "[%{public}s] Ignoring irrelevant samples added", v91, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v92, -1, -1);
        MEMORY[0x24264179C](v91, -1, -1);

        (*(void (**)(char *, uint64_t))(v125 + 8))(v80, v126);
        sub_23DC827C4(v75, (uint64_t (*)(_QWORD))type metadata accessor for SleepingSampleCacheRange);
        sub_23DC8FE84(v72, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v138, v131);
        (*(void (**)(char *, uint64_t))(v123 + 8))(v134, v124);
        v95 = v128;
        v96 = v137;
LABEL_19:
        v115(v95, v96);
        return ((uint64_t (*)(char *, uint64_t))v114)(v133, v136);
      }

      (*(void (**)(char *, uint64_t))(v125 + 8))(v80, v126);
      sub_23DC827C4(v75, (uint64_t (*)(_QWORD))type metadata accessor for SleepingSampleCacheRange);
      sub_23DC8FE84(v72, (unint64_t *)&unk_2543244C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v138, v71);
    }
    (*(void (**)(char *, uint64_t))(v123 + 8))(v134, v124);
    v95 = v67;
    v96 = v69;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t (**sub_23DCDDB08@<X0>(uint64_t (**result)()@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t (**v2)();
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t (*v9)();

  v2 = result;
  v5 = *result;
  v4 = (uint64_t)result[1];
  if (*result)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_23DCDDFF0;
    *(_QWORD *)(v4 + 24) = v6;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_23DCDDFF0;
    *(_QWORD *)(v7 + 24) = v6;
    result = (uint64_t (**)())swift_retain();
    v8 = sub_23DCDDFF0;
    v9 = sub_23DCDDFF0;
  }
  else
  {
    v9 = 0;
    v8 = 0;
    v7 = (uint64_t)result[1];
  }
  *a2 = v9;
  a2[1] = (uint64_t (*)())v4;
  *v2 = v8;
  v2[1] = (uint64_t (*)())v7;
  return result;
}

uint64_t (**sub_23DCDDBD4@<X0>(uint64_t (**result)()@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t (**v2)();
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t (*v9)();

  v2 = result;
  v5 = *result;
  v4 = (uint64_t)result[1];
  if (*result)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_23DCA0168;
    *(_QWORD *)(v4 + 24) = v6;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_23DCA0168;
    *(_QWORD *)(v7 + 24) = v6;
    result = (uint64_t (**)())swift_retain();
    v8 = sub_23DCDDFF0;
    v9 = sub_23DCA0168;
  }
  else
  {
    v9 = 0;
    v8 = 0;
    v7 = (uint64_t)result[1];
  }
  *a2 = v9;
  a2[1] = (uint64_t (*)())v4;
  *v2 = v8;
  v2[1] = (uint64_t (*)())v7;
  return result;
}

id *sub_23DCDDCA0()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return v0;
}

uint64_t sub_23DCDDCEC()
{
  sub_23DCDDCA0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImbalanceNotificationManagerHealthDelegate()
{
  return objc_opt_self();
}

uint64_t sub_23DCDDD30()
{
  return sub_23DCE1A54();
}

uint64_t sub_23DCDDD54@<X0>(uint64_t a1@<X8>)
{
  return sub_23DCDA34C(a1);
}

uint64_t sub_23DCDDD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23DCDA578(a1, a2);
}

uint64_t sub_23DCDDDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23DC9B6CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23DCDDDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t (*v10)();
  uint64_t v11;
  unint64_t v12;
  uint8_t *v13;
  os_unfair_lock_s *v14;
  uint64_t (**v15)();
  os_unfair_lock_s *v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();

  v1 = v0;
  v2 = sub_23DCE1B14();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE1AFC();
  v6 = sub_23DCE1B08();
  v7 = sub_23DCE1EEC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v19 = v1;
    v9 = (uint8_t *)v8;
    v10 = (uint64_t (*)())swift_slowAlloc();
    v21 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_23DCE2354();
    v20 = sub_23DCA47EC(v11, v12, (uint64_t *)&v21);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v6, v7, "[%{public}s] Received notification of samples removed", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v10, -1, -1);
    v13 = v9;
    v1 = v19;
    MEMORY[0x24264179C](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = *(os_unfair_lock_s **)(v1 + 72);
  v15 = (uint64_t (**)())&v14[4];
  v16 = v14 + 8;
  os_unfair_lock_lock(v14 + 8);
  sub_23DCDDBD4(v15, &v21);
  os_unfair_lock_unlock(v16);
  v17 = v21;
  if (v21)
  {
    v21();
    sub_23DC97390((uint64_t)v17);
  }
}

uint64_t sub_23DCDDFCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23DCDE00C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23DCDE058(uint64_t (*a1)(uint64_t, unint64_t))
{
  return a1(0x6465766965636572, 0xEE00746E65766520);
}

uint64_t sub_23DCDE09C(uint64_t (*a1)(uint64_t, unint64_t))
{
  return a1(0x6320656C706D6173, 0xEE007365676E6168);
}

BOOL sub_23DCDE0E0(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v4 = (void (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - v6;
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  v8 = sub_23DCE11E4();
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) == 1;
  sub_23DC87CE0((uint64_t)v7, (unint64_t *)&unk_2543244C0, v4);
  return v9;
}

uint64_t sub_23DCDE1AC(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char v69;
  void (*v70)(char *, uint64_t);
  void *v71;
  char *v72;
  _QWORD *v73;
  char *v74;
  uint64_t result;
  id v76;
  id v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  unint64_t *v82;
  void (*v83)(uint64_t);
  char v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t v122;
  char *v123;
  void (*v124)(char *, uint64_t, uint64_t);
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  void (*v138)(char *, uint64_t);
  void (*v139)(char *, uint64_t);
  void (*v140)(char *, char *, uint64_t);
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  void (*v146)(char *, char *, uint64_t);
  char *v147;
  char *v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  char *v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t ObjectType;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  void (*v197)(char *, uint64_t, uint64_t);
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;

  v4 = v3;
  v206 = a3;
  v197 = a1;
  ObjectType = swift_getObjectType();
  v195 = *v4;
  v196 = v4;
  v194 = *MEMORY[0x24BEE4EA0];
  v173 = sub_23DCE1B14();
  v172 = *(_QWORD *)(v173 - 8);
  MEMORY[0x24BDAC7A8](v173);
  v188 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DCE0B34();
  v163 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v166 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v161 = (char *)&v156 - v10;
  sub_23DCD0AAC();
  v162 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v165 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v164 = (uint64_t)&v156 - v14;
  v186 = sub_23DCE12D4();
  v184 = *(_QWORD *)(v186 - 8);
  MEMORY[0x24BDAC7A8](v186);
  v185 = (char *)&v156 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v169 = (char *)&v156 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v183 = (char *)&v156 - v19;
  v187 = sub_23DCE11E4();
  v189 = *(_QWORD *)(v187 - 8);
  v20 = MEMORY[0x24BDAC7A8](v187);
  v167 = (char *)&v156 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v182 = (char *)&v156 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v170 = (char *)&v156 - v24;
  v175 = sub_23DCE12E0();
  v174 = *(_QWORD *)(v175 - 8);
  MEMORY[0x24BDAC7A8](v175);
  v190 = (char *)&v156 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_23DCE1C64();
  v180 = *(_QWORD *)(v181 - 8);
  v26 = MEMORY[0x24BDAC7A8](v181);
  v178 = (char *)&v156 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v177 = (char *)&v156 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v179 = (char *)&v156 - v30;
  sub_23DC7F518(0, &qword_254325320, (void (*)(uint64_t))MEMORY[0x24BE3FFB0]);
  MEMORY[0x24BDAC7A8](v31);
  v193 = (char *)&v156 - v32;
  v33 = sub_23DCE15C8();
  v199 = *(_QWORD *)(v33 - 8);
  v200 = v33;
  MEMORY[0x24BDAC7A8](v33);
  v201 = (char *)&v156 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_2543244B0, (void (*)(uint64_t))MEMORY[0x24BDCB878]);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v156 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v202 = (char *)&v156 - v39;
  v40 = sub_23DCE1100();
  v41 = *(_QWORD *)(v40 - 8);
  v203 = v40;
  v204 = v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v171 = (char *)&v156 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v192 = (char *)&v156 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v198 = (char *)&v156 - v46;
  v205 = (_QWORD *)sub_23DCE14E4();
  v47 = *(v205 - 1);
  v48 = MEMORY[0x24BDAC7A8](v205);
  v176 = (char *)&v156 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v48);
  v191 = (char *)&v156 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v156 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v56 = (char *)&v156 - v55;
  v57 = sub_23DCE179C();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v60 = MEMORY[0x24BDAC7A8](v59);
  v62 = (char *)&v156 - v61;
  v63 = MEMORY[0x24BDAC7A8](v60);
  v65 = (char *)&v156 - v64;
  MEMORY[0x24BDAC7A8](v63);
  v68 = (char *)&v156 - v67;
  if (a2 != 2)
    goto LABEL_12;
  v160 = v66;
  sub_23DCE14FC();
  v69 = sub_23DCE1718();
  v70 = *(void (**)(char *, uint64_t))(v58 + 8);
  v70(v68, v57);
  if ((v69 & 1) == 0)
    goto LABEL_12;
  v157 = v38;
  sub_23DCE14FC();
  sub_23DCE1790();
  v159 = v57;
  v158 = v70;
  v70(v65, v57);
  v71 = (void *)sub_23DCE14D8();
  v72 = *(char **)(v47 + 8);
  v73 = v205;
  v74 = v72;
  result = ((uint64_t (*)(char *, _QWORD *))v72)(v56, v205);
  if (v71)
  {
    v76 = objc_msgSend((id)objc_opt_self(), sel_minuteUnit);
    v77 = objc_msgSend((id)objc_opt_self(), sel_quantityWithUnit_doubleValue_, v76, 90.0);

    LODWORD(v76) = objc_msgSend(v71, sel_hk_isGreaterThanQuantity_, v77);
    if (!(_DWORD)v76)
    {
      v84 = 1;
      return v84 & 1;
    }
    sub_23DCE14FC();
    sub_23DCE1790();
    v158(v62, v159);
    v78 = v202;
    sub_23DCE14CC();
    ((void (*)(char *, _QWORD *))v74)(v54, v73);
    v80 = v203;
    v79 = v204;
    v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48);
    if (v81(v78, 1, v203) == 1)
    {
      v82 = (unint64_t *)&unk_2543244B0;
      v83 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
LABEL_10:
      v89 = (uint64_t)v78;
LABEL_11:
      sub_23DC87CE0(v89, v82, v83);
LABEL_12:
      v84 = 0;
      return v84 & 1;
    }
    v85 = v194 & v195;
    v86 = v198;
    v202 = *(char **)(v79 + 32);
    ((void (*)(char *, char *, uint64_t))v202)(v198, v78, v80);
    v78 = v193;
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), _QWORD))(*(_QWORD *)(v85 + 88) + 48))(v197, *(_QWORD *)(v85 + 80));
    v88 = v199;
    v87 = v200;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v199 + 48))(v78, 1, v200) == 1)
    {
      (*(void (**)(char *, uint64_t))(v79 + 8))(v86, v80);
      v82 = &qword_254325320;
      v83 = (void (*)(uint64_t))MEMORY[0x24BE3FFB0];
      goto LABEL_10;
    }
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v201, v78, v87);
    v90 = v160;
    sub_23DCE14FC();
    v91 = v191;
    sub_23DCE1790();
    v158(v90, v159);
    v92 = (uint64_t)v157;
    sub_23DCE14CC();
    v93 = v205;
    ((void (*)(char *, _QWORD *))v74)(v91, v205);
    if (v81((char *)v92, 1, v80) == 1)
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v201, v87);
      (*(void (**)(char *, uint64_t))(v204 + 8))(v86, v80);
      v82 = (unint64_t *)&unk_2543244B0;
      v83 = (void (*)(uint64_t))MEMORY[0x24BDCB878];
      v89 = v92;
      goto LABEL_11;
    }
    ((void (*)(char *, uint64_t, uint64_t))v202)(v192, v92, v80);
    v202 = v74;
    v94 = v93;
    sub_23DCE14FC();
    v95 = v177;
    sub_23DCE1724();
    v96 = v159;
    v97 = v158;
    v158(v68, v159);
    v98 = v178;
    sub_23DCE1514();
    v99 = v179;
    sub_23DCE1BF8();
    v100 = *(void (**)(char *, uint64_t))(v180 + 8);
    v101 = v98;
    v102 = v181;
    v100(v101, v181);
    v100(v95, v102);
    v103 = sub_23DCE1C34();
    v100(v99, v102);
    sub_23DCE14FC();
    v104 = v176;
    sub_23DCE1790();
    v97(v68, v96);
    sub_23DCE14C0();
    ((void (*)(char *, _QWORD *))v202)(v104, v94);
    v105 = *MEMORY[0x24BDCF220];
    v106 = v184;
    v107 = v185;
    v108 = v186;
    v205 = *(_QWORD **)(v184 + 104);
    ((void (*)(char *, uint64_t, uint64_t))v205)(v185, v105, v186);
    v109 = v182;
    sub_23DCE10DC();
    v110 = v183;
    v206 = v103;
    sub_23DCE12C8();
    v111 = v189;
    v112 = *(void (**)(char *, uint64_t))(v189 + 8);
    v113 = v187;
    v112(v109, v187);
    v114 = *(char **)(v106 + 8);
    v115 = (uint64_t)v110;
    v202 = v114;
    ((void (*)(char *, uint64_t))v114)(v107, v108);
    v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
    if (v116(v115, 1, v113) == 1)
    {
      sub_23DC87CE0(v115, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      v117 = v188;
      goto LABEL_22;
    }
    v118 = v115;
    v119 = v170;
    v197 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 32);
    v197(v170, v118, v113);
    ((void (*)(char *, uint64_t, uint64_t))v205)(v107, v105, v108);
    sub_23DCE10C4();
    v120 = (uint64_t)v169;
    sub_23DCE12C8();
    v112(v109, v113);
    ((void (*)(char *, uint64_t))v202)(v107, v108);
    v121 = v116(v120, 1, v113);
    v122 = v113;
    v117 = v188;
    if (v121 == 1)
    {
      v112(v119, v122);
      sub_23DC87CE0(v120, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      goto LABEL_22;
    }
    v123 = v167;
    v124 = v197;
    v197(v167, v120, v122);
    sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v125 = v119;
    if ((sub_23DCE1CB8() & 1) != 0)
    {
      v112(v123, v122);
      v112(v119, v122);
LABEL_22:
      sub_23DCE1AFC();
      v127 = v203;
      v126 = v204;
      v128 = v171;
      v129 = v192;
      (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v171, v192, v203);
      v130 = sub_23DCE1B08();
      v131 = sub_23DCE1ED4();
      if (os_log_type_enabled(v130, v131))
      {
        v132 = swift_slowAlloc();
        v133 = swift_slowAlloc();
        v208 = v133;
        *(_DWORD *)v132 = 136446722;
        v134 = sub_23DCE2354();
        v207 = sub_23DCA47EC(v134, v135, &v208);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v132 + 12) = 2080;
        sub_23DC80074(&qword_256CFA5E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], MEMORY[0x24BDCB8B8]);
        v136 = sub_23DCE224C();
        v207 = sub_23DCA47EC(v136, v137, &v208);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        v138 = *(void (**)(char *, uint64_t))(v204 + 8);
        v138(v128, v127);
        *(_WORD *)(v132 + 22) = 2048;
        v207 = v206;
        sub_23DCE1FD0();
        _os_log_impl(&dword_23DC7C000, v130, v131, "[%{public}s] Unexpectedly could not shift %s by %ld", (uint8_t *)v132, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v133, -1, -1);
        MEMORY[0x24264179C](v132, -1, -1);

        (*(void (**)(char *, uint64_t))(v172 + 8))(v117, v173);
        (*(void (**)(char *, uint64_t))(v174 + 8))(v190, v175);
        v138(v192, v127);
        (*(void (**)(char *, uint64_t))(v199 + 8))(v201, v200);
        v138(v198, v127);
      }
      else
      {

        v139 = *(void (**)(char *, uint64_t))(v126 + 8);
        v139(v128, v127);
        (*(void (**)(char *, uint64_t))(v172 + 8))(v117, v173);
        (*(void (**)(char *, uint64_t))(v174 + 8))(v190, v175);
        v139(v129, v127);
        (*(void (**)(char *, uint64_t))(v199 + 8))(v201, v200);
        v139(v198, v127);
      }
      goto LABEL_12;
    }
    v140 = (void (*)(char *, char *, uint64_t))v124;
    v141 = v112;
    result = sub_23DCE1CD0();
    if ((result & 1) != 0)
    {
      v142 = v122;
      v143 = v163;
      v144 = v161;
      v145 = &v161[*(int *)(v163 + 48)];
      v146 = *(void (**)(char *, char *, uint64_t))(v189 + 16);
      v146(v161, v125, v122);
      v146(v145, v123, v122);
      v147 = v166;
      v148 = &v166[*(int *)(v143 + 48)];
      v146(v166, v144, v142);
      v146(v148, v145, v142);
      v149 = (uint64_t)v165;
      v140(v165, v147, v142);
      v150 = v141;
      v141(v148, v142);
      v151 = &v147[*(int *)(v143 + 48)];
      v140(v147, v144, v142);
      v140(v151, v145, v142);
      v140((char *)(v149 + *(int *)(v162 + 36)), v151, v142);
      v141(v147, v142);
      v152 = v164;
      sub_23DC87A14(v149, v164, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
      v153 = v198;
      sub_23DCE10A0();
      LOBYTE(v151) = sub_23DCDF354(v149);
      sub_23DC827C4(v149, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
      sub_23DC827C4(v152, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
      v150(v167, v142);
      v150(v170, v142);
      (*(void (**)(char *, uint64_t))(v174 + 8))(v190, v175);
      v154 = v203;
      v155 = *(void (**)(char *, uint64_t))(v204 + 8);
      v155(v192, v203);
      (*(void (**)(char *, uint64_t))(v199 + 8))(v201, v200);
      v155(v153, v154);
      v84 = v151 ^ 1;
      return v84 & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23DCDF2AC(void *a1, int a2, void *a3, void *a4, void *a5, void *aBlock)
{
  void *v10;
  uint64_t v11;
  id v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  id v15;

  v10 = _Block_copy(aBlock);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a1;
  sub_23DCDF6FC(v13, (void (*)(uint64_t))sub_23DCA5BB4, v11);

  return swift_release();
}

uint64_t sub_23DCDF354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v19;
  uint64_t v20;
  uint64_t v21;

  sub_23DCD0AAC();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v21 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v20 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  sub_23DCE11E4();
  sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v14 = sub_23DCE1CD0();
  sub_23DC82858(v1, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  sub_23DC82858(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  if ((v14 & 1) != 0)
  {
    sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
    sub_23DC827C4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
    sub_23DC82858(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
LABEL_4:
    sub_23DC827C4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
    v16 = v21;
    sub_23DC82858(a1, v21, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
    goto LABEL_5;
  }
  v15 = sub_23DCE1CD0();
  sub_23DC827C4((uint64_t)v11, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  sub_23DC827C4((uint64_t)v13, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  sub_23DC82858(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  if ((v15 & 1) != 0)
    goto LABEL_4;
  sub_23DC80074(&qword_256CFA5E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v19 = sub_23DCE1D00();
  sub_23DC827C4((uint64_t)v8, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  v16 = v21;
  sub_23DC82858(a1, v21, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  if ((v19 & 1) == 0)
  {
    v17 = sub_23DCE1D00() ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  v17 = 0;
LABEL_6:
  sub_23DC827C4(v16, (uint64_t (*)(_QWORD))sub_23DCD0AAC);
  return v17 & 1;
}

void sub_23DCDF5F4()
{
  sub_23DCE0AA8();
}

uint64_t sub_23DCDF610(uint64_t a1)
{

  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for ImbalanceNotificationManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ImbalanceNotificationManager);
}

BOOL sub_23DCDF654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7;

  sub_23DCE1C64();
  sub_23DC80074((unint64_t *)&unk_2543255D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD2488], MEMORY[0x24BDD24C0]);
  sub_23DCE1FF4();
  return !v7 && (sub_23DCE11B4() & 1) != 0 && *(_QWORD *)(a1 + *(int *)(a3 + 24)) == *(_QWORD *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_23DCDF6FC(void (*a1)(char *, uint64_t, uint64_t), void (*a2)(uint64_t), uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint8_t *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  char v77;
  char *v78;
  id v79;
  id v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t result;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  uint64_t (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BOOL4 v121;
  int v122;
  char *v123;
  char *v124;
  char *v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  char v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  void (*v147)(char *, uint64_t);
  char *v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint8_t *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(uint64_t);
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t (*v204)(char *, uint64_t);
  void (*v205)(char *, uint64_t, uint64_t);
  uint64_t v206;
  void *v207;
  char v208;
  uint64_t v209;

  v200 = a2;
  v205 = a1;
  ObjectType = swift_getObjectType();
  v206 = (uint64_t)v3;
  v204 = (uint64_t (*)(char *, uint64_t))(*MEMORY[0x24BEE4EA0] & *v3);
  v184 = sub_23DCE1C64();
  v183 = *(_QWORD *)(v184 - 8);
  MEMORY[0x24BDAC7A8](v184);
  v181 = (char *)&v171 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DC7F518(0, (unint64_t *)&unk_256CFA5C0, (void (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
  MEMORY[0x24BDAC7A8](v7);
  v182 = (char *)&v171 - v8;
  v185 = type metadata accessor for ImbalanceNotificationAnalysisState();
  v180 = *(_QWORD *)(v185 - 8);
  v9 = MEMORY[0x24BDAC7A8](v185);
  v178 = (char *)&v171 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v179 = (uint64_t)&v171 - v11;
  sub_23DC7F518(0, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v173 = (char *)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v186 = (char *)&v171 - v15;
  v16 = sub_23DCE11E4();
  v190 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v174 = (char *)&v171 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v176 = (char *)&v171 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v187 = (char *)&v171 - v21;
  v22 = sub_23DCE15C8();
  v195 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v191 = (char *)&v171 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v171 - v25;
  sub_23DC7F518(0, (unint64_t *)&qword_254325870, (void (*)(uint64_t))sub_23DC9B6CC);
  MEMORY[0x24BDAC7A8](v27);
  v203 = (char *)&v171 - v28;
  sub_23DC9B6CC();
  v202 = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v196 = (uint64_t)&v171 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v198 = (uint64_t)&v171 - v33;
  v34 = sub_23DCE1B14();
  v201 = *(_QWORD *)(v34 - 8);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v193 = (char *)&v171 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v197 = (uint64_t)&v171 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v189 = (char *)&v171 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v172 = (char *)&v171 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v175 = (char *)&v171 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v171 - v45;
  sub_23DCE1AFC();
  v47 = sub_23DCE1B08();
  v48 = sub_23DCE1EEC();
  v49 = os_log_type_enabled(v47, v48);
  v199 = a3;
  v194 = ObjectType;
  if (v49)
  {
    v188 = v16;
    v50 = swift_slowAlloc();
    v192 = v34;
    v51 = (uint8_t *)v50;
    v52 = swift_slowAlloc();
    v177 = v22;
    v53 = v52;
    v207 = (void *)v52;
    *(_DWORD *)v51 = 136446210;
    v171 = v51 + 4;
    v54 = sub_23DCE2354();
    v209 = sub_23DCA47EC(v54, v55, (uint64_t *)&v207);
    sub_23DCE1FD0();
    v16 = v188;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v47, v48, "[%{public}s] Beginning notification determination", v51, 0xCu);
    swift_arrayDestroy();
    v56 = v53;
    v22 = v177;
    MEMORY[0x24264179C](v56, -1, -1);
    v57 = v51;
    v34 = v192;
    MEMORY[0x24264179C](v57, -1, -1);
  }

  v58 = *(void (**)(char *, uint64_t))(v201 + 8);
  v58(v46, v34);
  v59 = *(_QWORD *)(v206 + qword_256CFA4D8);
  v60 = (uint64_t)v203;
  v62 = *((_QWORD *)v204 + 10);
  v61 = *((_QWORD *)v204 + 11);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v61 + 40))(v205, v62, v61);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v60, 1, v202) != 1)
  {
    v197 = v62;
    v201 = v59;
    v73 = v198;
    sub_23DC87A14(v60, v198, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
    v74 = v73;
    v75 = v196;
    sub_23DC82858(v74, v196, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v77 = *(_BYTE *)(v75 + 8);
      v207 = *(void **)v75;
      v76 = v207;
      v208 = v77;
      sub_23DC87A9C();
      swift_willThrowTypedImpl();
      v78 = v193;
      sub_23DCE1AFC();
      v79 = v76;
      v80 = v76;
      v81 = sub_23DCE1B08();
      v82 = sub_23DCE1ED4();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = swift_slowAlloc();
        v84 = (_QWORD *)swift_slowAlloc();
        v206 = swift_slowAlloc();
        v207 = (void *)v206;
        *(_DWORD *)v83 = 136446466;
        v85 = sub_23DCE2354();
        v204 = (uint64_t (*)(char *, uint64_t))v58;
        v209 = sub_23DCA47EC(v85, v86, (uint64_t *)&v207);
        v192 = v34;
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2114;
        swift_allocError();
        *(_QWORD *)v87 = v76;
        *(_BYTE *)(v87 + 8) = v77;
        v88 = v76;
        v89 = _swift_stdlib_bridgeErrorToNSError();
        v209 = v89;
        sub_23DCE1FD0();
        *v84 = v89;

        _os_log_impl(&dword_23DC7C000, v81, v82, "[%{public}s] Error enumerating day summary %{public}@", (uint8_t *)v83, 0x16u);
        sub_23DC7F518(0, (unint64_t *)&qword_254324A40, (void (*)(uint64_t))sub_23DC80D4C);
        swift_arrayDestroy();
        MEMORY[0x24264179C](v84, -1, -1);
        v90 = v206;
        swift_arrayDestroy();
        MEMORY[0x24264179C](v90, -1, -1);
        MEMORY[0x24264179C](v83, -1, -1);

        v91 = v204(v193, v192);
      }
      else
      {

        v91 = ((uint64_t (*)(char *, uint64_t))v58)(v78, v34);
      }
      v200(v91);

      return sub_23DC827C4(v198, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
    }
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 32);
    v94 = v75;
    v95 = v191;
    v93(v191, v94, v22);
    v93(v26, (uint64_t)v95, v22);
    if ((sub_23DCE1598() & 1) == 0)
      goto LABEL_14;
    v96 = (uint64_t)v186;
    sub_23DCE19C4();
    v97 = v190;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v96, 1, v16) == 1)
    {
      sub_23DC87CE0(v96, (unint64_t *)&unk_2543244C0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
LABEL_14:
      v98 = v189;
      sub_23DCE1AFC();
      v99 = sub_23DCE1B08();
      v100 = sub_23DCE1EEC();
      if (os_log_type_enabled(v99, v100))
      {
        v101 = (uint8_t *)swift_slowAlloc();
        v102 = swift_slowAlloc();
        v203 = v26;
        v103 = v102;
        v207 = (void *)v102;
        *(_DWORD *)v101 = 136446210;
        v104 = sub_23DCE2354();
        v204 = (uint64_t (*)(char *, uint64_t))v58;
        v209 = sub_23DCA47EC(v104, v105, (uint64_t *)&v207);
        sub_23DCE1FD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DC7C000, v99, v100, "[%{public}s] No data available for analysis, returning.", v101, 0xCu);
        swift_arrayDestroy();
        v106 = v103;
        v26 = v203;
        MEMORY[0x24264179C](v106, -1, -1);
        MEMORY[0x24264179C](v101, -1, -1);

        v107 = v204(v98, v34);
      }
      else
      {

        v107 = ((uint64_t (*)(char *, uint64_t))v58)(v98, v34);
      }
      v200(v107);
      v108 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
      v109 = (uint64_t)v26;
      goto LABEL_37;
    }
    v204 = (uint64_t (*)(char *, uint64_t))v58;
    v110 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 32);
    v188 = v16;
    v111 = v110(v187, v96, v16);
    v203 = v26;
    v112 = MEMORY[0x24264038C](v111);
    v113 = v197;
    v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 24))(v197, v61);
    if (v112 < v114)
      (*(void (**)(uint64_t, uint64_t))(v61 + 128))(v113, v61);
    v115 = v181;
    sub_23DCE1514();
    v116 = (uint64_t)v182;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 56))(v115, v113, v61);
    (*(void (**)(char *, uint64_t))(v183 + 8))(v115, v184);
    v117 = v185;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v116, 1, v185) == 1)
    {
      sub_23DC87CE0(v116, (unint64_t *)&unk_256CFA5C0, (void (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
      v118 = v190;
    }
    else
    {
      v119 = v116;
      v120 = v179;
      sub_23DC87A14(v119, v179, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
      v118 = v190;
      if (*(_QWORD *)(v120 + *(int *)(v117 + 24)) >= v112)
      {
        v136 = v175;
        sub_23DCE1AFC();
        v137 = sub_23DCE1B08();
        v138 = sub_23DCE1EEC();
        if (os_log_type_enabled(v137, v138))
        {
          v177 = v22;
          v139 = (uint8_t *)swift_slowAlloc();
          v140 = swift_slowAlloc();
          v207 = (void *)v140;
          *(_DWORD *)v139 = 136446210;
          v141 = sub_23DCE2354();
          v209 = sub_23DCA47EC(v141, v142, (uint64_t *)&v207);
          v22 = v177;
          sub_23DCE1FD0();
          v118 = v190;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23DC7C000, v137, v138, "[%{public}s] Notification state unchanged", v139, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24264179C](v140, -1, -1);
          MEMORY[0x24264179C](v139, -1, -1);
        }

        v143 = v204(v136, v34);
        v132 = (uint64_t)v203;
        v144 = v187;
        v200(v143);
        sub_23DC827C4(v179, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
        (*(void (**)(char *, uint64_t))(v118 + 8))(v144, v188);
        goto LABEL_36;
      }
      sub_23DC827C4(v120, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
    }
    v192 = v34;
    if ((sub_23DCE19DC() & 1) != 0)
    {
      v121 = sub_23DCDE0E0(v197, v61);
      v122 = v112 < v114 || v121;
      if (v112 >= v114 || v121)
        goto LABEL_29;
    }
    else if (v112 >= v114)
    {
      v122 = 0;
LABEL_29:
      LODWORD(v202) = v122;
      v196 = v114;
      v177 = v22;
      v123 = v176;
      v124 = v187;
      sub_23DCE1190();
      v125 = v174;
      v126 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v126(v197, v61);
      sub_23DC80074((unint64_t *)&qword_2543252D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      v127 = v188;
      v128 = sub_23DCE1CB8();
      v129 = *(void (**)(char *, uint64_t))(v118 + 8);
      v129(v125, v127);
      if ((v128 & 1) != 0)
      {
        v130 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 104))(v123, v197, v61);
        v200(v130);
        v129(v123, v127);
        v129(v124, v127);
        v108 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
        v109 = (uint64_t)v203;
      }
      else
      {
        v146 = v126;
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v61 + 32))(v197, v61) & 1) != 0)
        {
          result = sub_23DCDE1AC(v205, v112, (uint64_t)v203);
          if ((result & 1) != 0)
          {
            v147 = v129;
            v148 = v172;
            sub_23DCE1AFC();
            v149 = sub_23DCE1B08();
            v150 = sub_23DCE1EEC();
            if (os_log_type_enabled(v149, v150))
            {
              v151 = (uint8_t *)swift_slowAlloc();
              v152 = swift_slowAlloc();
              v207 = (void *)v152;
              *(_DWORD *)v151 = 136446210;
              v153 = sub_23DCE2354();
              v209 = sub_23DCA47EC(v153, v154, (uint64_t *)&v207);
              sub_23DCE1FD0();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_23DC7C000, v149, v150, "[%{public}s] Suppressing outlier notification due to likelihood of it being due to a nap", v151, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24264179C](v152, -1, -1);
              MEMORY[0x24264179C](v151, -1, -1);
            }

            v155 = v204(v148, v192);
            v156 = v177;
            v157 = (uint64_t)v203;
            v158 = v187;
            v159 = v176;
            v200(v155);
            v160 = v188;
            v147(v159, v188);
            v147(v158, v160);
            (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v157, v156);
            return sub_23DC827C4(v198, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
          }
          if (!((v112 >= v196) | v202 & 1))
          {
            __break(1u);
            return result;
          }
          v161 = 120;
          if (v112 >= v196)
            v161 = 112;
          (*(void (**)(char *, uint64_t, uint64_t))(v61 + v161))(v203, v197, v61);
        }
        v162 = v129;
        v163 = (uint64_t)v178;
        v164 = (uint64_t)v203;
        sub_23DCE1514();
        v165 = v185;
        v166 = v197;
        v146(v197, v61);
        *(_QWORD *)(v163 + *(int *)(v165 + 24)) = v112;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 88))(v163, v166, v61);
        v167 = sub_23DC827C4(v163, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
        v168 = v188;
        if ((v202 & 1) != 0)
        {
          v169 = v173;
          v170 = v197;
          v146(v197, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v169, 0, 1, v168);
          v167 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 72))(v169, v170, v61);
        }
        v200(v167);
        v162(v176, v168);
        v162(v187, v168);
        v108 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
        v109 = v164;
      }
      v145 = v177;
      goto LABEL_38;
    }
    v131 = (uint64_t)v178;
    v132 = (uint64_t)v203;
    sub_23DCE1514();
    v133 = v185;
    v134 = v197;
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v197, v61);
    *(_QWORD *)(v131 + *(int *)(v133 + 24)) = v112;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 88))(v131, v134, v61);
    v135 = sub_23DC827C4(v131, (uint64_t (*)(_QWORD))type metadata accessor for ImbalanceNotificationAnalysisState);
    v200(v135);
    (*(void (**)(char *, uint64_t))(v118 + 8))(v187, v188);
LABEL_36:
    v108 = *(void (**)(uint64_t, uint64_t))(v195 + 8);
    v109 = v132;
LABEL_37:
    v145 = v22;
LABEL_38:
    v108(v109, v145);
    return sub_23DC827C4(v198, (uint64_t (*)(_QWORD))sub_23DC9B6CC);
  }
  sub_23DC87CE0(v60, (unint64_t *)&qword_254325870, (void (*)(uint64_t))sub_23DC9B6CC);
  v63 = v197;
  sub_23DCE1AFC();
  v64 = sub_23DCE1B08();
  v65 = sub_23DCE1ED4();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    v204 = (uint64_t (*)(char *, uint64_t))v58;
    v68 = v34;
    v69 = v67;
    v207 = (void *)v67;
    *(_DWORD *)v66 = 136446210;
    v70 = sub_23DCE2354();
    v209 = sub_23DCA47EC(v70, v71, (uint64_t *)&v207);
    sub_23DCE1FD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DC7C000, v64, v65, "[%{public}s] Configuration issue: no day summary result returned", v66, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264179C](v69, -1, -1);
    MEMORY[0x24264179C](v66, -1, -1);

    v72 = v204((char *)v63, v68);
  }
  else
  {

    v72 = ((uint64_t (*)(uint64_t, uint64_t))v58)(v63, v34);
  }
  return ((uint64_t (*)(uint64_t))v200)(v72);
}

void sub_23DCE0AA8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23DCE0AD4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t type metadata accessor for ImbalanceNotificationAnalysisState()
{
  uint64_t result;

  result = qword_256CFA648;
  if (!qword_256CFA648)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23DCE0B34()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_256CFA5D0)
  {
    sub_23DCE11E4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_256CFA5D0);
  }
}

uint64_t *sub_23DCE0B98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23DCE1C64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23DCE11E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_23DCE0C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23DCE11E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_23DCE0CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23DCE0D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23DCE0DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23DCE0E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23DCE1C64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23DCE11E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23DCE0EF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCE0EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23DCE1C64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_23DCE11E4();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23DCE0F70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23DCE0F7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23DCE1C64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_23DCE11E4();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23DCE0FF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23DCE1C64();
  if (v1 <= 0x3F)
  {
    result = sub_23DCE11E4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_23DCE1088()
{
  return MEMORY[0x24BDCB7F8]();
}

uint64_t sub_23DCE1094()
{
  return MEMORY[0x24BE3FA38]();
}

uint64_t sub_23DCE10A0()
{
  return MEMORY[0x24BE3FA40]();
}

uint64_t sub_23DCE10AC()
{
  return MEMORY[0x24BDCB810]();
}

uint64_t sub_23DCE10B8()
{
  return MEMORY[0x24BDCB828]();
}

uint64_t sub_23DCE10C4()
{
  return MEMORY[0x24BDCB830]();
}

uint64_t sub_23DCE10D0()
{
  return MEMORY[0x24BDCB838]();
}

uint64_t sub_23DCE10DC()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_23DCE10E8()
{
  return MEMORY[0x24BDCB858]();
}

uint64_t sub_23DCE10F4()
{
  return MEMORY[0x24BDD2018]();
}

uint64_t sub_23DCE1100()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_23DCE110C()
{
  return MEMORY[0x24BDCBCA0]();
}

uint64_t sub_23DCE1118()
{
  return MEMORY[0x24BDCBCC0]();
}

uint64_t sub_23DCE1124()
{
  return MEMORY[0x24BDCBCC8]();
}

uint64_t sub_23DCE1130()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_23DCE113C()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_23DCE1148()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23DCE1154()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23DCE1160()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_23DCE116C()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23DCE1178()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_23DCE1184()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23DCE1190()
{
  return MEMORY[0x24BDCE600]();
}

uint64_t sub_23DCE119C()
{
  return MEMORY[0x24BDCE608]();
}

uint64_t sub_23DCE11A8()
{
  return MEMORY[0x24BDCE610]();
}

uint64_t sub_23DCE11B4()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23DCE11C0()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23DCE11CC()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23DCE11D8()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23DCE11E4()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23DCE11F0()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23DCE11FC()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23DCE1208()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23DCE1214()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23DCE1220()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23DCE122C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23DCE1238()
{
  return MEMORY[0x24BDCECF0]();
}

uint64_t sub_23DCE1244()
{
  return MEMORY[0x24BDCED08]();
}

uint64_t sub_23DCE1250()
{
  return MEMORY[0x24BDCED50]();
}

uint64_t sub_23DCE125C()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_23DCE1268()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23DCE1274()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_23DCE1280()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_23DCE128C()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t sub_23DCE1298()
{
  return MEMORY[0x24BDCF040]();
}

uint64_t sub_23DCE12A4()
{
  return MEMORY[0x24BDCF0C0]();
}

uint64_t sub_23DCE12B0()
{
  return MEMORY[0x24BDCF118]();
}

uint64_t sub_23DCE12BC()
{
  return MEMORY[0x24BDCF128]();
}

uint64_t sub_23DCE12C8()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_23DCE12D4()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_23DCE12E0()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_23DCE12EC()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_23DCE12F8()
{
  return MEMORY[0x24BE3FA48]();
}

uint64_t sub_23DCE1304()
{
  return MEMORY[0x24BE3FA58]();
}

uint64_t sub_23DCE1310()
{
  return MEMORY[0x24BE3FA60]();
}

uint64_t sub_23DCE131C()
{
  return MEMORY[0x24BE3FA68]();
}

uint64_t sub_23DCE1328()
{
  return MEMORY[0x24BE3FB08]();
}

uint64_t sub_23DCE1334()
{
  return MEMORY[0x24BE3FB10]();
}

uint64_t sub_23DCE1340()
{
  return MEMORY[0x24BE3FB28]();
}

uint64_t sub_23DCE134C()
{
  return MEMORY[0x24BE3FB90]();
}

uint64_t sub_23DCE1358()
{
  return MEMORY[0x24BE3FB98]();
}

uint64_t sub_23DCE1364()
{
  return MEMORY[0x24BE3FBA0]();
}

uint64_t sub_23DCE1370()
{
  return MEMORY[0x24BE3FBA8]();
}

uint64_t sub_23DCE137C()
{
  return MEMORY[0x24BE3FBB0]();
}

uint64_t sub_23DCE1388()
{
  return MEMORY[0x24BE3FBB8]();
}

uint64_t sub_23DCE1394()
{
  return MEMORY[0x24BE3FBC8]();
}

uint64_t sub_23DCE13A0()
{
  return MEMORY[0x24BE3FBD8]();
}

uint64_t sub_23DCE13AC()
{
  return MEMORY[0x24BE3FBE0]();
}

uint64_t sub_23DCE13B8()
{
  return MEMORY[0x24BE3FCB0]();
}

uint64_t sub_23DCE13C4()
{
  return MEMORY[0x24BE3FCB8]();
}

uint64_t sub_23DCE13D0()
{
  return MEMORY[0x24BE3FCC0]();
}

uint64_t sub_23DCE13DC()
{
  return MEMORY[0x24BE3FCC8]();
}

uint64_t sub_23DCE13E8()
{
  return MEMORY[0x24BE3FCD0]();
}

uint64_t sub_23DCE13F4()
{
  return MEMORY[0x24BE3FCD8]();
}

uint64_t sub_23DCE1400()
{
  return MEMORY[0x24BE3FCF0]();
}

uint64_t sub_23DCE140C()
{
  return MEMORY[0x24BE3FD80]();
}

uint64_t sub_23DCE1418()
{
  return MEMORY[0x24BE3FD88]();
}

uint64_t sub_23DCE1424()
{
  return MEMORY[0x24BE3FD90]();
}

uint64_t sub_23DCE1430()
{
  return MEMORY[0x24BE3FD98]();
}

uint64_t sub_23DCE143C()
{
  return MEMORY[0x24BE3FDA0]();
}

uint64_t sub_23DCE1448()
{
  return MEMORY[0x24BE3FDB0]();
}

uint64_t sub_23DCE1454()
{
  return MEMORY[0x24BE3FDB8]();
}

uint64_t sub_23DCE1460()
{
  return MEMORY[0x24BE3FDE8]();
}

uint64_t sub_23DCE146C()
{
  return MEMORY[0x24BE3FE20]();
}

uint64_t sub_23DCE1478()
{
  return MEMORY[0x24BE3FE60]();
}

uint64_t sub_23DCE1484()
{
  return MEMORY[0x24BE3FE78]();
}

uint64_t sub_23DCE1490()
{
  return MEMORY[0x24BE3FE90]();
}

uint64_t sub_23DCE149C()
{
  return MEMORY[0x24BE3FEA0]();
}

uint64_t sub_23DCE14A8()
{
  return MEMORY[0x24BE3FEA8]();
}

uint64_t sub_23DCE14B4()
{
  return MEMORY[0x24BE3FEB0]();
}

uint64_t sub_23DCE14C0()
{
  return MEMORY[0x24BE3FEB8]();
}

uint64_t sub_23DCE14CC()
{
  return MEMORY[0x24BE3FEC0]();
}

uint64_t sub_23DCE14D8()
{
  return MEMORY[0x24BE3FEC8]();
}

uint64_t sub_23DCE14E4()
{
  return MEMORY[0x24BE3FED0]();
}

uint64_t sub_23DCE14F0()
{
  return MEMORY[0x24BE3FEE0]();
}

uint64_t sub_23DCE14FC()
{
  return MEMORY[0x24BE3FEE8]();
}

uint64_t sub_23DCE1508()
{
  return MEMORY[0x24BE3FEF0]();
}

uint64_t sub_23DCE1514()
{
  return MEMORY[0x24BE3FEF8]();
}

uint64_t sub_23DCE1520()
{
  return MEMORY[0x24BE3FF00]();
}

uint64_t sub_23DCE152C()
{
  return MEMORY[0x24BE3FF10]();
}

uint64_t sub_23DCE1538()
{
  return MEMORY[0x24BE3FF18]();
}

uint64_t sub_23DCE1544()
{
  return MEMORY[0x24BE3FF20]();
}

uint64_t sub_23DCE1550()
{
  return MEMORY[0x24BE3FF28]();
}

uint64_t sub_23DCE155C()
{
  return MEMORY[0x24BE3FF48]();
}

uint64_t sub_23DCE1568()
{
  return MEMORY[0x24BE3FF50]();
}

uint64_t sub_23DCE1574()
{
  return MEMORY[0x24BE3FF58]();
}

uint64_t sub_23DCE1580()
{
  return MEMORY[0x24BE3FF68]();
}

uint64_t sub_23DCE158C()
{
  return MEMORY[0x24BE3FF78]();
}

uint64_t sub_23DCE1598()
{
  return MEMORY[0x24BE3FF80]();
}

uint64_t sub_23DCE15A4()
{
  return MEMORY[0x24BE3FF88]();
}

uint64_t sub_23DCE15B0()
{
  return MEMORY[0x24BE3FF90]();
}

uint64_t sub_23DCE15BC()
{
  return MEMORY[0x24BE3FF98]();
}

uint64_t sub_23DCE15C8()
{
  return MEMORY[0x24BE3FFB0]();
}

uint64_t sub_23DCE15D4()
{
  return MEMORY[0x24BE3FFD8]();
}

uint64_t sub_23DCE15E0()
{
  return MEMORY[0x24BE3FFE0]();
}

uint64_t sub_23DCE15EC()
{
  return MEMORY[0x24BE3FFE8]();
}

uint64_t sub_23DCE15F8()
{
  return MEMORY[0x24BE3FFF0]();
}

uint64_t sub_23DCE1604()
{
  return MEMORY[0x24BE3FFF8]();
}

uint64_t sub_23DCE1610()
{
  return MEMORY[0x24BE40000]();
}

uint64_t sub_23DCE161C()
{
  return MEMORY[0x24BE40008]();
}

uint64_t sub_23DCE1628()
{
  return MEMORY[0x24BE40010]();
}

uint64_t sub_23DCE1634()
{
  return MEMORY[0x24BE40018]();
}

uint64_t sub_23DCE1640()
{
  return MEMORY[0x24BE40020]();
}

uint64_t sub_23DCE164C()
{
  return MEMORY[0x24BE40038]();
}

uint64_t sub_23DCE1658()
{
  return MEMORY[0x24BE40048]();
}

uint64_t sub_23DCE1664()
{
  return MEMORY[0x24BE40050]();
}

uint64_t sub_23DCE1670()
{
  return MEMORY[0x24BE40058]();
}

uint64_t sub_23DCE167C()
{
  return MEMORY[0x24BE40080]();
}

uint64_t sub_23DCE1688()
{
  return MEMORY[0x24BE40090]();
}

uint64_t sub_23DCE1694()
{
  return MEMORY[0x24BE400A8]();
}

uint64_t sub_23DCE16A0()
{
  return MEMORY[0x24BE400B8]();
}

uint64_t sub_23DCE16AC()
{
  return MEMORY[0x24BE400D0]();
}

uint64_t sub_23DCE16B8()
{
  return MEMORY[0x24BE400D8]();
}

uint64_t sub_23DCE16C4()
{
  return MEMORY[0x24BE400E8]();
}

uint64_t sub_23DCE16D0()
{
  return MEMORY[0x24BE40120]();
}

uint64_t sub_23DCE16DC()
{
  return MEMORY[0x24BE40130]();
}

uint64_t sub_23DCE16E8()
{
  return MEMORY[0x24BE40148]();
}

uint64_t sub_23DCE16F4()
{
  return MEMORY[0x24BE40150]();
}

uint64_t sub_23DCE1700()
{
  return MEMORY[0x24BE40168]();
}

uint64_t sub_23DCE170C()
{
  return MEMORY[0x24BE40170]();
}

uint64_t sub_23DCE1718()
{
  return MEMORY[0x24BE40178]();
}

uint64_t sub_23DCE1724()
{
  return MEMORY[0x24BE40180]();
}

uint64_t sub_23DCE1730()
{
  return MEMORY[0x24BE40198]();
}

uint64_t sub_23DCE173C()
{
  return MEMORY[0x24BE401A0]();
}

uint64_t sub_23DCE1748()
{
  return MEMORY[0x24BE401C0]();
}

uint64_t sub_23DCE1754()
{
  return MEMORY[0x24BE401F0]();
}

uint64_t sub_23DCE1760()
{
  return MEMORY[0x24BE40208]();
}

uint64_t sub_23DCE176C()
{
  return MEMORY[0x24BE40218]();
}

uint64_t sub_23DCE1778()
{
  return MEMORY[0x24BE40220]();
}

uint64_t sub_23DCE1784()
{
  return MEMORY[0x24BE40228]();
}

uint64_t sub_23DCE1790()
{
  return MEMORY[0x24BE40230]();
}

uint64_t sub_23DCE179C()
{
  return MEMORY[0x24BE40238]();
}

uint64_t sub_23DCE17A8()
{
  return MEMORY[0x24BE40258]();
}

uint64_t sub_23DCE17B4()
{
  return MEMORY[0x24BE40260]();
}

uint64_t sub_23DCE17C0()
{
  return MEMORY[0x24BE40268]();
}

uint64_t sub_23DCE17CC()
{
  return MEMORY[0x24BE40270]();
}

uint64_t sub_23DCE17D8()
{
  return MEMORY[0x24BE40278]();
}

uint64_t sub_23DCE17E4()
{
  return MEMORY[0x24BE40280]();
}

uint64_t sub_23DCE17F0()
{
  return MEMORY[0x24BE40288]();
}

uint64_t sub_23DCE17FC()
{
  return MEMORY[0x24BE40290]();
}

uint64_t sub_23DCE1808()
{
  return MEMORY[0x24BE402A8]();
}

uint64_t sub_23DCE1814()
{
  return MEMORY[0x24BE402B8]();
}

uint64_t sub_23DCE1820()
{
  return MEMORY[0x24BE402C0]();
}

uint64_t sub_23DCE182C()
{
  return MEMORY[0x24BE402C8]();
}

uint64_t sub_23DCE1838()
{
  return MEMORY[0x24BE402D8]();
}

uint64_t sub_23DCE1844()
{
  return MEMORY[0x24BE402E0]();
}

uint64_t sub_23DCE1850()
{
  return MEMORY[0x24BE402E8]();
}

uint64_t sub_23DCE185C()
{
  return MEMORY[0x24BE402F0]();
}

uint64_t sub_23DCE1868()
{
  return MEMORY[0x24BE402F8]();
}

uint64_t sub_23DCE1874()
{
  return MEMORY[0x24BE40300]();
}

uint64_t sub_23DCE1880()
{
  return MEMORY[0x24BE40308]();
}

uint64_t sub_23DCE188C()
{
  return MEMORY[0x24BE40310]();
}

uint64_t sub_23DCE1898()
{
  return MEMORY[0x24BE40318]();
}

uint64_t sub_23DCE18A4()
{
  return MEMORY[0x24BE40328]();
}

uint64_t sub_23DCE18B0()
{
  return MEMORY[0x24BE40338]();
}

uint64_t sub_23DCE18BC()
{
  return MEMORY[0x24BE40348]();
}

uint64_t sub_23DCE18C8()
{
  return MEMORY[0x24BE40350]();
}

uint64_t sub_23DCE18D4()
{
  return MEMORY[0x24BE40360]();
}

uint64_t sub_23DCE18E0()
{
  return MEMORY[0x24BE40368]();
}

uint64_t sub_23DCE18EC()
{
  return MEMORY[0x24BE40370]();
}

uint64_t sub_23DCE18F8()
{
  return MEMORY[0x24BE40378]();
}

uint64_t sub_23DCE1904()
{
  return MEMORY[0x24BE40380]();
}

uint64_t sub_23DCE1910()
{
  return MEMORY[0x24BE40390]();
}

uint64_t sub_23DCE191C()
{
  return MEMORY[0x24BE403A0]();
}

uint64_t sub_23DCE1928()
{
  return MEMORY[0x24BE40418]();
}

uint64_t sub_23DCE1934()
{
  return MEMORY[0x24BE40420]();
}

uint64_t sub_23DCE1940()
{
  return MEMORY[0x24BE40438]();
}

uint64_t sub_23DCE194C()
{
  return MEMORY[0x24BE404B8]();
}

uint64_t sub_23DCE1958()
{
  return MEMORY[0x24BE40530]();
}

uint64_t sub_23DCE1964()
{
  return MEMORY[0x24BE40538]();
}

uint64_t sub_23DCE1970()
{
  return MEMORY[0x24BE40548]();
}

uint64_t sub_23DCE197C()
{
  return MEMORY[0x24BE40550]();
}

uint64_t sub_23DCE1988()
{
  return MEMORY[0x24BE40558]();
}

uint64_t sub_23DCE1994()
{
  return MEMORY[0x24BE40560]();
}

uint64_t sub_23DCE19A0()
{
  return MEMORY[0x24BE40568]();
}

uint64_t sub_23DCE19AC()
{
  return MEMORY[0x24BE40570]();
}

uint64_t sub_23DCE19B8()
{
  return MEMORY[0x24BE405A8]();
}

uint64_t sub_23DCE19C4()
{
  return MEMORY[0x24BE405B0]();
}

uint64_t sub_23DCE19D0()
{
  return MEMORY[0x24BE405C0]();
}

uint64_t sub_23DCE19DC()
{
  return MEMORY[0x24BE405E0]();
}

uint64_t sub_23DCE19E8()
{
  return MEMORY[0x24BE405E8]();
}

uint64_t sub_23DCE19F4()
{
  return MEMORY[0x24BE405F0]();
}

uint64_t sub_23DCE1A00()
{
  return MEMORY[0x24BE405F8]();
}

uint64_t sub_23DCE1A0C()
{
  return MEMORY[0x24BE40618]();
}

uint64_t sub_23DCE1A18()
{
  return MEMORY[0x24BE40628]();
}

uint64_t sub_23DCE1A24()
{
  return MEMORY[0x24BE40638]();
}

uint64_t sub_23DCE1A30()
{
  return MEMORY[0x24BE40640]();
}

uint64_t sub_23DCE1A3C()
{
  return MEMORY[0x24BE40648]();
}

uint64_t sub_23DCE1A48()
{
  return MEMORY[0x24BE40650]();
}

uint64_t sub_23DCE1A54()
{
  return MEMORY[0x24BE40658]();
}

uint64_t sub_23DCE1A60()
{
  return MEMORY[0x24BE40670]();
}

uint64_t sub_23DCE1A6C()
{
  return MEMORY[0x24BE40678]();
}

uint64_t sub_23DCE1A78()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23DCE1A84()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_23DCE1A90()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23DCE1A9C()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_23DCE1AA8()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23DCE1AB4()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23DCE1AC0()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23DCE1ACC()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23DCE1AD8()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23DCE1AE4()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23DCE1AF0()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23DCE1AFC()
{
  return MEMORY[0x24BE40688]();
}

uint64_t sub_23DCE1B08()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23DCE1B14()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23DCE1B20()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23DCE1B2C()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23DCE1B38()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23DCE1B44()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_23DCE1B50()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_23DCE1B5C()
{
  return MEMORY[0x24BDD2188]();
}

uint64_t sub_23DCE1B68()
{
  return MEMORY[0x24BDD2190]();
}

uint64_t sub_23DCE1B74()
{
  return MEMORY[0x24BDD2198]();
}

uint64_t sub_23DCE1B80()
{
  return MEMORY[0x24BDD21A0]();
}

uint64_t sub_23DCE1B8C()
{
  return MEMORY[0x24BDD2378]();
}

uint64_t sub_23DCE1B98()
{
  return MEMORY[0x24BDD23A8]();
}

uint64_t sub_23DCE1BA4()
{
  return MEMORY[0x24BDD23B0]();
}

uint64_t sub_23DCE1BB0()
{
  return MEMORY[0x24BDD23E8]();
}

uint64_t sub_23DCE1BBC()
{
  return MEMORY[0x24BDD2408]();
}

uint64_t sub_23DCE1BC8()
{
  return MEMORY[0x24BDD2420]();
}

uint64_t sub_23DCE1BD4()
{
  return MEMORY[0x24BDD2428]();
}

uint64_t sub_23DCE1BE0()
{
  return MEMORY[0x24BDD2430]();
}

uint64_t sub_23DCE1BEC()
{
  return MEMORY[0x24BDD2438]();
}

uint64_t sub_23DCE1BF8()
{
  return MEMORY[0x24BDD2440]();
}

uint64_t sub_23DCE1C04()
{
  return MEMORY[0x24BDD2448]();
}

uint64_t sub_23DCE1C10()
{
  return MEMORY[0x24BDD2450]();
}

uint64_t sub_23DCE1C1C()
{
  return MEMORY[0x24BDD2458]();
}

uint64_t sub_23DCE1C28()
{
  return MEMORY[0x24BDD2460]();
}

uint64_t sub_23DCE1C34()
{
  return MEMORY[0x24BDD2468]();
}

uint64_t sub_23DCE1C40()
{
  return MEMORY[0x24BDD2470]();
}

uint64_t sub_23DCE1C4C()
{
  return MEMORY[0x24BDD2478]();
}

uint64_t sub_23DCE1C58()
{
  return MEMORY[0x24BDD2480]();
}

uint64_t sub_23DCE1C64()
{
  return MEMORY[0x24BDD2488]();
}

uint64_t sub_23DCE1C70()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23DCE1C7C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23DCE1C88()
{
  return MEMORY[0x24BEE02C0]();
}

uint64_t sub_23DCE1C94()
{
  return MEMORY[0x24BDD24D0]();
}

uint64_t sub_23DCE1CA0()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23DCE1CAC()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23DCE1CB8()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23DCE1CC4()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_23DCE1CD0()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23DCE1CDC()
{
  return MEMORY[0x24BDD24D8]();
}

uint64_t sub_23DCE1CE8()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_23DCE1CF4()
{
  return MEMORY[0x24BEE08D0]();
}

uint64_t sub_23DCE1D00()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23DCE1D0C()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23DCE1D18()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23DCE1D24()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23DCE1D30()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23DCE1D3C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23DCE1D48()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23DCE1D54()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23DCE1D60()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23DCE1D6C()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23DCE1D78()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_23DCE1D84()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_23DCE1D90()
{
  return MEMORY[0x24BEE0EF0]();
}

uint64_t sub_23DCE1D9C()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_23DCE1DA8()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23DCE1DB4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23DCE1DC0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23DCE1DCC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23DCE1DD8()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23DCE1DE4()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23DCE1DF0()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23DCE1DFC()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23DCE1E08()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_23DCE1E14()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23DCE1E20()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23DCE1E2C()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23DCE1E38()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23DCE1E44()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23DCE1E50()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23DCE1E5C()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23DCE1E68()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23DCE1E74()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23DCE1E80()
{
  return MEMORY[0x24BEE1900]();
}

uint64_t sub_23DCE1E8C()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_23DCE1E98()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23DCE1EA4()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23DCE1EB0()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_23DCE1EBC()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_23DCE1EC8()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23DCE1ED4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23DCE1EE0()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23DCE1EEC()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23DCE1EF8()
{
  return MEMORY[0x24BDD2530]();
}

uint64_t sub_23DCE1F04()
{
  return MEMORY[0x24BE407F8]();
}

uint64_t sub_23DCE1F10()
{
  return MEMORY[0x24BE40800]();
}

uint64_t sub_23DCE1F1C()
{
  return MEMORY[0x24BE406A8]();
}

uint64_t sub_23DCE1F28()
{
  return MEMORY[0x24BE406E0]();
}

uint64_t sub_23DCE1F34()
{
  return MEMORY[0x24BE40708]();
}

uint64_t sub_23DCE1F40()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23DCE1F4C()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23DCE1F58()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23DCE1F64()
{
  return MEMORY[0x24BE40710]();
}

uint64_t sub_23DCE1F70()
{
  return MEMORY[0x24BDD2700]();
}

uint64_t sub_23DCE1F7C()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_23DCE1F88()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23DCE1F94()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23DCE1FA0()
{
  return MEMORY[0x24BE40718]();
}

uint64_t sub_23DCE1FAC()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23DCE1FB8()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23DCE1FC4()
{
  return MEMORY[0x24BDD0490]();
}

uint64_t sub_23DCE1FD0()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23DCE1FDC()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23DCE1FE8()
{
  return MEMORY[0x24BEE1F68]();
}

uint64_t sub_23DCE1FF4()
{
  return MEMORY[0x24BEE1F70]();
}

uint64_t sub_23DCE2000()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23DCE200C()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_23DCE2018()
{
  return MEMORY[0x24BEE2218]();
}

uint64_t sub_23DCE2024()
{
  return MEMORY[0x24BEE2220]();
}

uint64_t sub_23DCE2030()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23DCE203C()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23DCE2048()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23DCE2054()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23DCE2060()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23DCE206C()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_23DCE2078()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_23DCE2084()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23DCE2090()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23DCE209C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23DCE20A8()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23DCE20B4()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23DCE20C0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23DCE20CC()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_23DCE20D8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23DCE20E4()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_23DCE20F0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23DCE20FC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23DCE2108()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23DCE2114()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23DCE2120()
{
  return MEMORY[0x24BEE2678]();
}

uint64_t sub_23DCE212C()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_23DCE2138()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23DCE2144()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23DCE2150()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23DCE215C()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23DCE2168()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23DCE2174()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23DCE2180()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t sub_23DCE218C()
{
  return MEMORY[0x24BEE2BD8]();
}

uint64_t sub_23DCE2198()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23DCE21A4()
{
  return MEMORY[0x24BEE2C00]();
}

uint64_t sub_23DCE21B0()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23DCE21BC()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23DCE21C8()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_23DCE21D4()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23DCE21E0()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23DCE21EC()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23DCE21F8()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23DCE2204()
{
  return MEMORY[0x24BEE30A0]();
}

uint64_t sub_23DCE2210()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23DCE221C()
{
  return MEMORY[0x24BEE30D0]();
}

uint64_t sub_23DCE2228()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23DCE2234()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23DCE2240()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23DCE224C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23DCE2258()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_23DCE2264()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23DCE2270()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23DCE227C()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_23DCE2288()
{
  return MEMORY[0x24BEE3D38]();
}

uint64_t sub_23DCE2294()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23DCE22A0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23DCE22AC()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23DCE22B8()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23DCE22C4()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23DCE22D0()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23DCE22DC()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23DCE22E8()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23DCE22F4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23DCE2300()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_23DCE230C()
{
  return MEMORY[0x24BEE4420]();
}

uint64_t sub_23DCE2318()
{
  return MEMORY[0x24BEE4900]();
}

uint64_t sub_23DCE2324()
{
  return MEMORY[0x24BEE4948]();
}

uint64_t sub_23DCE2330()
{
  return MEMORY[0x24BEE4950]();
}

uint64_t sub_23DCE233C()
{
  return MEMORY[0x24BEE4960]();
}

uint64_t sub_23DCE2348()
{
  return MEMORY[0x24BEE4A18]();
}

uint64_t sub_23DCE2354()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t HDActivityCacheEntityPredicateForCachesInDateComponentsRange()
{
  return MEMORY[0x24BE40810]();
}

uint64_t HDAnalyticsCountOfSleepDaysWithStandHoursPriorToDate()
{
  return MEMORY[0x24BE40818]();
}

uint64_t HDDataEntityPredicateForObjectsFromAppleWatchSources()
{
  return MEMORY[0x24BE40848]();
}

uint64_t HDDataEntityPredicateForSourceEntitySet()
{
  return MEMORY[0x24BE40858]();
}

uint64_t HDIsUnitTesting()
{
  return MEMORY[0x24BE40D40]();
}

uint64_t HDSampleEntityPredicateForDataType()
{
  return MEMORY[0x24BE40910]();
}

uint64_t HDSampleEntityPredicateForDateInterval()
{
  return MEMORY[0x24BE40920]();
}

uint64_t HDSampleEntityPredicateForStartDate()
{
  return MEMORY[0x24BE40930]();
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x24BDD27F0]();
}

uint64_t HKCreateSerialDispatchQueue()
{
  return MEMORY[0x24BDD2B20]();
}

uint64_t HKDiagnosticStringFromUUID()
{
  return MEMORY[0x24BDD2B88]();
}

uint64_t HKIsFitnessTrackingEnabled()
{
  return MEMORY[0x24BDD2F88]();
}

uint64_t HKRollingBaselineConfigurationForQuantityType()
{
  return MEMORY[0x24BDD3700]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _HKBackgroundAndSedentaryPrivateHeartRateContexts()
{
  return MEMORY[0x24BDD4298]();
}

uint64_t _HKCategoryValueSleepAnalysisIsAsleep()
{
  return MEMORY[0x24BDD42C8]();
}

uint64_t _HKStatisticsOptionBaselineRelativeQuantities()
{
  return MEMORY[0x24BDD44D0]();
}

uint64_t _HKStatisticsOptionPercentile()
{
  return MEMORY[0x24BDD44D8]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x24BDAC7D8](a1);
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

long double cos(long double __x)
{
  long double result;

  MEMORY[0x24BDADBE0](__x);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAF688](__x, __y);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x24BEE4D20]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D28]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x24BEE4D58]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

