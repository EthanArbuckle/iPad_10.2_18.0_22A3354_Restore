void sub_21090E8BC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7D7F8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21090E930(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t v6;

  v1 = *(uint64_t **)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *v1;
  v3 = (std::__shared_weak_count *)v1[1];
  if (!v3)
    return v2;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldxr(p_shared_owners);
  while (__stxr(v5 + 1, p_shared_owners));
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return v2;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return v2;
}

unint64_t sub_21090E9C0(uint64_t a1, size_t planeIndex)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int WidthOfPlane;
  uint64_t v17;
  __CVBuffer *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 197, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    WidthOfPlane = CVPixelBufferGetWidthOfPlane(v11, planeIndex);
    v17 = *(_QWORD *)(a1 + 8);
    if (v17)
      goto LABEL_17;
LABEL_24:
    v18 = 0;
    return WidthOfPlane | ((unint64_t)CVPixelBufferGetHeightOfPlane(v18, planeIndex) << 32);
  }
  WidthOfPlane = CVPixelBufferGetWidthOfPlane(0, planeIndex);
  v17 = *(_QWORD *)(a1 + 8);
  if (!v17)
    goto LABEL_24;
LABEL_17:
  v18 = *(__CVBuffer **)v17;
  v19 = *(std::__shared_weak_count **)(v17 + 8);
  if (v19)
  {
    v20 = (unint64_t *)&v19->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  return WidthOfPlane | ((unint64_t)CVPixelBufferGetHeightOfPlane(v18, planeIndex) << 32);
}

size_t sub_21090EB64(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 203, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetWidth(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetWidth(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetWidth(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetWidth(v9);
}

size_t sub_21090EC9C(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 213, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetHeight(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetHeight(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetHeight(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetHeight(v9);
}

size_t sub_21090EDD4(uint64_t a1)
{
  uint64_t *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __CVBuffer *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = (std::__shared_weak_count *)v2[1];
    if (!v3)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
      if (v4)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v4)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 223, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v8 = *(_QWORD *)(a1 + 8);
  if (!v8)
    return CVPixelBufferGetBytesPerRow(0);
  v9 = *(__CVBuffer **)v8;
  v10 = *(std::__shared_weak_count **)(v8 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRow(v9);
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (v13)
    return CVPixelBufferGetBytesPerRow(v9);
  ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
  std::__shared_weak_count::__release_weak(v10);
  return CVPixelBufferGetBytesPerRow(v9);
}

size_t sub_21090EF0C(uint64_t a1, size_t planeIndex)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 228, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (!v10)
    return CVPixelBufferGetBytesPerRowOfPlane(0, planeIndex);
  v11 = *(__CVBuffer **)v10;
  v12 = *(std::__shared_weak_count **)(v10 + 8);
  if (!v12)
    return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
  v13 = (unint64_t *)&v12->__shared_owners_;
  do
    v14 = __ldxr(v13);
  while (__stxr(v14 + 1, v13));
  do
    v15 = __ldaxr(v13);
  while (__stlxr(v15 - 1, v13));
  if (v15)
    return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
  ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
  std::__shared_weak_count::__release_weak(v12);
  return CVPixelBufferGetBytesPerRowOfPlane(v11, planeIndex);
}

uint64_t sub_21090F054(uint64_t a1, unsigned int a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t **v16;
  uint64_t *v17;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 244, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_18;
  }
LABEL_9:
  v15 = *(_QWORD *)(a1 + 8);
  v10 = v15;
  v11 = atomic_load((unint64_t *)(v15 + 104));
  if (v11 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v15 + 104), &v16, (void (__cdecl *)(void *))sub_2109116C4);
  }
  if (a2 >= (unint64_t)((uint64_t)(*(_QWORD *)(v10 + 120) - *(_QWORD *)(v10 + 112)) >> 3)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 245, (uint64_t)"idx < p_->GetCachedBaseAddress().size()", 39, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_18:
    abort();
  }
  v12 = *(_QWORD *)(a1 + 8);
  v15 = v12;
  v13 = atomic_load((unint64_t *)(v12 + 104));
  if (v13 != -1)
  {
    v17 = &v15;
    v16 = &v17;
    std::__call_once((std::once_flag::_State_type *)(v12 + 104), &v16, (void (__cdecl *)(void *))sub_2109116C4);
  }
  return *(_QWORD *)(*(_QWORD *)(v12 + 112) + 8 * a2);
}

_QWORD *sub_21090F1D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __CVBuffer *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::__shared_weak_count_vtbl *IOSurface;

  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/CoreVideo/src/PixelBufferRef.cpp", 256, (uint64_t)"IsValid()", 9, (uint64_t)&unk_210A03CC7, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = *(__CVBuffer **)v10;
    v12 = *(std::__shared_weak_count **)(v10 + 8);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
      do
        v15 = __ldaxr(v13);
      while (__stlxr(v15 - 1, v13));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    v11 = 0;
  }
  IOSurface = (std::__shared_weak_count_vtbl *)CVPixelBufferGetIOSurface(v11);
  return sub_2109DDDD4(a2, IOSurface, 1, 0);
}

uint64_t sub_21090F304@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(uint64_t **)(result + 8);
  if (v2)
  {
    v4 = *v2;
    v3 = v2[1];
    *a2 = v4;
    a2[1] = v3;
    if (v3)
    {
      v5 = (unint64_t *)(v3 + 8);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void sub_21090F338(unsigned int *a1@<X0>, unsigned int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  size_t v12;
  size_t v13;
  OSType v14;
  CVReturn v15;
  CVReturn v16;
  std::__shared_weak_count *size;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::string::__raw *v24;
  int data;
  size_t v26;
  void **p_dst;
  const void **v28;
  std::string::size_type v29;
  std::string::size_type v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  std::string *v34;
  uint64_t v35;
  uint64_t v36;
  std::string::size_type v37;
  void **v38;
  size_t v39;
  uint64_t v40;
  uint64_t *v41;
  CVReturn v42;
  BOOL v43;
  uint64_t *v44;
  void **v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  CVReturn v52;
  std::string::size_type v53;
  std::__shared_weak_count *v54;
  unint64_t *p_shared_owners;
  unint64_t v56;
  void *__p[2];
  unsigned __int8 v58;
  CVReturn v59;
  std::string v60;
  uint64_t v61;
  std::__shared_weak_count *v62;
  CVPixelBufferRef pixelBufferOut;
  OSType v64;
  char v65;
  _QWORD v66[2];
  char v67;
  char v68;
  int v69;
  char v70;
  std::string *__dst;
  size_t v72;
  unint64_t v73;
  std::string *v74;
  std::string v75;
  const char *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v64 = a2;
  pixelBufferOut = 0;
  sub_21090CEA0(&v61, a4);
  sub_21090CD5C((uint64_t)&v61, v66);
  if (v67)
  {
    sub_2109E2ABC((uint64_t)v66, &v75);
    if ((_BYTE)v76)
    {
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v75.__r_.__value_.__l.__data_);
    }
    else
    {
      sub_2109E2B80((uint64_t)v66, a3);
    }
    if (v67)
    {
      v9 = (std::__shared_weak_count *)v66[1];
      if (v66[1])
      {
        v10 = (unint64_t *)(v66[1] + 8);
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
  }
  v12 = *a1;
  v13 = a1[1];
  v14 = v64;
  sub_21090D0F4(&v75, (uint64_t)&v61);
  v15 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], v12, v13, v14, (CFDictionaryRef)v75.__r_.__value_.__l.__data_, &pixelBufferOut);
  v16 = v15;
  size = (std::__shared_weak_count *)v75.__r_.__value_.__l.__size_;
  if (!v75.__r_.__value_.__l.__size_)
    goto LABEL_16;
  v18 = (unint64_t *)(v75.__r_.__value_.__l.__size_ + 8);
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_16:
    if (v15)
      goto LABEL_17;
LABEL_27:
    sub_21090E2F0(&v75, (std::__shared_weak_count_vtbl *)pixelBufferOut, 0, 0);
    *(_QWORD *)a5 = &off_24CA7D7F8;
    *(_OWORD *)(a5 + 8) = *(_OWORD *)&v75.__r_.__value_.__r.__words[1];
    *(_BYTE *)(a5 + 32) = 1;
    goto LABEL_87;
  }
  ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
  std::__shared_weak_count::__release_weak(size);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v68 = 15;
  strcpy((char *)v66, "MakePixelBuffer");
  v69 = 1;
  v75.__r_.__value_.__r.__words[0] = (std::string::size_type)v66;
  v75.__r_.__value_.__l.__size_ = (std::string::size_type)" for format ";
  v75.__r_.__value_.__r.__words[2] = (std::string::size_type)v66;
  v76 = " for format ";
  v77 = " for format ";
  __dst = &v75;
  sub_210911CA8((uint64_t *)&__dst, (uint64_t)v66);
  sub_2108FCB84((uint64_t)&v70, (uint64_t)v66, &v64);
  v75.__r_.__value_.__r.__words[0] = (std::string::size_type)v66;
  v75.__r_.__value_.__l.__size_ = (std::string::size_type)" and size ";
  v75.__r_.__value_.__r.__words[2] = (std::string::size_type)v66;
  v76 = " and size ";
  v77 = " and size ";
  if (v69 == -1)
    sub_2108B9060();
  __dst = &v75;
  ((void (*)(std::string **, _QWORD *))off_24CA7D918[v69])(&__dst, v66);
  sub_210911A04((uint64_t)&v65, (uint64_t)v66, a1);
  v75.__r_.__value_.__r.__words[0] = (std::string::size_type)v66;
  v75.__r_.__value_.__l.__size_ = (std::string::size_type)", used attributes:\n";
  v75.__r_.__value_.__r.__words[2] = (std::string::size_type)v66;
  v76 = ", used attributes:\n";
  v77 = ", used attributes:\n";
  if (v69 == -1)
    sub_2108B9060();
  __dst = &v75;
  ((void (*)(std::string **, _QWORD *))off_24CA7D930[v69])(&__dst, v66);
  v20 = operator new();
  *(_QWORD *)(v20 + 272) = 0;
  *(_OWORD *)(v20 + 240) = 0u;
  *(_OWORD *)(v20 + 256) = 0u;
  *(_OWORD *)(v20 + 208) = 0u;
  *(_OWORD *)(v20 + 224) = 0u;
  *(_OWORD *)(v20 + 176) = 0u;
  *(_OWORD *)(v20 + 192) = 0u;
  *(_OWORD *)(v20 + 144) = 0u;
  *(_OWORD *)(v20 + 160) = 0u;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 128) = 0u;
  *(_OWORD *)(v20 + 80) = 0u;
  *(_OWORD *)(v20 + 96) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)v20 = 0u;
  sub_2108B18D0(v20);
  v74 = (std::string *)v20;
  sub_21090D0F4(&v75, a4);
  sub_2109E5D3C((_QWORD *)(v20 + 16), v75.__r_.__value_.__l.__data_);
  v21 = (std::__shared_weak_count *)v75.__r_.__value_.__l.__size_;
  if (v75.__r_.__value_.__l.__size_)
  {
    v22 = (unint64_t *)(v75.__r_.__value_.__l.__size_ + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
      v24 = (std::string::__raw *)v74;
      data = (int)v74[5].__r_.__value_.__l.__data_;
      if ((data & 0x10) == 0)
        goto LABEL_24;
LABEL_30:
      v29 = v24[4].__words[2];
      v30 = v24[3].__words[0];
      if (v29 < v30)
      {
        v24[4].__words[2] = v30;
        v29 = v30;
      }
      v28 = (const void **)&v24[2].__words[2];
      goto LABEL_33;
    }
  }
  v24 = (std::string::__raw *)v74;
  data = (int)v74[5].__r_.__value_.__l.__data_;
  if ((data & 0x10) != 0)
    goto LABEL_30;
LABEL_24:
  if ((data & 8) == 0)
  {
    v26 = 0;
    HIBYTE(v73) = 0;
    p_dst = (void **)&__dst;
    goto LABEL_41;
  }
  v28 = (const void **)&v24[1].__words[2];
  v29 = v24[2].__words[1];
LABEL_33:
  v31 = *v28;
  v26 = v29 - (_QWORD)*v28;
  if (v26 > 0x7FFFFFFFFFFFFFF7)
    sub_2108A4B7C();
  if (v26 >= 0x17)
  {
    v32 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v26 | 7) != 0x17)
      v32 = v26 | 7;
    v33 = v32 + 1;
    p_dst = (void **)operator new(v32 + 1);
    v72 = v26;
    v73 = v33 | 0x8000000000000000;
    __dst = (std::string *)p_dst;
    goto LABEL_40;
  }
  HIBYTE(v73) = v29 - *(_BYTE *)v28;
  p_dst = (void **)&__dst;
  if (v26)
LABEL_40:
    memmove(p_dst, v31, v26);
LABEL_41:
  *((_BYTE *)p_dst + v26) = 0;
  v34 = v74;
  if (v74)
  {
    v35 = MEMORY[0x24BEDB7F0];
    v36 = *MEMORY[0x24BEDB7F0];
    v74->__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7F0];
    v37 = *(_QWORD *)(v35 + 72);
    *(std::string::size_type *)((char *)v34->__r_.__value_.__r.__words + *(_QWORD *)(v36 - 24)) = *(_QWORD *)(v35 + 64);
    v34[1].__r_.__value_.__r.__words[0] = MEMORY[0x24BEDB848] + 16;
    v34->__r_.__value_.__r.__words[2] = v37;
    if (v34[4].__r_.__value_.__s.__data_[15] < 0)
      operator delete((void *)v34[3].__r_.__value_.__r.__words[2]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BCC66C](&v34[5].__r_.__value_.__r.__words[1]);
    MEMORY[0x212BCC6FC](v34, 0x10B2C40EED050F3);
  }
  v75.__r_.__value_.__r.__words[0] = (std::string::size_type)v66;
  v75.__r_.__value_.__l.__size_ = (std::string::size_type)&__dst;
  v75.__r_.__value_.__r.__words[2] = (std::string::size_type)v66;
  v76 = (const char *)&__dst;
  v77 = (const char *)&__dst;
  if (v69 == -1)
    sub_2108B9060();
  v74 = &v75;
  ((void (*)(std::string **, _QWORD *))off_24CA7D868[v69])(&v74, v66);
  if (SHIBYTE(v73) < 0)
    operator delete(__dst);
  if (v69 == -1)
    sub_2108B9060();
  v75.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
  ((void (*)(void **__return_ptr, std::string *, _QWORD *))off_24CA7D880[v69])(__p, &v75, v66);
  if (v69 != -1)
    ((void (*)(std::string *, _QWORD *))off_24CA7D850[v69])(&v75, v66);
  if ((v58 & 0x80u) == 0)
    v38 = __p;
  else
    v38 = (void **)__p[0];
  if ((v58 & 0x80u) == 0)
    v39 = v58;
  else
    v39 = (size_t)__p[1];
  v59 = v16;
  sub_2109104B0();
  v40 = qword_254A75038;
  if (!qword_254A75038)
    goto LABEL_67;
  v41 = &qword_254A75038;
  do
  {
    v42 = *(_DWORD *)(v40 + 32);
    v43 = v42 < v16;
    if (v42 >= v16)
      v44 = (uint64_t *)v40;
    else
      v44 = (uint64_t *)(v40 + 8);
    if (!v43)
      v41 = (uint64_t *)v40;
    v40 = *v44;
  }
  while (*v44);
  if (v41 == &qword_254A75038 || *((_DWORD *)v41 + 8) > v16)
  {
LABEL_67:
    sub_2109104B0();
    v69 = 0;
    if (v39 > 0x7FFFFFFFFFFFFFF7)
      sub_2108A4B7C();
    if (v39 >= 0x17)
    {
      v46 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v39 | 7) != 0x17)
        v46 = v39 | 7;
      v47 = v46 + 1;
      v45 = (void **)operator new(v46 + 1);
      v72 = v39;
      v73 = v47 | 0x8000000000000000;
      __dst = (std::string *)v45;
    }
    else
    {
      HIBYTE(v73) = v39;
      v45 = (void **)&__dst;
      if (!v39)
        goto LABEL_75;
    }
    memcpy(v45, v38, v39);
LABEL_75:
    *((_BYTE *)v45 + v39) = 0;
    v75.__r_.__value_.__r.__words[0] = (std::string::size_type)v66;
    v75.__r_.__value_.__l.__size_ = (std::string::size_type)&__dst;
    v75.__r_.__value_.__r.__words[2] = (std::string::size_type)v66;
    v76 = (const char *)&__dst;
    v77 = (const char *)&__dst;
    if (v69 == -1)
      sub_2108B9060();
    v74 = &v75;
    ((void (*)(std::string **, _QWORD *))off_24CA7D868[v69])(&v74, v66);
    if (SHIBYTE(v73) < 0)
      operator delete(__dst);
    if (v69 == -1)
      sub_2108B9060();
    v75.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
    ((void (*)(std::string *__return_ptr, std::string *, _QWORD *))off_24CA7D880[v69])(&v60, &v75, v66);
    if (v69 != -1)
      ((void (*)(std::string *, _QWORD *))off_24CA7D850[v69])(&v75, v66);
    goto LABEL_85;
  }
  sub_2109104B0();
  v75.__r_.__value_.__r.__words[0] = (std::string::size_type)v38;
  v75.__r_.__value_.__l.__size_ = v39;
  v75.__r_.__value_.__r.__words[2] = (std::string::size_type)": ";
  v76 = (const char *)2;
  v50 = v41[5];
  v49 = v41 + 5;
  v48 = (const char *)v50;
  v51 = *((unsigned __int8 *)v49 + 23);
  if ((v51 & 0x80u) != 0)
    v51 = v49[1];
  else
    v48 = (const char *)v49;
  v77 = v48;
  v78 = v51;
  sub_2108BBA08((uint64_t)&v75, (uint64_t)&v79, 0, 0, &v60);
LABEL_85:
  v52 = v59;
  v53 = v60.__r_.__value_.__l.__size_;
  *(_QWORD *)(a5 + 8) = v60.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a5 + 16) = v53;
  *(_QWORD *)(a5 + 23) = *(std::string::size_type *)((char *)&v60.__r_.__value_.__r.__words[1] + 7);
  LOBYTE(v53) = *((_BYTE *)&v60.__r_.__value_.__s + 23);
  memset(&v60, 0, sizeof(v60));
  *(_DWORD *)a5 = v52;
  *(_WORD *)(a5 + 31) = v53;
  if ((char)v58 < 0)
    operator delete(__p[0]);
LABEL_87:
  v54 = v62;
  if (v62)
  {
    p_shared_owners = (unint64_t *)&v62->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
    }
  }
}

void sub_21090FB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_2108ABE3C((uint64_t)va1);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21090FB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  sub_2108A894C(v8 - 144);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21090FBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,unsigned int a26,int a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  uint64_t v37;

  if (a26 != -1)
    (*(void (**)(char *, char *))(v37 + 8 * a26))(&a31, &a23);
  if (a14 < 0)
  {
    operator delete(__p);
    sub_2108A894C((uint64_t)&a19);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x21090FC50);
}

void sub_21090FC0C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_2108ABF6C(exception_object);
}

void sub_21090FC28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
    operator delete(__p);
  JUMPOUT(0x21090FC48);
}

void sub_21090FC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_2108B9008((uint64_t)va1);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21090FC84(int a1)
{
  uint64_t result;
  unsigned __int16 v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  result = 1;
  if (a1 <= 1278226487)
  {
    if (a1 > 875704421)
    {
      if (a1 > 875836533)
      {
        if (a1 == 875836534)
          return result;
        if (a1 != 1094862674)
        {
          v7 = 1111970369;
          goto LABEL_37;
        }
        return 4;
      }
      if (a1 == 875704422 || a1 == 875704438)
        return result;
      v4 = 875836518;
LABEL_41:
      if (a1 != v4)
        goto LABEL_43;
      return result;
    }
    if (a1 > 843264055)
    {
      v6 = a1 - 843264056;
      if (v6 <= 0x30 && ((1 << v6) & 0x1400000000001) != 0)
        return 2;
      goto LABEL_43;
    }
    if (a1 != 24)
    {
      if (a1 == 32)
        return 4;
      if (a1 != 842285639)
        goto LABEL_43;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return result;
        v4 = 1751411059;
      }
      else
      {
        if (a1 == 1717855600)
          return result;
        v4 = 1717856627;
      }
      goto LABEL_41;
    }
    if (a1 == 1647392359)
      return result;
    if (a1 != 1647589490)
    {
      v7 = 1647719521;
      goto LABEL_37;
    }
    return 3;
  }
  if (a1 <= 1278226741)
  {
    v5 = a1 - 1278226488;
    if (v5 > 0x30 || ((1 << v5) & 0x1400000000001) == 0)
      goto LABEL_43;
    return result;
  }
  if (a1 > 1380410944)
  {
    if (a1 != 1380410945)
    {
      v3 = 26689;
      goto LABEL_36;
    }
    return 4;
  }
  if (a1 != 1278226742)
  {
    v3 = 16961;
LABEL_36:
    v7 = v3 | 0x52470000;
LABEL_37:
    if (a1 == v7)
      return 4;
LABEL_43:
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 420, (uint64_t)&unk_210A03CC7, 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_2109EDDB4);
    abort();
  }
  return result;
}

uint64_t sub_21090FEF4(const char *a1, int *a2)
{
  size_t v4;
  size_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  int v12;
  size_t v13;
  void **v14;
  unint64_t v15;
  unint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD v25[2];
  unint64_t v26;
  int v27;
  void *__dst[2];
  unint64_t v29;
  _QWORD *v30;
  void *__p[2];
  unsigned __int8 v32;
  _QWORD v33[3];
  int v34;
  std::string v35;
  std::string *v36;
  std::string *v37;
  _QWORD *v38;
  std::string *v39;
  std::string *v40;
  std::string **v41;

  v27 = -1;
  v4 = strlen(a1);
  if (v4 > 0x7FFFFFFFFFFFFFF7)
    sub_2108A4B7C();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    v25[1] = v5;
    v26 = v8 | 0x8000000000000000;
    v25[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v26) = v4;
  v6 = v25;
  if (v4)
LABEL_8:
    memcpy(v6, a1, v5);
  *((_BYTE *)v6 + v5) = 0;
  v27 = 1;
  v9 = operator new();
  *(_QWORD *)(v9 + 272) = 0;
  *(_OWORD *)(v9 + 240) = 0u;
  *(_OWORD *)(v9 + 256) = 0u;
  *(_OWORD *)(v9 + 208) = 0u;
  *(_OWORD *)(v9 + 224) = 0u;
  *(_OWORD *)(v9 + 176) = 0u;
  *(_OWORD *)(v9 + 192) = 0u;
  *(_OWORD *)(v9 + 144) = 0u;
  *(_OWORD *)(v9 + 160) = 0u;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 128) = 0u;
  *(_OWORD *)(v9 + 80) = 0u;
  *(_OWORD *)(v9 + 96) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)v9 = 0u;
  sub_2108B18D0(v9);
  v30 = (_QWORD *)v9;
  v34 = 0;
  sub_21090BD70(v33, "{");
  std::to_string(&v35, *a2);
  v36 = (std::string *)v33;
  v37 = &v35;
  v38 = v33;
  v39 = &v35;
  v40 = &v35;
  if (v34 == -1)
    sub_2108B9060();
  v41 = &v36;
  ((void (*)(std::string ***, _QWORD *))off_24CA7D868[v34])(&v41, v33);
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v35.__r_.__value_.__l.__data_);
  v36 = (std::string *)v33;
  v37 = (std::string *)",";
  v38 = v33;
  v39 = (std::string *)",";
  v40 = (std::string *)",";
  if (v34 == -1)
    goto LABEL_52;
  v35.__r_.__value_.__r.__words[0] = (std::string::size_type)&v36;
  ((void (*)(std::string *, _QWORD *))off_24CA7D8E8[v34])(&v35, v33);
  v36 = (std::string *)v33;
  v37 = (std::string *)(a2 + 2);
  v38 = v33;
  v39 = (std::string *)(a2 + 2);
  v40 = (std::string *)(a2 + 2);
  if (v34 == -1
    || (v35.__r_.__value_.__r.__words[0] = (std::string::size_type)&v36,
        ((void (*)(std::string *, _QWORD *))off_24CA7D900[v34])(&v35, v33),
        v36 = (std::string *)v33,
        v37 = (std::string *)"}",
        v38 = v33,
        v39 = (std::string *)"}",
        v40 = (std::string *)"}",
        v34 == -1))
  {
LABEL_52:
    sub_2108B9060();
  }
  v35.__r_.__value_.__r.__words[0] = (std::string::size_type)&v36;
  ((void (*)(std::string *, _QWORD *))off_24CA7D8E8[v34])(&v35, v33);
  if (v34 == -1)
    sub_2108B9060();
  v36 = &v35;
  ((void (*)(void **__return_ptr, std::string **, _QWORD *))off_24CA7D880[v34])(__p, &v36, v33);
  if (v34 != -1)
    ((void (*)(std::string **, _QWORD *))off_24CA7D850[v34])(&v36, v33);
  if ((v32 & 0x80u) == 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  if ((v32 & 0x80u) == 0)
    v11 = v32;
  else
    v11 = (uint64_t)__p[1];
  sub_2108CEF94((_QWORD *)(v9 + 16), (uint64_t)v10, v11);
  if (((char)v32 & 0x80000000) == 0)
  {
    v12 = *(_DWORD *)(v9 + 120);
    if ((v12 & 0x10) == 0)
      goto LABEL_26;
LABEL_29:
    v15 = *(_QWORD *)(v9 + 112);
    v16 = *(_QWORD *)(v9 + 72);
    if (v15 < v16)
    {
      *(_QWORD *)(v9 + 112) = v16;
      v15 = v16;
    }
    v17 = *(const void **)(v9 + 64);
    v13 = v15 - (_QWORD)v17;
    if (v15 - (unint64_t)v17 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_51;
    goto LABEL_32;
  }
  operator delete(__p[0]);
  v12 = *(_DWORD *)(v9 + 120);
  if ((v12 & 0x10) != 0)
    goto LABEL_29;
LABEL_26:
  if ((v12 & 8) == 0)
  {
    v13 = 0;
    HIBYTE(v29) = 0;
    v14 = __dst;
    goto LABEL_39;
  }
  v17 = *(const void **)(v9 + 40);
  v13 = *(_QWORD *)(v9 + 56) - (_QWORD)v17;
  if (v13 > 0x7FFFFFFFFFFFFFF7)
LABEL_51:
    sub_2108A4B7C();
LABEL_32:
  if (v13 >= 0x17)
  {
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17)
      v18 = v13 | 7;
    v19 = v18 + 1;
    v14 = (void **)operator new(v18 + 1);
    __dst[1] = (void *)v13;
    v29 = v19 | 0x8000000000000000;
    __dst[0] = v14;
    goto LABEL_38;
  }
  HIBYTE(v29) = v13;
  v14 = __dst;
  if (v13)
LABEL_38:
    memmove(v14, v17, v13);
LABEL_39:
  *((_BYTE *)v14 + v13) = 0;
  v20 = v30;
  if (v30)
  {
    v21 = MEMORY[0x24BEDB7F0];
    v22 = *MEMORY[0x24BEDB7F0];
    *v30 = *MEMORY[0x24BEDB7F0];
    v23 = *(_QWORD *)(v21 + 72);
    *(_QWORD *)((char *)v20 + *(_QWORD *)(v22 - 24)) = *(_QWORD *)(v21 + 64);
    v20[3] = MEMORY[0x24BEDB848] + 16;
    v20[2] = v23;
    if (*((char *)v20 + 111) < 0)
      operator delete((void *)v20[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BCC66C](v20 + 16);
    MEMORY[0x212BCC6FC](v20, 0x10B2C40EED050F3);
  }
  v36 = (std::string *)v25;
  v37 = (std::string *)__dst;
  v38 = v25;
  v39 = (std::string *)__dst;
  v40 = (std::string *)__dst;
  if (v27 == -1)
    sub_2108B9060();
  v33[0] = &v36;
  ((void (*)(_QWORD *, _QWORD *))off_24CA7D868[v27])(v33, v25);
  if (SHIBYTE(v29) < 0)
    operator delete(__dst[0]);
  if (v27 == -1)
    sub_2108B9060();
  v36 = (std::string *)v33;
  result = ((uint64_t (*)(std::string **, _QWORD *))off_24CA7D880[v27])(&v36, v25);
  if (v27 != -1)
    return ((uint64_t (*)(std::string **, _QWORD *))off_24CA7D850[v27])(&v36, v25);
  return result;
}

void sub_2109103E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a25 < 0)
    operator delete(__p);
  sub_2109ED024(&a19);
  sub_2108B9008((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2109104B0()
{
  unsigned __int8 v0;
  uint64_t v1;
  void *v2;
  __int128 v3;
  int v4;
  void *v5;
  __int128 v6;
  int v7;
  void *v8;
  __int128 v9;
  int v10;
  void *v11;
  __int128 v12;
  int v13;
  void *v14[3];
  int v15;
  void *v16;
  __int128 v17;
  int v18;
  void *v19;
  __int128 v20;
  int v21;
  void *v22;
  __int128 v23;
  int v24;
  void *v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char v29;
  int v30;
  void *v31;
  __int128 v32;
  uint64_t v33;
  void *v34;
  char v35;
  int v36;
  void *v37;
  __int128 v38;
  int v39;
  void *v40;
  __int128 v41;
  int v42;
  void *v43;
  __int128 v44;
  int v45;
  void *v46;
  __int128 v47;
  int v48;
  void *v49;
  __int128 v50;
  int v51;
  void *__p;
  __int128 v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A75028);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A75028))
  {
    LODWORD(v1) = 0;
    v2 = operator new(0x48uLL);
    v3 = xmmword_210A11B70;
    strcpy((char *)v2, "kCVReturnSuccess: Function executed successfully without errors.");
    v4 = -6660;
    v5 = operator new(0x38uLL);
    v6 = xmmword_210A11B80;
    strcpy((char *)v5, "kCVReturnError: Function executed with unknown error.");
    v7 = -6661;
    v8 = operator new(0x78uLL);
    v9 = xmmword_210A11B90;
    strcpy((char *)v8, "kCVReturnInvalidArgument: At least one of the arguments passed in is not valid. Either out of range or the wrong type.");
    v10 = -6662;
    v11 = operator new(0x78uLL);
    v12 = xmmword_210A11BA0;
    strcpy((char *)v11, "kCVReturnAllocationFailed: The allocation for a buffer or buffer pool failed. Most likely because of lack of resources.");
    v13 = -6663;
    HIBYTE(v14[2]) = 20;
    strcpy((char *)v14, "kCVReturnUnsupported");
    v15 = -6670;
    v16 = operator new(0x58uLL);
    v17 = xmmword_210A11BB0;
    strcpy((char *)v16, "kCVReturnInvalidDisplay: A CVDisplayLink cannot be created for the given DisplayRef.");
    v18 = -6671;
    v19 = operator new(0x58uLL);
    v20 = xmmword_210A11BC0;
    strcpy((char *)v19, "kCVReturnDisplayLinkAlreadyRunning: The CVDisplayLink is already started and running.");
    v21 = -6672;
    v22 = operator new(0x48uLL);
    v23 = xmmword_210A11BD0;
    strcpy((char *)v22, "kCVReturnDisplayLinkNotRunning: The CVDisplayLink has not been started.");
    v24 = -6673;
    v25 = operator new(0x48uLL);
    v26 = xmmword_210A11BE0;
    strcpy((char *)v25, "kCVReturnDisplayLinkCallbacksNotSet: The output callback is not set.");
    sub_210910ED0((uint64_t)&v27, -6680, "kCVReturnInvalidPixelFormat: The requested pixelformat is not supported for the CVBuffer type.");
    v30 = -6681;
    v31 = operator new(0x68uLL);
    v32 = xmmword_210A11BF0;
    strcpy((char *)v31, "kCVReturnInvalidSize: The requested size (most likely too big) is not supported for the CVBuffer type.");
    sub_210910ED0((uint64_t)&v33, -6682, "kCVReturnInvalidPixelBufferAttributes: A CVBuffer cannot be created with the given attributes.");
    v36 = -6683;
    v37 = operator new(0xA0uLL);
    v38 = xmmword_210A11C00;
    strcpy((char *)v37, "kCVReturnPixelBufferNotOpenGLCompatible: The Buffer cannot be used with OpenGL as either its size, pixelformat or attributes are not supported by OpenGL.");
    v39 = -6684;
    v40 = operator new(0x98uLL);
    v41 = xmmword_210A11C10;
    strcpy((char *)v40, "kCVReturnPixelBufferNotMetalCompatible: The Buffer cannot be used with Metal as either its size, pixelformat or attributes are not supported by Metal.");
    v42 = -6689;
    v43 = operator new(0xB8uLL);
    v44 = xmmword_210A11C20;
    strcpy((char *)v43, "kCVReturnWouldExceedAllocationThreshold: The allocation request failed because it would have exceeded a specified allocation threshold (see kCVPixelBufferPoolAllocationThresholdKey).");
    v45 = -6690;
    v46 = operator new(0xA0uLL);
    v47 = xmmword_210A11C30;
    strcpy((char *)v46, "kCVReturnPoolAllocationFailed: The allocation for the buffer pool failed. Most likely because of lack of resources. Check if your parameters are in range.");
    v48 = -6691;
    v49 = operator new(0x60uLL);
    v50 = xmmword_210A11C40;
    strcpy((char *)v49, "kCVReturnInvalidPoolAttributes: A CVBufferPool cannot be created with the given attributes.");
    v51 = -6692;
    __p = operator new(0x88uLL);
    v53 = xmmword_210A11C50;
    strcpy((char *)__p, "kCVReturnRetry: a scan hasn't completely traversed the CVBufferPool due to a concurrent operation. The client can retry the scan.");
    sub_210910F84(&v1, 18);
    if (SHIBYTE(v53) < 0)
    {
      operator delete(__p);
      if ((SHIBYTE(v50) & 0x80000000) == 0)
      {
LABEL_6:
        if ((SHIBYTE(v47) & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_25;
      }
    }
    else if ((SHIBYTE(v50) & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v49);
    if ((SHIBYTE(v47) & 0x80000000) == 0)
    {
LABEL_7:
      if ((SHIBYTE(v44) & 0x80000000) == 0)
        goto LABEL_8;
      goto LABEL_26;
    }
LABEL_25:
    operator delete(v46);
    if ((SHIBYTE(v44) & 0x80000000) == 0)
    {
LABEL_8:
      if ((SHIBYTE(v41) & 0x80000000) == 0)
        goto LABEL_9;
      goto LABEL_27;
    }
LABEL_26:
    operator delete(v43);
    if ((SHIBYTE(v41) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v38) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
LABEL_27:
    operator delete(v40);
    if ((SHIBYTE(v38) & 0x80000000) == 0)
    {
LABEL_10:
      if ((v35 & 0x80000000) == 0)
        goto LABEL_11;
      goto LABEL_29;
    }
LABEL_28:
    operator delete(v37);
    if ((v35 & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(v32) & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_30;
    }
LABEL_29:
    operator delete(v34);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
LABEL_12:
      if ((v29 & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_31;
    }
LABEL_30:
    operator delete(v31);
    if ((v29 & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v26) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_32;
    }
LABEL_31:
    operator delete(v28);
    if ((SHIBYTE(v26) & 0x80000000) == 0)
    {
LABEL_14:
      if ((SHIBYTE(v23) & 0x80000000) == 0)
        goto LABEL_15;
      goto LABEL_33;
    }
LABEL_32:
    operator delete(v25);
    if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
LABEL_15:
      if ((SHIBYTE(v20) & 0x80000000) == 0)
        goto LABEL_16;
      goto LABEL_34;
    }
LABEL_33:
    operator delete(v22);
    if ((SHIBYTE(v20) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v17) & 0x80000000) == 0)
        goto LABEL_17;
      goto LABEL_35;
    }
LABEL_34:
    operator delete(v19);
    if ((SHIBYTE(v17) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
        goto LABEL_18;
      goto LABEL_36;
    }
LABEL_35:
    operator delete(v16);
    if ((SHIBYTE(v14[2]) & 0x80000000) == 0)
    {
LABEL_18:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_19;
      goto LABEL_37;
    }
LABEL_36:
    operator delete(v14[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v9) & 0x80000000) == 0)
        goto LABEL_20;
      goto LABEL_38;
    }
LABEL_37:
    operator delete(v11);
    if ((SHIBYTE(v9) & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v6) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_39;
    }
LABEL_38:
    operator delete(v8);
    if ((SHIBYTE(v6) & 0x80000000) == 0)
    {
LABEL_21:
      if ((SHIBYTE(v3) & 0x80000000) == 0)
      {
LABEL_22:
        __cxa_atexit((void (*)(void *))sub_210911168, &qword_254A75030, &dword_21089F000);
        __cxa_guard_release(&qword_254A75028);
        return;
      }
LABEL_40:
      operator delete(v2);
      goto LABEL_22;
    }
LABEL_39:
    operator delete(v5);
    if ((SHIBYTE(v3) & 0x80000000) == 0)
      goto LABEL_22;
    goto LABEL_40;
  }
}

void sub_210910C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a67;
  char a72;
  void *a73;
  char a74;
  void *a75;
  char a76;
  void *a77;
  char a78;
  void *a79;
  char a80;
  void *a81;
  char a82;
  void *a83;
  char a84;
  void *a85;

  if (SLOBYTE(STACK[0x247]) < 0)
  {
    operator delete((void *)STACK[0x230]);
    if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
    {
LABEL_3:
      if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete((void *)STACK[0x210]);
  if ((SLOBYTE(STACK[0x207]) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a84 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a85);
  if ((a84 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a82 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a83);
  if ((a82 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a80 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a81);
  if ((a80 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a78 & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  operator delete(a79);
  if ((a78 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a76 & 0x80000000) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  operator delete(a77);
  if ((a76 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a74 & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_27:
  operator delete(a75);
  if ((a74 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a72 & 0x80000000) == 0)
      goto LABEL_11;
    goto LABEL_29;
  }
LABEL_28:
  operator delete(a73);
  if ((a72 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a65 & 0x80000000) == 0)
      goto LABEL_12;
    goto LABEL_30;
  }
LABEL_29:
  operator delete(a67);
  if ((a65 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a58 & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_31;
  }
LABEL_30:
  operator delete(a60);
  if ((a58 & 0x80000000) == 0)
  {
LABEL_13:
    if ((a51 & 0x80000000) == 0)
      goto LABEL_14;
    goto LABEL_32;
  }
LABEL_31:
  operator delete(a53);
  if ((a51 & 0x80000000) == 0)
  {
LABEL_14:
    if ((a44 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_33;
  }
LABEL_32:
  operator delete(a46);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_15:
    if ((a37 & 0x80000000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_33:
  operator delete(a39);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_16:
    if ((a30 & 0x80000000) == 0)
      goto LABEL_17;
    goto LABEL_35;
  }
LABEL_34:
  operator delete(a32);
  if ((a30 & 0x80000000) == 0)
  {
LABEL_17:
    if ((a23 & 0x80000000) == 0)
      goto LABEL_18;
    goto LABEL_36;
  }
LABEL_35:
  operator delete(a25);
  if ((a23 & 0x80000000) == 0)
  {
LABEL_18:
    if ((a16 & 0x80000000) == 0)
    {
LABEL_38:
      __cxa_guard_abort(&qword_254A75028);
      _Unwind_Resume(a1);
    }
LABEL_37:
    operator delete(a11);
    __cxa_guard_abort(&qword_254A75028);
    _Unwind_Resume(a1);
  }
LABEL_36:
  operator delete(a18);
  if ((a16 & 0x80000000) == 0)
    goto LABEL_38;
  goto LABEL_37;
}

uint64_t sub_210910ED0(uint64_t a1, int a2, char *__s)
{
  void *v5;
  size_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = a2;
  v5 = (void *)(a1 + 8);
  v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v7 = v6;
  if (v6 >= 0x17)
  {
    v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17)
      v8 = v6 | 7;
    v9 = v8 + 1;
    v5 = operator new(v8 + 1);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v9 | 0x8000000000000000;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    *(_BYTE *)(a1 + 31) = v6;
    if (!v6)
      goto LABEL_9;
  }
  memmove(v5, __s, v7);
LABEL_9:
  *((_BYTE *)v5 + v7) = 0;
  return a1;
}

uint64_t *sub_210910F84(uint64_t *result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  char *v13;
  _BYTE *v14;
  __int128 v15;

  qword_254A75040 = 0;
  qword_254A75038 = 0;
  qword_254A75030 = (uint64_t)&qword_254A75038;
  if (a2)
  {
    v2 = result;
    v3 = 0;
    v4 = &result[4 * a2];
    v5 = *(_DWORD *)result;
LABEL_6:
    v7 = &qword_254A75038;
LABEL_10:
    if (v3)
    {
      v10 = v7 + 1;
      if (v7[1])
        goto LABEL_27;
    }
    else
    {
LABEL_20:
      v10 = &qword_254A75038;
      v7 = &qword_254A75038;
    }
LABEL_21:
    v13 = (char *)operator new(0x40uLL);
    *((_DWORD *)v13 + 8) = v5;
    v14 = v13 + 40;
    if (*((char *)v2 + 31) < 0)
    {
      sub_2108B314C(v14, (void *)v2[1], v2[2]);
    }
    else
    {
      v15 = *(_OWORD *)(v2 + 1);
      *((_QWORD *)v13 + 7) = v2[3];
      *(_OWORD *)v14 = v15;
    }
    *(_QWORD *)v13 = 0;
    *((_QWORD *)v13 + 1) = 0;
    *((_QWORD *)v13 + 2) = v7;
    *v10 = (uint64_t)v13;
    if (*(_QWORD *)qword_254A75030)
    {
      qword_254A75030 = *(_QWORD *)qword_254A75030;
      v13 = (char *)*v10;
    }
    result = sub_210911190((uint64_t *)qword_254A75038, (uint64_t *)v13);
    ++qword_254A75040;
LABEL_27:
    while (1)
    {
      v2 += 4;
      if (v2 == v4)
        break;
      v3 = qword_254A75038;
      v5 = *(_DWORD *)v2;
      if ((uint64_t *)qword_254A75030 == &qword_254A75038)
        goto LABEL_6;
      v6 = qword_254A75038;
      if (qword_254A75038)
      {
        do
        {
          v7 = (uint64_t *)v6;
          v6 = *(_QWORD *)(v6 + 8);
        }
        while (v6);
      }
      else
      {
        v8 = &qword_254A75038;
        do
        {
          v7 = (uint64_t *)v8[2];
          v9 = *v7 == (_QWORD)v8;
          v8 = v7;
        }
        while (v9);
      }
      if (*((_DWORD *)v7 + 8) < v5)
        goto LABEL_10;
      if (!qword_254A75038)
        goto LABEL_20;
      v11 = qword_254A75038;
      while (1)
      {
        while (1)
        {
          v7 = (uint64_t *)v11;
          v12 = *(_DWORD *)(v11 + 32);
          if (v12 <= v5)
            break;
          v11 = *v7;
          v10 = v7;
          if (!*v7)
            goto LABEL_21;
        }
        if (v12 >= v5)
          break;
        v11 = v7[1];
        if (!v11)
        {
          v10 = v7 + 1;
          goto LABEL_21;
        }
      }
    }
  }
  return result;
}

void sub_210911130(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  sub_210911344((char *)qword_254A75038);
  _Unwind_Resume(a1);
}

void sub_210911154(_Unwind_Exception *a1)
{
  char *v1;

  sub_210911344(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_210911168(uint64_t a1)
{
  sub_210911344(*(char **)(a1 + 8));
  return a1;
}

uint64_t *sub_210911190(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 == result)
    return result;
  while (1)
  {
    v2 = a2[2];
    if (*(_BYTE *)(v2 + 24))
      return result;
    v3 = *(uint64_t **)(v2 + 16);
    v4 = *v3;
    if (*v3 != v2)
      break;
    v7 = v3[1];
    if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
    {
      if (*(uint64_t **)v2 == a2)
      {
        *(_BYTE *)(v2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v11 = *(_QWORD *)(v2 + 8);
        *v3 = v11;
        if (v11)
          goto LABEL_15;
      }
      else
      {
        v9 = *(uint64_t **)(v2 + 8);
        v10 = *v9;
        *(_QWORD *)(v2 + 8) = *v9;
        if (v10)
        {
          *(_QWORD *)(v10 + 16) = v2;
          v3 = *(uint64_t **)(v2 + 16);
        }
        v9[2] = (uint64_t)v3;
        *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8 * (**(_QWORD **)(v2 + 16) != v2)) = v9;
        *v9 = v2;
        *(_QWORD *)(v2 + 16) = v9;
        v3 = (uint64_t *)v9[2];
        v2 = *v3;
        *((_BYTE *)v9 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v11 = *(_QWORD *)(v2 + 8);
        *v3 = v11;
        if (v11)
LABEL_15:
          *(_QWORD *)(v11 + 16) = v3;
      }
      *(_QWORD *)(v2 + 16) = v3[2];
      *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
      *(_QWORD *)(v2 + 8) = v3;
      v3[2] = v2;
      return result;
    }
LABEL_3:
    *(_BYTE *)(v2 + 24) = 1;
    a2 = v3;
    *((_BYTE *)v3 + 24) = v3 == result;
    *v5 = 1;
    if (v3 == result)
      return result;
  }
  if (v4)
  {
    v6 = *(unsigned __int8 *)(v4 + 24);
    v5 = (_BYTE *)(v4 + 24);
    if (!v6)
      goto LABEL_3;
  }
  if (*(uint64_t **)v2 == a2)
  {
    v12 = a2[1];
    *(_QWORD *)v2 = v12;
    if (v12)
    {
      *(_QWORD *)(v12 + 16) = v2;
      v3 = *(uint64_t **)(v2 + 16);
    }
    a2[2] = (uint64_t)v3;
    *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8 * (**(_QWORD **)(v2 + 16) != v2)) = a2;
    a2[1] = v2;
    *(_QWORD *)(v2 + 16) = a2;
    v3 = (uint64_t *)a2[2];
  }
  else
  {
    a2 = (uint64_t *)a2[2];
  }
  *((_BYTE *)a2 + 24) = 1;
  *((_BYTE *)v3 + 24) = 0;
  v13 = (uint64_t *)v3[1];
  v14 = *v13;
  v3[1] = *v13;
  if (v14)
    *(_QWORD *)(v14 + 16) = v3;
  v13[2] = v3[2];
  *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v13;
  *v13 = (uint64_t)v3;
  v3[2] = (uint64_t)v13;
  return result;
}

void sub_210911344(char *a1)
{
  if (a1)
  {
    sub_210911344(*(_QWORD *)a1);
    sub_210911344(*((_QWORD *)a1 + 1));
    if (a1[63] < 0)
      operator delete(*((void **)a1 + 5));
    operator delete(a1);
  }
}

uint64_t sub_21091139C(int a1)
{
  int v1;
  int v2;
  int v4;

  if (a1 <= 1278226533)
  {
    if (a1 > 875704421)
    {
      if (a1 <= 875836533)
      {
        if (a1 == 875704422 || a1 == 875704438)
          return 0;
        v1 = 875836518;
      }
      else
      {
        if (a1 <= 1111970368)
        {
          if (a1 != 875836534)
          {
            v1 = 1094862674;
            goto LABEL_38;
          }
          return 0;
        }
        if (a1 == 1111970369)
          return 0;
        v1 = 1278226488;
      }
LABEL_38:
      if (a1 == v1)
        return 0;
LABEL_44:
      sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/PixelFormat/include/Kit/PixelFormat/Properties.h", 303, (uint64_t)&unk_210A03CC7, 0, (uint64_t)"not yet implemented", 19, (void (*)(void **))sub_2109EDDB4);
      abort();
    }
    if (a1 <= 843264055)
    {
      if (a1 == 24 || a1 == 32)
        return 0;
      v1 = 842285639;
      goto LABEL_38;
    }
    if (a1 == 843264056)
      return 0;
    if (a1 != 843264102)
    {
      v4 = 843264104;
      goto LABEL_42;
    }
    return 3;
  }
  if (a1 > 1647392358)
  {
    if (a1 > 1717855599)
    {
      if (a1 > 1751410031)
      {
        if (a1 == 1751410032)
          return 2;
        v4 = 1751411059;
        goto LABEL_42;
      }
      if (a1 != 1717855600 && a1 != 1717856627)
        goto LABEL_44;
      return 3;
    }
    if (a1 == 1647392359 || a1 == 1647589490)
      return 1;
    v2 = 1647719521;
LABEL_27:
    if (a1 != v2)
      goto LABEL_44;
    return 1;
  }
  if (a1 <= 1380401728)
  {
    if (a1 == 1278226534)
      return 3;
    if (a1 == 1278226536)
      return 2;
    v2 = 1278226742;
    goto LABEL_27;
  }
  if (a1 == 1380401729)
    return 0;
  if (a1 == 1380410945)
    return 3;
  v4 = 1380411457;
LABEL_42:
  if (a1 != v4)
    goto LABEL_44;
  return 2;
}

void sub_210911610(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210911634(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_210911654(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP11__IOSurfaceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

double sub_2109116C4(CVPixelBufferRef ****a1)
{
  CVPixelBufferRef **v1;
  CVPixelBufferRef *v2;
  IOSurfaceRef IOSurface;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __CVBuffer *v7;
  double result;
  std::__shared_weak_count *v9;
  __CVBuffer *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  size_t PlaneCount;
  unint64_t v14;
  char *v15;
  size_t v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  __CVBuffer *v20;
  IOSurfaceRef v21;
  std::__shared_weak_count *v22;

  v1 = **a1;
  v2 = *v1;
  IOSurface = CVPixelBufferGetIOSurface(**v1);
  sub_21090E264(&v21, IOSurface);
  if (v21)
  {
    sub_2109DDCE4(&v21, &v19);
    goto LABEL_3;
  }
  v10 = *v2;
  v9 = (std::__shared_weak_count *)v2[1];
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  if (!v10)
  {
    v19 = 0uLL;
    v20 = 0;
    if (!v9)
      goto LABEL_3;
    goto LABEL_24;
  }
  PlaneCount = CVPixelBufferGetPlaneCount(v10);
  if (PlaneCount <= 1)
    v14 = 1;
  else
    v14 = PlaneCount;
  sub_210912CA0((uint64_t)v2);
  v19 = 0uLL;
  v20 = 0;
  if (v14 >> 61)
    sub_2108B327C();
  v15 = (char *)operator new(8 * v14);
  *(_QWORD *)&v19 = v15;
  v20 = (__CVBuffer *)&v15[8 * v14];
  bzero(v15, 8 * v14);
  v16 = 0;
  *((_QWORD *)&v19 + 1) = v20;
  do
  {
    *(_QWORD *)&v15[8 * v16] = CVPixelBufferGetBaseAddressOfPlane(v10, v16);
    ++v16;
  }
  while (v14 != v16);
  sub_210912E7C((uint64_t)v2);
  if (v9)
  {
LABEL_24:
    v17 = (unint64_t *)&v9->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
LABEL_3:
  v4 = v22;
  if (v22)
  {
    v5 = (unint64_t *)&v22->__shared_owners_;
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = v2[14];
  if (v7)
  {
    v2[15] = v7;
    operator delete(v7);
  }
  result = *(double *)&v19;
  *((_OWORD *)v2 + 7) = v19;
  v2[16] = v20;
  return result;
}

void sub_210911878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  std::__shared_weak_count *v14;
  void *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  operator delete(v15);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (a14)
  {
    v19 = (unint64_t *)&a14->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_210911924(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA7D8A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210911934(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA7D8A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210911964(uint64_t a1)
{
  void *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(_QWORD *)(a1 + 144) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 64));
  v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_2109119E0(std::exception *a1)
{
  std::exception::~exception(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210911A04(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_2108B18D0(v5);
  v21[0] = v5;
  sub_2109124B0((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_2108A4B7C();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BCC66C](v14 + 128);
    MEMORY[0x212BCC6FC](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_2108B9060();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24CA7D868[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_210911C54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BCC6FC](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_210911C78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_210911C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2109ED024((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210911CA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  const char *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  _BYTE v15[15];
  char v16;
  void *__p[2];
  unint64_t v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
  v4 = *(void **)a2;
  v19[0] = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v14 = v4;
  *(_QWORD *)v15 = v19[0];
  *(_QWORD *)&v15[7] = *(_QWORD *)((char *)v19 + 7);
  v16 = v5;
  memset(v19, 0, 15);
  v6 = __p;
  v7 = *(const char **)(v2 + 24);
  v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v6 = operator new(v11 + 1);
    __p[1] = v9;
    v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((_BYTE *)v9 + (_QWORD)v6) = 0;
    v10 = *(unsigned int *)(v3 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v10 = *(unsigned int *)(v3 + 24);
  if ((_DWORD)v10 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24CA7D850[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_2108B9228((_QWORD *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0)
    goto LABEL_15;
}

void sub_210911E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_210911EA4(_DWORD ***a1)
{
  return sub_210911EC0(**a1, (char *)(*a1)[1]);
}

void sub_210911EB0(uint64_t a1, uint64_t a2)
{
  sub_210911FB0((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_210911EC0(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24CA7D850[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_210911FB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24CA7D850[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_2108B9228((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_210912164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_2109121A8(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_2109122A0((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_210912298(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2109122A0(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2108B327C();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_2108B2B1C();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_21091249C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2108B3680((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2109124B0(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_21090BB98((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_2108B9060();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24CA7D880[v10])(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24CA7D850[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_2108CEF94(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_210912598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2109125B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B9008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2109125C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B9008((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2109125DC(_DWORD ***a1)
{
  return sub_2109125F8(**a1, (char *)(*a1)[1]);
}

void sub_2109125E8(uint64_t a1, uint64_t a2)
{
  sub_2109126E8((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_2109125F8(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24CA7D850[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2109126E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24CA7D850[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_2108B9228((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_21091289C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_2109128E0(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_2109129D8((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2109129D0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2109129D8(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2108B327C();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_2108B2B1C();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_210912BD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2108B3680((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_210912BEC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210912C10(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_210912C30(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP10__CVBufferEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_210912CA0(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) + 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_210912D68(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210912D7C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210912D90(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) + 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_210912E54(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210912E68(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210912E7C(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v5;
  CVPixelBufferLockFlags v6;
  int v7;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 24) - 1;
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      if (v3 && !*(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 1;
    }
    else
    {
      if (v4 != 2 || *(_QWORD *)(a1 + 32))
        goto LABEL_5;
      v5 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v5);
    *(_DWORD *)(a1 + 16) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v6 = 0;
    v7 = 2;
LABEL_16:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = v7;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v6 = 1;
    v7 = 1;
    goto LABEL_16;
  }
LABEL_5:
  std::mutex::unlock(v2);
}

void sub_210912F44(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210912F58(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210912F6C(uint64_t a1)
{
  std::mutex *v2;
  uint64_t v3;
  int v4;
  CVPixelBufferLockFlags v6;
  CVPixelBufferLockFlags v7;
  int v8;

  v2 = (std::mutex *)(a1 + 40);
  std::mutex::lock((std::mutex *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32) - 1;
  *(_QWORD *)(a1 + 32) = v3;
  v4 = *(_DWORD *)(a1 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      v6 = 1;
      if (*(_QWORD *)(a1 + 24) && !v3)
        goto LABEL_7;
    }
    else
    {
      if (v4 != 2 || v3 != 0)
        goto LABEL_7;
      v6 = 0;
    }
    CVPixelBufferUnlockBaseAddress(*(CVPixelBufferRef *)a1, v6);
    *(_DWORD *)(a1 + 16) = 0;
    v3 = *(_QWORD *)(a1 + 32);
  }
  if (v3)
  {
    v7 = 0;
    v8 = 2;
LABEL_18:
    CVPixelBufferLockBaseAddress(*(CVPixelBufferRef *)a1, v7);
    *(_DWORD *)(a1 + 16) = v8;
    std::mutex::unlock(v2);
    return;
  }
  if (*(_QWORD *)(a1 + 24))
  {
    v7 = 1;
    v8 = 1;
    goto LABEL_18;
  }
LABEL_7:
  std::mutex::unlock(v2);
}

void sub_210913030(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210913044(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_210913058(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t (**v43)();
  uint64_t v44;
  std::__shared_weak_count *v45;
  _QWORD v46[3];
  _QWORD v47[3];

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v46[0] = &off_24CA84E68;
  v46[1] = v10;
  v46[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_21094C3A0((uint64_t)v46);
  v46[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v43 = &off_24CA84E68;
    v44 = v24;
    v45 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v43 = &off_24CA84E68;
  v44 = v21;
  v45 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_2109DD8B8((uint64_t)&v43, 0);
  v26 = v45;
  v47[0] = &off_24CA84E68;
  v47[1] = v44;
  v47[2] = v45;
  if (v45)
  {
    v27 = (unint64_t *)&v45->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_2109DED7C((uint64_t)v47);
  v30 = sub_2109DEFFC((uint64_t)v47);
  v31 = sub_2109DF27C((uint64_t)v47);
  v32 = sub_2109DF4FC((uint64_t)v47);
  v47[0] = &off_24CA84E68;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v43 = &off_24CA84E68;
  v38 = v45;
  if (v45)
  {
    v39 = (unint64_t *)&v45->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *a1 = v25;
  a1[1] = v42;
  a1[2] = v37;
  if (v32 * HIDWORD(v42) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_52:
    abort();
  }
}

void sub_210913360(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210913374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210913388(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va1);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2109133A4(uint64_t a1, unsigned int *a2)
{
  BOOL v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  void (**v16)(_QWORD);
  __int128 v17;
  char v18;
  char *v19;
  __int128 v20;

  *(_QWORD *)a1 = off_24CA7DA30;
  *(_DWORD *)(a1 + 8) = 0;
  if (*a2)
    v4 = a2[1] == 0;
  else
    v4 = 1;
  if (v4)
  {
    v5 = 0;
    v6 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  else
  {
    v19 = (char *)operator new(0x78uLL);
    v20 = xmmword_210A11EB0;
    strcpy(v19, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(a2, 1278226488, (uint64_t *)&v19, (uint64_t)&v16);
    if (!v18)
    {
      v14 = sub_21096575C((uint64_t)&v16);
      sub_21096579C(v14);
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    v6 = v17;
    v17 = 0uLL;
    (*v16)(&v16);
    if (SHIBYTE(v20) < 0)
      operator delete(v19);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  if (!a2[1])
  {
LABEL_21:
    v10 = *(_OWORD *)a2;
    goto LABEL_22;
  }
  v19 = (char *)&off_24CA84E68;
  *(_QWORD *)&v20 = v6;
  *((_QWORD *)&v20 + 1) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  sub_210913058((uint64_t *)&v16, (uint64_t)&v19);
  v10 = v17;
  v19 = (char *)&off_24CA84E68;
  if (v5)
  {
    v11 = (unint64_t *)&v5->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      v15 = v10;
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v10 = v15;
    }
  }
LABEL_22:
  *v7 = v10;
  return a1;
}

void sub_210913584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v4 - 49) < 0)
    operator delete(*(void **)(v4 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_2109135CC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1);
  *(_DWORD *)(a1 + 24) = -1;
  return a1;
}

void sub_210913624(uint64_t a1, size_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46[3];
  uint64_t (**v47)();
  uint64_t *v48;
  std::__shared_weak_count *v49;
  size_t v50[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v20;
    v49 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v47 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v29;
    v49 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v47 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v48 = v11;
  v49 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v47 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v48);
  }
LABEL_50:
  sub_210913A9C(v46, a1);
  v50[0] = a2;
  v50[1] = (size_t)v46;
  sub_2108FE614(v50);
  if (!v48)
    goto LABEL_58;
  v39 = *v48;
  v38 = (std::__shared_weak_count *)v48[1];
  if (!v38)
    goto LABEL_56;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (v42)
  {
LABEL_56:
    if (!v39)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v39)
LABEL_57:
    sub_2109E44E0((uint64_t)v48);
LABEL_58:
  v47 = &off_24CA84E68;
  v43 = v49;
  if (v49)
  {
    v44 = (unint64_t *)&v49->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_2109139F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210913A14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_210913A9C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_210913058(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_210913C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210913CB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  __int128 v49;
  std::__shared_weak_count *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24CA84E68;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_21094C3A0((uint64_t)v48);
  v48[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v45 = &off_24CA84E68;
    v46 = v24;
    v47 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24CA84E68;
  v46 = v21;
  v47 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_2109DD8B8((uint64_t)&v45, 0);
  v26 = v47;
  *(_QWORD *)&v49 = &off_24CA84E68;
  *((_QWORD *)&v49 + 1) = v46;
  v50 = v47;
  if (v47)
  {
    v27 = (unint64_t *)&v47->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_2109DED7C((uint64_t)&v49);
  v30 = sub_2109DEFFC((uint64_t)&v49);
  v31 = sub_2109DF27C((uint64_t)&v49);
  v32 = sub_2109DF4FC((uint64_t)&v49);
  *(_QWORD *)&v49 = &off_24CA84E68;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v45 = &off_24CA84E68;
  v38 = v47;
  if (v47)
  {
    v39 = (unint64_t *)&v47->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *(_QWORD *)((char *)&v49 + 4) = v42;
  LODWORD(v49) = 2;
  v43 = v49;
  LODWORD(v49) = 1;
  *(_QWORD *)((char *)&v49 + 4) = v37;
  v44 = v49;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v43;
  *(_DWORD *)(a1 + 16) = HIDWORD(v42);
  *(_QWORD *)(a1 + 20) = v44;
  *(_DWORD *)(a1 + 28) = v32;
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v37;
  if (HIDWORD(v42) * v32 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_52:
    abort();
  }
}

void sub_210914034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_210914048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091405C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210914078(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7DAC0;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 843264056, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_210913CB8((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_210914268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_2109142B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_210914340(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210913CB8(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210914568(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210914584(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  __int128 v49;
  std::__shared_weak_count *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24CA84E68;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_21094C3A0((uint64_t)v48);
  v48[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v45 = &off_24CA84E68;
    v46 = v24;
    v47 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24CA84E68;
  v46 = v21;
  v47 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_2109DD8B8((uint64_t)&v45, 0);
  v26 = v47;
  *(_QWORD *)&v49 = &off_24CA84E68;
  *((_QWORD *)&v49 + 1) = v46;
  v50 = v47;
  if (v47)
  {
    v27 = (unint64_t *)&v47->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_2109DED7C((uint64_t)&v49);
  v30 = sub_2109DEFFC((uint64_t)&v49);
  v31 = sub_2109DF27C((uint64_t)&v49);
  v32 = sub_2109DF4FC((uint64_t)&v49);
  *(_QWORD *)&v49 = &off_24CA84E68;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v45 = &off_24CA84E68;
  v38 = v47;
  if (v47)
  {
    v39 = (unint64_t *)&v47->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *(_QWORD *)((char *)&v49 + 4) = v42;
  LODWORD(v49) = 3;
  v43 = v49;
  LODWORD(v49) = 1;
  *(_QWORD *)((char *)&v49 + 4) = v37;
  v44 = v49;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v43;
  *(_DWORD *)(a1 + 16) = HIDWORD(v42);
  *(_QWORD *)(a1 + 20) = v44;
  *(_DWORD *)(a1 + 28) = v32;
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v37;
  if (HIDWORD(v42) * v32 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_52:
    abort();
  }
}

void sub_210914900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_210914914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210914928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210914944(uint64_t a1, int a2, __int128 *a3)
{
  unsigned int *v5;
  BOOL v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __int128 v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  void (**v23)(_QWORD);
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  char *v28;
  __int128 v29;

  *(_QWORD *)a1 = off_24CA7DB50;
  *(_DWORD *)(a1 + 8) = 0;
  v5 = (unsigned int *)a3 + 6;
  if (*((_DWORD *)a3 + 6))
    v6 = *((_DWORD *)a3 + 7) == 0;
  else
    v6 = 1;
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!*((_DWORD *)a3 + 6))
      goto LABEL_30;
  }
  else
  {
    if (a2 == 21)
      v10 = 24;
    else
      v10 = 0;
    if (a2 == 17)
      v11 = 71;
    else
      v11 = v10;
    if (a2 == 17)
      v12 = 842285568;
    else
      v12 = 0;
    v13 = v12 | v11;
    v28 = (char *)operator new(0x78uLL);
    v29 = xmmword_210A11EB0;
    strcpy(v28, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v5, v13, (uint64_t *)&v28, (uint64_t)&v23);
    if (!v27)
    {
      v22 = sub_21096575C((uint64_t)&v23);
      sub_21096579C(v22);
    }
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
    v8 = v24;
    v24 = 0uLL;
    (*v23)(&v23);
    if (SHIBYTE(v29) < 0)
      operator delete(v28);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v7;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!*((_DWORD *)a3 + 6))
      goto LABEL_30;
  }
  if (!*((_DWORD *)a3 + 7))
  {
LABEL_30:
    v19 = *a3;
    v20 = a3[1];
    *(_QWORD *)(v9 + 32) = *((_QWORD *)a3 + 4);
    *(_OWORD *)v9 = v19;
    *(_OWORD *)(v9 + 16) = v20;
    return a1;
  }
  v28 = (char *)&off_24CA84E68;
  *(_QWORD *)&v29 = v8;
  *((_QWORD *)&v29 + 1) = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
  }
  sub_210914584((uint64_t)&v23, (uint64_t)&v28);
  v16 = v25;
  *(_OWORD *)v9 = v24;
  *(_OWORD *)(v9 + 16) = v16;
  *(_QWORD *)(v9 + 32) = v26;
  v28 = (char *)&off_24CA84E68;
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void sub_210914B5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_210914BA4(uint64_t a1, _BYTE *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  _BYTE *v40;
  int v41;
  uint64_t v42;
  int v43;
  _BYTE *v44;
  _BYTE *v45;
  int v46;
  std::__shared_weak_count *v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  _BYTE *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t (**v62)();
  uint64_t *v63;
  std::__shared_weak_count *v64;
  _QWORD v65[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_82;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v63 = v20;
    v64 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v62 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v63 = v29;
    v64 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v62 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_82:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v63 = v11;
  v64 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v62 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v63);
  }
LABEL_50:
  sub_210915AA0((uint64_t)&v55, a1);
  v65[0] = &v55;
  v65[1] = a2;
  if (v59 == 1)
  {
    sub_2108FE924(v65);
  }
  else if (v56 && v57 && v58)
  {
    v38 = v57 - 1;
    v39 = v60;
    v40 = v55;
    v41 = v58 - 1;
    if (v58 != 1)
    {
      v42 = v61;
      if (v57 == 1)
      {
        do
        {
          *v40 = *a2;
          v40[1] = *a2;
          v40[2] = *a2;
          v40 += v42;
          --v41;
        }
        while (v41);
      }
      else
      {
        v43 = 0;
        v44 = v55 + 2;
        do
        {
          v45 = v44;
          v46 = v38;
          do
          {
            *(v45 - 2) = *a2;
            *(v45 - 1) = *a2;
            *v45 = *a2;
            v45 += v39;
            --v46;
          }
          while (v46);
          *(v45 - 2) = *a2;
          *(v45 - 1) = *a2;
          *v45 = *a2;
          v40 += v42;
          ++v43;
          v44 += v42;
        }
        while (v43 != v41);
      }
    }
    for (; v38; --v38)
    {
      *v40 = *a2;
      v40[1] = *a2;
      v40[2] = *a2;
      v40 += v39;
    }
    *v40 = *a2;
    v40[1] = *a2;
    v40[2] = *a2;
  }
  if (!v63)
    goto LABEL_74;
  v48 = *v63;
  v47 = (std::__shared_weak_count *)v63[1];
  if (!v47)
    goto LABEL_72;
  v49 = (unint64_t *)&v47->__shared_owners_;
  do
    v50 = __ldxr(v49);
  while (__stxr(v50 + 1, v49));
  do
    v51 = __ldaxr(v49);
  while (__stlxr(v51 - 1, v49));
  if (v51)
  {
LABEL_72:
    if (!v48)
      goto LABEL_74;
    goto LABEL_73;
  }
  ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
  std::__shared_weak_count::__release_weak(v47);
  if (v48)
LABEL_73:
    sub_2109E44E0((uint64_t)v63);
LABEL_74:
  v62 = &off_24CA84E68;
  v52 = v64;
  if (v64)
  {
    v53 = (unint64_t *)&v64->__shared_owners_;
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
}

void sub_210915084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210915098(uint64_t a1, _DWORD *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _BYTE v47[20];
  int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  size_t v52[2];
  char v53;
  char *v54;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_75;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v20;
    v51 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v49 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v29;
    v51 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v49 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_75:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v11;
  v51 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v49 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v50);
  }
LABEL_50:
  sub_210915AA0((uint64_t)v47, a1);
  v52[0] = (size_t)a2;
  v52[1] = (size_t)v47;
  if (a2[5] == 1 && v48 == 1)
  {
    sub_2108FEBEC(v52);
  }
  else
  {
    v53 = 0;
    if (a2[2] && a2[3] && a2[4])
    {
      v54 = &v53;
      sub_2108FF2D0((uint64_t)&v54, (uint64_t)a2, (uint64_t)v47);
    }
  }
  if (!v50)
    goto LABEL_67;
  v40 = *v50;
  v39 = (std::__shared_weak_count *)v50[1];
  if (!v39)
    goto LABEL_65;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_65:
    if (!v40)
      goto LABEL_67;
    goto LABEL_66;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_66:
    sub_2109E44E0((uint64_t)v50);
LABEL_67:
  v49 = &off_24CA84E68;
  v44 = v51;
  if (v51)
  {
    v45 = (unint64_t *)&v51->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_2109154B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2109154CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v56;
  std::__shared_weak_count *v57;
  uint64_t (**v58)();
  _QWORD *v59;
  std::__shared_weak_count *v60;
  _QWORD v61[3];
  _QWORD v62[3];

  v62[2] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7DB50;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24CA84E68;
  *(_DWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 24) = v4;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v14 = *(_QWORD **)(a2 + 8);
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  v56 = v14;
  v57 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_23;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (v19)
        goto LABEL_25;
    }
    else
    {
LABEL_23:
      if (v19)
        goto LABEL_25;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_25:
  v61[0] = &off_24CA84E68;
  v61[1] = v56;
  v61[2] = v57;
  if (v57)
  {
    v23 = (unint64_t *)&v57->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  sub_21094C3A0((uint64_t)v61);
  v61[0] = &off_24CA84E68;
  if (!v57)
    goto LABEL_32;
  v25 = (unint64_t *)&v57->__shared_owners_;
  do
    v26 = __ldaxr(v25);
  while (__stlxr(v26 - 1, v25));
  if (!v26)
  {
    ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
    std::__shared_weak_count::__release_weak(v57);
    v27 = v57;
  }
  else
  {
LABEL_32:
    v27 = v57;
    if (!v57)
    {
      v58 = &off_24CA84E68;
      v59 = v56;
      v60 = 0;
      goto LABEL_43;
    }
  }
  v28 = (unint64_t *)&v27->__shared_owners_;
  do
    v29 = __ldxr(v28);
  while (__stxr(v29 + 1, v28));
  do
    v30 = __ldaxr(v28);
  while (__stlxr(v30 - 1, v28));
  if (!v30)
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  v58 = &off_24CA84E68;
  v59 = v56;
  v60 = v57;
  v31 = (unint64_t *)&v57->__shared_owners_;
  do
    v32 = __ldxr(v31);
  while (__stxr(v32 + 1, v31));
LABEL_43:
  v33 = sub_2109DED7C((uint64_t)&v58);
  v34 = sub_2109DEFFC((uint64_t)&v58);
  v35 = sub_2109DF27C((uint64_t)&v58);
  v36 = sub_2109DF4FC((uint64_t)&v58);
  v58 = &off_24CA84E68;
  v37 = v60;
  if (v60)
  {
    v38 = (unint64_t *)&v60->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  v40 = v35 | ((unint64_t)v36 << 32);
  v41 = v33 | ((unint64_t)v34 << 32);
  LODWORD(v62[0]) = 3;
  HIDWORD(v62[0]) = v41;
  *(_QWORD *)(a1 + 48) = v62[0];
  *(_DWORD *)(a1 + 56) = v34;
  LODWORD(v62[0]) = 1;
  *(_QWORD *)((char *)v62 + 4) = v40;
  *(_QWORD *)(a1 + 60) = v62[0];
  *(_DWORD *)(a1 + 68) = v36;
  *(_QWORD *)(a1 + 72) = v41;
  *(_QWORD *)(a1 + 80) = v40;
  if (v57)
  {
    v42 = (unint64_t *)&v57->__shared_owners_;
    do
      v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
      v44 = *(_QWORD *)(a2 + 8);
      if (v44)
        goto LABEL_53;
LABEL_67:
      v51 = 0;
      goto LABEL_68;
    }
  }
  v44 = *(_QWORD *)(a2 + 8);
  if (!v44)
    goto LABEL_67;
LABEL_53:
  v45 = *(std::__shared_weak_count **)(v44 + 8);
  if (v45)
  {
    v46 = (unint64_t *)&v45->__shared_owners_;
    do
      v47 = __ldxr(v46);
    while (__stxr(v47 + 1, v46));
    do
      v48 = __ldaxr(v46);
    while (__stlxr(v48 - 1, v46));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
      v49 = *(uint64_t **)(a2 + 8);
      if (v49)
        goto LABEL_59;
LABEL_74:
      v51 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_75;
      goto LABEL_69;
    }
  }
  v49 = *(uint64_t **)(a2 + 8);
  if (!v49)
    goto LABEL_74;
LABEL_59:
  v51 = *v49;
  v50 = (std::__shared_weak_count *)v49[1];
  if (!v50)
    goto LABEL_68;
  v52 = (unint64_t *)&v50->__shared_owners_;
  do
    v53 = __ldxr(v52);
  while (__stxr(v53 + 1, v52));
  do
    v54 = __ldaxr(v52);
  while (__stlxr(v54 - 1, v52));
  if (v54)
  {
LABEL_68:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_75;
    goto LABEL_69;
  }
  ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
  std::__shared_weak_count::__release_weak(v50);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_75:
    if (!v51)
      return a1;
    goto LABEL_76;
  }
LABEL_69:
  if ((v51 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_76:
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  return a1;
}

void sub_2109159B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  sub_2109135CC(v15);
  _Unwind_Resume(a1);
}

void sub_210915A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_210915AA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24CA84E68;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210914584(a1, (uint64_t)&v20);
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_210915C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210915C6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  __int128 v49;
  std::__shared_weak_count *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_52;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24CA84E68;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  sub_21094C3A0((uint64_t)v48);
  v48[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_16;
  v14 = (unint64_t *)&v11->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_16:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (v16)
      goto LABEL_17;
LABEL_27:
    v24 = *(_QWORD *)(a2 + 8);
    v45 = &off_24CA84E68;
    v46 = v24;
    v47 = 0;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v16)
    goto LABEL_27;
LABEL_17:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  v21 = *(_QWORD *)(a2 + 8);
  v20 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24CA84E68;
  v46 = v21;
  v47 = v20;
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
LABEL_28:
  v25 = sub_2109DD8B8((uint64_t)&v45, 0);
  v26 = v47;
  *(_QWORD *)&v49 = &off_24CA84E68;
  *((_QWORD *)&v49 + 1) = v46;
  v50 = v47;
  if (v47)
  {
    v27 = (unint64_t *)&v47->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  v29 = sub_2109DED7C((uint64_t)&v49);
  v30 = sub_2109DEFFC((uint64_t)&v49);
  v31 = sub_2109DF27C((uint64_t)&v49);
  v32 = sub_2109DF4FC((uint64_t)&v49);
  *(_QWORD *)&v49 = &off_24CA84E68;
  if (v26)
  {
    v33 = (unint64_t *)&v26->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v35 = v29;
  v36 = v29 | ((unint64_t)v30 << 32);
  v37 = v31 | ((unint64_t)v32 << 32);
  v45 = &off_24CA84E68;
  v38 = v47;
  if (v47)
  {
    v39 = (unint64_t *)&v47->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
  if (v30)
    v41 = v35 == 0;
  else
    v41 = 1;
  if (v41)
    v42 = 0;
  else
    v42 = v36;
  *(_QWORD *)((char *)&v49 + 4) = v42;
  LODWORD(v49) = 4;
  v43 = v49;
  LODWORD(v49) = 1;
  *(_QWORD *)((char *)&v49 + 4) = v37;
  v44 = v49;
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = v43;
  *(_DWORD *)(a1 + 16) = HIDWORD(v42);
  *(_QWORD *)(a1 + 20) = v44;
  *(_DWORD *)(a1 + 28) = v32;
  *(_QWORD *)(a1 + 32) = v42;
  *(_QWORD *)(a1 + 40) = v37;
  if (HIDWORD(v42) * v32 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_52:
    abort();
  }
}

void sub_210915FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_210915FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210916010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21091602C(uint64_t a1, int a2, __int128 *a3)
{
  unsigned int *v5;
  BOOL v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  void (**v20)(_QWORD);
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char *v25;
  __int128 v26;

  *(_QWORD *)a1 = off_24CA7DBE0;
  *(_DWORD *)(a1 + 8) = 0;
  v5 = (unsigned int *)a3 + 6;
  if (*((_DWORD *)a3 + 6))
    v6 = *((_DWORD *)a3 + 7) == 0;
  else
    v6 = 1;
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!*((_DWORD *)a3 + 6))
      goto LABEL_24;
  }
  else
  {
    if ((a2 - 25) > 0xC)
      v10 = 0;
    else
      v10 = dword_210A166BC[a2 - 25] | dword_210A16688[a2 - 25];
    v25 = (char *)operator new(0x78uLL);
    v26 = xmmword_210A11EB0;
    strcpy(v25, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v5, v10, (uint64_t *)&v25, (uint64_t)&v20);
    if (!v24)
    {
      v19 = sub_21096575C((uint64_t)&v20);
      sub_21096579C(v19);
    }
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v21 + 1);
    v8 = v21;
    v21 = 0uLL;
    (*v20)(&v20);
    if (SHIBYTE(v26) < 0)
      operator delete(v25);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v7;
    *(_DWORD *)(a1 + 40) = 0;
    v9 = a1 + 48;
    if (!*((_DWORD *)a3 + 6))
      goto LABEL_24;
  }
  if (!*((_DWORD *)a3 + 7))
  {
LABEL_24:
    v16 = *a3;
    v17 = a3[1];
    *(_QWORD *)(v9 + 32) = *((_QWORD *)a3 + 4);
    *(_OWORD *)v9 = v16;
    *(_OWORD *)(v9 + 16) = v17;
    return a1;
  }
  v25 = (char *)&off_24CA84E68;
  *(_QWORD *)&v26 = v8;
  *((_QWORD *)&v26 + 1) = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
  }
  sub_210915C6C((uint64_t)&v20, (uint64_t)&v25);
  v13 = v22;
  *(_OWORD *)v9 = v21;
  *(_OWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 32) = v23;
  v25 = (char *)&off_24CA84E68;
  if (v7)
  {
    v14 = (unint64_t *)&v7->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void sub_21091624C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_210916294(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  _BYTE *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  uint64_t (**v53)();
  uint64_t *v54;
  std::__shared_weak_count *v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t *v58;
  _DWORD v59[7];
  _QWORD v60[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_72;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v20;
    v55 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v53 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v54 = v29;
    v55 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v53 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_72:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v54 = v11;
  v55 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v53 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v54);
  }
LABEL_50:
  sub_2109170F0((uint64_t)&v46, a1);
  v56[0] = &v46;
  v56[1] = a2;
  if (v50 == 1)
  {
    sub_2108FE924(v56);
  }
  else
  {
    v57 = a2;
    if (v47 && v48 && v49)
    {
      v58 = &v57;
      v59[0] = 0;
      v59[1] = v47 - 1;
      v59[2] = v50;
      v59[3] = v48 - 1;
      v59[4] = v51;
      v59[5] = v49 - 1;
      v59[6] = v52;
      v60[0] = 0;
      v60[1] = 0;
      sub_2108FF510(v59, (uint64_t)v60, (_BYTE ***)&v58, v46);
    }
  }
  if (!v54)
    goto LABEL_64;
  v39 = *v54;
  v38 = (std::__shared_weak_count *)v54[1];
  if (!v38)
    goto LABEL_62;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (v42)
  {
LABEL_62:
    if (!v39)
      goto LABEL_64;
    goto LABEL_63;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v39)
LABEL_63:
    sub_2109E44E0((uint64_t)v54);
LABEL_64:
  v53 = &off_24CA84E68;
  v43 = v55;
  if (v55)
  {
    v44 = (unint64_t *)&v55->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_2109166D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109166E8(uint64_t a1, _DWORD *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  _BYTE v47[20];
  int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  size_t v52[2];
  char v53;
  char *v54;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_75;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v20;
    v51 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v49 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v29;
    v51 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v49 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_75:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v11;
  v51 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v49 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v50);
  }
LABEL_50:
  sub_2109170F0((uint64_t)v47, a1);
  v52[0] = (size_t)a2;
  v52[1] = (size_t)v47;
  if (a2[5] == 1 && v48 == 1)
  {
    sub_2108FEBEC(v52);
  }
  else
  {
    v53 = 0;
    if (a2[2] && a2[3] && a2[4])
    {
      v54 = &v53;
      sub_2108FF6CC((uint64_t)&v54, (uint64_t)a2, (uint64_t)v47);
    }
  }
  if (!v50)
    goto LABEL_67;
  v40 = *v50;
  v39 = (std::__shared_weak_count *)v50[1];
  if (!v39)
    goto LABEL_65;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_65:
    if (!v40)
      goto LABEL_67;
    goto LABEL_66;
  }
  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_66:
    sub_2109E44E0((uint64_t)v50);
LABEL_67:
  v49 = &off_24CA84E68;
  v44 = v51;
  if (v51)
  {
    v45 = (unint64_t *)&v51->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_210916B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210916B1C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v56;
  std::__shared_weak_count *v57;
  uint64_t (**v58)();
  _QWORD *v59;
  std::__shared_weak_count *v60;
  _QWORD v61[3];
  _QWORD v62[3];

  v62[2] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7DBE0;
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
        goto LABEL_8;
    }
    else
    {
LABEL_7:
      v4 = *(uint64_t **)(a2 + 8);
      if (v6)
      {
LABEL_8:
        v10 = *((_DWORD *)v4 + 4);
        goto LABEL_11;
      }
    }
  }
  v10 = 0;
LABEL_11:
  *(_QWORD *)(a1 + 16) = &off_24CA84E68;
  *(_DWORD *)(a1 + 8) = v10;
  *(_QWORD *)(a1 + 24) = v4;
  v11 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v11;
  if (v11)
  {
    v12 = (unint64_t *)(v11 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  *(_DWORD *)(a1 + 40) = 0;
  v14 = *(_QWORD **)(a2 + 8);
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  v56 = v14;
  v57 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_23;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (v19)
        goto LABEL_25;
    }
    else
    {
LABEL_23:
      if (v19)
        goto LABEL_25;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_25:
  v61[0] = &off_24CA84E68;
  v61[1] = v56;
  v61[2] = v57;
  if (v57)
  {
    v23 = (unint64_t *)&v57->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
  }
  sub_21094C3A0((uint64_t)v61);
  v61[0] = &off_24CA84E68;
  if (!v57)
    goto LABEL_32;
  v25 = (unint64_t *)&v57->__shared_owners_;
  do
    v26 = __ldaxr(v25);
  while (__stlxr(v26 - 1, v25));
  if (!v26)
  {
    ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
    std::__shared_weak_count::__release_weak(v57);
    v27 = v57;
  }
  else
  {
LABEL_32:
    v27 = v57;
    if (!v57)
    {
      v58 = &off_24CA84E68;
      v59 = v56;
      v60 = 0;
      goto LABEL_43;
    }
  }
  v28 = (unint64_t *)&v27->__shared_owners_;
  do
    v29 = __ldxr(v28);
  while (__stxr(v29 + 1, v28));
  do
    v30 = __ldaxr(v28);
  while (__stlxr(v30 - 1, v28));
  if (!v30)
  {
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
  }
  v58 = &off_24CA84E68;
  v59 = v56;
  v60 = v57;
  v31 = (unint64_t *)&v57->__shared_owners_;
  do
    v32 = __ldxr(v31);
  while (__stxr(v32 + 1, v31));
LABEL_43:
  v33 = sub_2109DED7C((uint64_t)&v58);
  v34 = sub_2109DEFFC((uint64_t)&v58);
  v35 = sub_2109DF27C((uint64_t)&v58);
  v36 = sub_2109DF4FC((uint64_t)&v58);
  v58 = &off_24CA84E68;
  v37 = v60;
  if (v60)
  {
    v38 = (unint64_t *)&v60->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  v40 = v35 | ((unint64_t)v36 << 32);
  v41 = v33 | ((unint64_t)v34 << 32);
  LODWORD(v62[0]) = 4;
  HIDWORD(v62[0]) = v41;
  *(_QWORD *)(a1 + 48) = v62[0];
  *(_DWORD *)(a1 + 56) = v34;
  LODWORD(v62[0]) = 1;
  *(_QWORD *)((char *)v62 + 4) = v40;
  *(_QWORD *)(a1 + 60) = v62[0];
  *(_DWORD *)(a1 + 68) = v36;
  *(_QWORD *)(a1 + 72) = v41;
  *(_QWORD *)(a1 + 80) = v40;
  if (v57)
  {
    v42 = (unint64_t *)&v57->__shared_owners_;
    do
      v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
      v44 = *(_QWORD *)(a2 + 8);
      if (v44)
        goto LABEL_53;
LABEL_67:
      v51 = 0;
      goto LABEL_68;
    }
  }
  v44 = *(_QWORD *)(a2 + 8);
  if (!v44)
    goto LABEL_67;
LABEL_53:
  v45 = *(std::__shared_weak_count **)(v44 + 8);
  if (v45)
  {
    v46 = (unint64_t *)&v45->__shared_owners_;
    do
      v47 = __ldxr(v46);
    while (__stxr(v47 + 1, v46));
    do
      v48 = __ldaxr(v46);
    while (__stlxr(v48 - 1, v46));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
      v49 = *(uint64_t **)(a2 + 8);
      if (v49)
        goto LABEL_59;
LABEL_74:
      v51 = 0;
      if (!*(_DWORD *)(a1 + 72))
        goto LABEL_75;
      goto LABEL_69;
    }
  }
  v49 = *(uint64_t **)(a2 + 8);
  if (!v49)
    goto LABEL_74;
LABEL_59:
  v51 = *v49;
  v50 = (std::__shared_weak_count *)v49[1];
  if (!v50)
    goto LABEL_68;
  v52 = (unint64_t *)&v50->__shared_owners_;
  do
    v53 = __ldxr(v52);
  while (__stxr(v53 + 1, v52));
  do
    v54 = __ldaxr(v52);
  while (__stlxr(v54 - 1, v52));
  if (v54)
  {
LABEL_68:
    if (!*(_DWORD *)(a1 + 72))
      goto LABEL_75;
    goto LABEL_69;
  }
  ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
  std::__shared_weak_count::__release_weak(v50);
  if (!*(_DWORD *)(a1 + 72))
  {
LABEL_75:
    if (!v51)
      return a1;
    goto LABEL_76;
  }
LABEL_69:
  if ((v51 == 0) == (*(_DWORD *)(a1 + 76) == 0))
    return a1;
LABEL_76:
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  return a1;
}

void sub_210917000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  sub_2109135CC(v15);
  _Unwind_Resume(a1);
}

void sub_210917068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_2109170F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210917318(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210917334(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  std::__shared_weak_count **v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  _QWORD v49[2];
  std::__shared_weak_count *v50;

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_64;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24CA84E68;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v48);
  v15 = &v50;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (std::__shared_weak_count **)((char *)v49 + 4 * v16);
    }
  }
  if ((char *)v15 - (char *)v49 == 16
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v48[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a2 + 8);
    v45 = &off_24CA84E68;
    v46 = v27;
    v47 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24CA84E68;
  v46 = v24;
  v47 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_2109DD8B8((uint64_t)&v45, 0);
  v29 = v47;
  v49[0] = &off_24CA84E68;
  v49[1] = v46;
  v50 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)v49);
  v33 = sub_2109DEFFC((uint64_t)v49);
  v34 = sub_2109DF27C((uint64_t)v49);
  v35 = sub_2109DF4FC((uint64_t)v49) << 31;
  v49[0] = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v45 = &off_24CA84E68;
  v40 = v47;
  if (v47)
  {
    v41 = (unint64_t *)&v47->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *a1 = v28;
  a1[1] = v44;
  a1[2] = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v35) * HIDWORD(v44) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_64:
    abort();
  }
}

void sub_21091770C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210917720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210917734(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va1);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210917750(uint64_t a1, unsigned int *a2)
{
  BOOL v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  void (**v16)(_QWORD);
  __int128 v17;
  char v18;
  char *v19;
  __int128 v20;

  *(_QWORD *)a1 = off_24CA7DC70;
  *(_DWORD *)(a1 + 8) = 0;
  if (*a2)
    v4 = a2[1] == 0;
  else
    v4 = 1;
  if (v4)
  {
    v5 = 0;
    v6 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  else
  {
    v19 = (char *)operator new(0x78uLL);
    v20 = xmmword_210A11EB0;
    strcpy(v19, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(a2, 1647392359, (uint64_t *)&v19, (uint64_t)&v16);
    if (!v18)
    {
      v14 = sub_21096575C((uint64_t)&v16);
      sub_21096579C(v14);
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    v6 = v17;
    v17 = 0uLL;
    (*v16)(&v16);
    if (SHIBYTE(v20) < 0)
      operator delete(v19);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  if (!a2[1])
  {
LABEL_21:
    v10 = *(_OWORD *)a2;
    goto LABEL_22;
  }
  v19 = (char *)&off_24CA84E68;
  *(_QWORD *)&v20 = v6;
  *((_QWORD *)&v20 + 1) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  sub_210917334((uint64_t *)&v16, (uint64_t)&v19);
  v10 = v17;
  v19 = (char *)&off_24CA84E68;
  if (v5)
  {
    v11 = (unint64_t *)&v5->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      v15 = v10;
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v10 = v15;
    }
  }
LABEL_22:
  *v7 = v10;
  return a1;
}

void sub_210917930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v4 - 49) < 0)
    operator delete(*(void **)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_210917978(uint64_t a1, uint64_t *a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46[3];
  uint64_t (**v47)();
  uint64_t *v48;
  std::__shared_weak_count *v49;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v20;
    v49 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v47 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v48 = v29;
    v49 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v47 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v48 = v11;
  v49 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v47 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v48);
  }
LABEL_50:
  sub_210917DEC(v46, a1);
  sub_2108FFBBC(a2, (uint64_t)v46);
  if (!v48)
    goto LABEL_58;
  v39 = *v48;
  v38 = (std::__shared_weak_count *)v48[1];
  if (!v38)
    goto LABEL_56;
  v40 = (unint64_t *)&v38->__shared_owners_;
  do
    v41 = __ldxr(v40);
  while (__stxr(v41 + 1, v40));
  do
    v42 = __ldaxr(v40);
  while (__stlxr(v42 - 1, v40));
  if (v42)
  {
LABEL_56:
    if (!v39)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
  std::__shared_weak_count::__release_weak(v38);
  if (v39)
LABEL_57:
    sub_2109E44E0((uint64_t)v48);
LABEL_58:
  v47 = &off_24CA84E68;
  v43 = v49;
  if (v49)
  {
    v44 = (unint64_t *)&v49->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
}

void sub_210917D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210917D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_210917DEC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_210917334(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_210917FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210918008(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24CA84E68;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v50);
  v15 = (char *)v52;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (char *)&v52[-2] + 4 * v16;
    }
  }
  if (v15 - (char *)&v51 == 16
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v50[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24CA84E68;
    v48 = v27;
    v49 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24CA84E68;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_2109DD8B8((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24CA84E68;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)&v51);
  v33 = sub_2109DEFFC((uint64_t)&v51);
  v34 = sub_2109DF27C((uint64_t)&v51);
  v35 = sub_2109DF4FC((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24CA84E68;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 3;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_210918460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_210918474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210918488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2109184A4(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7DD00;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 1647589490, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_210918008((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_210918694(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_2109186E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091876C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24CA84E68;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210918008(a1, (uint64_t)&v20);
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_21091891C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210918938(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24CA84E68;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v50);
  v15 = (char *)v52;
  if (v14 > 1647589489)
  {
    if (v14 == 1647719521)
    {
      v16 = 0;
      goto LABEL_21;
    }
    if (v14 == 1647589490)
    {
      v16 = 1;
      goto LABEL_21;
    }
  }
  else
  {
    if (v14 == 1278226742)
    {
      v16 = 3;
      goto LABEL_21;
    }
    if (v14 == 1647392359)
    {
      v16 = 2;
LABEL_21:
      v15 = (char *)&v52[-2] + 4 * v16;
    }
  }
  if (v15 - (char *)&v51 == 16
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 113, (uint64_t)"Contains(pf::formats::U16(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v50[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_28;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_28:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_29;
LABEL_39:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24CA84E68;
    v48 = v27;
    v49 = 0;
    goto LABEL_40;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_39;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24CA84E68;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_40:
  v28 = sub_2109DD8B8((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24CA84E68;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)&v51);
  v33 = sub_2109DEFFC((uint64_t)&v51);
  v34 = sub_2109DF27C((uint64_t)&v51);
  v35 = sub_2109DF4FC((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24CA84E68;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 4;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_210918D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_210918DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210918DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210918DD4(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7DD90;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 1647719521, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_210918938((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_210918FC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_210919014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091909C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210918938(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_2109192C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2109192E0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  _QWORD v49[2];
  std::__shared_weak_count *v50;

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_66;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24CA84E68;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v48);
  v15 = (char *)&v50 + 4;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = (char *)v49 + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)v49 == 20
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v48[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v45 = &off_24CA84E68;
    v46 = v27;
    v47 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24CA84E68;
  v46 = v24;
  v47 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_2109DD8B8((uint64_t)&v45, 0);
  v29 = v47;
  v49[0] = &off_24CA84E68;
  v49[1] = v46;
  v50 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)v49);
  v33 = sub_2109DEFFC((uint64_t)v49);
  v34 = sub_2109DF27C((uint64_t)v49);
  v35 = sub_2109DF4FC((uint64_t)v49) << 31;
  v49[0] = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v45 = &off_24CA84E68;
  v40 = v47;
  if (v47)
  {
    v41 = (unint64_t *)&v47->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *a1 = v28;
  a1[1] = v44;
  a1[2] = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v35) * HIDWORD(v44) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_66:
    abort();
  }
}

void sub_2109196D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109196E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109196F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va1);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210919714(uint64_t a1, unsigned int *a2)
{
  BOOL v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  void (**v16)(_QWORD);
  __int128 v17;
  char v18;
  char *v19;
  __int128 v20;

  *(_QWORD *)a1 = off_24CA7DE20;
  *(_DWORD *)(a1 + 8) = 0;
  if (*a2)
    v4 = a2[1] == 0;
  else
    v4 = 1;
  if (v4)
  {
    v5 = 0;
    v6 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  else
  {
    v19 = (char *)operator new(0x78uLL);
    v20 = xmmword_210A11EB0;
    strcpy(v19, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(a2, 1278226536, (uint64_t *)&v19, (uint64_t)&v16);
    if (!v18)
    {
      v14 = sub_21096575C((uint64_t)&v16);
      sub_21096579C(v14);
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    v6 = v17;
    v17 = 0uLL;
    (*v16)(&v16);
    if (SHIBYTE(v20) < 0)
      operator delete(v19);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  if (!a2[1])
  {
LABEL_21:
    v10 = *(_OWORD *)a2;
    goto LABEL_22;
  }
  v19 = (char *)&off_24CA84E68;
  *(_QWORD *)&v20 = v6;
  *((_QWORD *)&v20 + 1) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  sub_2109192E0((uint64_t *)&v16, (uint64_t)&v19);
  v10 = v17;
  v19 = (char *)&off_24CA84E68;
  if (v5)
  {
    v11 = (unint64_t *)&v5->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      v15 = v10;
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v10 = v15;
    }
  }
LABEL_22:
  *v7 = v10;
  return a1;
}

void sub_2109198F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v4 - 49) < 0)
    operator delete(*(void **)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_21091993C(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47[3];
  uint64_t (**v48)();
  uint64_t *v49;
  std::__shared_weak_count *v50;
  uint64_t v51[2];

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v20;
    v50 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v48 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v29;
    v50 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v48 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v49 = v11;
  v50 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v48 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v49);
  }
LABEL_50:
  sub_210919DB4(v47, a1);
  v51[0] = a2;
  v51[1] = (uint64_t)v47;
  v38.n128_u64[0] = sub_2109014B4(v51);
  if (!v49)
    goto LABEL_58;
  v40 = *v49;
  v39 = (std::__shared_weak_count *)v49[1];
  if (!v39)
    goto LABEL_56;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_56:
    if (!v40)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_57:
    sub_2109E44E0((uint64_t)v49);
LABEL_58:
  v48 = &off_24CA84E68;
  v44 = v50;
  if (v50)
  {
    v45 = (unint64_t *)&v50->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v44->__on_zero_shared)(v44, v38);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_210919D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210919D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_210919DB4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_2109192E0(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_210919FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210919FD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24CA84E68;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v50[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24CA84E68;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24CA84E68;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_2109DD8B8((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24CA84E68;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)&v51);
  v33 = sub_2109DEFFC((uint64_t)&v51);
  v34 = sub_2109DF27C((uint64_t)&v51);
  v35 = sub_2109DF4FC((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24CA84E68;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 2;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091A440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_21091A454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091A468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21091A484(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7DEB0;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 843264104, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_210919FD0((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_21091A674(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_21091A6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091A74C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210919FD0(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21091A974(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21091A990(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24CA84E68;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380411456)
  {
    if (v14 == 843264104)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226536)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380411457:
        v16 = 2;
        goto LABEL_23;
      case 1751410032:
        v16 = 4;
        goto LABEL_23;
      case 1751411059:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 115, (uint64_t)"Contains(pf::formats::F16(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v50[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24CA84E68;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24CA84E68;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_2109DD8B8((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24CA84E68;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)&v51);
  v33 = sub_2109DEFFC((uint64_t)&v51);
  v34 = sub_2109DF27C((uint64_t)&v51);
  v35 = sub_2109DF4FC((uint64_t)&v51) << 31;
  *(_QWORD *)&v51 = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24CA84E68;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 4;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 1);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091AE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_21091AE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091AE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21091AE44(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7DF40;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 1380411457, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_21091A990((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_21091B034(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_21091B084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091B10C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091A990(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21091B334(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21091B350(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  std::__shared_weak_count *v47;
  _QWORD v48[3];
  _QWORD v49[2];
  std::__shared_weak_count *v50;

  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_66;
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v48[0] = &off_24CA84E68;
  v48[1] = v10;
  v48[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v48);
  v15 = (char *)&v50 + 4;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = (char *)v49 + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)v49 == 20
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v48[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v45 = &off_24CA84E68;
    v46 = v27;
    v47 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v45 = &off_24CA84E68;
  v46 = v24;
  v47 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_2109DD8B8((uint64_t)&v45, 0);
  v29 = v47;
  v49[0] = &off_24CA84E68;
  v49[1] = v46;
  v50 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)v49);
  v33 = sub_2109DEFFC((uint64_t)v49);
  v34 = sub_2109DF27C((uint64_t)v49);
  v35 = sub_2109DF4FC((uint64_t)v49) << 30;
  v49[0] = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v45 = &off_24CA84E68;
  v40 = v47;
  if (v47)
  {
    v41 = (unint64_t *)&v47->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *a1 = v28;
  a1[1] = v44;
  a1[2] = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  if (HIDWORD(v35) * HIDWORD(v44) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_66:
    abort();
  }
}

void sub_21091B740(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091B754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091B768(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va1);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21091B784(uint64_t a1, unsigned int *a2)
{
  BOOL v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v14;
  __int128 v15;
  void (**v16)(_QWORD);
  __int128 v17;
  char v18;
  char *v19;
  __int128 v20;

  *(_QWORD *)a1 = off_24CA7DFD0;
  *(_DWORD *)(a1 + 8) = 0;
  if (*a2)
    v4 = a2[1] == 0;
  else
    v4 = 1;
  if (v4)
  {
    v5 = 0;
    v6 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  else
  {
    v19 = (char *)operator new(0x78uLL);
    v20 = xmmword_210A11EB0;
    strcpy(v19, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(a2, 1278226534, (uint64_t *)&v19, (uint64_t)&v16);
    if (!v18)
    {
      v14 = sub_21096575C((uint64_t)&v16);
      sub_21096579C(v14);
    }
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    v6 = v17;
    v17 = 0uLL;
    (*v16)(&v16);
    if (SHIBYTE(v20) < 0)
      operator delete(v19);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v5;
    *(_DWORD *)(a1 + 40) = 0;
    v7 = (_OWORD *)(a1 + 48);
    if (!*a2)
      goto LABEL_21;
  }
  if (!a2[1])
  {
LABEL_21:
    v10 = *(_OWORD *)a2;
    goto LABEL_22;
  }
  v19 = (char *)&off_24CA84E68;
  *(_QWORD *)&v20 = v6;
  *((_QWORD *)&v20 + 1) = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  sub_21091B350((uint64_t *)&v16, (uint64_t)&v19);
  v10 = v17;
  v19 = (char *)&off_24CA84E68;
  if (v5)
  {
    v11 = (unint64_t *)&v5->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      v15 = v10;
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v10 = v15;
    }
  }
LABEL_22:
  *v7 = v10;
  return a1;
}

void sub_21091B964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v4 - 49) < 0)
    operator delete(*(void **)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_21091B9AC(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47[3];
  uint64_t (**v48)();
  uint64_t *v49;
  std::__shared_weak_count *v50;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    goto LABEL_66;
  v3 = *(uint64_t **)(a1 + 24);
  if (!v3)
    return;
  v6 = *v3;
  v5 = (std::__shared_weak_count *)v3[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (!v6)
      return;
  }
  else
  {
LABEL_8:
    if (!v6)
      return;
  }
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 2)
  {
    v20 = *(uint64_t **)(a1 + 24);
    v21 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v20;
    v50 = v21;
    if (v21)
    {
      v22 = (unint64_t *)&v21->__shared_owners_;
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 1, v22));
    }
    v48 = &off_24CA84D20;
    if (v20)
    {
      v25 = *v20;
      v24 = (std::__shared_weak_count *)v20[1];
      if (v24)
      {
        v26 = (unint64_t *)&v24->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
        do
          v28 = __ldaxr(v26);
        while (__stlxr(v28 - 1, v26));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
        }
      }
      if (v25)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10 == 1)
  {
    v29 = *(uint64_t **)(a1 + 24);
    v30 = *(std::__shared_weak_count **)(a1 + 32);
    v49 = v29;
    v50 = v30;
    if (v30)
    {
      v31 = (unint64_t *)&v30->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    v48 = &off_24CA84D20;
    if (v29)
    {
      v34 = *v29;
      v33 = (std::__shared_weak_count *)v29[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_49;
    }
    goto LABEL_50;
  }
  if (v10)
LABEL_66:
    sub_2108B9060();
  v11 = *(uint64_t **)(a1 + 24);
  v12 = *(std::__shared_weak_count **)(a1 + 32);
  v49 = v11;
  v50 = v12;
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v48 = &off_24CA84D20;
  if (v11)
  {
    v16 = *v11;
    v15 = (std::__shared_weak_count *)v11[1];
    if (v15)
    {
      v17 = (unint64_t *)&v15->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    if (v16)
LABEL_49:
      sub_2109E430C((uint64_t)v49);
  }
LABEL_50:
  sub_21091BE20(v47, a1);
  v38.n128_f32[0] = sub_2109030FC(a2, (uint64_t)v47);
  if (!v49)
    goto LABEL_58;
  v40 = *v49;
  v39 = (std::__shared_weak_count *)v49[1];
  if (!v39)
    goto LABEL_56;
  v41 = (unint64_t *)&v39->__shared_owners_;
  do
    v42 = __ldxr(v41);
  while (__stxr(v42 + 1, v41));
  do
    v43 = __ldaxr(v41);
  while (__stlxr(v43 - 1, v41));
  if (v43)
  {
LABEL_56:
    if (!v40)
      goto LABEL_58;
    goto LABEL_57;
  }
  ((void (*)(std::__shared_weak_count *, __n128))v39->__on_zero_shared)(v39, v38);
  std::__shared_weak_count::__release_weak(v39);
  if (v40)
LABEL_57:
    sub_2109E44E0((uint64_t)v49);
LABEL_58:
  v48 = &off_24CA84E68;
  v44 = v50;
  if (v50)
  {
    v45 = (unint64_t *)&v50->__shared_owners_;
    do
      v46 = __ldaxr(v45);
    while (__stlxr(v46 - 1, v45));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v44->__on_zero_shared)(v44, v38);
      std::__shared_weak_count::__release_weak(v44);
    }
  }
}

void sub_21091BD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DDBD4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091BD98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091BE20(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_21091B350(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091C020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_21091C03C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24CA84E68;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v50[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24CA84E68;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24CA84E68;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_2109DD8B8((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24CA84E68;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)&v51);
  v33 = sub_2109DEFFC((uint64_t)&v51);
  v34 = sub_2109DF27C((uint64_t)&v51);
  v35 = sub_2109DF4FC((uint64_t)&v51) << 30;
  *(_QWORD *)&v51 = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24CA84E68;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 2;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091C4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_21091C4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091C4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21091C4F0(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7E060;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 843264102, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_21091C03C((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_21091C6E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_21091C730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091C7B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091C03C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21091C9E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21091C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  int v14;
  char *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  size_t v34;
  size_t v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (**v47)();
  uint64_t v48;
  std::__shared_weak_count *v49;
  _QWORD v50[3];
  __int128 v51;
  _QWORD v52[2];

  v52[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)(a2 + 8);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_7;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
        goto LABEL_9;
    }
    else
    {
LABEL_7:
      if (v6)
        goto LABEL_9;
    }
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 166, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_9:
  v10 = *(_QWORD *)(a2 + 8);
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  v50[0] = &off_24CA84E68;
  v50[1] = v10;
  v50[2] = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = sub_2109DF77C((uint64_t)v50);
  v15 = (char *)v52 + 4;
  if (v14 <= 1380410944)
  {
    if (v14 == 843264102)
    {
      v16 = 1;
      goto LABEL_23;
    }
    if (v14 == 1278226534)
    {
      v16 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    switch(v14)
    {
      case 1380410945:
        v16 = 2;
        goto LABEL_23;
      case 1717855600:
        v16 = 4;
        goto LABEL_23;
      case 1717856627:
        v16 = 3;
LABEL_23:
        v15 = (char *)&v52[-2] + 4 * v16;
        break;
    }
  }
  if (v15 - (char *)&v51 == 20
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 117, (uint64_t)"Contains(pf::formats::F32(), ref.Format())", 42, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v50[0] = &off_24CA84E68;
  if (!v11)
    goto LABEL_30;
  v17 = (unint64_t *)&v11->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
  {
LABEL_30:
    v19 = *(std::__shared_weak_count **)(a2 + 16);
    if (v19)
      goto LABEL_31;
LABEL_41:
    v27 = *(_QWORD *)(a2 + 8);
    v47 = &off_24CA84E68;
    v48 = v27;
    v49 = 0;
    goto LABEL_42;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  v19 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v19)
    goto LABEL_41;
LABEL_31:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
  do
    v22 = __ldaxr(v20);
  while (__stlxr(v22 - 1, v20));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  v24 = *(_QWORD *)(a2 + 8);
  v23 = *(std::__shared_weak_count **)(a2 + 16);
  v47 = &off_24CA84E68;
  v48 = v24;
  v49 = v23;
  if (v23)
  {
    v25 = (unint64_t *)&v23->__shared_owners_;
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
  }
LABEL_42:
  v28 = sub_2109DD8B8((uint64_t)&v47, 0);
  v29 = v49;
  *(_QWORD *)&v51 = &off_24CA84E68;
  *((_QWORD *)&v51 + 1) = v48;
  v52[0] = v49;
  if (v49)
  {
    v30 = (unint64_t *)&v49->__shared_owners_;
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
  }
  v32 = sub_2109DED7C((uint64_t)&v51);
  v33 = sub_2109DEFFC((uint64_t)&v51);
  v34 = sub_2109DF27C((uint64_t)&v51);
  v35 = sub_2109DF4FC((uint64_t)&v51) << 30;
  *(_QWORD *)&v51 = &off_24CA84E68;
  if (v29)
  {
    v36 = (unint64_t *)&v29->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v38 = v32;
  v39 = v32 | ((unint64_t)v33 << 32);
  v47 = &off_24CA84E68;
  v40 = v49;
  if (v49)
  {
    v41 = (unint64_t *)&v49->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  if (v33)
    v43 = v38 == 0;
  else
    v43 = 1;
  if (v43)
    v44 = 0;
  else
    v44 = v39;
  *(_QWORD *)((char *)&v51 + 4) = v44;
  LODWORD(v51) = 4;
  v45 = v51;
  LODWORD(v51) = 1;
  *(_QWORD *)((char *)&v51 + 4) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  v46 = v51;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v45;
  *(_DWORD *)(a1 + 16) = HIDWORD(v44);
  *(_QWORD *)(a1 + 20) = v46;
  *(_DWORD *)(a1 + 28) = HIDWORD(v35);
  *(_QWORD *)(a1 + 32) = v44;
  *(_QWORD *)(a1 + 40) = v35 & 0xFFFFFFFF00000000 | (v34 >> 2);
  if (HIDWORD(v44) * HIDWORD(v35) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091CE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

void sub_21091CE80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2109DEB5C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091CE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  sub_2109DEB5C(&a15);
  sub_2109DEB5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21091CEB0(uint64_t a1, __int128 *a2)
{
  unsigned int *v4;
  BOOL v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  void (**v18)(_QWORD);
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char *v23;
  __int128 v24;

  *(_QWORD *)a1 = off_24CA7E0F0;
  *(_DWORD *)(a1 + 8) = 0;
  v4 = (unsigned int *)a2 + 6;
  if (*((_DWORD *)a2 + 6))
    v5 = *((_DWORD *)a2 + 7) == 0;
  else
    v5 = 1;
  if (v5)
  {
    v6 = 0;
    v7 = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  else
  {
    v23 = (char *)operator new(0x78uLL);
    v24 = xmmword_210A11EB0;
    strcpy(v23, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp:47");
    sub_2109DE064(v4, 1380410945, (uint64_t *)&v23, (uint64_t)&v18);
    if (!v22)
    {
      v17 = sub_21096575C((uint64_t)&v18);
      sub_21096579C(v17);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    v7 = v19;
    v19 = 0uLL;
    (*v18)(&v18);
    if (SHIBYTE(v24) < 0)
      operator delete(v23);
    *(_QWORD *)(a1 + 16) = &off_24CA84E68;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v6;
    *(_DWORD *)(a1 + 40) = 0;
    v8 = a1 + 48;
    if (!*((_DWORD *)a2 + 6))
      goto LABEL_21;
  }
  if (!*((_DWORD *)a2 + 7))
  {
LABEL_21:
    v14 = *a2;
    v15 = a2[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
    return a1;
  }
  v23 = (char *)&off_24CA84E68;
  *(_QWORD *)&v24 = v7;
  *((_QWORD *)&v24 + 1) = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  sub_21091C9FC((uint64_t)&v18, (uint64_t)&v23);
  v11 = v20;
  *(_OWORD *)v8 = v19;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v21;
  v23 = (char *)&off_24CA84E68;
  if (v6)
  {
    v12 = (unint64_t *)&v6->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void sub_21091D0A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_2109DEAB8((uint64_t)va);
  if (*(char *)(v2 - 49) < 0)
    operator delete(*(void **)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_21091D0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_DWORD *)(a1 + 40) >= 3u)
    sub_2108B9060();
  v3 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = *(std::__shared_weak_count **)(a2 + 16);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v2;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_21091D178(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091C9FC(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21091D3A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21091D3BC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DA30;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21091D420(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_210913058(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091D620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_21091D63C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24CA84E68;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_210913058(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24CA84E68;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091D84C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21091D868()
{
  return 1;
}

uint64_t (***sub_21091D870())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21091D8C4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45[8];
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  _QWORD v52[2];
  __int128 v53;
  uint64_t v54;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v14;
    v51 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v49 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v50);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v23;
    v51 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v49 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v5;
  v51 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v49 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21091D63C((uint64_t)v45, a1);
  sub_21091D63C((uint64_t)&v43, a1);
  v32 = (_QWORD *)operator new();
  v33 = v32;
  *v32 = off_24CA80380;
  if (v48 <= 0x20)
    v34 = 32;
  else
    v34 = v48;
  v52[0] = v46;
  v52[1] = v47 | (unint64_t)(v34 << 32);
  sub_2109133A4((uint64_t)v32, (unsigned int *)v52);
  v53 = v43;
  v54 = v44;
  sub_210913624((uint64_t)v33, (size_t)&v53);
  *v33 = off_24CA80380;
  *a2 = v33;
  if (!v50)
    goto LABEL_48;
  v36 = *v50;
  v35 = (std::__shared_weak_count *)v50[1];
  if (!v35)
    goto LABEL_46;
  v37 = (unint64_t *)&v35->__shared_owners_;
  do
    v38 = __ldxr(v37);
  while (__stxr(v38 + 1, v37));
  do
    v39 = __ldaxr(v37);
  while (__stlxr(v39 - 1, v37));
  if (v39)
  {
LABEL_46:
    if (!v36)
      goto LABEL_48;
    goto LABEL_47;
  }
  ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
  std::__shared_weak_count::__release_weak(v35);
  if (v36)
LABEL_47:
    sub_2109E43F4((uint64_t)v50);
LABEL_48:
  v49 = &off_24CA84E68;
  v40 = v51;
  if (v51)
  {
    v41 = (unint64_t *)&v51->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
}

void sub_21091DCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  va_list va;

  va_start(va, a8);
  *(_QWORD *)v8 = off_24CA7DA30;
  v11 = *(unsigned int *)(v8 + 40);
  if ((_DWORD)v11 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v11])(v9 - 33, v8 + 16);
  *(_DWORD *)(v8 + 40) = -1;
  MEMORY[0x212BCC6FC](v8, 0x10A3C40EE3858B8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091DD24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091DD38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21091DD4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21091DD8C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD v46[3];
  unsigned int v47;
  double v48[3];
  __int128 v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  uint64_t v53;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7EC30, 0);
  if (!v4)
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v52, lpsrc, 1);
    v16 = v52;
    v17 = *(_QWORD *)(v52 + 16);
    v45 = *(_OWORD *)v52;
    v46[0] = v17;
    *(_QWORD *)&v52 = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v18);
    sub_21091D420((uint64_t *)&v52, a1);
    *(_QWORD *)&v49 = &v45;
    *((_QWORD *)&v49 + 1) = &v52;
    sub_2108FE614((size_t *)&v49);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v21 = __ldxr(p_shared_owners);
      while (__stxr(v21 + 1, p_shared_owners));
    }
    if (v8)
    {
      v23 = *v8;
      v22 = (std::__shared_weak_count *)v8[1];
      if (v22)
      {
        v24 = (unint64_t *)&v22->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if (v23)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v27 = (unint64_t *)&v7->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
    }
    if (v8)
    {
      v30 = *v8;
      v29 = (std::__shared_weak_count *)v8[1];
      if (v29)
      {
        v31 = (unint64_t *)&v29->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (v30)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_21091D63C((uint64_t)&v49, v5);
  *(_QWORD *)&v45 = off_24CA80380;
  if (HIDWORD(v50) <= 0x20)
    v34 = 32;
  else
    v34 = HIDWORD(v50);
  v51[0] = *((_QWORD *)&v49 + 1);
  v51[1] = v50 | (unint64_t)(v34 << 32);
  sub_2109133A4((uint64_t)&v45, (unsigned int *)v51);
  v52 = v49;
  v53 = v50;
  sub_210913624((uint64_t)&v45, (size_t)&v52);
  *(_QWORD *)&v45 = off_24CA80380;
  if (!v8)
    goto LABEL_53;
  v36 = *v8;
  v35 = (std::__shared_weak_count *)v8[1];
  if (v35)
  {
    v37 = (unint64_t *)&v35->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
      if (!v36)
        goto LABEL_53;
      goto LABEL_52;
    }
  }
  if (v36)
LABEL_52:
    sub_2109E43F4((uint64_t)v8);
LABEL_53:
  if (v7)
  {
    v40 = (unint64_t *)&v7->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v42 = v47;
  *(_DWORD *)(a1 + 8) = DWORD2(v45);
  v43 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v43 == -1)
  {
    if ((_DWORD)v42 == -1)
    {
      result = v48[0];
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
      return result;
    }
  }
  else if ((_DWORD)v42 == -1)
  {
    ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v43])(&v52, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_63;
  }
  *(_QWORD *)&v52 = a1 + 16;
  ((void (*)(__int128 *))off_24CA7EDF8[v42])(&v52);
LABEL_63:
  v44 = v47;
  result = v48[0];
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
  *(_QWORD *)&v45 = off_24CA7DA30;
  if ((_DWORD)v44 != -1)
    ((void (*)(__int128 *, _QWORD *))off_24CA7EDC8[v44])(&v52, v46);
  return result;
}

uint64_t sub_21091E328(uint64_t a1)
{
  uint64_t v2[3];

  sub_21091D420(v2, a1);
  return v2[0];
}

double sub_21091E350@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21091D420((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_21091E3F0@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21091D63C((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_21091E490()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75050);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75050))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75058);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75058))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75060);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75060))
    {
LABEL_13:
      if (byte_254A753C7 < 0)
      {
        sub_2108B314C(&xmmword_254A75398, (void *)qword_254A753B0, unk_254A753B8);
      }
      else
      {
        xmmword_254A75398 = *(_OWORD *)&qword_254A753B0;
        unk_254A753A8 = unk_254A753C0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75398, &dword_21089F000);
      __cxa_guard_release(&qword_254A75058);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75068);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75068))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray8u>]", &qword_254A753C8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A753C8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75068);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75070);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75070))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75078);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75078))
      {
        if (byte_254A753E0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A753E0, *(unint64_t *)&byte_254A753E0[8]);
        else
          __p = *(std::string *)byte_254A753E0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A753F8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A753F8, &dword_21089F000);
        __cxa_guard_release(&qword_254A75078);
      }
      if (byte_254A7540F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A753F8, *((unint64_t *)&xmmword_254A753F8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A753F8;
        v18 = unk_254A75408;
      }
      sub_21090A970((char *)v17, (std::string *)&qword_254A753B0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A753B0, &dword_21089F000);
      __cxa_guard_release(&qword_254A75060);
      goto LABEL_13;
    }
    if (byte_254A753DF >= 0)
      v6 = byte_254A753DF;
    else
      v6 = unk_254A753D0;
    if (byte_254A753DF >= 0)
      v7 = &qword_254A753C8;
    else
      v7 = (uint64_t *)qword_254A753C8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A753E0[8] = v6;
      *(_QWORD *)&byte_254A753E0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A753E0 = v13;
    }
    else
    {
      v13 = byte_254A753E0;
      byte_254A753E0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A753E0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75070);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A753AF < 0)
  {
    sub_2108B314C(&xmmword_254A75380, (void *)xmmword_254A75398, *((unint64_t *)&xmmword_254A75398 + 1));
  }
  else
  {
    xmmword_254A75380 = xmmword_254A75398;
    unk_254A75390 = unk_254A753A8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75380, &dword_21089F000);
  __cxa_guard_release(&qword_254A75050);
LABEL_2:
  if (byte_254A75397 >= 0)
    return &xmmword_254A75380;
  else
    return (__int128 *)xmmword_254A75380;
}

void sub_21091E8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75060);
  __cxa_guard_abort(&qword_254A75058);
  __cxa_guard_abort(&qword_254A75050);
  _Unwind_Resume(a1);
}

void sub_21091E980(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75050);
  _Unwind_Resume(a1);
}

void sub_21091E998()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21091E9D4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21091F1C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21091F1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21091F210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21091F244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21091F258()
{
  return 65792;
}

_QWORD *sub_21091F264@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_21091F2A4(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DC70;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21091F308(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_210917334(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091F508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_21091F524(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24CA84E68;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_210917334(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24CA84E68;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_21091F734(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21091F750()
{
  return 2;
}

uint64_t (***sub_21091F758())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21091F7AC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45[8];
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  _QWORD v52[2];
  __int128 v53;
  uint64_t v54;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v14;
    v51 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v49 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v50);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v23;
    v51 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v49 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v5;
  v51 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v49 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21091F524((uint64_t)v45, a1);
  sub_21091F524((uint64_t)&v43, a1);
  v32 = (_QWORD *)operator new();
  v33 = v32;
  *v32 = off_24CA7E180;
  if (v48 <= 0x10)
    v34 = 16;
  else
    v34 = v48;
  v52[0] = v46;
  v52[1] = v47 | (unint64_t)(v34 << 32);
  sub_210917750((uint64_t)v32, (unsigned int *)v52);
  v53 = v43;
  v54 = v44;
  sub_210917978((uint64_t)v33, (uint64_t *)&v53);
  *v33 = off_24CA7E180;
  *a2 = v33;
  if (!v50)
    goto LABEL_48;
  v36 = *v50;
  v35 = (std::__shared_weak_count *)v50[1];
  if (!v35)
    goto LABEL_46;
  v37 = (unint64_t *)&v35->__shared_owners_;
  do
    v38 = __ldxr(v37);
  while (__stxr(v38 + 1, v37));
  do
    v39 = __ldaxr(v37);
  while (__stlxr(v39 - 1, v37));
  if (v39)
  {
LABEL_46:
    if (!v36)
      goto LABEL_48;
    goto LABEL_47;
  }
  ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
  std::__shared_weak_count::__release_weak(v35);
  if (v36)
LABEL_47:
    sub_2109E43F4((uint64_t)v50);
LABEL_48:
  v49 = &off_24CA84E68;
  v40 = v51;
  if (v51)
  {
    v41 = (unint64_t *)&v51->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
}

void sub_21091FB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  va_list va;

  va_start(va, a8);
  *(_QWORD *)v8 = off_24CA7DC70;
  v11 = *(unsigned int *)(v8 + 40);
  if ((_DWORD)v11 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v11])(v9 - 33, v8 + 16);
  *(_DWORD *)(v8 + 40) = -1;
  MEMORY[0x212BCC6FC](v8, 0x10A3C40EE3858B8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091FC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21091FC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21091FC34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21091FC74(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD v46[3];
  unsigned int v47;
  double v48[3];
  __int128 v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  uint64_t v53;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7EC48, 0);
  if (!v4)
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v52, lpsrc, 2);
    v16 = v52;
    v17 = *(_QWORD *)(v52 + 16);
    v45 = *(_OWORD *)v52;
    v46[0] = v17;
    *(_QWORD *)&v52 = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v18);
    sub_21091F308((uint64_t *)&v52, a1);
    sub_2108FFBBC((uint64_t *)&v45, (uint64_t)&v52);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v21 = __ldxr(p_shared_owners);
      while (__stxr(v21 + 1, p_shared_owners));
    }
    if (v8)
    {
      v23 = *v8;
      v22 = (std::__shared_weak_count *)v8[1];
      if (v22)
      {
        v24 = (unint64_t *)&v22->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if (v23)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v27 = (unint64_t *)&v7->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
    }
    if (v8)
    {
      v30 = *v8;
      v29 = (std::__shared_weak_count *)v8[1];
      if (v29)
      {
        v31 = (unint64_t *)&v29->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (v30)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_21091F524((uint64_t)&v49, v5);
  *(_QWORD *)&v45 = off_24CA7E180;
  if (HIDWORD(v50) <= 0x10)
    v34 = 16;
  else
    v34 = HIDWORD(v50);
  v51[0] = *((_QWORD *)&v49 + 1);
  v51[1] = v50 | (unint64_t)(v34 << 32);
  sub_210917750((uint64_t)&v45, (unsigned int *)v51);
  v52 = v49;
  v53 = v50;
  sub_210917978((uint64_t)&v45, (uint64_t *)&v52);
  *(_QWORD *)&v45 = off_24CA7E180;
  if (!v8)
    goto LABEL_53;
  v36 = *v8;
  v35 = (std::__shared_weak_count *)v8[1];
  if (v35)
  {
    v37 = (unint64_t *)&v35->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
      if (!v36)
        goto LABEL_53;
      goto LABEL_52;
    }
  }
  if (v36)
LABEL_52:
    sub_2109E43F4((uint64_t)v8);
LABEL_53:
  if (v7)
  {
    v40 = (unint64_t *)&v7->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v42 = v47;
  *(_DWORD *)(a1 + 8) = DWORD2(v45);
  v43 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v43 == -1)
  {
    if ((_DWORD)v42 == -1)
    {
      result = v48[0];
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
      return result;
    }
  }
  else if ((_DWORD)v42 == -1)
  {
    ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v43])(&v52, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_63;
  }
  *(_QWORD *)&v52 = a1 + 16;
  ((void (*)(__int128 *))off_24CA7EDF8[v42])(&v52);
LABEL_63:
  v44 = v47;
  result = v48[0];
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
  *(_QWORD *)&v45 = off_24CA7DC70;
  if ((_DWORD)v44 != -1)
    ((void (*)(__int128 *, _QWORD *))off_24CA7EDC8[v44])(&v52, v46);
  return result;
}

uint64_t sub_210920208(uint64_t a1)
{
  uint64_t v2[3];

  sub_21091F308(v2, a1);
  return v2[0];
}

double sub_210920230@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 2
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21091F308((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_2109202D0@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 2
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21091F524((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_210920370()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75080);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75080))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75088);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75088))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75090);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75090))
    {
LABEL_13:
      if (byte_254A75457 < 0)
      {
        sub_2108B314C(&xmmword_254A75428, (void *)qword_254A75440, unk_254A75448);
      }
      else
      {
        xmmword_254A75428 = *(_OWORD *)&qword_254A75440;
        unk_254A75438 = unk_254A75450;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75428, &dword_21089F000);
      __cxa_guard_release(&qword_254A75088);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75098);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75098))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray16u>]", &qword_254A75458);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75458, &dword_21089F000);
      __cxa_guard_release(&qword_254A75098);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A750A0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A750A0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A750A8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A750A8))
      {
        if (byte_254A75470[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75470, *(unint64_t *)&byte_254A75470[8]);
        else
          __p = *(std::string *)byte_254A75470;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75488);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75488, &dword_21089F000);
        __cxa_guard_release(&qword_254A750A8);
      }
      if (byte_254A7549F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75488, *((unint64_t *)&xmmword_254A75488 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75488;
        v18 = unk_254A75498;
      }
      sub_21090AC90((char *)v17, (std::string *)&qword_254A75440);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75440, &dword_21089F000);
      __cxa_guard_release(&qword_254A75090);
      goto LABEL_13;
    }
    if (byte_254A7546F >= 0)
      v6 = byte_254A7546F;
    else
      v6 = unk_254A75460;
    if (byte_254A7546F >= 0)
      v7 = &qword_254A75458;
    else
      v7 = (uint64_t *)qword_254A75458;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75470[8] = v6;
      *(_QWORD *)&byte_254A75470[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75470 = v13;
    }
    else
    {
      v13 = byte_254A75470;
      byte_254A75470[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75470, &dword_21089F000);
    __cxa_guard_release(&qword_254A750A0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7543F < 0)
  {
    sub_2108B314C(&xmmword_254A75410, (void *)xmmword_254A75428, *((unint64_t *)&xmmword_254A75428 + 1));
  }
  else
  {
    xmmword_254A75410 = xmmword_254A75428;
    unk_254A75420 = unk_254A75438;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75410, &dword_21089F000);
  __cxa_guard_release(&qword_254A75080);
LABEL_2:
  if (byte_254A75427 >= 0)
    return &xmmword_254A75410;
  else
    return (__int128 *)xmmword_254A75410;
}

void sub_2109207C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75090);
  __cxa_guard_abort(&qword_254A75088);
  __cxa_guard_abort(&qword_254A75080);
  _Unwind_Resume(a1);
}

void sub_210920860(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75080);
  _Unwind_Resume(a1);
}

void sub_210920878()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_2109208B4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_2109210A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_2109210DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_2109210F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210921124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210921138()
{
  return 65792;
}

_QWORD *sub_210921144@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_210921184(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DE20;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_2109211E8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_2109192E0(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_2109213E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210921404(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24CA84E68;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_2109192E0(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24CA84E68;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_210921614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_210921630()
{
  return 3;
}

uint64_t (***sub_210921638())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21092168C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45[8];
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  _QWORD v52[2];
  __int128 v53;
  uint64_t v54;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v14;
    v51 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v49 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v50);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v23;
    v51 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v49 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v5;
  v51 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v49 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210921404((uint64_t)v45, a1);
  sub_210921404((uint64_t)&v43, a1);
  v32 = (_QWORD *)operator new();
  v33 = v32;
  *v32 = off_24CA7E210;
  if (v48 <= 0x10)
    v34 = 16;
  else
    v34 = v48;
  v52[0] = v46;
  v52[1] = v47 | (unint64_t)(v34 << 32);
  sub_210919714((uint64_t)v32, (unsigned int *)v52);
  v53 = v43;
  v54 = v44;
  sub_21091993C((uint64_t)v33, (uint64_t)&v53);
  *v33 = off_24CA7E210;
  *a2 = v33;
  if (!v50)
    goto LABEL_48;
  v36 = *v50;
  v35 = (std::__shared_weak_count *)v50[1];
  if (!v35)
    goto LABEL_46;
  v37 = (unint64_t *)&v35->__shared_owners_;
  do
    v38 = __ldxr(v37);
  while (__stxr(v38 + 1, v37));
  do
    v39 = __ldaxr(v37);
  while (__stlxr(v39 - 1, v37));
  if (v39)
  {
LABEL_46:
    if (!v36)
      goto LABEL_48;
    goto LABEL_47;
  }
  ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
  std::__shared_weak_count::__release_weak(v35);
  if (v36)
LABEL_47:
    sub_2109E43F4((uint64_t)v50);
LABEL_48:
  v49 = &off_24CA84E68;
  v40 = v51;
  if (v51)
  {
    v41 = (unint64_t *)&v51->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
}

void sub_210921A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  va_list va;

  va_start(va, a8);
  *(_QWORD *)v8 = off_24CA7DE20;
  v11 = *(unsigned int *)(v8 + 40);
  if ((_DWORD)v11 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v11])(v9 - 33, v8 + 16);
  *(_DWORD *)(v8 + 40) = -1;
  MEMORY[0x212BCC6FC](v8, 0x10A3C40EE3858B8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210921AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210921B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210921B14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210921B54(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD v46[3];
  unsigned int v47;
  double v48[3];
  __int128 v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  uint64_t v53;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7EC60, 0);
  if (!v4)
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v52, lpsrc, 3);
    v16 = v52;
    v17 = *(_QWORD *)(v52 + 16);
    v45 = *(_OWORD *)v52;
    v46[0] = v17;
    *(_QWORD *)&v52 = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v18);
    sub_2109211E8((uint64_t *)&v52, a1);
    *(_QWORD *)&v49 = &v45;
    *((_QWORD *)&v49 + 1) = &v52;
    *(_QWORD *)&result = sub_2109014B4((uint64_t *)&v49);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v21 = __ldxr(p_shared_owners);
      while (__stxr(v21 + 1, p_shared_owners));
    }
    if (v8)
    {
      v23 = *v8;
      v22 = (std::__shared_weak_count *)v8[1];
      if (v22)
      {
        v24 = (unint64_t *)&v22->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if (v23)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v27 = (unint64_t *)&v7->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
    }
    if (v8)
    {
      v30 = *v8;
      v29 = (std::__shared_weak_count *)v8[1];
      if (v29)
      {
        v31 = (unint64_t *)&v29->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (v30)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_210921404((uint64_t)&v49, v5);
  *(_QWORD *)&v45 = off_24CA7E210;
  if (HIDWORD(v50) <= 0x10)
    v34 = 16;
  else
    v34 = HIDWORD(v50);
  v51[0] = *((_QWORD *)&v49 + 1);
  v51[1] = v50 | (unint64_t)(v34 << 32);
  sub_210919714((uint64_t)&v45, (unsigned int *)v51);
  v52 = v49;
  v53 = v50;
  sub_21091993C((uint64_t)&v45, (uint64_t)&v52);
  *(_QWORD *)&v45 = off_24CA7E210;
  if (!v8)
    goto LABEL_53;
  v36 = *v8;
  v35 = (std::__shared_weak_count *)v8[1];
  if (v35)
  {
    v37 = (unint64_t *)&v35->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
      if (!v36)
        goto LABEL_53;
      goto LABEL_52;
    }
  }
  if (v36)
LABEL_52:
    sub_2109E43F4((uint64_t)v8);
LABEL_53:
  if (v7)
  {
    v40 = (unint64_t *)&v7->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v42 = v47;
  *(_DWORD *)(a1 + 8) = DWORD2(v45);
  v43 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v43 == -1)
  {
    if ((_DWORD)v42 == -1)
    {
      result = v48[0];
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
      return result;
    }
  }
  else if ((_DWORD)v42 == -1)
  {
    ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v43])(&v52, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_63;
  }
  *(_QWORD *)&v52 = a1 + 16;
  ((void (*)(__int128 *))off_24CA7EDF8[v42])(&v52);
LABEL_63:
  v44 = v47;
  result = v48[0];
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
  *(_QWORD *)&v45 = off_24CA7DE20;
  if ((_DWORD)v44 != -1)
    ((void (*)(__int128 *, _QWORD *))off_24CA7EDC8[v44])(&v52, v46);
  return result;
}

uint64_t sub_2109220F0(uint64_t a1)
{
  uint64_t v2[3];

  sub_2109211E8(v2, a1);
  return v2[0];
}

double sub_210922118@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 3
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109211E8((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_2109221B8@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 3
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210921404((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_210922258()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A750B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A750B0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A750B8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A750B8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A750C0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A750C0))
    {
LABEL_13:
      if (byte_254A754E7 < 0)
      {
        sub_2108B314C(&xmmword_254A754B8, (void *)qword_254A754D0, unk_254A754D8);
      }
      else
      {
        xmmword_254A754B8 = *(_OWORD *)&qword_254A754D0;
        unk_254A754C8 = unk_254A754E0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A754B8, &dword_21089F000);
      __cxa_guard_release(&qword_254A750B8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A750C8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A750C8))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray16f>]", &qword_254A754E8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A754E8, &dword_21089F000);
      __cxa_guard_release(&qword_254A750C8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A750D0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A750D0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A750D8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A750D8))
      {
        if (byte_254A75500[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75500, *(unint64_t *)&byte_254A75500[8]);
        else
          __p = *(std::string *)byte_254A75500;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75518);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75518, &dword_21089F000);
        __cxa_guard_release(&qword_254A750D8);
      }
      if (byte_254A7552F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75518, *((unint64_t *)&xmmword_254A75518 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75518;
        v18 = unk_254A75528;
      }
      sub_21090ADB8((char *)v17, (std::string *)&qword_254A754D0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A754D0, &dword_21089F000);
      __cxa_guard_release(&qword_254A750C0);
      goto LABEL_13;
    }
    if (byte_254A754FF >= 0)
      v6 = byte_254A754FF;
    else
      v6 = unk_254A754F0;
    if (byte_254A754FF >= 0)
      v7 = &qword_254A754E8;
    else
      v7 = (uint64_t *)qword_254A754E8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75500[8] = v6;
      *(_QWORD *)&byte_254A75500[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75500 = v13;
    }
    else
    {
      v13 = byte_254A75500;
      byte_254A75500[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75500, &dword_21089F000);
    __cxa_guard_release(&qword_254A750D0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A754CF < 0)
  {
    sub_2108B314C(&xmmword_254A754A0, (void *)xmmword_254A754B8, *((unint64_t *)&xmmword_254A754B8 + 1));
  }
  else
  {
    xmmword_254A754A0 = xmmword_254A754B8;
    unk_254A754B0 = unk_254A754C8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A754A0, &dword_21089F000);
  __cxa_guard_release(&qword_254A750B0);
LABEL_2:
  if (byte_254A754B7 >= 0)
    return &xmmword_254A754A0;
  else
    return (__int128 *)xmmword_254A754A0;
}

void sub_2109226AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A750C0);
  __cxa_guard_abort(&qword_254A750B8);
  __cxa_guard_abort(&qword_254A750B0);
  _Unwind_Resume(a1);
}

void sub_210922748(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A750B0);
  _Unwind_Resume(a1);
}

void sub_210922760()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21092279C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_210922F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210922FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210922FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21092300C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210923020()
{
  return 65792;
}

_QWORD *sub_21092302C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_21092306C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DFD0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_2109230D0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t (**v26)();
  uint64_t v27;
  std::__shared_weak_count *v28;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v26 = &off_24CA84E68;
          v27 = v10;
          v28 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_21091B350(a1, (uint64_t)&v23);
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v26 = &off_24CA84E68;
          v20 = v28;
          if (v28)
          {
            v21 = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *a1 = 0;
  a1[1] = v16;
  a1[2] = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_2109232D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_2109232EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_39;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v28 = &off_24CA84E68;
          v29 = v10;
          v30 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v24 = v10;
            v25 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v24 = v10;
            v25 = 0;
          }
          v23 = &off_24CA84E68;
          sub_21091B350(&v26, (uint64_t)&v23);
          *(_QWORD *)a1 = v26;
          *(_OWORD *)(a1 + 8) = v27;
          v23 = &off_24CA84E68;
          if (v11)
          {
            v18 = (unint64_t *)&v11->__shared_owners_;
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v28 = &off_24CA84E68;
          v20 = v30;
          if (v30)
          {
            v21 = (unint64_t *)&v30->__shared_owners_;
            do
              v22 = __ldaxr(v21);
            while (__stlxr(v22 - 1, v21));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          return;
        }
LABEL_39:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 52))
    v15 = *(_DWORD *)(a2 + 48) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 48);
  if (v15)
    v16 = 0;
  v17 = 0x100000000;
  if (v16 > 0x100000000)
    v17 = v16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = ((_DWORD)v16 != 0) | (unint64_t)(v17 << 32);
  if (HIDWORD(v16) * (_DWORD)v17 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
}

void sub_2109234FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_210923518()
{
  return 4;
}

uint64_t (***sub_210923520())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_210923574(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45[8];
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t (**v49)();
  uint64_t *v50;
  std::__shared_weak_count *v51;
  _QWORD v52[2];
  __int128 v53;
  uint64_t v54;

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v14;
    v51 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v49 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v50);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v50 = v23;
    v51 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v49 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v50 = v5;
  v51 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v49 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_2109232EC((uint64_t)v45, a1);
  sub_2109232EC((uint64_t)&v43, a1);
  v32 = (_QWORD *)operator new();
  v33 = v32;
  *v32 = off_24CA7E2A0;
  if (v48 <= 8)
    v34 = 8;
  else
    v34 = v48;
  v52[0] = v46;
  v52[1] = v47 | (unint64_t)(v34 << 32);
  sub_21091B784((uint64_t)v32, (unsigned int *)v52);
  v53 = v43;
  v54 = v44;
  sub_21091B9AC((uint64_t)v33, (uint64_t)&v53);
  *v33 = off_24CA7E2A0;
  *a2 = v33;
  if (!v50)
    goto LABEL_48;
  v36 = *v50;
  v35 = (std::__shared_weak_count *)v50[1];
  if (!v35)
    goto LABEL_46;
  v37 = (unint64_t *)&v35->__shared_owners_;
  do
    v38 = __ldxr(v37);
  while (__stxr(v38 + 1, v37));
  do
    v39 = __ldaxr(v37);
  while (__stlxr(v39 - 1, v37));
  if (v39)
  {
LABEL_46:
    if (!v36)
      goto LABEL_48;
    goto LABEL_47;
  }
  ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
  std::__shared_weak_count::__release_weak(v35);
  if (v36)
LABEL_47:
    sub_2109E43F4((uint64_t)v50);
LABEL_48:
  v49 = &off_24CA84E68;
  v40 = v51;
  if (v51)
  {
    v41 = (unint64_t *)&v51->__shared_owners_;
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
}

void sub_210923964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  va_list va;

  va_start(va, a8);
  *(_QWORD *)v8 = off_24CA7DFD0;
  v11 = *(unsigned int *)(v8 + 40);
  if ((_DWORD)v11 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v11])(v9 - 33, v8 + 16);
  *(_DWORD *)(v8 + 40) = -1;
  MEMORY[0x212BCC6FC](v8, 0x10A3C40EE3858B8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109239D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109239E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2109239FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210923A3C(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD v46[3];
  unsigned int v47;
  double v48[3];
  __int128 v49;
  uint64_t v50;
  _QWORD v51[2];
  __int128 v52;
  uint64_t v53;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7EC78, 0);
  if (!v4)
  {
    (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v52, lpsrc, 4);
    v16 = v52;
    v17 = *(_QWORD *)(v52 + 16);
    v45 = *(_OWORD *)v52;
    v46[0] = v17;
    *(_QWORD *)&v52 = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v18);
    sub_2109230D0((uint64_t *)&v52, a1);
    *(float *)&result = sub_2109030FC((uint64_t)&v45, (uint64_t)&v52);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v21 = __ldxr(p_shared_owners);
      while (__stxr(v21 + 1, p_shared_owners));
    }
    if (v8)
    {
      v23 = *v8;
      v22 = (std::__shared_weak_count *)v8[1];
      if (v22)
      {
        v24 = (unint64_t *)&v22->__shared_owners_;
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
        do
          v26 = __ldaxr(v24);
        while (__stlxr(v26 - 1, v24));
        if (!v26)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if (v23)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v27 = (unint64_t *)&v7->__shared_owners_;
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 1, v27));
    }
    if (v8)
    {
      v30 = *v8;
      v29 = (std::__shared_weak_count *)v8[1];
      if (v29)
      {
        v31 = (unint64_t *)&v29->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
        do
          v33 = __ldaxr(v31);
        while (__stlxr(v33 - 1, v31));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      if (v30)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_2109232EC((uint64_t)&v49, v5);
  *(_QWORD *)&v45 = off_24CA7E2A0;
  if (HIDWORD(v50) <= 8)
    v34 = 8;
  else
    v34 = HIDWORD(v50);
  v51[0] = *((_QWORD *)&v49 + 1);
  v51[1] = v50 | (unint64_t)(v34 << 32);
  sub_21091B784((uint64_t)&v45, (unsigned int *)v51);
  v52 = v49;
  v53 = v50;
  sub_21091B9AC((uint64_t)&v45, (uint64_t)&v52);
  *(_QWORD *)&v45 = off_24CA7E2A0;
  if (!v8)
    goto LABEL_53;
  v36 = *v8;
  v35 = (std::__shared_weak_count *)v8[1];
  if (v35)
  {
    v37 = (unint64_t *)&v35->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldaxr(v37);
    while (__stlxr(v39 - 1, v37));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
      if (!v36)
        goto LABEL_53;
      goto LABEL_52;
    }
  }
  if (v36)
LABEL_52:
    sub_2109E43F4((uint64_t)v8);
LABEL_53:
  if (v7)
  {
    v40 = (unint64_t *)&v7->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v42 = v47;
  *(_DWORD *)(a1 + 8) = DWORD2(v45);
  v43 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v43 == -1)
  {
    if ((_DWORD)v42 == -1)
    {
      result = v48[0];
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
      return result;
    }
  }
  else if ((_DWORD)v42 == -1)
  {
    ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v43])(&v52, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_63;
  }
  *(_QWORD *)&v52 = a1 + 16;
  ((void (*)(__int128 *))off_24CA7EDF8[v42])(&v52);
LABEL_63:
  v44 = v47;
  result = v48[0];
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v48;
  *(_QWORD *)&v45 = off_24CA7DFD0;
  if ((_DWORD)v44 != -1)
    ((void (*)(__int128 *, _QWORD *))off_24CA7EDC8[v44])(&v52, v46);
  return result;
}

uint64_t sub_210923FD0(uint64_t a1)
{
  uint64_t v2[3];

  sub_2109230D0(v2, a1);
  return v2[0];
}

double sub_210923FF8@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 4
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109230D0((uint64_t *)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

double sub_210924098@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;

  if (a2 != 4
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109232EC((uint64_t)&v7, a1);
  v5 = operator new();
  result = *(double *)&v7;
  *(_OWORD *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v8;
  *a3 = v5;
  return result;
}

__int128 *sub_210924138()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A750E0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A750E0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A750E8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A750E8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A750F0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A750F0))
    {
LABEL_13:
      if (byte_254A75577 < 0)
      {
        sub_2108B314C(&xmmword_254A75548, (void *)qword_254A75560, unk_254A75568);
      }
      else
      {
        xmmword_254A75548 = *(_OWORD *)&qword_254A75560;
        unk_254A75558 = unk_254A75570;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75548, &dword_21089F000);
      __cxa_guard_release(&qword_254A750E8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A750F8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A750F8))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Gray32f>]", &qword_254A75578);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75578, &dword_21089F000);
      __cxa_guard_release(&qword_254A750F8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75100);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75100))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75108);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75108))
      {
        if (byte_254A75590[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75590, *(unint64_t *)&byte_254A75590[8]);
        else
          __p = *(std::string *)byte_254A75590;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A755A8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A755A8, &dword_21089F000);
        __cxa_guard_release(&qword_254A75108);
      }
      if (byte_254A755BF < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A755A8, *((unint64_t *)&xmmword_254A755A8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A755A8;
        v18 = unk_254A755B8;
      }
      sub_21090AEE0((char *)v17, (std::string *)&qword_254A75560);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75560, &dword_21089F000);
      __cxa_guard_release(&qword_254A750F0);
      goto LABEL_13;
    }
    if (byte_254A7558F >= 0)
      v6 = byte_254A7558F;
    else
      v6 = unk_254A75580;
    if (byte_254A7558F >= 0)
      v7 = &qword_254A75578;
    else
      v7 = (uint64_t *)qword_254A75578;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75590[8] = v6;
      *(_QWORD *)&byte_254A75590[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75590 = v13;
    }
    else
    {
      v13 = byte_254A75590;
      byte_254A75590[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75590, &dword_21089F000);
    __cxa_guard_release(&qword_254A75100);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7555F < 0)
  {
    sub_2108B314C(&xmmword_254A75530, (void *)xmmword_254A75548, *((unint64_t *)&xmmword_254A75548 + 1));
  }
  else
  {
    xmmword_254A75530 = xmmword_254A75548;
    unk_254A75540 = unk_254A75558;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75530, &dword_21089F000);
  __cxa_guard_release(&qword_254A750E0);
LABEL_2:
  if (byte_254A75547 >= 0)
    return &xmmword_254A75530;
  else
    return (__int128 *)xmmword_254A75530;
}

void sub_21092458C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A750F0);
  __cxa_guard_abort(&qword_254A750E8);
  __cxa_guard_abort(&qword_254A750E0);
  _Unwind_Resume(a1);
}

void sub_210924628(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A750E0);
  _Unwind_Resume(a1);
}

void sub_210924640()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21092467C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_210924E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210924EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210924EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210924EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210924F00()
{
  return 65792;
}

_QWORD *sub_210924F0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_210924F4C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  uint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD v59[3];
  uint64_t (**v60)();
  uint64_t *v61;
  std::__shared_weak_count *v62;
  size_t v63[2];
  _BYTE v64[48];
  uint64_t v65;

  v65 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E330;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  *(_DWORD *)v64 = 2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v64[4] = v6;
  v53 = *(_QWORD *)v64;
  v54 = HIDWORD(v6);
  *(_DWORD *)v64 = 1;
  *(_QWORD *)&v64[4] = v4 | (v5 << 32);
  v55 = *(_QWORD *)v64;
  v56 = v5;
  v57 = v6;
  v58 = *(_QWORD *)&v64[4];
  v51 = a3[1];
  v52 = a3[2];
  v50 = *a3;
  sub_210914078(a1, (__int128 *)&v53);
  v59[0] = v50;
  v59[1] = v51;
  v59[2] = v52;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_69;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_66;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_66;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_66;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v61 = v32;
    v62 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v60 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v61 = v23;
    v62 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v60 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_69:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v61 = v14;
  v62 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v60 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v61);
  }
LABEL_53:
  sub_210914340((uint64_t)v64, a1);
  v63[0] = (size_t)v59;
  v63[1] = (size_t)v64;
  sub_2108FEAD0(v63);
  if (v61)
  {
    v42 = *v61;
    v41 = (std::__shared_weak_count *)v61[1];
    if (v41)
    {
      v43 = (unint64_t *)&v41->__shared_owners_;
      do
        v44 = __ldxr(v43);
      while (__stxr(v44 + 1, v43));
      do
        v45 = __ldaxr(v43);
      while (__stlxr(v45 - 1, v43));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
        if (!v42)
          goto LABEL_61;
        goto LABEL_60;
      }
    }
    if (v42)
LABEL_60:
      sub_2109E44E0((uint64_t)v61);
  }
LABEL_61:
  v60 = &off_24CA84E68;
  v46 = v62;
  if (v62)
  {
    v47 = (unint64_t *)&v62->__shared_owners_;
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
LABEL_66:
  *(_QWORD *)a1 = off_24CA7E330;
  return a1;
}

void sub_210925320(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7DAC0;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_210925440(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DAC0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_2109254A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210913CB8(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_2109256CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2109256E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210913CB8((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 2;
  *(_QWORD *)&v33[4] = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 2);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210925930(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21092594C()
{
  return 5;
}

uint64_t (***sub_210925954())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_2109259A8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_2109256E8((uint64_t)v42, a1);
  sub_2109256E8((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_210924F4C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_210925D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210925D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210925DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210925DC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210925E00(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7EC90, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 5);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_2109254A4((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    sub_2108FEAD0((size_t *)v56);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_2109256E8((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_210924F4C((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_2109E43F4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24CA7EDC8[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24CA7EDF8[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24CA7DAC0;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24CA7EDC8[v47])(v57, &v51);
  return result;
}

uint64_t sub_210926314(uint64_t a1)
{
  _QWORD v2[6];

  sub_2109254A4((uint64_t)v2, a1);
  return v2[0];
}

double sub_21092633C@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 5
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109254A4((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_2109263DC@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 5
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109256E8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21092647C()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75110);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75110))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75118);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75118))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75120);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75120))
    {
LABEL_13:
      if (byte_254A75607 < 0)
      {
        sub_2108B314C(&xmmword_254A755D8, (void *)qword_254A755F0, unk_254A755F8);
      }
      else
      {
        xmmword_254A755D8 = *(_OWORD *)&qword_254A755F0;
        unk_254A755E8 = unk_254A75600;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A755D8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75118);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75128);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75128))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Two8u>]", &qword_254A75608);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75608, &dword_21089F000);
      __cxa_guard_release(&qword_254A75128);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75130);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75130))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75138);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75138))
      {
        if (byte_254A75620[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75620, *(unint64_t *)&byte_254A75620[8]);
        else
          __p = *(std::string *)byte_254A75620;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75638);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75638, &dword_21089F000);
        __cxa_guard_release(&qword_254A75138);
      }
      if (byte_254A7564F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75638, *((unint64_t *)&xmmword_254A75638 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75638;
        v18 = unk_254A75648;
      }
      sub_21090B008((char *)v17, (std::string *)&qword_254A755F0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A755F0, &dword_21089F000);
      __cxa_guard_release(&qword_254A75120);
      goto LABEL_13;
    }
    if (byte_254A7561F >= 0)
      v6 = byte_254A7561F;
    else
      v6 = unk_254A75610;
    if (byte_254A7561F >= 0)
      v7 = &qword_254A75608;
    else
      v7 = (uint64_t *)qword_254A75608;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75620[8] = v6;
      *(_QWORD *)&byte_254A75620[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75620 = v13;
    }
    else
    {
      v13 = byte_254A75620;
      byte_254A75620[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75620, &dword_21089F000);
    __cxa_guard_release(&qword_254A75130);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A755EF < 0)
  {
    sub_2108B314C(&xmmword_254A755C0, (void *)xmmword_254A755D8, *((unint64_t *)&xmmword_254A755D8 + 1));
  }
  else
  {
    xmmword_254A755C0 = xmmword_254A755D8;
    unk_254A755D0 = unk_254A755E8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A755C0, &dword_21089F000);
  __cxa_guard_release(&qword_254A75110);
LABEL_2:
  if (byte_254A755D7 >= 0)
    return &xmmword_254A755C0;
  else
    return (__int128 *)xmmword_254A755C0;
}

void sub_2109268D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75120);
  __cxa_guard_abort(&qword_254A75118);
  __cxa_guard_abort(&qword_254A75110);
  _Unwind_Resume(a1);
}

void sub_21092696C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75110);
  _Unwind_Resume(a1);
}

void sub_210926984()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_2109269C0(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_2109271B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_2109271E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_2109271FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210927230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210927244()
{
  return 65792;
}

_QWORD *sub_210927250@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_210927290(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[3];
  uint64_t (**v61)();
  uint64_t *v62;
  std::__shared_weak_count *v63;
  uint64_t v64[2];
  _BYTE v65[48];
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E3C0;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x10)
    v5 = 16;
  else
    v5 = v5;
  *(_DWORD *)v65 = 2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v65[4] = v6;
  v54 = *(_QWORD *)v65;
  v55 = HIDWORD(v6);
  *(_DWORD *)v65 = 1;
  *(_QWORD *)&v65[4] = v4 | (v5 << 32);
  v56 = *(_QWORD *)v65;
  v57 = v5;
  v58 = v6;
  v59 = *(_QWORD *)&v65[4];
  v52 = a3[1];
  v53 = a3[2];
  v51 = *a3;
  sub_21091A484(a1, (__int128 *)&v54);
  v60[0] = v51;
  v60[1] = v52;
  v60[2] = v53;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_69;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_66;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_66;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_66;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v62 = v32;
    v63 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v61 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v62 = v23;
    v63 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v61 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_69:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v62 = v14;
  v63 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v61 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v62);
  }
LABEL_53:
  sub_21091A74C((uint64_t)v65, a1);
  v64[0] = (uint64_t)v60;
  v64[1] = (uint64_t)v65;
  v41.n128_u64[0] = sub_210901EE4(v64);
  if (v62)
  {
    v43 = *v62;
    v42 = (std::__shared_weak_count *)v62[1];
    if (v42)
    {
      v44 = (unint64_t *)&v42->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v42->__on_zero_shared)(v42, v41);
        std::__shared_weak_count::__release_weak(v42);
        if (!v43)
          goto LABEL_61;
        goto LABEL_60;
      }
    }
    if (v43)
LABEL_60:
      sub_2109E44E0((uint64_t)v62);
  }
LABEL_61:
  v61 = &off_24CA84E68;
  v47 = v63;
  if (v63)
  {
    v48 = (unint64_t *)&v63->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v47->__on_zero_shared)(v47, v41);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_66:
  *(_QWORD *)a1 = off_24CA7E3C0;
  return a1;
}

void sub_210927664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7DEB0;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_210927784(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DEB0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_2109277E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210919FD0(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210927A10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210927A2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210919FD0((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 2;
  *(_QWORD *)&v33[4] = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 2);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210927C74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_210927C90()
{
  return 7;
}

uint64_t (***sub_210927C98())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_210927CEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210927A2C((uint64_t)v42, a1);
  sub_210927A2C((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_210927290(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_2109280B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109280DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109280F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210928104@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210928144(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ECA8, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 7);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_2109277E8((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    *(_QWORD *)&result = sub_210901EE4((uint64_t *)v56);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_210927A2C((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_210927290((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_2109E43F4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24CA7EDC8[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24CA7EDF8[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24CA7DEB0;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24CA7EDC8[v47])(v57, &v51);
  return result;
}

uint64_t sub_210928658(uint64_t a1)
{
  _QWORD v2[6];

  sub_2109277E8((uint64_t)v2, a1);
  return v2[0];
}

double sub_210928680@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 7
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109277E8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_210928720@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 7
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210927A2C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_2109287C0()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75140);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75140))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75148);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75148))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75150);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75150))
    {
LABEL_13:
      if (byte_254A75697 < 0)
      {
        sub_2108B314C(&xmmword_254A75668, (void *)qword_254A75680, unk_254A75688);
      }
      else
      {
        xmmword_254A75668 = *(_OWORD *)&qword_254A75680;
        unk_254A75678 = unk_254A75690;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75668, &dword_21089F000);
      __cxa_guard_release(&qword_254A75148);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75158);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75158))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Two16f>]", &qword_254A75698);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75698, &dword_21089F000);
      __cxa_guard_release(&qword_254A75158);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75160);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75160))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75168);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75168))
      {
        if (byte_254A756B0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A756B0, *(unint64_t *)&byte_254A756B0[8]);
        else
          __p = *(std::string *)byte_254A756B0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A756C8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A756C8, &dword_21089F000);
        __cxa_guard_release(&qword_254A75168);
      }
      if (byte_254A756DF < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A756C8, *((unint64_t *)&xmmword_254A756C8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A756C8;
        v18 = unk_254A756D8;
      }
      sub_21090B130((char *)v17, (std::string *)&qword_254A75680);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75680, &dword_21089F000);
      __cxa_guard_release(&qword_254A75150);
      goto LABEL_13;
    }
    if (byte_254A756AF >= 0)
      v6 = byte_254A756AF;
    else
      v6 = unk_254A756A0;
    if (byte_254A756AF >= 0)
      v7 = &qword_254A75698;
    else
      v7 = (uint64_t *)qword_254A75698;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A756B0[8] = v6;
      *(_QWORD *)&byte_254A756B0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A756B0 = v13;
    }
    else
    {
      v13 = byte_254A756B0;
      byte_254A756B0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A756B0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75160);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7567F < 0)
  {
    sub_2108B314C(&xmmword_254A75650, (void *)xmmword_254A75668, *((unint64_t *)&xmmword_254A75668 + 1));
  }
  else
  {
    xmmword_254A75650 = xmmword_254A75668;
    unk_254A75660 = unk_254A75678;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75650, &dword_21089F000);
  __cxa_guard_release(&qword_254A75140);
LABEL_2:
  if (byte_254A75667 >= 0)
    return &xmmword_254A75650;
  else
    return (__int128 *)xmmword_254A75650;
}

void sub_210928C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75150);
  __cxa_guard_abort(&qword_254A75148);
  __cxa_guard_abort(&qword_254A75140);
  _Unwind_Resume(a1);
}

void sub_210928CB0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75140);
  _Unwind_Resume(a1);
}

void sub_210928CC8()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210928D04(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_2109294F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092952C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210929540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210929574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210929588()
{
  return 65792;
}

_QWORD *sub_210929594@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_2109295D4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[3];
  uint64_t (**v61)();
  uint64_t *v62;
  std::__shared_weak_count *v63;
  uint64_t v64[2];
  _BYTE v65[48];
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E450;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 8)
    v5 = 8;
  else
    v5 = v5;
  *(_DWORD *)v65 = 2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v65[4] = v6;
  v54 = *(_QWORD *)v65;
  v55 = HIDWORD(v6);
  *(_DWORD *)v65 = 1;
  *(_QWORD *)&v65[4] = v4 | (v5 << 32);
  v56 = *(_QWORD *)v65;
  v57 = v5;
  v58 = v6;
  v59 = *(_QWORD *)&v65[4];
  v52 = a3[1];
  v53 = a3[2];
  v51 = *a3;
  sub_21091C4F0(a1, (__int128 *)&v54);
  v60[0] = v51;
  v60[1] = v52;
  v60[2] = v53;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_69;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_66;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_66;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_66;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v62 = v32;
    v63 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v61 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v62 = v23;
    v63 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v61 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_69:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v62 = v14;
  v63 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v61 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v62);
  }
LABEL_53:
  sub_21091C7B8((uint64_t)v65, a1);
  v64[0] = (uint64_t)v60;
  v64[1] = (uint64_t)v65;
  v41.n128_f32[0] = sub_210903C68(v64);
  if (v62)
  {
    v43 = *v62;
    v42 = (std::__shared_weak_count *)v62[1];
    if (v42)
    {
      v44 = (unint64_t *)&v42->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v42->__on_zero_shared)(v42, v41);
        std::__shared_weak_count::__release_weak(v42);
        if (!v43)
          goto LABEL_61;
        goto LABEL_60;
      }
    }
    if (v43)
LABEL_60:
      sub_2109E44E0((uint64_t)v62);
  }
LABEL_61:
  v61 = &off_24CA84E68;
  v47 = v63;
  if (v63)
  {
    v48 = (unint64_t *)&v63->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v47->__on_zero_shared)(v47, v41);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_66:
  *(_QWORD *)a1 = off_24CA7E450;
  return a1;
}

void sub_2109299A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7E060;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_210929AC8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7E060;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_210929B2C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091C03C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 2;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(DWORD1(v30), 2);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210929D54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210929D70(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091C03C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 2;
  *(_QWORD *)&v33[4] = v16;
  v17 = 2 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x1FFFFFFFFLL | ((unint64_t)(v18 >> 1) << 33);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 2);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210929FB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_210929FD4()
{
  return 8;
}

uint64_t (***sub_210929FDC())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21092A030(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210929D70((uint64_t)v42, a1);
  sub_210929D70((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_2109295D4(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21092A3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21092A420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21092A434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21092A448@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21092A488(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ECC0, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 8);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_210929B2C((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    *(float *)&result = sub_210903C68((uint64_t *)v56);
    return result;
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_210929D70((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_2109295D4((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_2109E43F4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24CA7EDC8[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24CA7EDF8[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24CA7E060;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24CA7EDC8[v47])(v57, &v51);
  return result;
}

uint64_t sub_21092A99C(uint64_t a1)
{
  _QWORD v2[6];

  sub_210929B2C((uint64_t)v2, a1);
  return v2[0];
}

double sub_21092A9C4@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 8
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210929B2C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_21092AA64@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 8
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210929D70((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21092AB04()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75170);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75170))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75178);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75178))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75180);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75180))
    {
LABEL_13:
      if (byte_254A75727 < 0)
      {
        sub_2108B314C(&xmmword_254A756F8, (void *)qword_254A75710, unk_254A75718);
      }
      else
      {
        xmmword_254A756F8 = *(_OWORD *)&qword_254A75710;
        unk_254A75708 = unk_254A75720;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A756F8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75178);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75188);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75188))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Two32f>]", &qword_254A75728);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75728, &dword_21089F000);
      __cxa_guard_release(&qword_254A75188);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75190);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75190))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75198);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75198))
      {
        if (byte_254A75740[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75740, *(unint64_t *)&byte_254A75740[8]);
        else
          __p = *(std::string *)byte_254A75740;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75758);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75758, &dword_21089F000);
        __cxa_guard_release(&qword_254A75198);
      }
      if (byte_254A7576F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75758, *((unint64_t *)&xmmword_254A75758 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75758;
        v18 = unk_254A75768;
      }
      sub_21090B258((char *)v17, (std::string *)&qword_254A75710);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75710, &dword_21089F000);
      __cxa_guard_release(&qword_254A75180);
      goto LABEL_13;
    }
    if (byte_254A7573F >= 0)
      v6 = byte_254A7573F;
    else
      v6 = unk_254A75730;
    if (byte_254A7573F >= 0)
      v7 = &qword_254A75728;
    else
      v7 = (uint64_t *)qword_254A75728;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75740[8] = v6;
      *(_QWORD *)&byte_254A75740[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75740 = v13;
    }
    else
    {
      v13 = byte_254A75740;
      byte_254A75740[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75740, &dword_21089F000);
    __cxa_guard_release(&qword_254A75190);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7570F < 0)
  {
    sub_2108B314C(&xmmword_254A756E0, (void *)xmmword_254A756F8, *((unint64_t *)&xmmword_254A756F8 + 1));
  }
  else
  {
    xmmword_254A756E0 = xmmword_254A756F8;
    unk_254A756F0 = unk_254A75708;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A756E0, &dword_21089F000);
  __cxa_guard_release(&qword_254A75170);
LABEL_2:
  if (byte_254A756F7 >= 0)
    return &xmmword_254A756E0;
  else
    return (__int128 *)xmmword_254A756E0;
}

void sub_21092AF58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75180);
  __cxa_guard_abort(&qword_254A75178);
  __cxa_guard_abort(&qword_254A75170);
  _Unwind_Resume(a1);
}

void sub_21092AFF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75170);
  _Unwind_Resume(a1);
}

void sub_21092B00C()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21092B048(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21092B83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092B870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092B884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21092B8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21092B8CC()
{
  return 65792;
}

_QWORD *sub_21092B8D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

_QWORD *sub_21092B918(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a1 = off_24CA7E4E0;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  LODWORD(v17[0]) = 3;
  v6 = *(_QWORD *)(a2 + 24);
  DWORD1(v17[0]) = v6;
  v11 = *(_QWORD *)&v17[0];
  v12 = HIDWORD(v6);
  LODWORD(v17[0]) = 1;
  *(_QWORD *)((char *)v17 + 4) = v4 | (v5 << 32);
  v13 = *(_QWORD *)&v17[0];
  v14 = v5;
  v15 = v6;
  v16 = *(_QWORD *)((char *)v17 + 4);
  v9 = a3[1];
  v10 = a3[2];
  v8 = *a3;
  sub_210914944((uint64_t)a1, 17, (__int128 *)&v11);
  v17[0] = v8;
  v17[1] = v9;
  v17[2] = v10;
  sub_210915098((uint64_t)a1, v17);
  *a1 = off_24CA7E4E0;
  return a1;
}

void sub_21092BA04(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24CA7DB50;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v4])(v2 - 81, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_21092BA48(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_21092BA64(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DB50;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21092BAC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24CA84E68;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210914584(a1, (uint64_t)&v20);
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_21092BC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_21092BC94(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v27 = &off_24CA84E68;
  v28 = v10;
  v29 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210914584((uint64_t)&v23, (uint64_t)&v20);
  *(_QWORD *)a1 = v23;
  *(_OWORD *)(a1 + 8) = v24;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v26;
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v27 = &off_24CA84E68;
    v17 = v29;
    if (!v29)
      return;
  }
  else
  {
LABEL_23:
    v27 = &off_24CA84E68;
    v17 = v29;
    if (!v29)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_21092BE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2109DEB5C(&a9);
  sub_2109DEB5C((_QWORD *)(v9 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_21092BE80()
{
  return 17;
}

uint64_t (***sub_21092BE88())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21092BEDC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21092BC94((uint64_t)v42, a1);
  sub_21092BC94((uint64_t)v41, a1);
  v32 = (_QWORD *)operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_21092B918(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21092C2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21092C2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21092C2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21092C2F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21092C338(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ECD8, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_21092BC94((uint64_t)&v66, v5);
    v65[0] = v66;
    v65[1] = v67;
    v65[2] = v68;
    sub_21092B918(&v59, (uint64_t)&v66 + 8, v65);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v61);
    *(_DWORD *)(a1 + 8) = DWORD2(v59);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v62;
        v58 = v63;
        *(_OWORD *)(a1 + 48) = v62;
        *(_OWORD *)(a1 + 64) = v58;
        *(_QWORD *)(a1 + 80) = v64;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v66, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v66 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v66);
LABEL_62:
    v42 = DWORD2(v61);
    result = *(double *)&v62;
    v43 = v63;
    *(_OWORD *)(a1 + 48) = v62;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v64;
    *(_QWORD *)&v59 = off_24CA7DB50;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v66, &v60);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v66, lpsrc, 17);
  v17 = *(_OWORD *)(v66 + 16);
  v16 = *(_OWORD *)(v66 + 32);
  v59 = *(_OWORD *)v66;
  v60 = v17;
  v61 = v16;
  *(_QWORD *)&v66 = 0;
  MEMORY[0x212BCC6FC]();
  sub_21092BAC8((uint64_t)&v66, a1);
  *(_QWORD *)&v65[0] = &v59;
  *((_QWORD *)&v65[0] + 1) = &v66;
  if (DWORD1(v60) == 1 && DWORD1(v67) == 1)
  {
    sub_2108FEBEC((size_t *)v65);
  }
  else if (DWORD2(v59) && HIDWORD(v59) && (_DWORD)v60)
  {
    v44 = HIDWORD(v59) - 1;
    v45 = DWORD2(v60);
    v46 = DWORD2(v67);
    v47 = (_BYTE *)v59;
    v48 = (_BYTE *)v66;
    v49 = v60 - 1;
    if ((_DWORD)v60 != 1)
    {
      v50 = HIDWORD(v67);
      v51 = HIDWORD(v60);
      if (HIDWORD(v59) == 1)
      {
        do
        {
          *v48 = *v47;
          v48[1] = v47[1];
          v48[2] = v47[2];
          v47 += v51;
          v48 += v50;
          --v49;
        }
        while (v49);
      }
      else
      {
        v52 = 0;
        v53 = (_BYTE *)(v66 + 2);
        v54 = (_BYTE *)(v59 + 2);
        do
        {
          v55 = v54;
          v56 = v53;
          v57 = v44;
          do
          {
            *(v56 - 2) = *(v55 - 2);
            *(v56 - 1) = *(v55 - 1);
            *v56 = *v55;
            v56 += v46;
            v55 += v45;
            --v57;
          }
          while (v57);
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v47 += v51;
          v48 += v50;
          ++v52;
          v53 += v50;
          v54 += v51;
        }
        while (v52 != v49);
      }
    }
    for (; v44; --v44)
    {
      *v48 = *v47;
      v48[1] = v47[1];
      v48[2] = v47[2];
      v47 += v45;
      v48 += v46;
    }
    *v48 = *v47;
    v48[1] = v47[1];
    v48[2] = v47[2];
  }
  return result;
}

uint64_t sub_21092C98C(uint64_t a1)
{
  _QWORD v2[6];

  sub_21092BAC8((uint64_t)v2, a1);
  return v2[0];
}

double sub_21092C9B4@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 17
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21092BAC8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_21092CA54@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 17
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21092BC94((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21092CAF4()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A751A0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A751A0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A751A8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A751A8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A751B0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A751B0))
    {
LABEL_13:
      if (byte_254A757B7 < 0)
      {
        sub_2108B314C(&xmmword_254A75788, (void *)qword_254A757A0, unk_254A757A8);
      }
      else
      {
        xmmword_254A75788 = *(_OWORD *)&qword_254A757A0;
        unk_254A75798 = unk_254A757B0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75788, &dword_21089F000);
      __cxa_guard_release(&qword_254A751A8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A751B8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A751B8))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Bgr8u>]", &qword_254A757B8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A757B8, &dword_21089F000);
      __cxa_guard_release(&qword_254A751B8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A751C0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A751C0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A751C8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A751C8))
      {
        if (byte_254A757D0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A757D0, *(unint64_t *)&byte_254A757D0[8]);
        else
          __p = *(std::string *)byte_254A757D0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A757E8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A757E8, &dword_21089F000);
        __cxa_guard_release(&qword_254A751C8);
      }
      if (byte_254A757FF < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A757E8, *((unint64_t *)&xmmword_254A757E8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A757E8;
        v18 = unk_254A757F8;
      }
      sub_2109526EC((char *)v17, (std::string *)&qword_254A757A0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A757A0, &dword_21089F000);
      __cxa_guard_release(&qword_254A751B0);
      goto LABEL_13;
    }
    if (byte_254A757CF >= 0)
      v6 = byte_254A757CF;
    else
      v6 = unk_254A757C0;
    if (byte_254A757CF >= 0)
      v7 = &qword_254A757B8;
    else
      v7 = (uint64_t *)qword_254A757B8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A757D0[8] = v6;
      *(_QWORD *)&byte_254A757D0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A757D0 = v13;
    }
    else
    {
      v13 = byte_254A757D0;
      byte_254A757D0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A757D0, &dword_21089F000);
    __cxa_guard_release(&qword_254A751C0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7579F < 0)
  {
    sub_2108B314C(&xmmword_254A75770, (void *)xmmword_254A75788, *((unint64_t *)&xmmword_254A75788 + 1));
  }
  else
  {
    xmmword_254A75770 = xmmword_254A75788;
    unk_254A75780 = unk_254A75798;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75770, &dword_21089F000);
  __cxa_guard_release(&qword_254A751A0);
LABEL_2:
  if (byte_254A75787 >= 0)
    return &xmmword_254A75770;
  else
    return (__int128 *)xmmword_254A75770;
}

void sub_21092CF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A751B0);
  __cxa_guard_abort(&qword_254A751A8);
  __cxa_guard_abort(&qword_254A751A0);
  _Unwind_Resume(a1);
}

void sub_21092CFE4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A751A0);
  _Unwind_Resume(a1);
}

void sub_21092CFFC()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21092D038(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21092D82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092D860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092D874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21092D8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21092D8BC()
{
  return 65792;
}

_QWORD *sub_21092D8C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

_QWORD *sub_21092D908(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a1 = off_24CA7E570;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  LODWORD(v17[0]) = 3;
  v6 = *(_QWORD *)(a2 + 24);
  DWORD1(v17[0]) = v6;
  v11 = *(_QWORD *)&v17[0];
  v12 = HIDWORD(v6);
  LODWORD(v17[0]) = 1;
  *(_QWORD *)((char *)v17 + 4) = v4 | (v5 << 32);
  v13 = *(_QWORD *)&v17[0];
  v14 = v5;
  v15 = v6;
  v16 = *(_QWORD *)((char *)v17 + 4);
  v9 = a3[1];
  v10 = a3[2];
  v8 = *a3;
  sub_210914944((uint64_t)a1, 21, (__int128 *)&v11);
  v17[0] = v8;
  v17[1] = v9;
  v17[2] = v10;
  sub_210915098((uint64_t)a1, v17);
  *a1 = off_24CA7E570;
  return a1;
}

void sub_21092D9F4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24CA7DB50;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v4])(v2 - 81, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_21092DA38(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_21092DA54(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DB50;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21092DAB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24CA84E68;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210914584(a1, (uint64_t)&v20);
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_21092DC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_21092DC84(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v27 = &off_24CA84E68;
  v28 = v10;
  v29 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210914584((uint64_t)&v23, (uint64_t)&v20);
  *(_QWORD *)a1 = v23;
  *(_OWORD *)(a1 + 8) = v24;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v26;
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v27 = &off_24CA84E68;
    v17 = v29;
    if (!v29)
      return;
  }
  else
  {
LABEL_23:
    v27 = &off_24CA84E68;
    v17 = v29;
    if (!v29)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_21092DE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2109DEB5C(&a9);
  sub_2109DEB5C((_QWORD *)(v9 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_21092DE70()
{
  return 21;
}

uint64_t (***sub_21092DE78())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21092DECC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21092DC84((uint64_t)v42, a1);
  sub_21092DC84((uint64_t)v41, a1);
  v32 = (_QWORD *)operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_21092D908(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21092E294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21092E2C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21092E2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21092E2E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21092E328(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ECF0, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_21092DC84((uint64_t)&v66, v5);
    v65[0] = v66;
    v65[1] = v67;
    v65[2] = v68;
    sub_21092D908(&v59, (uint64_t)&v66 + 8, v65);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v61);
    *(_DWORD *)(a1 + 8) = DWORD2(v59);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v62;
        v58 = v63;
        *(_OWORD *)(a1 + 48) = v62;
        *(_OWORD *)(a1 + 64) = v58;
        *(_QWORD *)(a1 + 80) = v64;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v66, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v66 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v66);
LABEL_62:
    v42 = DWORD2(v61);
    result = *(double *)&v62;
    v43 = v63;
    *(_OWORD *)(a1 + 48) = v62;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v64;
    *(_QWORD *)&v59 = off_24CA7DB50;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v66, &v60);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v66, lpsrc, 21);
  v17 = *(_OWORD *)(v66 + 16);
  v16 = *(_OWORD *)(v66 + 32);
  v59 = *(_OWORD *)v66;
  v60 = v17;
  v61 = v16;
  *(_QWORD *)&v66 = 0;
  MEMORY[0x212BCC6FC]();
  sub_21092DAB8((uint64_t)&v66, a1);
  *(_QWORD *)&v65[0] = &v59;
  *((_QWORD *)&v65[0] + 1) = &v66;
  if (DWORD1(v60) == 1 && DWORD1(v67) == 1)
  {
    sub_2108FEBEC((size_t *)v65);
  }
  else if (DWORD2(v59) && HIDWORD(v59) && (_DWORD)v60)
  {
    v44 = HIDWORD(v59) - 1;
    v45 = DWORD2(v60);
    v46 = DWORD2(v67);
    v47 = (_BYTE *)v59;
    v48 = (_BYTE *)v66;
    v49 = v60 - 1;
    if ((_DWORD)v60 != 1)
    {
      v50 = HIDWORD(v67);
      v51 = HIDWORD(v60);
      if (HIDWORD(v59) == 1)
      {
        do
        {
          *v48 = *v47;
          v48[1] = v47[1];
          v48[2] = v47[2];
          v47 += v51;
          v48 += v50;
          --v49;
        }
        while (v49);
      }
      else
      {
        v52 = 0;
        v53 = (_BYTE *)(v66 + 2);
        v54 = (_BYTE *)(v59 + 2);
        do
        {
          v55 = v54;
          v56 = v53;
          v57 = v44;
          do
          {
            *(v56 - 2) = *(v55 - 2);
            *(v56 - 1) = *(v55 - 1);
            *v56 = *v55;
            v56 += v46;
            v55 += v45;
            --v57;
          }
          while (v57);
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v47 += v51;
          v48 += v50;
          ++v52;
          v53 += v50;
          v54 += v51;
        }
        while (v52 != v49);
      }
    }
    for (; v44; --v44)
    {
      *v48 = *v47;
      v48[1] = v47[1];
      v48[2] = v47[2];
      v47 += v45;
      v48 += v46;
    }
    *v48 = *v47;
    v48[1] = v47[1];
    v48[2] = v47[2];
  }
  return result;
}

uint64_t sub_21092E97C(uint64_t a1)
{
  _QWORD v2[6];

  sub_21092DAB8((uint64_t)v2, a1);
  return v2[0];
}

double sub_21092E9A4@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 21
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21092DAB8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_21092EA44@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 21
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21092DC84((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21092EAE4()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A751D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A751D0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A751D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A751D8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A751E0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A751E0))
    {
LABEL_13:
      if (byte_254A75847 < 0)
      {
        sub_2108B314C(&xmmword_254A75818, (void *)qword_254A75830, unk_254A75838);
      }
      else
      {
        xmmword_254A75818 = *(_OWORD *)&qword_254A75830;
        unk_254A75828 = unk_254A75840;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75818, &dword_21089F000);
      __cxa_guard_release(&qword_254A751D8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A751E8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A751E8))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgb8u>]", &qword_254A75848);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75848, &dword_21089F000);
      __cxa_guard_release(&qword_254A751E8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A751F0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A751F0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A751F8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A751F8))
      {
        if (byte_254A75860[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75860, *(unint64_t *)&byte_254A75860[8]);
        else
          __p = *(std::string *)byte_254A75860;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75878);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75878, &dword_21089F000);
        __cxa_guard_release(&qword_254A751F8);
      }
      if (byte_254A7588F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75878, *((unint64_t *)&xmmword_254A75878 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75878;
        v18 = unk_254A75888;
      }
      sub_21090B380((char *)v17, (std::string *)&qword_254A75830);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75830, &dword_21089F000);
      __cxa_guard_release(&qword_254A751E0);
      goto LABEL_13;
    }
    if (byte_254A7585F >= 0)
      v6 = byte_254A7585F;
    else
      v6 = unk_254A75850;
    if (byte_254A7585F >= 0)
      v7 = &qword_254A75848;
    else
      v7 = (uint64_t *)qword_254A75848;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75860[8] = v6;
      *(_QWORD *)&byte_254A75860[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75860 = v13;
    }
    else
    {
      v13 = byte_254A75860;
      byte_254A75860[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75860, &dword_21089F000);
    __cxa_guard_release(&qword_254A751F0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7582F < 0)
  {
    sub_2108B314C(&xmmword_254A75800, (void *)xmmword_254A75818, *((unint64_t *)&xmmword_254A75818 + 1));
  }
  else
  {
    xmmword_254A75800 = xmmword_254A75818;
    unk_254A75810 = unk_254A75828;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75800, &dword_21089F000);
  __cxa_guard_release(&qword_254A751D0);
LABEL_2:
  if (byte_254A75817 >= 0)
    return &xmmword_254A75800;
  else
    return (__int128 *)xmmword_254A75800;
}

void sub_21092EF38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A751E0);
  __cxa_guard_abort(&qword_254A751D8);
  __cxa_guard_abort(&qword_254A751D0);
  _Unwind_Resume(a1);
}

void sub_21092EFD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A751D0);
  _Unwind_Resume(a1);
}

void sub_21092EFEC()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21092F028(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21092F81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092F850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21092F864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21092F898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21092F8AC()
{
  return 65792;
}

_QWORD *sub_21092F8B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_21092F8F8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _WORD *v45;
  _WORD *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _WORD *v52;
  uint64_t v53;
  uint64_t v54;
  _WORD *v55;
  _WORD *v56;
  int v57;
  uint64_t *v58;
  std::__shared_weak_count *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t (**v80)();
  uint64_t *v81;
  std::__shared_weak_count *v82;
  uint64_t v83[2];
  _BYTE v84[12];
  int v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E600;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x10)
    v5 = 16;
  else
    v5 = v5;
  *(_DWORD *)v84 = 3;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v84[4] = v6;
  v71 = *(_QWORD *)v84;
  v72 = HIDWORD(v6);
  *(_DWORD *)v84 = 1;
  *(_QWORD *)&v84[4] = v4 | (v5 << 32);
  v73 = *(_QWORD *)v84;
  v74 = v5;
  v75 = v6;
  v76 = *(_QWORD *)&v84[4];
  v69 = a3[1];
  v70 = a3[2];
  v68 = *a3;
  sub_2109184A4(a1, (__int128 *)&v71);
  v77 = v68;
  v78 = v69;
  v79 = v70;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_89;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_86;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_86;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_86;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v81 = v32;
    v82 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v80 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v81 = v23;
    v82 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v80 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_89:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v81 = v14;
  v82 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v80 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v81);
  }
LABEL_53:
  sub_21091876C((uint64_t)v84, a1);
  v83[0] = (uint64_t)&v77;
  v83[1] = (uint64_t)v84;
  if (DWORD1(v78) == 1 && v85 == 1)
  {
    sub_2109005E8(v83);
  }
  else if (DWORD2(v77) && HIDWORD(v77) && (_DWORD)v78)
  {
    v42 = HIDWORD(v77) - 1;
    v43 = DWORD2(v78);
    v44 = v86;
    v45 = (_WORD *)v77;
    v46 = *(_WORD **)v84;
    v47 = v78 - 1;
    if ((_DWORD)v78 != 1)
    {
      v48 = v87;
      v49 = HIDWORD(v78);
      if (HIDWORD(v77) == 1)
      {
        do
        {
          *v46 = *v45;
          v46[1] = v45[1];
          v46[2] = v45[2];
          v45 += v49;
          v46 += v48;
          --v47;
        }
        while (v47);
        goto LABEL_73;
      }
      v50 = 0;
      v51 = *(_QWORD *)v84 + 4;
      v52 = (_WORD *)(v77 + 4);
      v53 = 2 * HIDWORD(v78);
      v54 = 2 * DWORD2(v78);
      do
      {
        v55 = v52;
        v56 = (_WORD *)v51;
        v57 = v42;
        do
        {
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v56 += v44;
          v55 = (_WORD *)((char *)v55 + v54);
          --v57;
        }
        while (v57);
        *(v56 - 2) = *(v55 - 2);
        *(v56 - 1) = *(v55 - 1);
        *v56 = *v55;
        v45 += v49;
        v46 += v48;
        ++v50;
        v51 += 2 * v48;
        v52 = (_WORD *)((char *)v52 + v53);
      }
      while (v50 != v47);
    }
    for (; v42; --v42)
    {
      *v46 = *v45;
      v46[1] = v45[1];
      v46[2] = v45[2];
      v45 += v43;
      v46 += v44;
    }
LABEL_73:
    *v46 = *v45;
    v46[1] = v45[1];
    v46[2] = v45[2];
    v58 = v81;
    if (!v81)
      goto LABEL_81;
    goto LABEL_74;
  }
  v58 = v81;
  if (!v81)
    goto LABEL_81;
LABEL_74:
  v60 = *v58;
  v59 = (std::__shared_weak_count *)v58[1];
  if (v59)
  {
    v61 = (unint64_t *)&v59->__shared_owners_;
    do
      v62 = __ldxr(v61);
    while (__stxr(v62 + 1, v61));
    do
      v63 = __ldaxr(v61);
    while (__stlxr(v63 - 1, v61));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
      if (!v60)
        goto LABEL_81;
      goto LABEL_80;
    }
  }
  if (v60)
LABEL_80:
    sub_2109E44E0((uint64_t)v81);
LABEL_81:
  v80 = &off_24CA84E68;
  v64 = v82;
  if (v82)
  {
    v65 = (unint64_t *)&v82->__shared_owners_;
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
LABEL_86:
  *(_QWORD *)a1 = off_24CA7E600;
  return a1;
}

void sub_21092FE30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7DD00;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_21092FF50(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DD00;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21092FFB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t (**v23)();
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v23 = &off_24CA84E68;
  v24 = v10;
  v25 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210918008(a1, (uint64_t)&v20);
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  else
  {
LABEL_23:
    v23 = &off_24CA84E68;
    v17 = v25;
    if (!v25)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_210930164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2109DEB5C(&a9);
  sub_2109DEB5C(&a12);
  _Unwind_Resume(a1);
}

void sub_210930180(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;

  if (*(_DWORD *)(a2 + 40) >= 3u)
LABEL_31:
    sub_2108B9060();
  v4 = *(uint64_t **)(a2 + 24);
  if (!v4)
    goto LABEL_17;
  v6 = *v4;
  v5 = (std::__shared_weak_count *)v4[1];
  if (!v5)
    goto LABEL_8;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
  {
LABEL_8:
    if (v6)
      goto LABEL_9;
LABEL_17:
    sub_2108FF3F8(a1, 0, (_DWORD *)(a2 + 72));
    return;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6)
    goto LABEL_17;
LABEL_9:
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_31;
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(std::__shared_weak_count **)(a2 + 32);
  v27 = &off_24CA84E68;
  v28 = v10;
  v29 = v11;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v21 = v10;
    v22 = v11;
    do
      v14 = __ldxr(v12);
    while (__stxr(v14 + 1, v12));
  }
  else
  {
    v21 = v10;
    v22 = 0;
  }
  v20 = &off_24CA84E68;
  sub_210918008((uint64_t)&v23, (uint64_t)&v20);
  *(_QWORD *)a1 = v23;
  *(_OWORD *)(a1 + 8) = v24;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v26;
  v20 = &off_24CA84E68;
  if (!v11)
    goto LABEL_23;
  v15 = (unint64_t *)&v11->__shared_owners_;
  do
    v16 = __ldaxr(v15);
  while (__stlxr(v16 - 1, v15));
  if (!v16)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v27 = &off_24CA84E68;
    v17 = v29;
    if (!v29)
      return;
  }
  else
  {
LABEL_23:
    v27 = &off_24CA84E68;
    v17 = v29;
    if (!v29)
      return;
  }
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
}

void sub_210930350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2109DEB5C(&a9);
  sub_2109DEB5C((_QWORD *)(v9 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_21093036C()
{
  return 22;
}

uint64_t (***sub_210930374())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_2109303C8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210930180((uint64_t)v42, a1);
  sub_210930180((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_21092F8F8(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_210930790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109307BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109307D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2109307E4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

void sub_210930824(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  _WORD *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  _WORD *v53;
  _WORD *v54;
  _WORD *v55;
  _WORD *v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65[3];
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED08, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v19 = __ldxr(p_shared_owners);
        while (__stxr(v19 + 1, p_shared_owners));
      }
      if (v8)
      {
        v21 = *v8;
        v20 = (std::__shared_weak_count *)v8[1];
        if (v20)
        {
          v22 = (unint64_t *)&v20->__shared_owners_;
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
          do
            v24 = __ldaxr(v22);
          while (__stlxr(v24 - 1, v22));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
        }
        if (v21)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v25 = (unint64_t *)&v7->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
      }
      if (v8)
      {
        v28 = *v8;
        v27 = (std::__shared_weak_count *)v8[1];
        if (v27)
        {
          v29 = (unint64_t *)&v27->__shared_owners_;
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
          do
            v31 = __ldaxr(v29);
          while (__stlxr(v31 - 1, v29));
          if (!v31)
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
          }
        }
        if (v28)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_210930180((uint64_t)&v66, v5);
    v65[0] = v66;
    v65[1] = v67;
    v65[2] = v68;
    sub_21092F8F8((uint64_t)&v59, (uint64_t)&v66 + 8, v65);
    if (v8)
    {
      v33 = *v8;
      v32 = (std::__shared_weak_count *)v8[1];
      if (v32)
      {
        v34 = (unint64_t *)&v32->__shared_owners_;
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
        do
          v36 = __ldaxr(v34);
        while (__stlxr(v36 - 1, v34));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
          if (!v33)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v33)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v37 = (unint64_t *)&v7->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v39 = DWORD2(v61);
    *(_DWORD *)(a1 + 8) = DWORD2(v59);
    v40 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v40 == -1)
    {
      if ((_DWORD)v39 == -1)
      {
        v58 = v63;
        *(_OWORD *)(a1 + 48) = v62;
        *(_OWORD *)(a1 + 64) = v58;
        *(_QWORD *)(a1 + 80) = v64;
        return;
      }
    }
    else if ((_DWORD)v39 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v40])(&v66, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v66 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v39])(&v66);
LABEL_62:
    v41 = DWORD2(v61);
    v42 = v63;
    *(_OWORD *)(a1 + 48) = v62;
    *(_OWORD *)(a1 + 64) = v42;
    *(_QWORD *)(a1 + 80) = v64;
    *(_QWORD *)&v59 = off_24CA7DD00;
    if ((_DWORD)v41 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v41])(&v66, &v60);
    return;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v66, lpsrc, 22);
  v17 = *(_OWORD *)(v66 + 16);
  v16 = *(_OWORD *)(v66 + 32);
  v59 = *(_OWORD *)v66;
  v60 = v17;
  v61 = v16;
  *(_QWORD *)&v66 = 0;
  MEMORY[0x212BCC6FC]();
  sub_21092FFB4((uint64_t)&v66, a1);
  *(_QWORD *)&v65[0] = &v59;
  *((_QWORD *)&v65[0] + 1) = &v66;
  if (DWORD1(v60) == 1 && DWORD1(v67) == 1)
  {
    sub_2109005E8((uint64_t *)v65);
    return;
  }
  if (DWORD2(v59) && HIDWORD(v59) && (_DWORD)v60)
  {
    v43 = HIDWORD(v59) - 1;
    v44 = DWORD2(v60);
    v45 = DWORD2(v67);
    v46 = (_WORD *)v59;
    v47 = (_WORD *)v66;
    v48 = v60 - 1;
    if ((_DWORD)v60 != 1)
    {
      v49 = HIDWORD(v67);
      v50 = HIDWORD(v60);
      if (HIDWORD(v59) == 1)
      {
        do
        {
          *v47 = *v46;
          v47[1] = v46[1];
          v47[2] = v46[2];
          v46 += v50;
          v47 += v49;
          --v48;
        }
        while (v48);
LABEL_80:
        *v47 = *v46;
        v47[1] = v46[1];
        v47[2] = v46[2];
        return;
      }
      v51 = 0;
      v52 = 2 * DWORD2(v67);
      v53 = (_WORD *)(v66 + 4);
      v54 = (_WORD *)(v59 + 4);
      do
      {
        v55 = v54;
        v56 = v53;
        v57 = v43;
        do
        {
          *(v56 - 2) = *(v55 - 2);
          *(v56 - 1) = *(v55 - 1);
          *v56 = *v55;
          v56 = (_WORD *)((char *)v56 + v52);
          v55 += v44;
          --v57;
        }
        while (v57);
        *(v56 - 2) = *(v55 - 2);
        *(v56 - 1) = *(v55 - 1);
        *v56 = *v55;
        v46 += v50;
        v47 += v49;
        ++v51;
        v53 += v49;
        v54 += v50;
      }
      while (v51 != v48);
    }
    for (; v43; --v43)
    {
      *v47 = *v46;
      v47[1] = v46[1];
      v47[2] = v46[2];
      v46 += v44;
      v47 += v45;
    }
    goto LABEL_80;
  }
}

uint64_t sub_210930E98(uint64_t a1)
{
  _QWORD v2[6];

  sub_21092FFB4((uint64_t)v2, a1);
  return v2[0];
}

double sub_210930EC0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 22
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21092FFB4((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_210930F60@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 22
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210930180((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_210931000()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75200);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75200))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75208);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75208))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75210);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75210))
    {
LABEL_13:
      if (byte_254A758D7 < 0)
      {
        sub_2108B314C(&xmmword_254A758A8, (void *)qword_254A758C0, unk_254A758C8);
      }
      else
      {
        xmmword_254A758A8 = *(_OWORD *)&qword_254A758C0;
        unk_254A758B8 = unk_254A758D0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A758A8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75208);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75218);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75218))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgb16u>]", &qword_254A758D8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A758D8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75218);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75220);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75220))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75228);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75228))
      {
        if (byte_254A758F0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A758F0, *(unint64_t *)&byte_254A758F0[8]);
        else
          __p = *(std::string *)byte_254A758F0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75908);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75908, &dword_21089F000);
        __cxa_guard_release(&qword_254A75228);
      }
      if (byte_254A7591F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75908, *((unint64_t *)&xmmword_254A75908 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75908;
        v18 = unk_254A75918;
      }
      sub_21090B4A8((char *)v17, (std::string *)&qword_254A758C0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A758C0, &dword_21089F000);
      __cxa_guard_release(&qword_254A75210);
      goto LABEL_13;
    }
    if (byte_254A758EF >= 0)
      v6 = byte_254A758EF;
    else
      v6 = unk_254A758E0;
    if (byte_254A758EF >= 0)
      v7 = &qword_254A758D8;
    else
      v7 = (uint64_t *)qword_254A758D8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A758F0[8] = v6;
      *(_QWORD *)&byte_254A758F0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A758F0 = v13;
    }
    else
    {
      v13 = byte_254A758F0;
      byte_254A758F0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A758F0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75220);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A758BF < 0)
  {
    sub_2108B314C(&xmmword_254A75890, (void *)xmmword_254A758A8, *((unint64_t *)&xmmword_254A758A8 + 1));
  }
  else
  {
    xmmword_254A75890 = xmmword_254A758A8;
    unk_254A758A0 = unk_254A758B8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75890, &dword_21089F000);
  __cxa_guard_release(&qword_254A75200);
LABEL_2:
  if (byte_254A758A7 >= 0)
    return &xmmword_254A75890;
  else
    return (__int128 *)xmmword_254A75890;
}

void sub_210931454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75210);
  __cxa_guard_abort(&qword_254A75208);
  __cxa_guard_abort(&qword_254A75200);
  _Unwind_Resume(a1);
}

void sub_2109314F0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75200);
  _Unwind_Resume(a1);
}

void sub_210931508()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210931544(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_210931D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210931D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210931D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210931DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210931DC8()
{
  return 65792;
}

_QWORD *sub_210931DD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

_QWORD *sub_210931E14(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a1 = off_24CA7E690;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  LODWORD(v17[0]) = 4;
  v6 = *(_QWORD *)(a2 + 24);
  DWORD1(v17[0]) = v6;
  v11 = *(_QWORD *)&v17[0];
  v12 = HIDWORD(v6);
  LODWORD(v17[0]) = 1;
  *(_QWORD *)((char *)v17 + 4) = v4 | (v5 << 32);
  v13 = *(_QWORD *)&v17[0];
  v14 = v5;
  v15 = v6;
  v16 = *(_QWORD *)((char *)v17 + 4);
  v9 = a3[1];
  v10 = a3[2];
  v8 = *a3;
  sub_21091602C((uint64_t)a1, 25, (__int128 *)&v11);
  v17[0] = v8;
  v17[1] = v9;
  v17[2] = v10;
  sub_2109166E8((uint64_t)a1, v17);
  *a1 = off_24CA7E690;
  return a1;
}

void sub_210931F00(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24CA7DBE0;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v4])(v2 - 81, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_210931F44(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_210931F60(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_210931FC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_2109321EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210932208(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210932450(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21093246C()
{
  return 25;
}

uint64_t (***sub_210932474())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_2109324C8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210932208((uint64_t)v42, a1);
  sub_210932208((uint64_t)v41, a1);
  v32 = (_QWORD *)operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_210931E14(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21093288C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109328B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109328CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2109328E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210932920(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED20, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_210932208((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_210931E14(&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24CA7DBE0;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 25);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x212BCC6FC]();
  sub_210931FC4((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_2108FEBEC((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_2108FF6CC((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_210932E88(uint64_t a1)
{
  _QWORD v2[6];

  sub_210931FC4((uint64_t)v2, a1);
  return v2[0];
}

double sub_210932EB0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 25
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210931FC4((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_210932F50@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 25
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210932208((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_210932FF0()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75230);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75230))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75238);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75238))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75240);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75240))
    {
LABEL_13:
      if (byte_254A75967 < 0)
      {
        sub_2108B314C(&xmmword_254A75938, (void *)qword_254A75950, unk_254A75958);
      }
      else
      {
        xmmword_254A75938 = *(_OWORD *)&qword_254A75950;
        unk_254A75948 = unk_254A75960;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75938, &dword_21089F000);
      __cxa_guard_release(&qword_254A75238);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75248);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75248))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Bgra8u>]", &qword_254A75968);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75968, &dword_21089F000);
      __cxa_guard_release(&qword_254A75248);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75250);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75250))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75258);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75258))
      {
        if (byte_254A75980[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75980, *(unint64_t *)&byte_254A75980[8]);
        else
          __p = *(std::string *)byte_254A75980;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75998);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75998, &dword_21089F000);
        __cxa_guard_release(&qword_254A75258);
      }
      if (byte_254A759AF < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75998, *((unint64_t *)&xmmword_254A75998 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75998;
        v18 = unk_254A759A8;
      }
      sub_21090B5D0((char *)v17, (std::string *)&qword_254A75950);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75950, &dword_21089F000);
      __cxa_guard_release(&qword_254A75240);
      goto LABEL_13;
    }
    if (byte_254A7597F >= 0)
      v6 = byte_254A7597F;
    else
      v6 = unk_254A75970;
    if (byte_254A7597F >= 0)
      v7 = &qword_254A75968;
    else
      v7 = (uint64_t *)qword_254A75968;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75980[8] = v6;
      *(_QWORD *)&byte_254A75980[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75980 = v13;
    }
    else
    {
      v13 = byte_254A75980;
      byte_254A75980[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75980, &dword_21089F000);
    __cxa_guard_release(&qword_254A75250);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A7594F < 0)
  {
    sub_2108B314C(&xmmword_254A75920, (void *)xmmword_254A75938, *((unint64_t *)&xmmword_254A75938 + 1));
  }
  else
  {
    xmmword_254A75920 = xmmword_254A75938;
    unk_254A75930 = unk_254A75948;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75920, &dword_21089F000);
  __cxa_guard_release(&qword_254A75230);
LABEL_2:
  if (byte_254A75937 >= 0)
    return &xmmword_254A75920;
  else
    return (__int128 *)xmmword_254A75920;
}

void sub_210933444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75240);
  __cxa_guard_abort(&qword_254A75238);
  __cxa_guard_abort(&qword_254A75230);
  _Unwind_Resume(a1);
}

void sub_2109334E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75230);
  _Unwind_Resume(a1);
}

void sub_2109334F8()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210933534(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_210933D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210933D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210933D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210933DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210933DB8()
{
  return 65792;
}

_QWORD *sub_210933DC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

_QWORD *sub_210933E04(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a1 = off_24CA7E720;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  LODWORD(v17[0]) = 4;
  v6 = *(_QWORD *)(a2 + 24);
  DWORD1(v17[0]) = v6;
  v11 = *(_QWORD *)&v17[0];
  v12 = HIDWORD(v6);
  LODWORD(v17[0]) = 1;
  *(_QWORD *)((char *)v17 + 4) = v4 | (v5 << 32);
  v13 = *(_QWORD *)&v17[0];
  v14 = v5;
  v15 = v6;
  v16 = *(_QWORD *)((char *)v17 + 4);
  v9 = a3[1];
  v10 = a3[2];
  v8 = *a3;
  sub_21091602C((uint64_t)a1, 29, (__int128 *)&v11);
  v17[0] = v8;
  v17[1] = v9;
  v17[2] = v10;
  sub_2109166E8((uint64_t)a1, v17);
  *a1 = off_24CA7E720;
  return a1;
}

void sub_210933EF0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24CA7DBE0;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v4])(v2 - 81, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_210933F34(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_210933F50(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_210933FB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_2109341DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2109341F8(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210934440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21093445C()
{
  return 29;
}

uint64_t (***sub_210934464())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_2109344B8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_2109341F8((uint64_t)v42, a1);
  sub_2109341F8((uint64_t)v41, a1);
  v32 = (_QWORD *)operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_210933E04(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21093487C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109348A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109348BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_2109348D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210934910(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED38, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_2109341F8((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_210933E04(&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24CA7DBE0;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 29);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x212BCC6FC]();
  sub_210933FB4((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_2108FEBEC((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_2108FF6CC((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_210934E78(uint64_t a1)
{
  _QWORD v2[6];

  sub_210933FB4((uint64_t)v2, a1);
  return v2[0];
}

double sub_210934EA0@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 29
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210933FB4((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_210934F40@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 29
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109341F8((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_210934FE0()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75260);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75260))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75268);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75268))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75270);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75270))
    {
LABEL_13:
      if (byte_254A759F7 < 0)
      {
        sub_2108B314C(&xmmword_254A759C8, (void *)qword_254A759E0, unk_254A759E8);
      }
      else
      {
        xmmword_254A759C8 = *(_OWORD *)&qword_254A759E0;
        unk_254A759D8 = unk_254A759F0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A759C8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75268);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75278);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75278))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgba8u>]", &qword_254A759F8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A759F8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75278);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75280);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75280))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75288);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75288))
      {
        if (byte_254A75A10[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75A10, *(unint64_t *)&byte_254A75A10[8]);
        else
          __p = *(std::string *)byte_254A75A10;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75A28);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75A28, &dword_21089F000);
        __cxa_guard_release(&qword_254A75288);
      }
      if (byte_254A75A3F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75A28, *((unint64_t *)&xmmword_254A75A28 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75A28;
        v18 = unk_254A75A38;
      }
      sub_210952814((char *)v17, (std::string *)&qword_254A759E0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A759E0, &dword_21089F000);
      __cxa_guard_release(&qword_254A75270);
      goto LABEL_13;
    }
    if (byte_254A75A0F >= 0)
      v6 = byte_254A75A0F;
    else
      v6 = unk_254A75A00;
    if (byte_254A75A0F >= 0)
      v7 = &qword_254A759F8;
    else
      v7 = (uint64_t *)qword_254A759F8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75A10[8] = v6;
      *(_QWORD *)&byte_254A75A10[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75A10 = v13;
    }
    else
    {
      v13 = byte_254A75A10;
      byte_254A75A10[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75A10, &dword_21089F000);
    __cxa_guard_release(&qword_254A75280);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A759DF < 0)
  {
    sub_2108B314C(&xmmword_254A759B0, (void *)xmmword_254A759C8, *((unint64_t *)&xmmword_254A759C8 + 1));
  }
  else
  {
    xmmword_254A759B0 = xmmword_254A759C8;
    unk_254A759C0 = unk_254A759D8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A759B0, &dword_21089F000);
  __cxa_guard_release(&qword_254A75260);
LABEL_2:
  if (byte_254A759C7 >= 0)
    return &xmmword_254A759B0;
  else
    return (__int128 *)xmmword_254A759B0;
}

void sub_210935434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75270);
  __cxa_guard_abort(&qword_254A75268);
  __cxa_guard_abort(&qword_254A75260);
  _Unwind_Resume(a1);
}

void sub_2109354D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75260);
  _Unwind_Resume(a1);
}

void sub_2109354E8()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210935524(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_210935D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210935D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210935D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210935D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210935DA8()
{
  return 65792;
}

_QWORD *sub_210935DB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_210935DF4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  __n128 v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[3];
  uint64_t (**v61)();
  uint64_t *v62;
  std::__shared_weak_count *v63;
  _QWORD v64[2];
  _BYTE v65[48];
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E7B0;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x10)
    v5 = 16;
  else
    v5 = v5;
  *(_DWORD *)v65 = 4;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v65[4] = v6;
  v54 = *(_QWORD *)v65;
  v55 = HIDWORD(v6);
  *(_DWORD *)v65 = 1;
  *(_QWORD *)&v65[4] = v4 | (v5 << 32);
  v56 = *(_QWORD *)v65;
  v57 = v5;
  v58 = v6;
  v59 = *(_QWORD *)&v65[4];
  v52 = a3[1];
  v53 = a3[2];
  v51 = *a3;
  sub_21091AE44(a1, (__int128 *)&v54);
  v60[0] = v51;
  v60[1] = v52;
  v60[2] = v53;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_69;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_66;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_66;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_66;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v62 = v32;
    v63 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v61 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v62 = v23;
    v63 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v61 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_69:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v62 = v14;
  v63 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v61 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v62);
  }
LABEL_53:
  sub_21091B10C((uint64_t)v65, a1);
  v64[0] = v60;
  v64[1] = v65;
  v41.n128_f64[0] = sub_210902AF8(v64);
  if (v62)
  {
    v43 = *v62;
    v42 = (std::__shared_weak_count *)v62[1];
    if (v42)
    {
      v44 = (unint64_t *)&v42->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      do
        v46 = __ldaxr(v44);
      while (__stlxr(v46 - 1, v44));
      if (!v46)
      {
        ((void (*)(std::__shared_weak_count *, __n128))v42->__on_zero_shared)(v42, v41);
        std::__shared_weak_count::__release_weak(v42);
        if (!v43)
          goto LABEL_61;
        goto LABEL_60;
      }
    }
    if (v43)
LABEL_60:
      sub_2109E44E0((uint64_t)v62);
  }
LABEL_61:
  v61 = &off_24CA84E68;
  v47 = v63;
  if (v63)
  {
    v48 = (unint64_t *)&v63->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *, __n128))v47->__on_zero_shared)(v47, v41);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_66:
  *(_QWORD *)a1 = off_24CA7E7B0;
  return a1;
}

void sub_2109361C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7DF40;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_2109362E8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DF40;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21093634C(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091A990(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210936574(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210936590(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091A990((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_2109367D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_2109367F4()
{
  return 31;
}

uint64_t (***sub_2109367FC())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_210936850(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210936590((uint64_t)v42, a1);
  sub_210936590((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_210935DF4(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_210936C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210936C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210936C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210936C68@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210936CA8(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56[3];
  _OWORD v57[3];

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED50, 0);
  if (!v4)
  {
    (*(void (**)(_OWORD *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(v57, lpsrc, 31);
    v16 = *(_QWORD *)&v57[0];
    v18 = *(_OWORD *)(*(_QWORD *)&v57[0] + 16);
    v17 = *(_OWORD *)(*(_QWORD *)&v57[0] + 32);
    v50 = **(_OWORD **)&v57[0];
    v51 = v18;
    v52 = v17;
    *(_QWORD *)&v57[0] = 0;
    MEMORY[0x212BCC6FC](v16, 0xC400A2AC0F1, v19, v20, v21, v22);
    sub_21093634C((uint64_t)v57, a1);
    *(_QWORD *)&v56[0] = &v50;
    *((_QWORD *)&v56[0] + 1) = v57;
    return sub_210902AF8(v56);
  }
  v5 = (uint64_t)v4;
  v6 = *((_DWORD *)v4 + 10);
  if (v6 == 2)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v25 = __ldxr(p_shared_owners);
      while (__stxr(v25 + 1, p_shared_owners));
    }
    if (v8)
    {
      v27 = *v8;
      v26 = (std::__shared_weak_count *)v8[1];
      if (v26)
      {
        v28 = (unint64_t *)&v26->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      if (v27)
        goto LABEL_41;
    }
  }
  else if (v6 == 1)
  {
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v31 = (unint64_t *)&v7->__shared_owners_;
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      if (v34)
        goto LABEL_41;
    }
  }
  else
  {
    if (v6)
      sub_2108B9060();
    v8 = (uint64_t *)*((_QWORD *)v4 + 3);
    v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
    if (v7)
    {
      v9 = (unint64_t *)&v7->__shared_owners_;
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
    if (v8)
    {
      v12 = *v8;
      v11 = (std::__shared_weak_count *)v8[1];
      if (v11)
      {
        v13 = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
        do
          v15 = __ldaxr(v13);
        while (__stlxr(v15 - 1, v13));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      if (v12)
LABEL_41:
        sub_2109E4220((uint64_t)v8);
    }
  }
  sub_210936590((uint64_t)v57, v5);
  v56[0] = v57[0];
  v56[1] = v57[1];
  v56[2] = v57[2];
  sub_210935DF4((uint64_t)&v50, (uint64_t)v57 + 8, v56);
  if (v8)
  {
    v39 = *v8;
    v38 = (std::__shared_weak_count *)v8[1];
    if (v38)
    {
      v40 = (unint64_t *)&v38->__shared_owners_;
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
      do
        v42 = __ldaxr(v40);
      while (__stlxr(v42 - 1, v40));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
        if (!v39)
          goto LABEL_50;
        goto LABEL_49;
      }
    }
    if (v39)
LABEL_49:
      sub_2109E43F4((uint64_t)v8);
  }
LABEL_50:
  if (v7)
  {
    v43 = (unint64_t *)&v7->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v45 = DWORD2(v52);
  *(_DWORD *)(a1 + 8) = DWORD2(v50);
  v46 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v46 == -1)
  {
    if ((_DWORD)v45 == -1)
    {
      result = *(double *)&v53;
      v49 = v54;
      *(_OWORD *)(a1 + 48) = v53;
      *(_OWORD *)(a1 + 64) = v49;
      *(_QWORD *)(a1 + 80) = v55;
      return result;
    }
  }
  else if ((_DWORD)v45 == -1)
  {
    ((void (*)(_OWORD *, uint64_t))off_24CA7EDC8[v46])(v57, a1 + 16);
    *(_DWORD *)(a1 + 40) = -1;
    goto LABEL_60;
  }
  *(_QWORD *)&v57[0] = a1 + 16;
  ((void (*)(_OWORD *))off_24CA7EDF8[v45])(v57);
LABEL_60:
  v47 = DWORD2(v52);
  result = *(double *)&v53;
  v48 = v54;
  *(_OWORD *)(a1 + 48) = v53;
  *(_OWORD *)(a1 + 64) = v48;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)&v50 = off_24CA7DF40;
  if ((_DWORD)v47 != -1)
    ((void (*)(_OWORD *, __int128 *))off_24CA7EDC8[v47])(v57, &v51);
  return result;
}

uint64_t sub_2109371BC(uint64_t a1)
{
  _QWORD v2[6];

  sub_21093634C((uint64_t)v2, a1);
  return v2[0];
}

double sub_2109371E4@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 31
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093634C((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_210937284@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 31
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210936590((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_210937324()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75290);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75290))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75298);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75298))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A752A0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A752A0))
    {
LABEL_13:
      if (byte_254A75A87 < 0)
      {
        sub_2108B314C(&xmmword_254A75A58, (void *)qword_254A75A70, unk_254A75A78);
      }
      else
      {
        xmmword_254A75A58 = *(_OWORD *)&qword_254A75A70;
        unk_254A75A68 = unk_254A75A80;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75A58, &dword_21089F000);
      __cxa_guard_release(&qword_254A75298);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A752A8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A752A8))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgba16f>]", &qword_254A75A88);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75A88, &dword_21089F000);
      __cxa_guard_release(&qword_254A752A8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A752B0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A752B0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A752B8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A752B8))
      {
        if (byte_254A75AA0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75AA0, *(unint64_t *)&byte_254A75AA0[8]);
        else
          __p = *(std::string *)byte_254A75AA0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75AB8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75AB8, &dword_21089F000);
        __cxa_guard_release(&qword_254A752B8);
      }
      if (byte_254A75ACF < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75AB8, *((unint64_t *)&xmmword_254A75AB8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75AB8;
        v18 = unk_254A75AC8;
      }
      sub_21090B6F8((char *)v17, (std::string *)&qword_254A75A70);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75A70, &dword_21089F000);
      __cxa_guard_release(&qword_254A752A0);
      goto LABEL_13;
    }
    if (byte_254A75A9F >= 0)
      v6 = byte_254A75A9F;
    else
      v6 = unk_254A75A90;
    if (byte_254A75A9F >= 0)
      v7 = &qword_254A75A88;
    else
      v7 = (uint64_t *)qword_254A75A88;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75AA0[8] = v6;
      *(_QWORD *)&byte_254A75AA0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75AA0 = v13;
    }
    else
    {
      v13 = byte_254A75AA0;
      byte_254A75AA0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75AA0, &dword_21089F000);
    __cxa_guard_release(&qword_254A752B0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A75A6F < 0)
  {
    sub_2108B314C(&xmmword_254A75A40, (void *)xmmword_254A75A58, *((unint64_t *)&xmmword_254A75A58 + 1));
  }
  else
  {
    xmmword_254A75A40 = xmmword_254A75A58;
    unk_254A75A50 = unk_254A75A68;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75A40, &dword_21089F000);
  __cxa_guard_release(&qword_254A75290);
LABEL_2:
  if (byte_254A75A57 >= 0)
    return &xmmword_254A75A40;
  else
    return (__int128 *)xmmword_254A75A40;
}

void sub_210937778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A752A0);
  __cxa_guard_abort(&qword_254A75298);
  __cxa_guard_abort(&qword_254A75290);
  _Unwind_Resume(a1);
}

void sub_210937814(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75290);
  _Unwind_Resume(a1);
}

void sub_21093782C()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210937868(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21093805C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210938090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_2109380A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_2109380D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2109380EC()
{
  return 65792;
}

_QWORD *sub_2109380F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_210938138(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t (**v63)();
  uint64_t *v64;
  std::__shared_weak_count *v65;
  uint64_t v66[2];
  char v67;
  char *v68;
  _BYTE v69[12];
  int v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E840;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 8)
    v5 = 8;
  else
    v5 = v5;
  *(_DWORD *)v69 = 4;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v69[4] = v6;
  v54 = *(_QWORD *)v69;
  v55 = HIDWORD(v6);
  *(_DWORD *)v69 = 1;
  *(_QWORD *)&v69[4] = v4 | (v5 << 32);
  v56 = *(_QWORD *)v69;
  v57 = v5;
  v58 = v6;
  v59 = *(_QWORD *)&v69[4];
  v52 = a3[1];
  v53 = a3[2];
  v51 = *a3;
  sub_21091CEB0(a1, (__int128 *)&v54);
  v60 = v51;
  v61 = v52;
  v62 = v53;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_78;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_75;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_75;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_75;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v64 = v32;
    v65 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v63 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v64 = v23;
    v65 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v63 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_78:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v64 = v14;
  v65 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v63 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v64);
  }
LABEL_53:
  sub_21091D178((uint64_t)v69, a1);
  v66[0] = (uint64_t)&v60;
  v66[1] = (uint64_t)v69;
  if (DWORD1(v61) == 1 && v70 == 1)
  {
    sub_210903DA4(v66);
  }
  else
  {
    v67 = 0;
    if (DWORD2(v60) && HIDWORD(v60) && (_DWORD)v61)
    {
      v68 = &v67;
      sub_210904698((uint64_t)&v68, (uint64_t)&v60, (uint64_t)v69);
    }
  }
  if (!v64)
    goto LABEL_70;
  v43 = *v64;
  v42 = (std::__shared_weak_count *)v64[1];
  if (v42)
  {
    v44 = (unint64_t *)&v42->__shared_owners_;
    do
      v45 = __ldxr(v44);
    while (__stxr(v45 + 1, v44));
    do
      v46 = __ldaxr(v44);
    while (__stlxr(v46 - 1, v44));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
      if (!v43)
        goto LABEL_70;
      goto LABEL_69;
    }
  }
  if (v43)
LABEL_69:
    sub_2109E44E0((uint64_t)v64);
LABEL_70:
  v63 = &off_24CA84E68;
  v47 = v65;
  if (v65)
  {
    v48 = (unint64_t *)&v65->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_75:
  *(_QWORD *)a1 = off_24CA7E840;
  return a1;
}

void sub_210938558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7E0F0;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_210938678(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7E0F0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_2109386DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091C9FC(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210938904(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_210938920(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_21091C9FC((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_210938B68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_210938B84()
{
  return 32;
}

uint64_t (***sub_210938B8C())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_210938BE0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_210938920((uint64_t)v42, a1);
  sub_210938920((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_210938138(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_210938FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210938FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_210938FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210938FF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_210939038(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED68, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_210938920((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_210938138((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24CA7E0F0;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 32);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x212BCC6FC]();
  sub_2109386DC((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_210903DA4((uint64_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      *(float *)&result = sub_210904698((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_2109395A0(uint64_t a1)
{
  _QWORD v2[6];

  sub_2109386DC((uint64_t)v2, a1);
  return v2[0];
}

double sub_2109395C8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 32
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2109386DC((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_210939668@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 32
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210938920((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_210939708()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A752C0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A752C0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A752C8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A752C8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A752D0);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A752D0))
    {
LABEL_13:
      if (byte_254A75B17 < 0)
      {
        sub_2108B314C(&xmmword_254A75AE8, (void *)qword_254A75B00, unk_254A75B08);
      }
      else
      {
        xmmword_254A75AE8 = *(_OWORD *)&qword_254A75B00;
        unk_254A75AF8 = unk_254A75B10;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75AE8, &dword_21089F000);
      __cxa_guard_release(&qword_254A752C8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A752D8);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A752D8))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Rgba32f>]", &qword_254A75B18);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75B18, &dword_21089F000);
      __cxa_guard_release(&qword_254A752D8);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A752E0);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A752E0))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A752E8);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A752E8))
      {
        if (byte_254A75B30[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75B30, *(unint64_t *)&byte_254A75B30[8]);
        else
          __p = *(std::string *)byte_254A75B30;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75B48);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75B48, &dword_21089F000);
        __cxa_guard_release(&qword_254A752E8);
      }
      if (byte_254A75B5F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75B48, *((unint64_t *)&xmmword_254A75B48 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75B48;
        v18 = unk_254A75B58;
      }
      sub_21090B820((char *)v17, (std::string *)&qword_254A75B00);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75B00, &dword_21089F000);
      __cxa_guard_release(&qword_254A752D0);
      goto LABEL_13;
    }
    if (byte_254A75B2F >= 0)
      v6 = byte_254A75B2F;
    else
      v6 = unk_254A75B20;
    if (byte_254A75B2F >= 0)
      v7 = &qword_254A75B18;
    else
      v7 = (uint64_t *)qword_254A75B18;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75B30[8] = v6;
      *(_QWORD *)&byte_254A75B30[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75B30 = v13;
    }
    else
    {
      v13 = byte_254A75B30;
      byte_254A75B30[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75B30, &dword_21089F000);
    __cxa_guard_release(&qword_254A752E0);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A75AFF < 0)
  {
    sub_2108B314C(&xmmword_254A75AD0, (void *)xmmword_254A75AE8, *((unint64_t *)&xmmword_254A75AE8 + 1));
  }
  else
  {
    xmmword_254A75AD0 = xmmword_254A75AE8;
    unk_254A75AE0 = unk_254A75AF8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75AD0, &dword_21089F000);
  __cxa_guard_release(&qword_254A752C0);
LABEL_2:
  if (byte_254A75AE7 >= 0)
    return &xmmword_254A75AD0;
  else
    return (__int128 *)xmmword_254A75AD0;
}

void sub_210939B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A752D0);
  __cxa_guard_abort(&qword_254A752C8);
  __cxa_guard_abort(&qword_254A752C0);
  _Unwind_Resume(a1);
}

void sub_210939BF8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A752C0);
  _Unwind_Resume(a1);
}

void sub_210939C10()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210939C4C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21093A440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21093A474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21093A488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21093A4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21093A4D0()
{
  return 65792;
}

_QWORD *sub_21093A4DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

_QWORD *sub_21093A51C(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a1 = off_24CA7E8D0;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  LODWORD(v17[0]) = 4;
  v6 = *(_QWORD *)(a2 + 24);
  DWORD1(v17[0]) = v6;
  v11 = *(_QWORD *)&v17[0];
  v12 = HIDWORD(v6);
  LODWORD(v17[0]) = 1;
  *(_QWORD *)((char *)v17 + 4) = v4 | (v5 << 32);
  v13 = *(_QWORD *)&v17[0];
  v14 = v5;
  v15 = v6;
  v16 = *(_QWORD *)((char *)v17 + 4);
  v9 = a3[1];
  v10 = a3[2];
  v8 = *a3;
  sub_21091602C((uint64_t)a1, 33, (__int128 *)&v11);
  v17[0] = v8;
  v17[1] = v9;
  v17[2] = v10;
  sub_2109166E8((uint64_t)a1, v17);
  *a1 = off_24CA7E8D0;
  return a1;
}

void sub_21093A608(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24CA7DBE0;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v4])(v2 - 81, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_21093A64C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_21093A668(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21093A6CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21093A8F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21093A910(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21093AB58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21093AB74()
{
  return 33;
}

uint64_t (***sub_21093AB7C())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21093ABD0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21093A910((uint64_t)v42, a1);
  sub_21093A910((uint64_t)v41, a1);
  v32 = (_QWORD *)operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_21093A51C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21093AF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21093AFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21093AFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21093AFE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21093B028(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED80, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_21093A910((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_21093A51C(&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24CA7DBE0;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 33);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x212BCC6FC]();
  sub_21093A6CC((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_2108FEBEC((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_2108FF6CC((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_21093B590(uint64_t a1)
{
  _QWORD v2[6];

  sub_21093A6CC((uint64_t)v2, a1);
  return v2[0];
}

double sub_21093B5B8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 33
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093A6CC((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_21093B658@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 33
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093A910((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21093B6F8()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A752F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A752F0))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A752F8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A752F8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75300);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75300))
    {
LABEL_13:
      if (byte_254A75BA7 < 0)
      {
        sub_2108B314C(&xmmword_254A75B78, (void *)qword_254A75B90, unk_254A75B98);
      }
      else
      {
        xmmword_254A75B78 = *(_OWORD *)&qword_254A75B90;
        unk_254A75B88 = unk_254A75BA0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75B78, &dword_21089F000);
      __cxa_guard_release(&qword_254A752F8);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75308);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75308))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Abgr8u>]", &qword_254A75BA8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75BA8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75308);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75310);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75310))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75318);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75318))
      {
        if (byte_254A75BC0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75BC0, *(unint64_t *)&byte_254A75BC0[8]);
        else
          __p = *(std::string *)byte_254A75BC0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75BD8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75BD8, &dword_21089F000);
        __cxa_guard_release(&qword_254A75318);
      }
      if (byte_254A75BEF < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75BD8, *((unint64_t *)&xmmword_254A75BD8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75BD8;
        v18 = unk_254A75BE8;
      }
      sub_21095293C((char *)v17, (std::string *)&qword_254A75B90);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75B90, &dword_21089F000);
      __cxa_guard_release(&qword_254A75300);
      goto LABEL_13;
    }
    if (byte_254A75BBF >= 0)
      v6 = byte_254A75BBF;
    else
      v6 = unk_254A75BB0;
    if (byte_254A75BBF >= 0)
      v7 = &qword_254A75BA8;
    else
      v7 = (uint64_t *)qword_254A75BA8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75BC0[8] = v6;
      *(_QWORD *)&byte_254A75BC0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75BC0 = v13;
    }
    else
    {
      v13 = byte_254A75BC0;
      byte_254A75BC0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75BC0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75310);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A75B8F < 0)
  {
    sub_2108B314C(&xmmword_254A75B60, (void *)xmmword_254A75B78, *((unint64_t *)&xmmword_254A75B78 + 1));
  }
  else
  {
    xmmword_254A75B60 = xmmword_254A75B78;
    unk_254A75B70 = unk_254A75B88;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75B60, &dword_21089F000);
  __cxa_guard_release(&qword_254A752F0);
LABEL_2:
  if (byte_254A75B77 >= 0)
    return &xmmword_254A75B60;
  else
    return (__int128 *)xmmword_254A75B60;
}

void sub_21093BB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75300);
  __cxa_guard_abort(&qword_254A752F8);
  __cxa_guard_abort(&qword_254A752F0);
  _Unwind_Resume(a1);
}

void sub_21093BBE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A752F0);
  _Unwind_Resume(a1);
}

void sub_21093BC00()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21093BC3C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21093C430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21093C464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21093C478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21093C4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21093C4C0()
{
  return 65792;
}

_QWORD *sub_21093C4CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

_QWORD *sub_21093C50C(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[3];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  *a1 = off_24CA7E960;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x20)
    v5 = 32;
  else
    v5 = v5;
  LODWORD(v17[0]) = 4;
  v6 = *(_QWORD *)(a2 + 24);
  DWORD1(v17[0]) = v6;
  v11 = *(_QWORD *)&v17[0];
  v12 = HIDWORD(v6);
  LODWORD(v17[0]) = 1;
  *(_QWORD *)((char *)v17 + 4) = v4 | (v5 << 32);
  v13 = *(_QWORD *)&v17[0];
  v14 = v5;
  v15 = v6;
  v16 = *(_QWORD *)((char *)v17 + 4);
  v9 = a3[1];
  v10 = a3[2];
  v8 = *a3;
  sub_21091602C((uint64_t)a1, 37, (__int128 *)&v11);
  v17[0] = v8;
  v17[1] = v9;
  v17[2] = v10;
  sub_2109166E8((uint64_t)a1, v17);
  *a1 = off_24CA7E960;
  return a1;
}

void sub_21093C5F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)v1 = off_24CA7DBE0;
  v4 = *(unsigned int *)(v1 + 40);
  if ((_DWORD)v4 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v4])(v2 - 81, v1 + 16);
  *(_DWORD *)(v1 + 40) = -1;
  _Unwind_Resume(exception_object);
}

void sub_21093C63C(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_21093C658(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21093C6BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21093C8E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21093C900(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210915C6C((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21093CB48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21093CB64()
{
  return 37;
}

uint64_t (***sub_21093CB6C())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21093CBC0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21093C900((uint64_t)v42, a1);
  sub_21093C900((uint64_t)v41, a1);
  v32 = (_QWORD *)operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_21093C50C(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21093CF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21093CFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21093CFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21093CFD8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21093D018(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7ED98, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_21093C900((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_21093C50C(&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24CA7DBE0;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 37);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x212BCC6FC]();
  sub_21093C6BC((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_2108FEBEC((size_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_2108FF6CC((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_21093D580(uint64_t a1)
{
  _QWORD v2[6];

  sub_21093C6BC((uint64_t)v2, a1);
  return v2[0];
}

double sub_21093D5A8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 37
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093C6BC((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_21093D648@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 37
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093C900((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21093D6E8()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75320);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75320))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75328);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75328))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75330);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75330))
    {
LABEL_13:
      if (byte_254A75C37 < 0)
      {
        sub_2108B314C(&xmmword_254A75C08, (void *)qword_254A75C20, unk_254A75C28);
      }
      else
      {
        xmmword_254A75C08 = *(_OWORD *)&qword_254A75C20;
        unk_254A75C18 = unk_254A75C30;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75C08, &dword_21089F000);
      __cxa_guard_release(&qword_254A75328);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75338);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75338))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Argb8u>]", &qword_254A75C38);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75C38, &dword_21089F000);
      __cxa_guard_release(&qword_254A75338);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75340);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75340))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75348);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75348))
      {
        if (byte_254A75C50[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75C50, *(unint64_t *)&byte_254A75C50[8]);
        else
          __p = *(std::string *)byte_254A75C50;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75C68);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75C68, &dword_21089F000);
        __cxa_guard_release(&qword_254A75348);
      }
      if (byte_254A75C7F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75C68, *((unint64_t *)&xmmword_254A75C68 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75C68;
        v18 = unk_254A75C78;
      }
      sub_21090B948((char *)v17, (std::string *)&qword_254A75C20);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75C20, &dword_21089F000);
      __cxa_guard_release(&qword_254A75330);
      goto LABEL_13;
    }
    if (byte_254A75C4F >= 0)
      v6 = byte_254A75C4F;
    else
      v6 = unk_254A75C40;
    if (byte_254A75C4F >= 0)
      v7 = &qword_254A75C38;
    else
      v7 = (uint64_t *)qword_254A75C38;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75C50[8] = v6;
      *(_QWORD *)&byte_254A75C50[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75C50 = v13;
    }
    else
    {
      v13 = byte_254A75C50;
      byte_254A75C50[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75C50, &dword_21089F000);
    __cxa_guard_release(&qword_254A75340);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A75C1F < 0)
  {
    sub_2108B314C(&xmmword_254A75BF0, (void *)xmmword_254A75C08, *((unint64_t *)&xmmword_254A75C08 + 1));
  }
  else
  {
    xmmword_254A75BF0 = xmmword_254A75C08;
    unk_254A75C00 = unk_254A75C18;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75BF0, &dword_21089F000);
  __cxa_guard_release(&qword_254A75320);
LABEL_2:
  if (byte_254A75C07 >= 0)
    return &xmmword_254A75BF0;
  else
    return (__int128 *)xmmword_254A75BF0;
}

void sub_21093DB3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75330);
  __cxa_guard_abort(&qword_254A75328);
  __cxa_guard_abort(&qword_254A75320);
  _Unwind_Resume(a1);
}

void sub_21093DBD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75320);
  _Unwind_Resume(a1);
}

void sub_21093DBF0()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21093DC2C(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_21093E420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21093E454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21093E468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_21093E49C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_21093E4B0()
{
  return 65792;
}

_QWORD *sub_21093E4BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

uint64_t sub_21093E4FC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t (**v63)();
  uint64_t *v64;
  std::__shared_weak_count *v65;
  uint64_t v66[2];
  char v67;
  char *v68;
  _BYTE v69[12];
  int v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = off_24CA7E9F0;
  v4 = *(unsigned int *)(a2 + 32);
  LODWORD(v5) = *(_DWORD *)(a2 + 36);
  if (v5 <= 0x10)
    v5 = 16;
  else
    v5 = v5;
  *(_DWORD *)v69 = 4;
  v6 = *(_QWORD *)(a2 + 24);
  *(_DWORD *)&v69[4] = v6;
  v54 = *(_QWORD *)v69;
  v55 = HIDWORD(v6);
  *(_DWORD *)v69 = 1;
  *(_QWORD *)&v69[4] = v4 | (v5 << 32);
  v56 = *(_QWORD *)v69;
  v57 = v5;
  v58 = v6;
  v59 = *(_QWORD *)&v69[4];
  v52 = a3[1];
  v53 = a3[2];
  v51 = *a3;
  sub_210918DD4(a1, (__int128 *)&v54);
  v60 = v51;
  v61 = v52;
  v62 = v53;
  if (*(_DWORD *)(a1 + 40) > 2u)
    goto LABEL_78;
  v7 = *(uint64_t **)(a1 + 24);
  if (!v7)
    goto LABEL_75;
  v9 = *v7;
  v8 = (std::__shared_weak_count *)v7[1];
  if (!v8)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  do
    v12 = __ldaxr(p_shared_owners);
  while (__stlxr(v12 - 1, p_shared_owners));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (!v9)
      goto LABEL_75;
  }
  else
  {
LABEL_11:
    if (!v9)
      goto LABEL_75;
  }
  v13 = *(_DWORD *)(a1 + 40);
  if (v13 == 2)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v33 = *(std::__shared_weak_count **)(a1 + 32);
    v64 = v32;
    v65 = v33;
    if (v33)
    {
      v34 = (unint64_t *)&v33->__shared_owners_;
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 1, v34));
    }
    v63 = &off_24CA84D20;
    if (v32)
    {
      v37 = *v32;
      v36 = (std::__shared_weak_count *)v32[1];
      if (v36)
      {
        v38 = (unint64_t *)&v36->__shared_owners_;
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 1, v38));
        do
          v40 = __ldaxr(v38);
        while (__stlxr(v40 - 1, v38));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      if (v37)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v64 = v23;
    v65 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v63 = &off_24CA84D20;
    if (v23)
    {
      v28 = *v23;
      v27 = (std::__shared_weak_count *)v23[1];
      if (v27)
      {
        v29 = (unint64_t *)&v27->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      if (v28)
        goto LABEL_52;
    }
    goto LABEL_53;
  }
  if (v13)
LABEL_78:
    sub_2108B9060();
  v14 = *(uint64_t **)(a1 + 24);
  v15 = *(std::__shared_weak_count **)(a1 + 32);
  v64 = v14;
  v65 = v15;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v63 = &off_24CA84D20;
  if (v14)
  {
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (v18)
    {
      v20 = (unint64_t *)&v18->__shared_owners_;
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      do
        v22 = __ldaxr(v20);
      while (__stlxr(v22 - 1, v20));
      if (!v22)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    if (v19)
LABEL_52:
      sub_2109E430C((uint64_t)v64);
  }
LABEL_53:
  sub_21091909C((uint64_t)v69, a1);
  v66[0] = (uint64_t)&v60;
  v66[1] = (uint64_t)v69;
  if (DWORD1(v61) == 1 && v70 == 1)
  {
    sub_2109005E8(v66);
  }
  else
  {
    v67 = 0;
    if (DWORD2(v60) && HIDWORD(v60) && (_DWORD)v61)
    {
      v68 = &v67;
      sub_210900F9C((uint64_t)&v68, (uint64_t)&v60, (uint64_t)v69);
    }
  }
  if (!v64)
    goto LABEL_70;
  v43 = *v64;
  v42 = (std::__shared_weak_count *)v64[1];
  if (v42)
  {
    v44 = (unint64_t *)&v42->__shared_owners_;
    do
      v45 = __ldxr(v44);
    while (__stxr(v45 + 1, v44));
    do
      v46 = __ldaxr(v44);
    while (__stlxr(v46 - 1, v44));
    if (!v46)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
      if (!v43)
        goto LABEL_70;
      goto LABEL_69;
    }
  }
  if (v43)
LABEL_69:
    sub_2109E44E0((uint64_t)v64);
LABEL_70:
  v63 = &off_24CA84E68;
  v47 = v65;
  if (v65)
  {
    v48 = (unint64_t *)&v65->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
LABEL_75:
  *(_QWORD *)a1 = off_24CA7E9F0;
  return a1;
}

void sub_21093E91C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::__shared_weak_count *a29)
{
  uint64_t v29;
  uint64_t v30;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;

  if (a29)
  {
    p_shared_owners = (unint64_t *)&a29->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))a29->__on_zero_shared)(a29);
      std::__shared_weak_count::__release_weak(a29);
    }
  }
  *(_QWORD *)v29 = off_24CA7DD90;
  v34 = *(unsigned int *)(v29 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA7EDC8[v34])(v30 - 104, v29 + 16);
  *(_DWORD *)(v29 + 40) = -1;
  _Unwind_Resume(exception_object);
}

uint64_t sub_21093EA3C(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DD90;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return a1;
}

void sub_21093EAA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          *(_QWORD *)&v30 = &off_24CA84E68;
          *((_QWORD *)&v30 + 1) = v10;
          v31 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210918938(a1, (uint64_t)&v27);
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          *(_QWORD *)&v30 = &off_24CA84E68;
          v24 = v31;
          if (v31)
          {
            v25 = (unint64_t *)&v31->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  LODWORD(v30) = 4;
  *(_QWORD *)((char *)&v30 + 4) = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(DWORD1(v30), 4);
  LODWORD(v30) = 1;
  *(_QWORD *)((char *)&v30 + 4) = v19;
  v21 = v30;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21093ECC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_21093ECE4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t (**v27)();
  uint64_t v28;
  std::__shared_weak_count *v29;
  uint64_t (**v30)();
  uint64_t v31;
  std::__shared_weak_count *v32;
  _BYTE v33[24];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a2 + 40) >= 3u)
    goto LABEL_38;
  v4 = *(uint64_t **)(a2 + 24);
  if (v4)
  {
    v6 = *v4;
    v5 = (std::__shared_weak_count *)v4[1];
    if (!v5)
      goto LABEL_8;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6)
      {
LABEL_9:
        if (*(_DWORD *)(a2 + 40) < 3u)
        {
          v10 = *(_QWORD *)(a2 + 24);
          v11 = *(std::__shared_weak_count **)(a2 + 32);
          v30 = &off_24CA84E68;
          v31 = v10;
          v32 = v11;
          if (v11)
          {
            v12 = (unint64_t *)&v11->__shared_owners_;
            do
              v13 = __ldxr(v12);
            while (__stxr(v13 + 1, v12));
            v28 = v10;
            v29 = v11;
            do
              v14 = __ldxr(v12);
            while (__stxr(v14 + 1, v12));
          }
          else
          {
            v28 = v10;
            v29 = 0;
          }
          v27 = &off_24CA84E68;
          sub_210918938((uint64_t)v33, (uint64_t)&v27);
          *(_QWORD *)a1 = *(_QWORD *)v33;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)&v33[8];
          *(_OWORD *)(a1 + 24) = v34;
          *(_QWORD *)(a1 + 40) = v35;
          v27 = &off_24CA84E68;
          if (v11)
          {
            v22 = (unint64_t *)&v11->__shared_owners_;
            do
              v23 = __ldaxr(v22);
            while (__stlxr(v23 - 1, v22));
            if (!v23)
            {
              ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
              std::__shared_weak_count::__release_weak(v11);
            }
          }
          v30 = &off_24CA84E68;
          v24 = v32;
          if (v32)
          {
            v25 = (unint64_t *)&v32->__shared_owners_;
            do
              v26 = __ldaxr(v25);
            while (__stlxr(v26 - 1, v25));
            if (!v26)
            {
              ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
              std::__shared_weak_count::__release_weak(v24);
            }
          }
          return;
        }
LABEL_38:
        sub_2108B9060();
      }
    }
    else
    {
LABEL_8:
      if (v6)
        goto LABEL_9;
    }
  }
  if (*(_DWORD *)(a2 + 76))
    v15 = *(_DWORD *)(a2 + 72) == 0;
  else
    v15 = 1;
  v16 = *(_QWORD *)(a2 + 72);
  if (v15)
    v16 = 0;
  *(_DWORD *)v33 = 4;
  *(_QWORD *)&v33[4] = v16;
  v17 = 4 * ((_DWORD)v16 != 0);
  LODWORD(v18) = v17 * v16;
  if (HIDWORD(v16))
    v18 = v18;
  else
    v18 = 0;
  v19 = v17 & 0x3FFFFFFFFLL | ((unint64_t)(v18 >> 2) << 34);
  v20 = __PAIR64__(*(unsigned int *)&v33[4], 4);
  *(_DWORD *)v33 = 1;
  *(_QWORD *)&v33[4] = v19;
  v21 = *(_QWORD *)v33;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v20;
  *(_DWORD *)(a1 + 16) = HIDWORD(v16);
  *(_QWORD *)(a1 + 20) = v21;
  *(_DWORD *)(a1 + 28) = v18;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v19;
}

void sub_21093EF2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_2109DEB5C((uint64_t *)va);
  sub_2109DEB5C((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_21093EF48()
{
  return 38;
}

uint64_t (***sub_21093EF50())()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75048);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75048))
    return &off_253ED6E48;
  __cxa_guard_release(&qword_254A75048);
  return &off_253ED6E48;
}

void sub_21093EFA4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int v4;
  uint64_t *v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  _OWORD v41[3];
  char v42[8];
  uint64_t v43;
  uint64_t (**v44)();
  uint64_t *v45;
  std::__shared_weak_count *v46;
  __int128 v47[3];

  v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 2)
  {
    v14 = *(uint64_t **)(a1 + 24);
    v15 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v14;
    v46 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
    }
    v44 = &off_24CA84D00;
    if (!v14)
      goto LABEL_37;
    v19 = *v14;
    v18 = (std::__shared_weak_count *)v14[1];
    if (!v18)
      goto LABEL_24;
    v20 = (unint64_t *)&v18->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (v22)
    {
LABEL_24:
      if (!v19)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    if (!v19)
      goto LABEL_37;
LABEL_36:
    sub_2109E4220((uint64_t)v45);
    goto LABEL_37;
  }
  if (v4 == 1)
  {
    v23 = *(uint64_t **)(a1 + 24);
    v24 = *(std::__shared_weak_count **)(a1 + 32);
    v45 = v23;
    v46 = v24;
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    v44 = &off_24CA84D00;
    if (!v23)
      goto LABEL_37;
    v28 = *v23;
    v27 = (std::__shared_weak_count *)v23[1];
    if (!v27)
      goto LABEL_35;
    v29 = (unint64_t *)&v27->__shared_owners_;
    do
      v30 = __ldxr(v29);
    while (__stxr(v30 + 1, v29));
    do
      v31 = __ldaxr(v29);
    while (__stlxr(v31 - 1, v29));
    if (v31)
    {
LABEL_35:
      if (!v28)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
    std::__shared_weak_count::__release_weak(v27);
    if (!v28)
      goto LABEL_37;
    goto LABEL_36;
  }
  if (v4)
    sub_2108B9060();
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  v45 = v5;
  v46 = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v44 = &off_24CA84D00;
  if (v5)
  {
    v10 = *v5;
    v9 = (std::__shared_weak_count *)v5[1];
    if (!v9)
      goto LABEL_13;
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (v13)
    {
LABEL_13:
      if (!v10)
        goto LABEL_37;
      goto LABEL_36;
    }
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (v10)
      goto LABEL_36;
  }
LABEL_37:
  sub_21093ECE4((uint64_t)v42, a1);
  sub_21093ECE4((uint64_t)v41, a1);
  v32 = operator new();
  v47[0] = v41[0];
  v47[1] = v41[1];
  v47[2] = v41[2];
  sub_21093E4FC(v32, (uint64_t)&v43, v47);
  *a2 = v32;
  if (!v45)
    goto LABEL_45;
  v34 = *v45;
  v33 = (std::__shared_weak_count *)v45[1];
  if (!v33)
    goto LABEL_43;
  v35 = (unint64_t *)&v33->__shared_owners_;
  do
    v36 = __ldxr(v35);
  while (__stxr(v36 + 1, v35));
  do
    v37 = __ldaxr(v35);
  while (__stlxr(v37 - 1, v35));
  if (v37)
  {
LABEL_43:
    if (!v34)
      goto LABEL_45;
    goto LABEL_44;
  }
  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
  std::__shared_weak_count::__release_weak(v33);
  if (v34)
LABEL_44:
    sub_2109E43F4((uint64_t)v45);
LABEL_45:
  v44 = &off_24CA84E68;
  v38 = v46;
  if (v46)
  {
    v39 = (unint64_t *)&v46->__shared_owners_;
    do
      v40 = __ldaxr(v39);
    while (__stlxr(v40 - 1, v39));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
      std::__shared_weak_count::__release_weak(v38);
    }
  }
}

void sub_21093F368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  MEMORY[0x212BCC6FC](v14, 0x10A3C4049419736);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21093F394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_21093F3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  sub_2109DD7A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_21093F3BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DD590(a2, v2);
  if (v3 != 1)
  {
    if (v3)
      sub_2108B9060();
    return sub_2109DD590(a2, v2);
  }
  return sub_2109DD69C(a2, v2);
}

double sub_21093F3FC(uint64_t a1, void *lpsrc)
{
  void *v4;
  uint64_t v5;
  int v6;
  std::__shared_weak_count *v7;
  uint64_t *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  double result;
  unint64_t *p_shared_owners;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53[3];
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA84C98, (const struct __class_type_info *)&unk_24CA7EDB0, 0);
  if (v4)
  {
    v5 = (uint64_t)v4;
    v6 = *((_DWORD *)v4 + 10);
    if (v6 == 2)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v20 = __ldxr(p_shared_owners);
        while (__stxr(v20 + 1, p_shared_owners));
      }
      if (v8)
      {
        v22 = *v8;
        v21 = (std::__shared_weak_count *)v8[1];
        if (v21)
        {
          v23 = (unint64_t *)&v21->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        if (v22)
          goto LABEL_43;
      }
    }
    else if (v6 == 1)
    {
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v26 = (unint64_t *)&v7->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      if (v8)
      {
        v29 = *v8;
        v28 = (std::__shared_weak_count *)v8[1];
        if (v28)
        {
          v30 = (unint64_t *)&v28->__shared_owners_;
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
          do
            v32 = __ldaxr(v30);
          while (__stlxr(v32 - 1, v30));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
            std::__shared_weak_count::__release_weak(v28);
          }
        }
        if (v29)
          goto LABEL_43;
      }
    }
    else
    {
      if (v6)
        sub_2108B9060();
      v8 = (uint64_t *)*((_QWORD *)v4 + 3);
      v7 = (std::__shared_weak_count *)*((_QWORD *)v4 + 4);
      if (v7)
      {
        v9 = (unint64_t *)&v7->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      if (v8)
      {
        v12 = *v8;
        v11 = (std::__shared_weak_count *)v8[1];
        if (v11)
        {
          v13 = (unint64_t *)&v11->__shared_owners_;
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
          do
            v15 = __ldaxr(v13);
          while (__stlxr(v15 - 1, v13));
          if (!v15)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        if (v12)
LABEL_43:
          sub_2109E4220((uint64_t)v8);
      }
    }
    sub_21093ECE4((uint64_t)&v54, v5);
    v53[0] = v54;
    v53[1] = v55;
    v53[2] = v56;
    sub_21093E4FC((uint64_t)&v47, (uint64_t)&v54 + 8, v53);
    if (v8)
    {
      v34 = *v8;
      v33 = (std::__shared_weak_count *)v8[1];
      if (v33)
      {
        v35 = (unint64_t *)&v33->__shared_owners_;
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
        do
          v37 = __ldaxr(v35);
        while (__stlxr(v37 - 1, v35));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
          if (!v34)
            goto LABEL_52;
          goto LABEL_51;
        }
      }
      if (v34)
LABEL_51:
        sub_2109E43F4((uint64_t)v8);
    }
LABEL_52:
    if (v7)
    {
      v38 = (unint64_t *)&v7->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    v40 = DWORD2(v49);
    *(_DWORD *)(a1 + 8) = DWORD2(v47);
    v41 = *(unsigned int *)(a1 + 40);
    if ((_DWORD)v41 == -1)
    {
      if ((_DWORD)v40 == -1)
      {
        result = *(double *)&v50;
        v44 = v51;
        *(_OWORD *)(a1 + 48) = v50;
        *(_OWORD *)(a1 + 64) = v44;
        *(_QWORD *)(a1 + 80) = v52;
        return result;
      }
    }
    else if ((_DWORD)v40 == -1)
    {
      ((void (*)(__int128 *, uint64_t))off_24CA7EDC8[v41])(&v54, a1 + 16);
      *(_DWORD *)(a1 + 40) = -1;
      goto LABEL_62;
    }
    *(_QWORD *)&v54 = a1 + 16;
    ((void (*)(__int128 *))off_24CA7EDF8[v40])(&v54);
LABEL_62:
    v42 = DWORD2(v49);
    result = *(double *)&v50;
    v43 = v51;
    *(_OWORD *)(a1 + 48) = v50;
    *(_OWORD *)(a1 + 64) = v43;
    *(_QWORD *)(a1 + 80) = v52;
    *(_QWORD *)&v47 = off_24CA7DD90;
    if ((_DWORD)v42 != -1)
      ((void (*)(__int128 *, __int128 *))off_24CA7EDC8[v42])(&v54, &v48);
    return result;
  }
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t))(*(_QWORD *)lpsrc + 72))(&v54, lpsrc, 38);
  v17 = *(_OWORD *)(v54 + 16);
  v16 = *(_OWORD *)(v54 + 32);
  v47 = *(_OWORD *)v54;
  v48 = v17;
  v49 = v16;
  *(_QWORD *)&v54 = 0;
  MEMORY[0x212BCC6FC]();
  sub_21093EAA0((uint64_t)&v54, a1);
  *(_QWORD *)&v53[0] = &v47;
  *((_QWORD *)&v53[0] + 1) = &v54;
  if (DWORD1(v48) == 1 && DWORD1(v55) == 1)
  {
    sub_2109005E8((uint64_t *)v53);
  }
  else
  {
    v45 = 0;
    if (DWORD2(v47) && HIDWORD(v47) && (_DWORD)v48)
    {
      v46 = &v45;
      sub_210900F9C((uint64_t)&v46, (uint64_t)&v47, (uint64_t)&v54);
    }
  }
  return result;
}

uint64_t sub_21093F964(uint64_t a1)
{
  _QWORD v2[6];

  sub_21093EAA0((uint64_t)v2, a1);
  return v2[0];
}

double sub_21093F98C@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 38
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 314, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093EAA0((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

double sub_21093FA2C@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _OWORD *v5;
  __int128 v6;
  double result;
  _OWORD v8[2];
  __int128 v9;

  if (a2 != 38
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 321, (uint64_t)"F == format", 11, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21093ECE4((uint64_t)v8, a1);
  v5 = (_OWORD *)operator new();
  v6 = v8[1];
  *v5 = v8[0];
  v5[1] = v6;
  result = *(double *)&v9;
  v5[2] = v9;
  *a3 = v5;
  return result;
}

__int128 *sub_21093FACC()
{
  unsigned __int8 v0;
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  size_t v6;
  uint64_t *v7;
  _BYTE *v8;
  size_t v9;
  uint64_t *v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17[2];
  uint64_t v18;
  std::string __p;

  v0 = atomic_load((unsigned __int8 *)&qword_254A75350);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75350))
    goto LABEL_2;
  v2 = atomic_load((unsigned __int8 *)&qword_254A75358);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A75358))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_254A75360);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75360))
    {
LABEL_13:
      if (byte_254A75CC7 < 0)
      {
        sub_2108B314C(&xmmword_254A75C98, (void *)qword_254A75CB0, unk_254A75CB8);
      }
      else
      {
        xmmword_254A75C98 = *(_OWORD *)&qword_254A75CB0;
        unk_254A75CA8 = unk_254A75CC0;
      }
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75C98, &dword_21089F000);
      __cxa_guard_release(&qword_254A75358);
      goto LABEL_7;
    }
    v4 = atomic_load((unsigned __int8 *)&qword_254A75368);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A75368))
    {
      sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::iosimg::IOSurfaceImageBuffer<img::Format::Argb16u>]", &qword_254A75CC8);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75CC8, &dword_21089F000);
      __cxa_guard_release(&qword_254A75368);
    }
    v5 = atomic_load((unsigned __int8 *)&qword_254A75370);
    if ((v5 & 1) != 0 || !__cxa_guard_acquire(&qword_254A75370))
    {
LABEL_49:
      v16 = atomic_load((unsigned __int8 *)&qword_254A75378);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_254A75378))
      {
        if (byte_254A75CE0[23] < 0)
          sub_2108B314C(&__p, *(void **)byte_254A75CE0, *(unint64_t *)&byte_254A75CE0[8]);
        else
          __p = *(std::string *)byte_254A75CE0;
        sub_2109ECDA0(&__p, "std::__1::", 10, "std::", 5uLL, 0, 0, (uint64_t)&xmmword_254A75CF8);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75CF8, &dword_21089F000);
        __cxa_guard_release(&qword_254A75378);
      }
      if (byte_254A75D0F < 0)
      {
        sub_2108B314C(v17, (void *)xmmword_254A75CF8, *((unint64_t *)&xmmword_254A75CF8 + 1));
      }
      else
      {
        *(_OWORD *)v17 = xmmword_254A75CF8;
        v18 = unk_254A75D08;
      }
      sub_21090BA70((char *)v17, (std::string *)&qword_254A75CB0);
      if (SHIBYTE(v18) < 0)
        operator delete(v17[0]);
      __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_254A75CB0, &dword_21089F000);
      __cxa_guard_release(&qword_254A75360);
      goto LABEL_13;
    }
    if (byte_254A75CDF >= 0)
      v6 = byte_254A75CDF;
    else
      v6 = unk_254A75CD0;
    if (byte_254A75CDF >= 0)
      v7 = &qword_254A75CC8;
    else
      v7 = (uint64_t *)qword_254A75CC8;
    v8 = (char *)v7 + v6;
    if ((uint64_t)v6 >= 1)
    {
      v9 = v6;
      v10 = v7;
      do
      {
        v11 = memchr(v10, 60, v9);
        if (!v11)
          break;
        if (*v11 == 60)
          goto LABEL_35;
        v10 = (uint64_t *)(v11 + 1);
        v9 = v8 - (_BYTE *)v10;
      }
      while (v8 - (_BYTE *)v10 > 0);
    }
    v11 = (char *)v7 + v6;
LABEL_35:
    v12 = v11 - (_BYTE *)v7;
    if (v11 == v8)
      v12 = -1;
    if (v6 >= v12)
      v6 = v12;
    if (v6 >= 0x7FFFFFFFFFFFFFF8)
      sub_2108A4B7C();
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v13 = (char *)operator new(v14 + 1);
      *(_QWORD *)&byte_254A75CE0[8] = v6;
      *(_QWORD *)&byte_254A75CE0[16] = v15 | 0x8000000000000000;
      *(_QWORD *)byte_254A75CE0 = v13;
    }
    else
    {
      v13 = byte_254A75CE0;
      byte_254A75CE0[23] = v6;
      if (!v6)
        goto LABEL_48;
    }
    memmove(v13, v7, v6);
LABEL_48:
    v13[v6] = 0;
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], byte_254A75CE0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75370);
    goto LABEL_49;
  }
LABEL_7:
  if (byte_254A75CAF < 0)
  {
    sub_2108B314C(&xmmword_254A75C80, (void *)xmmword_254A75C98, *((unint64_t *)&xmmword_254A75C98 + 1));
  }
  else
  {
    xmmword_254A75C80 = xmmword_254A75C98;
    unk_254A75C90 = unk_254A75CA8;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A75C80, &dword_21089F000);
  __cxa_guard_release(&qword_254A75350);
LABEL_2:
  if (byte_254A75C97 >= 0)
    return &xmmword_254A75C80;
  else
    return (__int128 *)xmmword_254A75C80;
}

void sub_21093FF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0)
    operator delete(__p);
  __cxa_guard_abort(&qword_254A75360);
  __cxa_guard_abort(&qword_254A75358);
  __cxa_guard_abort(&qword_254A75350);
  _Unwind_Resume(a1);
}

void sub_21093FFBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A75350);
  _Unwind_Resume(a1);
}

void sub_21093FFD4()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 333, (uint64_t)&unk_210A01421, 0, (uint64_t)"Access notification must only be done in debug.", 47, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210940010(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t (**v78)();
  __int128 v79;

  if (a2)
  {
    v4 = *(_DWORD *)(a1 + 40);
    switch(v4)
    {
      case 2:
        v24 = *(uint64_t **)(a1 + 24);
        v25 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v24;
        *((_QWORD *)&v76 + 1) = v25;
        if (v25)
        {
          v26 = (unint64_t *)(v25 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        if (v24)
        {
          v29 = *v24;
          v28 = (std::__shared_weak_count *)v24[1];
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v31 = __ldxr(p_shared_owners);
            while (__stxr(v31 + 1, p_shared_owners));
            do
              v32 = __ldaxr(p_shared_owners);
            while (__stlxr(v32 - 1, p_shared_owners));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
          if (v29)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 1:
        v33 = *(uint64_t **)(a1 + 24);
        v34 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v33;
        *((_QWORD *)&v76 + 1) = v34;
        if (v34)
        {
          v35 = (unint64_t *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        if (v33)
        {
          v38 = *v33;
          v37 = (std::__shared_weak_count *)v33[1];
          if (v37)
          {
            v39 = (unint64_t *)&v37->__shared_owners_;
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 1, v39));
            do
              v41 = __ldaxr(v39);
            while (__stlxr(v41 - 1, v39));
            if (!v41)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
          if (v38)
            goto LABEL_55;
        }
        goto LABEL_56;
      case 0:
        v5 = *(uint64_t **)(a1 + 24);
        v6 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)&v76 = v5;
        *((_QWORD *)&v76 + 1) = v6;
        if (v6)
        {
          v7 = (unint64_t *)(v6 + 8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 1, v7));
        }
        if (v5)
        {
          v10 = *v5;
          v9 = (std::__shared_weak_count *)v5[1];
          if (v9)
          {
            v11 = (unint64_t *)&v9->__shared_owners_;
            do
              v12 = __ldxr(v11);
            while (__stxr(v12 + 1, v11));
            do
              v13 = __ldaxr(v11);
            while (__stlxr(v13 - 1, v11));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
          if (v10)
LABEL_55:
            sub_2109E430C(v76);
        }
LABEL_56:
        v42 = (_QWORD *)operator new();
        v79 = v76;
        v78 = &off_24CA84D20;
        *v42 = &off_24CA7EAA0;
        sub_2109DDAC8(v42 + 1, (uint64_t)&v78);
        if ((_QWORD)v79)
        {
          v44 = *(_QWORD *)v79;
          v43 = *(std::__shared_weak_count **)(v79 + 8);
          if (v43)
          {
            v45 = (unint64_t *)&v43->__shared_owners_;
            do
              v46 = __ldxr(v45);
            while (__stxr(v46 + 1, v45));
            do
              v47 = __ldaxr(v45);
            while (__stlxr(v47 - 1, v45));
            if (!v47)
            {
              ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
              std::__shared_weak_count::__release_weak(v43);
              if (!v44)
                goto LABEL_64;
              goto LABEL_63;
            }
          }
          if (v44)
LABEL_63:
            sub_2109E44E0(v79);
        }
LABEL_64:
        v78 = &off_24CA84E68;
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
        if (!*((_QWORD *)&v79 + 1))
          goto LABEL_68;
        v49 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (v50)
        {
LABEL_68:
          *a3 = v42;
          return;
        }
        goto LABEL_69;
    }
LABEL_112:
    sub_2108B9060();
  }
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 == 2)
  {
    v51 = *(uint64_t **)(a1 + 24);
    v52 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v51;
    *((_QWORD *)&v77 + 1) = v52;
    if (v52)
    {
      v53 = (unint64_t *)(v52 + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
    }
    if (!v51)
      goto LABEL_94;
    v56 = *v51;
    v55 = (std::__shared_weak_count *)v51[1];
    if (v55)
    {
      v57 = (unint64_t *)&v55->__shared_owners_;
      do
        v58 = __ldxr(v57);
      while (__stxr(v58 + 1, v57));
      do
        v59 = __ldaxr(v57);
      while (__stlxr(v59 - 1, v57));
      if (!v59)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    if (!v56)
      goto LABEL_94;
LABEL_93:
    sub_2109E4220(v77);
    goto LABEL_94;
  }
  if (v14 == 1)
  {
    v60 = *(uint64_t **)(a1 + 24);
    v61 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)&v77 = v60;
    *((_QWORD *)&v77 + 1) = v61;
    if (v61)
    {
      v62 = (unint64_t *)(v61 + 8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 1, v62));
    }
    if (!v60)
      goto LABEL_94;
    v65 = *v60;
    v64 = (std::__shared_weak_count *)v60[1];
    if (v64)
    {
      v66 = (unint64_t *)&v64->__shared_owners_;
      do
        v67 = __ldxr(v66);
      while (__stxr(v67 + 1, v66));
      do
        v68 = __ldaxr(v66);
      while (__stlxr(v68 - 1, v66));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
        std::__shared_weak_count::__release_weak(v64);
      }
    }
    if (!v65)
      goto LABEL_94;
    goto LABEL_93;
  }
  if (v14)
    goto LABEL_112;
  v15 = *(uint64_t **)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v77 + 1) = v16;
  if (v16)
  {
    v17 = (unint64_t *)(v16 + 8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  if (v15)
  {
    v20 = *v15;
    v19 = (std::__shared_weak_count *)v15[1];
    if (v19)
    {
      v21 = (unint64_t *)&v19->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v20)
      goto LABEL_93;
  }
LABEL_94:
  v42 = (_QWORD *)operator new();
  v79 = v77;
  v78 = &off_24CA84D00;
  *v42 = &off_24CA7EA80;
  sub_2109DD69C(v42 + 1, (uint64_t)&v78);
  if ((_QWORD)v79)
  {
    v70 = *(_QWORD *)v79;
    v69 = *(std::__shared_weak_count **)(v79 + 8);
    if (v69)
    {
      v71 = (unint64_t *)&v69->__shared_owners_;
      do
        v72 = __ldxr(v71);
      while (__stxr(v72 + 1, v71));
      do
        v73 = __ldaxr(v71);
      while (__stlxr(v73 - 1, v71));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
        if (!v70)
          goto LABEL_102;
        goto LABEL_101;
      }
    }
    if (v70)
LABEL_101:
      sub_2109E43F4(v79);
  }
LABEL_102:
  v78 = &off_24CA84E68;
  v48 = (std::__shared_weak_count *)*((_QWORD *)&v79 + 1);
  if (*((_QWORD *)&v79 + 1))
  {
    v74 = (unint64_t *)(*((_QWORD *)&v79 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
LABEL_69:
      ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
      std::__shared_weak_count::__release_weak(v48);
      *a3 = v42;
      return;
    }
  }
  *a3 = v42;
}

void sub_210940804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DD7A8(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_210940838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DD7A8(&a9);
  _Unwind_Resume(a1);
}

void sub_21094084C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  sub_2109DDBD4(&a12);
  MEMORY[0x212BCC6FC](v12, 0xA1C40711E6FFCLL);
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

void sub_210940880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2109DDBD4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210940894()
{
  return 65792;
}

_QWORD *sub_2109408A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = a1 + 16;
  v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2)
    return sub_2109DDAC8(a2, v2);
  if (v3 > 1)
    sub_2108B9060();
  return sub_2109DD9BC(a2, v2);
}

std::string *sub_2109408E0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A72318);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A72318))
    return &stru_254A72300;
  sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr8u]", __p);
  sub_2109ED678((uint64_t)__p, &stru_254A72300);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A72300, &dword_21089F000);
  __cxa_guard_release(&qword_254A72318);
  return &stru_254A72300;
}

void sub_210940998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A72318);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A72318);
  _Unwind_Resume(a1);
}

std::string *sub_2109409D8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A72338);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A72338))
    return &stru_254A72320;
  sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba8u]", __p);
  sub_2109ED678((uint64_t)__p, &stru_254A72320);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A72320, &dword_21089F000);
  __cxa_guard_release(&qword_254A72338);
  return &stru_254A72320;
}

void sub_210940A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A72338);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A72338);
  _Unwind_Resume(a1);
}

std::string *sub_210940AD0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A72358);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A72358))
    return &stru_254A72340;
  sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr8u]", __p);
  sub_2109ED678((uint64_t)__p, &stru_254A72340);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A72340, &dword_21089F000);
  __cxa_guard_release(&qword_254A72358);
  return &stru_254A72340;
}

void sub_210940B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A72358);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A72358);
  _Unwind_Resume(a1);
}

_QWORD *sub_210940BC8(_QWORD *a1)
{
  *a1 = &off_24CA7EA80;
  sub_2109DD7A8(a1 + 1);
  return a1;
}

void sub_210940BF8(_QWORD *a1)
{
  *a1 = &off_24CA7EA80;
  sub_2109DD7A8(a1 + 1);
  JUMPOUT(0x212BCC6FCLL);
}

_QWORD *sub_210940C38(_QWORD *a1)
{
  *a1 = &off_24CA7EAA0;
  sub_2109DDBD4(a1 + 1);
  return a1;
}

void sub_210940C68(_QWORD *a1)
{
  *a1 = &off_24CA7EAA0;
  sub_2109DDBD4(a1 + 1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210940CA8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  std::logic_error *exception;
  unsigned int v7;
  std::string v8;

  v4 = sub_2109DF77C(a1);
  v5 = sub_2108F3BB8(v4);
  if ((v5 & 0xFF00000000) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v7 = sub_2109DF77C(a1);
    sub_210940DA0("Attempting to map iosurface of format ", &v7, (uint64_t)" into a SharedIOSurfaceImage. The format is not (yet) supported by Kit_IOSurfaceImage.");
    std::logic_error::logic_error(exception, &v8);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24CA79220, MEMORY[0x24BEDAB88]);
  }
  sub_210941B08(a2, v5);
}

void sub_210940D68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t sub_210940DA0(char *__s, unsigned int *a2, uint64_t a3)
{
  uint64_t result;
  char v6;
  _DWORD v7[6];
  int v8;
  _QWORD v9[5];
  _QWORD *v10;

  v8 = 0;
  sub_21094BD18(v7, __s);
  sub_2108FCB84((uint64_t)&v6, (uint64_t)v7, a2);
  v9[0] = v7;
  v9[1] = a3;
  v9[2] = v7;
  v9[3] = a3;
  v9[4] = a3;
  if (v8 == -1)
    sub_2108B9060();
  v10 = v9;
  ((void (*)(_QWORD **, _DWORD *))off_24CA802F8[v8])(&v10, v7);
  if (v8 == -1)
    sub_2108B9060();
  v9[0] = &v10;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24CA80310[v8])(v9, v7);
  if (v8 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24CA802E0[v8])(v9, v7);
  return result;
}

void sub_210940E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2108B9008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_210940EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2108B9008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_210940EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2108B9008((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_210940ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_2108B9008((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210940EE8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DA30;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_210940F60(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DC70;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_210940FD8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DE20;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_210941050(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DFD0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C40EE3858B8);
}

uint64_t sub_2109410C8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DAC0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941140(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DEB0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_2109411B8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7E060;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941230(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DB50;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_2109412A8(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DB50;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941320(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DD00;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941398(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941410(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941488(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DF40;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941500(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7E0F0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941578(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_2109415F0(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DBE0;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

uint64_t sub_210941668(uint64_t a1)
{
  uint64_t v2;
  char v4;

  *(_QWORD *)a1 = off_24CA7DD90;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v4, a1 + 16);
  *(_DWORD *)(a1 + 40) = -1;
  return MEMORY[0x212BCC6FC](a1, 0x10A3C4049419736);
}

void sub_2109416E0(uint64_t a1, _QWORD *a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a2 = &off_24CA84E68;
  v2 = (std::__shared_weak_count *)a2[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

_QWORD *sub_210941744(uint64_t a1, _QWORD *a2)
{
  return sub_2109DD7A8(a2);
}

_QWORD *sub_21094174C(uint64_t a1, _QWORD *a2)
{
  return sub_2109DDBD4(a2);
}

__n128 sub_210941754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA84E68;
  result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  return result;
}

__n128 sub_210941770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;

  result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a2 = &off_24CA84D00;
  return result;
}

__n128 sub_21094178C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;

  result = *(__n128 *)(a3 + 8);
  *(__n128 *)(a2 + 8) = result;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a2 = &off_24CA84D20;
  return result;
}

void sub_2109417A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char v10;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_9;
  if ((_DWORD)v5)
  {
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v5])(&v10, v4);
LABEL_9:
    *(_QWORD *)v4 = &off_24CA84E68;
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_DWORD *)(v4 + 24) = 0;
    return;
  }
  v6 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_210941878(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  if ((_DWORD)v5 != 1)
  {
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v5])(&v17, v4);
LABEL_18:
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)v4 = &off_24CA84D00;
    *(_DWORD *)(v4 + 24) = 1;
    return;
  }
  v7 = *(uint64_t **)(a2 + 8);
  if (v7)
  {
    v9 = *v7;
    v8 = (std::__shared_weak_count *)v7[1];
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (v9)
      sub_2109E43F4(*(_QWORD *)(a2 + 8));
  }
  v13 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v13;
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_2109419C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  if ((_DWORD)v5 != 2)
  {
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v5])(&v17, v4);
LABEL_18:
    *(_OWORD *)(v4 + 8) = *(_OWORD *)(a3 + 8);
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)v4 = &off_24CA84D20;
    *(_DWORD *)(v4 + 24) = 2;
    return;
  }
  v7 = *(uint64_t **)(a2 + 8);
  if (v7)
  {
    v9 = *v7;
    v8 = (std::__shared_weak_count *)v7[1];
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v11 = __ldxr(p_shared_owners);
      while (__stxr(v11 + 1, p_shared_owners));
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (v9)
      sub_2109E44E0(*(_QWORD *)(a2 + 8));
  }
  v13 = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v13;
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_210941B08(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

void sub_210941B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  _QWORD *v35;
  unint64_t *v36;
  unint64_t v37;
  _QWORD *v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t (*v70)();
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  _QWORD *v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  uint64_t (**v93)();
  _QWORD *v94;
  std::__shared_weak_count *v95;
  __int128 v96;
  uint64_t (*v97)();
  uint64_t (**v98)();
  _QWORD *v99;
  std::__shared_weak_count *v100;
  uint64_t (**v101)();
  _QWORD *v102;
  std::__shared_weak_count *v103;
  uint64_t (**v104)();
  _QWORD *v105;
  std::__shared_weak_count *v106;

  v3 = (_QWORD *)operator new();
  v4 = v3;
  v5 = *(_QWORD **)(v1 + 8);
  v6 = *(std::__shared_weak_count **)(v1 + 16);
  v98 = &off_24CA84E68;
  v99 = v5;
  v100 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v102 = v5;
    v103 = v6;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v101 = &off_24CA84E68;
    *v3 = off_24CA7DA30;
    if (!v5)
      goto LABEL_17;
  }
  else
  {
    v102 = v5;
    v103 = 0;
    v101 = &off_24CA84E68;
    *v3 = off_24CA7DA30;
    if (!v5)
      goto LABEL_17;
  }
  v11 = *v5;
  v10 = (std::__shared_weak_count *)v5[1];
  if (v10)
  {
    v12 = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v5 = v102;
  if (v11)
  {
    v15 = *((_DWORD *)v102 + 4);
    goto LABEL_18;
  }
LABEL_17:
  v15 = 0;
LABEL_18:
  v4[2] = &off_24CA84E68;
  *((_DWORD *)v4 + 2) = v15;
  v16 = v103;
  v4[3] = v5;
  v4[4] = v16;
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    *((_DWORD *)v4 + 10) = 0;
    v104 = &off_24CA84E68;
    v105 = v5;
    v106 = v16;
    do
      v19 = __ldxr(v17);
    while (__stxr(v19 + 1, v17));
    if (!v5)
    {
LABEL_33:
      if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 156, (uint64_t)"ref.IsValid()", 13, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
      {
        abort();
      }
      goto LABEL_34;
    }
  }
  else
  {
    *((_DWORD *)v4 + 10) = 0;
    v104 = &off_24CA84E68;
    v105 = v5;
    v106 = 0;
    if (!v5)
      goto LABEL_33;
  }
  v21 = *v5;
  v20 = (std::__shared_weak_count *)v5[1];
  if (v20)
  {
    v22 = (unint64_t *)&v20->__shared_owners_;
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  if (!v21)
    goto LABEL_33;
LABEL_34:
  v25 = v106;
  v93 = &off_24CA84E68;
  v94 = v105;
  v95 = v106;
  if (v106)
  {
    v26 = (unint64_t *)&v106->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }
  sub_21094C3A0((uint64_t)&v93);
  v93 = &off_24CA84E68;
  if (v25)
  {
    v28 = (unint64_t *)&v25->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v30 = v106;
  if (v106)
  {
    v31 = (unint64_t *)&v106->__shared_owners_;
    do
      v32 = __ldxr(v31);
    while (__stxr(v32 + 1, v31));
    do
      v33 = __ldaxr(v31);
    while (__stlxr(v33 - 1, v31));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
    v35 = v105;
    v34 = v106;
    *(_QWORD *)(v2 - 136) = &off_24CA84E68;
    *(_QWORD *)(v2 - 128) = v35;
    *(_QWORD *)(v2 - 120) = v34;
    if (v34)
    {
      v36 = (unint64_t *)&v34->__shared_owners_;
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 1, v36));
    }
  }
  else
  {
    v38 = v105;
    *(_QWORD *)(v2 - 136) = &off_24CA84E68;
    *(_QWORD *)(v2 - 128) = v38;
    *(_QWORD *)(v2 - 120) = 0;
  }
  v39 = sub_2109DED7C(v2 - 136);
  v40 = sub_2109DEFFC(v2 - 136);
  v41 = sub_2109DF27C(v2 - 136);
  v42 = sub_2109DF4FC(v2 - 136);
  *(_QWORD *)(v2 - 136) = &off_24CA84E68;
  v43 = *(std::__shared_weak_count **)(v2 - 120);
  if (v43)
  {
    v44 = (unint64_t *)&v43->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  v4[6] = v39 | ((unint64_t)v40 << 32);
  v4[7] = v41 | ((unint64_t)v42 << 32);
  v104 = &off_24CA84E68;
  v46 = v106;
  if (v106)
  {
    v47 = (unint64_t *)&v106->__shared_owners_;
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  if (!v102)
    goto LABEL_77;
  v49 = (std::__shared_weak_count *)v102[1];
  if (v49)
  {
    v50 = (unint64_t *)&v49->__shared_owners_;
    do
      v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
    do
      v52 = __ldaxr(v50);
    while (__stlxr(v52 - 1, v50));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  if (v102)
  {
    v54 = *v102;
    v53 = (std::__shared_weak_count *)v102[1];
    if (v53)
    {
      v55 = (unint64_t *)&v53->__shared_owners_;
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 1, v55));
      do
        v57 = __ldaxr(v55);
      while (__stlxr(v57 - 1, v55));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
  }
  else
  {
LABEL_77:
    v54 = 0;
  }
  if (*((_DWORD *)v4 + 12))
  {
    if ((v54 == 0) == (*((_DWORD *)v4 + 13) == 0))
      goto LABEL_83;
  }
  else if (!v54)
  {
    goto LABEL_83;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurfaceImage/src/IOSurfaceImage.cpp", 105, (uint64_t)"(buffer == nullptr) == extent.IsEmpty()", 39, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_83:
  v101 = &off_24CA84E68;
  v58 = v103;
  if (v103)
  {
    v59 = (unint64_t *)&v103->__shared_owners_;
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  *v4 = off_24CA80380;
  v98 = &off_24CA84E68;
  v61 = v100;
  if (v100)
  {
    v62 = (unint64_t *)&v100->__shared_owners_;
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  v93 = &off_24CA7A958;
  *(_QWORD *)(v2 - 136) = v4;
  v64 = (std::__shared_weak_count *)operator new();
  v65 = v64;
  v64->__shared_owners_ = 0;
  v66 = (unint64_t *)&v64->__shared_owners_;
  v64->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA7EE20;
  v64->__shared_weak_owners_ = 0;
  v64[1].__vftable = (std::__shared_weak_count_vtbl *)v4;
  *(_QWORD *)(v2 - 128) = v64;
  do
    v67 = __ldxr(v66);
  while (__stxr(v67 + 1, v66));
  v94 = v4;
  v95 = v64;
  do
    v68 = __ldxr(v66);
  while (__stxr(v68 + 1, v66));
  do
    v69 = __ldaxr(v66);
  while (__stlxr(v69 - 1, v66));
  if (!v69)
  {
    ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
    std::__shared_weak_count::__release_weak(v65);
  }
  (*(void (**)(uint64_t (***__return_ptr)(), _QWORD *, uint64_t))(*v4 + 64))(&v104, v4, 1);
  v70 = v104[2];
  v96 = *(_OWORD *)v104;
  v97 = v70;
  v104 = 0;
  MEMORY[0x212BCC6FC]();
  v71 = v95;
  if (v95)
  {
    v72 = (unint64_t *)&v95->__shared_owners_;
    do
      v73 = __ldxr(v72);
    while (__stxr(v73 + 1, v72));
    do
      v74 = __ldaxr(v72);
    while (__stlxr(v74 - 1, v72));
    if (!v74)
    {
      ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
      std::__shared_weak_count::__release_weak(v71);
    }
  }
  v75 = *(std::__shared_weak_count **)(v2 - 128);
  if (v75)
  {
    v76 = (unint64_t *)&v75->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
  }
  *(_QWORD *)v0 = &off_24CA7AA50;
  v78 = v94;
  v79 = v95;
  if (v95)
  {
    v80 = (unint64_t *)&v95->__shared_owners_;
    do
      v81 = __ldxr(v80);
    while (__stxr(v81 + 1, v80));
    v82 = HIDWORD(v97);
    v83 = *((_QWORD *)&v96 + 1);
    v84 = v96;
    do
      v85 = __ldxr(v80);
    while (__stxr(v85 + 1, v80));
    do
      v86 = __ldxr(v80);
    while (__stxr(v86 + 1, v80));
  }
  else
  {
    v82 = HIDWORD(v97);
    v83 = *((_QWORD *)&v96 + 1);
    v84 = v96;
  }
  *(_QWORD *)(v0 + 8) = v78;
  *(_QWORD *)(v0 + 16) = v79;
  *(_QWORD *)(v0 + 24) = v83;
  *(_DWORD *)(v0 + 32) = v82;
  *(_QWORD *)(v0 + 40) = v84;
  *(_DWORD *)(v0 + 48) = 1;
  *(_WORD *)(v0 + 52) = 256;
  if (v79)
  {
    v87 = (unint64_t *)&v79->__shared_owners_;
    do
      v88 = __ldaxr(v87);
    while (__stlxr(v88 - 1, v87));
    if (!v88)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      std::__shared_weak_count::__release_weak(v79);
    }
    do
      v89 = __ldaxr(v87);
    while (__stlxr(v89 - 1, v87));
    if (!v89)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      std::__shared_weak_count::__release_weak(v79);
    }
  }
  v93 = &off_24CA7A958;
  v90 = v95;
  if (v95)
  {
    v91 = (unint64_t *)&v95->__shared_owners_;
    do
      v92 = __ldaxr(v91);
    while (__stlxr(v92 - 1, v91));
    if (!v92)
    {
      ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
      std::__shared_weak_count::__release_weak(v90);
    }
  }
}

void sub_210948A8C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948AA8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948AC4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948AE0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948AFC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948B18(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948B34(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948B50(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948B6C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108A894C(v1);
  sub_2108A894C(v2 - 136);
  _Unwind_Resume(a1);
}

void sub_210948B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  va_list va;

  va_start(va, a17);
  *(_QWORD *)v17 = off_24CA7E0F0;
  v20 = *(unsigned int *)(v17 + 40);
  if ((_DWORD)v20 != -1)
    ((void (*)(char *, uint64_t))off_24CA7EDC8[v20])(va, v18);
  *(_DWORD *)(v17 + 40) = -1;
  MEMORY[0x212BCC6FC](v17, 0x10A3C4049419736);
  _Unwind_Resume(a1);
}

void sub_210949224(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949248(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DA30;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C40EE3858B8);
  }
  return result;
}

uint64_t sub_2109492C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE1EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_210949334(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7EE70;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2109493A8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7EE70;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094941C()
{
  return 2;
}

uint64_t sub_210949424(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21094942C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_210949444(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2109494C4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_2109494E8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DC70;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C40EE3858B8);
  }
  return result;
}

uint64_t sub_210949564(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_2109495D4(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7EFB8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_210949648(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7EFB8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_2109496BC()
{
  return 3;
}

uint64_t sub_2109496C4(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2109496CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_2109496E4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_210949764(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949788(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DE20;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C40EE3858B8);
  }
  return result;
}

uint64_t sub_210949804(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_210949874(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F100;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2109498E8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F100;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094995C()
{
  return 4;
}

uint64_t sub_210949964(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21094996C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_210949984(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_210949A04(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949A28(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DFD0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C40EE3858B8);
  }
  return result;
}

uint64_t sub_210949AA4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_210949B14(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F248;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_210949B88(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F248;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949BFC()
{
  return 5;
}

uint64_t sub_210949C04(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_210949C0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_210949C20(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_210949CA0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949CC4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DAC0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_210949D40(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_210949DB0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F390;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_210949E24(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F390;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949E98()
{
  return 7;
}

uint64_t sub_210949EA0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_210949EA8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_210949EC0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_210949F40(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210949F64(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DEB0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_210949FE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094A050(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F4D8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094A0C4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F4D8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A138()
{
  return 8;
}

uint64_t sub_21094A140(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094A148@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094A160(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094A1E0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A204(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7E060;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094A280(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094A2F0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F620;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094A364(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F620;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A3D8()
{
  return 17;
}

uint64_t sub_21094A3E0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094A3E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094A3FC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094A47C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A4A0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DB50;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094A51C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE17EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094A58C(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F768;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094A600(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F768;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A674()
{
  return 21;
}

uint64_t sub_21094A67C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094A684@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094A698(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094A718(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A73C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DB50;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094A7B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094A828(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F8B0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094A89C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F8B0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A910()
{
  return 22;
}

uint64_t sub_21094A918(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094A920@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094A938(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094A9B8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094A9DC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DD00;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094AA58(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094AAC8(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7F9F8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094AB3C(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7F9F8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094ABB0()
{
  return 25;
}

uint64_t sub_21094ABB8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094ABC0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094ABD4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094AC54(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094AC78(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DBE0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094ACF4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094AD64(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7FB40;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094ADD8(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7FB40;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094AE4C()
{
  return 29;
}

uint64_t sub_21094AE54(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094AE5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094AE70(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094AEF0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094AF14(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DBE0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094AF90(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE29EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094B000(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7FC88;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094B074(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7FC88;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B0E8()
{
  return 31;
}

uint64_t sub_21094B0F0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094B0F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094B110(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094B190(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B1B4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DF40;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094B230(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094B2A0(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7FDD0;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094B314(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7FDD0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B388()
{
  return 32;
}

uint64_t sub_21094B390(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094B398@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094B3B0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094B430(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B454(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7E0F0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094B4D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094B540(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA7FF18;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094B5B4(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA7FF18;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B628()
{
  return 33;
}

uint64_t sub_21094B630(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094B638@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094B64C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094B6CC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B6F0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DBE0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094B76C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE33EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094B7DC(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA80060;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094B850(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA80060;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B8C4()
{
  return 37;
}

uint64_t sub_21094B8CC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094B8D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094B8E8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094B968(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094B98C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DBE0;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094BA08(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_21094BA78(_QWORD *result)
{
  _QWORD *v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  *result = &off_24CA801A8;
  v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21094BAEC(_QWORD *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  *a1 = &off_24CA801A8;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094BB60()
{
  return 38;
}

uint64_t sub_21094BB68(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21094BB70@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_21094BB88(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21094BC08(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21094BC2C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA7DD90;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA7EDC8[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    return MEMORY[0x212BCC6FC](v1, 0x10A3C4049419736);
  }
  return result;
}

uint64_t sub_21094BCA8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit6iosimg20IOSurfaceImageBufferILNS2_3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_DWORD *sub_21094BD18(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24CA802E0[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

size_t sub_21094BE08(_QWORD **a1)
{
  _DWORD *v1;
  const char *v2;
  uint64_t v3;
  size_t result;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v1 = (_DWORD *)**a1;
  v2 = (const char *)(*a1)[1];
  v3 = v1[6];
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, _DWORD *))off_24CA802E0[v3])(&v9, v1);
  v1[6] = -1;
  result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v5 = result;
  if (result >= 0x17)
  {
    v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17)
      v7 = result | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    *((_QWORD *)v1 + 1) = v5;
    *((_QWORD *)v1 + 2) = v8 | 0x8000000000000000;
    *(_QWORD *)v1 = v6;
  }
  else
  {
    *((_BYTE *)v1 + 23) = result;
    v6 = v1;
    if (!result)
      goto LABEL_11;
  }
  result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((_BYTE *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_21094BEF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  void *v6;
  const char *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void *v14;
  _BYTE v15[15];
  char v16;
  void *__p[2];
  unint64_t v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 16);
  *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
  v4 = *(void **)a2;
  v19[0] = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v14 = v4;
  *(_QWORD *)v15 = v19[0];
  *(_QWORD *)&v15[7] = *(_QWORD *)((char *)v19 + 7);
  v16 = v5;
  memset(v19, 0, 15);
  v6 = __p;
  v7 = *(const char **)(v2 + 24);
  v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v11 = v8 | 7;
    v12 = v11 + 1;
    v6 = operator new(v11 + 1);
    __p[1] = v9;
    v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((_BYTE *)v9 + (_QWORD)v6) = 0;
    v10 = *(unsigned int *)(v3 + 24);
    if ((_DWORD)v10 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v10 = *(unsigned int *)(v3 + 24);
  if ((_DWORD)v10 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24CA802E0[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_2108B9228((_QWORD *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0)
    goto LABEL_15;
}

void sub_21094C0AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_21094C0F0(uint64_t a1, void **a2)
{
  const void *v3;
  _BYTE *v4;
  _QWORD *v5;
  size_t v6;
  size_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  size_t v18;
  size_t v19;
  void *v20;
  char *v21;
  void **v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  void **v27;

  v3 = *(const void **)(*(_QWORD *)a1 + 32);
  v5 = a2[1];
  v4 = a2[2];
  if (v5 < (_QWORD *)v4)
  {
    v6 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7)
      sub_2108A4B7C();
    v7 = v6;
    if (v6 >= 0x17)
    {
      v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17)
        v14 = v6 | 7;
      v15 = v14 + 1;
      v8 = operator new(v14 + 1);
      v5[1] = v7;
      v5[2] = v15 | 0x8000000000000000;
      *v5 = v8;
    }
    else
    {
      *((_BYTE *)v5 + 23) = v6;
      v8 = v5;
      if (!v6)
        goto LABEL_19;
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((_BYTE *)v8 + v7) = 0;
    v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (_BYTE *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_2108B327C();
  v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (_BYTE *)*a2) >> 3);
  v11 = 2 * v10;
  if (2 * v10 <= v9 + 1)
    v11 = v9 + 1;
  if (v10 >= 0x555555555555555)
    v12 = 0xAAAAAAAAAAAAAAALL;
  else
    v12 = v11;
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL)
      sub_2108B2B1C();
    v13 = (char *)operator new(24 * v12);
  }
  else
  {
    v13 = 0;
  }
  v17 = &v13[24 * v9];
  v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7)
    sub_2108A4B7C();
  v19 = v18;
  if (v18 >= 0x17)
  {
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17)
      v24 = v18 | 7;
    v25 = v24 + 1;
    v20 = operator new(v24 + 1);
    *((_QWORD *)v17 + 1) = v19;
    *((_QWORD *)v17 + 2) = v25 | 0x8000000000000000;
    *(_QWORD *)v17 = v20;
  }
  else
  {
    v17[23] = v18;
    v20 = v17;
    if (!v18)
    {
      v21 = &v13[24 * v12];
      *v17 = 0;
      v16 = v17 + 24;
      v22 = (void **)*a2;
      v23 = (void **)a2[1];
      if (v23 == *a2)
        goto LABEL_36;
      do
      {
LABEL_30:
        v26 = *(_OWORD *)(v23 - 3);
        *((_QWORD *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      v23 = (void **)*a2;
      v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0)
          operator delete(*(v27 - 3));
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  v21 = &v13[24 * v12];
  *((_BYTE *)v20 + v19) = 0;
  v16 = v17 + 24;
  v22 = (void **)*a2;
  v23 = (void **)a2[1];
  if (v23 != *a2)
    goto LABEL_30;
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23)
    operator delete(v23);
LABEL_39:
  a2[1] = v16;
}

void sub_21094C380(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_21094C398(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_21094C3A0(uint64_t a1)
{
  uint64_t result;
  char *v2;
  uint64_t v3;
  _DWORD v4[12];
  uint64_t vars0;

  result = sub_2109DF77C(a1);
  v2 = (char *)&vars0;
  if ((int)result > 875836517)
  {
    if ((int)result > 1111970368)
    {
      switch((_DWORD)result)
      {
        case 0x42475241:
          v3 = 4;
          break;
        case 0x4C303038:
          v3 = 0;
          break;
        case 0x52474241:
          v3 = 6;
          break;
        default:
          goto LABEL_29;
      }
    }
    else
    {
      switch((_DWORD)result)
      {
        case 0x34343466:
          v3 = 10;
          break;
        case 0x34343476:
          v3 = 9;
          break;
        case 0x41424752:
          v3 = 5;
          break;
        default:
          goto LABEL_29;
      }
    }
  }
  else if ((int)result > 843264055)
  {
    switch((_DWORD)result)
    {
      case 0x32433038:
        v3 = 11;
        break;
      case 0x34323066:
        v3 = 8;
        break;
      case 0x34323076:
        v3 = 7;
        break;
      default:
        goto LABEL_29;
    }
  }
  else
  {
    switch((_DWORD)result)
    {
      case 0x18:
        v3 = 1;
        break;
      case 0x20:
        v3 = 3;
        break;
      case 0x32344247:
        v3 = 2;
        break;
      default:
        goto LABEL_29;
    }
  }
  v2 = (char *)&v4[v3];
LABEL_29:
  if (v2 - (char *)v4 == 48)
  {
    result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/IOSurface/include/Kit/IOSurface/View.h", 111, (uint64_t)"Contains(pf::formats::U8(), ref.Format())", 41, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4);
    if ((_DWORD)result)
      abort();
  }
  return result;
}

void sub_21094C554()
{
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21094C568(int a1@<W1>, uint64_t a2@<X8>)
{
  sub_21094DE94(a2, a1);
}

void sub_21094C590(uint64_t a1, int a2)
{
  __asm { BR              X12 }
}

uint64_t sub_21094C5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)();
  int v12;
  _BYTE v13[24];
  unsigned int v14;
  __int128 v15;
  _QWORD v16[16];

  if (a3 <= 0x20)
    v5 = 32;
  else
    v5 = a3;
  v11 = (void (**)())off_24CA80380;
  if (v3)
    v6 = v5;
  else
    v6 = 32;
  v16[0] = a3;
  v16[1] = ((_DWORD)a3 != 0) | (unint64_t)(v6 << 32);
  sub_2109133A4((uint64_t)&v11, (unsigned int *)v16);
  v11 = (void (**)())off_24CA80380;
  result = operator new();
  v8 = result;
  *(_QWORD *)result = off_24CA7DA30;
  v9 = v14;
  *(_DWORD *)(result + 8) = v12;
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  if ((_DWORD)v9 == -1)
  {
    *(_OWORD *)(result + 48) = v15;
    *(_QWORD *)result = off_24CA80380;
  }
  else
  {
    result = ((uint64_t (*)(_QWORD *, uint64_t, _BYTE *))off_24CA7EDE0[v9])(v16, result + 16, v13);
    *(_DWORD *)(v8 + 40) = v9;
    v10 = v14;
    *(_OWORD *)(v8 + 48) = v15;
    *(_QWORD *)v8 = off_24CA80380;
    v11 = off_24CA7DA30;
    if ((_DWORD)v10 != -1)
      result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA7EDC8[v10])(v16, v13);
  }
  *v4 = v8;
  return result;
}

void sub_21094D980()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_210A01421, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21094D9B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a2)
    sub_2108ABF6C(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_21094DE94(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_21094DEE4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  std::__shared_weak_count *v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  _QWORD v58[3];
  void **v59[6];
  _BYTE v60[16];
  _BYTE v61[248];

  LODWORD(v6) = *a3;
  v7 = a3[1];
  v8 = *a3 != 0;
  if (*a3 <= 0x20u)
    LODWORD(v6) = 32;
  v9 = *(_QWORD *)a3;
  *(_QWORD *)v4 = off_24CA80380;
  if (v7)
    v6 = v6;
  else
    v6 = 32;
  v58[0] = v9;
  v58[1] = v8 | (v6 << 32);
  v57 = 0;
  sub_2109133A4((uint64_t)v60, (unsigned int *)v58);
  if (*(_DWORD *)(v4 + 40) > 2u)
    goto LABEL_73;
  v10 = *(uint64_t **)(v4 + 24);
  if (v10)
  {
    v12 = *v10;
    v11 = (std::__shared_weak_count *)v10[1];
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    if (v12)
    {
      v16 = *(_DWORD *)(v4 + 40);
      switch(v16)
      {
        case 2:
          v35 = *(uint64_t **)(v4 + 24);
          v36 = *(_QWORD *)(v4 + 32);
          *(_QWORD *)(v4 + 136) = v35;
          *(_QWORD *)(v4 + 144) = v36;
          if (v36)
          {
            v37 = (unint64_t *)(v36 + 8);
            do
              v38 = __ldxr(v37);
            while (__stxr(v38 + 1, v37));
          }
          *(_QWORD *)(v4 + 128) = &off_24CA84D20;
          if (!v35)
            goto LABEL_54;
          v40 = *v35;
          v39 = (std::__shared_weak_count *)v35[1];
          if (v39)
          {
            v41 = (unint64_t *)&v39->__shared_owners_;
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 1, v41));
            do
              v43 = __ldaxr(v41);
            while (__stlxr(v43 - 1, v41));
            if (!v43)
            {
              ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
              std::__shared_weak_count::__release_weak(v39);
            }
          }
          if (!v40)
            goto LABEL_54;
          break;
        case 1:
          v26 = *(uint64_t **)(v4 + 24);
          v27 = *(_QWORD *)(v4 + 32);
          *(_QWORD *)(v4 + 136) = v26;
          *(_QWORD *)(v4 + 144) = v27;
          if (v27)
          {
            v28 = (unint64_t *)(v27 + 8);
            do
              v29 = __ldxr(v28);
            while (__stxr(v29 + 1, v28));
          }
          *(_QWORD *)(v4 + 128) = &off_24CA84D20;
          if (!v26)
            goto LABEL_54;
          v31 = *v26;
          v30 = (std::__shared_weak_count *)v26[1];
          if (v30)
          {
            v32 = (unint64_t *)&v30->__shared_owners_;
            do
              v33 = __ldxr(v32);
            while (__stxr(v33 + 1, v32));
            do
              v34 = __ldaxr(v32);
            while (__stlxr(v34 - 1, v32));
            if (!v34)
            {
              ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
              std::__shared_weak_count::__release_weak(v30);
            }
          }
          if (!v31)
            goto LABEL_54;
          break;
        case 0:
          v17 = *(uint64_t **)(v4 + 24);
          v18 = *(_QWORD *)(v4 + 32);
          *(_QWORD *)(v4 + 136) = v17;
          *(_QWORD *)(v4 + 144) = v18;
          if (v18)
          {
            v19 = (unint64_t *)(v18 + 8);
            do
              v20 = __ldxr(v19);
            while (__stxr(v20 + 1, v19));
          }
          *(_QWORD *)(v4 + 128) = &off_24CA84D20;
          if (!v17)
            goto LABEL_54;
          v22 = *v17;
          v21 = (std::__shared_weak_count *)v17[1];
          if (v21)
          {
            v23 = (unint64_t *)&v21->__shared_owners_;
            do
              v24 = __ldxr(v23);
            while (__stxr(v24 + 1, v23));
            do
              v25 = __ldaxr(v23);
            while (__stlxr(v25 - 1, v23));
            if (!v25)
            {
              ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
              std::__shared_weak_count::__release_weak(v21);
            }
          }
          if (!v22)
            goto LABEL_54;
          break;
        default:
LABEL_73:
          sub_2108B9060();
      }
      sub_2109E430C(*(_QWORD *)(v4 + 136));
LABEL_54:
      sub_210913A9C((uint64_t *)(v5 - 160), (uint64_t)v60);
      v59[0] = (void **)(v5 - 160);
      v59[1] = (void **)&v57;
      sub_2108FE49C(v59);
      v44 = *(uint64_t **)(v4 + 136);
      if (v44)
      {
        v46 = *v44;
        v45 = (std::__shared_weak_count *)v44[1];
        if (v45)
        {
          v47 = (unint64_t *)&v45->__shared_owners_;
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        if (v46)
          sub_2109E44E0(*(_QWORD *)(v4 + 136));
      }
      *(_QWORD *)(v4 + 128) = &off_24CA84E68;
      v50 = *(std::__shared_weak_count **)(v4 + 144);
      if (v50)
      {
        v51 = (unint64_t *)&v50->__shared_owners_;
        do
          v52 = __ldaxr(v51);
        while (__stlxr(v52 - 1, v51));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
      }
    }
  }
  *(_QWORD *)v4 = off_24CA80380;
  result = operator new();
  v54 = result;
  *(_QWORD *)result = off_24CA7DA30;
  *(_DWORD *)(result + 8) = *(_DWORD *)(v4 + 8);
  *(_BYTE *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = -1;
  v55 = *(unsigned int *)(v4 + 40);
  if ((_DWORD)v55 == -1)
  {
    *(_OWORD *)(result + 48) = *(_OWORD *)(v4 + 48);
    *(_QWORD *)result = off_24CA80380;
  }
  else
  {
    result = ((uint64_t (*)(uint64_t, uint64_t, _BYTE *))off_24CA7EDE0[v55])(v5 - 120, result + 16, v61);
    *(_DWORD *)(v54 + 40) = v55;
    v56 = *(unsigned int *)(v4 + 40);
    *(_OWORD *)(v54 + 48) = *(_OWORD *)(v4 + 48);
    *(_QWORD *)v54 = off_24CA80380;
    *(_QWORD *)v4 = off_24CA7DA30;
    if ((_DWORD)v56 != -1)
      result = ((uint64_t (*)(uint64_t, _BYTE *))off_24CA7EDC8[v56])(v5 - 120, v61);
  }
  *v3 = v54;
  return result;
}

void sub_21095183C()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)&unk_210A01421, 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_210951870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,std::__shared_weak_count *a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  unint64_t *p_shared_owners;
  unint64_t v32;
  uint64_t v33;

  if (a22)
  {
    p_shared_owners = (unint64_t *)&a22->__shared_owners_;
    do
      v32 = __ldaxr(p_shared_owners);
    while (__stlxr(v32 - 1, p_shared_owners));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
      std::__shared_weak_count::__release_weak(a22);
    }
  }
  *(_QWORD *)v28 = off_24CA7E0F0;
  v33 = *(unsigned int *)(v28 + 40);
  if ((_DWORD)v33 != -1)
    ((void (*)(uint64_t, uint64_t *))off_24CA7EDC8[v33])(v29 - 120, &a28);
  _Unwind_Resume(exception_object);
}

void sub_2109526EC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2109408E0();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_2108B9228(&__p, (uint64_t)__dst, 1uLL);
  sub_2109ED500(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2109527E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_2108A89B4(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_210952814(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2109409D8();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_2108B9228(&__p, (uint64_t)__dst, 1uLL);
  sub_2109ED500(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_210952910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_2108A89B4(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_21095293C(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_210940AD0();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_2108B9228(&__p, (uint64_t)__dst, 1uLL);
  sub_2109ED500(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_210952A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_2108A89B4(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_210952A64(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v21;
  std::__shared_weak_count *v22;

  v1 = *a1;
  v2 = **a1;
  v3 = (std::__shared_weak_count *)(*a1)[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = v1[4];
  v7 = (std::__shared_weak_count *)v1[5];
  if (!v7)
  {
    if (!v2)
    {
      v21 = v1[4];
      v22 = 0;
      if (!v3)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_10:
    v21 = v2;
    v22 = v3;
    v10 = v3;
    if (!v3)
      goto LABEL_13;
    goto LABEL_11;
  }
  v8 = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  if (v2)
    goto LABEL_10;
  v21 = v6;
  v22 = v7;
  v10 = v7;
LABEL_11:
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_13:
  if (v7)
  {
    v13 = (unint64_t *)&v7->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
LABEL_19:
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
LABEL_23:
  v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 16))(v21);
  if (v22)
  {
    v18 = (unint64_t *)&v22->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  return v17;
}

void sub_210952BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108A894C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210952BDC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;

  v1 = *a1;
  v2 = *(_QWORD *)(*a1 + 16);
  v3 = *(std::__shared_weak_count **)(*a1 + 24);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(std::__shared_weak_count **)(v1 + 40);
  if (!v7)
  {
    if (!v2)
    {
      v22 = v6 + 8;
      if (!v6)
        v22 = 0;
      v23 = v22;
      v24 = 0;
      if (v3)
        goto LABEL_21;
      goto LABEL_25;
    }
LABEL_12:
    v23 = v2;
    v24 = v3;
    v11 = v3;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  if (v2)
    goto LABEL_12;
  v10 = v6 + 8;
  if (!v6)
    v10 = 0;
  v23 = v10;
  v24 = v7;
  v11 = v7;
LABEL_13:
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
LABEL_15:
  if (v7)
  {
    v14 = (unint64_t *)&v7->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
LABEL_21:
    v16 = (unint64_t *)&v3->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
LABEL_25:
  v18 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
  if (v24)
  {
    v19 = (unint64_t *)&v24->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  return v18;
}

void sub_210952D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108A894C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_210952D6C(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t v29;
  _QWORD v30[3];
  _QWORD *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v7 = *a1;
  v8 = **a1;
  v9 = (std::__shared_weak_count *)(*a1)[1];
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v12 = v7[4];
  v13 = (std::__shared_weak_count *)v7[5];
  if (!v13)
  {
    if (!v8)
    {
      v27 = v7[4];
      v28 = 0;
      if (!v9)
        goto LABEL_23;
      goto LABEL_19;
    }
LABEL_10:
    v27 = v8;
    v28 = v9;
    v16 = v9;
    if (!v9)
      goto LABEL_13;
    goto LABEL_11;
  }
  v14 = (unint64_t *)&v13->__shared_owners_;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  if (v8)
    goto LABEL_10;
  v27 = v12;
  v28 = v13;
  v16 = v13;
LABEL_11:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
LABEL_13:
  if (v13)
  {
    v19 = (unint64_t *)&v13->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (v9)
  {
LABEL_19:
    v21 = (unint64_t *)&v9->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
LABEL_23:
  kdebug_trace();
  v29 = 0;
  v30[0] = &off_24CA80410;
  v30[1] = &v29;
  v30[2] = 0;
  v31 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v27 + 32))(v27, a2, a3);
  v29 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a4[1] - *a4) >> 2);
  if (!v31)
    sub_2108B30F0();
  (*(void (**)(_QWORD *))(*v31 + 48))(v31);
  v23 = v31;
  if (v31 == v30)
  {
    v24 = 4;
    v23 = v30;
  }
  else
  {
    if (!v31)
      goto LABEL_29;
    v24 = 5;
  }
  (*(void (**)(void))(*v23 + 8 * v24))();
LABEL_29:
  if (v28)
  {
    v25 = (unint64_t *)&v28->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_210952FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_2108A6938(&a12);
  sub_2108A894C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_210952FC4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_2108ABF6C(exception_object);
}

void sub_210952FE0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t **v37;
  _QWORD v38[3];
  _QWORD *v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 16);
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  v14 = *(_QWORD *)(v9 + 32);
  v15 = *(std::__shared_weak_count **)(v9 + 40);
  if (!v15)
  {
    if (!v10)
    {
      v31 = v14 + 8;
      if (!v14)
        v31 = 0;
      v32 = v31;
      v33 = 0;
      if (v11)
        goto LABEL_21;
      goto LABEL_25;
    }
LABEL_12:
    v32 = v10;
    v33 = v11;
    v19 = v11;
    if (!v11)
      goto LABEL_15;
    goto LABEL_13;
  }
  v16 = (unint64_t *)&v15->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
  if (v10)
    goto LABEL_12;
  v18 = v14 + 8;
  if (!v14)
    v18 = 0;
  v32 = v18;
  v33 = v15;
  v19 = v15;
LABEL_13:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldxr(v20);
  while (__stxr(v21 + 1, v20));
LABEL_15:
  if (v15)
  {
    v22 = (unint64_t *)&v15->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v11)
  {
LABEL_21:
    v24 = (unint64_t *)&v11->__shared_owners_;
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_25:
  kdebug_trace();
  v34 = 0;
  v38[0] = &off_24CA80490;
  v38[1] = &v34;
  v38[2] = 0;
  v39 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v32 + 32))(v32, a2, a3, a4);
  v35 = &v36;
  v36 = 0;
  v26 = *(unsigned int *)(a5 + 24);
  if ((_DWORD)v26 == -1)
    sub_2108B9060();
  v37 = &v35;
  ((void (*)(uint64_t ***, uint64_t))off_24CA822B8[v26])(&v37, a5);
  v34 = v36;
  if (!v39)
    sub_2108B30F0();
  (*(void (**)(_QWORD *))(*v39 + 48))(v39);
  v27 = v39;
  if (v39 == v38)
  {
    v28 = 4;
    v27 = v38;
  }
  else
  {
    if (!v39)
      goto LABEL_32;
    v28 = 5;
  }
  (*(void (**)(void))(*v27 + 8 * v28))();
LABEL_32:
  if (v33)
  {
    v29 = (unint64_t *)&v33->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
}

void sub_210953278(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_2108A6938((uint64_t *)va1);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2109532B8(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD v20[2];
  __n128 v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  int v25;
  _BYTE v26[24];
  int v27;
  uint64_t v28;
  int v29;
  __int128 v30;
  uint64_t v31;
  char v32;

  if (sub_21095354C(*a1))
  {
    if (a3 != a4
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/FeatureExtraction/src/FeatureExtractor.cpp", 207, (uint64_t)"detector_ps_handle == descriptor_ps_handle", 42, (uint64_t)"Both detector and descriptor PSHandle handles must be same for EndToEndModel.", 77, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    v10 = (*a1)[4];
    v11 = (std::__shared_weak_count *)(*a1)[5];
    v20[0] = v10;
    v20[1] = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_210953674(a5, a2, v20, a3);
    if (v11)
    {
      v14 = (unint64_t *)&v11->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else
  {
    sub_210952D6C(a1, a2, a3, &v30);
    sub_210952FE0((uint64_t *)a1, a2, (uint64_t)&v30, a4, (uint64_t)v26);
    v24 = 0;
    v25 = 0;
    v22 = 0;
    v21 = 0uLL;
    v23 = 0;
    *(_OWORD *)a5 = v30;
    *(_QWORD *)(a5 + 16) = v31;
    v30 = 0uLL;
    v31 = 0;
    *(_BYTE *)(a5 + 24) = 0;
    *(_DWORD *)(a5 + 48) = -1;
    v16 = v27;
    if (v27 != -1)
    {
      ((void (*)(char *, uint64_t, _BYTE *))off_24CA82338[v27])(&v32, a5 + 24, v26);
      *(_DWORD *)(a5 + 48) = v16;
    }
    v17 = v28;
    *(_BYTE *)(a5 + 72) = 0;
    *(_QWORD *)(a5 + 56) = v17;
    *(_DWORD *)(a5 + 64) = v29;
    *(_DWORD *)(a5 + 96) = -1;
    v18 = sub_2108CEF04((uint64_t)&v32, (__n128 *)(a5 + 72), &v21);
    *(_DWORD *)(a5 + 96) = 0;
    v19 = v23;
    *(_QWORD *)(a5 + 104) = v24;
    *(_DWORD *)(a5 + 112) = v25;
    if ((_DWORD)v19 != -1)
      ((void (*)(char *, __n128 *, __n128))off_24CA80500[v19])(&v32, &v21, v18);
    if (v27 != -1)
      ((void (*)(__n128 *, _BYTE *))off_24CA80500[v27])(&v21, v26);
    if ((_QWORD)v30)
    {
      *((_QWORD *)&v30 + 1) = v30;
      operator delete((void *)v30);
    }
  }
}

void sub_210953514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108A894C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_210953528(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 - 80);
  if (!v3)
    _Unwind_Resume(exception_object);
  *(_QWORD *)(v1 - 72) = v3;
  operator delete(v3);
  _Unwind_Resume(exception_object);
}

BOOL sub_21095354C(uint64_t *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  BOOL v18;

  v2 = *a1;
  v1 = (std::__shared_weak_count *)a1[1];
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
  }
  v6 = a1[2];
  v5 = (std::__shared_weak_count *)a1[3];
  if (v5)
  {
    v7 = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v10 = a1[4];
  v9 = (std::__shared_weak_count *)a1[5];
  if (!v9)
    goto LABEL_12;
  v11 = (unint64_t *)&v9->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  do
    v13 = __ldaxr(v11);
  while (__stlxr(v13 - 1, v11));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
    if (!v5)
      goto LABEL_18;
  }
  else
  {
LABEL_12:
    if (!v5)
      goto LABEL_18;
  }
  v14 = (unint64_t *)&v5->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_18:
  if (v1)
  {
    v16 = (unint64_t *)&v1->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  if (v10)
    v18 = v2 == 0;
  else
    v18 = 0;
  return v18 && v6 == 0;
}

_QWORD *sub_210953674(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t **v14;
  _QWORD v15[3];
  _QWORD *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  kdebug_trace();
  v11 = 0;
  v15[0] = &off_24CA80530;
  v15[1] = &v11;
  v15[2] = 0;
  v16 = v15;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)*a3 + 48))(*a3, a2, a4);
  v12 = &v13;
  v13 = 0;
  v8 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v8 == -1)
    sub_2108B9060();
  v14 = &v12;
  ((void (*)(uint64_t ***, uint64_t))off_24CA822B8[v8])(&v14, a1 + 24);
  v11 = v13;
  if (!v16)
    sub_2108B30F0();
  (*(void (**)(_QWORD *))(*v16 + 48))(v16);
  result = v16;
  if (v16 == v15)
  {
    v10 = 4;
    result = v15;
  }
  else
  {
    if (!v16)
      return result;
    v10 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v10))();
}

void sub_2109537BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_2108A6938((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2109537F4(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  _QWORD v30[2];
  _QWORD v31[3];
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  void *__p;
  uint64_t *v39;
  uint64_t v40;
  void **p_p;
  unsigned int v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  if (sub_21095354C(*a1))
  {
    v11 = (*a1)[4];
    v10 = (std::__shared_weak_count *)(*a1)[5];
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    kdebug_trace();
    v35 = 0;
    __p = &off_24CA805B0;
    v39 = &v35;
    v40 = 0;
    p_p = &__p;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v11 + 56))(v11, a2, a3, a4);
    v36 = &v37;
    v37 = 0;
    v14 = *(unsigned int *)(a5 + 48);
    if ((_DWORD)v14 == -1)
      sub_2108B9060();
    v31[0] = &v36;
    ((void (*)(_QWORD *, uint64_t))off_24CA822B8[v14])(v31, a5 + 24);
    v35 = v37;
    if (!p_p)
      sub_2108B30F0();
    (*((void (**)(void **))*p_p + 6))(p_p);
    v15 = p_p;
    if (p_p == &__p)
    {
      v16 = 4;
      v15 = &__p;
    }
    else
    {
      if (!p_p)
        goto LABEL_33;
      v16 = 5;
    }
    (*((void (**)(void))*v15 + v16))();
LABEL_33:
    if (v10)
    {
      v28 = (unint64_t *)&v10->__shared_owners_;
      do
        v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    return;
  }
  sub_210952FE0((uint64_t *)a1, a2, a3, a4, (uint64_t)v31);
  v17 = (*a1)[4];
  v18 = (std::__shared_weak_count *)(*a1)[5];
  v30[0] = v17;
  v30[1] = v18;
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  sub_210953674((uint64_t)&__p, a2, v30, a4);
  if (v18)
  {
    v21 = (unint64_t *)&v18->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  *(_QWORD *)a5 = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  *(_DWORD *)(a5 + 48) = -1;
  v23 = v32;
  if (v32 != -1)
  {
    ((void (*)(uint64_t *, uint64_t, _QWORD *))off_24CA82338[v32])(&v37, a5 + 24, v31);
    *(_DWORD *)(a5 + 48) = v23;
  }
  v24 = v33;
  *(_BYTE *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 56) = v24;
  *(_DWORD *)(a5 + 64) = v34;
  *(_DWORD *)(a5 + 96) = -1;
  v25 = v44;
  if (v44 != -1)
  {
    ((void (*)(uint64_t *))off_24CA82338[v44])(&v37);
    *(_DWORD *)(a5 + 96) = v25;
    v26 = v44;
    *(_QWORD *)(a5 + 104) = v45;
    *(_DWORD *)(a5 + 112) = v46;
    if ((_DWORD)v26 != -1)
      ((void (*)(uint64_t *, uint64_t *))off_24CA80500[v26])(&v37, &v43);
    v44 = -1;
    v27 = v42;
    if (v42 == -1)
      goto LABEL_27;
    goto LABEL_26;
  }
  *(_QWORD *)(a5 + 104) = v45;
  *(_DWORD *)(a5 + 112) = v46;
  v44 = -1;
  v27 = v42;
  if (v42 != -1)
LABEL_26:
    ((void (*)(uint64_t *, void ***))off_24CA80500[v27])(&v37, &p_p);
LABEL_27:
  v42 = -1;
  if (__p)
  {
    v39 = (uint64_t *)__p;
    operator delete(__p);
  }
  if (v32 != -1)
    ((void (*)(void **, _QWORD *))off_24CA80500[v32])(&__p, v31);
}

void sub_210953B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_2108ABF6C(exception_object);
}

void sub_210953BF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  sub_2108CEA5C(v2);
  sub_2108A6938((uint64_t *)va1);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210953C18(uint64_t *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v16;

  v2 = *a1;
  v3 = (std::__shared_weak_count *)a1[1];
  v16 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[4];
  v7 = (std::__shared_weak_count *)a1[5];
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  if (v2)
  {
    v10 = 1;
    if (!v7)
      goto LABEL_18;
  }
  else if (v6)
  {
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 40))(v6);
    if (!v7)
      goto LABEL_18;
  }
  else
  {
    v10 = 0;
    if (!v7)
      goto LABEL_18;
  }
  v11 = (unint64_t *)&v7->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
LABEL_18:
  if (!v16)
    return v10;
  v13 = (unint64_t *)&v16->__shared_owners_;
  do
    v14 = __ldaxr(v13);
  while (__stlxr(v14 - 1, v13));
  if (v14)
    return v10;
  ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
  std::__shared_weak_count::__release_weak(v16);
  return v10;
}

void sub_210953D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_2108A894C((uint64_t)&a9);
  sub_2108A894C((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t sub_210953D4C(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;

  if (!sub_210953C18(*a1))
    return 0;
  v4 = *a1;
  v5 = **a1;
  v6 = (std::__shared_weak_count *)(*a1)[1];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = v4[4];
  v10 = (std::__shared_weak_count *)v4[5];
  if (!v10)
  {
    if (!v5)
    {
      v24 = v4[4];
      v25 = 0;
      if (!v6)
        goto LABEL_26;
      goto LABEL_22;
    }
LABEL_13:
    v24 = v5;
    v25 = v6;
    v13 = v6;
    if (!v6)
      goto LABEL_16;
    goto LABEL_14;
  }
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  if (v5)
    goto LABEL_13;
  v24 = v9;
  v25 = v10;
  v13 = v10;
LABEL_14:
  v16 = (unint64_t *)&v13->__shared_owners_;
  do
    v17 = __ldxr(v16);
  while (__stxr(v17 + 1, v16));
LABEL_16:
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v6)
  {
LABEL_22:
    v20 = (unint64_t *)&v6->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_26:
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v24 + 24))(v24, a2);
  if (!v25)
    return v14;
  v22 = (unint64_t *)&v25->__shared_owners_;
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 - 1, v22));
  if (v23)
    return v14;
  ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
  std::__shared_weak_count::__release_weak(v25);
  return v14;
}

void sub_210953EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108A894C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210953EF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;

  v4 = *a1;
  v6 = *(_QWORD *)(*a1 + 16);
  v5 = *(std::__shared_weak_count **)(*a1 + 24);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v10 = *(_QWORD *)(v4 + 32);
  v9 = *(std::__shared_weak_count **)(v4 + 40);
  if (v9)
  {
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
    do
      v13 = __ldaxr(v11);
    while (__stlxr(v13 - 1, v11));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (!v5)
    goto LABEL_53;
  v14 = (unint64_t *)&v5->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_53:
    if (v6 | v10)
      goto LABEL_15;
    return 0;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!(v6 | v10))
    return 0;
LABEL_15:
  v16 = *a1;
  v17 = *(_QWORD *)(*a1 + 16);
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  if (v18)
  {
    v19 = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v21 = *(_QWORD *)(v16 + 32);
  v22 = *(std::__shared_weak_count **)(v16 + 40);
  if (v22)
  {
    v23 = (unint64_t *)&v22->__shared_owners_;
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 1, v23));
    if (!v17)
    {
      v25 = v21 + 8;
      if (!v21)
        v25 = 0;
      v38 = v25;
      v39 = v22;
      v26 = v22;
LABEL_29:
      v28 = (unint64_t *)&v26->__shared_owners_;
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
LABEL_31:
      if (v22)
      {
        v30 = (unint64_t *)&v22->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if (!v18)
        goto LABEL_41;
      goto LABEL_37;
    }
LABEL_28:
    v38 = v17;
    v39 = v18;
    v26 = v18;
    if (!v18)
      goto LABEL_31;
    goto LABEL_29;
  }
  if (v17)
    goto LABEL_28;
  v37 = v21 + 8;
  if (!v21)
    v37 = 0;
  v38 = v37;
  v39 = 0;
  if (!v18)
    goto LABEL_41;
LABEL_37:
  v32 = (unint64_t *)&v18->__shared_owners_;
  do
    v33 = __ldaxr(v32);
  while (__stlxr(v33 - 1, v32));
  if (!v33)
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
  }
LABEL_41:
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v38 + 24))(v38, a2);
  if (v39)
  {
    v34 = (unint64_t *)&v39->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  return v27;
}

void sub_21095412C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108A894C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_210954144()
{
  JUMPOUT(0x212BCC6FCLL);
}

__n128 sub_210954158(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24CA80410;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_210954190(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA80410;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2109541B0()
{
  return kdebug_trace();
}

uint64_t sub_2109541E4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_121DetectKeypointsHelperE"
                     "RKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEENS3_10shared_ptrIN"
                     "S6_17IKeypointDetectorEEEPvE3$_0JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_121DetectKeypo"
                                "intsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE"
                                "0EEENS3_10shared_ptrINS6_17IKeypointDetectorEEEPvE3$_0JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_121DetectKeypointsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEENS3_10shared_ptrINS6_17IKeypointDetectorEEEPvE3$_0JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_121DetectKeypointsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEENS3_10shared_ptrINS6_17IKeypointDetectorEEEPvE3$_0JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_210954250()
{
  return &unk_24CA80470;
}

void sub_210954260()
{
  JUMPOUT(0x212BCC6FCLL);
}

__n128 sub_210954274(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24CA80490;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2109542AC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA80490;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2109542CC()
{
  return kdebug_trace();
}

uint64_t sub_210954300(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_124ComputeDescriptorsHelp"
                     "erERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEERKNS5_13Keypoin"
                     "tsDataENS3_10shared_ptrINS6_20IDescriptorExtractorEEEPvE3$_0JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_124ComputeDesc"
                                "riptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10Mutabili"
                                "tyE0EEERKNS5_13KeypointsDataENS3_10shared_ptrINS6_20IDescriptorExtractorEEEPvE3$_0JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_124ComputeDescriptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEERKNS5_13KeypointsDataENS3_10shared_ptrINS6_20IDescriptorExtractorEEEPvE3$_0JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_124ComputeDescriptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEERKNS5_13KeypointsDataENS3_10shared_ptrINS6_20IDescriptorExtractorEEEPvE3$_0JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_21095436C()
{
  return &unk_24CA804F0;
}

void sub_21095437C()
{
  JUMPOUT(0x212BCC6FCLL);
}

__n128 sub_210954390(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24CA80530;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2109543C8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA80530;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2109543E8()
{
  return kdebug_trace();
}

uint64_t sub_21095441C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_130DetectAndComputeFeatur"
                     "esHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEENS3_10sha"
                     "red_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_130DetectAndCo"
                                "mputeFeaturesHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10Mu"
                                "tabilityE0EEENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_130DetectAndComputeFeaturesHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_130DetectAndComputeFeaturesHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_210954488()
{
  return &unk_24CA80590;
}

void sub_210954498()
{
  JUMPOUT(0x212BCC6FCLL);
}

__n128 sub_2109544AC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24CA805B0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2109544E4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA805B0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_210954504()
{
  return kdebug_trace();
}

uint64_t sub_210954538(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_135ComputeLocalGlobalDesc"
                     "riptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEERKNS"
                     "5_13KeypointsDataENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_135ComputeLoca"
                                "lGlobalDescriptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9"
                                "_10MutabilityE0EEERKNS5_13KeypointsDataENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_135ComputeLocalGlobalDescriptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEERKNS5_13KeypointsDataENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature12_GLOBAL__N_135ComputeLocalGlobalDescriptorsHelperERKNS_3kit3img9ImageViewILNS9_6FormatE1ENS9_13DynamicBufferELNS9_10MutabilityE0EEERKNS5_13KeypointsDataENS3_10shared_ptrINS6_18IEndToEndExtractorEEEPvE3$_0JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_2109545A4()
{
  return &unk_24CA80610;
}

_QWORD *sub_2109545B0(_QWORD *a1, int *a2, int a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  sub_210954A5C(a2, a3, &v12);
  v5 = v12;
  *a1 = v12;
  if (v5)
  {
    v6 = (_QWORD *)operator new();
    *v6 = &off_24CA80630;
    v6[1] = 0;
    v6[2] = 0;
    v6[3] = v5;
  }
  else
  {
    v6 = 0;
  }
  a1[1] = v6;
  sub_210954C48(a2, &v12);
  v7 = v12;
  a1[2] = v12;
  if (v7)
  {
    v8 = (_QWORD *)operator new();
    *v8 = &off_24CA80680;
    v8[1] = 0;
    v8[2] = 0;
    v8[3] = v7;
  }
  else
  {
    v8 = 0;
  }
  a1[3] = v8;
  sub_210954F98(a2, &v12);
  v9 = v12;
  a1[4] = v12;
  if (v9)
  {
    v10 = (_QWORD *)operator new();
    *v10 = &off_24CA806D0;
    v10[1] = 0;
    v10[2] = 0;
    v10[3] = v9;
  }
  else
  {
    v10 = 0;
  }
  a1[5] = v10;
  return a1;
}

void sub_2109546E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_2108A894C(v3);
  sub_2108A894C(v1);
  _Unwind_Resume(a1);
}

void sub_210954758(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108A894C(v1);
  _Unwind_Resume(a1);
}

void sub_210954770(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210954794(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_2109547AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d2lf7feature17IKeypointDetectorEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature17IKeypointDetectorEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d2lf7feature17IKeypointDetectorEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature17IKeypointDetectorEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_210954820(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210954844(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_21095485C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d2lf7feature20IDescriptorExtractorEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature20IDescriptorExtractorEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d2lf7feature20IDescriptorExtractorEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature20IDescriptorExtractorEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_2109548D0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_2109548F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_21095490C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d2lf7feature18IEndToEndExtractorEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature18IEndToEndExtractorEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d2lf7feature18IEndToEndExtractorEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature18IEndToEndExtractorEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_21095497C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;

  if (result)
  {
    v1 = result;
    v2 = *(std::__shared_weak_count **)(result + 40);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
    v5 = *(std::__shared_weak_count **)(v1 + 24);
    if (v5)
    {
      v6 = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = *(std::__shared_weak_count **)(v1 + 8);
    if (v8)
    {
      v9 = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    JUMPOUT(0x212BCC6FCLL);
  }
  return result;
}

void sub_210954A5C(int *a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *a1;
  if (a1[1] == 4 && v4 == 2 || v4 == 0)
    v4 = 0;
  if (v4)
  {
    if (v4 == 2)
    {
      v8 = (_QWORD *)operator new();
      *v8 = &off_24CA80B88;
      v8[1] = &unk_24CA80BE0;
      v9 = operator new();
      sub_21095A27C(v9, 0);
      v8[2] = v9;
      v8[3] = sub_21095A5CC;
    }
    else
    {
      v8 = (_QWORD *)operator new();
      *v8 = &off_24CA80958;
      v10 = operator new();
      sub_21095610C(v10, a2);
      v11 = (_QWORD *)operator new();
      *v11 = v10;
      v8[1] = v11;
      v8[2] = sub_210955FA8;
    }
    *a3 = v8;
  }
  else
  {
    *a3 = 0;
  }
}

void sub_210954BA8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  MEMORY[0x212BCC6FC](v1, 0xA1C4034F8F590);
  _Unwind_Resume(a1);
}

void sub_210954C04(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x212BCC6FC](v2, 0x20C40A4A59CD2);
  MEMORY[0x212BCC6FC](v1, 0xA1C40FB386A5DLL);
  _Unwind_Resume(a1);
}

_DWORD *sub_210954C48@<X0>(_DWORD *result@<X0>, _QWORD *a2@<X8>)
{
  int v2;
  _BOOL4 v5;
  BOOL v6;

  v2 = result[1];
  if (*result != 2 || v2 != 4)
  {
    v5 = v2 != 1 || result[2] != 1;
    if (v2)
      v6 = !v5;
    else
      v6 = 1;
    if (!v6)
      __asm { BR              X10 }
  }
  *a2 = 0;
  return result;
}

void sub_210954CD4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  int v15;
  _BOOL4 v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t);

  sub_2108A4A34(&__p);
  v16 = sub_210997120((uint64_t)&__p, 0xEu);
  if (a15 && a14 < 0)
    operator delete(__p);
  v17 = (_QWORD *)operator new();
  v18 = v17;
  if (v16)
  {
    *v17 = &off_24CA81408;
    v19 = (_QWORD *)operator new();
    v20 = operator new(0xD8uLL);
    v20[1] = 0;
    v20[2] = 0;
    *v20 = &off_24CA81478;
    *v19 = sub_210969C0C((uint64_t)(v20 + 3), v15);
    v19[1] = v20;
    v21 = sub_210969B9C;
  }
  else
  {
    *v17 = &off_24CA81888;
    v19 = (_QWORD *)operator new();
    sub_210979CF8(v19, 0, v15);
    v21 = sub_210979F9C;
  }
  v18[1] = v19;
  v18[2] = v21;
  JUMPOUT(0x210954C94);
}

void sub_210954EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x212BCC6FC](v16, 0xA0C40A3F8AD00);
  MEMORY[0x212BCC6FC](v15, 0xA1C4034F8F590);
  _Unwind_Resume(a1);
}

void sub_210954F54(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x212BCC6FC](v2, 0x20C40A4A59CD2);
  MEMORY[0x212BCC6FC](v1, 0xA1C40FB386A5DLL);
  _Unwind_Resume(a1);
}

void sub_210954F98(_DWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  int v3;
  int v5;
  _QWORD *v7;
  uint64_t v8;

  v3 = a1[1];
  if (*a1 == 2 && v3 == 4)
  {
    v7 = (_QWORD *)operator new();
    *v7 = &off_24CA80B88;
    v7[1] = &unk_24CA80BE0;
    v8 = operator new();
    sub_21095A27C(v8, 0);
    goto LABEL_13;
  }
  v5 = a1[2];
  if (v3 == 1 && v5 == 1)
  {
    v7 = (_QWORD *)operator new();
    *v7 = &off_24CA80B88;
    v7[1] = &unk_24CA80BE0;
    v8 = operator new();
    sub_21095A27C(v8, 4);
    goto LABEL_13;
  }
  if (v5 == 1)
  {
    v7 = (_QWORD *)operator new();
    *v7 = &off_24CA80B88;
    v7[1] = &unk_24CA80BE0;
    v8 = operator new();
    sub_21095A27C(v8, 3);
LABEL_13:
    v7[2] = v8;
    v7[3] = sub_21095A5CC;
    *a2 = v7;
    return;
  }
  *a2 = 0;
}

void sub_210955114(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x212BCC6FC](v2, 0x20C40A4A59CD2);
  MEMORY[0x212BCC6FC](v1, 0xA1C40FB386A5DLL);
  _Unwind_Resume(a1);
}

uint64_t sub_210955168(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2109551D0(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __int16 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;
  __int128 v15;
  uint64_t (**v16)();

  v16 = &off_24CA808D0;
  sub_2109CC8F4(a1, (uint64_t)&v12);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24CA80730;
  *(_OWORD *)(v3 + 8) = v13[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(v3 + 40) = v13[2];
  *(_QWORD *)(v3 + 56) = v14;
  *(_OWORD *)(v3 + 64) = v15;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80908;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v12, v3, 4);
  v7 = *(_QWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v12;
  a2[5] = v7;
  v12 = 0;
  MEMORY[0x212BCC6FC]();
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v9 = v8;
  if ((v8 & 0xFFFFFF) <= 0x10000)
    v9 = 0;
  v10 = v8 & 0xFF00;
  if ((v8 & 0xFF0000) == 0)
    v10 = 0;
  *((_WORD *)a2 + 36) = v10 & 0xFF00 | v9;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_2109553A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_2108A894C(v10);
  sub_2108A894C((uint64_t)&a10);
  sub_21095550C(&a9);
  _Unwind_Resume(a1);
}

void sub_2109553D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21095550C(&a9);
  _Unwind_Resume(a1);
}

void sub_2109553E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (a18)
    free(a18);
  _Unwind_Resume(exception_object);
}

void sub_210955400(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210955468()
{
  return 4;
}

uint64_t sub_210955470(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_210955478@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 64);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 76);
  return result;
}

uint64_t sub_210955490(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_21095550C(uint64_t *a1)
{
  uint64_t v2;
  void *v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(void **)(v2 + 48);
    if (v3)
      free(v3);
    *(_QWORD *)(v2 + 48) = 0;
    MEMORY[0x212BCC6FC](v2, 0x1091C406A8758A4);
  }
  return a1;
}

void sub_210955564()
{
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210955578()
{
  return 4;
}

__int128 *sub_210955584()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A72378);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A72378))
  {
    v2 = sub_21095565C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_2108B314C(&xmmword_254A72360, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      unk_254A72370 = *((_QWORD *)v2 + 2);
      xmmword_254A72360 = v3;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A72360, &dword_21089F000);
    __cxa_guard_release(&qword_254A72378);
  }
  if (byte_254A72377 >= 0)
    return &xmmword_254A72360;
  else
    return (__int128 *)xmmword_254A72360;
}

void sub_210955644(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A72378);
  _Unwind_Resume(a1);
}

__int128 *sub_21095565C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A72398);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A72398))
    return &xmmword_254A72380;
  v2 = sub_210955738();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(&xmmword_254A72380, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_254A72390 = v2->__r_.__value_.__r.__words[2];
    xmmword_254A72380 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A72380, &dword_21089F000);
  __cxa_guard_release(&qword_254A72398);
  return &xmmword_254A72380;
}

void sub_210955720(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A72398);
  _Unwind_Resume(a1);
}

std::string *sub_210955738()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A723B8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A723B8))
    return &stru_254A723A0;
  sub_210955828((uint64_t)__p);
  sub_21090AEE0((char *)__p, &stru_254A723A0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A723A0, &dword_21089F000);
  __cxa_guard_release(&qword_254A723B8);
  return &stru_254A723A0;
}

void sub_2109557E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A723B8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A723B8);
  _Unwind_Resume(a1);
}

void sub_210955828(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_254A723D8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A723D8))
  {
    sub_2109ED1D8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::ArrayImageBuffer<cv3d::kit::img::Format::Gray32f>]", qword_254A723C0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254A723C0, &dword_21089F000);
    __cxa_guard_release(&qword_254A723D8);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_254A723F8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_254A723F8))
  {
    v5 = sub_21090AB9C(qword_254A723C0, "<", 0);
    sub_21090AA98(qword_254A723C0, 0, v5, qword_254A723E0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_254A723E0, &dword_21089F000);
    __cxa_guard_release(&qword_254A723F8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_254A72418);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A72418))
  {
    sub_2109ED44C((uint64_t)qword_254A723E0, (uint64_t)&xmmword_254A72400);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_254A72400, &dword_21089F000);
    __cxa_guard_release(&qword_254A72418);
  }
  if (byte_254A72417 < 0)
  {
    sub_2108B314C((_BYTE *)a1, (void *)xmmword_254A72400, *((unint64_t *)&xmmword_254A72400 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_254A72400;
    *(_QWORD *)(a1 + 16) = unk_254A72410;
  }
}

void sub_2109559C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A72418);
  _Unwind_Resume(a1);
}

void sub_2109559DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A723F8);
  _Unwind_Resume(a1);
}

void sub_2109559F4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A723D8);
  _Unwind_Resume(a1);
}

void sub_210955A10(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210955A34(uint64_t result)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    v2 = *(void **)(v1 + 48);
    if (v2)
      free(v2);
    *(_QWORD *)(v1 + 48) = 0;
    JUMPOUT(0x212BCC6FCLL);
  }
  return result;
}

uint64_t sub_210955A84(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3img16ArrayImageBufferILNS3_6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_210955AF4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 16))(**(_QWORD **)(a1 + 8));
}

BOOL sub_210955B08(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;

  v3 = (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 24))(**(_QWORD **)(a1 + 8));
  return *a2 == (_DWORD)v3 && a2[1] == HIDWORD(v3);
}

void sub_210955B4C(_QWORD ***a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  __int16 v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  uint64_t (**v34)();
  uint64_t v35;
  std::__shared_weak_count *v36;
  __int128 v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  __int128 *v47;

  if ((((uint64_t (*)(_QWORD ***, uint64_t))(*a1)[3])(a1, a2 + 32) & 1) == 0
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/KeypointDetection/src/KeypointDetector.cpp", 48, (uint64_t)"IsValidInputImageResolution(image.Size())", 41, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**a1[1] + 32))(&v40, *a1[1], a2);
  v6 = (uint64_t)*a1[1];
  v34 = &off_24CA809A8;
  v7 = v41;
  v8 = v42;
  if (v42)
  {
    p_shared_owners = (unint64_t *)&v42->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v45 = v7;
    v46 = v8;
    v43 = v7;
    v44 = v8;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v35 = v7;
    v36 = v8;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v45 = v41;
    v46 = 0;
    v43 = v41;
    v44 = 0;
    v35 = v41;
    v36 = 0;
  }
  (*(void (**)(__int128 **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v7 + 72))(&v47, v7, 4);
  v15 = *((_QWORD *)v47 + 2);
  v37 = *v47;
  v38 = v15;
  v47 = 0;
  MEMORY[0x212BCC6FC]();
  if (v36)
  {
    v16 = &v36->__shared_owners_;
    do
      v17 = __ldxr((unint64_t *)v16);
    while (__stxr(v17 + 1, (unint64_t *)v16));
    do
      v18 = __ldaxr((unint64_t *)v16);
    while (__stlxr(v18 - 1, (unint64_t *)v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v35 + 104))(v35);
  v20 = v19;
  if ((v19 & 0xFFFFFF) <= 0x10000)
    v20 = 0;
  v21 = v19 & 0xFF00;
  if ((v19 & 0xFF0000) == 0)
    v21 = 0;
  v39 = v21 & 0xFF00 | v20;
  v22 = v44;
  if (v44)
  {
    v23 = (unint64_t *)&v44->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v25 = v46;
  if (v46)
  {
    v26 = (unint64_t *)&v46->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  (*(void (**)(uint64_t, uint64_t (***)(), uint64_t))(*(_QWORD *)v6 + 40))(v6, &v34, a3);
  v28 = v36;
  if (v36)
  {
    v29 = &v36->__shared_owners_;
    do
      v30 = __ldaxr((unint64_t *)v29);
    while (__stlxr(v30 - 1, (unint64_t *)v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v42;
  if (v42)
  {
    v32 = (unint64_t *)&v42->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_210955E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_210955EB0((uint64_t)va);
  sub_2108A894C(v2 + 8);
  _Unwind_Resume(a1);
}

void sub_210955E84(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_2108A894C(v1);
  sub_2108A894C(v3 - 104);
  sub_2108A894C(v3 - 88);
  sub_2108A894C(v2 + 8);
  _Unwind_Resume(a1);
}

uint64_t sub_210955EB0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_210955F18(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &off_24CA80958;
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  return a1;
}

void sub_210955F58(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &off_24CA80958;
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  JUMPOUT(0x212BCC6FCLL);
}

_QWORD *sub_210955FA8(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  if (result)
  {
    v1 = result;
    v2 = *result;
    *v1 = 0;
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    JUMPOUT(0x212BCC6FCLL);
  }
  return result;
}

void sub_210955FF8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210956060()
{
  return 4;
}

uint64_t sub_210956068(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_210956070@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_210956088(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_21095610C(uint64_t a1, int a2)
{
  uint64_t v3;
  _BYTE v5[32];
  void (**v6)();
  uint64_t v7;
  void *__p;
  void *v9;
  char v10;

  *(_QWORD *)a1 = &off_24CA80AA0;
  v3 = a1 + 8;
  sub_2109561E4(a2, a1 + 8);
  v5[0] = 0;
  v5[24] = 0;
  sub_210957F6C((uint64_t)&v6, v3, (uint64_t)v5);
  sub_210957580((uint64_t)&v6, (uint64_t *)(a1 + 160));
  v6 = (void (**)())&off_24CA82960;
  if (v10 && __p)
  {
    v9 = __p;
    operator delete(__p);
  }
  v6 = off_24CA82AC0;
  sub_2108B55B4((uint64_t)&v7);
  *(_BYTE *)(a1 + 168) = 0;
  return a1;
}

void sub_2109561B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_21095880C((uint64_t)va);
  sub_2109562DC(v5);
  _Unwind_Resume(a1);
}

void sub_2109561D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2109562DC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2109561E4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)a2 = 1;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 12) = 0x1E000000280;
  *(_QWORD *)(a2 + 24) = 0x312E7475706E69;
  *(_BYTE *)(a2 + 47) = 7;
  *(_QWORD *)(a2 + 48) = 12600;
  *(_BYTE *)(a2 + 71) = 2;
  *(_QWORD *)(a2 + 72) = 14648;
  *(_BYTE *)(a2 + 95) = 2;
  *(_QWORD *)(a2 + 96) = 12601;
  *(_BYTE *)(a2 + 119) = 2;
  result = sub_210959AB0((std::string *)(a2 + 120));
  *(_DWORD *)(a2 + 144) = a1;
  return result;
}

void sub_210956270(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 119) < 0)
  {
    operator delete(*(void **)(v1 + 96));
    if ((*(char *)(v1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 71) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((*(char *)(v1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v1 + 72));
  if ((*(char *)(v1 + 71) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v1 + 47) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(*(void **)(v1 + 48));
  if ((*(char *)(v1 + 47) & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(*(void **)(v1 + 24));
  _Unwind_Resume(exception_object);
}

uint64_t sub_2109562DC(uint64_t a1)
{
  if (*(char *)(a1 + 143) < 0)
  {
    operator delete(*(void **)(a1 + 120));
    if ((*(char *)(a1 + 119) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 95) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 96));
  if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_5;
LABEL_10:
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
      return a1;
    goto LABEL_11;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 71) < 0)
    goto LABEL_10;
LABEL_5:
  if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    return a1;
LABEL_11:
  operator delete(*(void **)(a1 + 24));
  return a1;
}

uint64_t sub_21095637C(uint64_t a1)
{
  return *(_QWORD *)(**(_QWORD **)(a1 + 160) + 8);
}

uint64_t sub_210956394(uint64_t a1)
{
  return *(_QWORD *)(a1 + 20);
}

uint64_t sub_21095639C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  float v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  float *v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  float *v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)a2 = &off_24CA807D8;
  v4 = (_QWORD *)(a2 + 8);
  sub_2109551D0((_DWORD *)(a1 + 32), (uint64_t *)(a2 + 8));
  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_18;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v6 = *(_QWORD *)(a1 + 8);
    v11 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v11)
      goto LABEL_14;
  }
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_15;
    goto LABEL_18;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (*(_BYTE *)(a1 + 49))
  {
LABEL_15:
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v44, v6, 0);
    v16 = *(_QWORD *)(a2 + 8);
    v15 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v15)
      goto LABEL_23;
    goto LABEL_19;
  }
LABEL_18:
  v44 = 0;
  v16 = *(_QWORD *)(a2 + 8);
  v15 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v15)
    goto LABEL_23;
LABEL_19:
  v17 = (unint64_t *)&v15->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (!v19)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    if (!v16)
      goto LABEL_28;
    goto LABEL_24;
  }
LABEL_23:
  if (!v16)
    goto LABEL_28;
LABEL_24:
  if (*(_BYTE *)(a2 + 81))
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a2 + 8) + 96))(&v43, *(_QWORD *)(a2 + 8), 1);
    v20 = *(_DWORD *)(a1 + 32);
    if (!v20)
      goto LABEL_53;
    goto LABEL_29;
  }
LABEL_28:
  v43 = 0;
  v20 = *(_DWORD *)(a1 + 32);
  if (!v20)
    goto LABEL_53;
LABEL_29:
  v21 = *(_DWORD *)(a1 + 36);
  if (v21)
  {
    v22 = *(unsigned int *)(a1 + 40);
    v23 = *(unsigned int *)(a1 + 44);
    v25 = *(unsigned int *)(a2 + 72);
    v24 = *(unsigned int *)(a2 + 76);
    v26 = *(_BYTE **)(a1 + 24);
    if (*(_BYTE *)(a1 + 48) && v26)
    {
      v42 = *(unsigned int *)(a2 + 76);
      v27 = *(_QWORD *)(a1 + 8);
      v28 = *(std::__shared_weak_count **)(a1 + 16);
      if (v28)
      {
        v29 = (unint64_t *)&v28->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v27 + 88))(v27, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v24 = v42;
      v26 = *(_BYTE **)(a1 + 24);
    }
    v32 = *(float **)(a2 + 32);
    if (*(_BYTE *)(a2 + 80) && v32)
    {
      (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v4 + 88))(*v4, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/Image.h:1190");
      v32 = *(float **)(a2 + 32);
    }
    v33 = v20 - 1;
    v34 = 4 * v25;
    v35 = v21 - 1;
    if (v21 != 1)
    {
      if (v20 == 1)
      {
        do
        {
          LOBYTE(v5) = *v26;
          v5 = (float)((float)LODWORD(v5) * 0.017352) + -1.969;
          *v32 = v5;
          v26 += v23;
          v32 += v24;
          --v35;
        }
        while (v35);
      }
      else
      {
        v36 = 0;
        do
        {
          v37 = v32;
          v38 = v20 - 1;
          v39 = v26;
          do
          {
            LOBYTE(v5) = *v39;
            v5 = (float)((float)LODWORD(v5) * 0.017352) + -1.969;
            *v37 = v5;
            v39 += v22;
            v37 = (float *)((char *)v37 + v34);
            --v38;
          }
          while (v38);
          LOBYTE(v5) = *v39;
          v5 = (float)((float)LODWORD(v5) * 0.017352) + -1.969;
          *v37 = v5;
          v26 += v23;
          v32 += v24;
          ++v36;
        }
        while (v36 != v35);
      }
    }
    if (v20 != 1)
    {
      do
      {
        LOBYTE(v5) = *v26;
        v5 = (float)((float)LODWORD(v5) * 0.017352) + -1.969;
        *v32 = v5;
        v26 += v22;
        v32 = (float *)((char *)v32 + v34);
        --v33;
      }
      while (v33);
    }
    LOBYTE(v5) = *v26;
    *v32 = (float)((float)LODWORD(v5) * 0.017352) + -1.969;
  }
LABEL_53:
  v40 = v43;
  v43 = 0;
  if (v40)
    (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  result = v44;
  v44 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_21095679C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  if (a12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a12 + 8))(a12);
    sub_2108A894C(v12);
    _Unwind_Resume(a1);
  }
  sub_2108A894C(v12);
  _Unwind_Resume(a1);
}

void sub_210956824(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  int v31;
  uint64_t v32;
  BOOL v33;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  unint64_t v40;
  unsigned int *v41;
  unsigned int *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  float v53;
  float v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  int v58;
  float v59;
  float v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  float v64;
  unint64_t v65;
  float v66;
  float v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  unint64_t v83;
  float v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  unint64_t v91;
  float v92;
  float v93;
  uint64_t v94;
  unint64_t v95;
  float v96;
  float v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  float v101;
  float v102;
  float v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  __int128 *v111;
  float v112;
  float v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  int v125;
  int v126;
  __int128 v127;
  __int128 v128;
  int v129;
  char *v130;
  char *v131;
  unint64_t v132;
  unsigned int *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  void *v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *v142;
  unint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  unint64_t v146;
  char *v147;
  __int128 v148;
  unsigned int *v149;
  unsigned int *v150;
  _QWORD v151[2];
  unint64_t v152;
  _BYTE v153[24];
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  int v157;
  __int16 v158;
  uint64_t (**v159)();
  char v160;
  std::__shared_weak_count *v161;
  void *__p;
  char *v163;
  char v164;
  _QWORD v165[2];
  __int128 v166;
  int v167;
  char **v168;

  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  v9 = *(_DWORD *)(a2 + 32) == (_DWORD)v8 && *(_DWORD *)(a2 + 36) == HIDWORD(v8);
  if (!v9
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/KeypointDetection/src/KeypointModel.cpp", 62, (uint64_t)"InputImageSize() == image.Size()", 32, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v165[0] = &off_24CA829E0;
  v165[1] = a3;
  v10 = *(unsigned __int8 *)(a1 + 168);
  v11 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)v153 = &off_24CA79890;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    v16 = *(_DWORD *)(a2 + 44);
    v18 = *(_QWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a2 + 32);
    v19 = *(_WORD *)(a2 + 48);
    do
      v20 = __ldxr(p_shared_owners);
    while (__stxr(v20 + 1, p_shared_owners));
    do
      v21 = __ldxr(p_shared_owners);
    while (__stxr(v21 + 1, p_shared_owners));
  }
  else
  {
    v16 = *(_DWORD *)(a2 + 44);
    v18 = *(_QWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a2 + 32);
    v19 = *(_WORD *)(a2 + 48);
  }
  *(_QWORD *)&v153[8] = v12;
  *(_QWORD *)&v153[16] = v13;
  v154 = v17;
  LODWORD(v155) = 4 * v16;
  v156 = v18;
  v157 = 4;
  v158 = v19;
  if (v13)
  {
    v22 = (unint64_t *)&v13->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
    do
      v24 = __ldaxr(v22);
    while (__stlxr(v24 - 1, v22));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if ((_DWORD)v10)
    v25 = v165;
  else
    v25 = 0;
  sub_2109A96A8(*(_QWORD *)(v11 + 16), (uint64_t)v153, (uint64_t)v25, v10, (uint64_t)&v159);
  v26 = *(std::__shared_weak_count **)&v153[16];
  if (!*(_QWORD *)&v153[16])
    goto LABEL_29;
  v27 = (unint64_t *)(*(_QWORD *)&v153[16] + 8);
  do
    v28 = __ldaxr(v27);
  while (__stlxr(v28 - 1, v27));
  if (!v28)
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
    if (v160)
      goto LABEL_30;
  }
  else
  {
LABEL_29:
    if (v160)
    {
LABEL_30:
      *a4 = 0;
      a4[1] = 0;
      a4[2] = 0;
      goto LABEL_156;
    }
  }
  if (!v164)
    sub_2108B1AA4();
  sub_2108C2820((uint64_t)__p, (uint64_t)v153);
  v29 = *(_QWORD *)&v153[12];
  if (*(_DWORD *)&v153[12])
    v30 = HIDWORD(*(_QWORD *)&v153[12]) == 0;
  else
    v30 = 1;
  if (v30)
    v29 = 0;
  v151[0] = *(_QWORD *)v153;
  v151[1] = v29;
  v152 = v155;
  if (HIDWORD(v29) * HIDWORD(v155) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2108C2820((uint64_t)__p + 120, (uint64_t)v153);
  v146 = v155;
  v31 = v156;
  v32 = *(_QWORD *)v153;
  if (*(_DWORD *)&v153[20])
    v33 = *(_DWORD *)&v153[12] == 0;
  else
    v33 = 1;
  if (v33 || HIDWORD(*(_QWORD *)&v153[12]) == 0)
    v35 = 0;
  else
    v35 = *(_DWORD *)&v153[20];
  if (v35 * (_DWORD)v156 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2108C2820((uint64_t)__p + 240, (uint64_t)v153);
  v36 = v155;
  v37 = *(_QWORD *)v153;
  v38 = HIDWORD(*(_QWORD *)&v153[12]);
  if (*(_DWORD *)&v153[12])
    v39 = v38 == 0;
  else
    v39 = 1;
  if (v39)
    LODWORD(v38) = 0;
  v40 = HIDWORD(v155);
  if ((_DWORD)v38 * HIDWORD(v155) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210958C04((uint64_t)v151, &v149);
  v41 = v149;
  v42 = v150;
  memset(v153, 0, sizeof(v153));
  v43 = (char *)v150 - (char *)v149;
  if (v150 == v149)
  {
    v47 = 0uLL;
  }
  else
  {
    if ((unint64_t)v43 >= 0x6666666666666661)
      sub_2108CDFC4();
    v145 = a4;
    v44 = v43 >> 3;
    *(_QWORD *)v153 = operator new(20 * (v43 >> 3));
    *(_QWORD *)&v153[8] = *(_QWORD *)v153;
    *(_QWORD *)&v153[16] = *(_QWORD *)v153 + 20 * v44;
    v168 = (char **)v153;
    do
    {
      v45 = *v41;
      v46 = v41[1];
      *(float *)&v166 = (float)*v41;
      *((float *)&v166 + 1) = (float)v46;
      DWORD2(v166) = atan2f(*(float *)(v32 + 4 * (v45 * (_DWORD)v146 + v46 * HIDWORD(v146) + v31)), *(float *)(v32 + 4 * (v45 * (_DWORD)v146 + v46 * HIDWORD(v146))));
      HIDWORD(v166) = *(_DWORD *)(v37 + 4 * (v45 * v36 + v46 * (_DWORD)v40));
      v167 = *(_DWORD *)(v151[0] + 4 * ((_DWORD)v152 * v45 + HIDWORD(v152) * v46));
      sub_2108CDFD8(&v168, &v166);
      v41 += 2;
    }
    while (v41 != v42);
    v43 = *(_QWORD *)v153;
    v47 = *(_OWORD *)&v153[8];
    a4 = v145;
  }
  v147 = (char *)v43;
  v148 = v47;
  v48 = v47;
  if (0xCCCCCCCCCCCCCCCDLL * (((uint64_t)v47 - v43) >> 2) <= 0x1000)
    goto LABEL_154;
  v49 = v43 + 81920;
  if (v43 + 81920 != (_QWORD)v47)
  {
    do
    {
      v50 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v48 - v43) >> 2);
      if (v50 < 2)
        break;
      if (v50 == 3)
      {
        v110 = v43 + 20;
        v111 = (__int128 *)(v48 - 20);
        v112 = *(float *)(v43 + 36);
        v113 = *(float *)(v48 - 4);
        if (v112 <= *(float *)(v43 + 16))
        {
          if (v113 > v112)
          {
            *(_OWORD *)v153 = *(_OWORD *)v110;
            v124 = *(_OWORD *)v153;
            *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 36);
            v125 = *(_DWORD *)&v153[16];
            v126 = *((_DWORD *)v111 + 4);
            *(_OWORD *)v110 = *v111;
            *(_DWORD *)(v43 + 36) = v126;
            *((_DWORD *)v111 + 4) = v125;
            *v111 = v124;
            if (*(float *)(v43 + 36) > *(float *)(v43 + 16))
            {
              v127 = *(_OWORD *)v43;
              *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
              *(_OWORD *)v153 = v127;
              *(_OWORD *)v43 = *(_OWORD *)v110;
              *(_DWORD *)(v43 + 16) = *(_DWORD *)(v43 + 36);
              *(_OWORD *)v110 = *(_OWORD *)v153;
              *(_DWORD *)(v43 + 36) = *(_DWORD *)&v153[16];
            }
          }
        }
        else
        {
          if (v113 <= v112)
          {
            v128 = *(_OWORD *)v43;
            *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
            *(_OWORD *)v153 = v128;
            *(_OWORD *)v43 = *(_OWORD *)v110;
            *(_DWORD *)(v43 + 16) = *(_DWORD *)(v43 + 36);
            *(_OWORD *)v110 = *(_OWORD *)v153;
            *(_DWORD *)(v43 + 36) = *(_DWORD *)&v153[16];
            if (*(float *)(v48 - 4) <= *(float *)(v43 + 36))
              break;
            v116 = *(_OWORD *)v110;
            *(_OWORD *)v153 = *(_OWORD *)v110;
            v117 = *(_DWORD *)(v43 + 36);
            *(_DWORD *)&v153[16] = *(_DWORD *)(v110 + 16);
            v129 = *(_DWORD *)(v48 - 4);
            *(_OWORD *)v110 = *v111;
            *(_DWORD *)(v110 + 16) = v129;
          }
          else
          {
            v114 = *(_OWORD *)v43;
            *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
            *(_OWORD *)v153 = v114;
            v115 = *v111;
            *(_DWORD *)(v43 + 16) = *(_DWORD *)(v48 - 4);
            *(_OWORD *)v43 = v115;
            v116 = *(_OWORD *)v153;
            v117 = *(_DWORD *)&v153[16];
          }
          *((_DWORD *)v111 + 4) = v117;
          *v111 = v116;
        }
        break;
      }
      if (v50 == 2)
      {
        if (*(float *)(v48 - 4) > *(float *)(v43 + 16))
        {
          v107 = *(_OWORD *)v43;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
          *(_OWORD *)v153 = v107;
          v108 = *(_OWORD *)(v48 - 20);
          *(_DWORD *)(v43 + 16) = *(_DWORD *)(v48 - 4);
          *(_OWORD *)v43 = v108;
          v109 = *(_OWORD *)v153;
          *(_DWORD *)(v48 - 4) = *(_DWORD *)&v153[16];
          *(_OWORD *)(v48 - 20) = v109;
        }
        break;
      }
      if ((uint64_t)(v48 - v43) <= 159)
      {
        while (v43 != v48 - 20)
        {
          v118 = v43;
          v43 += 20;
          if (v118 != v48 && v43 != v48)
          {
            v119 = v43;
            v120 = v118;
            do
            {
              if (*(float *)(v119 + 16) > *(float *)(v120 + 16))
                v120 = v119;
              v119 += 20;
            }
            while (v119 != v48);
            if (v120 != v118)
            {
              v121 = *(_OWORD *)v118;
              *(_DWORD *)&v153[16] = *(_DWORD *)(v118 + 16);
              *(_OWORD *)v153 = v121;
              v122 = *(_OWORD *)v120;
              *(_DWORD *)(v118 + 16) = *(_DWORD *)(v120 + 16);
              *(_OWORD *)v118 = v122;
              v123 = *(_OWORD *)v153;
              *(_DWORD *)(v120 + 16) = *(_DWORD *)&v153[16];
              *(_OWORD *)v120 = v123;
            }
          }
        }
        break;
      }
      v51 = v43 + 20 * (v50 >> 1);
      v52 = v48 - 20;
      v53 = *(float *)(v51 + 16);
      v54 = *(float *)(v48 - 4);
      if (v53 <= *(float *)(v43 + 16))
      {
        if (v54 <= v53)
        {
          v58 = 0;
          v59 = *(float *)(v43 + 16);
          v60 = *(float *)(v51 + 16);
          if (v59 <= v60)
            goto LABEL_91;
          goto LABEL_73;
        }
        v71 = *(_OWORD *)v51;
        *(_DWORD *)&v153[16] = *(_DWORD *)(v51 + 16);
        *(_OWORD *)v153 = v71;
        v72 = *(_OWORD *)v52;
        *(_DWORD *)(v51 + 16) = *(_DWORD *)(v48 - 4);
        *(_OWORD *)v51 = v72;
        v73 = *(_OWORD *)v153;
        *(_DWORD *)(v48 - 4) = *(_DWORD *)&v153[16];
        *(_OWORD *)v52 = v73;
        if (*(float *)(v51 + 16) > *(float *)(v43 + 16))
        {
          v74 = *(_OWORD *)v43;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
          *(_OWORD *)v153 = v74;
          v75 = *(_OWORD *)v51;
          *(_DWORD *)(v43 + 16) = *(_DWORD *)(v51 + 16);
          *(_OWORD *)v43 = v75;
          v76 = *(_OWORD *)v153;
          *(_DWORD *)(v51 + 16) = *(_DWORD *)&v153[16];
          *(_OWORD *)v51 = v76;
          goto LABEL_88;
        }
      }
      else
      {
        if (v54 > v53)
        {
          v55 = *(_OWORD *)v43;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
          *(_OWORD *)v153 = v55;
          v56 = *(_OWORD *)v52;
          *(_DWORD *)(v43 + 16) = *(_DWORD *)(v48 - 4);
          *(_OWORD *)v43 = v56;
          v57 = *(_OWORD *)v153;
          *(_DWORD *)(v48 - 4) = *(_DWORD *)&v153[16];
          *(_OWORD *)v52 = v57;
          v58 = 1;
          v59 = *(float *)(v43 + 16);
          v60 = *(float *)(v51 + 16);
          if (v59 <= v60)
            goto LABEL_91;
          goto LABEL_73;
        }
        v77 = *(_OWORD *)v43;
        *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
        *(_OWORD *)v153 = v77;
        v78 = *(_OWORD *)v51;
        *(_DWORD *)(v43 + 16) = *(_DWORD *)(v51 + 16);
        *(_OWORD *)v43 = v78;
        v79 = *(_OWORD *)v153;
        *(_DWORD *)(v51 + 16) = *(_DWORD *)&v153[16];
        *(_OWORD *)v51 = v79;
        if (*(float *)(v48 - 4) > *(float *)(v51 + 16))
        {
          v80 = *(_OWORD *)v51;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v51 + 16);
          *(_OWORD *)v153 = v80;
          v81 = *(_OWORD *)v52;
          *(_DWORD *)(v51 + 16) = *(_DWORD *)(v48 - 4);
          *(_OWORD *)v51 = v81;
          v82 = *(_OWORD *)v153;
          *(_DWORD *)(v48 - 4) = *(_DWORD *)&v153[16];
          *(_OWORD *)v52 = v82;
LABEL_88:
          v58 = 2;
          v59 = *(float *)(v43 + 16);
          v60 = *(float *)(v51 + 16);
          if (v59 <= v60)
            goto LABEL_91;
          goto LABEL_73;
        }
      }
      v58 = 1;
      v59 = *(float *)(v43 + 16);
      v60 = *(float *)(v51 + 16);
      if (v59 <= v60)
      {
LABEL_91:
        v83 = v48 - 20;
        while (1)
        {
          v61 = v83 - 20;
          if (v83 - 20 == v43)
            break;
          v84 = *(float *)(v83 - 4);
          v83 -= 20;
          if (v84 > v60)
          {
            v85 = *(_OWORD *)v43;
            *(_DWORD *)&v153[16] = *(_DWORD *)(v43 + 16);
            *(_OWORD *)v153 = v85;
            v86 = *(_OWORD *)v61;
            *(_DWORD *)(v43 + 16) = *(_DWORD *)(v61 + 16);
            *(_OWORD *)v43 = v86;
            v87 = *(_OWORD *)v153;
            *(_DWORD *)(v61 + 16) = *(_DWORD *)&v153[16];
            *(_OWORD *)v61 = v87;
            ++v58;
            v62 = v43 + 20;
            if (v43 + 20 < v61)
              goto LABEL_74;
            goto LABEL_95;
          }
        }
        v94 = v43 + 20;
        if (v59 <= *(float *)(v48 - 4))
        {
          if (v94 == v52)
            break;
          while (v59 <= *(float *)(v94 + 16))
          {
            v94 += 20;
            if (v94 == v52)
              goto LABEL_152;
          }
          v98 = *(_OWORD *)v94;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v94 + 16);
          *(_OWORD *)v153 = v98;
          v99 = *(_OWORD *)v52;
          *(_DWORD *)(v94 + 16) = *(_DWORD *)(v48 - 4);
          *(_OWORD *)v94 = v99;
          v94 += 20;
          v100 = *(_OWORD *)v153;
          *(_DWORD *)(v48 - 4) = *(_DWORD *)&v153[16];
          *(_OWORD *)v52 = v100;
        }
        if (v94 == v52)
          break;
        while (1)
        {
          v101 = *(float *)(v43 + 16);
          v91 = v94 - 20;
          do
          {
            v102 = *(float *)(v91 + 36);
            v91 += 20;
          }
          while (v101 <= v102);
          v94 = v91 + 20;
          do
          {
            v103 = *(float *)(v52 - 4);
            v52 -= 20;
          }
          while (v101 > v103);
          if (v91 >= v52)
            break;
          v104 = *(_OWORD *)v91;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v91 + 16);
          *(_OWORD *)v153 = v104;
          v105 = *(_OWORD *)v52;
          *(_DWORD *)(v91 + 16) = *(_DWORD *)(v52 + 16);
          *(_OWORD *)v91 = v105;
          v106 = *(_OWORD *)v153;
          *(_DWORD *)(v52 + 16) = *(_DWORD *)&v153[16];
          *(_OWORD *)v52 = v106;
        }
        if (v91 > v49)
          break;
        goto LABEL_128;
      }
LABEL_73:
      v61 = v48 - 20;
      v62 = v43 + 20;
      if (v43 + 20 >= v48 - 20)
      {
LABEL_95:
        v65 = v62;
      }
      else
      {
LABEL_74:
        v63 = v62;
        while (1)
        {
          v64 = *(float *)(v51 + 16);
          v65 = v63 - 20;
          do
          {
            v66 = *(float *)(v65 + 36);
            v65 += 20;
          }
          while (v66 > v64);
          v63 = v65 + 20;
          do
          {
            v67 = *(float *)(v61 - 4);
            v61 -= 20;
          }
          while (v67 <= v64);
          if (v65 >= v61)
            break;
          v68 = *(_OWORD *)v65;
          *(_DWORD *)&v153[16] = *(_DWORD *)(v65 + 16);
          *(_OWORD *)v153 = v68;
          v69 = *(_OWORD *)v61;
          *(_DWORD *)(v65 + 16) = *(_DWORD *)(v61 + 16);
          *(_OWORD *)v65 = v69;
          v70 = *(_OWORD *)v153;
          *(_DWORD *)(v61 + 16) = *(_DWORD *)&v153[16];
          *(_OWORD *)v61 = v70;
          ++v58;
          if (v65 == v51)
            v51 = v61;
        }
      }
      if (v65 != v51 && *(float *)(v51 + 16) > *(float *)(v65 + 16))
      {
        v88 = *(_OWORD *)v65;
        *(_DWORD *)&v153[16] = *(_DWORD *)(v65 + 16);
        *(_OWORD *)v153 = v88;
        v89 = *(_OWORD *)v51;
        *(_DWORD *)(v65 + 16) = *(_DWORD *)(v51 + 16);
        *(_OWORD *)v65 = v89;
        v90 = *(_OWORD *)v153;
        *(_DWORD *)(v51 + 16) = *(_DWORD *)&v153[16];
        *(_OWORD *)v51 = v90;
        ++v58;
      }
      if (v65 == v49)
        break;
      if (!v58)
      {
        if (v65 <= v49)
        {
          v95 = v65 + 20;
          while (v95 != v48)
          {
            v96 = *(float *)(v95 + 16);
            v97 = *(float *)(v95 - 4);
            v95 += 20;
            if (v96 > v97)
              goto LABEL_101;
          }
        }
        else
        {
          while (v62 != v65)
          {
            v92 = *(float *)(v62 + 16);
            v93 = *(float *)(v62 - 4);
            v62 += 20;
            if (v92 > v93)
              goto LABEL_101;
          }
        }
        break;
      }
LABEL_101:
      if (v65 <= v49)
      {
        v91 = v65 + 20;
      }
      else
      {
        v48 = v65;
        v91 = v43;
      }
LABEL_128:
      v43 = v91;
    }
    while (v48 != v49);
  }
LABEL_152:
  v130 = v147;
  v131 = (char *)v148;
  v132 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v148 - (_QWORD)v147) >> 2);
  if (v132 <= 0xFFF)
  {
    sub_210957CA4(&v147, 4096 - v132);
    v43 = (uint64_t)v147;
    v48 = v148;
LABEL_154:
    v134 = *((_QWORD *)&v148 + 1);
    v133 = v149;
    v147 = 0;
    v148 = 0uLL;
    *a4 = v43;
    a4[1] = v48;
    a4[2] = v134;
    if (!v133)
      goto LABEL_156;
LABEL_155:
    v150 = v133;
    operator delete(v133);
    goto LABEL_156;
  }
  if ((_QWORD)v148 - (_QWORD)v147 != 81920)
    v131 = v147 + 81920;
  v144 = *((_QWORD *)&v148 + 1);
  v133 = v149;
  v147 = 0;
  v148 = 0uLL;
  *a4 = v130;
  a4[1] = v131;
  a4[2] = v144;
  if (v133)
    goto LABEL_155;
LABEL_156:
  if (v164)
  {
    v135 = (char *)__p;
    if (__p)
    {
      v136 = v163;
      v137 = __p;
      if (v163 != __p)
      {
        do
        {
          if (*(v136 - 8))
          {
            v138 = (std::__shared_weak_count *)*((_QWORD *)v136 - 6);
            if (v138)
            {
              v139 = (unint64_t *)&v138->__shared_owners_;
              do
                v140 = __ldaxr(v139);
              while (__stlxr(v140 - 1, v139));
              if (!v140)
              {
                ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
                std::__shared_weak_count::__release_weak(v138);
              }
            }
          }
          v136 -= 120;
        }
        while (v136 != v135);
        v137 = __p;
      }
      v163 = v135;
      operator delete(v137);
    }
  }
  v159 = &off_24CA79A00;
  v141 = v161;
  if (v161)
  {
    v142 = (unint64_t *)&v161->__shared_owners_;
    do
      v143 = __ldaxr(v142);
    while (__stlxr(v143 - 1, v142));
    if (!v143)
    {
      ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
      std::__shared_weak_count::__release_weak(v141);
    }
  }
}

void sub_210957488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  if (__p)
    operator delete(__p);
  if (a15)
    operator delete(a15);
  sub_2108B77C8((uint64_t)&a28);
  _Unwind_Resume(a1);
}

void sub_21095755C(uint64_t a1)
{
  sub_210957E40(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210957580(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  void *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  void **v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  char v23;
  std::__shared_weak_count *v24;
  void *v25;
  uint64_t (**v26)();
  char v27;
  unsigned __int8 v28;
  std::__shared_weak_count *v29;

  sub_21098CEE4(a1, (uint64_t)&v25);
  if (v27)
  {
    LOBYTE(v21) = 0;
    v23 = v27;
    v4 = v29;
    v24 = v29;
    if (!v29)
      goto LABEL_21;
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v26 = &off_24CA79A00;
    goto LABEL_17;
  }
  v7 = (std::__shared_weak_count *)operator new(0xC8uLL);
  v7->__shared_owners_ = 0;
  v8 = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80AF8;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v7[1].__shared_owners_, (uint64_t *)(a1 + 8));
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA82960;
  sub_210957BA4((uint64_t)&v7[6].__shared_owners_, a1 + 128);
  v7[7].__shared_weak_owners_ = *(_QWORD *)(a1 + 160);
  LOWORD(v7[8].__vftable) = *(_WORD *)(a1 + 168);
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80B60;
  v9 = v25;
  v25 = 0;
  do
    v10 = __ldxr(v8);
  while (__stxr(v10 + 1, v8));
  if (!v9
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  *(_QWORD *)&v21 = v7 + 1;
  *((_QWORD *)&v21 + 1) = v7;
  v22 = v9;
  v23 = 0;
  v24 = v29;
  if (v29)
  {
    v11 = (unint64_t *)&v29->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  do
    v13 = __ldaxr(v8);
  while (__stlxr(v13 - 1, v8));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v4 = v29;
  v26 = &off_24CA79A00;
  if (v29)
  {
LABEL_17:
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
LABEL_21:
  if (v25)
    (*(void (**)(void *))(*(_QWORD *)v25 + 8))(v25);
  if (v23)
  {
    std::operator+<char>();
    if ((v28 & 0x80u) == 0)
      v19 = &v25;
    else
      v19 = (void **)v25;
    if ((v28 & 0x80u) == 0)
      v20 = v28;
    else
      v20 = (uint64_t)v26;
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/KeypointDetection/include_private/LearnedFeatures/KeypointDetection/KeypointModel.h", 96, (uint64_t)&unk_210A01421, 0, (uint64_t)v19, v20, (void (*)(void **))sub_2109EDDB4);
    if ((char)v28 < 0)
      operator delete(v25);
    abort();
  }
  v16 = operator new();
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v16 + 16) = v22;
  *a2 = v16;
  if (v24)
  {
    v17 = (unint64_t *)&v24->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_21095793C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (*(char *)(v9 - 81) < 0)
  {
    operator delete(*(void **)(v9 - 104));
    sub_2109579F0((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  sub_2109579F0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2109579F0(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 32) = &off_24CA79A00;
  v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v2)
    goto LABEL_18;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_18:
    if (*(_BYTE *)(a1 + 24))
      goto LABEL_6;
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  if (!*(_BYTE *)(a1 + 24))
    return a1;
LABEL_6:
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6)
    return a1;
  v7 = (unint64_t *)&v6->__shared_owners_;
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (v8)
    return a1;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

uint64_t *sub_210957AC8(uint64_t *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;

  a1[1] = (uint64_t)&off_24CA79A00;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *a1;
      *a1 = 0;
      if (!v5)
        return a1;
      goto LABEL_6;
    }
  }
  v5 = *a1;
  *a1 = 0;
  if (v5)
LABEL_6:
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  return a1;
}

void sub_210957B54(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80AF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210957B64(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80AF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210957B94(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_210957BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  const void *v4;
  int64_t v5;
  char *v6;
  char *v7;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  if (*(_BYTE *)(a2 + 24))
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    v4 = *(const void **)a2;
    v3 = *(_QWORD *)(a2 + 8);
    v5 = v3 - *(_QWORD *)a2;
    if (v3 != *(_QWORD *)a2)
    {
      if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * (v5 >> 2)) >= 0x924924924924925)
        sub_210957C90();
      v6 = (char *)operator new(v5);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v6;
      v7 = &v6[4 * (v5 >> 2)];
      *(_QWORD *)(a1 + 16) = v7;
      memcpy(v6, v4, v5 - 2);
      *(_QWORD *)(a1 + 8) = v7;
    }
    *(_BYTE *)(a1 + 24) = 1;
  }
  return a1;
}

void sub_210957C5C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;
  void *v4;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  if (*(_BYTE *)(v1 + 24))
  {
    v4 = *(void **)v1;
    if (*(_QWORD *)v1)
    {
      *(_QWORD *)(v1 + 8) = v4;
      operator delete(v4);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_210957C90()
{
  sub_2108A4B90("vector");
}

void sub_210957CA4(char **a1, unint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  char *v16;
  __int128 v17;

  v5 = a1[1];
  v4 = a1[2];
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - v5) >> 2) >= a2)
  {
    if (a2)
    {
      v12 = 20 * ((20 * a2 - 20) / 0x14) + 20;
      bzero(a1[1], v12);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    v6 = *a1;
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - *a1) >> 2);
    v8 = v7 + a2;
    if (v7 + a2 > 0xCCCCCCCCCCCCCCCLL)
      sub_2108CDFC4();
    v9 = 0xCCCCCCCCCCCCCCCDLL * ((v4 - v6) >> 2);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0x666666666666666)
      v10 = 0xCCCCCCCCCCCCCCCLL;
    else
      v10 = v8;
    if (v10)
    {
      if (v10 > 0xCCCCCCCCCCCCCCCLL)
        sub_2108B2B1C();
      v11 = (char *)operator new(20 * v10);
    }
    else
    {
      v11 = 0;
    }
    v13 = &v11[20 * v7];
    v14 = &v11[20 * v10];
    v15 = 20 * ((20 * a2 - 20) / 0x14) + 20;
    bzero(v13, v15);
    v16 = &v13[v15];
    if (v5 != v6)
    {
      do
      {
        v17 = *(_OWORD *)(v5 - 20);
        *((_DWORD *)v13 - 1) = *((_DWORD *)v5 - 1);
        *(_OWORD *)(v13 - 20) = v17;
        v13 -= 20;
        v5 -= 20;
      }
      while (v5 != v6);
      v5 = *a1;
    }
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v14;
    if (v5)
      operator delete(v5);
  }
}

uint64_t sub_210957E40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *(_QWORD *)a1 = &off_24CA80AA0;
  v2 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *(std::__shared_weak_count **)(v2 + 8);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    MEMORY[0x212BCC6FC](v2, 0x60C40CE5A77A8);
  }
  if (*(char *)(a1 + 151) < 0)
  {
    operator delete(*(void **)(a1 + 128));
    if ((*(char *)(a1 + 127) & 0x80000000) == 0)
    {
LABEL_12:
      if ((*(char *)(a1 + 103) & 0x80000000) == 0)
        goto LABEL_13;
      goto LABEL_18;
    }
  }
  else if ((*(char *)(a1 + 127) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(*(void **)(a1 + 104));
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
LABEL_13:
    if ((*(char *)(a1 + 79) & 0x80000000) == 0)
      goto LABEL_14;
LABEL_19:
    operator delete(*(void **)(a1 + 56));
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      return a1;
    goto LABEL_20;
  }
LABEL_18:
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 79) < 0)
    goto LABEL_19;
LABEL_14:
  if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    return a1;
LABEL_20:
  operator delete(*(void **)(a1 + 32));
  return a1;
}

uint64_t sub_210957F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  void **v15;
  _BYTE *v16;
  _BYTE *v17;
  void **v18;
  unint64_t *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  void **v24;
  void *v25;
  char *v26;
  void *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int v38;
  void *v40[2];
  uint64_t v41;
  char v42;
  uint64_t v43;
  int v44;
  __int128 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48[3];
  char v49;
  char v50;
  void *v51;
  void **v52;
  _BYTE *v53;
  void *v54;
  char *v55;
  void *__p[2];
  uint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[24];
  _BYTE *v65;
  char v66;
  _BYTE v67[24];
  _BYTE *v68;
  char v69;
  __int128 __dst;
  uint64_t v71;
  char v72;
  uint64_t v73;
  int v74;
  char v75;
  int v76;
  char v77;
  int v78;
  char v79;
  int v80;
  char v81;
  int v82;
  char v83;
  char v84;
  _BYTE v85[24];
  _BYTE *v86;
  char v87;
  _BYTE v88[24];
  _BYTE *v89;
  char v90;
  uint64_t v91;

  v91 = *MEMORY[0x24BDAC8D0];
  LOBYTE(v40[0]) = 0;
  v42 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v40, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v40 = *(_OWORD *)a3;
      v41 = *(_QWORD *)(a3 + 16);
    }
    v42 = 1;
  }
  v6 = *(_DWORD *)(a2 + 12);
  v5 = *(_DWORD *)(a2 + 16);
  if (*(char *)(a2 + 47) < 0)
  {
    sub_2108B314C(&__dst, *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
  }
  else
  {
    __dst = *(_OWORD *)(a2 + 24);
    v71 = *(_QWORD *)(a2 + 40);
  }
  v72 = 1;
  LODWORD(v73) = 65;
  BYTE4(v73) = 1;
  v74 = 1;
  v75 = 1;
  v76 = v6;
  v77 = 1;
  v78 = v5;
  v79 = 1;
  v80 = 1;
  v81 = 1;
  v82 = 1;
  v83 = 1;
  v84 = 1;
  v85[0] = 0;
  v87 = 0;
  v88[0] = 0;
  v90 = 0;
  sub_2108B43C0((char *)__p, &__dst);
  sub_210958984((uint64_t)&v54, (uint64_t)__p, 1uLL);
  if (v69)
  {
    v9 = v68;
    if (v68 == v67)
    {
      v10 = 4;
      v9 = v67;
    }
    else
    {
      if (!v68)
        goto LABEL_15;
      v10 = 5;
    }
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v9 + 8 * v10))(v9, v7, v8);
  }
LABEL_15:
  if (v66)
  {
    v11 = v65;
    if (v65 == v64)
    {
      v12 = 4;
      v11 = v64;
      goto LABEL_20;
    }
    if (v65)
    {
      v12 = 5;
LABEL_20:
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v11 + 8 * v12))(v11, v7, v8);
    }
  }
  if (v58 && SHIBYTE(v57) < 0)
    operator delete(__p[0]);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_2108B314C(__p, *(void **)(a2 + 48), *(_QWORD *)(a2 + 56));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a2 + 48);
    v57 = *(_QWORD *)(a2 + 64);
  }
  v58 = 1;
  if (*(char *)(a2 + 95) < 0)
  {
    sub_2108B314C(&v59, *(void **)(a2 + 72), *(_QWORD *)(a2 + 80));
  }
  else
  {
    v59 = *(_OWORD *)(a2 + 72);
    v60 = *(_QWORD *)(a2 + 88);
  }
  v61 = 1;
  if (*(char *)(a2 + 119) < 0)
  {
    sub_2108B314C(&v62, *(void **)(a2 + 96), *(_QWORD *)(a2 + 104));
  }
  else
  {
    v62 = *(_OWORD *)(a2 + 96);
    v63 = *(_QWORD *)(a2 + 112);
  }
  v64[0] = 1;
  v52 = 0;
  v53 = 0;
  v51 = 0;
  v13 = operator new(0x60uLL);
  v14 = v13;
  *v13 = 0;
  v15 = (void **)(v13 + 96);
  v51 = v13;
  v52 = (void **)v13;
  v53 = v13 + 96;
  v13[24] = 0;
  v16 = v13 + 24;
  if (v58)
  {
    if (SHIBYTE(v57) < 0)
    {
      sub_2108B314C(v13, __p[0], (unint64_t)__p[1]);
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)__p;
      *((_QWORD *)v13 + 2) = v57;
    }
    *v16 = 1;
  }
  v14[32] = 0;
  v14[56] = 0;
  if (v61)
  {
    if (SHIBYTE(v60) < 0)
    {
      sub_2108B314C(v14 + 32, (void *)v59, *((unint64_t *)&v59 + 1));
    }
    else
    {
      *((_OWORD *)v14 + 2) = v59;
      *((_QWORD *)v14 + 6) = v60;
    }
    v14[56] = 1;
  }
  v14[64] = 0;
  v14[88] = 0;
  v17 = v14 + 88;
  if (!v64[0])
    goto LABEL_46;
  if ((SHIBYTE(v63) & 0x80000000) == 0)
  {
    *((_OWORD *)v14 + 4) = v62;
    *((_QWORD *)v14 + 10) = v63;
    *v17 = 1;
LABEL_46:
    v52 = v15;
    goto LABEL_47;
  }
  sub_2108B314C(v14 + 64, (void *)v62, *((unint64_t *)&v62 + 1));
  v20 = v64[0];
  *v17 = 1;
  v52 = v15;
  if (v20 && SHIBYTE(v63) < 0)
    operator delete((void *)v62);
LABEL_47:
  if (v61 && SHIBYTE(v60) < 0)
    operator delete((void *)v59);
  if (v58 && SHIBYTE(v57) < 0)
    operator delete(__p[0]);
  v43 = *(_QWORD *)a2;
  v44 = *(_DWORD *)(a2 + 8);
  if (v42)
  {
    v18 = v40;
    if (SHIBYTE(v41) < 0)
    {
      v19 = (unint64_t *)&v40[1];
LABEL_62:
      sub_2108B314C(&v45, *v18, *v19);
      goto LABEL_63;
    }
  }
  else
  {
    v18 = (void **)(a2 + 120);
    if (*(char *)(a2 + 143) < 0)
    {
      v19 = (unint64_t *)(a2 + 128);
      goto LABEL_62;
    }
  }
  v45 = *(_OWORD *)v18;
  v46 = v18[2];
LABEL_63:
  sub_2108B4278((uint64_t)&v47, (uint64_t *)&v54);
  sub_2108B458C(v48, (uint64_t *)&v51);
  v49 = 0;
  v50 = 0;
  v23 = (void **)v51;
  if (v51)
  {
    v24 = v52;
    v25 = v51;
    if (v52 != v51)
    {
      do
      {
        if (*((_BYTE *)v24 - 8) && *((char *)v24 - 9) < 0)
          operator delete(*(v24 - 4));
        v24 -= 4;
      }
      while (v24 != v23);
      v25 = v51;
    }
    v52 = v23;
    operator delete(v25);
  }
  v26 = (char *)v54;
  if (!v54)
    goto LABEL_93;
  v27 = v54;
  if (v55 == v54)
    goto LABEL_92;
  v28 = v55 - 80;
  do
  {
    if (!v28[72])
      goto LABEL_82;
    v30 = (char *)*((_QWORD *)v28 + 8);
    if (v28 + 40 == v30)
    {
      v30 = v28 + 40;
      v31 = 4;
    }
    else
    {
      if (!v30)
        goto LABEL_82;
      v31 = 5;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)v30 + 8 * v31))(v30, v21, v22);
LABEL_82:
    if (v28[32])
    {
      v32 = (char *)*((_QWORD *)v28 + 3);
      if (v28 == v32)
      {
        v32 = v28;
        v33 = 4;
        goto LABEL_87;
      }
      if (v32)
      {
        v33 = 5;
LABEL_87:
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)v32 + 8 * v33))(v32, v21, v22);
      }
    }
    if (*(v28 - 64) && *(v28 - 65) < 0)
      operator delete(*((void **)v28 - 11));
    v29 = v28 - 88;
    v28 -= 168;
  }
  while (v29 != v26);
  v27 = v54;
LABEL_92:
  v55 = v26;
  operator delete(v27);
LABEL_93:
  if (v90)
  {
    v34 = v89;
    if (v89 == v88)
    {
      v35 = 4;
      v34 = v88;
LABEL_98:
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v34 + 8 * v35))(v34, v21, v22);
    }
    else if (v89)
    {
      v35 = 5;
      goto LABEL_98;
    }
  }
  if (v87)
  {
    v36 = v86;
    if (v86 == v85)
    {
      v37 = 4;
      v36 = v85;
LABEL_104:
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*v36 + 8 * v37))(v36, v21, v22);
    }
    else if (v86)
    {
      v37 = 5;
      goto LABEL_104;
    }
  }
  if (v72 && SHIBYTE(v71) < 0)
    operator delete((void *)__dst);
  v38 = *(_DWORD *)(a2 + 144);
  LOBYTE(__dst) = 0;
  v72 = 0;
  LOWORD(v74) = 0;
  v73 = v38;
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B3FF0(a1 + 8, &v43);
  *(_QWORD *)a1 = &off_24CA82960;
  sub_210957BA4(a1 + 128, (uint64_t)&__dst);
  *(_QWORD *)(a1 + 160) = v73;
  *(_WORD *)(a1 + 168) = v74;
  if (v72 && (_QWORD)__dst)
  {
    *((_QWORD *)&__dst + 1) = __dst;
    operator delete((void *)__dst);
  }
  sub_2108B55B4((uint64_t)&v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete(v40[0]);
  *(_QWORD *)a1 = &off_24CA80B60;
  return a1;
}

void sub_210958620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,char a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,char a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,char a61)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2109587F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  sub_2109588CC((uint64_t)&a35);
  JUMPOUT(0x2109587CCLL);
}

void sub_210958804()
{
  JUMPOUT(0x2109587CCLL);
}

uint64_t sub_21095880C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_210958864(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_2109588CC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  if (*(_BYTE *)(a1 + 160))
  {
    v2 = *(_QWORD **)(a1 + 152);
    if (v2 == (_QWORD *)(a1 + 128))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 128);
    }
    else
    {
      if (!v2)
        goto LABEL_7;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
LABEL_7:
  if (*(_BYTE *)(a1 + 120))
  {
    v4 = *(_QWORD **)(a1 + 112);
    if (v4 == (_QWORD *)(a1 + 88))
    {
      v5 = 4;
      v4 = (_QWORD *)(a1 + 88);
      goto LABEL_12;
    }
    if (v4)
    {
      v5 = 5;
LABEL_12:
      (*(void (**)(void))(*v4 + 8 * v5))();
    }
  }
  if (!*(_BYTE *)(a1 + 24) || (*(char *)(a1 + 23) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_210958984(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char *v6;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (a3)
  {
    if (a3 >= 0x186186186186187)
      sub_2108B327C();
    v6 = (char *)operator new(168 * a3);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = &v6[168 * a3];
    sub_210958AE8((char *)a1, a2, a2 + 168 * a3);
  }
  return a1;
}

void sub_210958A18(_Unwind_Exception *exception_object)
{
  void **v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *v1;
  if (!*v1)
    goto LABEL_22;
  v4 = v1[1];
  v5 = *v1;
  if (v4 == v3)
    goto LABEL_21;
  v6 = (uint64_t)v4 - 80;
  while (1)
  {
    if (!*(_BYTE *)(v6 + 72))
      goto LABEL_11;
    v8 = *(_QWORD **)(v6 + 64);
    if ((_QWORD *)(v6 + 40) == v8)
    {
      v8 = (_QWORD *)(v6 + 40);
      v9 = 4;
    }
    else
    {
      if (!v8)
        goto LABEL_11;
      v9 = 5;
    }
    (*(void (**)(void))(*v8 + 8 * v9))();
LABEL_11:
    if (*(_BYTE *)(v6 + 32))
    {
      v10 = *(_QWORD **)(v6 + 24);
      if ((_QWORD *)v6 == v10)
      {
        v10 = (_QWORD *)v6;
        v11 = 4;
        goto LABEL_16;
      }
      if (v10)
      {
        v11 = 5;
LABEL_16:
        (*(void (**)(void))(*v10 + 8 * v11))();
      }
    }
    if (*(_BYTE *)(v6 - 64))
    {
      if (*(char *)(v6 - 65) < 0)
        operator delete(*(void **)(v6 - 88));
    }
    v7 = (void *)(v6 - 88);
    v6 -= 168;
    if (v7 == v3)
    {
      v5 = *v1;
LABEL_21:
      v1[1] = v3;
      operator delete(v5);
LABEL_22:
      _Unwind_Resume(exception_object);
    }
  }
}

char *sub_210958AE8(char *result, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v7;

  v3 = result;
  v4 = *((_QWORD *)result + 1);
  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      result = sub_2108B43C0((char *)(v4 + v7), (__int128 *)(a2 + v7));
      v7 += 168;
    }
    while (a2 + v7 != a3);
    v4 += v7;
  }
  *((_QWORD *)v3 + 1) = v4;
  return result;
}

void sub_210958B50(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (!v3)
  {
LABEL_2:
    *(_QWORD *)(v1 + 8) = v2;
    _Unwind_Resume(exception_object);
  }
  while (1)
  {
    v5 = v2 + v3;
    if (!*(_BYTE *)(v2 + v3 - 8))
      goto LABEL_10;
    v6 = *(_QWORD **)(v5 - 16);
    if ((_QWORD *)(v5 - 40) == v6)
    {
      v6 = (_QWORD *)(v5 - 40);
      v7 = 4;
    }
    else
    {
      if (!v6)
        goto LABEL_10;
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_10:
    if (*(_BYTE *)(v5 - 48))
    {
      v8 = *(_QWORD **)(v2 + v3 - 56);
      if ((_QWORD *)(v2 + v3 - 80) == v8)
      {
        v8 = (_QWORD *)(v2 + v3 - 80);
        v9 = 4;
        goto LABEL_15;
      }
      if (v8)
      {
        v9 = 5;
LABEL_15:
        (*(void (**)(void))(*v8 + 8 * v9))();
      }
    }
    if (*(_BYTE *)(v2 + v3 - 144))
    {
      if (*(char *)(v2 + v3 - 145) < 0)
        operator delete(*(void **)(v5 - 168));
    }
    v3 -= 168;
    if (!v3)
      goto LABEL_2;
  }
}

void sub_210958C04(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  float v10;
  char *v11;
  float v12;
  _BOOL4 v13;
  BOOL v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  uint64_t *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _OWORD *v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  float v37;
  char *v38;
  float v39;
  _BOOL4 v40;
  BOOL v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _BYTE *v49;
  uint64_t *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _OWORD *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  float v64;
  char *v65;
  float v66;
  _BOOL4 v67;
  BOOL v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _BYTE *v76;
  uint64_t *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _OWORD *v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  float v90;
  char *v91;
  float v92;
  _BOOL4 v93;
  BOOL v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _BYTE *v102;
  uint64_t *v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  _OWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t *v117;
  int v118;
  int v119;
  uint64_t v120;
  float v121;
  void *v122;
  float v123;
  uint64_t v124;
  int v125;
  int v126;
  int v127;
  uint64_t v128;
  int v129;
  int v130;
  BOOL v131;
  float v132;
  float v133;
  float v134;
  float v135;
  float v136;
  float v137;
  uint64_t *v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  char *v150;
  uint64_t *v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  uint64_t **v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t *v160;
  char *v161;
  char *v162;

  v3 = a2;
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = HIDWORD(v4);
  v155 = v4;
  v6 = v4 >= 2 && HIDWORD(v4) > 1;
  if (!v6
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ImageProcessing/src/NonMaximumSuppression.cpp", 63, (uint64_t)"w > 1 && h > 1", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v7 = v5 - 1;
  v156 = (v5 - 1);
  v157 = (uint64_t **)v3;
  if ((_DWORD)v5 != 2)
  {
    v160 = v3 + 1;
    v159 = v3 + 2;
    if (v155 == 2)
      goto LABEL_11;
    v114 = 1;
LABEL_161:
    v158 = v114 << 32;
    v115 = v114 - 1;
    v116 = 1;
    while (1)
    {
      v118 = *(_DWORD *)(a1 + 16);
      v119 = *(_DWORD *)(a1 + 20);
      v120 = *(_QWORD *)a1;
      v121 = *(float *)(*(_QWORD *)a1 + 4 * (v118 * v116 + v119 * v114));
      v122 = operator new(0x20uLL);
      v123 = *(float *)(v120 + 4 * (v119 * v115 + (v116 - 1) * v118));
      *(float *)v122 = v123;
      *((_DWORD *)v122 + 1) = *(_DWORD *)(v120 + 4 * (v119 * v115 + v118 * v116));
      v124 = v116 + 1;
      *((_DWORD *)v122 + 2) = *(_DWORD *)(v120 + 4 * (v119 * v115 + v118 * (v116 + 1)));
      v126 = *(_DWORD *)(a1 + 16);
      v125 = *(_DWORD *)(a1 + 20);
      v127 = v126 * (v116 - 1);
      v128 = *(_QWORD *)a1;
      *((_DWORD *)v122 + 3) = *(_DWORD *)(*(_QWORD *)a1 + 4 * (v125 * v114 + v127));
      v129 = v126 * (v116 + 1);
      *((_DWORD *)v122 + 4) = *(_DWORD *)(v128 + 4 * (v125 * v114 + v129));
      v130 = v125 * (v114 + 1);
      *((_DWORD *)v122 + 5) = *(_DWORD *)(v128 + 4 * (v130 + v127));
      *((_DWORD *)v122 + 6) = *(_DWORD *)(v128 + 4 * (v130 + v126 * v116));
      *((_DWORD *)v122 + 7) = *(_DWORD *)(v128 + 4 * (v130 + v129));
      v131 = v121 <= v123;
      if (v121 > v123)
      {
        v132 = *((float *)v122 + 1);
        v131 = v121 <= v132;
        if (v121 > v132)
        {
          v133 = *((float *)v122 + 2);
          v131 = v121 <= v133;
          if (v121 > v133)
          {
            v134 = *((float *)v122 + 3);
            v131 = v121 <= v134;
            if (v121 > v134)
            {
              v135 = *((float *)v122 + 4);
              v131 = v121 <= v135;
              if (v121 > v135)
              {
                v136 = *((float *)v122 + 5);
                v131 = v121 <= v136;
                if (v121 > v136)
                {
                  v137 = *((float *)v122 + 6);
                  v131 = v121 <= v137;
                  if (v121 > v137)
                    v131 = v121 <= *((float *)v122 + 7);
                }
              }
            }
          }
        }
      }
      operator delete(v122);
      if (v131)
        goto LABEL_164;
      v138 = (uint64_t *)*v160;
      if ((unint64_t)*v160 < *v159)
      {
        *v138 = v116 | v158;
        v117 = v138 + 1;
      }
      else
      {
        v139 = (char *)*v3;
        v140 = ((char *)v138 - v139) >> 3;
        v141 = v140 + 1;
        if ((unint64_t)(v140 + 1) >> 61)
          sub_2108B327C();
        v142 = *v159 - (_QWORD)v139;
        if (v142 >> 2 > v141)
          v141 = v142 >> 2;
        if ((unint64_t)v142 >= 0x7FFFFFFFFFFFFFF8)
          v143 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v143 = v141;
        if (v143)
        {
          if (v143 >> 61)
            sub_2108B2B1C();
          v144 = (char *)operator new(8 * v143);
        }
        else
        {
          v144 = 0;
        }
        v145 = (uint64_t *)&v144[8 * v140];
        *v145 = v116 | v158;
        v117 = v145 + 1;
        if (v138 != (uint64_t *)v139)
        {
          v146 = (char *)v138 - v139 - 8;
          if (v146 < 0x58)
            goto LABEL_205;
          if ((unint64_t)(v139 - v144) < 0x20)
            goto LABEL_205;
          v147 = (v146 >> 3) + 1;
          v148 = 8 * (v147 & 0x3FFFFFFFFFFFFFFCLL);
          v149 = &v138[v148 / 0xFFFFFFFFFFFFFFF8];
          v145 = (uint64_t *)((char *)v145 - v148);
          v150 = &v144[8 * v140 - 16];
          v151 = v138 - 2;
          v152 = v147 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v153 = *(_OWORD *)v151;
            *((_OWORD *)v150 - 1) = *((_OWORD *)v151 - 1);
            *(_OWORD *)v150 = v153;
            v150 -= 32;
            v151 -= 4;
            v152 -= 4;
          }
          while (v152);
          v138 = v149;
          if (v147 != (v147 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_205:
            do
            {
              v154 = *--v138;
              *--v145 = v154;
            }
            while (v138 != (uint64_t *)v139);
          }
          v3 = v157;
          v138 = *v157;
          *v157 = v145;
          v157[1] = v117;
          v157[2] = (uint64_t *)&v144[8 * v143];
          if (!v138)
            goto LABEL_163;
LABEL_195:
          operator delete(v138);
          goto LABEL_163;
        }
        v3 = v157;
        *v157 = v145;
        v157[1] = v117;
        v157[2] = (uint64_t *)&v144[8 * v143];
        if (v138)
          goto LABEL_195;
      }
LABEL_163:
      *v160 = (uint64_t)v117;
LABEL_164:
      v116 = v124;
      if (v124 == v155 - 1)
      {
        ++v114;
        v7 = v156;
        if ((_DWORD)v156 == (_DWORD)v114)
          break;
        goto LABEL_161;
      }
    }
  }
  v160 = v3 + 1;
  v159 = v3 + 2;
  if (v155)
  {
LABEL_11:
    v8 = 0;
    while (1)
    {
      v10 = *(float *)(*(_QWORD *)a1 + 4 * (*(_DWORD *)(a1 + 16) * v8));
      sub_2109597D4(&v161, (uint64_t *)a1, v8, 0);
      if (v161 == v162)
      {
        v13 = 1;
        if (v161)
          goto LABEL_23;
      }
      else
      {
        v11 = v161 + 4;
        do
        {
          v12 = *((float *)v11 - 1);
          v13 = v10 > v12;
          v14 = v10 <= v12 || v11 == v162;
          v11 += 4;
        }
        while (!v14);
        if (v161)
        {
LABEL_23:
          v162 = v161;
          operator delete(v161);
        }
      }
      if (!v13)
        goto LABEL_14;
      v15 = (char *)*v160;
      if ((unint64_t)*v160 < *v159)
      {
        *(_QWORD *)v15 = v8;
        v9 = (uint64_t)(v15 + 8);
      }
      else
      {
        v16 = (char *)*v3;
        v17 = (uint64_t)&v15[-*v3];
        v18 = v17 >> 3;
        v19 = (v17 >> 3) + 1;
        if (v19 >> 61)
LABEL_198:
          sub_2108B327C();
        v20 = *v159 - (_QWORD)v16;
        if (v20 >> 2 > v19)
          v19 = v20 >> 2;
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8)
          v21 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v21 = v19;
        if (v21)
        {
          if (v21 >> 61)
LABEL_200:
            sub_2108B2B1C();
          v22 = operator new(8 * v21);
          v23 = (uint64_t *)&v22[8 * v18];
          *v23 = v8;
          v9 = (uint64_t)(v23 + 1);
          v24 = (char *)(v15 - v16);
          if (v15 != v16)
          {
LABEL_35:
            v25 = (unint64_t)(v24 - 8);
            if (v25 < 0x58)
              goto LABEL_206;
            if ((unint64_t)(v15 - v22 - v17) < 0x20)
              goto LABEL_206;
            v26 = (v25 >> 3) + 1;
            v27 = 8 * (v26 & 0x3FFFFFFFFFFFFFFCLL);
            v28 = &v15[-v27];
            v23 = (uint64_t *)((char *)v23 - v27);
            v29 = &v22[8 * v18 - 16];
            v30 = v15 - 16;
            v31 = v26 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v32 = *(_OWORD *)v30;
              *(v29 - 1) = *((_OWORD *)v30 - 1);
              *v29 = v32;
              v29 -= 2;
              v30 -= 32;
              v31 -= 4;
            }
            while (v31);
            v15 = v28;
            if (v26 != (v26 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_206:
              do
              {
                v33 = *((_QWORD *)v15 - 1);
                v15 -= 8;
                *--v23 = v33;
              }
              while (v15 != v16);
            }
            v3 = v157;
            v15 = (char *)*v157;
            *v157 = v23;
            v157[1] = (uint64_t *)v9;
            v157[2] = (uint64_t *)&v22[8 * v21];
            if (!v15)
              goto LABEL_13;
LABEL_47:
            operator delete(v15);
            goto LABEL_13;
          }
        }
        else
        {
          v22 = 0;
          v23 = (uint64_t *)(8 * v18);
          *(_QWORD *)(8 * v18) = v8;
          v9 = 8 * v18 + 8;
          v24 = (char *)(v15 - v16);
          if (v15 != v16)
            goto LABEL_35;
        }
        v3 = v157;
        *v157 = v23;
        v157[1] = (uint64_t *)v9;
        v157[2] = (uint64_t *)&v22[8 * v21];
        if (v15)
          goto LABEL_47;
      }
LABEL_13:
      *v160 = v9;
LABEL_14:
      if (++v8 == v155)
      {
        v34 = 0;
        v7 = v156;
        v35 = v156 << 32;
        while (1)
        {
          v37 = *(float *)(*(_QWORD *)a1 + 4 * (*(_DWORD *)(a1 + 16) * v34 + *(_DWORD *)(a1 + 20) * v7));
          sub_2109597D4(&v161, (uint64_t *)a1, v34, v7);
          if (v161 == v162)
          {
            v40 = 1;
            if (v161)
              goto LABEL_60;
          }
          else
          {
            v38 = v161 + 4;
            do
            {
              v39 = *((float *)v38 - 1);
              v40 = v37 > v39;
              v41 = v37 <= v39 || v38 == v162;
              v38 += 4;
            }
            while (!v41);
            if (v161)
            {
LABEL_60:
              v162 = v161;
              operator delete(v161);
            }
          }
          if (!v40)
            goto LABEL_51;
          v42 = (char *)*v160;
          if ((unint64_t)*v160 < *v159)
          {
            *(_QWORD *)v42 = v34 | v35;
            v36 = (uint64_t)(v42 + 8);
          }
          else
          {
            v43 = (char *)*v3;
            v44 = (uint64_t)&v42[-*v3];
            v45 = v44 >> 3;
            v46 = (v44 >> 3) + 1;
            if (v46 >> 61)
              goto LABEL_198;
            v47 = *v159 - (_QWORD)v43;
            if (v47 >> 2 > v46)
              v46 = v47 >> 2;
            if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF8)
              v48 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v48 = v46;
            if (v48)
            {
              if (v48 >> 61)
                goto LABEL_200;
              v49 = operator new(8 * v48);
              v50 = (uint64_t *)&v49[8 * v45];
              *v50 = v34 | v35;
              v36 = (uint64_t)(v50 + 1);
              v51 = (char *)(v42 - v43);
              if (v42 != v43)
              {
LABEL_72:
                v52 = (unint64_t)(v51 - 8);
                if (v52 < 0x58)
                  goto LABEL_207;
                if ((unint64_t)(v42 - v49 - v44) < 0x20)
                  goto LABEL_207;
                v53 = (v52 >> 3) + 1;
                v54 = 8 * (v53 & 0x3FFFFFFFFFFFFFFCLL);
                v55 = &v42[-v54];
                v50 = (uint64_t *)((char *)v50 - v54);
                v56 = &v49[8 * v45 - 16];
                v57 = v42 - 16;
                v58 = v53 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v59 = *(_OWORD *)v57;
                  *(v56 - 1) = *((_OWORD *)v57 - 1);
                  *v56 = v59;
                  v56 -= 2;
                  v57 -= 32;
                  v58 -= 4;
                }
                while (v58);
                v42 = v55;
                if (v53 != (v53 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_207:
                  do
                  {
                    v60 = *((_QWORD *)v42 - 1);
                    v42 -= 8;
                    *--v50 = v60;
                  }
                  while (v42 != v43);
                }
                v7 = v156;
                v42 = (char *)*v157;
                *v157 = v50;
                v157[1] = (uint64_t *)v36;
                v157[2] = (uint64_t *)&v49[8 * v48];
                if (!v42)
                  goto LABEL_50;
LABEL_84:
                operator delete(v42);
                goto LABEL_50;
              }
            }
            else
            {
              v49 = 0;
              v50 = (uint64_t *)(8 * v45);
              *(_QWORD *)(8 * v45) = v34 | v35;
              v36 = 8 * v45 + 8;
              v51 = (char *)(v42 - v43);
              if (v42 != v43)
                goto LABEL_72;
            }
            v7 = v156;
            *v157 = v50;
            v157[1] = (uint64_t *)v36;
            v157[2] = (uint64_t *)&v49[8 * v48];
            if (v42)
              goto LABEL_84;
          }
LABEL_50:
          *v160 = v36;
          v3 = v157;
LABEL_51:
          if (++v34 == v155)
            goto LABEL_8;
        }
      }
    }
  }
LABEL_8:
  if (v7 != 1)
  {
    v61 = (v155 - 1);
    v62 = 1;
    while (1)
    {
      v64 = *(float *)(*(_QWORD *)a1 + 4 * (*(_DWORD *)(a1 + 20) * v62));
      sub_2109597D4(&v161, (uint64_t *)a1, 0, v62);
      if (v161 == v162)
      {
        v67 = 1;
        if (v161)
          goto LABEL_97;
      }
      else
      {
        v65 = v161 + 4;
        do
        {
          v66 = *((float *)v65 - 1);
          v67 = v64 > v66;
          v68 = v64 <= v66 || v65 == v162;
          v65 += 4;
        }
        while (!v68);
        if (v161)
        {
LABEL_97:
          v162 = v161;
          operator delete(v161);
        }
      }
      if (!v67)
        goto LABEL_88;
      v69 = (char *)*v160;
      if ((unint64_t)*v160 < *v159)
      {
        *(_QWORD *)v69 = v62 << 32;
        v63 = (uint64_t)(v69 + 8);
      }
      else
      {
        v70 = (char *)*v3;
        v71 = (uint64_t)&v69[-*v3];
        v72 = v71 >> 3;
        v73 = (v71 >> 3) + 1;
        if (v73 >> 61)
LABEL_199:
          sub_2108B327C();
        v74 = *v159 - (_QWORD)v70;
        if (v74 >> 2 > v73)
          v73 = v74 >> 2;
        if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFF8)
          v75 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v75 = v73;
        if (v75)
        {
          if (v75 >> 61)
LABEL_201:
            sub_2108B2B1C();
          v76 = operator new(8 * v75);
          v77 = (uint64_t *)&v76[8 * v72];
          *v77 = v62 << 32;
          v63 = (uint64_t)(v77 + 1);
          v78 = (char *)(v69 - v70);
          if (v69 != v70)
          {
LABEL_109:
            v79 = (unint64_t)(v78 - 8);
            if (v79 < 0x58)
              goto LABEL_208;
            if ((unint64_t)(v69 - v76 - v71) < 0x20)
              goto LABEL_208;
            v80 = (v79 >> 3) + 1;
            v81 = 8 * (v80 & 0x3FFFFFFFFFFFFFFCLL);
            v82 = &v69[-v81];
            v77 = (uint64_t *)((char *)v77 - v81);
            v83 = &v76[8 * v72 - 16];
            v84 = v69 - 16;
            v85 = v80 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v86 = *(_OWORD *)v84;
              *(v83 - 1) = *((_OWORD *)v84 - 1);
              *v83 = v86;
              v83 -= 2;
              v84 -= 32;
              v85 -= 4;
            }
            while (v85);
            v69 = v82;
            if (v80 != (v80 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_208:
              do
              {
                v87 = *((_QWORD *)v69 - 1);
                v69 -= 8;
                *--v77 = v87;
              }
              while (v69 != v70);
            }
            v3 = v157;
            v69 = (char *)*v157;
            *v157 = v77;
            v157[1] = (uint64_t *)v63;
            v157[2] = (uint64_t *)&v76[8 * v75];
            if (!v69)
              goto LABEL_87;
LABEL_121:
            operator delete(v69);
            goto LABEL_87;
          }
        }
        else
        {
          v76 = 0;
          v77 = (uint64_t *)(8 * v72);
          *(_QWORD *)(8 * v72) = v62 << 32;
          v63 = 8 * v72 + 8;
          v78 = (char *)(v69 - v70);
          if (v69 != v70)
            goto LABEL_109;
        }
        v3 = v157;
        *v157 = v77;
        v157[1] = (uint64_t *)v63;
        v157[2] = (uint64_t *)&v76[8 * v75];
        if (v69)
          goto LABEL_121;
      }
LABEL_87:
      v7 = v156;
      *v160 = v63;
LABEL_88:
      if (v7 == (_DWORD)++v62)
      {
        v88 = 1;
        while (1)
        {
          v90 = *(float *)(*(_QWORD *)a1 + 4 * (*(_DWORD *)(a1 + 16) * v61 + *(_DWORD *)(a1 + 20) * v88));
          sub_2109597D4(&v161, (uint64_t *)a1, v61, v88);
          if (v161 == v162)
          {
            v93 = 1;
            if (v161)
              goto LABEL_134;
          }
          else
          {
            v91 = v161 + 4;
            do
            {
              v92 = *((float *)v91 - 1);
              v93 = v90 > v92;
              v94 = v90 <= v92 || v91 == v162;
              v91 += 4;
            }
            while (!v94);
            if (v161)
            {
LABEL_134:
              v162 = v161;
              operator delete(v161);
            }
          }
          if (!v93)
            goto LABEL_125;
          v95 = (uint64_t *)*v160;
          if ((unint64_t)*v160 < *v159)
          {
            *v95 = v61 | (v88 << 32);
            v89 = (uint64_t)(v95 + 1);
          }
          else
          {
            v96 = (uint64_t *)*v3;
            v97 = (uint64_t)v95 - *v3;
            v98 = v97 >> 3;
            v99 = (v97 >> 3) + 1;
            if (v99 >> 61)
              goto LABEL_199;
            v100 = *v159 - (_QWORD)v96;
            if (v100 >> 2 > v99)
              v99 = v100 >> 2;
            if ((unint64_t)v100 >= 0x7FFFFFFFFFFFFFF8)
              v101 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v101 = v99;
            if (v101)
            {
              if (v101 >> 61)
                goto LABEL_201;
              v102 = operator new(8 * v101);
              v103 = (uint64_t *)&v102[8 * v98];
              *v103 = v61 | (v88 << 32);
              v89 = (uint64_t)(v103 + 1);
              v104 = (char *)((char *)v95 - (char *)v96);
              if (v95 != v96)
              {
LABEL_146:
                v105 = (unint64_t)(v104 - 8);
                if (v105 < 0x58)
                  goto LABEL_209;
                if ((unint64_t)((char *)v95 - &v102[v97]) < 0x20)
                  goto LABEL_209;
                v106 = (v105 >> 3) + 1;
                v107 = 8 * (v106 & 0x3FFFFFFFFFFFFFFCLL);
                v108 = &v95[v107 / 0xFFFFFFFFFFFFFFF8];
                v103 = (uint64_t *)((char *)v103 - v107);
                v109 = &v102[8 * v98 - 16];
                v110 = v95 - 2;
                v111 = v106 & 0x3FFFFFFFFFFFFFFCLL;
                do
                {
                  v112 = *(_OWORD *)v110;
                  *(v109 - 1) = *((_OWORD *)v110 - 1);
                  *v109 = v112;
                  v109 -= 2;
                  v110 -= 4;
                  v111 -= 4;
                }
                while (v111);
                v95 = v108;
                if (v106 != (v106 & 0x3FFFFFFFFFFFFFFCLL))
                {
LABEL_209:
                  do
                  {
                    v113 = *--v95;
                    *--v103 = v113;
                  }
                  while (v95 != v96);
                }
                v3 = v157;
                v95 = *v157;
                *v157 = v103;
                v157[1] = (uint64_t *)v89;
                v157[2] = (uint64_t *)&v102[8 * v101];
                if (!v95)
                  goto LABEL_124;
LABEL_158:
                operator delete(v95);
                goto LABEL_124;
              }
            }
            else
            {
              v102 = 0;
              v103 = (uint64_t *)(8 * v98);
              *(_QWORD *)(8 * v98) = v61 | (v88 << 32);
              v89 = 8 * v98 + 8;
              v104 = (char *)((char *)v95 - (char *)v96);
              if (v95 != v96)
                goto LABEL_146;
            }
            v3 = v157;
            *v157 = v103;
            v157[1] = (uint64_t *)v89;
            v157[2] = (uint64_t *)&v102[8 * v101];
            if (v95)
              goto LABEL_158;
          }
LABEL_124:
          v7 = v156;
          *v160 = v89;
LABEL_125:
          if (v7 == (_DWORD)++v88)
            return;
        }
      }
    }
  }
}

void sub_21095977C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  void *v14;

  v14 = *(void **)v12;
  if (*(_QWORD *)v12)
  {
    *(_QWORD *)(v12 + 8) = v14;
    operator delete(v14);
  }
  _Unwind_Resume(exception_object);
}

void sub_2109597D4(char **a1, uint64_t *a2, int a3, int a4)
{
  char **v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE *v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  char *v27;
  int v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  int v37;
  char **v38;

  v7 = a1;
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v8 = (char *)operator new(0x20uLL);
  v9 = 0;
  v10 = v8 + 32;
  *v7 = v8;
  v7[1] = v8;
  v7[2] = v8 + 32;
  v11 = v8;
  v37 = a4;
  v38 = v7;
  do
  {
    v13 = (_DWORD *)((char *)&unk_210A17904 + 8 * v9);
    v14 = *v13 + a3;
    if (v14 >= 0)
    {
      v15 = v13[1] + a4;
      if ((v15 & 0x80000000) == 0
        && (float)((float)*((unsigned int *)a2 + 2) + -1.0) >= (float)v14
        && (float)((float)*((unsigned int *)a2 + 3) + -1.0) >= (float)v15)
      {
        v17 = (*((_DWORD *)a2 + 4) * v14 + *((_DWORD *)a2 + 5) * v15);
        v18 = *a2;
        if (v11 < v10)
        {
          *(_DWORD *)v11 = *(_DWORD *)(v18 + 4 * v17);
          v12 = (uint64_t)(v11 + 4);
LABEL_3:
          v7[1] = (char *)v12;
          v11 = (char *)v12;
          goto LABEL_4;
        }
        v19 = (v11 - v8) >> 2;
        v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 62)
          sub_2108B327C();
        if ((v10 - v8) >> 1 > v20)
          v20 = (v10 - v8) >> 1;
        if ((unint64_t)(v10 - v8) >= 0x7FFFFFFFFFFFFFFCLL)
          v21 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v21 = v20;
        if (v21)
        {
          if (v21 >> 62)
            sub_2108B2B1C();
          v22 = v21;
          v23 = operator new(4 * v21);
          v21 = v22;
          v24 = &v23[4 * v19];
          *(_DWORD *)v24 = *(_DWORD *)(v18 + 4 * v17);
          v12 = (uint64_t)(v24 + 4);
          v25 = v11 - v8;
          if (v11 != v8)
          {
LABEL_21:
            v26 = v25 - 4;
            if (v26 < 0xBC
              || (v30 = (v11 - 4 - v8) & 0xFFFFFFFFFFFFFFFCLL, &v23[v11 - v8 - 4 - v30] > &v23[v11 - v8 - 4])
              || &v11[-v30 - 4] > v11 - 4
              || (unint64_t)(v8 - v23) < 0x20)
            {
              v27 = v11;
              v7 = v38;
            }
            else
            {
              v31 = (v26 >> 2) + 1;
              v32 = 4 * (v31 & 0x7FFFFFFFFFFFFFF8);
              v27 = &v11[-v32];
              v24 -= v32;
              v33 = &v23[4 * v19 - 16];
              v34 = v11 - 16;
              v35 = v31 & 0x7FFFFFFFFFFFFFF8;
              v7 = v38;
              do
              {
                v36 = *(_OWORD *)v34;
                *(v33 - 1) = *((_OWORD *)v34 - 1);
                *v33 = v36;
                v33 -= 2;
                v34 -= 32;
                v35 -= 8;
              }
              while (v35);
              if (v31 == (v31 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_24:
                v10 = &v23[4 * v21];
                *v7 = v24;
                v7[1] = (char *)v12;
                v7[2] = v10;
                if (!v8)
                {
LABEL_26:
                  v8 = v24;
                  a4 = v37;
                  goto LABEL_3;
                }
LABEL_25:
                v29 = v10;
                operator delete(v8);
                v10 = v29;
                goto LABEL_26;
              }
            }
            do
            {
              v28 = *((_DWORD *)v27 - 1);
              v27 -= 4;
              *((_DWORD *)v24 - 1) = v28;
              v24 -= 4;
            }
            while (v27 != v8);
            goto LABEL_24;
          }
        }
        else
        {
          v23 = 0;
          v24 = (char *)(4 * v19);
          *(_DWORD *)(4 * v19) = *(_DWORD *)(v18 + 4 * v17);
          v12 = 4 * v19 + 4;
          v25 = v11 - v8;
          if (v11 != v8)
            goto LABEL_21;
        }
        v7 = v38;
        v10 = &v23[4 * v21];
        *v38 = v24;
        v38[1] = (char *)v12;
        v38[2] = v10;
        if (!v8)
          goto LABEL_26;
        goto LABEL_25;
      }
    }
LABEL_4:
    ++v9;
  }
  while (v9 != 8);
}

void sub_210959A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void *v10;

  if (v10)
  {
    *(_QWORD *)(a10 + 8) = v10;
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_210959AB0@<X0>(std::string *a1@<X8>)
{
  std::runtime_error *exception;
  uint64_t v3;
  void *__p;
  __int128 v6;
  void *v7;
  __int128 v8;
  std::string v9;
  char v10;
  _QWORD v11[2];
  _QWORD v12[11];
  char v13;
  uint64_t v14;

  sub_2108B18D0((uint64_t)v11);
  v7 = operator new(0x20uLL);
  v8 = xmmword_210A17950;
  strcpy((char *)v7, "com.apple.LearnedFeatures");
  __p = operator new(0x78uLL);
  v6 = xmmword_210A17960;
  strcpy((char *)__p, "CV3D_LearnedFeatures_KpNet_Detector_Descriptor_Model/detector_n1_c1_h480_w640_omultiplefp32_i8jbvgyuv2.espresso.net");
  sub_2109E971C((uint64_t)&v7, (std::string::size_type)&__p, v12, 1, &v9);
  if (SHIBYTE(v6) < 0)
  {
    operator delete(__p);
    if ((SHIBYTE(v8) & 0x80000000) == 0)
    {
LABEL_3:
      if (v10)
        goto LABEL_4;
LABEL_8:
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Failed to access model resource path");
      __cxa_throw(exception, MEMORY[0x24BEDB730], MEMORY[0x24BEDAB60]);
    }
  }
  else if ((SHIBYTE(v8) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v7);
  if (!v10)
    goto LABEL_8;
LABEL_4:
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(a1, v9.__r_.__value_.__l.__data_, v9.__r_.__value_.__l.__size_);
    if (v10 && SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
  }
  else
  {
    *a1 = v9;
  }
  v11[0] = *MEMORY[0x24BEDB7F0];
  v3 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)((char *)v11 + *(_QWORD *)(v11[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v12[0] = v3;
  v12[1] = MEMORY[0x24BEDB848] + 16;
  if (v13 < 0)
    operator delete((void *)v12[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x212BCC66C](&v14);
}

void sub_210959C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,int a29,__int16 a30,char a31,char a32)
{
  void *v32;

  __cxa_free_exception(v32);
  if (a28)
  {
    if (a27 < 0)
    {
      operator delete(__p);
      sub_2108B1A08((uint64_t)&a30);
      _Unwind_Resume(a1);
    }
  }
  sub_2108B1A08((uint64_t)&a30);
  _Unwind_Resume(a1);
}

uint64_t sub_210959D0C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 16) + 16))(**(_QWORD **)(a1 + 16));
}

uint64_t sub_210959D20(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 16))(**(_QWORD **)(a1 + 8));
}

uint64_t sub_210959D34(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 16) + 32))(**(_QWORD **)(a1 + 16));
}

uint64_t sub_210959D48(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 32))(**(_QWORD **)(a1 + 8));
}

uint64_t sub_210959D5C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 16) + 24))(**(_QWORD **)(a1 + 16));
}

uint64_t sub_210959D70(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 16) + 64))(**(_QWORD **)(a1 + 16));
}

uint64_t sub_210959D84(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, unint64_t))(***(_QWORD ***)(a1 + 16) + 72))(**(_QWORD **)(a1 + 16), a2, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a3[1] - *a3) >> 2));
}

uint64_t sub_210959DB4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, unint64_t))(***(_QWORD ***)(a1 + 8) + 72))(**(_QWORD **)(a1 + 8), a2, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a3[1] - *a3) >> 2));
}

uint64_t sub_210959DE4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 16) + 56))(**(_QWORD **)(a1 + 16));
}

uint64_t sub_210959DF8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, unint64_t))(***(_QWORD ***)(a1 + 16) + 48))(**(_QWORD **)(a1 + 16), a2, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a3[1] - *a3) >> 2));
}

void sub_210959E28(int a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  char v4;
  __int128 *v5;
  char *v6;
  int v7;
  int v8;
  void *__p[2];
  char v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  if (a1 != 4
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndExtractor.cpp", 101, (uint64_t)"type == EndToEndModelType::ATUHardNetGlobalFeat", 47, (uint64_t)&unk_210A056E9, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21095C6DC(0, (uint64_t)__p);
  v14 = v12;
  v15 = v13;
  v13 = 0;
  v12 = 0uLL;
  sub_21095A0E8((uint64_t)__p);
  v3 = HIBYTE(v15);
  v4 = HIBYTE(v15);
  if (v15 < 0)
    v3 = *((_QWORD *)&v14 + 1);
  if (v3 < 6)
    goto LABEL_12;
  v5 = (__int128 *)v14;
  if (v15 >= 0)
    v5 = &v14;
  v6 = (char *)v5 + v3;
  v7 = *(_DWORD *)(v6 - 6);
  v8 = *((unsigned __int16 *)v6 - 1);
  if (v7 != 1684960610 || v8 != 25964)
  {
LABEL_12:
    *a2 = 0;
    a2[1] = 0;
    if ((v4 & 0x80) == 0)
      return;
LABEL_18:
    operator delete((void *)v14);
    return;
  }
  v11 = 4;
  strcpy((char *)__p, "main");
  sub_2108ABA8C(a2);
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (v15 < 0)
      goto LABEL_18;
  }
  else if (v15 < 0)
  {
    goto LABEL_18;
  }
}

void sub_210959F74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v15 - 25) & 0x80000000) == 0)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v15 - 25) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v15 - 48));
  _Unwind_Resume(exception_object);
}

uint64_t sub_210959FB0(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_24CA80B88;
  *(_QWORD *)(a1 + 8) = &unk_24CA80BE0;
  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 24))();
  return a1;
}

void sub_210959FF8(uint64_t a1)
{
  uint64_t v2;

  *(_QWORD *)a1 = &off_24CA80B88;
  *(_QWORD *)(a1 + 8) = &unk_24CA80BE0;
  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 24))();
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21095A050(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result - 8) = &off_24CA80B88;
  v1 = *(_QWORD *)(result + 8);
  *(_QWORD *)result = &unk_24CA80BE0;
  *(_QWORD *)(result + 8) = 0;
  if (v1)
    return (*(uint64_t (**)(uint64_t))(result + 16))(v1);
  return result;
}

void sub_21095A08C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 8) = &off_24CA80B88;
  v1 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &unk_24CA80BE0;
  *(_QWORD *)(a1 + 8) = 0;
  if (v1)
    (*(void (**)(uint64_t))(a1 + 16))(v1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21095A0E8(uint64_t a1)
{
  void *v2;

  sub_21095A1BC(a1 + 160, *(void ***)(a1 + 176));
  v2 = *(void **)(a1 + 160);
  *(_QWORD *)(a1 + 160) = 0;
  if (v2)
    operator delete(v2);
  if (*(char *)(a1 + 159) < 0)
  {
    operator delete(*(void **)(a1 + 136));
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
    {
LABEL_5:
      if ((*(char *)(a1 + 111) & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_12;
    }
  }
  else if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 111) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(a1 + 87) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(a1 + 88));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_7:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0)
      goto LABEL_8;
LABEL_14:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
    goto LABEL_15;
  }
LABEL_13:
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_14;
LABEL_8:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0)
    return a1;
LABEL_15:
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_21095A1BC(int a1, void **__p)
{
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void *v6;
  void *v7;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (void **)*v2;
      if (*((char *)v2 + 95) < 0)
      {
        operator delete(v2[9]);
        if (*((_BYTE *)v2 + 64))
        {
LABEL_8:
          v4 = (void **)v2[5];
          if (v4)
          {
            v5 = (void **)v2[6];
            v6 = v2[5];
            if (v5 != v4)
            {
              do
              {
                if (*((char *)v5 - 1) < 0)
                  operator delete(*(v5 - 3));
                v5 -= 3;
              }
              while (v5 != v4);
              v6 = v2[5];
            }
            v2[6] = v4;
            operator delete(v6);
          }
        }
      }
      else if (*((_BYTE *)v2 + 64))
      {
        goto LABEL_8;
      }
      v7 = v2[2];
      if (v7)
      {
        v2[3] = v7;
        operator delete(v7);
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_21095A27C(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t *sub_21095A2B4()
{
  uint64_t *v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = operator new();
  sub_210961C1C(v2, v1);
  *v0 = v2;
  v3 = (_QWORD *)operator new();
  *v3 = &off_24CA80C30;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = v2;
  v0[1] = (uint64_t)v3;
  return v0;
}

void sub_21095A428(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_21095A0E8((uint64_t)va);
  MEMORY[0x212BCC6FC](v2, 0x10B3C402B4004AALL);
  _Unwind_Resume(a1);
}

void sub_21095A4DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BCC6FC](v1, 0x10B3C40F20C5D14);
  _Unwind_Resume(a1);
}

void sub_21095A500(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_21095A520(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21095A544(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_21095A55C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d2lf7feature14IEndToEndModelEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature14IEndToEndModelEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d2lf7feature14IEndToEndModelEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature14IEndToEndModelEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_21095A5CC(uint64_t result)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  if (result)
  {
    v1 = *(std::__shared_weak_count **)(result + 8);
    if (v1)
    {
      p_shared_owners = (unint64_t *)&v1->__shared_owners_;
      do
        v3 = __ldaxr(p_shared_owners);
      while (__stlxr(v3 - 1, p_shared_owners));
      if (!v3)
      {
        ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
        std::__shared_weak_count::__release_weak(v1);
      }
    }
    JUMPOUT(0x212BCC6FCLL);
  }
  return result;
}

void sub_21095A63C(int a1@<W0>, uint64_t a2@<X8>)
{
  _DWORD *v3;
  _DWORD *v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void **v20;
  void *v21;
  uint64_t v22;
  void *__p[5];
  _BYTE v25[128];
  __int128 v26;
  char v27;
  _DWORD *v28;
  char *v29;
  char *v30;
  char v31;
  char v32;
  char v33[24];
  _DWORD *v34;
  char *v35;
  char *v36;
  char v37;
  char v38;
  char v39[24];
  _DWORD *v40;
  char *v41;
  char *v42;
  char v43;
  char v44;
  char v45[24];
  _DWORD *v46;
  char *v47;
  char *v48;
  char v49;
  char v50;
  char v51[23];
  _BYTE v52[9];
  char *v53;
  char *v54;
  char v55;
  char v56;
  char v57[23];
  _BYTE v58[9];
  char *v59;
  char *v60;
  char v61;
  char v62;
  char v63[23];
  _BYTE v64[9];
  char *v65;
  char *v66;
  char v67;
  char v68;
  char v69[23];
  _BYTE v70[9];
  char *v71;
  char *v72;
  char v73;
  char v74;
  char v75[23];
  _BYTE v76[9];
  char *v77;
  char *v78;
  char v79;
  char v80;
  char v81[23];
  _BYTE v82[9];
  char *v83;
  char *v84;
  char v85;
  char v86;
  char v87[23];
  _BYTE v88[9];
  char *v89;
  char *v90;
  char v91;
  char v92;
  char v93[24];
  _DWORD *v94;
  char *v95;
  char *v96;
  char v97;
  char v98;
  uint64_t v99;

  v99 = *MEMORY[0x24BDAC8D0];
  v27 = 10;
  strcpy((char *)&v26, "lf-480x640");
  v3 = operator new(0x14uLL);
  v29 = (char *)(v3 + 5);
  v30 = (char *)(v3 + 5);
  *(_OWORD *)v3 = xmmword_210A17A50;
  v3[4] = 1;
  v28 = v3;
  v31 = 0;
  v32 = 0;
  v33[23] = 10;
  strcpy(v33, "lf-640x480");
  v4 = operator new(0x14uLL);
  v35 = (char *)(v4 + 5);
  v36 = (char *)(v4 + 5);
  *(_OWORD *)v4 = xmmword_210A17A60;
  v4[4] = 1;
  v34 = v4;
  v37 = 0;
  v38 = 0;
  v39[23] = 10;
  strcpy(v39, "lf-640x360");
  v5 = operator new(0x14uLL);
  v41 = (char *)(v5 + 5);
  v42 = (char *)(v5 + 5);
  *(_OWORD *)v5 = xmmword_210A17A70;
  v5[4] = 1;
  v40 = v5;
  v43 = 0;
  v44 = 0;
  v45[23] = 10;
  strcpy(v45, "lf-480x480");
  v6 = operator new(0x14uLL);
  v47 = (char *)(v6 + 5);
  v48 = (char *)(v6 + 5);
  *(_OWORD *)v6 = xmmword_210A17A80;
  v6[4] = 1;
  v46 = v6;
  v49 = 0;
  v50 = 0;
  strcpy(v52, "\n");
  strcpy(v51, "lf-480x360");
  v54 = 0;
  v52[2] = 0;
  *(_WORD *)&v52[3] = 0;
  *(_DWORD *)&v52[5] = 0;
  v53 = 0;
  v7 = operator new(0x14uLL);
  v54 = (char *)(v7 + 5);
  *(_OWORD *)v7 = xmmword_210A17A90;
  v7[4] = 1;
  *(_QWORD *)&v52[1] = v7;
  v53 = (char *)(v7 + 5);
  v55 = 0;
  v56 = 0;
  strcpy(v58, "\n");
  strcpy(v57, "lf-480x270");
  v60 = 0;
  v58[2] = 0;
  *(_WORD *)&v58[3] = 0;
  *(_DWORD *)&v58[5] = 0;
  v59 = 0;
  v8 = operator new(0x14uLL);
  v60 = (char *)(v8 + 5);
  *(_OWORD *)v8 = xmmword_210A17AA0;
  v8[4] = 1;
  *(_QWORD *)&v58[1] = v8;
  v59 = (char *)(v8 + 5);
  v61 = 0;
  v62 = 0;
  strcpy(v64, "\n");
  strcpy(v63, "lf-360x270");
  v66 = 0;
  v64[2] = 0;
  *(_WORD *)&v64[3] = 0;
  *(_DWORD *)&v64[5] = 0;
  v65 = 0;
  v9 = operator new(0x14uLL);
  v66 = (char *)(v9 + 5);
  *(_OWORD *)v9 = xmmword_210A17AB0;
  v9[4] = 1;
  *(_QWORD *)&v64[1] = v9;
  v65 = (char *)(v9 + 5);
  v67 = 0;
  v68 = 0;
  strcpy(v70, "\n");
  strcpy(v69, "lf-320x180");
  v70[2] = 0;
  *(_WORD *)&v70[3] = 0;
  *(_DWORD *)&v70[5] = 0;
  v72 = 0;
  v71 = 0;
  v10 = operator new(0x14uLL);
  *(_QWORD *)&v70[1] = v10;
  v72 = (char *)(v10 + 5);
  *(_OWORD *)v10 = xmmword_210A17AC0;
  v10[4] = 1;
  v71 = (char *)(v10 + 5);
  v73 = 0;
  v74 = 0;
  strcpy(v76, "\n");
  strcpy(v75, "lf-320x240");
  v76[2] = 0;
  *(_WORD *)&v76[3] = 0;
  *(_DWORD *)&v76[5] = 0;
  v78 = 0;
  v77 = 0;
  v11 = operator new(0x14uLL);
  *(_QWORD *)&v76[1] = v11;
  v78 = (char *)(v11 + 5);
  *(_OWORD *)v11 = xmmword_210A17AD0;
  v11[4] = 1;
  v77 = (char *)(v11 + 5);
  v79 = 0;
  v80 = 0;
  strcpy(v82, "\n");
  strcpy(v81, "lf-320x320");
  v82[2] = 0;
  *(_WORD *)&v82[3] = 0;
  *(_DWORD *)&v82[5] = 0;
  v84 = 0;
  v83 = 0;
  v12 = operator new(0x14uLL);
  *(_QWORD *)&v82[1] = v12;
  v84 = (char *)(v12 + 5);
  *(_OWORD *)v12 = xmmword_210A17AE0;
  v12[4] = 1;
  v83 = (char *)(v12 + 5);
  v85 = 0;
  v86 = 0;
  strcpy(v88, "\n");
  strcpy(v87, "lf-640x640");
  v88[2] = 0;
  *(_WORD *)&v88[3] = 0;
  *(_DWORD *)&v88[5] = 0;
  v90 = 0;
  v89 = 0;
  v13 = operator new(0x14uLL);
  *(_QWORD *)&v88[1] = v13;
  v90 = (char *)(v13 + 5);
  *(_OWORD *)v13 = xmmword_210A17AF0;
  v13[4] = 1;
  v89 = (char *)(v13 + 5);
  v91 = 0;
  v92 = 0;
  v93[23] = 19;
  strcpy(v93, "lf-big-test-512x380");
  v94 = 0;
  v96 = 0;
  v95 = 0;
  v14 = operator new(0x14uLL);
  v94 = v14;
  v96 = (char *)(v14 + 5);
  *(_OWORD *)v14 = xmmword_210A17B00;
  v14[4] = 1;
  v95 = (char *)(v14 + 5);
  v97 = 0;
  v98 = 0;
  sub_2109842CC(&v26, 0xCuLL, (uint64_t)v25);
  if (!v25[120])
  {
    v22 = sub_21096575C((uint64_t)v25);
    sub_21096579C(v22);
  }
  sub_2109657A8((uint64_t)__p, (uint64_t)v25);
  sub_210966108((uint64_t)v25);
  v15 = &v99;
  do
  {
    if (*((_BYTE *)v15 - 8))
    {
      v16 = *(v15 - 4);
      if (v16)
      {
        v17 = *(v15 - 3);
        v18 = (void *)*(v15 - 4);
        if (v17 != v16)
        {
          do
          {
            if (*(char *)(v17 - 1) < 0)
              operator delete(*(void **)(v17 - 24));
            v17 -= 24;
          }
          while (v17 != v16);
          v18 = (void *)*(v15 - 4);
        }
        *(v15 - 3) = v16;
        operator delete(v18);
      }
    }
    v19 = (void *)*(v15 - 7);
    if (v19)
    {
      *(v15 - 6) = (uint64_t)v19;
      operator delete(v19);
    }
    v20 = (void **)(v15 - 10);
    if (*((char *)v15 - 57) < 0)
      operator delete(*v20);
    v15 -= 10;
  }
  while (v20 != (void **)&v26);
  *(_QWORD *)a2 = 0x700000003;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0x6567616D69;
  *(_WORD *)(a2 + 39) = 5;
  *(_BYTE *)(a2 + 63) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 87) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  strcpy((char *)(a2 + 112), "global_descriptor");
  *(_BYTE *)(a2 + 135) = 17;
  *(_BYTE *)(a2 + 111) = 0;
  sub_2109E8F84((std::string *)(a2 + 136));
  sub_2109657A8(a2 + 160, (uint64_t)__p);
  *(_DWORD *)(a2 + 200) = -1082130432;
  *(_QWORD *)(a2 + 208) = 8;
  *(_BYTE *)(a2 + 216) = 0;
  *(_DWORD *)(a2 + 220) = a1;
  *(_BYTE *)(a2 + 224) = 0;
  *(_BYTE *)(a2 + 240) = 0;
  *(_QWORD *)(a2 + 248) = 1;
  *(_BYTE *)(a2 + 256) = 1;
  *(_BYTE *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  sub_21095A1BC((int)__p, (void **)__p[2]);
  v21 = __p[0];
  __p[0] = 0;
  if (v21)
    operator delete(v21);
}

void sub_21095ACF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  void **v7;
  va_list va;

  va_start(va, a6);
  if (*(char *)(v6 + 159) < 0)
  {
    operator delete(*v7);
    if ((*(char *)(v6 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v6 + 111) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((*(char *)(v6 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v6 + 112));
  if ((*(char *)(v6 + 111) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v6 + 87) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(v6 + 88));
  if ((*(char *)(v6 + 87) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v6 + 63) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v6 + 64));
  if ((*(char *)(v6 + 63) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v6 + 39) & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_13:
  operator delete(*(void **)(v6 + 40));
  if ((*(char *)(v6 + 39) & 0x80000000) == 0)
  {
LABEL_8:
    sub_210964AE0((uint64_t)va);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(*(void **)(v6 + 16));
  goto LABEL_8;
}

void sub_21095ADA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  char *v35;

  do
  {
    v35 -= 80;
    sub_2109656B0((uint64_t)v35);
  }
  while (v35 != &a35);
  _Unwind_Resume(a1);
}

void sub_21095AE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_210966108((uint64_t)&a19);
  sub_2109656B0(v38);
  sub_2109656B0(v37);
  sub_2109656B0(v36);
  sub_2109656B0(v42);
  sub_2109656B0(v41);
  sub_2109656B0(a12);
  sub_2109656B0(a10);
  sub_2109656B0(a11);
  sub_2109656B0(v35);
  sub_2109656B0(v40);
  sub_2109656B0(v39);
  sub_2109656B0((uint64_t)&a35);
  _Unwind_Resume(a1);
}

void sub_21095AEA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  BOOL v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  void *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  void *v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  void *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  __int128 v39;
  void *v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  void *v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  void **v58;
  uint64_t v59;
  void **v60;
  uint64_t v61;
  void *v62;
  char v63;
  char v64;
  void *v65;
  char v66;
  char v67;
  uint64_t (**v68)();
  uint64_t v69[15];
  __int128 __p;
  std::__shared_weak_count_vtbl *v71;
  char v72;
  __int128 v73;
  __int128 v74;
  std::__shared_weak_count_vtbl *v75;
  char v76;
  __int128 v77;
  void *v78;
  char v79;
  uint64_t (**v80)();
  char v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  uint64_t v84;
  std::__shared_weak_count *v85;
  std::__shared_weak_count *v86;
  std::__shared_weak_count *v87;
  std::__shared_weak_count *v88;
  std::__shared_weak_count *v89;
  uint64_t v90;
  void *v91;
  uint64_t (**v92)();
  char v93;
  unsigned __int8 v94;
  uint64_t v95;
  std::__shared_weak_count *v96;

  v3 = *(unsigned __int8 *)(a2 + 159);
  v4 = (char)v3;
  if ((v3 & 0x80u) != 0)
    v3 = *(_QWORD *)(a2 + 144);
  if (v3 < 7
    || (v4 >= 0 ? (v5 = a2 + 136) : (v5 = *(_QWORD *)(a2 + 136)),
        (v6 = v3 + v5, v7 = *(_DWORD *)(v6 - 7), v8 = *(_DWORD *)(v6 - 4), v7 == 1853186606)
      ? (v9 = v8 == 1701602414)
      : (v9 = 0),
        !v9))
  {
    LOBYTE(v62) = 0;
    v64 = 0;
    sub_210966EA0((uint64_t)&v68, a2, (uint64_t)&v62);
    sub_21098CEE4((uint64_t)&v68, (uint64_t)&v91);
    if (v93)
    {
      LOBYTE(v77) = 0;
      v79 = 0;
      v80 = &off_24CA79A00;
      v81 = v93;
      v10 = v96;
      v82 = v95;
      v83 = v96;
      if (!v96)
        goto LABEL_37;
      p_shared_owners = (unint64_t *)&v96->__shared_owners_;
      do
        v12 = __ldxr(p_shared_owners);
      while (__stxr(v12 + 1, p_shared_owners));
      v92 = &off_24CA79A00;
    }
    else
    {
      v13 = (std::__shared_weak_count *)operator new(0xC8uLL);
      v13->__shared_owners_ = 0;
      v14 = (unint64_t *)&v13->__shared_owners_;
      v13->__shared_weak_owners_ = 0;
      v13->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80FE0;
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
      sub_2108B3FF0((uint64_t)&v13[1].__shared_owners_, v69);
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA82960;
      sub_210957BA4((uint64_t)&v13[6].__shared_owners_, (uint64_t)&__p);
      v13[7].__shared_weak_owners_ = v73;
      LOWORD(v13[8].__vftable) = WORD4(v73);
      v13[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81330;
      v86 = v13 + 1;
      v87 = v13;
      v84 = 0;
      v85 = 0;
      v15 = v91;
      v91 = 0;
      v88 = v13 + 1;
      v89 = v13;
      do
        v16 = __ldxr(v14);
      while (__stxr(v16 + 1, v14));
      if (!v15
        && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
      {
        abort();
      }
      *(_QWORD *)&v77 = v13 + 1;
      *((_QWORD *)&v77 + 1) = v13;
      v88 = 0;
      v89 = 0;
      v78 = v15;
      v79 = 1;
      v80 = &off_24CA79A00;
      v81 = 0;
      v82 = v95;
      v83 = v96;
      if (v96)
      {
        v17 = (unint64_t *)&v96->__shared_owners_;
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }
      v90 = 0;
      do
        v19 = __ldaxr(v14);
      while (__stlxr(v19 - 1, v14));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
      v20 = v85;
      if (v85)
      {
        v21 = (unint64_t *)&v85->__shared_owners_;
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v10 = v96;
      v92 = &off_24CA79A00;
      if (!v96)
      {
LABEL_37:
        if (v91)
          (*(void (**)(void *))(*(_QWORD *)v91 + 8))(v91);
        if (v81)
        {
          std::operator+<char>();
          if ((v94 & 0x80u) == 0)
            v58 = &v91;
          else
            v58 = (void **)v91;
          if ((v94 & 0x80u) == 0)
            v59 = v94;
          else
            v59 = (uint64_t)v92;
          sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/include_private/LearnedFeatures/EndToEndExtraction/EndToEndModel.h", 488, (uint64_t)&unk_210A01421, 0, (uint64_t)v58, v59, (void (*)(void **))sub_2109EDDB4);
          if ((char)v94 < 0)
            operator delete(v91);
          abort();
        }
        v25 = operator new();
        *(_OWORD *)v25 = v77;
        v77 = 0uLL;
        v26 = v83;
        *(_QWORD *)(v25 + 16) = v78;
        *a1 = v25;
        v78 = 0;
        v80 = &off_24CA79A00;
        if (v26)
        {
          v27 = (unint64_t *)&v26->__shared_owners_;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 - 1, v27));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        if (v79)
        {
          v29 = v78;
          v78 = 0;
          if (v29)
            (*(void (**)(void *))(*(_QWORD *)v29 + 8))(v29);
          v30 = (std::__shared_weak_count *)*((_QWORD *)&v77 + 1);
          if (*((_QWORD *)&v77 + 1))
          {
            v31 = (unint64_t *)(*((_QWORD *)&v77 + 1) + 8);
            do
              v32 = __ldaxr(v31);
            while (__stlxr(v32 - 1, v31));
            if (!v32)
            {
              ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
              std::__shared_weak_count::__release_weak(v30);
            }
          }
        }
        v68 = &off_24CA82960;
        if (v72 && (_QWORD)__p)
        {
          *((_QWORD *)&__p + 1) = __p;
          operator delete((void *)__p);
        }
        v68 = (uint64_t (**)())off_24CA82AC0;
        sub_2108B55B4((uint64_t)v69);
        if (v64 && v63 < 0)
        {
          v33 = v62;
LABEL_59:
          operator delete(v33);
          return;
        }
        return;
      }
    }
    v23 = (unint64_t *)&v10->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    goto LABEL_37;
  }
  LOBYTE(v65) = 0;
  v67 = 0;
  sub_210967290((uint64_t)&v68, a2, (uint64_t)&v65);
  sub_21098D1D0((uint64_t)&v68, (uint64_t)&v91);
  if (v93)
  {
    LOBYTE(v77) = 0;
    v79 = 0;
    v80 = &off_24CA79A00;
    v81 = v93;
    v34 = v96;
    v82 = v95;
    v83 = v96;
    if (!v96)
      goto LABEL_97;
    v35 = (unint64_t *)&v96->__shared_owners_;
    do
      v36 = __ldxr(v35);
    while (__stxr(v36 + 1, v35));
    v92 = &off_24CA79A00;
    goto LABEL_93;
  }
  v37 = (std::__shared_weak_count *)operator new(0xE8uLL);
  v37->__shared_owners_ = 0;
  v38 = (unint64_t *)&v37->__shared_owners_;
  v37->__shared_weak_owners_ = 0;
  v37->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80F90;
  v37[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v37[1].__shared_owners_, v69);
  LOBYTE(v37[6].__shared_owners_) = 0;
  v37[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA829B8;
  LOBYTE(v37[7].__shared_owners_) = 0;
  if (v72)
  {
    if (SHIBYTE(v71) < 0)
    {
      sub_2108B314C(&v37[6].__shared_owners_, (void *)__p, *((unint64_t *)&__p + 1));
    }
    else
    {
      *(_OWORD *)&v37[6].__shared_owners_ = __p;
      v37[7].__vftable = v71;
    }
    LOBYTE(v37[7].__shared_owners_) = 1;
  }
  v39 = v73;
  LOBYTE(v37[8].__shared_owners_) = 0;
  *(_OWORD *)&v37[7].__shared_weak_owners_ = v39;
  LOBYTE(v37[9].__shared_owners_) = 0;
  if (v76)
  {
    if (SHIBYTE(v75) < 0)
    {
      sub_2108B314C(&v37[8].__shared_owners_, (void *)v74, *((unint64_t *)&v74 + 1));
    }
    else
    {
      *(_OWORD *)&v37[8].__shared_owners_ = v74;
      v37[9].__vftable = v75;
    }
    LOBYTE(v37[9].__shared_owners_) = 1;
  }
  v37[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA81358;
  v86 = v37 + 1;
  v87 = v37;
  v84 = 0;
  v85 = 0;
  v40 = v91;
  v91 = 0;
  v88 = v37 + 1;
  v89 = v37;
  do
    v41 = __ldxr(v38);
  while (__stxr(v41 + 1, v38));
  if (!v40
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  *(_QWORD *)&v77 = v37 + 1;
  *((_QWORD *)&v77 + 1) = v37;
  v88 = 0;
  v89 = 0;
  v78 = v40;
  v79 = 1;
  v80 = &off_24CA79A00;
  v81 = 0;
  v82 = v95;
  v83 = v96;
  if (v96)
  {
    v42 = (unint64_t *)&v96->__shared_owners_;
    do
      v43 = __ldxr(v42);
    while (__stxr(v43 + 1, v42));
  }
  v90 = 0;
  do
    v44 = __ldaxr(v38);
  while (__stlxr(v44 - 1, v38));
  if (!v44)
  {
    ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
    std::__shared_weak_count::__release_weak(v37);
  }
  v45 = v85;
  if (v85)
  {
    v46 = (unint64_t *)&v85->__shared_owners_;
    do
      v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
    }
  }
  v34 = v96;
  v92 = &off_24CA79A00;
  if (v96)
  {
LABEL_93:
    v48 = (unint64_t *)&v34->__shared_owners_;
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
LABEL_97:
  if (v91)
    (*(void (**)(void *))(*(_QWORD *)v91 + 8))(v91);
  if (v81)
  {
    std::operator+<char>();
    if ((v94 & 0x80u) == 0)
      v60 = &v91;
    else
      v60 = (void **)v91;
    if ((v94 & 0x80u) == 0)
      v61 = v94;
    else
      v61 = (uint64_t)v92;
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/include_private/LearnedFeatures/EndToEndExtraction/EndToEndModel.h", 488, (uint64_t)&unk_210A01421, 0, (uint64_t)v60, v61, (void (*)(void **))sub_2109EDDB4);
    if ((char)v94 < 0)
      operator delete(v91);
    abort();
  }
  v50 = operator new();
  *(_OWORD *)v50 = v77;
  v77 = 0uLL;
  v51 = v83;
  *(_QWORD *)(v50 + 16) = v78;
  *a1 = v50;
  v78 = 0;
  v80 = &off_24CA79A00;
  if (v51)
  {
    v52 = (unint64_t *)&v51->__shared_owners_;
    do
      v53 = __ldaxr(v52);
    while (__stlxr(v53 - 1, v52));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
  }
  if (v79)
  {
    v54 = v78;
    v78 = 0;
    if (v54)
      (*(void (**)(void *))(*(_QWORD *)v54 + 8))(v54);
    v55 = (std::__shared_weak_count *)*((_QWORD *)&v77 + 1);
    if (*((_QWORD *)&v77 + 1))
    {
      v56 = (unint64_t *)(*((_QWORD *)&v77 + 1) + 8);
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
  }
  v68 = off_24CA829B8;
  if (v76 && SHIBYTE(v75) < 0)
    operator delete((void *)v74);
  if (v72 && SHIBYTE(v71) < 0)
    operator delete((void *)__p);
  v68 = (uint64_t (**)())off_24CA82AC0;
  sub_2108B55B4((uint64_t)v69);
  if (v67 && v66 < 0)
  {
    v33 = v65;
    goto LABEL_59;
  }
}

void sub_21095B760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void **v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v34;

  if (*(_BYTE *)(v26 + 224) && *(char *)(v26 + 223) < 0)
    operator delete(*v29);
  if (*(_BYTE *)(v26 + 176) && *(char *)(v26 + 175) < 0)
    operator delete(*v28);
  *v31 = v30;
  sub_2108B55B4(v27);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v26);
  operator delete(v34);
  sub_210957AC8((uint64_t *)(v32 - 128));
  sub_21096760C((uint64_t)&a24);
  if (a22)
  {
    if (a21 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_21095B908(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *(std::__shared_weak_count **)(v2 + 8);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    MEMORY[0x212BCC6FC](v2, 0x60C40CE5A77A8);
  }
  return a1;
}

_QWORD *sub_21095B9A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *a1 = &off_24CA80C80;
  v2 = a1[36];
  a1[36] = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *(std::__shared_weak_count **)(v2 + 8);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    MEMORY[0x212BCC6FC](v2, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  return a1;
}

void sub_21095BA54(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *a1 = &off_24CA80C80;
  v2 = a1[36];
  a1[36] = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *(std::__shared_weak_count **)(v2 + 8);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    MEMORY[0x212BCC6FC](v2, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21095BB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2108B3FF0((uint64_t)&v3, (uint64_t *)(**(_QWORD **)(a1 + 288) + 8));
  v1 = v3;
  sub_2108B55B4((uint64_t)&v3);
  return v1;
}

BOOL sub_21095BB60(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  int v4;
  char *v5;
  _QWORD *v6;
  void **v7;
  void **v8;
  void *v9;
  void *v11;
  void *v12;
  char *v13;
  void *__p;
  void **v15;
  char v16;

  v3 = a1 + 21;
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 40))(a1);
  v5 = (char *)operator new(0x14uLL);
  v12 = v5 + 20;
  v13 = v5 + 20;
  *(_DWORD *)v5 = 1;
  *(_QWORD *)(v5 + 4) = *a2;
  *((_DWORD *)v5 + 3) = 1;
  *((_DWORD *)v5 + 4) = v4;
  v11 = v5;
  LOBYTE(__p) = 0;
  v16 = 0;
  v6 = sub_210988F20(v3, (unint64_t)&v11);
  if (v16)
  {
    v7 = (void **)__p;
    if (__p)
    {
      v8 = v15;
      v9 = __p;
      if (v15 != __p)
      {
        do
        {
          if (*((char *)v8 - 1) < 0)
            operator delete(*(v8 - 3));
          v8 -= 3;
        }
        while (v8 != v7);
        v9 = __p;
      }
      v15 = v7;
      operator delete(v9);
    }
  }
  if (v11)
  {
    v12 = v11;
    operator delete(v11);
  }
  return v6 != 0;
}

void sub_21095BC48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_21095BC5C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21095BC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(_QWORD *)(a1 + 24);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = *(void **)(a1 + 24);
      if (v3 != v2)
      {
        do
        {
          if (*(char *)(v3 - 1) < 0)
            operator delete(*(void **)(v3 - 24));
          v3 -= 24;
        }
        while (v3 != v2);
        v4 = *(void **)(a1 + 24);
      }
      *(_QWORD *)(a1 + 32) = v2;
      operator delete(v4);
    }
  }
  v5 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v5;
    operator delete(v5);
  }
  return a1;
}

void sub_21095BCE4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  int v7;
  char *v8;
  _QWORD *v9;
  void **v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  char *v31;
  char *v32;
  void *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  _QWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  int v52;
  __int16 v53;
  unint64_t v54;
  int v55;
  unint64_t *v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void *v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  int v66;
  const std::string::value_type *v67;
  std::string::size_type v68;
  std::string *v69;
  __int128 v70;
  void **v71;
  uint64_t v72;
  _BYTE v73[32];
  void *v74[2];
  int v75;
  uint64_t (**v76)();
  uint64_t v77;
  std::__shared_weak_count *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  __int16 v83;
  char v84;
  int v85;
  void *v86;
  char *v87;
  uint64_t v88;
  std::string v89;
  void *v90[2];
  std::__shared_weak_count *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  __int16 v96;
  uint64_t (**v97)();
  char v98;
  std::__shared_weak_count *v99;
  __int128 __dst;
  uint64_t v101;

  v6 = a1 + 21;
  v7 = (*(uint64_t (**)(_QWORD *))(*a1 + 40))(a1);
  v8 = (char *)operator new(0x14uLL);
  *(_QWORD *)&v73[8] = v8 + 20;
  *(_QWORD *)&v73[16] = v8 + 20;
  *(_DWORD *)v8 = 1;
  *(_QWORD *)(v8 + 4) = *(_QWORD *)(a2 + 32);
  *((_DWORD *)v8 + 3) = 1;
  *((_DWORD *)v8 + 4) = v7;
  *(_QWORD *)v73 = v8;
  v73[24] = 0;
  LOBYTE(v75) = 0;
  v9 = sub_210988F20(v6, (unint64_t)v73);
  if (!v9)
    sub_2108B307C("unordered_map::at: key not found");
  if (*((char *)v9 + 95) < 0)
  {
    sub_2108B314C(&__dst, (void *)v9[9], v9[10]);
  }
  else
  {
    __dst = *(_OWORD *)(v9 + 9);
    v101 = v9[11];
  }
  if ((_BYTE)v75)
  {
    v10 = *(void ***)&v73[24];
    if (*(_QWORD *)&v73[24])
    {
      v11 = (void **)v74[0];
      v12 = *(void **)&v73[24];
      if (v74[0] != *(void **)&v73[24])
      {
        do
        {
          if (*((char *)v11 - 1) < 0)
            operator delete(*(v11 - 3));
          v11 -= 3;
        }
        while (v11 != v10);
        v12 = *(void **)&v73[24];
      }
      v74[0] = v10;
      operator delete(v12);
    }
  }
  if (*(_QWORD *)v73)
  {
    *(_QWORD *)&v73[8] = *(_QWORD *)v73;
    operator delete(*(void **)v73);
  }
  v13 = a1[36];
  *(_QWORD *)v73 = off_24CA82900;
  if (SHIBYTE(v101) < 0)
  {
    sub_2108B314C(&v73[8], (void *)__dst, *((unint64_t *)&__dst + 1));
  }
  else
  {
    *(_OWORD *)&v73[8] = __dst;
    *(_QWORD *)&v73[24] = v101;
  }
  (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, _BYTE *))(**(_QWORD **)(v13 + 16) + 48))(&v97, *(_QWORD *)(v13 + 16), v73);
  *(_QWORD *)v73 = off_24CA82900;
  if ((v73[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v73[8]);
    if (!v98)
      goto LABEL_24;
  }
  else if (!v98)
  {
    goto LABEL_24;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 188, (uint64_t)"ret_config == kml::MLResultCode::NoError", 40, (uint64_t)"Unable to set model configuration", 33, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_24:
  v14 = a1[36];
  v90[0] = &off_24CA79890;
  v15 = *(void **)(a2 + 8);
  v16 = *(std::__shared_weak_count **)(a2 + 16);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    v19 = *(_DWORD *)(a2 + 44);
    v21 = *(_QWORD *)(a2 + 24);
    v20 = *(_QWORD *)(a2 + 32);
    v22 = *(_WORD *)(a2 + 48);
    do
      v23 = __ldxr(p_shared_owners);
    while (__stxr(v23 + 1, p_shared_owners));
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
  }
  else
  {
    v19 = *(_DWORD *)(a2 + 44);
    v21 = *(_QWORD *)(a2 + 24);
    v20 = *(_QWORD *)(a2 + 32);
    v22 = *(_WORD *)(a2 + 48);
  }
  v90[1] = v15;
  v91 = v16;
  v92 = v20;
  LODWORD(v93) = v19;
  v94 = v21;
  v95 = 1;
  v96 = v22;
  if (v16)
  {
    v25 = (unint64_t *)&v16->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v27 = __ldaxr(v25);
    while (__stlxr(v27 - 1, v25));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2109A96A8(*(_QWORD *)(v14 + 16), (uint64_t)v90, 0, 0, (uint64_t)v73);
  v28 = v91;
  if (v91)
  {
    v29 = (unint64_t *)&v91->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v73[8])
  {
    sub_21095C620((uint64_t *)&v89, "Error:");
    v66 = *(char *)(*(_QWORD *)&v73[16] + 23);
    if (v66 >= 0)
      v67 = *(const std::string::value_type **)&v73[16];
    else
      v67 = **(const std::string::value_type ***)&v73[16];
    if (v66 >= 0)
      v68 = *(unsigned __int8 *)(*(_QWORD *)&v73[16] + 23);
    else
      v68 = *(_QWORD *)(*(_QWORD *)&v73[16] + 8);
    v69 = std::string::append(&v89, v67, v68);
    v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
    v91 = (std::__shared_weak_count *)v69->__r_.__value_.__r.__words[2];
    *(_OWORD *)v90 = v70;
    v69->__r_.__value_.__l.__size_ = 0;
    v69->__r_.__value_.__r.__words[2] = 0;
    v69->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v91) >= 0)
      v71 = v90;
    else
      v71 = (void **)v90[0];
    if (SHIBYTE(v91) >= 0)
      v72 = HIBYTE(v91);
    else
      v72 = (uint64_t)v90[1];
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 191, (uint64_t)&unk_210A01421, 0, (uint64_t)v71, v72, (void (*)(void **))sub_2109EDDB4);
    if (SHIBYTE(v91) < 0)
      operator delete(v90[0]);
    if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v89.__r_.__value_.__l.__data_);
    goto LABEL_126;
  }
  if ((_BYTE)v76)
    goto LABEL_49;
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 193, (uint64_t)"ret.outputs.has_value()", 23, (uint64_t)"No error detected but output empty.", 35, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_126:
    abort();
  }
  if (!(_BYTE)v76)
    sub_2108B1AA4();
LABEL_49:
  v86 = 0;
  v87 = 0;
  v88 = 0;
  sub_210964FB4(&v86, (uint64_t)v74[0], (uint64_t)v74[1], 0xEEEEEEEEEEEEEEEFLL * (((char *)v74[1] - (char *)v74[0]) >> 3));
  if ((_BYTE)v76)
  {
    v31 = (char *)v74[0];
    if (v74[0])
    {
      v32 = (char *)v74[1];
      v33 = v74[0];
      if (v74[1] != v74[0])
      {
        do
        {
          if (*(v32 - 8))
          {
            v34 = (std::__shared_weak_count *)*((_QWORD *)v32 - 6);
            if (v34)
            {
              v35 = (unint64_t *)&v34->__shared_owners_;
              do
                v36 = __ldaxr(v35);
              while (__stlxr(v36 - 1, v35));
              if (!v36)
              {
                ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
                std::__shared_weak_count::__release_weak(v34);
              }
            }
          }
          v32 -= 120;
        }
        while (v32 != v31);
        v33 = v74[0];
      }
      v74[1] = v31;
      operator delete(v33);
    }
  }
  *(_QWORD *)v73 = &off_24CA79A00;
  v37 = *(std::__shared_weak_count **)&v73[24];
  if (!*(_QWORD *)&v73[24])
    goto LABEL_66;
  v38 = (unint64_t *)(*(_QWORD *)&v73[24] + 8);
  do
    v39 = __ldaxr(v38);
  while (__stlxr(v39 - 1, v38));
  if (!v39)
  {
    ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
    std::__shared_weak_count::__release_weak(v37);
    v97 = &off_24CA79A00;
    v40 = v99;
    if (!v99)
      goto LABEL_70;
  }
  else
  {
LABEL_66:
    v97 = &off_24CA79A00;
    v40 = v99;
    if (!v99)
      goto LABEL_70;
  }
  v41 = (unint64_t *)&v40->__shared_owners_;
  do
    v42 = __ldaxr(v41);
  while (__stlxr(v42 - 1, v41));
  if (v42)
  {
LABEL_70:
    if ((SHIBYTE(v101) & 0x80000000) == 0)
      goto LABEL_72;
    goto LABEL_71;
  }
  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
  std::__shared_weak_count::__release_weak(v40);
  if (SHIBYTE(v101) < 0)
LABEL_71:
    operator delete((void *)__dst);
LABEL_72:
  v43 = v86;
  v45 = *((_OWORD *)v86 + 1);
  v44 = *((_OWORD *)v86 + 2);
  v46 = *(_OWORD *)v86;
  v75 = *((_DWORD *)v86 + 12);
  *(_OWORD *)&v73[16] = v45;
  *(_OWORD *)v74 = v44;
  *(_OWORD *)v73 = v46;
  LOBYTE(v76) = 0;
  v84 = 0;
  if (*((_BYTE *)v86 + 112))
  {
    v76 = &off_24CA79890;
    v47 = *((_QWORD *)v86 + 8);
    v48 = (std::__shared_weak_count *)*((_QWORD *)v86 + 9);
    if (v48)
    {
      v49 = (unint64_t *)&v48->__shared_owners_;
      do
        v50 = __ldxr(v49);
      while (__stxr(v50 + 1, v49));
      v51 = v43[12];
      v52 = *((_DWORD *)v43 + 26);
      v53 = *((_WORD *)v43 + 54);
      do
        v54 = __ldxr(v49);
      while (__stxr(v54 + 1, v49));
    }
    else
    {
      v51 = *((_QWORD *)v86 + 12);
      v52 = *((_DWORD *)v86 + 26);
      v53 = *((_WORD *)v86 + 54);
    }
    v77 = v47;
    v78 = v48;
    v55 = *((_DWORD *)v43 + 22);
    v79 = v43[10];
    v80 = v55;
    v81 = v51;
    v82 = v52;
    v83 = v53;
    if (v48)
    {
      v56 = (unint64_t *)&v48->__shared_owners_;
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
        std::__shared_weak_count::__release_weak(v48);
      }
    }
    v84 = 1;
  }
  v85 = 2;
  sub_21096D844((__int128 *)v73, 1uLL, (uint64_t)v90);
  if (v85 != -1)
    ((void (*)(uint64_t (***)(), _BYTE *))off_24CA81020[v85])(&v97, v73);
  *(_QWORD *)(a3 + 56) = 0;
  *(_DWORD *)(a3 + 64) = 0;
  *(_BYTE *)(a3 + 72) = 0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_DWORD *)(a3 + 48) = 0;
  *(_DWORD *)(a3 + 96) = -1;
  v58 = v92;
  if ((_DWORD)v92 == -1)
  {
    *(_QWORD *)(a3 + 104) = v93;
    *(_DWORD *)(a3 + 112) = v94;
    v60 = (char *)v86;
    if (!v86)
      return;
    goto LABEL_96;
  }
  ((void (*)(_BYTE *, uint64_t, void **))off_24CA82338[v92])(v73, a3 + 72, v90);
  *(_DWORD *)(a3 + 96) = v58;
  v59 = v92;
  *(_QWORD *)(a3 + 104) = v93;
  *(_DWORD *)(a3 + 112) = v94;
  if ((_DWORD)v59 != -1)
    ((void (*)(_BYTE *, void **))off_24CA81038[v59])(v73, v90);
  v60 = (char *)v86;
  if (v86)
  {
LABEL_96:
    v61 = v87;
    v62 = v60;
    if (v87 != v60)
    {
      do
      {
        if (*(v61 - 8))
        {
          v63 = (std::__shared_weak_count *)*((_QWORD *)v61 - 6);
          if (v63)
          {
            v64 = (unint64_t *)&v63->__shared_owners_;
            do
              v65 = __ldaxr(v64);
            while (__stlxr(v65 - 1, v64));
            if (!v65)
            {
              ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
              std::__shared_weak_count::__release_weak(v63);
            }
          }
        }
        v61 -= 120;
      }
      while (v61 != v60);
      v62 = v86;
    }
    v87 = v60;
    operator delete(v62);
  }
}

void sub_21095C494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (a42 < 0)
    operator delete(__p);
  if (a36 < 0)
    operator delete(a31);
  sub_2108B77C8((uint64_t)&a9);
  sub_2108AB288((_QWORD *)(v42 - 112));
  if (*(char *)(v42 - 57) < 0)
    operator delete(*(void **)(v42 - 80));
  _Unwind_Resume(a1);
}

void sub_21095C558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21095BC5C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21095C56C()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 168, (uint64_t)&unk_210A01421, 0, (uint64_t)"ExtractLocalGlobalDescriptors is not implemented for GlobalFeat", 63, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21095C5A8()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 173, (uint64_t)&unk_210A01421, 0, (uint64_t)"DetectKeypoints is not implemented for GlobalFeat", 49, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21095C5E4()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 179, (uint64_t)&unk_210A01421, 0, (uint64_t)"ExtractDescriptors is not implemented for GlobalFeat", 52, (void (*)(void **))sub_2109EDDB4);
  abort();
}

uint64_t sub_21095C620(char *__s)
{
  uint64_t result;
  _DWORD v2[6];
  int v3;
  char v4;
  char *v5;

  v3 = 0;
  sub_210966328(v2, __s);
  if (v3 == -1)
    sub_2108B9060();
  v5 = &v4;
  result = ((uint64_t (*)(char **, _DWORD *))off_24CA810C0[v3])(&v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(char **, _DWORD *))off_24CA810A8[v3])(&v5, v2);
  return result;
}

void sub_21095C6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108B9008((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21095C6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2108B9008((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21095C6DC(int a1@<W0>, uint64_t a2@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  _OWORD *v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  _OWORD *v16;
  __int128 v17;
  _OWORD *v18;
  int v19;
  __int128 v20;
  _OWORD *v21;
  __int128 v22;
  _OWORD *v23;
  __int128 v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void **v32;
  _BOOL4 v33;
  _BOOL4 v34;
  BOOL v35;
  int v36;
  char *v37;
  void *v38;
  uint64_t v39;
  void *v40[5];
  _BYTE v41[128];
  void *__p[2];
  char v43;
  _OWORD *v44;
  char *v45;
  char *v46;
  char v47;
  char v48;
  char v49[24];
  _OWORD *v50;
  char *v51;
  char *v52;
  char v53;
  char v54;
  char v55[24];
  _OWORD *v56;
  char *v57;
  char *v58;
  char v59;
  char v60;
  char v61[24];
  _OWORD *v62;
  char *v63;
  char *v64;
  char v65;
  char v66;
  char v67[23];
  _BYTE v68[9];
  char *v69;
  char *v70;
  char v71;
  char v72;
  char v73[23];
  _BYTE v74[9];
  char *v75;
  char *v76;
  char v77;
  char v78;
  char v79[23];
  _BYTE v80[9];
  char *v81;
  char *v82;
  char v83;
  char v84;
  char v85[23];
  _BYTE v86[9];
  char *v87;
  char *v88;
  char v89;
  char v90;
  char v91[23];
  _BYTE v92[9];
  char *v93;
  char *v94;
  char v95;
  char v96;
  char v97[23];
  _BYTE v98[9];
  char *v99;
  char *v100;
  char v101;
  char v102;
  char v103[24];
  _OWORD *v104;
  char *v105;
  char *v106;
  char v107;
  char v108;
  uint64_t v109;

  v109 = *MEMORY[0x24BDAC8D0];
  v43 = 10;
  strcpy((char *)__p, "lf-640x640");
  v4 = operator new(0x28uLL);
  v45 = (char *)v4 + 40;
  v46 = (char *)v4 + 40;
  *(_QWORD *)&v5 = 0x100000001;
  *((_QWORD *)&v5 + 1) = 0x100000001;
  *v4 = xmmword_210A17AF0;
  v4[1] = v5;
  *((_QWORD *)v4 + 4) = 0x40000000006;
  v44 = v4;
  v47 = 0;
  v48 = 0;
  v49[23] = 10;
  strcpy(v49, "lf-640x480");
  v6 = operator new(0x28uLL);
  v51 = (char *)v6 + 40;
  v52 = (char *)v6 + 40;
  *(_QWORD *)&v7 = 0x100000001;
  *((_QWORD *)&v7 + 1) = 0x100000001;
  *v6 = xmmword_210A17A60;
  v6[1] = v7;
  *((_QWORD *)v6 + 4) = 0x40000000006;
  v50 = v6;
  v53 = 0;
  v54 = 0;
  v55[23] = 10;
  strcpy(v55, "lf-640x360");
  v8 = operator new(0x28uLL);
  v57 = (char *)v8 + 40;
  v58 = (char *)v8 + 40;
  *(_QWORD *)&v9 = 0x100000001;
  *((_QWORD *)&v9 + 1) = 0x100000001;
  *v8 = xmmword_210A17A70;
  v8[1] = v9;
  *((_QWORD *)v8 + 4) = 0x40000000006;
  v56 = v8;
  v59 = 0;
  v60 = 0;
  v61[23] = 10;
  strcpy(v61, "lf-480x480");
  v10 = operator new(0x28uLL);
  v63 = (char *)v10 + 40;
  v64 = (char *)v10 + 40;
  *(_QWORD *)&v11 = 0x100000001;
  *((_QWORD *)&v11 + 1) = 0x100000001;
  *v10 = xmmword_210A17A80;
  v10[1] = v11;
  *((_QWORD *)v10 + 4) = 0x40000000006;
  v62 = v10;
  v65 = 0;
  v66 = 0;
  strcpy(v68, "\n");
  strcpy(v67, "lf-480x360");
  v70 = 0;
  v68[2] = 0;
  *(_WORD *)&v68[3] = 0;
  *(_DWORD *)&v68[5] = 0;
  v69 = 0;
  v12 = operator new(0x28uLL);
  v70 = (char *)v12 + 40;
  *(_QWORD *)&v13 = 0x100000001;
  *((_QWORD *)&v13 + 1) = 0x100000001;
  *v12 = xmmword_210A17A90;
  v12[1] = v13;
  *((_QWORD *)v12 + 4) = 0x40000000006;
  *(_QWORD *)&v68[1] = v12;
  v69 = (char *)v12 + 40;
  v71 = 0;
  v72 = 0;
  strcpy(v74, "\n");
  strcpy(v73, "lf-480x270");
  v76 = 0;
  v74[2] = 0;
  *(_WORD *)&v74[3] = 0;
  *(_DWORD *)&v74[5] = 0;
  v75 = 0;
  v14 = operator new(0x28uLL);
  v76 = (char *)v14 + 40;
  *(_QWORD *)&v15 = 0x100000001;
  *((_QWORD *)&v15 + 1) = 0x100000001;
  *v14 = xmmword_210A17AA0;
  v14[1] = v15;
  *((_QWORD *)v14 + 4) = 0x40000000006;
  *(_QWORD *)&v74[1] = v14;
  v75 = (char *)v14 + 40;
  v77 = 0;
  v78 = 0;
  strcpy(v80, "\n");
  strcpy(v79, "lf-360x270");
  v82 = 0;
  v80[2] = 0;
  *(_WORD *)&v80[3] = 0;
  *(_DWORD *)&v80[5] = 0;
  v81 = 0;
  v16 = operator new(0x28uLL);
  v82 = (char *)v16 + 40;
  *(_QWORD *)&v17 = 0x100000001;
  *((_QWORD *)&v17 + 1) = 0x100000001;
  *v16 = xmmword_210A17AB0;
  v16[1] = v17;
  *((_QWORD *)v16 + 4) = 0x40000000006;
  *(_QWORD *)&v80[1] = v16;
  v81 = (char *)v16 + 40;
  v83 = 0;
  v84 = 0;
  strcpy(v86, "\n");
  strcpy(v85, "lf-320x320");
  v86[2] = 0;
  *(_WORD *)&v86[3] = 0;
  *(_DWORD *)&v86[5] = 0;
  v88 = 0;
  v87 = 0;
  v18 = operator new(0x28uLL);
  v19 = a1;
  *(_QWORD *)&v86[1] = v18;
  v88 = (char *)v18 + 40;
  *(_QWORD *)&v20 = 0x100000001;
  *((_QWORD *)&v20 + 1) = 0x100000001;
  *v18 = xmmword_210A17AE0;
  v18[1] = v20;
  *((_QWORD *)v18 + 4) = 0x40000000006;
  v87 = (char *)v18 + 40;
  v89 = 0;
  v90 = 0;
  strcpy(v92, "\n");
  strcpy(v91, "lf-320x240");
  v92[2] = 0;
  *(_WORD *)&v92[3] = 0;
  *(_DWORD *)&v92[5] = 0;
  v94 = 0;
  v93 = 0;
  v21 = operator new(0x28uLL);
  *(_QWORD *)&v92[1] = v21;
  v94 = (char *)v21 + 40;
  *(_QWORD *)&v22 = 0x100000001;
  *((_QWORD *)&v22 + 1) = 0x100000001;
  *v21 = xmmword_210A17AD0;
  v21[1] = v22;
  *((_QWORD *)v21 + 4) = 0x40000000006;
  v93 = (char *)v21 + 40;
  v95 = 0;
  v96 = 0;
  strcpy(v98, "\n");
  strcpy(v97, "lf-320x180");
  v98[2] = 0;
  *(_WORD *)&v98[3] = 0;
  *(_DWORD *)&v98[5] = 0;
  v100 = 0;
  v99 = 0;
  v23 = operator new(0x28uLL);
  *(_QWORD *)&v98[1] = v23;
  v100 = (char *)v23 + 40;
  *(_QWORD *)&v24 = 0x100000001;
  *((_QWORD *)&v24 + 1) = 0x100000001;
  *v23 = xmmword_210A17AC0;
  v23[1] = v24;
  *((_QWORD *)v23 + 4) = 0x40000000006;
  v99 = (char *)v23 + 40;
  v101 = 0;
  v102 = 0;
  v103[23] = 19;
  strcpy(v103, "lf-big-test-512x380");
  v104 = 0;
  v106 = 0;
  v105 = 0;
  v25 = operator new(0x28uLL);
  v104 = v25;
  v106 = (char *)v25 + 40;
  *(_QWORD *)&v26 = 0x100000001;
  *((_QWORD *)&v26 + 1) = 0x100000001;
  *v25 = xmmword_210A17B00;
  v25[1] = v26;
  *((_QWORD *)v25 + 4) = 0x40000000006;
  v105 = (char *)v25 + 40;
  v107 = 0;
  v108 = 0;
  sub_2109842CC((__int128 *)__p, 0xBuLL, (uint64_t)v41);
  if (!v41[120])
  {
    v39 = sub_21096575C((uint64_t)v41);
    sub_21096579C(v39);
  }
  sub_2109657A8((uint64_t)v40, (uint64_t)v41);
  sub_210966108((uint64_t)v41);
  v27 = &v109;
  do
  {
    if (*((_BYTE *)v27 - 8))
    {
      v28 = *(v27 - 4);
      if (v28)
      {
        v29 = *(v27 - 3);
        v30 = (void *)*(v27 - 4);
        if (v29 != v28)
        {
          do
          {
            if (*(char *)(v29 - 1) < 0)
              operator delete(*(void **)(v29 - 24));
            v29 -= 24;
          }
          while (v29 != v28);
          v30 = (void *)*(v27 - 4);
        }
        *(v27 - 3) = v28;
        operator delete(v30);
      }
    }
    v31 = (void *)*(v27 - 7);
    if (v31)
    {
      *(v27 - 6) = (uint64_t)v31;
      operator delete(v31);
    }
    v32 = (void **)(v27 - 10);
    if (*((char *)v27 - 57) < 0)
      operator delete(*v32);
    v27 -= 10;
  }
  while (v32 != __p);
  sub_2108A4A34(__p);
  v33 = sub_210997120((uint64_t)__p, 0xEu);
  if ((_BYTE)v44 && v43 < 0)
    operator delete(__p[0]);
  v34 = v19 == 0;
  v35 = v34 && v33;
  if (v34 && v33)
    v36 = 0;
  else
    v36 = 3;
  v37 = (char *)operator new(0x20uLL);
  strcpy(v37, "output_batch_size_1024_0_0");
  *(_QWORD *)a2 = 0x700000003;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0x6D695F7475706E69;
  *(_QWORD *)(a2 + 24) = 6645601;
  *(_BYTE *)(a2 + 39) = 11;
  *(_QWORD *)(a2 + 40) = 0x746E696F7079656BLL;
  *(_QWORD *)(a2 + 48) = 115;
  *(_BYTE *)(a2 + 63) = 9;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 87) = 0;
  sub_2108B314C((_BYTE *)(a2 + 88), v37, 0x1AuLL);
  strcpy((char *)(a2 + 112), "global_descriptor");
  *(_BYTE *)(a2 + 135) = 17;
  sub_2109E924C(v35, (std::string *)(a2 + 136));
  sub_2109657A8(a2 + 160, (uint64_t)v40);
  *(_DWORD *)(a2 + 200) = -1082130432;
  *(_QWORD *)(a2 + 208) = 8;
  *(_BYTE *)(a2 + 216) = 0;
  *(_DWORD *)(a2 + 220) = v36;
  *(_BYTE *)(a2 + 224) = 0;
  *(_BYTE *)(a2 + 240) = 0;
  *(_QWORD *)(a2 + 248) = 1024;
  *(_BYTE *)(a2 + 256) = 1;
  *(_BYTE *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 242;
  operator delete(v37);
  sub_21095A1BC((int)v40, (void **)v40[2]);
  v38 = v40[0];
  v40[0] = 0;
  if (v38)
    operator delete(v38);
}

void sub_21095CE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  void *v15;
  void **v16;
  void **v17;

  if (*(char *)(v14 + 159) < 0)
  {
    operator delete(*v17);
    if (*(char *)(v14 + 135) < 0)
    {
LABEL_5:
      operator delete(*(void **)(v14 + 112));
      if ((*(char *)(v14 + 111) & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_12;
    }
  }
  else if (*(char *)(v14 + 135) < 0)
  {
    goto LABEL_5;
  }
  if ((*(char *)(v14 + 111) & 0x80000000) == 0)
  {
LABEL_6:
    if (*(char *)(v14 + 87) < 0)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*v16);
  if (*(char *)(v14 + 87) < 0)
  {
LABEL_7:
    operator delete(*(void **)(v14 + 64));
    if ((*(char *)(v14 + 63) & 0x80000000) == 0)
      goto LABEL_8;
    goto LABEL_14;
  }
LABEL_13:
  if ((*(char *)(v14 + 63) & 0x80000000) == 0)
  {
LABEL_8:
    if ((*(char *)(v14 + 39) & 0x80000000) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
LABEL_14:
  operator delete(*(void **)(v14 + 40));
  if ((*(char *)(v14 + 39) & 0x80000000) == 0)
  {
LABEL_10:
    operator delete(v15);
    sub_210964AE0((uint64_t)&a14);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(*(void **)(v14 + 16));
  goto LABEL_10;
}

void sub_21095CECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41)
{
  sub_210964AE0((uint64_t)&a14);
  _Unwind_Resume(a1);
}

void sub_21095CF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  char *v35;

  do
  {
    v35 -= 80;
    sub_2109656B0((uint64_t)v35);
  }
  while (v35 != &a35);
  _Unwind_Resume(a1);
}

void sub_21095CF88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_21095CF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_210966108((uint64_t)&a19);
  sub_2109656B0(v37);
  sub_2109656B0(v36);
  sub_2109656B0(v41);
  sub_2109656B0(v40);
  sub_2109656B0(a13);
  sub_2109656B0(a11);
  sub_2109656B0(a12);
  sub_2109656B0(v35);
  sub_2109656B0(v39);
  sub_2109656B0(v38);
  sub_2109656B0((uint64_t)&a35);
  _Unwind_Resume(a1);
}

uint64_t sub_21095CFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v21;

  sub_21095AEA4(&v21, a2);
  sub_21095D12C(a1, (uint64_t *)a2, &v21);
  v4 = v21;
  v21 = 0;
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0;
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *(std::__shared_weak_count **)(v4 + 8);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    MEMORY[0x212BCC6FC](v4, 0x60C40CE5A77A8);
  }
  v9 = *(unsigned __int8 *)(a2 + 159);
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *(_QWORD *)(a2 + 144);
  if (v9 >= 7)
  {
    v14 = *(_QWORD *)(a2 + 136);
    v13 = a2 + 136;
    v12 = v14;
    if (v10 >= 0)
      v15 = v13;
    else
      v15 = v12;
    v16 = v9 + v15;
    v17 = *(_DWORD *)(v16 - 7);
    v18 = *(_DWORD *)(v16 - 4);
    v11 = v17 == 1853186606 && v18 == 1701602414;
  }
  else
  {
    v11 = 0;
  }
  *(_BYTE *)(a1 + 296) = v11;
  return a1;
}

void sub_21095D118(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_21095B908((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21095D12C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void (*v13)();
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  __int128 v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  _WORD *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (**v57)();
  _QWORD *v59;
  _DWORD v60[2];
  void (**v61)();
  __int128 v62;
  _BYTE v63[56];
  uint64_t v64;
  void (**v65)();
  std::__shared_weak_count *v66;
  _BYTE v67[24];
  unsigned int v68;
  __int128 v69;
  _QWORD v70[2];

  *(_QWORD *)a1 = &off_24CA80CE0;
  sub_210964D18(a1 + 8, a2);
  v5 = *a3;
  *a3 = 0;
  *(_QWORD *)(a1 + 288) = v5;
  *(_QWORD *)(a1 + 304) = &off_24CA810E8;
  v65 = (void (**)())&off_24CA811E0;
  sub_2108F2CD4((uint64_t)&v61);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA7B2C0;
  v8 = *(unsigned int *)&v63[16];
  *(_DWORD *)(v6 + 8) = v62;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    *(_OWORD *)(v6 + 48) = *(_OWORD *)&v63[24];
    *(_QWORD *)v6 = off_24CA7B6B0;
    v70[0] = v6;
  }
  else
  {
    ((void (*)(void (***)(), uint64_t, char *))off_24CA81208[v8])(&v65, v6 + 16, (char *)&v62 + 8);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = *(unsigned int *)&v63[16];
    *(_OWORD *)(v7 + 48) = *(_OWORD *)&v63[24];
    *(_QWORD *)v7 = off_24CA7B6B0;
    v70[0] = v7;
    v61 = off_24CA7B2C0;
    if ((_DWORD)v9 != -1)
      ((void (*)(void (***)(), char *))off_24CA7C080[v9])(&v65, (char *)&v62 + 8);
  }
  v61 = (void (**)())v7;
  v10 = (std::__shared_weak_count *)operator new();
  v10->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  v10->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA7C478;
  v59 = (_QWORD *)(a1 + 312);
  v10->__shared_weak_owners_ = 0;
  v10[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  v70[0] = 0;
  v61 = 0;
  *(_QWORD *)&v62 = 0;
  *(_QWORD *)(a1 + 312) = v7;
  *(_QWORD *)(a1 + 320) = v10;
  do
    v12 = __ldxr(p_shared_owners);
  while (__stxr(v12 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 328) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v65, v7, 3);
  v13 = v65[2];
  *(_OWORD *)(a1 + 336) = *(_OWORD *)v65;
  *(_QWORD *)(a1 + 352) = v13;
  v65 = 0;
  MEMORY[0x212BCC6FC]();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a1 + 336);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a1 + 344);
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v15 = (std::__shared_weak_count *)v62;
  if (!(_QWORD)v62)
    goto LABEL_15;
  v16 = (unint64_t *)(v62 + 8);
  do
    v17 = __ldaxr(v16);
  while (__stlxr(v17 - 1, v16));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
    v18 = v70[0];
    v70[0] = 0;
    if (!v18)
      goto LABEL_19;
  }
  else
  {
LABEL_15:
    v18 = v70[0];
    v70[0] = 0;
    if (!v18)
      goto LABEL_19;
  }
  *(_QWORD *)v18 = off_24CA7B2C0;
  v19 = *(unsigned int *)(v18 + 40);
  if ((_DWORD)v19 != -1)
    ((void (*)(void (***)(), uint64_t))off_24CA7C080[v19])(&v65, v18 + 16);
  *(_DWORD *)(v18 + 40) = -1;
  MEMORY[0x212BCC6FC](v18, 0x10A3C40A1F8E8FFLL);
LABEL_19:
  v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1);
  v60[0] = 6;
  v60[1] = v20;
  v61 = (void (**)())&off_24CA810E8;
  v70[0] = &off_24CA811E0;
  sub_2108F2DF4(v60, word_210A1B962, (uint64_t)&v65);
  v21 = operator new();
  v22 = v21;
  *(_QWORD *)v21 = off_24CA7B2C0;
  v23 = v68;
  *(_DWORD *)(v21 + 8) = (_DWORD)v66;
  *(_BYTE *)(v21 + 16) = 0;
  *(_DWORD *)(v21 + 40) = -1;
  if ((_DWORD)v23 == -1)
  {
    *(_OWORD *)(v21 + 48) = v69;
    *(_QWORD *)v21 = off_24CA7B6B0;
    v64 = v21;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_24CA81208[v23])(v70, v21 + 16, v67);
    *(_DWORD *)(v22 + 40) = v23;
    v24 = v68;
    *(_OWORD *)(v22 + 48) = v69;
    *(_QWORD *)v22 = off_24CA7B6B0;
    v64 = v22;
    v65 = off_24CA7B2C0;
    if ((_DWORD)v24 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_24CA7C080[v24])(v70, v67);
  }
  v65 = (void (**)())v22;
  v25 = (std::__shared_weak_count *)operator new();
  v25->__shared_owners_ = 0;
  v26 = (unint64_t *)&v25->__shared_owners_;
  v25->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA7C478;
  v25->__shared_weak_owners_ = 0;
  v25[1].__vftable = (std::__shared_weak_count_vtbl *)v22;
  v64 = 0;
  v65 = 0;
  v66 = 0;
  *(_QWORD *)&v62 = v22;
  *((_QWORD *)&v62 + 1) = v25;
  do
    v27 = __ldxr(v26);
  while (__stxr(v27 + 1, v26));
  *(_QWORD *)v63 = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v22 + 64))(v70, v22, 3);
  v28 = *(_QWORD *)(v70[0] + 16);
  *(_OWORD *)&v63[8] = *(_OWORD *)v70[0];
  *(_QWORD *)&v63[24] = v28;
  v70[0] = 0;
  MEMORY[0x212BCC6FC]();
  *(_QWORD *)&v63[32] = *(_QWORD *)&v63[8];
  *(_OWORD *)&v63[40] = *(_OWORD *)&v63[16];
  do
    v29 = __ldaxr(v26);
  while (__stlxr(v29 - 1, v26));
  if (!v29)
  {
    ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
    std::__shared_weak_count::__release_weak(v25);
  }
  v30 = v66;
  if (!v66)
    goto LABEL_33;
  v31 = (unint64_t *)&v66->__shared_owners_;
  do
    v32 = __ldaxr(v31);
  while (__stlxr(v32 - 1, v31));
  if (!v32)
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
    v33 = v64;
    v64 = 0;
    if (!v33)
      goto LABEL_37;
  }
  else
  {
LABEL_33:
    v33 = v64;
    v64 = 0;
    if (!v33)
      goto LABEL_37;
  }
  *(_QWORD *)v33 = off_24CA7B2C0;
  v34 = *(unsigned int *)(v33 + 40);
  if ((_DWORD)v34 != -1)
    ((void (*)(_QWORD *, uint64_t))off_24CA7C080[v34])(v70, v33 + 16);
  *(_DWORD *)(v33 + 40) = -1;
  MEMORY[0x212BCC6FC](v33, 0x10A3C40A1F8E8FFLL);
LABEL_37:
  v35 = v62;
  v62 = 0uLL;
  v36 = *(std::__shared_weak_count **)(a1 + 320);
  *(_OWORD *)v59 = v35;
  if (v36)
  {
    v37 = (unint64_t *)&v36->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  v39 = *(_OWORD *)&v63[16];
  *(_OWORD *)(a1 + 328) = *(_OWORD *)v63;
  *(_OWORD *)(a1 + 344) = v39;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)&v63[32];
  *(_QWORD *)(a1 + 376) = *(_QWORD *)&v63[48];
  v40 = (std::__shared_weak_count *)*((_QWORD *)&v62 + 1);
  if (*((_QWORD *)&v62 + 1))
  {
    v41 = (unint64_t *)(*((_QWORD *)&v62 + 1) + 8);
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
      v43 = *(_QWORD *)(a1 + 312);
      v44 = *(std::__shared_weak_count **)(a1 + 320);
      if (v44)
        goto LABEL_47;
LABEL_59:
      if (!v43)
        goto LABEL_60;
      goto LABEL_52;
    }
  }
  v43 = *(_QWORD *)(a1 + 312);
  v44 = *(std::__shared_weak_count **)(a1 + 320);
  if (!v44)
    goto LABEL_59;
LABEL_47:
  v45 = (unint64_t *)&v44->__shared_owners_;
  do
    v46 = __ldxr(v45);
  while (__stxr(v46 + 1, v45));
  do
    v47 = __ldaxr(v45);
  while (__stlxr(v47 - 1, v45));
  if (!v47)
  {
    ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
    std::__shared_weak_count::__release_weak(v44);
    if (!v43)
      goto LABEL_60;
LABEL_52:
    (*(void (**)(void (***__return_ptr)(), _QWORD, uint64_t))(*(_QWORD *)*v59 + 96))(&v61, *v59, 1);
    if (!*(_DWORD *)(a1 + 368))
      goto LABEL_70;
    goto LABEL_61;
  }
  if (v43)
    goto LABEL_52;
LABEL_60:
  v61 = 0;
  if (!*(_DWORD *)(a1 + 368))
    goto LABEL_70;
LABEL_61:
  v48 = *(_DWORD *)(a1 + 372);
  if (v48)
  {
    v49 = *(unsigned int *)(a1 + 376);
    v50 = *(_WORD **)(a1 + 336);
    v51 = v48 - 1;
    if (v48 == 1)
    {
      v52 = (2 * v49);
      v53 = (3 * v49);
      v54 = (4 * v49);
      v55 = (5 * v49);
    }
    else
    {
      v52 = (2 * v49);
      v53 = (3 * v49);
      v54 = (4 * v49);
      v55 = (5 * v49);
      v56 = 2 * *(unsigned int *)(a1 + 380);
      do
      {
        *v50 = 15360;
        v50[v49] = 0;
        v50[v52] = 0;
        v50[v53] = 0;
        v50[v54] = 15360;
        v50[v55] = 0;
        v50 = (_WORD *)((char *)v50 + v56);
        --v51;
      }
      while (v51);
    }
    *v50 = 15360;
    v50[v49] = 0;
    v50[v52] = 0;
    v50[v53] = 0;
    v50[v54] = 15360;
    v50[v55] = 0;
  }
LABEL_70:
  v57 = v61;
  v61 = 0;
  if (v57)
    (*((void (**)(void (**)()))*v57 + 1))(v57);
  return a1;
}

void sub_21095D850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  sub_2108A894C(a11);
  sub_21095B908((uint64_t *)(v11 + 288));
  sub_21095A0E8(a10);
  _Unwind_Resume(a1);
}

void sub_21095D8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v10;
  va_list va;

  va_start(va, a5);
  sub_2108A894C(a4);
  do
    v10 = __ldaxr(v7);
  while (__stlxr(v10 - 1, v7));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  sub_2108A894C((uint64_t)va);
  sub_210966524((uint64_t *)(v8 - 96));
  sub_21095B908((uint64_t *)(v5 + 288));
  sub_21095A0E8(a3);
  _Unwind_Resume(a1);
}

void sub_21095D950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  sub_2108D8AE4((uint64_t)va);
  sub_21095B908((uint64_t *)(v5 + 288));
  sub_21095A0E8(a3);
  _Unwind_Resume(a1);
}

void sub_21095D974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_21095B908((uint64_t *)(v10 + 288));
  sub_21095A0E8(a10);
  _Unwind_Resume(a1);
}

_QWORD *sub_21095D990(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;

  *a1 = &off_24CA80CE0;
  v2 = (std::__shared_weak_count *)a1[40];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1[36];
    a1[36] = 0;
    if (!v5)
      goto LABEL_14;
  }
  else
  {
LABEL_5:
    v5 = a1[36];
    a1[36] = 0;
    if (!v5)
      goto LABEL_14;
  }
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  v7 = *(std::__shared_weak_count **)(v5 + 8);
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  MEMORY[0x212BCC6FC](v5, 0x60C40CE5A77A8);
LABEL_14:
  sub_21095A0E8((uint64_t)(a1 + 1));
  return a1;
}

uint64_t sub_21095DA88(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21095DAF0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;

  *a1 = &off_24CA80CE0;
  v2 = (std::__shared_weak_count *)a1[40];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = a1[36];
    a1[36] = 0;
    if (!v5)
      goto LABEL_14;
  }
  else
  {
LABEL_5:
    v5 = a1[36];
    a1[36] = 0;
    if (!v5)
      goto LABEL_14;
  }
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = 0;
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  v7 = *(std::__shared_weak_count **)(v5 + 8);
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  MEMORY[0x212BCC6FC](v5, 0x60C40CE5A77A8);
LABEL_14:
  sub_21095A0E8((uint64_t)(a1 + 1));
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21095DBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2108B3FF0((uint64_t)&v3, (uint64_t *)(**(_QWORD **)(a1 + 288) + 8));
  v1 = v3;
  sub_2108B55B4((uint64_t)&v3);
  return v1;
}

BOOL sub_21095DC44(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  int v4;
  char *v5;
  __int128 v6;
  _QWORD *v7;
  void **v8;
  void **v9;
  void *v10;
  void *v12;
  void *v13;
  char *v14;
  void *__p;
  void **v16;
  char v17;

  v3 = a1 + 21;
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 40))(a1);
  v5 = (char *)operator new(0x28uLL);
  v13 = v5 + 40;
  v14 = v5 + 40;
  *(_DWORD *)v5 = 1;
  *(_QWORD *)(v5 + 4) = *a2;
  *(_QWORD *)&v6 = 0x100000001;
  *((_QWORD *)&v6 + 1) = 0x100000001;
  *(_OWORD *)(v5 + 12) = v6;
  *(_QWORD *)(v5 + 28) = 0x600000001;
  *((_DWORD *)v5 + 9) = v4;
  v12 = v5;
  LOBYTE(__p) = 0;
  v17 = 0;
  v7 = sub_210988F20(v3, (unint64_t)&v12);
  if (v17)
  {
    v8 = (void **)__p;
    if (__p)
    {
      v9 = v16;
      v10 = __p;
      if (v16 != __p)
      {
        do
        {
          if (*((char *)v9 - 1) < 0)
            operator delete(*(v9 - 3));
          v9 -= 3;
        }
        while (v9 != v8);
        v10 = __p;
      }
      v16 = v8;
      operator delete(v10);
    }
  }
  if (v12)
  {
    v13 = v12;
    operator delete(v12);
  }
  return v7 != 0;
}

void sub_21095DD40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_21095BC5C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21095DD54()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 245, (uint64_t)&unk_210A01421, 0, (uint64_t)"ExtractFeatures is not implemented for ATUHardNetGlobalFeat", 59, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21095DD90()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 250, (uint64_t)&unk_210A01421, 0, (uint64_t)"DetectKeypoints is not implemented for ATUHardNetGlobalFeat", 59, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21095DDCC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  void *__p[3];
  _BYTE v6[24];
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  char v12;

  (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 48))(__p);
  *(_BYTE *)a2 = 0;
  *(_DWORD *)(a2 + 24) = -1;
  v3 = v7;
  if (v7 != -1)
  {
    ((void (*)(char *, uint64_t, _BYTE *))off_24CA81058[v7])(&v12, a2, v6);
    *(_DWORD *)(a2 + 24) = v3;
  }
  *(_QWORD *)(a2 + 32) = v8;
  v4 = v11;
  *(_DWORD *)(a2 + 40) = v9;
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, uint64_t *))off_24CA81038[v4])(&v12, &v10);
  v11 = -1;
  if (v7 != -1)
    ((void (*)(char *, _BYTE *))off_24CA81038[v7])(&v12, v6);
  v7 = -1;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

uint64_t sub_21095DEC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, std::__shared_weak_count *a6)
{
  uint64_t (**v11)();
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t (*v19)();
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  std::string::size_type v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  __int16 v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  __int128 v69;
  unint64_t *v70;
  unint64_t v71;
  uint64_t (*v72)();
  int v73;
  __int16 v74;
  unint64_t v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  std::string::size_type v79;
  unint64_t *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  int v90;
  unsigned __int8 v91;
  __int16 v92;
  unint64_t *v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  __int128 v98;
  unint64_t *v99;
  unint64_t v100;
  uint64_t (*v101)();
  int v102;
  __int16 v103;
  unint64_t v104;
  unint64_t *v105;
  unint64_t v106;
  char *v107;
  int v108;
  char *v109;
  unint64_t *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t (***v113)();
  uint64_t *v114;
  unsigned __int8 v115;
  unint64_t v117;
  char *v118;
  size_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t i;
  uint64_t v123;
  uint64_t *v124;
  unsigned __int8 v125;
  char *v127;
  size_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t j;
  uint64_t v132;
  int v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  char *v146;
  char *v147;
  void *v148;
  char *v149;
  uint64_t v150;
  std::__shared_weak_count *v151;
  unint64_t *v152;
  unint64_t v153;
  uint64_t result;
  int v155;
  const std::string::value_type *v156;
  std::string::size_type v157;
  std::string *v158;
  __int128 v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  std::string v164;
  _BYTE v165[30];
  uint64_t (**v166)();
  __uint64_t v167[2];
  _BYTE v168[30];
  char v169;
  int v170;
  void *v171;
  char *v172;
  unint64_t v173;
  uint64_t (**v174)();
  char v175;
  std::__shared_weak_count *v176;
  void *__dst[2];
  uint64_t v178;
  uint64_t v179;
  uint64_t (**v180)();
  uint64_t v181;
  std::__shared_weak_count *v182;
  __int128 v183;
  uint64_t (*v184)();
  __int16 v185;
  std::string::size_type v186;
  std::__shared_weak_count *v187;
  uint64_t (**v188)();
  std::__shared_weak_count *v189;
  _BYTE v190[24];
  __int128 __p;
  uint64_t (*v192)();
  int v193;
  __int16 v194;
  char v195;
  char v196;
  void *v197;
  char v198;
  char v199;
  void *v200;
  char v201;
  void *v202;
  char v203;
  uint64_t v204;

  v204 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)v190 = &off_24CA81238;
  v11 = *(uint64_t (***)())(a2 + 312);
  v12 = *(std::__shared_weak_count **)(a2 + 320);
  v166 = v11;
  v167[0] = (__uint64_t)v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(p_shared_owners);
    while (__stxr(v14 + 1, p_shared_owners));
    v164.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
    v164.__r_.__value_.__l.__size_ = (std::string::size_type)v12;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    *(_QWORD *)&v190[8] = v11;
    *(_QWORD *)&v190[16] = v12;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  else
  {
    *(_OWORD *)&v164.__r_.__value_.__l.__data_ = (unint64_t)v11;
    *(_QWORD *)&v190[8] = v11;
    *(_QWORD *)&v190[16] = 0;
  }
  (*((void (**)(uint64_t (***__return_ptr)(), uint64_t (**)(), uint64_t))*v11 + 8))(&v174, v11, 3);
  v19 = v174[2];
  __p = *(_OWORD *)v174;
  v192 = v19;
  v174 = 0;
  MEMORY[0x212BCC6FC]();
  v20 = *(std::__shared_weak_count **)&v190[16];
  if (*(_QWORD *)&v190[16])
  {
    v21 = (unint64_t *)(*(_QWORD *)&v190[16] + 8);
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  if (v164.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v164.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v164.__r_.__value_.__l.__size_ + 16))(v164.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v164.__r_.__value_.__l.__size_);
    }
  }
  if (v167[0])
  {
    v26 = (unint64_t *)(v167[0] + 8);
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      (*(void (**)(__uint64_t))(*(_QWORD *)v167[0] + 16))(v167[0]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v167[0]);
    }
  }
  v180 = &off_24CA7D340;
  v28 = *(_QWORD *)&v190[8];
  v29 = *(std::__shared_weak_count **)&v190[16];
  if (*(_QWORD *)&v190[16])
  {
    v30 = (unint64_t *)(*(_QWORD *)&v190[16] + 8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 1, v30));
    do
      v32 = __ldxr(v30);
    while (__stxr(v32 + 1, v30));
    v183 = __p;
    v184 = v192;
    do
      v33 = __ldxr(v30);
    while (__stxr(v33 + 1, v30));
    v181 = v28;
    v182 = v29;
    v185 = 256;
    do
      v34 = __ldaxr(v30);
    while (__stlxr(v34 - 1, v30));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
    do
      v35 = __ldaxr(v30);
    while (__stlxr(v35 - 1, v30));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  else
  {
    v181 = *(_QWORD *)&v190[8];
    v182 = 0;
    v183 = __p;
    v184 = v192;
    v185 = 256;
  }
  sub_21096E0D8((unsigned int *)(a3 + 32), a4, a5, (uint64_t)&v180);
  v36 = v182;
  if (v182)
  {
    v37 = (unint64_t *)&v182->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  v39 = *(std::__shared_weak_count **)&v190[16];
  if (*(_QWORD *)&v190[16])
  {
    v40 = (unint64_t *)(*(_QWORD *)&v190[16] + 8);
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
      v42 = *(_QWORD *)(a2 + 312);
      v43 = *(std::__shared_weak_count **)(a2 + 320);
      if (v43)
        goto LABEL_53;
LABEL_60:
      if (v42)
        goto LABEL_58;
      goto LABEL_61;
    }
  }
  v42 = *(_QWORD *)(a2 + 312);
  v43 = *(std::__shared_weak_count **)(a2 + 320);
  if (!v43)
    goto LABEL_60;
LABEL_53:
  v44 = (unint64_t *)&v43->__shared_owners_;
  do
    v45 = __ldxr(v44);
  while (__stxr(v45 + 1, v44));
  do
    v46 = __ldaxr(v44);
  while (__stlxr(v46 - 1, v44));
  if (v46)
  {
    if (v42)
    {
LABEL_58:
      (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a2 + 312) + 96))(&v179, *(_QWORD *)(a2 + 312), 1);
      goto LABEL_62;
    }
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
    std::__shared_weak_count::__release_weak(v43);
    if (v42)
      goto LABEL_58;
  }
LABEL_61:
  v179 = 0;
LABEL_62:
  v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 40))(a2);
  v48 = *(_QWORD *)(a3 + 32);
  v49 = (char *)operator new(0x28uLL);
  *(_QWORD *)&v190[8] = v49 + 40;
  *(_QWORD *)&v190[16] = v49 + 40;
  *(_DWORD *)v49 = 1;
  *(_QWORD *)(v49 + 4) = v48;
  *(_QWORD *)&v50 = 0x100000001;
  *((_QWORD *)&v50 + 1) = 0x100000001;
  *(_OWORD *)(v49 + 12) = v50;
  *(_QWORD *)(v49 + 28) = 0x600000001;
  *((_DWORD *)v49 + 9) = v47;
  *(_QWORD *)v190 = v49;
  LOBYTE(__p) = 0;
  LOBYTE(v193) = 0;
  v51 = sub_210988F20((_QWORD *)(a2 + 168), (unint64_t)v190);
  if (!v51)
    sub_2108B307C("unordered_map::at: key not found");
  if (*((char *)v51 + 95) < 0)
  {
    sub_2108B314C(__dst, (void *)v51[9], v51[10]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(v51 + 9);
    v178 = v51[11];
  }
  if ((_BYTE)v193)
  {
    v52 = __p;
    if ((_QWORD)__p)
    {
      v53 = *((_QWORD *)&__p + 1);
      v54 = (void *)__p;
      if (*((_QWORD *)&__p + 1) != (_QWORD)__p)
      {
        do
        {
          if (*(char *)(v53 - 1) < 0)
            operator delete(*(void **)(v53 - 24));
          v53 -= 24;
        }
        while (v53 != v52);
        v54 = (void *)__p;
      }
      *((_QWORD *)&__p + 1) = v52;
      operator delete(v54);
    }
  }
  if (*(_QWORD *)v190)
  {
    *(_QWORD *)&v190[8] = *(_QWORD *)v190;
    operator delete(*(void **)v190);
  }
  v55 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)v190 = off_24CA82900;
  if (SHIBYTE(v178) < 0)
  {
    sub_2108B314C(&v190[8], __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)&v190[8] = *(_OWORD *)__dst;
    *(_QWORD *)&__p = v178;
  }
  (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, _BYTE *))(**(_QWORD **)(v55 + 16) + 48))(&v174, *(_QWORD *)(v55 + 16), v190);
  *(_QWORD *)v190 = off_24CA82900;
  if (SBYTE7(__p) < 0)
  {
    operator delete(*(void **)&v190[8]);
    if (!v175)
      goto LABEL_85;
  }
  else if (!v175)
  {
    goto LABEL_85;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 270, (uint64_t)"ret_config == kml::MLResultCode::NoError", 40, (uint64_t)"Unable to set model configuration", 33, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_85:
  v171 = 0;
  v172 = 0;
  v173 = 0;
  v164.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24CA79890;
  v56 = *(_QWORD *)(a3 + 8);
  v57 = *(std::__shared_weak_count **)(a3 + 16);
  if (v57)
  {
    v58 = (unint64_t *)&v57->__shared_owners_;
    do
      v59 = __ldxr(v58);
    while (__stxr(v59 + 1, v58));
    v60 = *(_DWORD *)(a3 + 44);
    v62 = *(_QWORD *)(a3 + 24);
    v61 = *(_QWORD *)(a3 + 32);
    v63 = *(_WORD *)(a3 + 48);
    do
      v64 = __ldxr(v58);
    while (__stxr(v64 + 1, v58));
    do
      v65 = __ldxr(v58);
    while (__stxr(v65 + 1, v58));
  }
  else
  {
    v60 = *(_DWORD *)(a3 + 44);
    v62 = *(_QWORD *)(a3 + 24);
    v61 = *(_QWORD *)(a3 + 32);
    v63 = *(_WORD *)(a3 + 48);
  }
  v164.__r_.__value_.__l.__size_ = v56;
  v164.__r_.__value_.__r.__words[2] = (std::string::size_type)v57;
  *(_QWORD *)v165 = v61;
  *(_DWORD *)&v165[8] = v60;
  *(_QWORD *)&v165[16] = v62;
  *(_DWORD *)&v165[24] = 1;
  *(_WORD *)&v165[28] = v63;
  if (v57)
  {
    v66 = (unint64_t *)&v57->__shared_owners_;
    do
      v67 = __ldaxr(v66);
    while (__stlxr(v67 - 1, v66));
    if (!v67)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
    do
      v68 = __ldaxr(v66);
    while (__stlxr(v68 - 1, v66));
    if (!v68)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
  v69 = *(_OWORD *)&v164.__r_.__value_.__r.__words[1];
  v166 = &off_24CA79890;
  *(_OWORD *)v167 = *(_OWORD *)&v164.__r_.__value_.__r.__words[1];
  *(_OWORD *)&v164.__r_.__value_.__r.__words[1] = 0uLL;
  *(_OWORD *)v168 = *(_OWORD *)v165;
  *(_OWORD *)&v168[14] = *(_OWORD *)&v165[14];
  v170 = 2;
  LODWORD(v202) = -1;
  *(_QWORD *)v190 = &off_24CA79890;
  if (*((_QWORD *)&v69 + 1))
  {
    v70 = (unint64_t *)(*((_QWORD *)&v69 + 1) + 8);
    do
      v71 = __ldxr(v70);
    while (__stxr(v71 + 1, v70));
    v72 = *(uint64_t (**)())&v168[16];
    v73 = *(_DWORD *)&v168[24];
    v74 = *(_WORD *)&v168[28];
    do
      v75 = __ldxr(v70);
    while (__stxr(v75 + 1, v70));
  }
  else
  {
    v72 = *(uint64_t (**)())&v168[16];
    v73 = *(_DWORD *)&v168[24];
    v74 = *(_WORD *)&v168[28];
  }
  *(_OWORD *)&v190[8] = v69;
  *(_QWORD *)&__p = *(_QWORD *)v168;
  DWORD2(__p) = *(_DWORD *)&v168[8];
  v192 = v72;
  v193 = v73;
  v194 = v74;
  if (!*((_QWORD *)&v69 + 1))
    goto LABEL_112;
  v76 = (unint64_t *)(*((_QWORD *)&v69 + 1) + 8);
  do
    v77 = __ldaxr(v76);
  while (__stlxr(v77 - 1, v76));
  if (!v77)
  {
    (*(void (**)(_QWORD))(**((_QWORD **)&v69 + 1) + 16))(*((_QWORD *)&v69 + 1));
    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v69 + 1));
    LODWORD(v202) = 2;
  }
  else
  {
LABEL_112:
    LODWORD(v202) = 2;
  }
  v172 = sub_210965228((char **)&v171, (uint64_t)v190);
  if ((_DWORD)v202 != -1)
    ((void (*)(uint64_t (***)(), _BYTE *))off_24CA81078[v202])(&v188, v190);
  LODWORD(v202) = -1;
  ((void (*)(uint64_t (***)(), uint64_t (***)()))off_24CA81078[v170])(&v188, &v166);
  v170 = -1;
  v164.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24CA79890;
  v79 = *(_QWORD *)(a2 + 312);
  v78 = *(std::__shared_weak_count **)(a2 + 320);
  v188 = (uint64_t (**)())v79;
  v189 = v78;
  if (v78)
  {
    v80 = (unint64_t *)&v78->__shared_owners_;
    do
      v81 = __ldxr(v80);
    while (__stxr(v81 + 1, v80));
    v187 = v78;
    do
      v82 = __ldxr(v80);
    while (__stxr(v82 + 1, v80));
    v83 = *(_QWORD *)(a2 + 336);
    v84 = *(_QWORD *)(a2 + 368);
    v85 = *(_DWORD *)(a2 + 380);
    do
      v86 = __ldxr(v80);
    while (__stxr(v86 + 1, v80));
  }
  else
  {
    v187 = 0;
    v83 = *(_QWORD *)(a2 + 336);
    v84 = *(_QWORD *)(a2 + 368);
    v85 = *(_DWORD *)(a2 + 380);
  }
  v186 = v79;
  v164.__r_.__value_.__l.__size_ = v79;
  v164.__r_.__value_.__r.__words[2] = (std::string::size_type)v78;
  *(_QWORD *)v165 = v84;
  *(_DWORD *)&v165[8] = 2 * v85;
  *(_QWORD *)&v165[16] = v83;
  *(_DWORD *)&v165[24] = 3;
  if (!v79)
  {
    *(_WORD *)&v165[28] = 0;
    if (!v78)
      goto LABEL_146;
    goto LABEL_142;
  }
  if (v78)
  {
    v87 = (unint64_t *)&v78->__shared_owners_;
    do
      v88 = __ldxr(v87);
    while (__stxr(v88 + 1, v87));
    do
      v89 = __ldaxr(v87);
    while (__stlxr(v89 - 1, v87));
    if (!v89)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
  }
  v90 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v79 + 104))(v79);
  if ((v90 & 0xFFFFFFu) <= 0x10000)
    v91 = 0;
  else
    v91 = v90;
  v92 = v90 & 0xFF00;
  if ((v90 & 0xFF0000) == 0)
    v92 = 0;
  v78 = v187;
  *(_WORD *)&v165[28] = v92 & 0xFF00 | v91;
  if (v187)
  {
LABEL_142:
    v93 = (unint64_t *)&v78->__shared_owners_;
    do
      v94 = __ldaxr(v93);
    while (__stlxr(v94 - 1, v93));
    if (!v94)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
  }
LABEL_146:
  v95 = v189;
  if (v189)
  {
    v96 = (unint64_t *)&v189->__shared_owners_;
    do
      v97 = __ldaxr(v96);
    while (__stlxr(v97 - 1, v96));
    if (!v97)
    {
      ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
      std::__shared_weak_count::__release_weak(v95);
    }
  }
  v98 = *(_OWORD *)&v164.__r_.__value_.__r.__words[1];
  v166 = &off_24CA79890;
  *(_OWORD *)v167 = *(_OWORD *)&v164.__r_.__value_.__r.__words[1];
  *(_OWORD *)&v164.__r_.__value_.__r.__words[1] = 0uLL;
  *(_OWORD *)v168 = *(_OWORD *)v165;
  *(_OWORD *)&v168[14] = *(_OWORD *)&v165[14];
  v170 = 2;
  LODWORD(v202) = -1;
  *(_QWORD *)v190 = &off_24CA79890;
  if (*((_QWORD *)&v98 + 1))
  {
    v99 = (unint64_t *)(*((_QWORD *)&v98 + 1) + 8);
    do
      v100 = __ldxr(v99);
    while (__stxr(v100 + 1, v99));
    v101 = *(uint64_t (**)())&v168[16];
    v102 = *(_DWORD *)&v168[24];
    v103 = *(_WORD *)&v168[28];
    do
      v104 = __ldxr(v99);
    while (__stxr(v104 + 1, v99));
  }
  else
  {
    v101 = *(uint64_t (**)())&v168[16];
    v102 = *(_DWORD *)&v168[24];
    v103 = *(_WORD *)&v168[28];
  }
  *(_OWORD *)&v190[8] = v98;
  *(_QWORD *)&__p = *(_QWORD *)v168;
  DWORD2(__p) = *(_DWORD *)&v168[8];
  v192 = v101;
  v193 = v102;
  v194 = v103;
  if (*((_QWORD *)&v98 + 1))
  {
    v105 = (unint64_t *)(*((_QWORD *)&v98 + 1) + 8);
    do
      v106 = __ldaxr(v105);
    while (__stlxr(v106 - 1, v105));
    if (!v106)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v98 + 1) + 16))(*((_QWORD *)&v98 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v98 + 1));
      LODWORD(v202) = 2;
      v107 = v172;
      if ((unint64_t)v172 < v173)
        goto LABEL_163;
LABEL_167:
      v109 = sub_210965228((char **)&v171, (uint64_t)v190);
      goto LABEL_168;
    }
  }
  LODWORD(v202) = 2;
  v107 = v172;
  if ((unint64_t)v172 >= v173)
    goto LABEL_167;
LABEL_163:
  *v107 = 0;
  *((_DWORD *)v107 + 30) = -1;
  v108 = (int)v202;
  if ((_DWORD)v202 != -1)
  {
    ((void (*)(uint64_t (***)(), char *, _BYTE *))off_24CA81090[v202])(&v188, v107, v190);
    *((_DWORD *)v107 + 30) = v108;
  }
  v109 = v107 + 128;
LABEL_168:
  v172 = v109;
  if ((_DWORD)v202 != -1)
    ((void (*)(uint64_t (***)(), _BYTE *))off_24CA81078[v202])(&v188, v190);
  LODWORD(v202) = -1;
  if (v170 != -1)
    ((void (*)(uint64_t (***)(), uint64_t (***)()))off_24CA81078[v170])(&v188, &v166);
  v170 = -1;
  if (v164.__r_.__value_.__r.__words[2])
  {
    v110 = (unint64_t *)(v164.__r_.__value_.__r.__words[2] + 8);
    do
      v111 = __ldaxr(v110);
    while (__stlxr(v111 - 1, v110));
    if (!v111)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v164.__r_.__value_.__r.__words[2] + 16))(v164.__r_.__value_.__r.__words[2]);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v164.__r_.__value_.__r.__words[2]);
    }
  }
  v188 = &off_24CA829E0;
  v189 = a6;
  v112 = *(unsigned __int8 *)(a2 + 296);
  if (*(_BYTE *)(a2 + 296))
    v113 = &v188;
  else
    v113 = 0;
  kdebug_trace();
  v114 = sub_2109830E8();
  v115 = atomic_load((unsigned __int8 *)&qword_254A75E80);
  if ((v115 & 1) == 0 && __cxa_guard_acquire(&qword_254A75E80))
  {
    __cxa_atexit((void (*)(void *))sub_2109836DC, &stru_254A724E0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75E80);
  }
  if (atomic_load(&qword_254A72520))
  {
    v162 = a1;
    v117 = a4;
    *(_DWORD *)v190 = 67109120;
    *(_DWORD *)&v190[4] = a6 != 0;
    v118 = (char *)_os_log_send_and_compose_impl();
    v119 = strlen(v118);
    v166 = 0;
    pthread_threadid_np(0, (__uint64_t *)&v166);
    v120 = (uint64_t)v166;
    timespec_get((timespec *)&v166, 1);
    sub_2109833E4(v190, 0xEEEEB0B5B2B2EEEELL, "Trace", 5uLL, (__int128 *)(v114 + 1), (__int128 *)(v114 + 5), "LF:E2EMR:BEGIN: PS:%d", 0x15uLL, v118, v119, v120, &v166);
    std::mutex::lock(&stru_254A724E0);
    v121 = qword_254A72528;
    for (i = *(_QWORD *)algn_254A72530; v121 != i; v121 += 40)
    {
      v123 = *(_QWORD *)(v121 + 32);
      if (!v123)
        sub_2108B30F0();
      (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v123 + 48))(v123, v190);
    }
    std::mutex::unlock(&stru_254A724E0);
    if (v203 < 0)
    {
      operator delete(v202);
      a4 = v117;
      if ((v201 & 0x80000000) == 0)
      {
LABEL_187:
        a1 = v162;
        if (!v199)
        {
LABEL_193:
          if (v196 && v195 < 0)
            operator delete(*((void **)&__p + 1));
          if (SBYTE7(__p) < 0)
            operator delete(*(void **)&v190[8]);
          if (v118)
            free(v118);
          goto LABEL_200;
        }
LABEL_191:
        if (v198 < 0)
          operator delete(v197);
        goto LABEL_193;
      }
    }
    else
    {
      a4 = v117;
      if ((v201 & 0x80000000) == 0)
        goto LABEL_187;
    }
    operator delete(v200);
    a1 = v162;
    if (!v199)
      goto LABEL_193;
    goto LABEL_191;
  }
LABEL_200:
  if (os_signpost_enabled((os_log_t)*v114))
  {
    *(_DWORD *)v190 = 67109120;
    *(_DWORD *)&v190[4] = a6 != 0;
    _os_signpost_emit_unreliably_with_name_impl();
  }
  sub_2109A978C(*(_QWORD *)(*(_QWORD *)(a2 + 288) + 16), &v171, (uint64_t)v113, v112, (uint64_t)&v166);
  v124 = sub_2109830E8();
  v125 = atomic_load((unsigned __int8 *)&qword_254A75E80);
  if ((v125 & 1) == 0 && __cxa_guard_acquire(&qword_254A75E80))
  {
    __cxa_atexit((void (*)(void *))sub_2109836DC, &stru_254A724E0, &dword_21089F000);
    __cxa_guard_release(&qword_254A75E80);
  }
  if (atomic_load(&qword_254A72520))
  {
    *(_DWORD *)v190 = 134217984;
    *(_QWORD *)&v190[4] = a4;
    v127 = (char *)_os_log_send_and_compose_impl();
    v128 = strlen(v127);
    v164.__r_.__value_.__r.__words[0] = 0;
    pthread_threadid_np(0, (__uint64_t *)&v164);
    v129 = v164.__r_.__value_.__r.__words[0];
    timespec_get((timespec *)&v164, 1);
    sub_2109833E4(v190, 0xEEEEB0B5B2B2EEEELL, "Trace", 5uLL, (__int128 *)(v124 + 1), (__int128 *)(v124 + 5), "LF:E2EMR:END: NV:%lu", 0x14uLL, v127, v128, v129, &v164);
    std::mutex::lock(&stru_254A724E0);
    v130 = qword_254A72528;
    for (j = *(_QWORD *)algn_254A72530; v130 != j; v130 += 40)
    {
      v132 = *(_QWORD *)(v130 + 32);
      if (!v132)
        sub_2108B30F0();
      (*(void (**)(uint64_t, _BYTE *))(*(_QWORD *)v132 + 48))(v132, v190);
    }
    std::mutex::unlock(&stru_254A724E0);
    if (v203 < 0)
    {
      operator delete(v202);
      if ((v201 & 0x80000000) == 0)
      {
LABEL_209:
        if (!v199)
        {
LABEL_215:
          if (v196 && v195 < 0)
            operator delete(*((void **)&__p + 1));
          if (SBYTE7(__p) < 0)
            operator delete(*(void **)&v190[8]);
          if (v127)
            free(v127);
          goto LABEL_222;
        }
LABEL_213:
        if (v198 < 0)
          operator delete(v197);
        goto LABEL_215;
      }
    }
    else if ((v201 & 0x80000000) == 0)
    {
      goto LABEL_209;
    }
    operator delete(v200);
    if (!v199)
      goto LABEL_215;
    goto LABEL_213;
  }
LABEL_222:
  if (os_signpost_enabled((os_log_t)*v124))
  {
    *(_DWORD *)v190 = 134217984;
    *(_QWORD *)&v190[4] = a4;
    _os_signpost_emit_unreliably_with_name_impl();
  }
  kdebug_trace();
  if (LOBYTE(v167[0]))
  {
    sub_21095C620((uint64_t *)&v164, "Error:");
    v155 = *(char *)(v167[1] + 23);
    if (v155 >= 0)
      v156 = (const std::string::value_type *)v167[1];
    else
      v156 = *(const std::string::value_type **)v167[1];
    if (v155 >= 0)
      v157 = *(unsigned __int8 *)(v167[1] + 23);
    else
      v157 = *(_QWORD *)(v167[1] + 8);
    v158 = std::string::append(&v164, v156, v157);
    v159 = *(_OWORD *)&v158->__r_.__value_.__l.__data_;
    *(_QWORD *)&v190[16] = *((_QWORD *)&v158->__r_.__value_.__l + 2);
    *(_OWORD *)v190 = v159;
    v158->__r_.__value_.__l.__size_ = 0;
    v158->__r_.__value_.__r.__words[2] = 0;
    v158->__r_.__value_.__r.__words[0] = 0;
    if (v190[23] >= 0)
      v160 = v190;
    else
      v160 = *(_BYTE **)v190;
    if (v190[23] >= 0)
      v161 = v190[23];
    else
      v161 = *(_QWORD *)&v190[8];
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 301, (uint64_t)&unk_210A01421, 0, (uint64_t)v160, v161, (void (*)(void **))sub_2109EDDB4);
    if ((v190[23] & 0x80000000) != 0)
      operator delete(*(void **)v190);
    if (SHIBYTE(v164.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v164.__r_.__value_.__l.__data_);
    abort();
  }
  sub_21096C934(*(__int128 **)&v168[8], a4, (uint64_t)v190);
  sub_21096D844((__int128 *)(*(_QWORD *)&v168[8] + 128), 1uLL, (uint64_t)&v164);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 48) = -1;
  v133 = __p;
  if ((_DWORD)__p != -1)
  {
    ((void (*)(std::string::size_type *, uint64_t, _BYTE *))off_24CA82338[__p])(&v186, a1 + 24, v190);
    *(_DWORD *)(a1 + 48) = v133;
  }
  v134 = *((_QWORD *)&__p + 1);
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 56) = v134;
  *(_DWORD *)(a1 + 64) = (_DWORD)v192;
  *(_DWORD *)(a1 + 96) = -1;
  v135 = *(_DWORD *)v165;
  if (*(_DWORD *)v165 == -1)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)&v165[8];
    *(_DWORD *)(a1 + 112) = *(_DWORD *)&v165[16];
    v137 = __p;
    if ((_DWORD)__p == -1)
      goto LABEL_234;
LABEL_233:
    ((void (*)(std::string *, _BYTE *))off_24CA81038[v137])(&v164, v190);
    goto LABEL_234;
  }
  ((void (*)(std::string::size_type *))off_24CA82338[*(unsigned int *)v165])(&v186);
  *(_DWORD *)(a1 + 96) = v135;
  v136 = *(unsigned int *)v165;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)&v165[8];
  *(_DWORD *)(a1 + 112) = *(_DWORD *)&v165[16];
  if ((_DWORD)v136 != -1)
    ((void (*)(std::string::size_type *, std::string *))off_24CA81038[v136])(&v186, &v164);
  v137 = __p;
  if ((_DWORD)__p != -1)
    goto LABEL_233;
LABEL_234:
  if (v169)
  {
    v138 = *(_QWORD *)&v168[8];
    if (*(_QWORD *)&v168[8])
    {
      v139 = *(_QWORD *)&v168[16];
      v140 = *(void **)&v168[8];
      if (*(_QWORD *)&v168[16] != *(_QWORD *)&v168[8])
      {
        do
        {
          v141 = v139 - 128;
          v142 = *(unsigned int *)(v139 - 8);
          if ((_DWORD)v142 != -1)
            ((void (*)(_BYTE *, uint64_t))off_24CA81020[v142])(v190, v139 - 128);
          *(_DWORD *)(v139 - 8) = -1;
          v139 -= 128;
        }
        while (v141 != v138);
        v140 = *(void **)&v168[8];
      }
      *(_QWORD *)&v168[16] = v138;
      operator delete(v140);
    }
  }
  v166 = &off_24CA79A00;
  v143 = *(std::__shared_weak_count **)v168;
  if (!*(_QWORD *)v168)
    goto LABEL_247;
  v144 = (unint64_t *)(*(_QWORD *)v168 + 8);
  do
    v145 = __ldaxr(v144);
  while (__stlxr(v145 - 1, v144));
  if (!v145)
  {
    ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
    std::__shared_weak_count::__release_weak(v143);
    v146 = (char *)v171;
    if (!v171)
      goto LABEL_255;
  }
  else
  {
LABEL_247:
    v146 = (char *)v171;
    if (!v171)
      goto LABEL_255;
  }
  v147 = v172;
  v148 = v146;
  if (v172 != v146)
  {
    do
    {
      v149 = v147 - 128;
      v150 = *((unsigned int *)v147 - 2);
      if ((_DWORD)v150 != -1)
        ((void (*)(_BYTE *, char *))off_24CA81078[v150])(v190, v147 - 128);
      *((_DWORD *)v147 - 2) = -1;
      v147 -= 128;
    }
    while (v149 != v146);
    v148 = v171;
  }
  v172 = v146;
  operator delete(v148);
LABEL_255:
  v174 = &off_24CA79A00;
  v151 = v176;
  if (!v176)
    goto LABEL_259;
  v152 = (unint64_t *)&v176->__shared_owners_;
  do
    v153 = __ldaxr(v152);
  while (__stlxr(v153 - 1, v152));
  if (v153)
  {
LABEL_259:
    if ((SHIBYTE(v178) & 0x80000000) == 0)
      goto LABEL_261;
    goto LABEL_260;
  }
  ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
  std::__shared_weak_count::__release_weak(v151);
  if (SHIBYTE(v178) < 0)
LABEL_260:
    operator delete(__dst[0]);
LABEL_261:
  result = v179;
  v179 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_21095F3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,uint64_t a54)
{
  uint64_t v55;

  sub_21095F77C((uint64_t)&a23);
  sub_21095F86C(&a40);
  sub_2108AB288(&a43);
  if (a52 < 0)
  {
    operator delete(__p);
    v55 = a54;
    a54 = 0;
    if (!v55)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else
  {
    v55 = a54;
    a54 = 0;
    if (!v55)
      goto LABEL_6;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
  _Unwind_Resume(a1);
}

uint64_t sub_21095F664(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_21095F6CC(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 120);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA81078[v2])(&v4, a1);
  *(_DWORD *)(a1 + 120) = -1;
  return a1;
}

uint64_t sub_21095F724(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 120);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA81078[v2])(&v4, a1);
  *(_DWORD *)(a1 + 120) = -1;
  return a1;
}

uint64_t sub_21095F77C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char v11;

  if (*(_BYTE *)(a1 + 56))
  {
    v2 = *(_QWORD *)(a1 + 32);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 40);
      v4 = *(void **)(a1 + 32);
      if (v3 != v2)
      {
        do
        {
          v5 = v3 - 128;
          v6 = *(unsigned int *)(v3 - 8);
          if ((_DWORD)v6 != -1)
            ((void (*)(char *, uint64_t))off_24CA81020[v6])(&v11, v3 - 128);
          *(_DWORD *)(v3 - 8) = -1;
          v3 -= 128;
        }
        while (v5 != v2);
        v4 = *(void **)(a1 + 32);
      }
      *(_QWORD *)(a1 + 40) = v2;
      operator delete(v4);
    }
  }
  *(_QWORD *)a1 = &off_24CA79A00;
  v7 = *(std::__shared_weak_count **)(a1 + 24);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

void **sub_21095F86C(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  char v8;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = v3 - 128;
        v6 = *((unsigned int *)v3 - 2);
        if ((_DWORD)v6 != -1)
          ((void (*)(char *, char *))off_24CA81078[v6])(&v8, v3 - 128);
        *((_DWORD *)v3 - 2) = -1;
        v3 -= 128;
      }
      while (v5 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_21095F910(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, std::__shared_weak_count *a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 *v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 *v19;
  __int128 *v20;
  char *v21;
  __int128 v22;
  char *v23;
  unint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  __int128 v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char **v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v42;
  unint64_t v43;
  void *__p;
  __int128 *v45;
  _BYTE v46[24];
  int v47;
  _BYTE v48[24];
  int v49;
  unint64_t v50[2];
  char *v51;
  char v52;
  char **v53[2];

  v50[0] = a3;
  v50[1] = a4;
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 40))(a1);
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_OWORD *)(a6 + 64) = 0u;
  *(_OWORD *)(a6 + 80) = 0u;
  *(_OWORD *)(a6 + 96) = 0u;
  *(_QWORD *)(a6 + 112) = 0;
  v38 = vcvtps_u32_f32((float)a3 / (float)v8);
  if (!v38)
    return;
  v9 = v8;
  if (a3 % v8)
    v10 = a3 % v8;
  else
    v10 = v8;
  v11 = sub_21095FE2C(v50, 0, v10);
  sub_21095DEC4((uint64_t)&__p, a1, a2, v11, v12, a5);
  v14 = (__int128 *)__p;
  v13 = v45;
  v53[0] = (char **)a6;
  if (__p != v45)
  {
    do
    {
      sub_2108CDFD8(v53, v14);
      v14 = (__int128 *)((char *)v14 + 20);
    }
    while (v14 != v13);
  }
  v36 = (char **)(a6 + 72);
  if (!sub_210983B80((char **)(a6 + 24), (uint64_t)v46))
    goto LABEL_11;
  v52 = 1;
  v51 = &v52;
  v15 = *(unsigned int *)(a6 + 96);
  if ((_DWORD)v15 == -1)
    sub_2108B9060();
  v53[0] = &v51;
  ((void (*)(char ***, char **))off_24CA822D8[v15])(v53, v36);
  if (v52)
  {
    if ((sub_210983B80(v36, (uint64_t)v48) & 1) == 0)
    {
LABEL_11:
      if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 319, (uint64_t)"append_ret", 10, (uint64_t)"Append features failed", 22, (void (*)(void **))sub_2109EDDB4))
      {
LABEL_55:
        abort();
      }
    }
  }
  if (v49 != -1)
    ((void (*)(char ***, _BYTE *))off_24CA81038[v49])(v53, v48);
  v49 = -1;
  if (v47 != -1)
    ((void (*)(char ***, _BYTE *))off_24CA81038[v47])(v53, v46);
  v47 = -1;
  if (__p)
  {
    v45 = (__int128 *)__p;
    operator delete(__p);
  }
  if (v38 != 1)
  {
    v16 = 1;
    v37 = v9;
    while (1)
    {
      v42 = v16;
      v43 = v10;
      v17 = sub_21095FE2C(v50, v10, v9);
      sub_21095DEC4((uint64_t)&__p, a1, a2, v17, v18, a5);
      v20 = (__int128 *)__p;
      v19 = v45;
      if (__p != v45)
      {
        v21 = *(char **)(a6 + 8);
        do
        {
          v24 = *(_QWORD *)(a6 + 16);
          if ((unint64_t)v21 < v24)
          {
            v22 = *v20;
            *((_DWORD *)v21 + 4) = *((_DWORD *)v20 + 4);
            *(_OWORD *)v21 = v22;
            v23 = v21 + 20;
          }
          else
          {
            v25 = *(char **)a6;
            v26 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v21[-*(_QWORD *)a6] >> 2);
            v27 = v26 + 1;
            if (v26 + 1 > 0xCCCCCCCCCCCCCCCLL)
              sub_2108CDFC4();
            v28 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v24 - (_QWORD)v25) >> 2);
            if (2 * v28 > v27)
              v27 = 2 * v28;
            if (v28 >= 0x666666666666666)
              v29 = 0xCCCCCCCCCCCCCCCLL;
            else
              v29 = v27;
            if (v29)
            {
              if (v29 > 0xCCCCCCCCCCCCCCCLL)
                sub_2108B2B1C();
              v30 = (char *)operator new(20 * v29);
            }
            else
            {
              v30 = 0;
            }
            v31 = *v20;
            v32 = &v30[20 * v26];
            *((_DWORD *)v32 + 4) = *((_DWORD *)v20 + 4);
            *(_OWORD *)v32 = v31;
            v33 = v32;
            if (v21 != v25)
            {
              do
              {
                v34 = *(_OWORD *)(v21 - 20);
                *((_DWORD *)v33 - 1) = *((_DWORD *)v21 - 1);
                *(_OWORD *)(v33 - 20) = v34;
                v33 -= 20;
                v21 -= 20;
              }
              while (v21 != v25);
              v21 = *(char **)a6;
            }
            v23 = v32 + 20;
            *(_QWORD *)a6 = v33;
            *(_QWORD *)(a6 + 8) = v32 + 20;
            *(_QWORD *)(a6 + 16) = &v30[20 * v29];
            if (v21)
              operator delete(v21);
          }
          *(_QWORD *)(a6 + 8) = v23;
          v20 = (__int128 *)((char *)v20 + 20);
          v21 = v23;
        }
        while (v20 != v19);
      }
      v9 = v37;
      if (!sub_210983B80((char **)(a6 + 24), (uint64_t)v46))
        goto LABEL_60;
      v52 = 1;
      v51 = &v52;
      v35 = *(unsigned int *)(a6 + 96);
      if ((_DWORD)v35 == -1)
        sub_2108B9060();
      v53[0] = &v51;
      ((void (*)(char ***, char **))off_24CA822D8[v35])(v53, v36);
      if (v52)
      {
        if ((sub_210983B80(v36, (uint64_t)v48) & 1) == 0)
        {
LABEL_60:
          if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 319, (uint64_t)"append_ret", 10, (uint64_t)"Append features failed", 22, (void (*)(void **))sub_2109EDDB4))
          {
            goto LABEL_55;
          }
        }
      }
      if (v49 != -1)
        ((void (*)(char ***, _BYTE *))off_24CA81038[v49])(v53, v48);
      v49 = -1;
      if (v47 != -1)
        ((void (*)(char ***, _BYTE *))off_24CA81038[v47])(v53, v46);
      v47 = -1;
      if (__p)
      {
        v45 = (__int128 *)__p;
        operator delete(__p);
      }
      v10 = v43 + v37;
      v16 = v42 + 1;
      if (v42 + 1 == v38)
        return;
    }
  }
}

void sub_21095FDDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108CEA5C(v1);
  _Unwind_Resume(a1);
}

void sub_21095FE10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  sub_2108CEA5C((uint64_t)va);
  sub_2108CEA5C(v12);
  _Unwind_Resume(a1);
}

unint64_t sub_21095FE2C(unint64_t *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;

  if (a3 != -1)
  {
    v5 = a3;
    if (a3 + a2 > *a1
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 474, (uint64_t)"offset + count <= size()", 24, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      goto LABEL_14;
    }
    if (!v5 || a1[1])
      return v5;
LABEL_12:
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))return v5;
LABEL_14:
    abort();
  }
  v6 = *a1;
  if (*a1 < a2)
  {
    if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 471, (uint64_t)"offset <= size()", 16, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      goto LABEL_14;
    }
    v6 = *a1;
  }
  v5 = v6 - a2;
  if (!a1[1] && v5)
    goto LABEL_12;
  return v5;
}

void sub_21095FF58(int a1@<W0>, uint64_t a2@<X8>)
{
  void *v4;
  void *__p[5];

  sub_2109643D8((uint64_t)__p);
  *(_QWORD *)a2 = 4;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0x6567616D69;
  *(_WORD *)(a2 + 39) = 5;
  *(_BYTE *)(a2 + 63) = 0;
  *(_QWORD *)(a2 + 64) = 0x3535335F726176;
  *(_BYTE *)(a2 + 87) = 7;
  *(_QWORD *)(a2 + 88) = 0x333332315F726176;
  *(_QWORD *)(a2 + 96) = 0;
  *(_WORD *)(a2 + 111) = 8;
  *(_BYTE *)(a2 + 135) = 0;
  sub_2109E8D28((std::string *)(a2 + 136));
  sub_2109657A8(a2 + 160, (uint64_t)__p);
  *(_DWORD *)(a2 + 200) = 1041865114;
  *(_QWORD *)(a2 + 208) = 8;
  *(_BYTE *)(a2 + 216) = 0;
  *(_DWORD *)(a2 + 220) = a1;
  *(_BYTE *)(a2 + 224) = 0;
  *(_BYTE *)(a2 + 240) = 0;
  *(_QWORD *)(a2 + 248) = 1;
  *(_BYTE *)(a2 + 256) = 1;
  *(_BYTE *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  sub_21095A1BC((int)__p, (void **)__p[2]);
  v4 = __p[0];
  __p[0] = 0;
  if (v4)
    operator delete(v4);
}

void sub_210960064(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 159) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v2 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v2 + 111) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((*(char *)(v2 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v2 + 112));
  if ((*(char *)(v2 + 111) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v2 + 87) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*(void **)(v2 + 88));
  if ((*(char *)(v2 + 87) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v2 + 63) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(v2 + 64));
  if ((*(char *)(v2 + 63) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v2 + 39) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v2 + 40));
  if ((*(char *)(v2 + 39) & 0x80000000) == 0)
  {
LABEL_7:
    sub_210964AE0((uint64_t)va);
    _Unwind_Resume(a1);
  }
LABEL_13:
  operator delete(*(void **)(v2 + 16));
  sub_210964AE0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210960120(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  sub_21095AEA4(&v16, (uint64_t)a2);
  v4 = v16;
  v16 = 0;
  v17 = v4;
  sub_2109602BC((uint64_t)a1, a2, &v17);
  v5 = v17;
  if (v17)
  {
    v6 = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v17 + 16) = 0;
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *(std::__shared_weak_count **)(v5 + 8);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    MEMORY[0x212BCC6FC](v5, 0x60C40CE5A77A8);
    v10 = v16;
    *a1 = &off_24CA80D40;
    v16 = 0;
    if (v10)
    {
      v11 = *(_QWORD *)(v10 + 16);
      *(_QWORD *)(v10 + 16) = 0;
      if (v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
      v12 = *(std::__shared_weak_count **)(v10 + 8);
      if (v12)
      {
        v13 = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      MEMORY[0x212BCC6FC](v10, 0x60C40CE5A77A8);
    }
    return a1;
  }
  else
  {
    *a1 = &off_24CA80D40;
    return a1;
  }
}

void sub_210960288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a10)
  {
    v11 = sub_210997024(a10);
    MEMORY[0x212BCC6FC](v11, 0x60C40CE5A77A8);
  }
  sub_21095B908(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_2109602BC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  unint64_t v25;
  int v26;
  void *memptr;

  *(_QWORD *)a1 = off_24CA80E90;
  sub_210964D18(a1 + 8, a2);
  v6 = *a3;
  *a3 = 0;
  *(_QWORD *)(a1 + 288) = v6;
  v7 = (_QWORD *)a2[22];
  if (v7)
  {
    v8 = 0;
    v9 = 0;
    do
    {
      v10 = v7[2];
      if (v8 < *(_DWORD *)(v10 + 4)
              * *(_DWORD *)v10
              * *(_DWORD *)(v10 + 8)
              * *(_DWORD *)(v10 + 12)
              * *(_DWORD *)(v10 + 16))
      {
        v9 = *(_QWORD *)(v10 + 4);
        v8 = *(_DWORD *)(v10 + 4)
           * *(_DWORD *)v10
           * *(_DWORD *)(v10 + 8)
           * *(_DWORD *)(v10 + 12)
           * *(_DWORD *)(v10 + 16);
      }
      v7 = (_QWORD *)*v7;
    }
    while (v7);
  }
  else
  {
    v9 = 0;
  }
  if (HIDWORD(v9))
    v11 = (_DWORD)v9 == 0;
  else
    v11 = 1;
  v12 = v11;
  if (v11)
    v13 = 0;
  else
    v13 = v9;
  v14 = v9 << 32;
  if (v11)
    v14 = 0;
  v15 = v14 | (v13 != 0);
  *(_QWORD *)(a1 + 296) = v13;
  *(_QWORD *)(a1 + 304) = v15;
  *(_BYTE *)(a1 + 312) = 0;
  *(_BYTE *)(a1 + 320) = 0;
  if (!(_DWORD)v13)
    v12 = 1;
  if (v12)
    v16 = 0;
  else
    v16 = v13;
  v17 = v14 >> 30;
  v18 = v17 - 1;
  v19 = HIDWORD(v16) * v17;
  v11 = (v17 & (v17 - 1)) == 0;
  v20 = 3;
  if (v11)
    v20 = v18;
  v21 = v20 | (v20 >> 1) | ((v20 | (v20 >> 1)) >> 2);
  v22 = v21 | (v21 >> 4) | ((v21 | (v21 >> 4)) >> 8);
  v23 = v22 | (v22 >> 16) | ((v22 | (v22 >> 16)) >> 32);
  if (v23 + 1 > 8)
    v24 = v23 + 1;
  else
    v24 = 8;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 344) = v24;
  v25 = v19 & 0x3FFFFFFFCLL;
  *(_QWORD *)(a1 + 328) = v19 & 0x3FFFFFFFCLL;
  if ((v19 & 0x3FFFFFFFCLL) != 0)
  {
    memptr = 0;
    v26 = malloc_type_posix_memalign(&memptr, v24, v19 & 0x3FFFFFFFCLL, 0x1F88E90uLL);
    if (v26)
      sub_2109E756C(v26, *(_QWORD *)(a1 + 344), v25);
    *(_QWORD *)(a1 + 336) = memptr;
  }
  *(_QWORD *)(a1 + 352) = v16;
  *(_QWORD *)(a1 + 360) = 4 * v15;
  return a1;
}

void sub_210960448(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_21095B908(v2);
  sub_21095A0E8(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_210960464(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_24CA80E90;
  v2 = (void *)a1[42];
  if (v2)
    free(v2);
  a1[42] = 0;
  v3 = a1[36];
  a1[36] = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(std::__shared_weak_count **)(v3 + 8);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    MEMORY[0x212BCC6FC](v3, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  return a1;
}

_QWORD *sub_210960524(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_24CA80E90;
  v2 = (void *)a1[42];
  if (v2)
    free(v2);
  a1[42] = 0;
  v3 = a1[36];
  a1[36] = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(std::__shared_weak_count **)(v3 + 8);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    MEMORY[0x212BCC6FC](v3, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  return a1;
}

void sub_2109605E4(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_24CA80E90;
  v2 = (void *)a1[42];
  if (v2)
    free(v2);
  a1[42] = 0;
  v3 = a1[36];
  a1[36] = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(std::__shared_weak_count **)(v3 + 8);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    MEMORY[0x212BCC6FC](v3, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  JUMPOUT(0x212BCC6FCLL);
}

void sub_2109606B4(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  BOOL v6;
  float *v7;
  int64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  float *v13;
  _BYTE v14[12];
  uint64_t v15;

  sub_2108C2820(*a2, (uint64_t)&v13);
  v5 = *(_QWORD *)&v14[4];
  if (*(_DWORD *)&v14[4])
    v6 = HIDWORD(*(_QWORD *)&v14[4]) == 0;
  else
    v6 = 1;
  if (v6)
    v5 = 0;
  *(_QWORD *)&v11 = v13;
  *((_QWORD *)&v11 + 1) = v5;
  v12 = v15;
  if (HIDWORD(v5) * HIDWORD(v15) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210969084(&v11, 1, &v13, *(float *)(a1 + 208));
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v7 = v13;
  v8 = *(_QWORD *)v14 - (_QWORD)v13;
  if (*(float **)v14 != v13)
  {
    if (v8 < 0)
      sub_2108B327C();
    v9 = (char *)operator new(*(_QWORD *)v14 - (_QWORD)v13);
    *(_QWORD *)a3 = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a3 + 16) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a3 + 8) = v10;
  }
  *(_OWORD *)(a3 + 24) = v11;
  *(_QWORD *)(a3 + 40) = v12;
  if (v7)
  {
    *(_QWORD *)v14 = v7;
    operator delete(v7);
  }
}

void sub_2109607E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v14;
  void *v16;
  void *v17;

  v16 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v16;
    operator delete(v16);
    v17 = __p;
    if (!__p)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v17 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v17);
  _Unwind_Resume(exception_object);
}

void sub_21096081C(uint64_t a1@<X0>, int32x2_t *a2@<X1>, _QWORD *a3@<X2>, float32x2_t **a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  BOOL v11;
  _BOOL4 v12;
  int32x2_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  float32x2_t *v17;
  float32x2_t *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  __int128 v29;
  char *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  float64x2_t v37;
  float64x2_t v38;
  char *v39;
  int v40;
  float32x2_t v42;
  float32x2_t v43;
  int32x2_t v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  int v50;
  int v51;
  int v52;
  float v53;
  int v54;
  float v55;
  char *v56;
  int v57;
  float32x4_t *v58;
  uint64_t v59;
  BOOL v60;
  BOOL v61;
  BOOL v62;
  uint64_t v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  float v73;
  float v74;
  int v75;
  int v76;
  uint64_t v77;
  float32x4_t *v78;
  float32x4_t v79;
  float32x4_t v80;
  float32x4_t v81;
  void *__p;
  char *v85;
  __int128 v86;
  uint64_t v87;
  _OWORD v88[16];
  char **v89;
  _OWORD v90[2];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;

  if (*(_BYTE *)(a1 + 248)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 363, (uint64_t)"!m_param.op_desc_quant.has_value()", 34, (uint64_t)"Not implemented desc_quantization for float network.", 52, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_93;
  }
  sub_2108C2820(*a3 + 120, (uint64_t)v90);
  v7 = v91;
  v8 = DWORD2(v91);
  v9 = *(_QWORD *)&v90[0];
  _ZF = !HIDWORD(*(_QWORD *)((char *)v90 + 12)) || HIDWORD(v90[0]) == 0;
  v11 = _ZF || DWORD1(v90[1]) == 0;
  v12 = v11;
  if (v11)
    v13 = 0;
  else
    v13 = *(int32x2_t *)((char *)v90 + 12);
  v14 = v11 ? 0 : DWORD1(v90[1]);
  if ((_DWORD)v14 * DWORD2(v91) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_93:
    abort();
  }
  v15 = a4[1] - *a4;
  LODWORD(v89) = 0;
  v16 = 0x100000000;
  if (v12)
    v16 = 0;
  *(_QWORD *)&v90[0] = v16 | v14;
  BYTE8(v90[0]) = 0;
  BYTE12(v90[0]) = 0;
  LODWORD(v88[0]) = HIDWORD(v16);
  LODWORD(v86) = v14;
  sub_2109669A8((uint64_t)&v90[1], (unsigned int *)&v86, (int *)v88, 1, (const float *)&v89, 1, v16 >> 30);
  sub_2109666D8((char **)&__p, v15, (uint64_t)v90);
  if (*((_QWORD *)&v90[1] + 1))
    free(*((void **)&v90[1] + 1));
  v17 = *a4;
  v18 = a4[1];
  if (*a4 != v18 && !v12)
  {
    v33 = 0;
    __asm { FMOV            V2.2D, #1.0 }
    v37 = vdivq_f64(_Q2, vcvtq_f64_f32(vcvt_f32_u32((uint32x2_t)vadd_s32(a2[4], (int32x2_t)-1))));
    v38 = vcvtq_f64_f32(vcvt_f32_u32((uint32x2_t)vadd_s32(v13, (int32x2_t)-1)));
    v39 = (char *)__p;
    v40 = v14 - 1;
    __asm { FMOV            V6.2S, #1.0 }
    do
    {
      v42 = vcvt_f32_f64(vaddq_f64(vmulq_f64(vmulq_f64(v37, vcvtq_f64_f32(*v17)), v38), (float64x2_t)0));
      v43 = vadd_f32(vrndm_f32(v42), _D6);
      v44 = vcgt_f32(v43, _D6);
      if ((v44.i8[4] & 1) != 0)
        v45 = v43.f32[1];
      else
        v45 = 1.0;
      if ((float)((float)v13.u32[1] + -1.0) >= v43.f32[1])
        v46 = v45;
      else
        v46 = (float)v13.u32[1] + -1.0;
      v47 = v46 + -1.0;
      if ((v44.i8[0] & 1) != 0)
        v48 = v43.f32[0];
      else
        v48 = 1.0;
      if ((float)((float)v13.u32[0] + -1.0) >= v43.f32[0])
        v49 = v48;
      else
        v49 = (float)v13.u32[0] + -1.0;
      v50 = (unint64_t)(float)(v49 + -1.0) * v7;
      v51 = (unint64_t)v47 * HIDWORD(v7);
      v52 = (unint64_t)v49 * v7;
      v53 = (float)(v42.f32[0] - (float)(v49 + -1.0)) / (float)(v49 - (float)(v49 + -1.0));
      v54 = (unint64_t)v46 * HIDWORD(v7);
      v55 = (float)(v42.f32[1] - v47) / (float)(v46 - v47);
      v56 = &v39[48 * v33];
      v57 = *((_DWORD *)v56 + 1);
      v58 = (float32x4_t *)*((_QWORD *)v56 + 3);
      if (v14 >= 0x14)
      {
        v59 = 0;
        v60 = __CFADD__(v50 + v51, v40);
        v61 = __CFADD__(v52 + v51, v40);
        v62 = __CFADD__(v50 + v54, v40);
        if (__CFADD__(v52 + v54, v40) || v62 || v61 || v57 != 1 || v8 != 1 || v60 || (unint64_t)(v14 - 1) >> 32)
          goto LABEL_85;
        if ((unint64_t)v58 - v9 + -4 * (v52 + v54) >= 0x10
          && (unint64_t)v58 - v9 + -4 * (v50 + v54) >= 0x10
          && (unint64_t)v58 - v9 + -4 * (v52 + v51) >= 0x10
          && (unint64_t)v58 - v9 + -4 * (v50 + v51) >= 0x10)
        {
          v75 = v52;
          v76 = v50;
          v77 = v14 & 0xFFFFFFFC;
          v78 = v58;
          do
          {
            v79 = *(float32x4_t *)(v9 + 4 * (v51 + v76));
            v80 = *(float32x4_t *)(v9 + 4 * (v54 + v76));
            v81 = vaddq_f32(v79, vmulq_n_f32(vsubq_f32(*(float32x4_t *)(v9 + 4 * (v51 + v75)), v79), v53));
            *v78++ = vaddq_f32(v81, vmulq_n_f32(vsubq_f32(vaddq_f32(v80, vmulq_n_f32(vsubq_f32(*(float32x4_t *)(v9 + 4 * (v54 + v75)), v80), v53)), v81), v55));
            v76 += 4;
            v75 += 4;
            v77 -= 4;
          }
          while (v77);
          v59 = v14 & 0xFFFFFFFC;
          if (v59 == v14)
            goto LABEL_87;
          goto LABEL_85;
        }
      }
      v59 = 0;
LABEL_85:
      v66 = v14 - v59;
      v67 = v57 * v59;
      v68 = v52 + v54;
      v69 = v52 + v51;
      v70 = v50 + v54;
      v71 = v50 + v51;
      v72 = v8 * v59;
      do
      {
        v73 = *(float *)(v9 + 4 * (v71 + v72));
        v74 = v73 + (float)(v53 * (float)(*(float *)(v9 + 4 * (v69 + v72)) - v73));
        v58->f32[v67] = v74
                      + (float)(v55
                              * (float)((float)(*(float *)(v9 + 4 * (v70 + v72))
                                              + (float)(v53
                                                      * (float)(*(float *)(v9 + 4 * (v68 + v72))
                                                              - *(float *)(v9 + 4 * (v70 + v72)))))
                                      - v74));
        v67 += v57;
        v72 += v8;
        --v66;
      }
      while (v66);
LABEL_87:
      ++v17;
      ++v33;
    }
    while (v17 != v18);
  }
  v19 = (char *)__p;
  v20 = v85;
  v86 = 0uLL;
  v87 = 0;
  v21 = v85 - (_BYTE *)__p;
  if (v85 == __p)
  {
    v29 = 0uLL;
  }
  else
  {
    v22 = 0xAAAAAAAAAAAAAAABLL * (v21 >> 4);
    if (HIBYTE(v22))
      sub_2108B327C();
    *(_QWORD *)&v86 = operator new(0xAAAAAAAAAAAAAB00 * (v21 >> 4));
    *((_QWORD *)&v86 + 1) = v86;
    v87 = v86 + (v22 << 8);
    v89 = (char **)&v86;
    do
    {
      v103 = 0u;
      v104 = 0u;
      v101 = 0u;
      v102 = 0u;
      v99 = 0u;
      v100 = 0u;
      v97 = 0u;
      v98 = 0u;
      v95 = 0u;
      v96 = 0u;
      v93 = 0u;
      v94 = 0u;
      v91 = 0u;
      v92 = 0u;
      memset(v90, 0, sizeof(v90));
      v23 = (*((_DWORD *)v19 + 1) * *(_DWORD *)v19);
      if ((_DWORD)v23)
      {
        v24 = 0;
        v25 = *((_QWORD *)v19 + 3);
        v26 = 4 * v23;
        v27 = (*(_QWORD *)v19 >> 30) & 0x3FFFFFFFCLL;
        v28 = v90;
        do
        {
          *v28++ = *(_DWORD *)(v25 + v24);
          v24 += v27;
        }
        while (v26 != v24);
      }
      v88[13] = v102;
      v88[14] = v103;
      v88[15] = v104;
      v88[9] = v98;
      v88[10] = v99;
      v88[11] = v100;
      v88[12] = v101;
      v88[5] = v94;
      v88[6] = v95;
      v88[7] = v96;
      v88[8] = v97;
      v88[0] = v90[0];
      v88[1] = v90[1];
      v88[2] = v91;
      v88[3] = v92;
      v88[4] = v93;
      sub_210966BC4(&v89, v88);
      v19 += 48;
    }
    while (v19 != v20);
    v29 = v86;
    v21 = v87;
    v19 = (char *)__p;
  }
  *(_OWORD *)a5 = v29;
  *(_QWORD *)(a5 + 16) = v21;
  *(_DWORD *)(a5 + 24) = 2;
  *(_QWORD *)(a5 + 32) = 64;
  *(_DWORD *)(a5 + 40) = 2;
  if (v19)
  {
    v30 = v85;
    v31 = v19;
    if (v85 != v19)
    {
      do
      {
        v32 = (void *)*((_QWORD *)v30 - 3);
        if (v32)
          free(v32);
        *((_QWORD *)v30 - 3) = 0;
        v30 -= 48;
      }
      while (v30 != v19);
      v31 = __p;
    }
    v85 = v19;
    operator delete(v31);
  }
}

void sub_210960E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56)
{
  if (a56)
    free(a56);
  _Unwind_Resume(exception_object);
}

void sub_210960E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
  {
    a16 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_210960E4C(&a12);
  _Unwind_Resume(a1);
}

void **sub_210960E4C(void **a1)
{
  char *v2;
  char *v3;
  void *v4;
  void *v5;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        v5 = (void *)*((_QWORD *)v3 - 3);
        if (v5)
          free(v5);
        *((_QWORD *)v3 - 3) = 0;
        v3 -= 48;
      }
      while (v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_210960EC0(int a1@<W0>, uint64_t a2@<X8>)
{
  void *v4;
  void *__p[5];

  sub_2109643D8((uint64_t)__p);
  *(_QWORD *)a2 = 4;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0x6567616D69;
  *(_WORD *)(a2 + 39) = 5;
  *(_BYTE *)(a2 + 63) = 0;
  *(_QWORD *)(a2 + 64) = 0x3536335F726176;
  *(_BYTE *)(a2 + 87) = 7;
  strcpy((char *)(a2 + 88), "descriptors_1");
  *(_WORD *)(a2 + 102) = 0;
  *(_WORD *)(a2 + 111) = 13;
  *(_BYTE *)(a2 + 135) = 0;
  sub_2109E8A50((std::string *)(a2 + 136));
  sub_2109657A8(a2 + 160, (uint64_t)__p);
  *(_DWORD *)(a2 + 200) = 1041865114;
  *(_QWORD *)(a2 + 208) = 8;
  *(_BYTE *)(a2 + 216) = 0;
  *(_DWORD *)(a2 + 220) = a1;
  *(_BYTE *)(a2 + 224) = 0;
  *(_BYTE *)(a2 + 240) = 0;
  *(_QWORD *)(a2 + 248) = 1;
  *(_BYTE *)(a2 + 256) = 1;
  *(_BYTE *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  sub_21095A1BC((int)__p, (void **)__p[2]);
  v4 = __p[0];
  __p[0] = 0;
  if (v4)
    operator delete(v4);
}

void sub_210960FD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 159) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v2 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v2 + 111) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((*(char *)(v2 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v2 + 112));
  if ((*(char *)(v2 + 111) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v2 + 87) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*(void **)(v2 + 88));
  if ((*(char *)(v2 + 87) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v2 + 63) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(v2 + 64));
  if ((*(char *)(v2 + 63) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v2 + 39) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v2 + 40));
  if ((*(char *)(v2 + 39) & 0x80000000) == 0)
  {
LABEL_7:
    sub_210964AE0((uint64_t)va);
    _Unwind_Resume(a1);
  }
LABEL_13:
  operator delete(*(void **)(v2 + 16));
  sub_210964AE0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_210961094(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  sub_21095AEA4(&v16, (uint64_t)a2);
  v4 = v16;
  v16 = 0;
  v17 = v4;
  sub_2109602BC((uint64_t)a1, a2, &v17);
  v5 = v17;
  if (v17)
  {
    v6 = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v17 + 16) = 0;
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *(std::__shared_weak_count **)(v5 + 8);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    MEMORY[0x212BCC6FC](v5, 0x60C40CE5A77A8);
    v10 = v16;
    *a1 = &off_24CA80DB0;
    v16 = 0;
    if (v10)
    {
      v11 = *(_QWORD *)(v10 + 16);
      *(_QWORD *)(v10 + 16) = 0;
      if (v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
      v12 = *(std::__shared_weak_count **)(v10 + 8);
      if (v12)
      {
        v13 = (unint64_t *)&v12->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      MEMORY[0x212BCC6FC](v10, 0x60C40CE5A77A8);
    }
    return a1;
  }
  else
  {
    *a1 = &off_24CA80DB0;
    return a1;
  }
}

void sub_2109611FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a10)
  {
    v11 = sub_210997024(a10);
    MEMORY[0x212BCC6FC](v11, 0x60C40CE5A77A8);
  }
  sub_21095B908(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_210961230(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_24CA80E90;
  v2 = (void *)a1[42];
  if (v2)
    free(v2);
  a1[42] = 0;
  v3 = a1[36];
  a1[36] = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(std::__shared_weak_count **)(v3 + 8);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    MEMORY[0x212BCC6FC](v3, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  return a1;
}

void sub_2109612F0(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  *a1 = off_24CA80E90;
  v2 = (void *)a1[42];
  if (v2)
    free(v2);
  a1[42] = 0;
  v3 = a1[36];
  a1[36] = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(std::__shared_weak_count **)(v3 + 8);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    MEMORY[0x212BCC6FC](v3, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  JUMPOUT(0x212BCC6FCLL);
}

void sub_2109613C0(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  BOOL v6;
  float *v7;
  int64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  float *v13;
  _BYTE v14[12];
  uint64_t v15;

  sub_2108C2820(*a2, (uint64_t)&v13);
  v5 = *(_QWORD *)&v14[4];
  if (*(_DWORD *)&v14[4])
    v6 = HIDWORD(*(_QWORD *)&v14[4]) == 0;
  else
    v6 = 1;
  if (v6)
    v5 = 0;
  *(_QWORD *)&v11 = v13;
  *((_QWORD *)&v11 + 1) = v5;
  v12 = v15;
  if (HIDWORD(v5) * HIDWORD(v15) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210969084(&v11, 1, &v13, *(float *)(a1 + 208));
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v7 = v13;
  v8 = *(_QWORD *)v14 - (_QWORD)v13;
  if (*(float **)v14 != v13)
  {
    if (v8 < 0)
      sub_2108B327C();
    v9 = (char *)operator new(*(_QWORD *)v14 - (_QWORD)v13);
    *(_QWORD *)a3 = v9;
    v10 = &v9[8 * (v8 >> 3)];
    *(_QWORD *)(a3 + 16) = v10;
    memcpy(v9, v7, v8);
    *(_QWORD *)(a3 + 8) = v10;
  }
  *(_OWORD *)(a3 + 24) = v11;
  *(_QWORD *)(a3 + 40) = v12;
  if (v7)
  {
    *(_QWORD *)v14 = v7;
    operator delete(v7);
  }
}

void sub_2109614EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v14;
  void *v16;
  void *v17;

  v16 = *(void **)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v16;
    operator delete(v16);
    v17 = __p;
    if (!__p)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v17 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v17);
  _Unwind_Resume(exception_object);
}

void sub_210961528(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, float **a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  float *v18;
  float *v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  double v27;
  unint64_t v28;
  double v29;
  float v30;
  unint64_t v31;
  float v32;
  unint64_t v33;
  int v34;
  int v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  BOOL v41;
  BOOL v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  _OWORD *v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  void *__p;
  char *v52;
  _BYTE v53[24];
  void *v54;
  uint64_t v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;

  if (*(_BYTE *)(a1 + 248)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 414, (uint64_t)"!m_param.op_desc_quant.has_value()", 34, (uint64_t)"Not implemented desc_quantization for binary network.", 53, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_61;
  }
  sub_2108C2820(*a3 + 120, (uint64_t)v53);
  v8 = v55;
  v9 = v56;
  v10 = *(_QWORD *)v53;
  v11 = !HIDWORD(*(_QWORD *)&v53[12]) || *(_DWORD *)&v53[12] == 0;
  v12 = v11 || *(_DWORD *)&v53[20] == 0;
  v13 = v12;
  v14 = v12 ? 0 : *(_QWORD *)&v53[12];
  v15 = v12 ? 0 : *(unsigned int *)&v53[20];
  if ((_DWORD)v15 * v56 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_61:
    abort();
  }
  v16 = ((char *)a4[1] - (char *)*a4) >> 3;
  v57 = 0;
  v58 = v15;
  v17 = 0x100000000;
  if (v13)
    v17 = 0;
  *(_QWORD *)v53 = v17 | v15;
  v53[8] = 0;
  v53[12] = 0;
  v59 = HIDWORD(v17);
  sub_2109669A8((uint64_t)&v53[16], &v58, &v59, 1, (const float *)&v57, 1, v17 >> 30);
  sub_2109666D8((char **)&__p, v16, (uint64_t)v53);
  if (v54)
    free(v54);
  v18 = *a4;
  v19 = a4[1];
  if (*a4 != v19 && !v13)
  {
    v24 = 0;
    v25 = (char *)__p;
    v26 = (v14 - 1);
    v27 = 1.0 / (float)(*(_DWORD *)(a2 + 32) - 1);
    v28 = (HIDWORD(v14) - 1);
    v29 = 1.0 / (float)(*(_DWORD *)(a2 + 36) - 1);
    do
    {
      v30 = v27 * *v18 * (float)v26 + 0.0;
      v31 = vcvtas_u32_f32(v30);
      v32 = v29 * v18[1] * (float)v28 + 0.0;
      v33 = vcvtas_u32_f32(v32);
      if (v26 < v31)
        LODWORD(v31) = v14 - 1;
      if (v28 < v33)
        LODWORD(v33) = HIDWORD(v14) - 1;
      v34 = v31 * v8;
      v35 = v33 * HIDWORD(v8);
      v36 = &v25[48 * v24];
      v37 = *((_DWORD *)v36 + 1);
      v38 = *((_QWORD *)v36 + 3);
      if (v15 >= 0x18)
      {
        v39 = 0;
        v40 = v34 + v35;
        v41 = __CFADD__(v34 + v35, v15 - 1);
        v42 = v37 == 1 && v9 == 1;
        if (!v42 || v41 || (unint64_t)(v15 - 1) >> 32)
          goto LABEL_53;
        if (v38 - (v10 + 4 * (unint64_t)(v34 + v35)) >= 0x20)
        {
          v46 = (_OWORD *)(v38 + 16);
          v47 = v15 & 0xFFFFFFF8;
          do
          {
            v48 = (_OWORD *)(v10 + 4 * v40);
            v49 = v48[1];
            *(v46 - 1) = *v48;
            *v46 = v49;
            v46 += 2;
            v40 += 8;
            v47 -= 8;
          }
          while (v47);
          v39 = v15 & 0xFFFFFFF8;
          if (v39 == v15)
            goto LABEL_55;
          goto LABEL_53;
        }
      }
      v39 = 0;
LABEL_53:
      v43 = v15 - v39;
      v44 = v37 * v39;
      v45 = v34 + v9 * v39 + v35;
      do
      {
        *(_DWORD *)(v38 + 4 * v44) = *(_DWORD *)(v10 + 4 * v45);
        v44 += v37;
        v45 += v9;
        --v43;
      }
      while (v43);
LABEL_55:
      v18 += 2;
      ++v24;
    }
    while (v18 != v19);
  }
  sub_2109618D4((char ***)v53, (uint64_t)__p, (uint64_t)v52);
  *(_OWORD *)a5 = *(_OWORD *)v53;
  *(_QWORD *)(a5 + 16) = *(_QWORD *)&v53[16];
  *(_DWORD *)(a5 + 24) = 1;
  *(_QWORD *)(a5 + 32) = 64;
  *(_DWORD *)(a5 + 40) = 1;
  v20 = (char *)__p;
  if (__p)
  {
    v21 = v52;
    v22 = __p;
    if (v52 != __p)
    {
      do
      {
        v23 = (void *)*((_QWORD *)v21 - 3);
        if (v23)
          free(v23);
        *((_QWORD *)v21 - 3) = 0;
        v21 -= 48;
      }
      while (v21 != v20);
      v22 = __p;
    }
    v52 = v20;
    operator delete(v22);
  }
}

void sub_2109618A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_210960E4C((void **)va);
  _Unwind_Resume(a1);
}

void sub_2109618BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (a16)
    free(a16);
  _Unwind_Resume(exception_object);
}

char ***sub_2109618D4(char ***result, uint64_t a2, uint64_t a3)
{
  char ***v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char **v17;
  _OWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v3 = result;
  v23 = *MEMORY[0x24BDAC8D0];
  v15 = 0uLL;
  v16 = 0;
  v4 = a3 - a2;
  if (a3 == a2)
  {
    v14 = 0uLL;
  }
  else
  {
    v5 = 0xAAAAAAAAAAAAAAABLL * (v4 >> 4);
    if (v5 >> 58)
      sub_2108B327C();
    v7 = a2;
    *(_QWORD *)&v15 = operator new(0xAAAAAAAAAAAAAAC0 * (v4 >> 4));
    *((_QWORD *)&v15 + 1) = v15;
    v16 = v15 + (v5 << 6);
    v17 = (char **)&v15;
    do
    {
      v21 = 0u;
      v22 = 0u;
      v19 = 0u;
      v20 = 0u;
      v8 = (*(_DWORD *)(v7 + 4) * *(_DWORD *)v7);
      if ((_DWORD)v8)
      {
        v9 = 0;
        v10 = *(_QWORD *)(v7 + 24);
        v11 = 4 * v8;
        v12 = (*(_QWORD *)v7 >> 30) & 0x3FFFFFFFCLL;
        v13 = &v19;
        do
        {
          *(_BYTE *)v13 = (int)*(float *)(v10 + v9);
          v13 = (__int128 *)((char *)v13 + 1);
          v9 += v12;
        }
        while (v11 != v9);
      }
      v18[0] = v19;
      v18[1] = v20;
      v18[2] = v21;
      v18[3] = v22;
      result = sub_210966D7C(&v17, v18);
      v7 += 48;
    }
    while (v7 != a3);
    v14 = v15;
    v4 = v16;
  }
  *(_OWORD *)v3 = v14;
  v3[2] = (char **)v4;
  return result;
}

void sub_210961A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_210961A2C(int a1@<W0>, uint64_t a2@<X8>)
{
  void *v4;
  void *__p[5];

  sub_2109643D8((uint64_t)__p);
  *(_QWORD *)a2 = 4;
  *(_DWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0x6567616D69;
  *(_WORD *)(a2 + 39) = 5;
  *(_BYTE *)(a2 + 63) = 0;
  *(_QWORD *)(a2 + 64) = 0x7365726F6373;
  *(_BYTE *)(a2 + 87) = 6;
  strcpy((char *)(a2 + 88), "local_descriptor_map");
  *(_WORD *)(a2 + 111) = 20;
  *(_BYTE *)(a2 + 135) = 0;
  sub_2109E8478((std::string *)(a2 + 136));
  sub_2109657A8(a2 + 160, (uint64_t)__p);
  *(_DWORD *)(a2 + 200) = 1000593162;
  *(_QWORD *)(a2 + 208) = 8;
  *(_BYTE *)(a2 + 216) = 1;
  *(_DWORD *)(a2 + 220) = a1;
  *(_OWORD *)(a2 + 224) = *(_OWORD *)"\x1B\n1B";
  *(_BYTE *)(a2 + 240) = 1;
  *(_QWORD *)(a2 + 248) = 1;
  *(_BYTE *)(a2 + 256) = 1;
  *(_BYTE *)(a2 + 264) = 0;
  *(_QWORD *)(a2 + 272) = 0;
  sub_21095A1BC((int)__p, (void **)__p[2]);
  v4 = __p[0];
  __p[0] = 0;
  if (v4)
    operator delete(v4);
}

void sub_210961B60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  va_list va;

  va_start(va, a2);
  if (*(char *)(v2 + 159) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v2 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v2 + 111) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((*(char *)(v2 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v2 + 112));
  if ((*(char *)(v2 + 111) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v2 + 87) & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*(void **)(v2 + 88));
  if ((*(char *)(v2 + 87) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v2 + 63) & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  operator delete(*(void **)(v2 + 64));
  if ((*(char *)(v2 + 63) & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v2 + 39) & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v2 + 40));
  if ((*(char *)(v2 + 39) & 0x80000000) == 0)
  {
LABEL_7:
    sub_210964AE0((uint64_t)va);
    _Unwind_Resume(a1);
  }
LABEL_13:
  operator delete(*(void **)(v2 + 16));
  sub_210964AE0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210961C1C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v9[35];
  uint64_t v10;

  sub_210961A2C(a2, (uint64_t)v9);
  sub_21095AEA4(&v10, (uint64_t)v9);
  sub_210961D20(a1, v9, &v10);
  v3 = v10;
  v10 = 0;
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *(std::__shared_weak_count **)(v3 + 8);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    MEMORY[0x212BCC6FC](v3, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)v9);
  return a1;
}

void sub_210961CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_21095B908((uint64_t *)(v9 - 40));
  sub_21095A0E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_210961D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21095A0E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_210961D20(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _QWORD *v11;
  unsigned int v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  _DWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  BOOL v22;
  BOOL v23;
  unint64_t StatusReg;
  unint64_t v25;
  unsigned int v26;
  _BOOL8 v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  size_t v39;
  int v40;
  unint64_t v41;
  uint64_t v43;
  void *memptr;

  v5 = *a3;
  *a3 = 0;
  v43 = v5;
  sub_2109602BC(a1, a2, &v43);
  v6 = v43;
  if (v43)
  {
    v7 = *(_QWORD *)(v43 + 16);
    *(_QWORD *)(v43 + 16) = 0;
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *(std::__shared_weak_count **)(v6 + 8);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    MEMORY[0x212BCC6FC](v6, 0x60C40CE5A77A8);
  }
  *(_QWORD *)a1 = &off_24CA80E20;
  v11 = (_QWORD *)a2[22];
  if (v11)
  {
    v12 = 0;
    LODWORD(v13) = 0;
    v14 = 0;
    v15 = 0;
    v16 = a2[26];
    do
    {
      v17 = (_DWORD *)v11[2];
      v18 = v17[1];
      v19 = v17[2];
      v20 = v18 * *v17 * v19 * v17[3] * v17[4];
      if (v12 < v20)
      {
        v13 = v18 / v16;
        v15 = v16 * v16 + 1;
        v12 = v20;
        v14 = v19 / v16;
      }
      v11 = (_QWORD *)*v11;
    }
    while (v11);
  }
  else
  {
    v15 = 0;
    v14 = 0;
    LODWORD(v13) = 0;
  }
  v21 = v13 | (v14 << 32);
  if ((_DWORD)v13)
    v22 = (_DWORD)v14 == 0;
  else
    v22 = 1;
  v23 = v22 || v15 == 0;
  StatusReg = _ReadStatusReg(ARM64_SYSREG(3, 3, 4, 2, 0));
  if (v23)
    v25 = 0;
  else
    v25 = v21;
  if (v23)
  {
    v15 = 0;
    v26 = 0;
  }
  else
  {
    v26 = HIDWORD(v25) * v25;
  }
  v27 = (_DWORD)v25 != 0;
  if (HIDWORD(v25))
    v28 = v25 << 32;
  else
    v28 = 0;
  if (HIDWORD(v25))
    v29 = v25 == 0;
  else
    v29 = 1;
  v30 = v28 | v27;
  *(_QWORD *)(a1 + 368) = v25;
  *(_DWORD *)(a1 + 376) = v15;
  *(_QWORD *)(a1 + 380) = v28 | v27;
  *(_DWORD *)(a1 + 388) = v26;
  *(_BYTE *)(a1 + 392) = 0;
  *(_BYTE *)(a1 + 404) = 0;
  _WriteStatusReg(ARM64_SYSREG(3, 3, 4, 2, 0), StatusReg);
  if (HIDWORD(v25))
    v31 = v29;
  else
    v31 = 1;
  if (v31)
    v32 = 0;
  else
    v32 = v15;
  v33 = 4 * v26;
  v34 = v33 - 1;
  v22 = (v33 & (v33 - 1)) == 0;
  v35 = 3;
  if (v22)
    v35 = v34;
  v36 = v35 | (v35 >> 1) | ((v35 | (v35 >> 1)) >> 2);
  v37 = v36 | (v36 >> 4) | ((v36 | (v36 >> 4)) >> 8);
  v38 = v37 | (v37 >> 16) | ((v37 | (v37 >> 16)) >> 32);
  if (v38 + 1 > 8)
    v39 = v38 + 1;
  else
    v39 = 8;
  *(_QWORD *)(a1 + 408) = 4 * v32 * v26;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 424) = v39;
  if (v32 * v26)
  {
    memptr = 0;
    v40 = malloc_type_posix_memalign(&memptr, v39, 4 * v32 * v26, 0x1F88E90uLL);
    if (v40)
      sub_2109E756C(v40, *(_QWORD *)(a1 + 424), 4 * v32 * v26);
    *(_QWORD *)(a1 + 416) = memptr;
  }
  if (v31)
    v41 = 0;
  else
    v41 = v25;
  *(_QWORD *)(a1 + 432) = v41;
  *(_DWORD *)(a1 + 440) = v32;
  *(_QWORD *)(a1 + 444) = 4 * v30;
  *(_DWORD *)(a1 + 452) = 4 * v26;
  return a1;
}

void sub_210961F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21095B908(&a9);
  _Unwind_Resume(a1);
}

void sub_210961FA0(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_210960464(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_210961FB4(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  *a1 = &off_24CA80E20;
  v2 = (void *)a1[52];
  if (v2)
    free(v2);
  a1[52] = 0;
  *a1 = off_24CA80E90;
  v3 = (void *)a1[42];
  if (v3)
    free(v3);
  a1[42] = 0;
  v4 = a1[36];
  a1[36] = 0;
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0;
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *(std::__shared_weak_count **)(v4 + 8);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    MEMORY[0x212BCC6FC](v4, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  return a1;
}

void sub_210962090(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  *a1 = &off_24CA80E20;
  v2 = (void *)a1[52];
  if (v2)
    free(v2);
  a1[52] = 0;
  *a1 = off_24CA80E90;
  v3 = (void *)a1[42];
  if (v3)
    free(v3);
  a1[42] = 0;
  v4 = a1[36];
  a1[36] = 0;
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v4 + 16) = 0;
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *(std::__shared_weak_count **)(v4 + 8);
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    MEMORY[0x212BCC6FC](v4, 0x60C40CE5A77A8);
  }
  sub_21095A0E8((uint64_t)(a1 + 1));
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21096217C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v7;
  BOOL v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  float v21;
  float *v22;
  int64_t v23;
  char *v24;
  char *v25;
  float *v26;
  float *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _BYTE v31[24];
  _QWORD v32[2];
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;

  sub_2108C2820(*a3, (uint64_t)&v36);
  if (HIDWORD(*(_QWORD *)((char *)&v37 + 4)))
    v7 = DWORD1(v37) == 0;
  else
    v7 = 1;
  v8 = v7 || HIDWORD(v37) == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = *(_QWORD *)((char *)&v37 + 4);
  if (v8)
    v11 = 0;
  else
    v11 = HIDWORD(v37);
  v32[0] = v36;
  v32[1] = v10;
  v33 = v11;
  v34 = v39;
  v35 = v40;
  if (v11 * v40 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_49;
  }
  if ((_DWORD)v10)
    v12 = v9;
  else
    v12 = 1;
  v13 = v12 == 0;
  if (v12)
    v14 = 0;
  else
    v14 = v10;
  if (v13)
    v15 = v11;
  else
    v15 = 0;
  v16 = HIDWORD(v14) * v14;
  if (!v13)
    v16 = 0;
  v17 = HIDWORD(v14) ? v14 << 32 : 0;
  v30 = *(_QWORD *)(a1 + 416);
  *(_QWORD *)v31 = v14;
  *(_DWORD *)&v31[8] = v15;
  *(_QWORD *)&v31[12] = v17 | ((_DWORD)v14 != 0);
  *(_DWORD *)&v31[20] = v16;
  if (v16 * v15 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_49;
  }
  if (*(_DWORD *)(a2 + 36))
    v18 = *(_DWORD *)(a2 + 32) == 0;
  else
    v18 = 1;
  v19 = *(_QWORD *)(a2 + 32);
  if (v18)
    v19 = 0;
  v20 = 0x100000000;
  if (v19 > 0x100000000)
    v20 = v19;
  v28 = *(_QWORD *)(a1 + 336);
  *(_QWORD *)&v29 = v19;
  *((_QWORD *)&v29 + 1) = ((_DWORD)v19 != 0) | (unint64_t)(v20 << 32);
  if (HIDWORD(v19) * (_DWORD)v20 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_49:
    abort();
  }
  v21 = *(float *)(a1 + 208);
  sub_210968594(&v30, v32);
  v36 = v30;
  v37 = *(_OWORD *)v31;
  v38 = *(_QWORD *)&v31[16];
  v41 = 8;
  sub_210968DA8(&v28, &v36, &v41);
  v36 = v28;
  v37 = v29;
  sub_210969084((__int128 *)&v36, 1, &v26, v21);
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  v22 = v26;
  v23 = (char *)v27 - (char *)v26;
  if (v27 != v26)
  {
    if (v23 < 0)
      sub_2108B327C();
    v24 = (char *)operator new((char *)v27 - (char *)v26);
    *(_QWORD *)a4 = v24;
    v25 = &v24[8 * (v23 >> 3)];
    *(_QWORD *)(a4 + 16) = v25;
    memcpy(v24, v22, v23);
    *(_QWORD *)(a4 + 8) = v25;
  }
  *(_QWORD *)(a4 + 24) = v28;
  *(_OWORD *)(a4 + 32) = v29;
  if (v22)
  {
    v27 = v22;
    operator delete(v22);
  }
}

void sub_210962440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;
  void *v13;
  void *v14;

  v13 = *(void **)v11;
  if (*(_QWORD *)v11)
  {
    *(_QWORD *)(v11 + 8) = v13;
    operator delete(v13);
    v14 = __p;
    if (!__p)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v14 = __p;
    if (!__p)
      goto LABEL_3;
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_21096247C(uint64_t a1@<X0>, int32x2_t *a2@<X1>, _QWORD *a3@<X2>, float32x2_t **a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v12;
  int v13;
  int32x2_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int32x2_t v18;
  int32x2_t v19;
  float32x2_t *v20;
  float32x2_t *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  unint64_t v26;
  float32x2_t *v27;
  float32x2_t *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  float64x2_t v35;
  float64x2_t v36;
  char *v37;
  int v38;
  uint64_t v39;
  float32x4_t v40;
  float32x4_t v41;
  float32x2_t v43;
  float32x2_t v44;
  int32x2_t v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  int v51;
  int v52;
  int v53;
  float v54;
  int v55;
  float v56;
  char *v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  float v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  BOOL v74;
  BOOL v75;
  BOOL v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  BOOL v90;
  BOOL v91;
  BOOL v92;
  BOOL v93;
  BOOL v94;
  BOOL v95;
  BOOL v96;
  const float *v98;
  float32x4_t v99;
  const float *v100;
  float32x4_t v101;
  int v102;
  int v103;
  uint64_t v104;
  float32x4_t *v105;
  float32x4_t v106;
  float32x4_t v107;
  float32x4_t v108;
  float32x4_t v109;
  uint64_t v110;
  float64x2_t v112;
  float64x2_t v113;
  char *v114;
  int v115;
  float32x2_t v117;
  float32x2_t v118;
  int32x2_t v119;
  float v120;
  float v121;
  float v122;
  float v123;
  float v124;
  int v125;
  int v126;
  int v127;
  float v128;
  int v129;
  float v130;
  char *v131;
  int v132;
  float32x4_t *v133;
  uint64_t v134;
  BOOL v135;
  BOOL v136;
  BOOL v137;
  uint64_t v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  float v148;
  float v149;
  int v150;
  int v151;
  uint64_t v152;
  float32x4_t *v153;
  float32x4_t v154;
  float32x4_t v155;
  float32x4_t v156;
  int32x2_t v157;
  void *__p;
  void *v160;
  _BYTE v161[24];
  void *v162;
  uint64_t v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;

  sub_2108C2820(*a3 + 120, (uint64_t)v161);
  v8 = v163;
  v9 = v164;
  v10 = *(_QWORD *)v161;
  if (HIDWORD(*(_QWORD *)&v161[12]))
    _ZF = *(_DWORD *)&v161[12] == 0;
  else
    _ZF = 1;
  v12 = _ZF || *(_DWORD *)&v161[20] == 0;
  v13 = v12;
  if (v12)
    v14 = 0;
  else
    v14 = *(int32x2_t *)&v161[12];
  if (v12)
    v15 = 0;
  else
    v15 = *(unsigned int *)&v161[20];
  if ((_DWORD)v15 * v164 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v157 = v14;
  v16 = 0x100000000;
  if (v13)
    v16 = 0;
  if (*(_BYTE *)(a1 + 248))
  {
    v17 = a4[1] - *a4;
    v165 = 0;
    v166 = v15;
    *(_QWORD *)v161 = v16 | v15;
    v161[8] = 0;
    v161[12] = 0;
    v167 = HIDWORD(v16);
    sub_2109669A8((uint64_t)&v161[16], &v166, &v167, 1, (const float *)&v165, 1, v16 >> 30);
    sub_2109666D8((char **)&__p, v17, (uint64_t)v161);
    if (v162)
      free(v162);
    v20 = *a4;
    v21 = a4[1];
    if (*a4 == v21 || (v13 & 1) != 0)
    {
LABEL_25:
      sub_2109618D4((char ***)v161, (uint64_t)__p, (uint64_t)v160);
      v22 = __p;
      *(_OWORD *)a5 = *(_OWORD *)v161;
      *(_QWORD *)(a5 + 16) = *(_QWORD *)&v161[16];
      *(_DWORD *)(a5 + 24) = 1;
      *(_QWORD *)(a5 + 32) = 64;
      *(_DWORD *)(a5 + 40) = 1;
      if (!v22)
        return;
      v23 = (uint64_t)v160;
      v24 = v22;
      if (v160 == v22)
        goto LABEL_42;
      do
      {
        v25 = *(void **)(v23 - 24);
        if (v25)
          free(v25);
        *(_QWORD *)(v23 - 24) = 0;
        v23 -= 48;
      }
      while ((void *)v23 != v22);
      goto LABEL_41;
    }
    v31 = 0;
    __asm { FMOV            V2.2D, #1.0 }
    v35 = vdivq_f64(_Q2, vcvtq_f64_f32(vcvt_f32_u32((uint32x2_t)vadd_s32(a2[4], (int32x2_t)-1))));
    v36 = vcvtq_f64_f32(vcvt_f32_u32((uint32x2_t)vadd_s32(v157, (int32x2_t)-1)));
    *(float *)v18.i32 = (float)*(int *)(a1 + 240);
    *(float *)v19.i32 = (float)*(int *)(a1 + 244);
    v37 = (char *)__p;
    v38 = v15 - 1;
    v39 = v10 + 4 * v15;
    v40 = (float32x4_t)vdupq_lane_s32(v19, 0);
    v41 = (float32x4_t)vdupq_lane_s32(v18, 0);
    __asm { FMOV            V18.2S, #1.0 }
    while (1)
    {
      v43 = vcvt_f32_f64(vaddq_f64(vmulq_f64(vmulq_f64(v35, vcvtq_f64_f32(*v20)), v36), (float64x2_t)0));
      v44 = vadd_f32(vrndm_f32(v43), _D18);
      v45 = vcgt_f32(v44, _D18);
      v46 = (v45.i8[4] & 1) != 0 ? v44.f32[1] : 1.0;
      v47 = (float)((float)v157.u32[1] + -1.0) >= v44.f32[1] ? v46 : (float)v157.u32[1] + -1.0;
      v48 = v47 + -1.0;
      v49 = (v45.i8[0] & 1) != 0 ? v44.f32[0] : 1.0;
      v50 = (float)((float)v157.u32[0] + -1.0) >= v44.f32[0] ? v49 : (float)v157.u32[0] + -1.0;
      v51 = (unint64_t)(float)(v50 + -1.0) * v8;
      v52 = (unint64_t)v48 * HIDWORD(v8);
      v53 = (unint64_t)v50 * v8;
      v54 = (float)(v43.f32[0] - (float)(v50 + -1.0)) / (float)(v50 - (float)(v50 + -1.0));
      v55 = (unint64_t)v47 * HIDWORD(v8);
      v56 = (float)(v43.f32[1] - v48) / (float)(v47 - v48);
      v57 = &v37[48 * v31];
      v58 = *((_DWORD *)v57 + 1);
      v59 = *((_QWORD *)v57 + 3);
      if (v15 < 0x10)
        break;
      v60 = 0;
      v74 = __CFADD__(v51 + v52, v38);
      v75 = __CFADD__(v53 + v52, v38);
      v76 = __CFADD__(v51 + v55, v38);
      if (__CFADD__(v53 + v55, v38) || v76 || v75 || v58 != 1 || v9 != 1 || v74 || (unint64_t)(v15 - 1) >> 32)
        goto LABEL_59;
      v60 = 0;
      v77 = v59 + 4 * v15;
      v78 = 4 * (v53 + v55);
      v79 = v10 + v78;
      v80 = 4 * (v51 + v55);
      v81 = v10 + v80;
      v82 = v39 + v80;
      v83 = 4 * (v53 + v52);
      v84 = v10 + v83;
      v85 = v39 + v83;
      v86 = 4 * (v51 + v52);
      _CF = v59 >= v39 + v78;
      v87 = v10 + v86;
      v88 = v39 + v86;
      _CF = _CF || v79 >= v77;
      v90 = !_CF;
      v91 = v59 >= v82 || v81 >= v77;
      v92 = !v91;
      v93 = v59 >= v85 || v84 >= v77;
      v94 = !v93;
      v95 = v59 >= v88 || v87 >= v77;
      v96 = !v95;
      if (v59 < a1 + 240 && a1 + 232 < v77)
        goto LABEL_59;
      if (v90)
        goto LABEL_59;
      if (v92)
        goto LABEL_59;
      if (v94)
        goto LABEL_59;
      if (v96)
        goto LABEL_59;
      v98 = (const float *)(a1 + 232);
      v99 = vld1q_dup_f32(v98);
      v100 = (const float *)(a1 + 236);
      v101 = vld1q_dup_f32(v100);
      v102 = v53;
      v103 = v51;
      v104 = v15 & 0xFFFFFFFC;
      v105 = (float32x4_t *)v59;
      do
      {
        v106 = *(float32x4_t *)(v10 + 4 * (v52 + v103));
        v107 = *(float32x4_t *)(v10 + 4 * (v55 + v103));
        v108 = vaddq_f32(v106, vmulq_n_f32(vsubq_f32(*(float32x4_t *)(v10 + 4 * (v52 + v102)), v106), v54));
        v109 = vaddq_f32(v101, vmulq_f32(v99, vaddq_f32(v108, vmulq_n_f32(vsubq_f32(vaddq_f32(v107, vmulq_n_f32(vsubq_f32(*(float32x4_t *)(v10 + 4 * (v55 + v102)), v107), v54)), v108), v56))));
        *v105++ = vcvtq_f32_s32(vcvtq_s32_f32((float32x4_t)vbslq_s8((int8x16_t)vcgtq_f32(v109, v40), (int8x16_t)v40, vbslq_s8((int8x16_t)vcgtq_f32(v109, v41), (int8x16_t)v109, (int8x16_t)v41))));
        v103 += 4;
        v102 += 4;
        v104 -= 4;
      }
      while (v104);
      v60 = v15 & 0xFFFFFFFC;
      if (v60 != v15)
        goto LABEL_59;
LABEL_67:
      ++v20;
      ++v31;
      if (v20 == v21)
        goto LABEL_25;
    }
    v60 = 0;
LABEL_59:
    v61 = v15 - v60;
    v62 = v58 * v60;
    v63 = v53 + v55;
    v64 = v53 + v52;
    v65 = v51 + v55;
    v66 = v51 + v52;
    v67 = v9 * v60;
    do
    {
      v68 = *(float *)(v10 + 4 * (v66 + v67));
      v69 = *(float *)(v10 + 4 * (v65 + v67));
      v70 = v68 + (float)(v54 * (float)(*(float *)(v10 + 4 * (v64 + v67)) - v68));
      v71 = *(float *)(a1 + 236)
          + (float)(*(float *)(a1 + 232)
                  * (float)(v70
                          + (float)(v56
                                  * (float)((float)(v69
                                                  + (float)(v54
                                                          * (float)(*(float *)(v10 + 4 * (v63 + v67))
                                                                  - v69)))
                                          - v70))));
      if (v71 <= *(float *)v18.i32)
        v72 = *(float *)v18.i32;
      else
        v72 = v71;
      if (v71 <= *(float *)v19.i32)
        v73 = v72;
      else
        v73 = *(float *)v19.i32;
      *(float *)(v59 + 4 * v62) = (float)(int)v73;
      v62 += v58;
      v67 += v9;
      --v61;
    }
    while (v61);
    goto LABEL_67;
  }
  v26 = a4[1] - *a4;
  v165 = 0;
  v166 = v15;
  *(_QWORD *)v161 = v16 | v15;
  v161[8] = 0;
  v161[12] = 0;
  v167 = HIDWORD(v16);
  sub_2109669A8((uint64_t)&v161[16], &v166, &v167, 1, (const float *)&v165, 1, v16 >> 30);
  sub_2109666D8((char **)&__p, v26, (uint64_t)v161);
  if (v162)
    free(v162);
  v27 = *a4;
  v28 = a4[1];
  if (*a4 != v28 && (v13 & 1) == 0)
  {
    v110 = 0;
    __asm { FMOV            V2.2D, #1.0 }
    v112 = vdivq_f64(_Q2, vcvtq_f64_f32(vcvt_f32_u32((uint32x2_t)vadd_s32(a2[4], (int32x2_t)-1))));
    v113 = vcvtq_f64_f32(vcvt_f32_u32((uint32x2_t)vadd_s32(v14, (int32x2_t)-1)));
    v114 = (char *)__p;
    v115 = v15 - 1;
    __asm { FMOV            V6.2S, #1.0 }
    do
    {
      v117 = vcvt_f32_f64(vaddq_f64(vmulq_f64(vmulq_f64(v112, vcvtq_f64_f32(*v27)), v113), (float64x2_t)0));
      v118 = vadd_f32(vrndm_f32(v117), _D6);
      v119 = vcgt_f32(v118, _D6);
      if ((v119.i8[4] & 1) != 0)
        v120 = v118.f32[1];
      else
        v120 = 1.0;
      if ((float)((float)v14.u32[1] + -1.0) >= v118.f32[1])
        v121 = v120;
      else
        v121 = (float)v14.u32[1] + -1.0;
      v122 = v121 + -1.0;
      if ((v119.i8[0] & 1) != 0)
        v123 = v118.f32[0];
      else
        v123 = 1.0;
      if ((float)((float)v14.u32[0] + -1.0) >= v118.f32[0])
        v124 = v123;
      else
        v124 = (float)v14.u32[0] + -1.0;
      v125 = (unint64_t)(float)(v124 + -1.0) * v8;
      v126 = (unint64_t)v122 * HIDWORD(v8);
      v127 = (unint64_t)v124 * v8;
      v128 = (float)(v117.f32[0] - (float)(v124 + -1.0)) / (float)(v124 - (float)(v124 + -1.0));
      v129 = (unint64_t)v121 * HIDWORD(v8);
      v130 = (float)(v117.f32[1] - v122) / (float)(v121 - v122);
      v131 = &v114[48 * v110];
      v132 = *((_DWORD *)v131 + 1);
      v133 = (float32x4_t *)*((_QWORD *)v131 + 3);
      if (v15 >= 0x14)
      {
        v134 = 0;
        v135 = __CFADD__(v125 + v126, v115);
        v136 = __CFADD__(v127 + v126, v115);
        v137 = __CFADD__(v125 + v129, v115);
        if (__CFADD__(v127 + v129, v115)
          || v137
          || v136
          || v132 != 1
          || v9 != 1
          || v135
          || (unint64_t)(v15 - 1) >> 32)
        {
          goto LABEL_163;
        }
        if ((unint64_t)v133 - v10 + -4 * (v127 + v129) >= 0x10
          && (unint64_t)v133 - v10 + -4 * (v125 + v129) >= 0x10
          && (unint64_t)v133 - v10 + -4 * (v127 + v126) >= 0x10
          && (unint64_t)v133 - v10 + -4 * (v125 + v126) >= 0x10)
        {
          v150 = v127;
          v151 = v125;
          v152 = v15 & 0xFFFFFFFC;
          v153 = v133;
          do
          {
            v154 = *(float32x4_t *)(v10 + 4 * (v126 + v151));
            v155 = *(float32x4_t *)(v10 + 4 * (v129 + v151));
            v156 = vaddq_f32(v154, vmulq_n_f32(vsubq_f32(*(float32x4_t *)(v10 + 4 * (v126 + v150)), v154), v128));
            *v153++ = vaddq_f32(v156, vmulq_n_f32(vsubq_f32(vaddq_f32(v155, vmulq_n_f32(vsubq_f32(*(float32x4_t *)(v10 + 4 * (v129 + v150)), v155), v128)), v156), v130));
            v151 += 4;
            v150 += 4;
            v152 -= 4;
          }
          while (v152);
          v134 = v15 & 0xFFFFFFFC;
          if (v134 == v15)
            goto LABEL_165;
          goto LABEL_163;
        }
      }
      v134 = 0;
LABEL_163:
      v141 = v15 - v134;
      v142 = v132 * v134;
      v143 = v127 + v129;
      v144 = v127 + v126;
      v145 = v125 + v129;
      v146 = v125 + v126;
      v147 = v9 * v134;
      do
      {
        v148 = *(float *)(v10 + 4 * (v146 + v147));
        v149 = v148 + (float)(v128 * (float)(*(float *)(v10 + 4 * (v144 + v147)) - v148));
        v133->f32[v142] = v149
                        + (float)(v130
                                * (float)((float)(*(float *)(v10 + 4 * (v145 + v147))
                                                + (float)(v128
                                                        * (float)(*(float *)(v10 + 4 * (v143 + v147))
                                                                - *(float *)(v10 + 4 * (v145 + v147)))))
                                        - v149));
        v142 += v132;
        v147 += v9;
        --v141;
      }
      while (v141);
LABEL_165:
      ++v27;
      ++v110;
    }
    while (v27 != v28);
  }
  sub_2109618D4((char ***)v161, (uint64_t)__p, (uint64_t)v160);
  v22 = __p;
  *(_OWORD *)a5 = *(_OWORD *)v161;
  *(_QWORD *)(a5 + 16) = *(_QWORD *)&v161[16];
  *(_DWORD *)(a5 + 24) = 1;
  *(_QWORD *)(a5 + 32) = 64;
  *(_DWORD *)(a5 + 40) = 1;
  if (!v22)
    return;
  v29 = (uint64_t)v160;
  v24 = v22;
  if (v160 != v22)
  {
    do
    {
      v30 = *(void **)(v29 - 24);
      if (v30)
        free(v30);
      *(_QWORD *)(v29 - 24) = 0;
      v29 -= 48;
    }
    while ((void *)v29 != v22);
LABEL_41:
    v24 = __p;
  }
LABEL_42:
  v160 = v22;
  operator delete(v24);
}

void sub_210962DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_210960E4C((void **)va);
  _Unwind_Resume(a1);
}

void sub_210962DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  if (a22)
    free(a22);
  _Unwind_Resume(exception_object);
}

uint64_t sub_210962E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2108B3FF0((uint64_t)&v3, (uint64_t *)(**(_QWORD **)(a1 + 288) + 8));
  v1 = v3;
  sub_2108B55B4((uint64_t)&v3);
  return v1;
}

BOOL sub_210962E4C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  int v4;
  char *v5;
  _QWORD *v6;
  void **v7;
  void **v8;
  void *v9;
  void *v11;
  void *v12;
  char *v13;
  void *__p;
  void **v15;
  char v16;

  v3 = a1 + 21;
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 40))(a1);
  v5 = (char *)operator new(0x14uLL);
  v12 = v5 + 20;
  v13 = v5 + 20;
  *(_DWORD *)v5 = 1;
  *(_QWORD *)(v5 + 4) = *a2;
  *((_DWORD *)v5 + 3) = 1;
  *((_DWORD *)v5 + 4) = v4;
  v11 = v5;
  LOBYTE(__p) = 0;
  v16 = 0;
  v6 = sub_210988F20(v3, (unint64_t)&v11);
  if (v16)
  {
    v7 = (void **)__p;
    if (__p)
    {
      v8 = v15;
      v9 = __p;
      if (v15 != __p)
      {
        do
        {
          if (*((char *)v8 - 1) < 0)
            operator delete(*(v8 - 3));
          v8 -= 3;
        }
        while (v8 != v7);
        v9 = __p;
      }
      v15 = v7;
      operator delete(v9);
    }
  }
  if (v11)
  {
    v12 = v11;
    operator delete(v11);
  }
  return v6 != 0;
}

void sub_210962F34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_21095BC5C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_210962F48(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __int128 v7;
  int v8;
  int v9;
  char *v10;
  char *v11;
  char *v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[3];
  int v19;
  uint64_t v20;
  int v21;
  void *__p[3];
  void *v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;

  sub_2109631A0(&v26, a1, a2);
  (*(void (**)(void **__return_ptr, _QWORD *, uint64_t, char **))(*a1 + 80))(&v23, a1, a2, &v26);
  sub_2109637E4((char ***)__p, (uint64_t)v23, (uint64_t)v24, (uint64_t)&v25);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, char **, void **))(*a1 + 88))(v18, a1, a2, &v26, &v23);
  sub_210963920((char **)&v16, (uint64_t)__p);
  v6 = v17;
  v7 = v16;
  v17 = 0;
  v16 = 0uLL;
  *(_OWORD *)a3 = v7;
  *(_QWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 24) = 0;
  v8 = -1;
  *(_DWORD *)(a3 + 48) = -1;
  v9 = v19;
  if (v19 != -1)
  {
    ((void (*)(char *, uint64_t, _QWORD *))off_24CA82338[v19])(&v28, a3 + 24, v18);
    *(_DWORD *)(a3 + 48) = v9;
    v8 = v19;
  }
  *(_QWORD *)(a3 + 56) = v20;
  *(_DWORD *)(a3 + 64) = v21;
  *(_QWORD *)(a3 + 104) = 0;
  *(_DWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_DWORD *)(a3 + 96) = 0;
  if (v8 != -1)
    ((void (*)(__int128 *, _QWORD *))off_24CA81038[v8])(&v16, v18);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v23)
  {
    v24 = v23;
    operator delete(v23);
  }
  v10 = v26;
  if (v26)
  {
    v11 = v27;
    v12 = v26;
    if (v27 != v26)
    {
      do
      {
        if (*(v11 - 8))
        {
          v13 = (std::__shared_weak_count *)*((_QWORD *)v11 - 6);
          if (v13)
          {
            p_shared_owners = (unint64_t *)&v13->__shared_owners_;
            do
              v15 = __ldaxr(p_shared_owners);
            while (__stlxr(v15 - 1, p_shared_owners));
            if (!v15)
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
        }
        v11 -= 120;
      }
      while (v11 != v10);
      v12 = v26;
    }
    v27 = v10;
    operator delete(v12);
  }
}

void sub_210963120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,void *a21,uint64_t a22)
{
  uint64_t v22;
  void *v24;

  sub_2108CE6E8((uint64_t)&a12);
  if (__p)
  {
    a19 = (uint64_t)__p;
    operator delete(__p);
    v24 = a21;
    if (!a21)
    {
LABEL_3:
      sub_2108AE078((void **)(v22 - 64));
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v24 = a21;
    if (!a21)
      goto LABEL_3;
  }
  a22 = (uint64_t)v24;
  operator delete(v24);
  sub_2108AE078((void **)(v22 - 64));
  _Unwind_Resume(a1);
}

void sub_21096318C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108AE078((void **)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_2109631A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  int v7;
  char *v8;
  _QWORD *v9;
  void **v10;
  void **v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  char *v31;
  char *v32;
  void *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  int v43;
  const std::string::value_type *v44;
  std::string::size_type v45;
  std::string *v46;
  __int128 v47;
  void **v48;
  uint64_t v49;
  std::string v50;
  void *v51[2];
  std::__shared_weak_count *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  __int16 v57;
  void *v58;
  __int128 v59;
  void *__p;
  void *v61;
  char *v62;
  char v63;
  char v64;
  uint64_t (**v65)();
  char v66;
  std::__shared_weak_count *v67;
  __int128 __dst;
  void *v69;

  v6 = a2 + 21;
  v7 = (*(uint64_t (**)(_QWORD *))(*a2 + 40))(a2);
  v8 = (char *)operator new(0x14uLL);
  *(_QWORD *)&v59 = v8 + 20;
  *((_QWORD *)&v59 + 1) = v8 + 20;
  *(_DWORD *)v8 = 1;
  *(_QWORD *)(v8 + 4) = *(_QWORD *)(a3 + 32);
  *((_DWORD *)v8 + 3) = 1;
  *((_DWORD *)v8 + 4) = v7;
  v58 = v8;
  LOBYTE(__p) = 0;
  v63 = 0;
  v9 = sub_210988F20(v6, (unint64_t)&v58);
  if (!v9)
    sub_2108B307C("unordered_map::at: key not found");
  if (*((char *)v9 + 95) < 0)
  {
    sub_2108B314C(&__dst, (void *)v9[9], v9[10]);
  }
  else
  {
    __dst = *(_OWORD *)(v9 + 9);
    v69 = (void *)v9[11];
  }
  if (v63)
  {
    v10 = (void **)__p;
    if (__p)
    {
      v11 = (void **)v61;
      v12 = __p;
      if (v61 != __p)
      {
        do
        {
          if (*((char *)v11 - 1) < 0)
            operator delete(*(v11 - 3));
          v11 -= 3;
        }
        while (v11 != v10);
        v12 = __p;
      }
      v61 = v10;
      operator delete(v12);
    }
  }
  if (v58)
  {
    *(_QWORD *)&v59 = v58;
    operator delete(v58);
  }
  v13 = a2[36];
  v58 = off_24CA82900;
  if (SHIBYTE(v69) < 0)
  {
    sub_2108B314C(&v59, (void *)__dst, *((unint64_t *)&__dst + 1));
  }
  else
  {
    v59 = __dst;
    __p = v69;
  }
  (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, void **))(**(_QWORD **)(v13 + 16) + 48))(&v65, *(_QWORD *)(v13 + 16), &v58);
  v58 = off_24CA82900;
  if (SHIBYTE(__p) < 0)
  {
    operator delete((void *)v59);
    if (!v66)
      goto LABEL_24;
  }
  else if (!v66)
  {
    goto LABEL_24;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 563, (uint64_t)"ret_config == kml::MLResultCode::NoError", 40, (uint64_t)"Unable to set model configuration", 33, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_24:
  v14 = a2[36];
  v51[0] = &off_24CA79890;
  v15 = *(void **)(a3 + 8);
  v16 = *(std::__shared_weak_count **)(a3 + 16);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(p_shared_owners);
    while (__stxr(v18 + 1, p_shared_owners));
    v19 = *(_DWORD *)(a3 + 44);
    v21 = *(_QWORD *)(a3 + 24);
    v20 = *(_QWORD *)(a3 + 32);
    v22 = *(_WORD *)(a3 + 48);
    do
      v23 = __ldxr(p_shared_owners);
    while (__stxr(v23 + 1, p_shared_owners));
    do
      v24 = __ldxr(p_shared_owners);
    while (__stxr(v24 + 1, p_shared_owners));
  }
  else
  {
    v19 = *(_DWORD *)(a3 + 44);
    v21 = *(_QWORD *)(a3 + 24);
    v20 = *(_QWORD *)(a3 + 32);
    v22 = *(_WORD *)(a3 + 48);
  }
  v51[1] = v15;
  v52 = v16;
  v53 = v20;
  v54 = v19;
  v55 = v21;
  v56 = 1;
  v57 = v22;
  if (v16)
  {
    v25 = (unint64_t *)&v16->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v27 = __ldaxr(v25);
    while (__stlxr(v27 - 1, v25));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  sub_2109A96A8(*(_QWORD *)(v14 + 16), (uint64_t)v51, 0, 0, (uint64_t)&v58);
  v28 = v52;
  if (v52)
  {
    v29 = (unint64_t *)&v52->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if ((_BYTE)v59)
  {
    sub_21095C620((uint64_t *)&v50, "Error:");
    v43 = *(char *)(*((_QWORD *)&v59 + 1) + 23);
    if (v43 >= 0)
      v44 = (const std::string::value_type *)*((_QWORD *)&v59 + 1);
    else
      v44 = (const std::string::value_type *)**((_QWORD **)&v59 + 1);
    if (v43 >= 0)
      v45 = *(unsigned __int8 *)(*((_QWORD *)&v59 + 1) + 23);
    else
      v45 = *(_QWORD *)(*((_QWORD *)&v59 + 1) + 8);
    v46 = std::string::append(&v50, v44, v45);
    v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
    v52 = (std::__shared_weak_count *)v46->__r_.__value_.__r.__words[2];
    *(_OWORD *)v51 = v47;
    v46->__r_.__value_.__l.__size_ = 0;
    v46->__r_.__value_.__r.__words[2] = 0;
    v46->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v52) >= 0)
      v48 = v51;
    else
      v48 = (void **)v51[0];
    if (SHIBYTE(v52) >= 0)
      v49 = HIBYTE(v52);
    else
      v49 = (uint64_t)v51[1];
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 566, (uint64_t)&unk_210A01421, 0, (uint64_t)v48, v49, (void (*)(void **))sub_2109EDDB4);
    if (SHIBYTE(v52) < 0)
      operator delete(v51[0]);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    goto LABEL_93;
  }
  if (v64)
    goto LABEL_49;
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 568, (uint64_t)"ret.outputs.has_value()", 23, (uint64_t)"No error detected but output empty.", 35, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_93:
    abort();
  }
  if (!v64)
    sub_2108B1AA4();
LABEL_49:
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_210964FB4(a1, (uint64_t)v61, (uint64_t)v62, 0xEEEEEEEEEEEEEEEFLL * ((v62 - (_BYTE *)v61) >> 3));
  if (v64)
  {
    v31 = (char *)v61;
    if (v61)
    {
      v32 = v62;
      v33 = v61;
      if (v62 != v61)
      {
        do
        {
          if (*(v32 - 8))
          {
            v34 = (std::__shared_weak_count *)*((_QWORD *)v32 - 6);
            if (v34)
            {
              v35 = (unint64_t *)&v34->__shared_owners_;
              do
                v36 = __ldaxr(v35);
              while (__stlxr(v36 - 1, v35));
              if (!v36)
              {
                ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
                std::__shared_weak_count::__release_weak(v34);
              }
            }
          }
          v32 -= 120;
        }
        while (v32 != v31);
        v33 = v61;
      }
      v62 = v31;
      operator delete(v33);
    }
  }
  v58 = &off_24CA79A00;
  v37 = (std::__shared_weak_count *)__p;
  if (__p)
  {
    v38 = (unint64_t *)((char *)__p + 8);
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  v65 = &off_24CA79A00;
  v40 = v67;
  if (!v67)
    goto LABEL_71;
  v41 = (unint64_t *)&v67->__shared_owners_;
  do
    v42 = __ldaxr(v41);
  while (__stlxr(v42 - 1, v41));
  if (v42)
  {
LABEL_71:
    if ((SHIBYTE(v69) & 0x80000000) == 0)
      return;
    goto LABEL_72;
  }
  ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
  std::__shared_weak_count::__release_weak(v40);
  if (SHIBYTE(v69) < 0)
LABEL_72:
    operator delete((void *)__dst);
}

void sub_210963714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  sub_2108B77C8((uint64_t)&a27);
  sub_2108AB288((_QWORD *)(v33 - 128));
  if (*(char *)(v33 - 73) < 0)
  {
    operator delete(*(void **)(v33 - 96));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2109637D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_21095BC5C((uint64_t)va);
  _Unwind_Resume(a1);
}

char ***sub_2109637E4(char ***result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char ***v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  float v10;
  double v11;
  int v12;
  int v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  int v18;
  char **v19;

  v4 = result;
  v15 = 0uLL;
  v16 = 0;
  v5 = a3 - a2;
  if (a3 == a2)
  {
    v14 = 0uLL;
  }
  else
  {
    if ((unint64_t)v5 >= 0x6666666666666661)
      sub_2108CDFC4();
    v8 = a2;
    v9 = v5 >> 3;
    *(_QWORD *)&v15 = operator new(20 * (v5 >> 3));
    *((_QWORD *)&v15 + 1) = v15;
    v16 = v15 + 20 * v9;
    v19 = (char **)&v15;
    do
    {
      v10 = *(float *)(v8 + 4);
      LODWORD(v17) = *(_DWORD *)v8;
      *((float *)&v17 + 1) = v10;
      v11 = v10 + 0.5;
      v12 = *(_DWORD *)(a4 + 20);
      v13 = *(_DWORD *)(a4 + 16) * (unint64_t)(*(float *)&v17 + 0.5);
      *((_QWORD *)&v17 + 1) = 0x3F80000000000000;
      v18 = *(_DWORD *)(*(_QWORD *)a4 + 4 * (v13 + v12 * (unint64_t)v11));
      result = sub_2108CDFD8(&v19, &v17);
      v8 += 8;
    }
    while (v8 != a3);
    v14 = v15;
    v5 = v16;
  }
  *(_OWORD *)v4 = v14;
  v4[2] = (char **)v5;
  return result;
}

void sub_210963900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_210963920(char **a1, uint64_t a2)
{
  char *v4;
  char *v5;
  char *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  float v10;
  float v11;
  __int128 v12;
  int v13;
  float v14;
  float v15;
  unint64_t v16;
  char *v17;
  char *v18;
  float v19;
  unint64_t v20;
  float v21;
  float v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char *v28;
  float v29;
  __int128 v30;
  __int128 v31;
  char *v32;
  float v33;
  float v34;
  char *v35;
  unint64_t v36;
  float v37;
  float v38;
  __int128 v39;
  __int128 v40;
  float v41;
  float v42;
  float v43;
  char *v44;
  char *v45;
  float v46;
  float v47;
  __int128 v48;
  __int128 v49;
  int v50;
  __int128 v51;
  char *v52;
  char *v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  int v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;

  v4 = *(char **)a2;
  v5 = *(char **)(a2 + 8);
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)&v5[-*(_QWORD *)a2] >> 2) > 0x1000)
  {
    v6 = v4 + 81920;
    while (v5 != v6)
    {
      v7 = 0xCCCCCCCCCCCCCCCDLL * ((v5 - v4) >> 2);
      if (v7 < 2)
        break;
      if (v7 == 3)
      {
        v44 = v4 + 20;
        v45 = v5 - 20;
        v46 = *((float *)v4 + 9);
        v47 = *((float *)v5 - 1);
        if (v46 <= *((float *)v4 + 4))
        {
          if (v47 > v46)
          {
            v56 = *(_OWORD *)v44;
            v89 = *((_DWORD *)v4 + 9);
            v57 = *((_DWORD *)v5 - 1);
            *(_OWORD *)v44 = *(_OWORD *)v45;
            *((_DWORD *)v4 + 9) = v57;
            *((_DWORD *)v5 - 1) = v89;
            *(_OWORD *)v45 = v56;
            if (*((float *)v4 + 9) > *((float *)v4 + 4))
            {
              v90 = *((_DWORD *)v4 + 4);
              v74 = *(_OWORD *)v4;
              *(_OWORD *)v4 = *(_OWORD *)v44;
              *((_DWORD *)v4 + 4) = *((_DWORD *)v4 + 9);
              *(_OWORD *)v44 = v74;
              *((_DWORD *)v4 + 9) = v90;
            }
          }
        }
        else
        {
          if (v47 <= v46)
          {
            v91 = *((_DWORD *)v4 + 4);
            v75 = *(_OWORD *)v4;
            *(_OWORD *)v4 = *(_OWORD *)v44;
            *((_DWORD *)v4 + 4) = *((_DWORD *)v4 + 9);
            *(_OWORD *)v44 = v75;
            *((_DWORD *)v4 + 9) = v91;
            if (*((float *)v5 - 1) <= *((float *)v4 + 9))
              break;
            v49 = *(_OWORD *)v44;
            v50 = *((_DWORD *)v4 + 9);
            v58 = *((_DWORD *)v5 - 1);
            *(_OWORD *)v44 = *(_OWORD *)v45;
            *((_DWORD *)v44 + 4) = v58;
          }
          else
          {
            v86 = *((_DWORD *)v4 + 4);
            v71 = *(_OWORD *)v4;
            v48 = *(_OWORD *)v45;
            *((_DWORD *)v4 + 4) = *((_DWORD *)v5 - 1);
            *(_OWORD *)v4 = v48;
            v49 = v71;
            v50 = v86;
          }
          *((_DWORD *)v45 + 4) = v50;
          *(_OWORD *)v45 = v49;
        }
        break;
      }
      if (v7 == 2)
      {
        if (*((float *)v5 - 1) > *((float *)v4 + 4))
        {
          v87 = *((_DWORD *)v4 + 4);
          v72 = *(_OWORD *)v4;
          v51 = *(_OWORD *)(v5 - 20);
          *((_DWORD *)v4 + 4) = *((_DWORD *)v5 - 1);
          *(_OWORD *)v4 = v51;
          *((_DWORD *)v5 - 1) = v87;
          *(_OWORD *)(v5 - 20) = v72;
        }
        break;
      }
      if (v5 - v4 <= 159)
      {
        while (v4 != v5 - 20)
        {
          v52 = v4;
          v4 += 20;
          if (v52 != v5 && v4 != v5)
          {
            v53 = v4;
            v54 = v52;
            do
            {
              if (*((float *)v53 + 4) > *((float *)v54 + 4))
                v54 = v53;
              v53 += 20;
            }
            while (v53 != v5);
            if (v54 != v52)
            {
              v88 = *((_DWORD *)v52 + 4);
              v73 = *(_OWORD *)v52;
              v55 = *(_OWORD *)v54;
              *((_DWORD *)v52 + 4) = *((_DWORD *)v54 + 4);
              *(_OWORD *)v52 = v55;
              *((_DWORD *)v54 + 4) = v88;
              *(_OWORD *)v54 = v73;
            }
          }
        }
        break;
      }
      v8 = &v4[20 * (v7 >> 1)];
      v9 = v5 - 20;
      v10 = *((float *)v8 + 4);
      v11 = *((float *)v5 - 1);
      if (v10 <= *((float *)v4 + 4))
      {
        if (v11 <= v10)
        {
          v13 = 0;
          v14 = *((float *)v4 + 4);
          v15 = *((float *)v8 + 4);
          if (v14 <= v15)
            goto LABEL_28;
          goto LABEL_10;
        }
        v78 = *((_DWORD *)v8 + 4);
        v63 = *(_OWORD *)v8;
        v24 = *(_OWORD *)v9;
        *((_DWORD *)v8 + 4) = *((_DWORD *)v5 - 1);
        *(_OWORD *)v8 = v24;
        *((_DWORD *)v5 - 1) = v78;
        *(_OWORD *)v9 = v63;
        if (*((float *)v8 + 4) > *((float *)v4 + 4))
        {
          v79 = *((_DWORD *)v4 + 4);
          v64 = *(_OWORD *)v4;
          v25 = *(_OWORD *)v8;
          *((_DWORD *)v4 + 4) = *((_DWORD *)v8 + 4);
          *(_OWORD *)v4 = v25;
          *((_DWORD *)v8 + 4) = v79;
          *(_OWORD *)v8 = v64;
          v13 = 2;
          v14 = *((float *)v4 + 4);
          v15 = *((float *)v8 + 4);
          if (v14 <= v15)
            goto LABEL_28;
          goto LABEL_10;
        }
      }
      else
      {
        if (v11 > v10)
        {
          v76 = *((_DWORD *)v4 + 4);
          v61 = *(_OWORD *)v4;
          v12 = *(_OWORD *)v9;
          *((_DWORD *)v4 + 4) = *((_DWORD *)v5 - 1);
          *(_OWORD *)v4 = v12;
          *((_DWORD *)v5 - 1) = v76;
          *(_OWORD *)v9 = v61;
          v13 = 1;
          v14 = *((float *)v4 + 4);
          v15 = *((float *)v8 + 4);
          if (v14 <= v15)
            goto LABEL_28;
          goto LABEL_10;
        }
        v80 = *((_DWORD *)v4 + 4);
        v65 = *(_OWORD *)v4;
        v26 = *(_OWORD *)v8;
        *((_DWORD *)v4 + 4) = *((_DWORD *)v8 + 4);
        *(_OWORD *)v4 = v26;
        *((_DWORD *)v8 + 4) = v80;
        *(_OWORD *)v8 = v65;
        if (*((float *)v5 - 1) > *((float *)v8 + 4))
        {
          v81 = *((_DWORD *)v8 + 4);
          v66 = *(_OWORD *)v8;
          v27 = *(_OWORD *)v9;
          *((_DWORD *)v8 + 4) = *((_DWORD *)v5 - 1);
          *(_OWORD *)v8 = v27;
          *((_DWORD *)v5 - 1) = v81;
          *(_OWORD *)v9 = v66;
          v13 = 2;
          v14 = *((float *)v4 + 4);
          v15 = *((float *)v8 + 4);
          if (v14 <= v15)
            goto LABEL_28;
          goto LABEL_10;
        }
      }
      v13 = 1;
      v14 = *((float *)v4 + 4);
      v15 = *((float *)v8 + 4);
      if (v14 <= v15)
      {
LABEL_28:
        v28 = v5 - 20;
        while (1)
        {
          v16 = (unint64_t)(v28 - 20);
          if (v28 - 20 == v4)
            break;
          v29 = *((float *)v28 - 1);
          v28 -= 20;
          if (v29 > v15)
          {
            v82 = *((_DWORD *)v4 + 4);
            v67 = *(_OWORD *)v4;
            v30 = *(_OWORD *)v16;
            *((_DWORD *)v4 + 4) = *(_DWORD *)(v16 + 16);
            *(_OWORD *)v4 = v30;
            *(_DWORD *)(v16 + 16) = v82;
            *(_OWORD *)v16 = v67;
            ++v13;
            v17 = v4 + 20;
            if ((unint64_t)(v4 + 20) < v16)
              goto LABEL_11;
            goto LABEL_32;
          }
        }
        v35 = v4 + 20;
        if (v14 <= *((float *)v5 - 1))
        {
          if (v35 == v9)
            break;
          while (v14 <= *((float *)v35 + 4))
          {
            v35 += 20;
            if (v35 == v9)
              goto LABEL_90;
          }
          v84 = *((_DWORD *)v35 + 4);
          v69 = *(_OWORD *)v35;
          v39 = *(_OWORD *)v9;
          *((_DWORD *)v35 + 4) = *((_DWORD *)v5 - 1);
          *(_OWORD *)v35 = v39;
          v35 += 20;
          *((_DWORD *)v5 - 1) = v84;
          *(_OWORD *)v9 = v69;
        }
        if (v35 == v9)
          break;
        while (1)
        {
          v41 = *((float *)v4 + 4);
          v32 = v35 - 20;
          do
          {
            v42 = *((float *)v32 + 9);
            v32 += 20;
          }
          while (v41 <= v42);
          v35 = v32 + 20;
          do
          {
            v43 = *((float *)v9 - 1);
            v9 -= 20;
          }
          while (v41 > v43);
          if (v32 >= v9)
            break;
          v85 = *((_DWORD *)v32 + 4);
          v70 = *(_OWORD *)v32;
          v40 = *(_OWORD *)v9;
          *((_DWORD *)v32 + 4) = *((_DWORD *)v9 + 4);
          *(_OWORD *)v32 = v40;
          *((_DWORD *)v9 + 4) = v85;
          *(_OWORD *)v9 = v70;
        }
        if (v32 > v6)
          break;
        goto LABEL_66;
      }
LABEL_10:
      v16 = (unint64_t)(v5 - 20);
      v17 = v4 + 20;
      if (v4 + 20 >= v5 - 20)
      {
LABEL_32:
        v20 = (unint64_t)v17;
      }
      else
      {
LABEL_11:
        v18 = v17;
        while (1)
        {
          v19 = *((float *)v8 + 4);
          v20 = (unint64_t)(v18 - 20);
          do
          {
            v21 = *(float *)(v20 + 36);
            v20 += 20;
          }
          while (v21 > v19);
          v18 = (char *)(v20 + 20);
          do
          {
            v22 = *(float *)(v16 - 4);
            v16 -= 20;
          }
          while (v22 <= v19);
          if (v20 >= v16)
            break;
          v77 = *(_DWORD *)(v20 + 16);
          v62 = *(_OWORD *)v20;
          v23 = *(_OWORD *)v16;
          *(_DWORD *)(v20 + 16) = *(_DWORD *)(v16 + 16);
          *(_OWORD *)v20 = v23;
          *(_DWORD *)(v16 + 16) = v77;
          *(_OWORD *)v16 = v62;
          ++v13;
          if ((char *)v20 == v8)
            v8 = (char *)v16;
        }
      }
      if ((char *)v20 != v8 && *((float *)v8 + 4) > *(float *)(v20 + 16))
      {
        v83 = *(_DWORD *)(v20 + 16);
        v68 = *(_OWORD *)v20;
        v31 = *(_OWORD *)v8;
        *(_DWORD *)(v20 + 16) = *((_DWORD *)v8 + 4);
        *(_OWORD *)v20 = v31;
        *((_DWORD *)v8 + 4) = v83;
        *(_OWORD *)v8 = v68;
        ++v13;
      }
      if ((char *)v20 == v6)
        break;
      if (!v13)
      {
        if (v20 <= (unint64_t)v6)
        {
          v36 = v20 + 20;
          while ((char *)v36 != v5)
          {
            v37 = *(float *)(v36 + 16);
            v38 = *(float *)(v36 - 4);
            v36 += 20;
            if (v37 > v38)
              goto LABEL_38;
          }
        }
        else
        {
          while (v17 != (char *)v20)
          {
            v33 = *((float *)v17 + 4);
            v34 = *((float *)v17 - 1);
            v17 += 20;
            if (v33 > v34)
              goto LABEL_38;
          }
        }
        break;
      }
LABEL_38:
      if (v20 <= (unint64_t)v6)
      {
        v32 = (char *)(v20 + 20);
      }
      else
      {
        v5 = (char *)v20;
        v32 = v4;
      }
LABEL_66:
      v4 = v32;
    }
LABEL_90:
    v4 = *(char **)a2;
    v5 = *(char **)(a2 + 8);
    v59 = (uint64_t)&v5[-*(_QWORD *)a2];
    v60 = 0xCCCCCCCCCCCCCCCDLL * (v59 >> 2);
    if (v60 > 0xFFF)
    {
      if (v59 != 81920)
      {
        v5 = v4 + 81920;
        *(_QWORD *)(a2 + 8) = v4 + 81920;
      }
    }
    else
    {
      sub_210957CA4((char **)a2, 4096 - v60);
      v4 = *(char **)a2;
      v5 = *(char **)(a2 + 8);
    }
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = *(char **)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
}

void sub_210964040()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModel.cpp", 537, (uint64_t)&unk_210A01421, 0, (uint64_t)"ExtractLocalGlobalDescriptors is not implemented for DenseFeatModel", 67, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21096407C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v6;
  char *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *__p[3];
  void *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;

  sub_2109631A0(&v18, a1, a2);
  (*(void (**)(void **__return_ptr, _QWORD *, uint64_t, char **))(*a1 + 80))(&v15, a1, a2, &v18);
  sub_2109637E4((char ***)__p, (uint64_t)v15, (uint64_t)v16, (uint64_t)&v17);
  sub_210963920((char **)&v12, (uint64_t)__p);
  *(_OWORD *)a3 = v12;
  *(_QWORD *)(a3 + 16) = v13;
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v15)
  {
    v16 = v15;
    operator delete(v15);
  }
  v6 = v18;
  if (v18)
  {
    v7 = v19;
    v8 = v18;
    if (v19 != v18)
    {
      do
      {
        if (*(v7 - 8))
        {
          v9 = (std::__shared_weak_count *)*((_QWORD *)v7 - 6);
          if (v9)
          {
            p_shared_owners = (unint64_t *)&v9->__shared_owners_;
            do
              v11 = __ldaxr(p_shared_owners);
            while (__stlxr(v11 - 1, p_shared_owners));
            if (!v11)
            {
              ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
              std::__shared_weak_count::__release_weak(v9);
            }
          }
        }
        v7 -= 120;
      }
      while (v7 != v6);
      v8 = v18;
    }
    v19 = v6;
    operator delete(v8);
  }
}

void sub_2109641A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  uint64_t v17;
  void *v19;

  if (__p)
  {
    operator delete(__p);
    v19 = a16;
    if (!a16)
    {
LABEL_3:
      sub_2108AE078((void **)(v17 - 56));
      _Unwind_Resume(a1);
    }
  }
  else
  {
    v19 = a16;
    if (!a16)
      goto LABEL_3;
  }
  operator delete(v19);
  sub_2108AE078((void **)(v17 - 56));
  _Unwind_Resume(a1);
}

void sub_210964200(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108AE078((void **)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_210964214(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p[2];
  uint64_t v18;
  void *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;

  sub_2109631A0(&v19, a1, a2);
  v21 = 0uLL;
  v22 = 0;
  if (a3)
  {
    if (a3 >> 61)
      sub_2108B327C();
    *(_QWORD *)&v21 = operator new(8 * a3);
    *((_QWORD *)&v21 + 1) = v21;
    v22 = v21 + 8 * a3;
    v24 = (void **)&v21;
    v8 = 20 * a3;
    do
    {
      v23 = *a4;
      sub_2109661B4(&v24, &v23);
      a4 = (uint64_t *)((char *)a4 + 20);
      v8 -= 20;
    }
    while (v8);
    v9 = v21;
    v10 = v22;
  }
  else
  {
    v10 = 0;
    v9 = 0uLL;
  }
  *(_OWORD *)__p = v9;
  v18 = v10;
  (*(void (**)(_QWORD *, uint64_t, void **, void **))(*a1 + 88))(a1, a2, &v19, __p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  v11 = (char *)v19;
  if (v19)
  {
    v12 = v20;
    v13 = v19;
    if (v20 != v19)
    {
      do
      {
        if (*(v12 - 8))
        {
          v14 = (std::__shared_weak_count *)*((_QWORD *)v12 - 6);
          if (v14)
          {
            p_shared_owners = (unint64_t *)&v14->__shared_owners_;
            do
              v16 = __ldaxr(p_shared_owners);
            while (__stlxr(v16 - 1, p_shared_owners));
            if (!v16)
            {
              ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
              std::__shared_weak_count::__release_weak(v14);
            }
          }
        }
        v12 -= 120;
      }
      while (v12 != v11);
      v13 = v19;
    }
    v20 = v11;
    operator delete(v13);
  }
}

void sub_210964390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  sub_2108AE078(&a12);
  _Unwind_Resume(a1);
}

void sub_2109643D8(uint64_t a1)
{
  _DWORD *v2;
  _DWORD *v3;
  _DWORD *v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  void **v9;
  void **v10;
  void *v11;
  void **v12;
  void **v13;
  void *v14;
  void **v15;
  void **v16;
  void *v17;
  void **v18;
  void **v19;
  void *v20;
  void **v21;
  void **v22;
  void *v23;
  void **v24;
  void **v25;
  void *v26;
  void **v27;
  void **v28;
  void *v29;
  uint64_t v30;
  _BYTE v31[128];
  __int128 v32;
  char v33;
  void *v34;
  void *v35;
  char *v36;
  void *v37;
  void **v38;
  char v39;
  void *v40[2];
  char v41;
  void *v42;
  void *v43;
  char *v44;
  void *v45;
  void **v46;
  char v47;
  void *v48[2];
  char v49;
  void *v50;
  void *v51;
  char *v52;
  void *v53;
  void **v54;
  char v55;
  void *v56[2];
  char v57;
  void *v58;
  void *v59;
  char *v60;
  void *v61;
  void **v62;
  char v63;
  void *v64[3];
  void *v65;
  void *v66;
  char *v67;
  void *v68;
  void **v69;
  char v70;
  void *v71[2];
  char v72;
  void *v73;
  void *v74;
  char *v75;
  void *v76;
  void **v77;
  char v78;
  void *v79[2];
  char v80;
  void *v81;
  void *v82;
  char *v83;
  void *__p;
  void **v85;
  char v86;
  uint64_t v87;

  v87 = *MEMORY[0x24BDAC8D0];
  v33 = 10;
  strcpy((char *)&v32, "lf-480x640");
  v2 = operator new(0x14uLL);
  v35 = v2 + 5;
  v36 = (char *)(v2 + 5);
  *(_OWORD *)v2 = xmmword_210A17A50;
  v2[4] = 1;
  v34 = v2;
  LOBYTE(v37) = 0;
  v39 = 0;
  v41 = 10;
  strcpy((char *)v40, "lf-640x480");
  v3 = operator new(0x14uLL);
  v43 = v3 + 5;
  v44 = (char *)(v3 + 5);
  *(_OWORD *)v3 = xmmword_210A17A60;
  v3[4] = 1;
  v42 = v3;
  LOBYTE(v45) = 0;
  v47 = 0;
  v49 = 10;
  strcpy((char *)v48, "lf-320x320");
  v4 = operator new(0x14uLL);
  v51 = v4 + 5;
  v52 = (char *)(v4 + 5);
  *(_OWORD *)v4 = xmmword_210A17AE0;
  v4[4] = 1;
  v50 = v4;
  LOBYTE(v53) = 0;
  v55 = 0;
  v57 = 10;
  strcpy((char *)v56, "lf-640x640");
  v5 = operator new(0x14uLL);
  v59 = v5 + 5;
  v60 = (char *)(v5 + 5);
  *(_OWORD *)v5 = xmmword_210A17AF0;
  v5[4] = 1;
  v58 = v5;
  LOBYTE(v61) = 0;
  v63 = 0;
  HIBYTE(v64[2]) = 19;
  strcpy((char *)v64, "lf-big-test-512x384");
  v6 = operator new(0x14uLL);
  v66 = v6 + 5;
  v67 = (char *)(v6 + 5);
  *(_OWORD *)v6 = xmmword_210A17B10;
  v6[4] = 1;
  v65 = v6;
  LOBYTE(v68) = 0;
  v70 = 0;
  v72 = 13;
  strcpy((char *)v71, "lf-test-32x32");
  v7 = operator new(0x14uLL);
  v75 = (char *)(v7 + 5);
  *(_OWORD *)v7 = xmmword_210A17B20;
  v7[4] = 1;
  v73 = v7;
  v74 = v7 + 5;
  LOBYTE(v76) = 0;
  v78 = 0;
  v80 = 13;
  strcpy((char *)v79, "lf-test-64x32");
  v8 = operator new(0x14uLL);
  v83 = (char *)(v8 + 5);
  *(_OWORD *)v8 = xmmword_210A17B30;
  v8[4] = 1;
  v81 = v8;
  v82 = v8 + 5;
  LOBYTE(__p) = 0;
  v86 = 0;
  sub_2109842CC(&v32, 7uLL, (uint64_t)v31);
  if (!v31[120])
  {
    v30 = sub_21096575C((uint64_t)v31);
    sub_21096579C(v30);
  }
  sub_2109657A8(a1, (uint64_t)v31);
  sub_210966108((uint64_t)v31);
  if (v86)
  {
    v9 = (void **)__p;
    if (__p)
    {
      v10 = v85;
      v11 = __p;
      if (v85 != __p)
      {
        do
        {
          if (*((char *)v10 - 1) < 0)
            operator delete(*(v10 - 3));
          v10 -= 3;
        }
        while (v10 != v9);
        v11 = __p;
      }
      v85 = v9;
      operator delete(v11);
    }
  }
  if (v81)
  {
    v82 = v81;
    operator delete(v81);
  }
  if (v80 < 0)
    operator delete(v79[0]);
  if (v78)
  {
    v12 = (void **)v76;
    if (v76)
    {
      v13 = v77;
      v14 = v76;
      if (v77 != v76)
      {
        do
        {
          if (*((char *)v13 - 1) < 0)
            operator delete(*(v13 - 3));
          v13 -= 3;
        }
        while (v13 != v12);
        v14 = v76;
      }
      v77 = v12;
      operator delete(v14);
    }
  }
  if (v73)
  {
    v74 = v73;
    operator delete(v73);
  }
  if (v72 < 0)
    operator delete(v71[0]);
  if (v70)
  {
    v15 = (void **)v68;
    if (v68)
    {
      v16 = v69;
      v17 = v68;
      if (v69 != v68)
      {
        do
        {
          if (*((char *)v16 - 1) < 0)
            operator delete(*(v16 - 3));
          v16 -= 3;
        }
        while (v16 != v15);
        v17 = v68;
      }
      v69 = v15;
      operator delete(v17);
    }
  }
  if (v65)
  {
    v66 = v65;
    operator delete(v65);
  }
  if (SHIBYTE(v64[2]) < 0)
    operator delete(v64[0]);
  if (v63)
  {
    v18 = (void **)v61;
    if (v61)
    {
      v19 = v62;
      v20 = v61;
      if (v62 != v61)
      {
        do
        {
          if (*((char *)v19 - 1) < 0)
            operator delete(*(v19 - 3));
          v19 -= 3;
        }
        while (v19 != v18);
        v20 = v61;
      }
      v62 = v18;
      operator delete(v20);
    }
  }
  if (v58)
  {
    v59 = v58;
    operator delete(v58);
  }
  if (v57 < 0)
    operator delete(v56[0]);
  if (v55)
  {
    v21 = (void **)v53;
    if (v53)
    {
      v22 = v54;
      v23 = v53;
      if (v54 != v53)
      {
        do
        {
          if (*((char *)v22 - 1) < 0)
            operator delete(*(v22 - 3));
          v22 -= 3;
        }
        while (v22 != v21);
        v23 = v53;
      }
      v54 = v21;
      operator delete(v23);
    }
  }
  if (v50)
  {
    v51 = v50;
    operator delete(v50);
  }
  if (v49 < 0)
    operator delete(v48[0]);
  if (v47)
  {
    v24 = (void **)v45;
    if (v45)
    {
      v25 = v46;
      v26 = v45;
      if (v46 != v45)
      {
        do
        {
          if (*((char *)v25 - 1) < 0)
            operator delete(*(v25 - 3));
          v25 -= 3;
        }
        while (v25 != v24);
        v26 = v45;
      }
      v46 = v24;
      operator delete(v26);
    }
  }
  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  if (v41 < 0)
    operator delete(v40[0]);
  if (v39)
  {
    v27 = (void **)v37;
    if (v37)
    {
      v28 = v38;
      v29 = v37;
      if (v38 != v37)
      {
        do
        {
          if (*((char *)v28 - 1) < 0)
            operator delete(*(v28 - 3));
          v28 -= 3;
        }
        while (v28 != v27);
        v29 = v37;
      }
      v38 = v27;
      operator delete(v29);
    }
  }
  if (v34)
  {
    v35 = v34;
    operator delete(v34);
  }
  if (v33 < 0)
    operator delete((void *)v32);
}

void sub_210964A34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  char *v26;

  do
  {
    v26 -= 80;
    sub_2109656B0((uint64_t)v26);
  }
  while (v26 != &a26);
  _Unwind_Resume(a1);
}

void sub_210964A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_210966108((uint64_t)&a10);
  sub_2109656B0(v31);
  sub_2109656B0(v30);
  sub_2109656B0(v29);
  sub_2109656B0(v28);
  sub_2109656B0(v27);
  sub_2109656B0(v26);
  sub_2109656B0((uint64_t)&a26);
  _Unwind_Resume(a1);
}

uint64_t sub_210964AE0(uint64_t a1)
{
  void *v2;

  sub_21095A1BC(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

uint64_t sub_210964B18()
{
  return 0;
}

uint64_t sub_210964B20(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 264))
    return *(_QWORD *)(a1 + 256);
  else
    return 1;
}

uint64_t sub_210964B38()
{
  return 0;
}

uint64_t sub_210964B40(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 264))
    return *(_QWORD *)(a1 + 256);
  else
    return 1;
}

uint64_t sub_210964B58()
{
  return 1;
}

uint64_t sub_210964B60(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 264))
    return *(_QWORD *)(a1 + 256);
  else
    return 1;
}

void sub_210964B78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80F90;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210964B88(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80F90;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210964BB8(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_BYTE *sub_210964BC8(_BYTE *__dst, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *__dst = 0;
  __dst[24] = 0;
  if (*((_BYTE *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_2108B314C(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    }
    else
    {
      v4 = *a2;
      *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
      *(_OWORD *)__dst = v4;
    }
    __dst[24] = 1;
  }
  v5 = a2[2];
  __dst[48] = 0;
  *((_OWORD *)__dst + 2) = v5;
  __dst[72] = 0;
  if (*((_BYTE *)a2 + 72))
  {
    if (*((char *)a2 + 71) < 0)
    {
      sub_2108B314C(__dst + 48, *((void **)a2 + 6), *((_QWORD *)a2 + 7));
    }
    else
    {
      v6 = a2[3];
      *((_QWORD *)__dst + 8) = *((_QWORD *)a2 + 8);
      *((_OWORD *)__dst + 3) = v6;
    }
    __dst[72] = 1;
  }
  return __dst;
}

void sub_210964C84(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(_BYTE *)(v1 + 72) && *(char *)(v1 + 71) < 0)
    operator delete(*v2);
  if (*(_BYTE *)(v1 + 24))
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_210964CC8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80FE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210964CD8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA80FE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210964D08(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_210964D18(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *a2;
  *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)a1 = v4;
  if (*((char *)a2 + 39) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 16), (void *)a2[2], a2[3]);
    v6 = a1 + 40;
    if ((*((char *)a2 + 63) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 16) = v5;
    v6 = a1 + 40;
    if ((*((char *)a2 + 63) & 0x80000000) == 0)
    {
LABEL_3:
      v7 = *(_OWORD *)(a2 + 5);
      *(_QWORD *)(v6 + 16) = a2[7];
      *(_OWORD *)v6 = v7;
      goto LABEL_6;
    }
  }
  sub_2108B314C((_BYTE *)v6, (void *)a2[5], a2[6]);
LABEL_6:
  if (*((char *)a2 + 87) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 64), (void *)a2[8], a2[9]);
  }
  else
  {
    v8 = *((_OWORD *)a2 + 4);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_OWORD *)(a1 + 64) = v8;
  }
  if (*((char *)a2 + 111) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 88), (void *)a2[11], a2[12]);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 11);
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_OWORD *)(a1 + 88) = v9;
  }
  if (*((char *)a2 + 135) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 112), (void *)a2[14], a2[15]);
  }
  else
  {
    v10 = *((_OWORD *)a2 + 7);
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_OWORD *)(a1 + 112) = v10;
  }
  if (*((char *)a2 + 159) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 136), (void *)a2[17], a2[18]);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 17);
    *(_QWORD *)(a1 + 152) = a2[19];
    *(_OWORD *)(a1 + 136) = v11;
  }
  sub_2109657A8(a1 + 160, (uint64_t)(a2 + 20));
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
  v12 = *(_OWORD *)(a2 + 27);
  v13 = *(_OWORD *)(a2 + 29);
  v14 = *(_OWORD *)(a2 + 31);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 248) = v14;
  *(_OWORD *)(a1 + 232) = v13;
  *(_OWORD *)(a1 + 216) = v12;
  return a1;
}

void sub_210964EC8(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;

  if (v1[135] < 0)
  {
    operator delete(*v6);
    if ((v1[111] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[87] & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v1[111] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v5);
  if ((v1[87] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v1[63] & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(*v4);
  if ((v1[63] & 0x80000000) == 0)
  {
LABEL_5:
    if ((v1[39] & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*v3);
  if ((v1[39] & 0x80000000) == 0)
LABEL_6:
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_210964FB4(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  int v15;
  __int16 v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a4)
  {
    if (a4 >= 0x222222222222223)
      sub_2108B327C();
    v8 = operator new(120 * a4);
    *a1 = v8;
    a1[1] = v8;
    for (a1[2] = (char *)v8 + 120 * a4; a2 != a3; v8 = (_OWORD *)((char *)v8 + 120))
    {
      v9 = *(_OWORD *)(a2 + 16);
      *v8 = *(_OWORD *)a2;
      v8[1] = v9;
      v8[2] = *(_OWORD *)(a2 + 32);
      *((_DWORD *)v8 + 12) = *(_DWORD *)(a2 + 48);
      *((_BYTE *)v8 + 56) = 0;
      *((_BYTE *)v8 + 112) = 0;
      if (*(_BYTE *)(a2 + 112))
      {
        *((_QWORD *)v8 + 7) = &off_24CA79890;
        v10 = *(_QWORD *)(a2 + 64);
        v11 = *(std::__shared_weak_count **)(a2 + 72);
        if (v11)
        {
          p_shared_owners = (unint64_t *)&v11->__shared_owners_;
          do
            v13 = __ldxr(p_shared_owners);
          while (__stxr(v13 + 1, p_shared_owners));
          v14 = *(_QWORD *)(a2 + 96);
          v15 = *(_DWORD *)(a2 + 104);
          v16 = *(_WORD *)(a2 + 108);
          do
            v17 = __ldxr(p_shared_owners);
          while (__stxr(v17 + 1, p_shared_owners));
        }
        else
        {
          v14 = *(_QWORD *)(a2 + 96);
          v15 = *(_DWORD *)(a2 + 104);
          v16 = *(_WORD *)(a2 + 108);
        }
        *((_QWORD *)v8 + 8) = v10;
        *((_QWORD *)v8 + 9) = v11;
        *((_QWORD *)v8 + 10) = *(_QWORD *)(a2 + 80);
        *((_DWORD *)v8 + 22) = *(_DWORD *)(a2 + 88);
        *((_QWORD *)v8 + 12) = v14;
        *((_DWORD *)v8 + 26) = v15;
        *((_WORD *)v8 + 54) = v16;
        if (v11)
        {
          v18 = (unint64_t *)&v11->__shared_owners_;
          do
            v19 = __ldaxr(v18);
          while (__stlxr(v19 - 1, v18));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
        *((_BYTE *)v8 + 112) = 1;
      }
      a2 += 120;
    }
    a1[1] = v8;
  }
}

void sub_210965144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_210965158(&a9);
  _Unwind_Resume(a1);
}

void ***sub_210965158(void ***result)
{
  void ***v1;
  void **v2;
  char *v3;
  char *v4;
  void *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v1 = result;
  if (!*((_BYTE *)result + 8))
  {
    v2 = *result;
    v3 = (char *)**result;
    if (v3)
    {
      v4 = (char *)v2[1];
      v5 = **result;
      if (v4 != v3)
      {
        do
        {
          if (*(v4 - 8))
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 6);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
          }
          v4 -= 120;
        }
        while (v4 != v3);
        v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

char *sub_210965228(char **a1, uint64_t a2)
{
  char *v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v21;
  char v22;
  char v23;

  v3 = *a1;
  v4 = a1[1];
  v5 = (v4 - *a1) >> 7;
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 57)
    sub_2108B327C();
  v8 = a1[2] - v3;
  if (v8 >> 6 > v6)
    v6 = v8 >> 6;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFF80)
    v9 = 0x1FFFFFFFFFFFFFFLL;
  else
    v9 = v6;
  if (v9)
  {
    if (v9 >> 57)
      sub_2108B2B1C();
    v10 = (char *)operator new(v9 << 7);
  }
  else
  {
    v10 = 0;
  }
  v11 = &v10[128 * v5];
  *v11 = 0;
  *((_DWORD *)v11 + 30) = -1;
  v12 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v12 != -1)
  {
    ((void (*)(char *, char *, uint64_t))off_24CA81090[v12])(&v21, v11, a2);
    *((_DWORD *)v11 + 30) = v12;
    v3 = *a1;
    v4 = a1[1];
  }
  v13 = &v10[128 * v9];
  v14 = v11 + 128;
  if (v4 == v3)
  {
    *a1 = v11;
    a1[1] = v14;
    a1[2] = v13;
  }
  else
  {
    v15 = 0;
    do
    {
      v11[v15 - 128] = 0;
      *(_DWORD *)&v11[v15 - 8] = -1;
      v16 = *(unsigned int *)&v4[v15 - 8];
      if ((_DWORD)v16 != -1)
      {
        ((void (*)(char *, char *, char *))off_24CA81090[v16])(&v22, &v11[v15 - 128], &v4[v15 - 128]);
        *(_DWORD *)&v11[v15 - 8] = v16;
      }
      v15 -= 128;
    }
    while (&v4[v15] != v3);
    v3 = *a1;
    v17 = a1[1];
    v14 = v11 + 128;
    *a1 = &v11[v15];
    a1[1] = v11 + 128;
    a1[2] = v13;
    if (v17 != v3)
    {
      do
      {
        v18 = v17 - 128;
        v19 = *((unsigned int *)v17 - 2);
        if ((_DWORD)v19 != -1)
          ((void (*)(char *, char *))off_24CA81078[v19])(&v23, v17 - 128);
        *((_DWORD *)v17 - 2) = -1;
        v17 -= 128;
      }
      while (v18 != v3);
    }
  }
  if (v3)
    operator delete(v3);
  return v14;
}

void sub_210965404(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (*(_BYTE *)(a2 + 112))
  {
    v2 = *(std::__shared_weak_count **)(a2 + 72);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
}

void sub_210965464(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  if (*(_BYTE *)(a2 + 112))
  {
    v2 = *(std::__shared_weak_count **)(a2 + 72);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
}

void sub_2109654C4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a2 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
}

__n128 sub_21096551C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  __int128 v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  v5 = *(_OWORD *)(a3 + 32);
  *(_DWORD *)(a2 + 48) = *(_DWORD *)(a3 + 48);
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = v5;
  *(__n128 *)a2 = result;
  *(_BYTE *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (*(_BYTE *)(a3 + 112))
  {
    *(_QWORD *)(a2 + 56) = &off_24CA79890;
    *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
    *(_QWORD *)(a3 + 64) = 0;
    *(_QWORD *)(a3 + 72) = 0;
    result = *(__n128 *)(a3 + 80);
    *(_OWORD *)(a2 + 94) = *(_OWORD *)(a3 + 94);
    *(__n128 *)(a2 + 80) = result;
    *(_BYTE *)(a2 + 112) = 1;
  }
  return result;
}

__n128 sub_210965578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  __int128 v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  v5 = *(_OWORD *)(a3 + 32);
  *(_DWORD *)(a2 + 48) = *(_DWORD *)(a3 + 48);
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = v5;
  *(__n128 *)a2 = result;
  *(_BYTE *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (*(_BYTE *)(a3 + 112))
  {
    *(_QWORD *)(a2 + 56) = &off_24CA79890;
    *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
    *(_QWORD *)(a3 + 64) = 0;
    *(_QWORD *)(a3 + 72) = 0;
    result = *(__n128 *)(a3 + 80);
    *(_OWORD *)(a2 + 94) = *(_OWORD *)(a3 + 94);
    *(__n128 *)(a2 + 80) = result;
    *(_BYTE *)(a2 + 112) = 1;
  }
  return result;
}

__n128 sub_2109655D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA79890;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  result = *(__n128 *)(a3 + 24);
  *(_OWORD *)(a2 + 38) = *(_OWORD *)(a3 + 38);
  *(__n128 *)(a2 + 24) = result;
  return result;
}

uint64_t sub_210965600(uint64_t a1)
{
  if (*(char *)(a1 + 143) < 0)
  {
    operator delete(*(void **)(a1 + 120));
    if ((*(char *)(a1 + 119) & 0x80000000) == 0)
    {
LABEL_3:
      if (!*(_BYTE *)(a1 + 88))
        goto LABEL_8;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(a1 + 119) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 96));
  if (!*(_BYTE *)(a1 + 88))
    goto LABEL_8;
LABEL_7:
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if (!*(_BYTE *)(a1 + 56))
      goto LABEL_12;
    goto LABEL_9;
  }
LABEL_8:
  if (!*(_BYTE *)(a1 + 56))
    goto LABEL_12;
LABEL_9:
  if (*(char *)(a1 + 55) < 0)
    operator delete(*(void **)(a1 + 32));
LABEL_12:
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_2109656B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  if (*(_BYTE *)(a1 + 72))
  {
    v2 = *(_QWORD *)(a1 + 48);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 56);
      v4 = *(void **)(a1 + 48);
      if (v3 != v2)
      {
        do
        {
          if (*(char *)(v3 - 1) < 0)
            operator delete(*(void **)(v3 - 24));
          v3 -= 24;
        }
        while (v3 != v2);
        v4 = *(void **)(a1 + 48);
      }
      *(_QWORD *)(a1 + 56) = v2;
      operator delete(v4);
    }
  }
  v5 = *(void **)(a1 + 24);
  if (v5)
  {
    *(_QWORD *)(a1 + 32) = v5;
    operator delete(v5);
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_21096575C(uint64_t result)
{
  _QWORD *exception;

  if (*(_BYTE *)(result + 120))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24CA7DA08;
    __cxa_throw(exception, (struct type_info *)&unk_24CA7ABC8, (void (*)(void *))std::exception::~exception);
  }
  return result;
}

void sub_21096579C(uint64_t a1)
{
  sub_2109EC518(a1);
}

uint64_t sub_2109657A8(uint64_t a1, uint64_t a2)
{
  size_t prime;
  int8x8_t v5;
  BOOL v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t v9;
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  prime = *(_QWORD *)(a2 + 8);
  if (prime == 1)
  {
    prime = 2;
LABEL_17:
    sub_2108B5C58(a1, prime);
    goto LABEL_18;
  }
  if ((prime & (prime - 1)) != 0)
  {
    prime = std::__next_prime(*(_QWORD *)(a2 + 8));
    v5 = *(int8x8_t *)(a1 + 8);
    v6 = prime >= *(_QWORD *)&v5;
    if (prime > *(_QWORD *)&v5)
      goto LABEL_17;
  }
  else
  {
    v5 = 0;
    v6 = 1;
    if (prime)
      goto LABEL_17;
  }
  if (!v6)
  {
    v7 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v5 < 3uLL || (v8 = (uint8x8_t)vcnt_s8(v5), v8.i16[0] = vaddlv_u8(v8), v8.u32[0] > 1uLL))
    {
      v7 = std::__next_prime(v7);
    }
    else
    {
      v9 = 1 << -(char)__clz(v7 - 1);
      if (v7 >= 2)
        v7 = v9;
    }
    if (prime <= v7)
      prime = v7;
    if (prime < *(_QWORD *)&v5)
      goto LABEL_17;
  }
LABEL_18:
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_2109658E8(a1, (unint64_t)(i + 2), (uint64_t)(i + 2));
  return a1;
}

void sub_2109658C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_210964AE0(v1);
  _Unwind_Resume(a1);
}

void sub_2109658D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_210964AE0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2109658E8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  float v16;
  float v17;
  _QWORD *v18;
  _QWORD *v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t prime;
  int8x8_t v24;
  unint64_t v25;
  uint8x8_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  char v36;

  v7 = a2 + 24;
  v31 = (_QWORD *)a2;
  v32 = (_QWORD *)(a2 + 24);
  v34 = 0;
  sub_210965CC0((uint64_t *)&v34, (uint64_t)&v31);
  v8 = v34;
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = v34;
      if (v34 >= v9)
        v3 = v34 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v34;
    }
    v11 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      v12 = (_QWORD *)*v11;
      if (*v11)
      {
        if (v10.u32[0] < 2uLL)
        {
          while (1)
          {
            v14 = v12[1];
            if (v14 == v8)
            {
              v31 = v12 + 2;
              v32 = v12 + 5;
              v34 = a2;
              v35 = v7;
              if (sub_2109867F8((uint64_t)&v36, (uint64_t)&v31, (uint64_t)&v34))
                return v12;
            }
            else if ((v14 & (v9 - 1)) != v3)
            {
              goto LABEL_23;
            }
            v12 = (_QWORD *)*v12;
            if (!v12)
              goto LABEL_23;
          }
        }
        do
        {
          v13 = v12[1];
          if (v13 == v8)
          {
            v31 = v12 + 2;
            v32 = v12 + 5;
            v34 = a2;
            v35 = v7;
            if (sub_2109867F8((uint64_t)&v36, (uint64_t)&v31, (uint64_t)&v34))
              return v12;
          }
          else
          {
            if (v13 >= v9)
              v13 %= v9;
            if (v13 != v3)
              break;
          }
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
    }
  }
LABEL_23:
  v15 = operator new(0x60uLL);
  v31 = v15;
  v32 = (_QWORD *)(a1 + 16);
  v33 = 0;
  *v15 = 0;
  v15[1] = v8;
  sub_210965E10((uint64_t)(v15 + 2), a3);
  v33 = 1;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v20 = 1;
    if (v9 >= 3)
      v20 = (v9 & (v9 - 1)) != 0;
    v21 = v20 | (2 * v9);
    v22 = vcvtps_u32_f32(v16 / v17);
    if (v21 <= v22)
      prime = v22;
    else
      prime = v21;
    if (prime == 1)
    {
      prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      prime = std::__next_prime(prime);
    }
    v24 = *(int8x8_t *)(a1 + 8);
    if (prime > *(_QWORD *)&v24)
      goto LABEL_37;
    if (prime < *(_QWORD *)&v24)
    {
      v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(_QWORD *)&v24 < 3uLL || (v26 = (uint8x8_t)vcnt_s8(v24), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
      {
        v25 = std::__next_prime(v25);
      }
      else
      {
        v27 = 1 << -(char)__clz(v25 - 1);
        if (v25 >= 2)
          v25 = v27;
      }
      if (prime <= v25)
        prime = v25;
      if (prime < *(_QWORD *)&v24)
LABEL_37:
        sub_2108B5C58(a1, prime);
    }
    v9 = *(_QWORD *)(a1 + 8);
    v28 = v9 - 1;
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
      {
        v3 = v8 % v9;
        v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v8 % v9));
        v19 = v31;
        if (v18)
          goto LABEL_26;
      }
      else
      {
        v3 = v8;
        v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v8);
        v19 = v31;
        if (v18)
          goto LABEL_26;
      }
    }
    else
    {
      v3 = v28 & v8;
      v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * (v28 & v8));
      v19 = v31;
      if (v18)
        goto LABEL_26;
    }
LABEL_50:
    *v19 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v31;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v31)
    {
      v29 = *(_QWORD *)(*v31 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v29 >= v9)
          v29 %= v9;
      }
      else
      {
        v29 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v29) = v31;
    }
    goto LABEL_61;
  }
  v18 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  v19 = v31;
  if (!v18)
    goto LABEL_50;
LABEL_26:
  *v19 = *v18;
  *v18 = v31;
LABEL_61:
  v12 = v31;
  ++*(_QWORD *)(a1 + 24);
  return v12;
}

void sub_210965C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9)
{
  uint64_t v9;

  if (a9)
    sub_210966040(v9, a9);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_210965CC0(uint64_t *result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;

  v2 = result;
  v3 = 2654435769;
  v4 = **(unsigned int ***)a2;
  v5 = *(unsigned int **)(*(_QWORD *)a2 + 8);
  v6 = 2654435769;
  if (v4 != v5)
  {
    v7 = 0;
    do
    {
      v8 = (v4[1] + 2654435769 + (((unint64_t)*v4 + 2654435769u) >> 2) + ((*v4 + 2654435769) << 6)) ^ (*v4 + 2654435769);
      v9 = (v4[2] + 2654435769 + (v8 >> 2) + (v8 << 6)) ^ v8;
      v10 = (v4[3] + 2654435769 + (v9 >> 2) + (v9 << 6)) ^ v9;
      v7 ^= (v7 >> 2) + 2654435769u + (v7 << 6) + ((v4[4] + 2654435769 + (v10 >> 2) + (v10 << 6)) ^ v10);
      v4 += 5;
    }
    while (v4 != v5);
    v6 = v7 + 2654435769u;
  }
  v11 = (v6 + ((unint64_t)*result >> 2) + (*result << 6)) ^ *result;
  *result = v11;
  v12 = *(uint64_t **)(a2 + 8);
  if (*((_BYTE *)v12 + 24))
  {
    v13 = *v12;
    v14 = v12[1];
    if (*v12 != v14)
    {
      v15 = 0;
      do
      {
        v16 = *(char *)(v13 + 23);
        if (v16 >= 0)
          v17 = (uint64_t *)v13;
        else
          v17 = *(uint64_t **)v13;
        if (v16 >= 0)
          v18 = *(unsigned __int8 *)(v13 + 23);
        else
          v18 = *(_QWORD *)(v13 + 8);
        result = (uint64_t *)sub_2108B6894((uint64_t)&v19, v17, v18);
        v15 ^= (unint64_t)&result[8 * v15 + 331804471] + (v15 >> 2) + 1;
        v13 += 24;
      }
      while (v13 != v14);
      v3 = v15 + 2654435769u;
      v11 = *v2;
    }
  }
  *v2 = (v3 + (v11 >> 2) + (v11 << 6)) ^ v11;
  return result;
}

uint64_t sub_210965E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = sub_210965EE8(a1, a2) + 56;
  if (*(char *)(a2 + 79) < 0)
  {
    sub_2108B314C((_BYTE *)v4, *(void **)(a2 + 56), *(_QWORD *)(a2 + 64));
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)v4 = v5;
  }
  return a1;
}

void sub_210965E7C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  if (*(_BYTE *)(v1 + 48))
  {
    v3 = *(_QWORD *)(v1 + 24);
    if (v3)
    {
      v4 = *(_QWORD *)(v1 + 32);
      v5 = *(void **)(v1 + 24);
      if (v4 != v3)
      {
        do
        {
          if (*(char *)(v4 - 1) < 0)
            operator delete(*(void **)(v4 - 24));
          v4 -= 24;
        }
        while (v4 != v3);
        v5 = *(void **)(v1 + 24);
      }
      *(_QWORD *)(v1 + 32) = v3;
      operator delete(v5);
    }
  }
  v6 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_210965EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const void *v5;
  int64_t v6;
  char *v7;
  char *v8;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v5 = *(const void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v6 = v4 - *(_QWORD *)a2;
  if (v4 != *(_QWORD *)a2)
  {
    if (0xCCCCCCCCCCCCCCCDLL * (v6 >> 2) >= 0xCCCCCCCCCCCCCCDLL)
      sub_2108B327C();
    v7 = (char *)operator new(v6);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = &v7[4 * (v6 >> 2)];
    *(_QWORD *)(a1 + 16) = v8;
    memcpy(v7, v5, v6);
    *(_QWORD *)(a1 + 8) = v8;
  }
  *(_BYTE *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = 0;
    sub_2108B4718((char *)(a1 + 24), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 32) - *(_QWORD *)(a2 + 24)) >> 3));
    *(_BYTE *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_210965FCC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v4;
  void **v5;
  void *v6;
  void *v7;

  if (*(_BYTE *)(v1 + 48))
  {
    v4 = (void **)*v2;
    if (*v2)
    {
      v5 = *(void ***)(v1 + 32);
      v6 = *v2;
      if (v5 != v4)
      {
        do
        {
          if (*((char *)v5 - 1) < 0)
            operator delete(*(v5 - 3));
          v5 -= 3;
        }
        while (v5 != v4);
        v6 = *v2;
      }
      *(_QWORD *)(v1 + 32) = v4;
      operator delete(v6);
    }
  }
  v7 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v7;
    operator delete(v7);
  }
  _Unwind_Resume(exception_object);
}

void sub_210966040(uint64_t a1, void **__p)
{
  void **v3;
  void **v4;
  void *v5;
  void *v6;

  if (!*(_BYTE *)(a1 + 8))
  {
    if (!__p)
      return;
    goto LABEL_12;
  }
  if (*((char *)__p + 95) < 0)
    operator delete(__p[9]);
  if (*((_BYTE *)__p + 64))
  {
    v3 = (void **)__p[5];
    if (v3)
    {
      v4 = (void **)__p[6];
      v5 = __p[5];
      if (v4 != v3)
      {
        do
        {
          if (*((char *)v4 - 1) < 0)
            operator delete(*(v4 - 3));
          v4 -= 3;
        }
        while (v4 != v3);
        v5 = __p[5];
      }
      __p[6] = v3;
      operator delete(v5);
    }
  }
  v6 = __p[2];
  if (!v6)
  {
LABEL_12:
    operator delete(__p);
    return;
  }
  __p[3] = v6;
  operator delete(v6);
  operator delete(__p);
}

uint64_t sub_210966108(uint64_t a1)
{
  void *v2;

  if (!*(_BYTE *)(a1 + 120))
  {
    if (!*(_BYTE *)(a1 + 112))
      return a1;
    if (!*(_BYTE *)(a1 + 104))
      goto LABEL_8;
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_8:
        if (!*(_BYTE *)(a1 + 40))
          return a1;
        goto LABEL_9;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_8;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      return a1;
LABEL_9:
    if ((*(char *)(a1 + 39) & 0x80000000) == 0)
      return a1;
    v2 = *(void **)(a1 + 16);
    goto LABEL_11;
  }
  sub_21095A1BC(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (!v2)
    return a1;
LABEL_11:
  operator delete(v2);
  return a1;
}

void ***sub_2109661B4(void ***a1, _QWORD *a2)
{
  void **v4;
  unint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v4 = *a1;
  v6 = (char *)(*a1)[1];
  v5 = (unint64_t)(*a1)[2];
  v7 = v6;
  if ((unint64_t)v6 >= v5)
  {
    v9 = (char *)*v4;
    v10 = v6 - (_BYTE *)*v4;
    v11 = v10 >> 3;
    v12 = (v10 >> 3) + 1;
    if (v12 >> 61)
      sub_2108B327C();
    v13 = v5 - (_QWORD)v9;
    if (v13 >> 2 > v12)
      v12 = v13 >> 2;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      v14 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      if (v14 >> 61)
        sub_2108B2B1C();
      v15 = operator new(8 * v14);
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[8 * v11];
    *v16 = *a2;
    v8 = v16 + 1;
    if (v6 != v9)
    {
      v17 = v6 - v9 - 8;
      if (v17 < 0x58)
        goto LABEL_28;
      if ((unint64_t)(v6 - v15 - v10) < 0x20)
        goto LABEL_28;
      v18 = (v17 >> 3) + 1;
      v19 = 8 * (v18 & 0x3FFFFFFFFFFFFFFCLL);
      v7 = &v6[-v19];
      v16 = (_QWORD *)((char *)v16 - v19);
      v20 = &v15[8 * v11 - 16];
      v21 = (__int128 *)(v6 - 16);
      v22 = v18 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v23 = *v21;
        *(v20 - 1) = *(v21 - 1);
        *v20 = v23;
        v20 -= 2;
        v21 -= 2;
        v22 -= 4;
      }
      while (v22);
      if (v18 != (v18 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_28:
        do
        {
          v24 = *((_QWORD *)v7 - 1);
          v7 -= 8;
          *--v16 = v24;
        }
        while (v7 != v9);
      }
      v7 = (char *)*v4;
    }
    *v4 = v16;
    v4[1] = v8;
    v4[2] = &v15[8 * v14];
    if (v7)
      operator delete(v7);
  }
  else
  {
    *(_QWORD *)v6 = *a2;
    v8 = v6 + 8;
  }
  v4[1] = v8;
  return a1;
}

_DWORD *sub_210966328(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24CA810A8[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_2108A4B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_210966418(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210966480()
{
  return 3;
}

uint64_t sub_210966488(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_210966490@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 64);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 76);
  return result;
}

uint64_t sub_2109664A8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_210966524(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA7B2C0;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA7C080[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BCC6FC](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_2109665B0()
{
  JUMPOUT(0x212BCC6FCLL);
}

void sub_2109665C4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21096662C()
{
  return 3;
}

uint64_t sub_210966634(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21096663C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_210966654(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

char **sub_2109666D8(char **a1, unint64_t a2, uint64_t a3)
{
  char **v3;
  char *v6;
  char *v7;
  size_t v8;
  size_t v9;
  int v10;
  unint64_t v11;
  _DWORD *v12;
  unint64_t v13;
  _DWORD *v14;
  unint64_t v15;
  int v16;
  void *memptr;

  v3 = a1;
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >= 0x555555555555556)
      sub_2108B327C();
    v6 = (char *)operator new(48 * a2);
    *v3 = v6;
    v3[1] = v6;
    v7 = &v6[48 * a2];
    v3[2] = v7;
    do
    {
      *(_OWORD *)v6 = *(_OWORD *)a3;
      v8 = *(_QWORD *)(a3 + 16);
      v9 = *(_QWORD *)(a3 + 32);
      *((_QWORD *)v6 + 2) = v8;
      *((_QWORD *)v6 + 3) = 0;
      *((_QWORD *)v6 + 4) = v9;
      if (v8)
      {
        memptr = 0;
        v10 = malloc_type_posix_memalign(&memptr, v9, v8, 0x1F88E90uLL);
        if (v10)
          sub_2109E756C(v10, *((_QWORD *)v6 + 4), v8);
        *((_QWORD *)v6 + 3) = memptr;
      }
      v11 = *(_QWORD *)(a3 + 40);
      *((_QWORD *)v6 + 5) = v11;
      v12 = *(_DWORD **)(a3 + 24);
      v13 = v11 >> 34;
      if ((v11 >> 34) * (_DWORD)v11 == -1
        && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
      {
LABEL_24:
        abort();
      }
      if ((_DWORD)v11)
      {
        v14 = (_DWORD *)*((_QWORD *)v6 + 3);
        v15 = (unint64_t)*((unsigned int *)v6 + 11) >> 2;
        if ((_DWORD)v15 * *((_DWORD *)v6 + 10) == -1
          && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
        {
          goto LABEL_24;
        }
        if ((_DWORD)v13 == 1 && (_DWORD)v15 == 1)
        {
          if (!v12
            && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
          {
            goto LABEL_24;
          }
          memmove(v14, v12, 4 * v11);
        }
        else
        {
          v16 = v11 - 1;
          if ((_DWORD)v11 != 1)
          {
            do
            {
              *v14 = *v12;
              v12 += v13;
              v14 += v15;
              --v16;
            }
            while (v16);
          }
          *v14 = *v12;
        }
      }
      v6 += 48;
    }
    while (v6 != v7);
    v3 = a1;
    a1[1] = v7;
  }
  return v3;
}

void sub_210966910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9)
{
  char *v10;
  char *v11;
  void *v12;
  void *v13;

  v10 = (char *)*a9;
  if (*a9)
  {
    v11 = (char *)a9[1];
    v12 = *a9;
    if (v11 != v10)
    {
      do
      {
        v13 = (void *)*((_QWORD *)v11 - 3);
        if (v13)
          free(v13);
        *((_QWORD *)v11 - 3) = 0;
        v11 -= 48;
      }
      while (v11 != v10);
      v12 = *a9;
    }
    a9[1] = v10;
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2109669A8(uint64_t a1, unsigned int *a2, int *a3, char a4, const float *a5, char a6, uint64_t a7)
{
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  int v19;
  float32x4_t *v20;
  uint64_t v21;
  uint64_t v22;
  float32x4_t *v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  float32x4_t v28;
  float32x4_t *v29;
  uint64_t v30;
  void *memptr;

  if (a4)
  {
    v11 = *a3;
    v12 = *a2;
  }
  else
  {
    v12 = *a2;
    v11 = *a2 != 0;
  }
  v13 = v11 * v12;
  v14 = 4 * v13;
  v15 = (a7 - 1) | ((unint64_t)(a7 - 1) >> 1) | (((a7 - 1) | ((unint64_t)(a7 - 1) >> 1)) >> 2);
  v16 = v15 | (v15 >> 4) | ((v15 | (v15 >> 4)) >> 8);
  v17 = v16 | (v16 >> 16) | ((v16 | (v16 >> 16)) >> 32);
  if (v17 + 1 > 8)
    v18 = v17 + 1;
  else
    v18 = 8;
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v18;
  if (!v13)
  {
    *(_DWORD *)(a1 + 24) = *a2;
    *(_DWORD *)(a1 + 28) = 4 * v11;
    return a1;
  }
  memptr = 0;
  v19 = malloc_type_posix_memalign(&memptr, v18, 4 * v13, 0x1F88E90uLL);
  if (v19)
    sub_2109E756C(v19, *(_QWORD *)(a1 + 16), v14);
  v20 = (float32x4_t *)memptr;
  *(_QWORD *)(a1 + 8) = memptr;
  v21 = *a2;
  *(_DWORD *)(a1 + 24) = v21;
  *(_DWORD *)(a1 + 28) = 4 * v11;
  if (v20 && a6)
  {
    v22 = v11 & 0x3FFFFFFF;
    if ((_DWORD)v21 * (_DWORD)v22 == -1
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    if ((_DWORD)v22 == 1)
    {
      if (!(_DWORD)v21)
        return a1;
      if (v21 < 8 || v20 < (float32x4_t *)(a5 + 1) && &v20->f32[v21] > a5)
      {
        v23 = v20;
        v24 = v21;
LABEL_21:
        v25 = v24 + 1;
        do
        {
          v23->f32[0] = *a5;
          v23 = (float32x4_t *)((char *)v23 + 4);
          --v25;
        }
        while (v25 > 1);
        return a1;
      }
      v23 = (float32x4_t *)((char *)v20 + 4 * (v21 & 0xFFFFFFF8));
      v24 = v21 & 7;
      v28 = vld1q_dup_f32(a5);
      v29 = v20 + 1;
      v30 = v21 & 0xFFFFFFF8;
      do
      {
        v29[-1] = v28;
        *v29 = v28;
        v29 += 2;
        v30 -= 8;
      }
      while (v30);
      if ((v21 & 0xFFFFFFF8) != v21)
        goto LABEL_21;
    }
    else if ((_DWORD)v21)
    {
      v26 = v21 - 1;
      if ((_DWORD)v21 != 1)
      {
        do
        {
          v20->f32[0] = *a5;
          v20 = (float32x4_t *)((char *)v20 + 4 * v22);
          --v26;
        }
        while (v26);
      }
      v20->f32[0] = *a5;
    }
  }
  return a1;
}

void sub_210966BA8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 8);
  if (v3)
    free(v3);
  *(_QWORD *)(v1 + 8) = 0;
  _Unwind_Resume(exception_object);
}

char ***sub_210966BC4(char ***a1, _OWORD *a2)
{
  char **v4;
  unint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  __int128 v26;
  char *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v4 = *a1;
  v6 = (*a1)[1];
  v5 = (unint64_t)(*a1)[2];
  if ((unint64_t)v6 >= v5)
  {
    v20 = *v4;
    v21 = (v6 - *v4) >> 8;
    v22 = v21 + 1;
    if ((unint64_t)(v21 + 1) >> 56)
      sub_2108B327C();
    v23 = v5 - (_QWORD)v20;
    if (v23 >> 7 > v22)
      v22 = v23 >> 7;
    if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFF00)
      v24 = 0xFFFFFFFFFFFFFFLL;
    else
      v24 = v22;
    if (v24)
    {
      if (HIBYTE(v24))
        sub_2108B2B1C();
      v25 = (char *)operator new(v24 << 8);
    }
    else
    {
      v25 = 0;
    }
    v26 = a2[13];
    v27 = &v25[256 * v21];
    *((_OWORD *)v27 + 12) = a2[12];
    *((_OWORD *)v27 + 13) = v26;
    v28 = a2[15];
    *((_OWORD *)v27 + 14) = a2[14];
    *((_OWORD *)v27 + 15) = v28;
    v29 = a2[9];
    *((_OWORD *)v27 + 8) = a2[8];
    *((_OWORD *)v27 + 9) = v29;
    v30 = a2[11];
    *((_OWORD *)v27 + 10) = a2[10];
    *((_OWORD *)v27 + 11) = v30;
    v31 = a2[5];
    *((_OWORD *)v27 + 4) = a2[4];
    *((_OWORD *)v27 + 5) = v31;
    v32 = a2[7];
    *((_OWORD *)v27 + 6) = a2[6];
    *((_OWORD *)v27 + 7) = v32;
    v33 = a2[1];
    *(_OWORD *)v27 = *a2;
    *((_OWORD *)v27 + 1) = v33;
    v34 = a2[2];
    v35 = a2[3];
    v19 = v27 + 256;
    *((_OWORD *)v27 + 2) = v34;
    *((_OWORD *)v27 + 3) = v35;
    if (v6 != v20)
    {
      do
      {
        v36 = *((_OWORD *)v6 - 16);
        v37 = *((_OWORD *)v6 - 15);
        v38 = *((_OWORD *)v6 - 13);
        *((_OWORD *)v27 - 14) = *((_OWORD *)v6 - 14);
        *((_OWORD *)v27 - 13) = v38;
        *((_OWORD *)v27 - 16) = v36;
        *((_OWORD *)v27 - 15) = v37;
        v39 = *((_OWORD *)v6 - 12);
        v40 = *((_OWORD *)v6 - 11);
        v41 = *((_OWORD *)v6 - 9);
        *((_OWORD *)v27 - 10) = *((_OWORD *)v6 - 10);
        *((_OWORD *)v27 - 9) = v41;
        *((_OWORD *)v27 - 12) = v39;
        *((_OWORD *)v27 - 11) = v40;
        v42 = *((_OWORD *)v6 - 8);
        v43 = *((_OWORD *)v6 - 7);
        v44 = *((_OWORD *)v6 - 5);
        *((_OWORD *)v27 - 6) = *((_OWORD *)v6 - 6);
        *((_OWORD *)v27 - 5) = v44;
        *((_OWORD *)v27 - 8) = v42;
        *((_OWORD *)v27 - 7) = v43;
        v45 = *((_OWORD *)v6 - 4);
        v46 = *((_OWORD *)v6 - 3);
        v47 = *((_OWORD *)v6 - 1);
        *((_OWORD *)v27 - 2) = *((_OWORD *)v6 - 2);
        *((_OWORD *)v27 - 1) = v47;
        *((_OWORD *)v27 - 4) = v45;
        *((_OWORD *)v27 - 3) = v46;
        v27 -= 256;
        v6 -= 256;
      }
      while (v6 != v20);
      v6 = *v4;
    }
    *v4 = v27;
    v4[1] = v19;
    v4[2] = &v25[256 * v24];
    if (v6)
      operator delete(v6);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = a2[3];
    *((_OWORD *)v6 + 2) = a2[2];
    *((_OWORD *)v6 + 3) = v9;
    *(_OWORD *)v6 = v7;
    *((_OWORD *)v6 + 1) = v8;
    v10 = a2[4];
    v11 = a2[5];
    v12 = a2[7];
    *((_OWORD *)v6 + 6) = a2[6];
    *((_OWORD *)v6 + 7) = v12;
    *((_OWORD *)v6 + 4) = v10;
    *((_OWORD *)v6 + 5) = v11;
    v13 = a2[8];
    v14 = a2[9];
    v15 = a2[11];
    *((_OWORD *)v6 + 10) = a2[10];
    *((_OWORD *)v6 + 11) = v15;
    *((_OWORD *)v6 + 8) = v13;
    *((_OWORD *)v6 + 9) = v14;
    v16 = a2[12];
    v17 = a2[13];
    v18 = a2[15];
    *((_OWORD *)v6 + 14) = a2[14];
    *((_OWORD *)v6 + 15) = v18;
    *((_OWORD *)v6 + 12) = v16;
    *((_OWORD *)v6 + 13) = v17;
    v19 = v6 + 256;
  }
  v4[1] = v19;
  return a1;
}

char ***sub_210966D7C(char ***a1, _OWORD *a2)
{
  char **v4;
  unint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = *a1;
  v6 = (*a1)[1];
  v5 = (unint64_t)(*a1)[2];
  if ((unint64_t)v6 >= v5)
  {
    v11 = *v4;
    v12 = (v6 - *v4) >> 6;
    v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 58)
      sub_2108B327C();
    v14 = v5 - (_QWORD)v11;
    if (v14 >> 5 > v13)
      v13 = v14 >> 5;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFC0)
      v15 = 0x3FFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (v15)
    {
      if (v15 >> 58)
        sub_2108B2B1C();
      v16 = (char *)operator new(v15 << 6);
    }
    else
    {
      v16 = 0;
    }
    v17 = &v16[64 * v12];
    v18 = a2[1];
    *(_OWORD *)v17 = *a2;
    *((_OWORD *)v17 + 1) = v18;
    v19 = a2[3];
    *((_OWORD *)v17 + 2) = a2[2];
    *((_OWORD *)v17 + 3) = v19;
    v10 = v17 + 64;
    if (v6 != v11)
    {
      do
      {
        v20 = *((_OWORD *)v6 - 4);
        v21 = *((_OWORD *)v6 - 3);
        v22 = *((_OWORD *)v6 - 1);
        *((_OWORD *)v17 - 2) = *((_OWORD *)v6 - 2);
        *((_OWORD *)v17 - 1) = v22;
        *((_OWORD *)v17 - 4) = v20;
        *((_OWORD *)v17 - 3) = v21;
        v17 -= 64;
        v6 -= 64;
      }
      while (v6 != v11);
      v6 = *v4;
    }
    *v4 = v17;
    v4[1] = v10;
    v4[2] = &v16[64 * v15];
    if (v6)
      operator delete(v6);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = a2[3];
    *((_OWORD *)v6 + 2) = a2[2];
    *((_OWORD *)v6 + 3) = v9;
    *(_OWORD *)v6 = v7;
    *((_OWORD *)v6 + 1) = v8;
    v10 = v6 + 64;
  }
  v4[1] = v10;
  return a1;
}

uint64_t sub_210966EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5;
  unsigned int v6;
  uint64_t v7;
  void *v9[2];
  uint64_t v10;
  char v11;
  void (**v12)();
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int16 v28;
  void *__p[3];
  char v30;
  uint64_t v31;
  __int16 v32;
  __int128 __dst;
  uint64_t v34;
  char v35;
  uint64_t v36[15];

  LOBYTE(v9[0]) = 0;
  v11 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v9, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)a3;
      v10 = *(_QWORD *)(a3 + 16);
    }
    v11 = 1;
    LOBYTE(__dst) = 0;
    v35 = 0;
    if (SHIBYTE(v10) < 0)
    {
      sub_2108B314C(&__dst, v9[0], (unint64_t)v9[1]);
    }
    else
    {
      __dst = *(_OWORD *)v9;
      v34 = v10;
    }
    v35 = 1;
  }
  else
  {
    LOBYTE(__dst) = 0;
    v35 = 0;
  }
  sub_210967714((uint64_t)v36, a2, (uint64_t)&__dst);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)__dst);
  v5 = *(_BYTE *)(a2 + 216);
  v6 = *(_DWORD *)(a2 + 220);
  LOBYTE(__p[0]) = 0;
  v30 = 0;
  v32 = v5;
  v31 = v6;
  v12 = off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v13, v36);
  v12 = (void (**)())&off_24CA82960;
  sub_210957BA4((uint64_t)&v24, (uint64_t)__p);
  v27 = v31;
  v28 = v32;
  if (v30 && __p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_2108B55B4((uint64_t)v36);
  v7 = v13;
  *(_QWORD *)a1 = off_24CA82AC0;
  *(_QWORD *)(a1 + 8) = v7;
  *(_DWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 40) = v16;
  v15 = 0uLL;
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  v18 = 0;
  v16 = 0;
  v17 = 0uLL;
  *(_OWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  v19 = 0uLL;
  v20 = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (v23)
  {
    *(_OWORD *)(a1 + 96) = v21;
    *(_QWORD *)(a1 + 112) = v22;
    v22 = 0;
    v21 = 0uLL;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_QWORD *)a1 = &off_24CA82960;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  if (v26)
  {
    *(_OWORD *)(a1 + 128) = v24;
    *(_QWORD *)(a1 + 144) = v25;
    v25 = 0;
    v24 = 0uLL;
    *(_BYTE *)(a1 + 152) = 1;
    *(_QWORD *)(a1 + 160) = v27;
    *(_WORD *)(a1 + 168) = v28;
    v12 = off_24CA82AC0;
    sub_2108B55B4((uint64_t)&v13);
    if (!v11)
      goto LABEL_24;
  }
  else
  {
    *(_QWORD *)(a1 + 160) = v27;
    *(_WORD *)(a1 + 168) = v28;
    v12 = off_24CA82AC0;
    sub_2108B55B4((uint64_t)&v13);
    if (!v11)
      goto LABEL_24;
  }
  if (SHIBYTE(v10) < 0)
    operator delete(v9[0]);
LABEL_24:
  *(_QWORD *)a1 = &off_24CA81330;
  return a1;
}

void sub_21096714C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  if (*(_BYTE *)(v41 - 200) && *(char *)(v41 - 201) < 0)
    operator delete(*(void **)(v41 - 224));
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2109671D0(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_210967228(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210967290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int128 v9;
  void *v11[2];
  uint64_t v12;
  char v13;
  void (**v14)();
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  void *__p;
  char v39;
  char v40;
  __int128 __dst;
  uint64_t v42;
  char v43;
  uint64_t v44[15];

  LOBYTE(v11[0]) = 0;
  v13 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v11, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v11 = *(_OWORD *)a3;
      v12 = *(_QWORD *)(a3 + 16);
    }
    v13 = 1;
    LOBYTE(__dst) = 0;
    v43 = 0;
    if (SHIBYTE(v12) < 0)
    {
      sub_2108B314C(&__dst, v11[0], (unint64_t)v11[1]);
    }
    else
    {
      __dst = *(_OWORD *)v11;
      v42 = v12;
    }
    v43 = 1;
  }
  else
  {
    LOBYTE(__dst) = 0;
    v43 = 0;
  }
  sub_210967714((uint64_t)v44, a2, (uint64_t)&__dst);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)__dst);
  if (*(_DWORD *)(a2 + 220)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndModelDefinition.cpp", 128, (uint64_t)"param.device == DeviceType::Any", 31, (uint64_t)"Only DeviceType::Any supported for EspressoV2", 45, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v5 = *(_BYTE *)(a2 + 264);
  v6 = *(_QWORD *)(a2 + 272);
  LOBYTE(v33) = 0;
  v35 = 0;
  LOBYTE(__p) = 0;
  v40 = 0;
  v36 = v5;
  v37 = v6;
  v14 = off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v15, v44);
  v14 = (void (**)())off_24CA829B8;
  sub_210964BC8(&v26, &v33);
  if (v40 && v39 < 0)
    operator delete(__p);
  if (v35 && v34 < 0)
    operator delete((void *)v33);
  sub_2108B55B4((uint64_t)v44);
  v7 = v15;
  *(_QWORD *)a1 = off_24CA82AC0;
  *(_QWORD *)(a1 + 8) = v7;
  *(_DWORD *)(a1 + 16) = v16;
  *(_OWORD *)(a1 + 24) = v17;
  *(_QWORD *)(a1 + 40) = v18;
  v17 = 0uLL;
  *(_OWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 64) = v20;
  v20 = 0;
  v18 = 0;
  v19 = 0uLL;
  *(_OWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 88) = v22;
  v21 = 0uLL;
  v22 = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (v25)
  {
    *(_OWORD *)(a1 + 96) = v23;
    *(_QWORD *)(a1 + 112) = v24;
    v24 = 0;
    v23 = 0uLL;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_QWORD *)a1 = off_24CA829B8;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  v8 = v28;
  if (v28)
  {
    *(_OWORD *)(a1 + 128) = v26;
    *(_QWORD *)(a1 + 144) = v27;
    v27 = 0;
    v26 = 0uLL;
    *(_BYTE *)(a1 + 152) = 1;
  }
  v9 = v29;
  *(_BYTE *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 160) = v9;
  *(_BYTE *)(a1 + 200) = 0;
  if (v32)
  {
    *(_OWORD *)(a1 + 176) = v30;
    *(_QWORD *)(a1 + 192) = v31;
    v31 = 0;
    v30 = 0uLL;
    *(_BYTE *)(a1 + 200) = 1;
  }
  v14 = (void (**)())off_24CA829B8;
  if (v8 && SHIBYTE(v27) < 0)
    operator delete((void *)v26);
  v14 = off_24CA82AC0;
  sub_2108B55B4((uint64_t)&v15);
  if (v13 && SHIBYTE(v12) < 0)
    operator delete(v11[0]);
  *(_QWORD *)a1 = off_24CA81358;
  return a1;
}

void sub_210967590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  uint64_t v42;

  if (*(_BYTE *)(v42 - 184) && *(char *)(v42 - 185) < 0)
    operator delete(*(void **)(v42 - 208));
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21096760C(uint64_t a1)
{
  *(_QWORD *)a1 = off_24CA829B8;
  if (*(_BYTE *)(a1 + 200) && *(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    if (!*(_BYTE *)(a1 + 152))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 152))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
LABEL_7:
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_210967688(uint64_t a1)
{
  *(_QWORD *)a1 = off_24CA829B8;
  if (*(_BYTE *)(a1 + 200) && *(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    if (!*(_BYTE *)(a1 + 152))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 152))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
LABEL_7:
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210967714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v6;
  void **v7;
  unint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void **v14;
  unint64_t v15;
  void **v16;
  unint64_t v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  void **v21;
  unint64_t v22;
  _BYTE *v23;
  __int128 v24;
  uint64_t v25;
  unint64_t *v26;
  void **v27;
  void **v28;
  void *v29;
  void **v30;
  void **v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  void *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  _BYTE *v46;
  unint64_t v47;
  void *v48;
  char *v49;
  unint64_t v50;
  void *__p[2];
  uint64_t v52;
  char v53;
  int v54;
  char v55;
  int v56;
  char v57;
  int v58;
  char v59;
  int v60;
  char v61;
  int v62;
  char v63;
  int v64;
  char v65;
  char v66;
  _BYTE v67[24];
  _BYTE *v68;
  char v69;
  _BYTE v70[24];
  _BYTE *v71;
  char v72;
  void *__dst[2];
  uint64_t v74;
  char v75;
  int v76;
  char v77;
  int v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  int v84;
  char v85;
  char v86;
  char v87;
  char v88;
  _BYTE v89[24];
  _BYTE *v90;
  char v91;
  _BYTE v92[24];
  _BYTE *v93;
  char v94;
  uint64_t v95;

  v95 = *MEMORY[0x24BDAC8D0];
  v48 = 0;
  v49 = 0;
  v50 = 0;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_2108B314C(__dst, *(void **)(a2 + 16), *(_QWORD *)(a2 + 24));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a2 + 16);
    v74 = *(_QWORD *)(a2 + 32);
  }
  v75 = 1;
  v76 = 17;
  v77 = 1;
  v78 = 1;
  v79 = 1;
  v80 = 0;
  v81 = 0;
  v82 = 0;
  v83 = 0;
  v84 = 1;
  v85 = 1;
  v86 = 0;
  v87 = 0;
  v88 = 1;
  v89[0] = 0;
  v91 = 0;
  v92[0] = 0;
  v94 = 0;
  v6 = sub_210967F78((__int128 **)&v48, (__int128 *)__dst);
  v49 = v6;
  v7 = (void **)(a2 + 40);
  if (*(char *)(a2 + 63) < 0)
  {
    v8 = *(_QWORD *)(a2 + 48);
    if (!v8)
      goto LABEL_28;
    sub_2108B314C(__p, *v7, v8);
    v6 = v49;
  }
  else
  {
    if (!*(_BYTE *)(a2 + 63))
      goto LABEL_28;
    *(_OWORD *)__p = *(_OWORD *)v7;
    v52 = *(_QWORD *)(a2 + 56);
  }
  v53 = 1;
  v54 = 33;
  v55 = 1;
  v56 = 1;
  v57 = 1;
  v58 = 6;
  v59 = 1;
  v60 = 1024;
  v61 = 1;
  v62 = 1;
  v63 = 1;
  v64 = 1;
  v65 = 1;
  v66 = 1;
  v67[0] = 0;
  v69 = 0;
  v70[0] = 0;
  v72 = 0;
  if ((unint64_t)v6 >= v50)
  {
    v9 = sub_210967F78((__int128 **)&v48, (__int128 *)__p);
  }
  else
  {
    sub_2108B43C0(v6, (__int128 *)__p);
    v9 = v6 + 168;
  }
  v49 = v9;
  if (v72)
  {
    v10 = v71;
    if (v71 == v70)
    {
      v11 = 4;
      v10 = v70;
    }
    else
    {
      if (!v71)
        goto LABEL_19;
      v11 = 5;
    }
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
LABEL_19:
  if (v69)
  {
    v12 = v68;
    if (v68 == v67)
    {
      v13 = 4;
      v12 = v67;
      goto LABEL_24;
    }
    if (v68)
    {
      v13 = 5;
LABEL_24:
      (*(void (**)(void))(*v12 + 8 * v13))();
    }
  }
  if (v53 && SHIBYTE(v52) < 0)
    operator delete(__p[0]);
LABEL_28:
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v14 = (void **)(a2 + 64);
  if (*(char *)(a2 + 87) < 0)
  {
    v15 = *(_QWORD *)(a2 + 72);
    if (!v15)
      goto LABEL_36;
    sub_2108B314C(__p, *v14, v15);
    v53 = 1;
  }
  else
  {
    if (!*(_BYTE *)(a2 + 87))
      goto LABEL_36;
    *(_OWORD *)__p = *(_OWORD *)v14;
    v52 = *(_QWORD *)(a2 + 80);
    v53 = 1;
  }
  v46 = (_BYTE *)sub_210968398((uint64_t)&v45, (uint64_t)__p);
  if (v53 && SHIBYTE(v52) < 0)
    operator delete(__p[0]);
LABEL_36:
  v16 = (void **)(a2 + 88);
  if (*(char *)(a2 + 111) < 0)
  {
    v17 = *(_QWORD *)(a2 + 96);
    if (!v17)
      goto LABEL_49;
    sub_2108B314C(__p, *v16, v17);
  }
  else
  {
    if (!*(_BYTE *)(a2 + 111))
      goto LABEL_49;
    *(_OWORD *)__p = *(_OWORD *)v16;
    v52 = *(_QWORD *)(a2 + 104);
  }
  v53 = 1;
  v18 = v46;
  if ((unint64_t)v46 >= v47)
  {
    v20 = sub_210968398((uint64_t)&v45, (uint64_t)__p);
  }
  else
  {
    *v46 = 0;
    v18[24] = 0;
    if (v53)
    {
      v19 = *(_OWORD *)__p;
      *((_QWORD *)v18 + 2) = v52;
      *(_OWORD *)v18 = v19;
      __p[1] = 0;
      v52 = 0;
      __p[0] = 0;
      v18[24] = 1;
    }
    v20 = (uint64_t)(v18 + 32);
  }
  v46 = (_BYTE *)v20;
  if (v53 && SHIBYTE(v52) < 0)
    operator delete(__p[0]);
LABEL_49:
  v21 = (void **)(a2 + 112);
  if (*(char *)(a2 + 135) < 0)
  {
    v22 = *(_QWORD *)(a2 + 120);
    if (!v22)
      goto LABEL_62;
    sub_2108B314C(__p, *v21, v22);
  }
  else
  {
    if (!*(_BYTE *)(a2 + 135))
      goto LABEL_62;
    *(_OWORD *)__p = *(_OWORD *)v21;
    v52 = *(_QWORD *)(a2 + 128);
  }
  v53 = 1;
  v23 = v46;
  if ((unint64_t)v46 >= v47)
  {
    v25 = sub_210968398((uint64_t)&v45, (uint64_t)__p);
  }
  else
  {
    *v46 = 0;
    v23[24] = 0;
    if (v53)
    {
      v24 = *(_OWORD *)__p;
      *((_QWORD *)v23 + 2) = v52;
      *(_OWORD *)v23 = v24;
      __p[1] = 0;
      v52 = 0;
      __p[0] = 0;
      v23[24] = 1;
    }
    v25 = (uint64_t)(v23 + 32);
  }
  v46 = (_BYTE *)v25;
  if (v53 && SHIBYTE(v52) < 0)
    operator delete(__p[0]);
LABEL_62:
  sub_2109866A4(a2 + 160, (uint64_t)__p);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  if (!*(_BYTE *)(a3 + 24))
  {
    a3 = a2 + 136;
    if (*(char *)(a2 + 159) < 0)
    {
      v26 = (unint64_t *)(a2 + 144);
      goto LABEL_68;
    }
LABEL_66:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)a3;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a3 + 16);
    goto LABEL_69;
  }
  if ((*(char *)(a3 + 23) & 0x80000000) == 0)
    goto LABEL_66;
  v26 = (unint64_t *)(a3 + 8);
LABEL_68:
  sub_2108B314C((_BYTE *)(a1 + 16), *(void **)a3, *v26);
LABEL_69:
  sub_2108B4278(a1 + 40, (uint64_t *)&v48);
  sub_2108B458C((_QWORD *)(a1 + 64), (uint64_t *)&v45);
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  sub_2108B4718((char *)(a1 + 88), (uint64_t)__p[0], (uint64_t)__p[1], 0xAAAAAAAAAAAAAAABLL * (((char *)__p[1] - (char *)__p[0]) >> 3));
  *(_BYTE *)(a1 + 112) = 1;
  v27 = (void **)__p[0];
  if (__p[0])
  {
    v28 = (void **)__p[1];
    v29 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        if (*((char *)v28 - 1) < 0)
          operator delete(*(v28 - 3));
        v28 -= 3;
      }
      while (v28 != v27);
      v29 = __p[0];
    }
    __p[1] = v27;
    operator delete(v29);
  }
  v30 = (void **)v45;
  if (v45)
  {
    v31 = (void **)v46;
    v32 = v45;
    if (v46 != v45)
    {
      do
      {
        if (*((_BYTE *)v31 - 8) && *((char *)v31 - 9) < 0)
          operator delete(*(v31 - 4));
        v31 -= 4;
      }
      while (v31 != v30);
      v32 = v45;
    }
    v46 = v30;
    operator delete(v32);
  }
  if (v94)
  {
    v33 = v93;
    if (v93 == v92)
    {
      v34 = 4;
      v33 = v92;
    }
    else
    {
      if (!v93)
        goto LABEL_92;
      v34 = 5;
    }
    (*(void (**)(void))(*v33 + 8 * v34))();
  }
LABEL_92:
  if (!v91)
    goto LABEL_98;
  v35 = v90;
  if (v90 == v89)
  {
    v36 = 4;
    v35 = v89;
  }
  else
  {
    if (!v90)
      goto LABEL_98;
    v36 = 5;
  }
  (*(void (**)(void))(*v35 + 8 * v36))();
LABEL_98:
  if (v75 && SHIBYTE(v74) < 0)
    operator delete(__dst[0]);
  v37 = (char *)v48;
  if (!v48)
    return;
  v38 = v48;
  if (v49 == v48)
    goto LABEL_121;
  v39 = v49 - 80;
  do
  {
    if (!v39[72])
      goto LABEL_111;
    v41 = (char *)*((_QWORD *)v39 + 8);
    if (v39 + 40 == v41)
    {
      v41 = v39 + 40;
      v42 = 4;
    }
    else
    {
      if (!v41)
        goto LABEL_111;
      v42 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v41 + 8 * v42))();
LABEL_111:
    if (!v39[32])
      goto LABEL_117;
    v43 = (char *)*((_QWORD *)v39 + 3);
    if (v39 == v43)
    {
      v43 = v39;
      v44 = 4;
    }
    else
    {
      if (!v43)
        goto LABEL_117;
      v44 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v43 + 8 * v44))();
LABEL_117:
    if (*(v39 - 64))
    {
      if (*(v39 - 65) < 0)
        operator delete(*((void **)v39 - 11));
    }
    v40 = v39 - 88;
    v39 -= 168;
  }
  while (v40 != v37);
  v38 = v48;
LABEL_121:
  v49 = v37;
  operator delete(v38);
}

void sub_210967E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  sub_2108B4114((void **)&a9);
  sub_2109588CC((uint64_t)&a40);
  sub_2108B418C(&a12);
  _Unwind_Resume(a1);
}

char *sub_210967F78(__int128 **a1, __int128 *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  __int128 *v10;
  __int128 *v11;
  __int128 *v12;
  __int128 *v13;
  __int128 *v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  char *v20;
  __int128 *v21;

  v3 = 0xCF3CF3CF3CF3CF3DLL * (((char *)a1[1] - (char *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x186186186186186)
    sub_2108B327C();
  if (0x9E79E79E79E79E7ALL * (((char *)a1[2] - (char *)*a1) >> 3) > v4)
    v4 = 0x9E79E79E79E79E7ALL * (((char *)a1[2] - (char *)*a1) >> 3);
  if (0xCF3CF3CF3CF3CF3DLL * (((char *)a1[2] - (char *)*a1) >> 3) >= 0xC30C30C30C30C3)
    v6 = 0x186186186186186;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0x186186186186186)
      sub_2108B2B1C();
    v7 = (char *)operator new(168 * v6);
  }
  else
  {
    v7 = 0;
  }
  v20 = &v7[168 * v3];
  v21 = (__int128 *)&v7[168 * v6];
  sub_2108B43C0(v20, a2);
  v8 = (uint64_t)v20;
  v9 = v20 + 168;
  v11 = *a1;
  v10 = a1[1];
  if (v10 == *a1)
  {
    *a1 = (__int128 *)v20;
    a1[1] = (__int128 *)v9;
    a1[2] = v21;
  }
  else
  {
    do
    {
      v8 -= 168;
      v10 = (__int128 *)((char *)v10 - 168);
      sub_210968268(v8, v10);
    }
    while (v10 != v11);
    v10 = *a1;
    v12 = a1[1];
    *a1 = (__int128 *)v8;
    a1[1] = (__int128 *)v9;
    a1[2] = v21;
    if (v12 != v10)
    {
      v13 = v12 - 5;
      do
      {
        if (!*((_BYTE *)v13 + 72))
          goto LABEL_22;
        v15 = (_QWORD *)*((_QWORD *)v13 + 8);
        if ((_QWORD *)((char *)v13 + 40) == v15)
        {
          v15 = (_QWORD *)v13 + 5;
          v16 = 4;
        }
        else
        {
          if (!v15)
            goto LABEL_22;
          v16 = 5;
        }
        (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_22:
        if (!*((_BYTE *)v13 + 32))
          goto LABEL_28;
        v17 = (__int128 *)*((_QWORD *)v13 + 3);
        if (v13 == v17)
        {
          v17 = v13;
          v18 = 4;
        }
        else
        {
          if (!v17)
            goto LABEL_28;
          v18 = 5;
        }
        (*(void (**)(void))(*(_QWORD *)v17 + 8 * v18))();
LABEL_28:
        if (*((_BYTE *)v13 - 64) && *((char *)v13 - 65) < 0)
          operator delete(*((void **)v13 - 11));
        v14 = (__int128 *)((char *)v13 - 88);
        v13 = (__int128 *)((char *)v13 - 168);
      }
      while (v14 != v10);
    }
  }
  if (v10)
    operator delete(v10);
  return v20 + 168;
}

void sub_210968178(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_21096818C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21096818C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v2; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 168;
    if (!*(_BYTE *)(i - 8))
      goto LABEL_10;
    v4 = *(_QWORD **)(i - 16);
    if (v4 == (_QWORD *)(i - 40))
    {
      v4 = (_QWORD *)(i - 40);
      v5 = 4;
    }
    else
    {
      if (!v4)
        goto LABEL_10;
      v5 = 5;
    }
    (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_10:
    if (!*(_BYTE *)(i - 48))
      goto LABEL_16;
    v6 = *(_QWORD **)(i - 56);
    if (v6 == (_QWORD *)(i - 80))
    {
      v6 = (_QWORD *)(i - 80);
      v7 = 4;
    }
    else
    {
      if (!v6)
        goto LABEL_16;
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
LABEL_16:
    if (*(_BYTE *)(i - 144))
    {
      if (*(char *)(i - 145) < 0)
        operator delete(*(void **)(i - 168));
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_210968268(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  int v8;
  _QWORD *v9;
  __int128 *v10;
  _QWORD *v11;
  __int128 *v12;

  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  if (*((_BYTE *)a2 + 24))
  {
    v4 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v4;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    *(_BYTE *)(a1 + 24) = 1;
  }
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((_DWORD *)a2 + 20);
  *(_BYTE *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 120) = 0;
  if (*((_BYTE *)a2 + 120))
  {
    v9 = a2 + 7;
    v10 = (__int128 *)*((_QWORD *)a2 + 14);
    if (v10)
    {
      if (v10 == (__int128 *)((char *)a2 + 88))
      {
        *(_QWORD *)(a1 + 112) = a1 + 88;
        (*(void (**)(_QWORD))(*(_QWORD *)*v9 + 24))(*v9);
        goto LABEL_10;
      }
      *(_QWORD *)(a1 + 112) = v10;
    }
    else
    {
      v9 = (_QWORD *)(a1 + 112);
    }
    *v9 = 0;
LABEL_10:
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 160) = 0;
  if (*((_BYTE *)a2 + 160))
  {
    v11 = (_QWORD *)a2 + 19;
    v12 = (__int128 *)*((_QWORD *)a2 + 19);
    if (v12)
    {
      if (v12 == a2 + 8)
      {
        *(_QWORD *)(a1 + 152) = a1 + 128;
        (*(void (**)(_QWORD))(*(_QWORD *)*v11 + 24))(*v11);
        goto LABEL_18;
      }
      *(_QWORD *)(a1 + 152) = v12;
    }
    else
    {
      v11 = (_QWORD *)(a1 + 152);
    }
    *v11 = 0;
LABEL_18:
    *(_BYTE *)(a1 + 160) = 1;
  }
  return a1;
}

uint64_t sub_210968398(uint64_t a1, uint64_t a2)
{
  void **v3;
  void **v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  void **v17;

  v3 = *(void ***)a1;
  v4 = *(void ***)(a1 + 8);
  v5 = ((uint64_t)v4 - *(_QWORD *)a1) >> 5;
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59)
    sub_2108B327C();
  v8 = *(_QWORD *)(a1 + 16) - (_QWORD)v3;
  if (v8 >> 4 > v6)
    v6 = v8 >> 4;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0)
    v9 = 0x7FFFFFFFFFFFFFFLL;
  else
    v9 = v6;
  if (v9)
  {
    if (v9 >> 59)
      sub_2108B2B1C();
    v10 = (char *)operator new(32 * v9);
    v11 = (uint64_t)&v10[32 * v5];
    *(_BYTE *)v11 = 0;
    *(_BYTE *)(v11 + 24) = 0;
    if (*(_BYTE *)(a2 + 24))
      goto LABEL_10;
  }
  else
  {
    v10 = 0;
    v11 = 32 * v5;
    *(_BYTE *)v11 = 0;
    *(_BYTE *)(v11 + 24) = 0;
    if (*(_BYTE *)(a2 + 24))
    {
LABEL_10:
      *(_OWORD *)v11 = *(_OWORD *)a2;
      *(_QWORD *)(v11 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)a2 = 0;
      *(_BYTE *)(v11 + 24) = 1;
      v3 = *(void ***)a1;
      v4 = *(void ***)(a1 + 8);
    }
  }
  v12 = &v10[32 * v9];
  v13 = v11 + 32;
  if (v4 == v3)
  {
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v12;
  }
  else
  {
    v14 = v11;
    do
    {
      *(_BYTE *)(v14 - 32) = 0;
      v14 -= 32;
      v15 = (char *)(v4 - 4);
      *(_BYTE *)(v14 + 24) = 0;
      if (*((_BYTE *)v4 - 8))
      {
        v16 = *(_OWORD *)v15;
        *(_QWORD *)(v14 + 16) = *(v4 - 2);
        *(_OWORD *)v14 = v16;
        *(v4 - 3) = 0;
        *(v4 - 2) = 0;
        *(_QWORD *)v15 = 0;
        *(_BYTE *)(v11 - 8) = 1;
      }
      v11 = v14;
      v4 -= 4;
    }
    while (v15 != (char *)v3);
    v3 = *(void ***)a1;
    v17 = *(void ***)(a1 + 8);
    *(_QWORD *)a1 = v14;
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v12;
    while (v17 != v3)
    {
      if (*((_BYTE *)v17 - 8))
      {
        if (*((char *)v17 - 9) < 0)
          operator delete(*(v17 - 4));
      }
      v17 -= 4;
    }
  }
  if (v3)
    operator delete(v3);
  return v13;
}

uint64_t sub_210968528(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 24))
      return a1;
  }
  else if (!*(_BYTE *)(a1 + 24))
  {
    return a1;
  }
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    return a1;
  operator delete(*(void **)a1);
  return a1;
}

void sub_210968594(_DWORD *a1, _DWORD *a2)
{
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  int v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  int v10;
  int i;
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  float *v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  float v28;
  float *v29;
  float *v30;
  int v31;
  unint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, const char *, uint64_t, const char *, uint64_t);
  unsigned __int8 v50;
  int v51;
  uint64_t v52;
  int v53;
  float *v54;
  float *v55;
  uint64_t v56;
  float *v57;
  float *v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  float v63;
  BOOL v64;
  uint64_t v65;
  float v66;
  float *v67;
  int v68;
  float v69;
  float v71;
  int v72;
  float v73;
  float v74;
  int v75;
  uint64_t v76;
  _DWORD *v77;
  int v78;
  int v79;
  _DWORD *v80;
  unint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  char v88;
  uint64_t v89;
  int v90;
  unint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;

  v2 = a2;
  v3 = a1;
  v4 = a1[2];
  if (v4 == a2[2] && (v5 = a1[3], v5 == a2[3]) && (v6 = a1[4], v6 == a2[4]))
  {
    v75 = a1[3];
    if (!v5)
      return;
  }
  else
  {
    if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndUtils.cpp", 39, (uint64_t)"out_wxhxc.Shape() == in_wxhxc.Shape()", 37, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
LABEL_124:
      abort();
    }
    v4 = v3[2];
    v6 = v3[4];
    v75 = v3[3];
    if (!v75)
      return;
  }
  if (v6)
    v7 = 0x100000001;
  else
    v7 = 0;
  if ((_DWORD)v7)
    v8 = HIDWORD(v7) == 0;
  else
    v8 = 1;
  v9 = v8;
  if (!v6)
    v9 = 1;
  v88 = v9;
  if (v4)
  {
    v86 = 0;
    v10 = v7 - 1;
    v96 = v6 - 1;
    v76 = 4 * (v7 & 1) + 0x3FFFFFFFCLL;
    v95 = v7 - 1;
    v77 = v2;
    v78 = v7;
    v80 = v3;
    v81 = HIDWORD(v7);
    v79 = v4;
    v85 = v6;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        v13 = v3[5];
        v12 = v3[6];
        v14 = v3[7];
        v15 = *(_QWORD *)v3;
        v16 = *(_QWORD *)(v3 + 5);
        v87 = v14 * v6;
        v92 = i;
        v91 = v14;
        v90 = v12;
        v89 = *(_QWORD *)v3;
        if ((_DWORD)v14 * v6 == -1)
        {
          sub_2109EDAB0("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
          v39 = atomic_load((unsigned __int8 *)&qword_254A75F38);
          if ((v39 & 1) == 0 && __cxa_guard_acquire(&qword_254A75F38))
          {
            __cxa_atexit((void (*)(void *))sub_2109EDF34, &qword_254A75F00, &dword_21089F000);
            __cxa_guard_release(&qword_254A75F38);
          }
          if (!byte_254A75F28 || byte_254A75F30)
          {
            v40 = qword_254A75F00;
            v41 = unk_254A75F08;
            while (v40 != v41)
            {
              v43 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v40;
              v42 = *(_QWORD *)(v40 + 8);
              v40 += 16;
              v43(v42, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
            }
          }
          v44 = atomic_load((unsigned __int8 *)&qword_254A75F38);
          if ((v44 & 1) == 0 && __cxa_guard_acquire(&qword_254A75F38))
          {
            __cxa_atexit((void (*)(void *))sub_2109EDF34, &qword_254A75F00, &dword_21089F000);
            __cxa_guard_release(&qword_254A75F38);
          }
          if (!byte_254A75F28)
            goto LABEL_124;
          qword_254A75F18(unk_254A75F20, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
          v10 = v95;
          i = v92;
          v6 = v85;
          v14 = v91;
          v12 = v90;
          v15 = v89;
          v18 = v2[5];
          v17 = v2[6];
          v19 = v2[7];
          v20 = *(_QWORD *)v2;
          if ((_DWORD)v19 * v85 != -1)
          {
LABEL_27:
            v21 = v13 * i;
            v22 = (float *)(v15 + 4 * (v21 + v12 * v86));
            if ((v88 & 1) != 0)
              goto LABEL_28;
            goto LABEL_67;
          }
        }
        else
        {
          v18 = v2[5];
          v17 = v2[6];
          v19 = v2[7];
          v20 = *(_QWORD *)v2;
          if ((_DWORD)v19 * v6 != -1)
            goto LABEL_27;
        }
        v82 = v20;
        v83 = v17;
        v93 = v19;
        sub_2109EDAB0("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
        v45 = atomic_load((unsigned __int8 *)&qword_254A75F38);
        if ((v45 & 1) == 0 && __cxa_guard_acquire(&qword_254A75F38))
        {
          __cxa_atexit((void (*)(void *))sub_2109EDF34, &qword_254A75F00, &dword_21089F000);
          __cxa_guard_release(&qword_254A75F38);
        }
        if (!byte_254A75F28 || byte_254A75F30)
        {
          v46 = qword_254A75F00;
          v47 = unk_254A75F08;
          while (v46 != v47)
          {
            v49 = *(void (**)(uint64_t, const char *, uint64_t, const char *, uint64_t))v46;
            v48 = *(_QWORD *)(v46 + 8);
            v46 += 16;
            v49(v48, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
          }
        }
        v50 = atomic_load((unsigned __int8 *)&qword_254A75F38);
        if ((v50 & 1) == 0 && __cxa_guard_acquire(&qword_254A75F38))
        {
          __cxa_atexit((void (*)(void *))sub_2109EDF34, &qword_254A75F00, &dword_21089F000);
          __cxa_guard_release(&qword_254A75F38);
        }
        if (!byte_254A75F28)
          goto LABEL_124;
        qword_254A75F18(unk_254A75F20, "total_size < std::numeric_limits<uint32_t>::max()", 49, "Given data block is too big to be represented by uint32_t indexed ArrayView", 75);
        v10 = v95;
        i = v92;
        v17 = v83;
        v6 = v85;
        v14 = v91;
        v12 = v90;
        v15 = v89;
        v19 = v93;
        v20 = v82;
        v21 = v13 * v92;
        v22 = (float *)(v89 + 4 * (v21 + v90 * v86));
        if ((v88 & 1) != 0)
        {
LABEL_28:
          v23 = v16;
          v24 = v87;
          if (v87)
            goto LABEL_29;
          goto LABEL_81;
        }
LABEL_67:
        v51 = v18 * i;
        v52 = 4 * v18;
        v84 = v21;
        if (v96)
        {
          v53 = 0;
          v54 = (float *)(v15 + 4 * (v21 + v86 * v12));
          v94 = 4 * v14;
          v55 = (float *)(v20 + 4 * (v51 + v86 * v17));
          v56 = 4 * v19;
          do
          {
            v57 = v55;
            v58 = v54;
            if (v10)
            {
              v57 = v55;
              v58 = v54;
              v59 = v95;
              do
              {
                *v58 = expf(*v57);
                v58 += v16;
                v57 = (float *)((char *)v57 + v52);
                --v59;
              }
              while (v59);
            }
            *v58 = expf(*v57);
            v54 = (float *)((char *)v54 + v94);
            v55 = (float *)((char *)v55 + v56);
            ++v53;
            v10 = v95;
          }
          while (v53 != v96);
        }
        else
        {
          v55 = (float *)(v20 + 4 * (v51 + v17 * v86));
          v54 = v22;
        }
        if (v10)
        {
          v60 = v10;
          v3 = v80;
          v4 = v79;
          LODWORD(v7) = v78;
          do
          {
            *v54 = expf(*v55);
            v54 += v16;
            v55 = (float *)((char *)v55 + v52);
            --v60;
          }
          while (v60);
        }
        else
        {
          v3 = v80;
          v4 = v79;
          LODWORD(v7) = v78;
        }
        *v54 = expf(*v55);
        v2 = v77;
        v21 = v84;
        v6 = v85;
        v10 = v95;
        i = v92;
        v14 = v91;
        v12 = v90;
        v15 = v89;
        v23 = v16;
        v24 = v87;
        if (v87)
        {
LABEL_29:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          v28 = 0.0;
          v29 = v22;
          v30 = &v22[v24];
          do
          {
            v28 = v28 + *v29;
            v31 = v27 + 1;
            v32 = v23 - ((v27 + 1) * v16);
            if (v26 + 1 == (_DWORD)v81)
              v33 = v25 + 1;
            else
              v33 = v25;
            if (v26 + 1 == (_DWORD)v81)
              v34 = 0;
            else
              v34 = v26 + 1;
            if (v26 + 1 == (_DWORD)v81)
            {
              v32 = v32 + HIDWORD(v16) - ((v26 + 1) * HIDWORD(v16));
              v35 = v14;
            }
            else
            {
              v35 = HIDWORD(v16);
            }
            v36 = v31 == (_DWORD)v7;
            if (v31 == (_DWORD)v7)
            {
              v25 = v33;
              v26 = v34;
              v27 = 0;
            }
            else
            {
              ++v27;
            }
            if (v31 == (_DWORD)v7)
              v37 = v32;
            else
              v37 = 0;
            if (v36)
              v38 = v35;
            else
              v38 = v23;
            v29 += v38 + v37;
          }
          while (v29 != v30);
          if ((v88 & 1) != 0)
            continue;
          goto LABEL_82;
        }
LABEL_81:
        v28 = 0.0;
        if ((v88 & 1) != 0)
          continue;
LABEL_82:
        v61 = 4 * v23;
        if (v96)
        {
          v62 = 0;
          v63 = 0.0 - v28;
          if (v28 >= 0.0)
            v63 = v28;
          v64 = v63 <= 0.00000011921 || v28 == 0.0;
          v65 = v23 * v76;
          if (v64)
            v66 = 1.0;
          else
            v66 = v28;
          v22 = (float *)(v15 + 4 * (v21 + v86 * v12));
          do
          {
            v67 = v22;
            if (v10)
            {
              if (v28 == 0.0 || (v67 = v22, v68 = v10, v63 <= 0.00000011921))
              {
                v67 = (float *)((char *)v22 + v65);
              }
              else
              {
                do
                {
                  *v67 = *v67 / v28;
                  v67 = (float *)((char *)v67 + v61);
                  --v68;
                }
                while (v68);
              }
            }
            *v67 = *v67 / v66;
            v22 += v14;
            ++v62;
          }
          while (v62 != v96);
        }
        if (v10)
        {
          v69 = 0.0 - v28;
          if (v28 >= 0.0)
            v69 = v28;
          if (v69 <= 0.00000011921 || v28 == 0.0)
            v71 = 1.0;
          else
            v71 = v28;
          v72 = v10;
          do
          {
            *v22 = *v22 / v71;
            v22 = (float *)((char *)v22 + v61);
            --v72;
          }
          while (v72);
        }
        v73 = *v22;
        if (v28 != 0.0)
        {
          v74 = 0.0 - v28;
          if (v28 >= 0.0)
            v74 = v28;
          if (v74 > 0.00000011921)
            v73 = v73 / v28;
        }
        *v22 = v73;
      }
      ++v86;
    }
    while (v86 != v75);
  }
}

void sub_210968DA8(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  size_t v11;
  BOOL v12;
  unint64_t v13;
  char *v14;
  char *v15;
  BOOL v16;
  unint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;

  v6 = *((unsigned int *)a2 + 2);
  v7 = *((unsigned int *)a2 + 3);
  v8 = *a3;
  v9 = a1[1];
  if (v8 * v8 != *((_DWORD *)a2 + 4) - 1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndUtils.cpp", 75, (uint64_t)"(c - 1) == (window_size * window_size)", 38, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4)|| ((v10 = v8 * v6, v11 = v8 * v7, v10 == v9) ? (v12 = v11 == HIDWORD(v9)) : (v12 = 0), !v12&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/EndToEndExtraction/src/EndToEndUtils.cpp", 76, (uint64_t)"w8 == w_x8 && h8 == h_x8", 24, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4)))
  {
    abort();
  }
  v13 = *a3;
  if (v10 <= v11)
    v10 = v11;
  if (!v10)
  {
    v15 = 0;
    v14 = 0;
    goto LABEL_22;
  }
  if ((v10 & 0x8000000000000000) != 0)
    sub_2108B327C();
  v14 = (char *)operator new(2 * v10);
  bzero(v14, 2 * v10);
  v15 = (char *)operator new(v10);
  bzero(v15, v10);
  if (v10 < 2 || ((_DWORD)v10 ? (v16 = (v10 - 1) >> 32 == 0) : (v16 = 0), !v16))
  {
    v17 = 0;
    v18 = 0;
LABEL_18:
    v19 = v18 + 1;
    do
    {
      *(_WORD *)&v14[2 * v17] = v17 / v13;
      v15[v17] = v17 % v13;
      v17 = v19++;
    }
    while (v10 != v17);
    goto LABEL_22;
  }
  v35 = 0;
  v17 = v10 & 0xFFFFFFFFFFFFFFFELL;
  v18 = v10 & 0xFFFFFFFE;
  do
  {
    v36 = &v14[2 * v35];
    *(_WORD *)v36 = v35 / v13;
    *((_WORD *)v36 + 1) = (v35 + 1) / v13;
    v37 = &v15[v35];
    *v37 = v35 % v13;
    v37[1] = (v35 + 1) % v13;
    v35 += 2;
  }
  while (v17 != v35);
  if (v10 != v17)
    goto LABEL_18;
LABEL_22:
  v20 = *((unsigned int *)a1 + 5);
  v21 = v20 * HIDWORD(a1[1]);
  if (v21 && a1[1])
  {
    v22 = 0;
    v23 = *a1;
    v24 = *a1 + 4 * v21;
    v25 = *((_DWORD *)a2 + 5);
    v26 = *((_DWORD *)a2 + 6);
    v27 = *((_DWORD *)a2 + 7);
    v28 = *a2;
    v29 = 4 * a1[1];
    v30 = 4 * v20;
    do
    {
      v31 = 0;
      v32 = v22;
      v33 = v26 * *(unsigned __int16 *)&v14[2 * v22];
      v34 = v29;
      do
      {
        *(_DWORD *)(v23 + 4 * v31) = *(_DWORD *)(v28
                                               + 4
                                               * (v33
                                                + v25 * *(unsigned __int16 *)&v14[2 * v31]
                                                + v27
                                                * (v15[v31]
                                                 + v13 * v15[v32])));
        ++v31;
        v34 -= 4;
      }
      while (v34);
      v23 += v30;
      v22 = v32 + 1;
    }
    while (v23 != v24);
  }
  else if (!v15)
  {
    goto LABEL_31;
  }
  operator delete(v15);
LABEL_31:
  if (v14)
    operator delete(v14);
}

void sub_21096905C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  void *v10;

  operator delete(v10);
  _Unwind_Resume(a1);
}

void sub_210969084(__int128 *a1@<X0>, int a2@<W1>, float **a3@<X8>, float a4@<S0>)
{
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  BOOL v9;
  float *v10;
  unsigned int v11;
  float *v12;
  float v13;
  float v14;
  unsigned int v15;
  float *v16;
  float *v17;
  float v18;
  int v19;
  int v20;
  float *v21;
  uint64_t v22;
  float v23;
  _BOOL4 v24;
  unint64_t v25;
  float *v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  uint64_t i;
  unsigned int v39;
  unsigned int v40;
  BOOL v41;
  float v42;
  float v43;
  float **v44;
  unint64_t v45;
  float *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  float *v53;
  char *v54;
  unint64_t v55;
  float *v56;
  float *v57;
  uint64_t v58;
  float *v59;
  float *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  float *v65;
  uint64_t v66;
  __int128 v67;
  float *v68;
  float v69;
  float v70;
  float v71;
  float v72;
  float v73;
  float v74;
  float v75;
  float v76;
  float v77;
  unint64_t v78;
  float *v79;
  float *v80;
  unsigned int v81;
  unsigned int v82;
  int v84;
  __int128 *v85;
  float *v86;
  unsigned int v87;
  __int128 v88;
  uint64_t v89;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v5 = *((_DWORD *)a1 + 2);
  v6 = *((_DWORD *)a1 + 3);
  v88 = *a1;
  v89 = *((_QWORD *)a1 + 2);
  v7 = HIDWORD(v89) * HIDWORD(*a1);
  v8 = *((_QWORD *)a1 + 1);
  if (v7)
    v9 = v8 == 0;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = 0;
    v11 = 0;
    v12 = *(float **)a1;
    v79 = (float *)(v88 + 4 * v7);
    v87 = v5 - 3;
    v82 = v6 - 3;
    v13 = (float)v5 + -1.0;
    v14 = (float)v6 + -1.0;
    v84 = a2;
    v85 = a1;
    do
    {
      v15 = 0;
      v16 = &v12[v8];
      v81 = v11 - 1;
      v80 = v12;
      v86 = v16;
      do
      {
        v18 = *v12;
        if (*v12 < a4)
          goto LABEL_10;
        v19 = *((_DWORD *)a1 + 4);
        v20 = *((_DWORD *)a1 + 5);
        v21 = *(float **)a1;
        if (v15 >= 4 && v15 < v87 && v11 >= 4 && v11 < v82)
        {
          v22 = 0;
          do
          {
            v23 = v21[(*(_DWORD *)((char *)&unk_210A18344 + v22) + v15) * v19
                    + (*(_DWORD *)((char *)&unk_210A18344 + v22 + 4) + v11) * v20];
            v24 = v23 < v18;
            if (v23 >= v18)
              break;
            v9 = v22 == 376;
            v22 += 8;
          }
          while (!v9);
          if (a2)
          {
            v25 = *((_QWORD *)a1 + 2);
            if (HIDWORD(v25) != 1431655765
              || !sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
            {
              v26 = &v21[v19 * (v15 - 1) + v20 * v81];
              v27 = v26[HIDWORD(v25)];
              v28 = v26[v25];
              v29 = v26[(HIDWORD(v25) + 2 * v25)];
              v30 = v26[(v25 + 2 * HIDWORD(v25))];
              v31 = v30 + (float)(v28 + (float)((float)(v26[(HIDWORD(v25) + v25)] + v27) + v29));
              v32 = (float)(v29 - v27) / v31;
              if (v32 <= 1.0)
                v33 = (float)(v29 - v27) / v31;
              else
                v33 = 1.0;
              if (v32 >= -1.0)
                v34 = v33;
              else
                v34 = -1.0;
              v35 = (float)(v30 - v28) / v31;
              if (v35 <= 1.0)
                v36 = (float)(v30 - v28) / v31;
              else
                v36 = 1.0;
              if (v35 >= -1.0)
                v37 = v36;
              else
                v37 = -1.0;
              a2 = v84;
              a1 = v85;
              v16 = v86;
              if (v23 >= v18)
                goto LABEL_10;
              goto LABEL_52;
            }
            goto LABEL_103;
          }
LABEL_51:
          v34 = 0.0;
          v37 = 0.0;
          if (v24)
            goto LABEL_52;
          goto LABEL_10;
        }
        for (i = 0; i != 384; i += 8)
        {
          v39 = *(_DWORD *)((char *)&unk_210A18344 + i) + v15;
          v40 = *(_DWORD *)((char *)&unk_210A18344 + i + 4) + v11;
          v41 = v13 < (float)v39 || v14 < (float)v40;
          if (!v41 && v21[v39 * v19 + v40 * v20] >= v18)
          {
            v24 = 0;
            if (a2)
              goto LABEL_47;
            goto LABEL_51;
          }
        }
        v24 = 1;
        if (!a2)
          goto LABEL_51;
LABEL_47:
        if (v13 >= (float)(v15 + 1))
        {
          if (v14 < (float)(v11 + 1))
            goto LABEL_51;
          if (v13 < (float)(v15 - 1))
          {
            v34 = 0.0;
            v37 = 0.0;
            a2 = v84;
            a1 = v85;
            v16 = v86;
            if (!v24)
              goto LABEL_10;
            goto LABEL_52;
          }
          if (v14 < (float)(v11 - 1))
          {
            a2 = v84;
            a1 = v85;
            v16 = v86;
            v34 = 0.0;
            v37 = 0.0;
            if (!v24)
              goto LABEL_10;
            goto LABEL_52;
          }
          v78 = *((_QWORD *)v85 + 2);
          if (HIDWORD(v78) != 1431655765
            || !sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
          {
            v68 = &v21[v19 * (v15 - 1) + v20 * v81];
            v69 = v68[HIDWORD(v78)];
            v70 = v68[v78];
            v71 = v68[(HIDWORD(v78) + 2 * v78)];
            v72 = v68[(v78 + 2 * HIDWORD(v78))];
            v73 = v72 + (float)(v70 + (float)((float)(v68[(HIDWORD(v78) + v78)] + v69) + v71));
            v74 = (float)(v71 - v69) / v73;
            if (v74 <= 1.0)
              v75 = (float)(v71 - v69) / v73;
            else
              v75 = 1.0;
            if (v74 >= -1.0)
              v34 = v75;
            else
              v34 = -1.0;
            v76 = (float)(v72 - v70) / v73;
            if (v76 <= 1.0)
              v77 = (float)(v72 - v70) / v73;
            else
              v77 = 1.0;
            if (v76 >= -1.0)
              v37 = v77;
            else
              v37 = -1.0;
            a2 = v84;
            a1 = v85;
            v16 = v86;
            if (!v24)
              goto LABEL_10;
LABEL_52:
            v42 = v34 + (float)v15;
            v43 = v37 + (float)v11;
            v44 = a3;
            v45 = (unint64_t)a3[2];
            if ((unint64_t)v10 < v45)
            {
              *v10 = v42;
              v10[1] = v43;
              v17 = v10 + 2;
              goto LABEL_9;
            }
            v46 = *a3;
            v47 = (char *)v10 - (char *)*a3;
            v48 = v47 >> 3;
            v49 = (v47 >> 3) + 1;
            if (v49 >> 61)
              sub_2108B327C();
            v50 = v45 - (_QWORD)v46;
            if (v50 >> 2 > v49)
              v49 = v50 >> 2;
            if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8)
              v51 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v51 = v49;
            if (v51)
            {
              if (v51 >> 61)
                sub_2108B2B1C();
              v52 = operator new(8 * v51);
              v53 = (float *)&v52[8 * v48];
              *v53 = v42;
              v53[1] = v43;
              v54 = (char *)((char *)v10 - (char *)v46);
              if (v10 != v46)
              {
LABEL_62:
                v55 = (unint64_t)(v54 - 8);
                if (v55 < 0x168
                  || (v61 = ((char *)(v10 - 2) - (char *)v46) & 0xFFFFFFFFFFFFFFF8, &v52[v47 - 8 - v61] > &v52[v47 - 8])
                  || (float *)((char *)v10 - v61 - 8) > v10 - 2
                  || (unint64_t)((char *)v10 - v52 - v47) < 0x20)
                {
                  v56 = v10;
                  v57 = v53;
                  v44 = a3;
                }
                else
                {
                  v62 = (v55 >> 3) + 1;
                  v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
                  v56 = &v10[v63 / 0xFFFFFFFFFFFFFFFCLL];
                  v57 = &v53[v63 / 0xFFFFFFFFFFFFFFFCLL];
                  v64 = &v52[8 * v48 - 16];
                  v65 = v10 - 4;
                  v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
                  do
                  {
                    v67 = *(_OWORD *)v65;
                    *(v64 - 1) = *((_OWORD *)v65 - 1);
                    *v64 = v67;
                    v64 -= 2;
                    v65 -= 8;
                    v66 -= 4;
                  }
                  while (v66);
                  v44 = a3;
                  if (v62 == (v62 & 0x3FFFFFFFFFFFFFFCLL))
                  {
LABEL_65:
                    v10 = *v44;
                    v59 = (float *)&v52[8 * v51];
                    v17 = v53 + 2;
                    *v44 = v57;
                    v44[1] = v53 + 2;
                    v44[2] = v59;
                    if (!v10)
                      goto LABEL_9;
LABEL_69:
                    operator delete(v10);
LABEL_9:
                    v44[1] = v17;
                    v10 = v17;
                    a2 = v84;
                    a1 = v85;
                    v16 = v86;
                    goto LABEL_10;
                  }
                }
                do
                {
                  v58 = *((_QWORD *)v56 - 1);
                  v56 -= 2;
                  *((_QWORD *)v57 - 1) = v58;
                  v57 -= 2;
                }
                while (v56 != v46);
                goto LABEL_65;
              }
            }
            else
            {
              v52 = 0;
              v53 = (float *)(8 * v48);
              *v53 = v42;
              v53[1] = v43;
              v54 = (char *)((char *)v10 - (char *)v46);
              if (v10 != v46)
                goto LABEL_62;
            }
            v44 = a3;
            v60 = (float *)&v52[8 * v51];
            v17 = v53 + 2;
            *a3 = v53;
            a3[1] = v53 + 2;
            a3[2] = v60;
            if (v10)
              goto LABEL_69;
            goto LABEL_9;
          }
LABEL_103:
          abort();
        }
        v34 = 0.0;
        v37 = 0.0;
        if (v24)
          goto LABEL_52;
LABEL_10:
        ++v12;
        ++v15;
      }
      while (v12 != v16);
      v8 = DWORD2(v88);
      v12 = &v80[HIDWORD(v89)];
      ++v11;
    }
    while (v12 != v79);
  }
}

void sub_210969724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v16;
  va_list va;

  va_start(va, a15);
  sub_210955EB0((uint64_t)va);
  v16 = *(void **)a11;
  if (*(_QWORD *)a11)
  {
    *(_QWORD *)(a11 + 8) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_210969754(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 16))(**(_QWORD **)(a1 + 8));
}

uint64_t sub_210969768(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 32))(**(_QWORD **)(a1 + 8));
}

void sub_21096977C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  float *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  float *v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  void *__p;
  _BYTE *v26;
  char v27;

  *(_QWORD *)(a5 + 32) = 0;
  *(_DWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)a5 = 0;
  *(_DWORD *)(a5 + 24) = 0;
  v10 = (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 24))(**(_QWORD **)(a1 + 8));
  v11 = v10;
  v12 = *a3;
  v13 = 0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 2);
  v14 = vcvtps_u32_f32((float)v13 / (float)v10);
  if (!v14)
    return;
  if (v13 % v10)
    v15 = v13 % v10;
  else
    v15 = v10;
  v22 = 0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 2);
  v23 = v12;
  v16 = sub_21095FE2C(&v22, 0, v15);
  sub_21096DDE4((unsigned int *)(a2 + 32), v16, v17, (float **)&__p);
  (*(void (**)(unint64_t *__return_ptr, _QWORD, uint64_t, unint64_t, void *, uint64_t))(***(_QWORD ***)(a1 + 8) + 40))(&v22, **(_QWORD **)(a1 + 8), a2, 0xAAAAAAAAAAAAAAABLL * ((v26 - (_BYTE *)__p) >> 3), __p, a4);
  if ((sub_210983B80((char **)a5, (uint64_t)&v22) & 1) == 0
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/ATUDescriptorExtractor.cpp", 78, (uint64_t)"append_ret", 10, (uint64_t)"Append descriptors failed", 25, (void (*)(void **))sub_2109EDDB4))
  {
LABEL_21:
    abort();
  }
  if (v24 != -1)
    ((void (*)(char *, unint64_t *))off_24CA81448[v24])(&v27, &v22);
  if (__p)
  {
    v26 = __p;
    operator delete(__p);
  }
  v18 = v14 - 1;
  if (v14 != 1)
  {
    while (1)
    {
      v19 = *a3;
      v22 = 0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 2);
      v23 = v19;
      v20 = sub_21095FE2C(&v22, v15, v11);
      sub_21096DDE4((unsigned int *)(a2 + 32), v20, v21, (float **)&__p);
      (*(void (**)(unint64_t *__return_ptr, _QWORD, uint64_t, unint64_t, void *, uint64_t))(***(_QWORD ***)(a1 + 8) + 40))(&v22, **(_QWORD **)(a1 + 8), a2, 0xAAAAAAAAAAAAAAABLL * ((v26 - (_BYTE *)__p) >> 3), __p, a4);
      if ((sub_210983B80((char **)a5, (uint64_t)&v22) & 1) == 0
        && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/ATUDescriptorExtractor.cpp", 78, (uint64_t)"append_ret", 10, (uint64_t)"Append descriptors failed", 25, (void (*)(void **))sub_2109EDDB4))
      {
        break;
      }
      if (v24 != -1)
        ((void (*)(char *, unint64_t *))off_24CA81448[v24])(&v27, &v22);
      if (__p)
      {
        v26 = __p;
        operator delete(__p);
      }
      v15 += v11;
      if (!--v18)
        return;
    }
    goto LABEL_21;
  }
}

void sub_210969A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;

  if (__p)
  {
    operator delete(__p);
    sub_2108CE6E8(v16);
    _Unwind_Resume(a1);
  }
  sub_2108CE6E8(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_210969ABC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &off_24CA81408;
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  return a1;
}

void sub_210969AFC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &off_24CA81408;
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210969B4C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81478;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210969B5C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81478;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210969B8C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_210969B9C(uint64_t result)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  if (result)
  {
    v1 = *(std::__shared_weak_count **)(result + 8);
    if (v1)
    {
      p_shared_owners = (unint64_t *)&v1->__shared_owners_;
      do
        v3 = __ldaxr(p_shared_owners);
      while (__stlxr(v3 - 1, p_shared_owners));
      if (!v3)
      {
        ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
        std::__shared_weak_count::__release_weak(v1);
      }
    }
    JUMPOUT(0x212BCC6FCLL);
  }
  return result;
}

uint64_t sub_210969C0C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  void *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  void *v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v42;
  unint64_t *p_shared_owners;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  __int128 v47;
  void *v48;
  unint64_t v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  void *v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  void **v66;
  uint64_t v67;
  void **v68;
  uint64_t v69;
  void *v70[2];
  char v71;
  char v72;
  uint64_t (**v73)();
  uint64_t v74[15];
  __int128 __p;
  std::__shared_weak_count_vtbl *v76;
  char v77;
  __int128 v78;
  __int128 v79;
  std::__shared_weak_count_vtbl *v80;
  char v81;
  __int128 v82;
  void *v83;
  char v84;
  uint64_t (**v85)();
  char v86;
  uint64_t v87;
  std::__shared_weak_count *v88;
  uint64_t v89;
  std::__shared_weak_count *v90;
  std::__shared_weak_count *v91;
  std::__shared_weak_count *v92;
  std::__shared_weak_count *v93;
  std::__shared_weak_count *v94;
  uint64_t v95;
  void *v96;
  uint64_t (**v97)();
  char v98;
  unsigned __int8 v99;
  uint64_t v100;
  std::__shared_weak_count *v101;

  *(_QWORD *)a1 = &off_24CA814C8;
  v3 = a1 + 8;
  sub_2109717C0(a2, a1 + 8);
  *(_QWORD *)(a1 + 176) = 0;
  v4 = (uint64_t *)(a1 + 176);
  v5 = *(unsigned __int8 *)(a1 + 127);
  v6 = (char)v5;
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a1 + 112);
  if (v5 >= 7)
  {
    v7 = v6 >= 0 ? a1 + 104 : *(_QWORD *)(a1 + 104);
    v8 = v5 + v7;
    v9 = *(_DWORD *)(v8 - 7);
    v10 = *(_DWORD *)(v8 - 4);
    if (v9 == 1853186606 && v10 == 1701602414)
    {
      LOBYTE(v70[0]) = 0;
      v72 = 0;
      sub_21096BCA8((uint64_t)&v73, v3, (uint64_t)v70);
      sub_21098D1D0((uint64_t)&v73, (uint64_t)&v96);
      if (v98)
      {
        LOBYTE(v82) = 0;
        v84 = 0;
        v85 = &off_24CA79A00;
        v86 = v98;
        v42 = v101;
        v87 = v100;
        v88 = v101;
        if (!v101)
          goto LABEL_105;
        p_shared_owners = (unint64_t *)&v101->__shared_owners_;
        do
          v44 = __ldxr(p_shared_owners);
        while (__stxr(v44 + 1, p_shared_owners));
        v97 = &off_24CA79A00;
      }
      else
      {
        v45 = (std::__shared_weak_count *)operator new(0xE8uLL);
        v45->__shared_owners_ = 0;
        v46 = (unint64_t *)&v45->__shared_owners_;
        v45->__shared_weak_owners_ = 0;
        v45->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81520;
        v45[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
        sub_2108B3FF0((uint64_t)&v45[1].__shared_owners_, v74);
        LOBYTE(v45[6].__shared_owners_) = 0;
        v45[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA829B8;
        LOBYTE(v45[7].__shared_owners_) = 0;
        if (v77)
        {
          if (SHIBYTE(v76) < 0)
          {
            sub_2108B314C(&v45[6].__shared_owners_, (void *)__p, *((unint64_t *)&__p + 1));
          }
          else
          {
            *(_OWORD *)&v45[6].__shared_owners_ = __p;
            v45[7].__vftable = v76;
          }
          LOBYTE(v45[7].__shared_owners_) = 1;
        }
        v47 = v78;
        LOBYTE(v45[8].__shared_owners_) = 0;
        *(_OWORD *)&v45[7].__shared_weak_owners_ = v47;
        LOBYTE(v45[9].__shared_owners_) = 0;
        if (v81)
        {
          if (SHIBYTE(v80) < 0)
          {
            sub_2108B314C(&v45[8].__shared_owners_, (void *)v79, *((unint64_t *)&v79 + 1));
          }
          else
          {
            *(_OWORD *)&v45[8].__shared_owners_ = v79;
            v45[9].__vftable = v80;
          }
          LOBYTE(v45[9].__shared_owners_) = 1;
        }
        v45[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA81630;
        v91 = v45 + 1;
        v92 = v45;
        v89 = 0;
        v90 = 0;
        v48 = v96;
        v96 = 0;
        v93 = v45 + 1;
        v94 = v45;
        do
          v49 = __ldxr(v46);
        while (__stxr(v49 + 1, v46));
        if (!v48
          && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
        {
          abort();
        }
        *(_QWORD *)&v82 = v45 + 1;
        *((_QWORD *)&v82 + 1) = v45;
        v93 = 0;
        v94 = 0;
        v83 = v48;
        v84 = 1;
        v85 = &off_24CA79A00;
        v86 = 0;
        v87 = v100;
        v88 = v101;
        if (v101)
        {
          v50 = (unint64_t *)&v101->__shared_owners_;
          do
            v51 = __ldxr(v50);
          while (__stxr(v51 + 1, v50));
        }
        v95 = 0;
        do
          v52 = __ldaxr(v46);
        while (__stlxr(v52 - 1, v46));
        if (!v52)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
        v53 = v90;
        if (v90)
        {
          v54 = (unint64_t *)&v90->__shared_owners_;
          do
            v55 = __ldaxr(v54);
          while (__stlxr(v55 - 1, v54));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
            std::__shared_weak_count::__release_weak(v53);
          }
        }
        v42 = v101;
        v97 = &off_24CA79A00;
        if (!v101)
        {
LABEL_105:
          if (v96)
            (*(void (**)(void *))(*(_QWORD *)v96 + 8))(v96);
          if (v86)
          {
            std::operator+<char>();
            if ((v99 & 0x80u) == 0)
              v68 = &v96;
            else
              v68 = (void **)v96;
            if ((v99 & 0x80u) == 0)
              v69 = v99;
            else
              v69 = (uint64_t)v97;
            sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/include_private/LearnedFeatures/DescriptorExtraction/DescriptorExtractionUtil.h", 100, (uint64_t)&unk_210A01421, 0, (uint64_t)v68, v69, (void (*)(void **))sub_2109EDDB4);
            if ((char)v99 < 0)
              operator delete(v96);
            abort();
          }
          v58 = operator new();
          *(_OWORD *)v58 = v82;
          v82 = 0uLL;
          v59 = v88;
          *(_QWORD *)(v58 + 16) = v83;
          v83 = 0;
          v85 = &off_24CA79A00;
          if (v59)
          {
            v60 = (unint64_t *)&v59->__shared_owners_;
            do
              v61 = __ldaxr(v60);
            while (__stlxr(v61 - 1, v60));
            if (!v61)
            {
              ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
              std::__shared_weak_count::__release_weak(v59);
            }
          }
          if (v84)
          {
            v62 = v83;
            v83 = 0;
            if (v62)
              (*(void (**)(void *))(*(_QWORD *)v62 + 8))(v62);
            v63 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
            if (*((_QWORD *)&v82 + 1))
            {
              v64 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
              do
                v65 = __ldaxr(v64);
              while (__stlxr(v65 - 1, v64));
              if (!v65)
              {
                ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
                std::__shared_weak_count::__release_weak(v63);
              }
            }
          }
          v73 = off_24CA829B8;
          if (v81 && SHIBYTE(v80) < 0)
            operator delete((void *)v79);
          if (v77 && SHIBYTE(v76) < 0)
            operator delete((void *)__p);
          v73 = (uint64_t (**)())off_24CA82AC0;
          sub_2108B55B4((uint64_t)v74);
          if (v72 && v71 < 0)
            operator delete(v70[0]);
          v35 = 1;
          v36 = *v4;
          *v4 = v58;
          if (v36)
            goto LABEL_60;
          goto LABEL_68;
        }
      }
      v56 = (unint64_t *)&v42->__shared_owners_;
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
      goto LABEL_105;
    }
  }
  LOBYTE(v70[0]) = 0;
  v72 = 0;
  sub_21096B8C0((uint64_t)&v73, v3, (uint64_t)v70);
  sub_21098CEE4((uint64_t)&v73, (uint64_t)&v96);
  if (v98)
  {
    LOBYTE(v82) = 0;
    v84 = 0;
    v85 = &off_24CA79A00;
    v86 = v98;
    v12 = v101;
    v87 = v100;
    v88 = v101;
    if (!v101)
      goto LABEL_37;
    v13 = (unint64_t *)&v101->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    v97 = &off_24CA79A00;
    goto LABEL_33;
  }
  v15 = (std::__shared_weak_count *)operator new(0xC8uLL);
  v15->__shared_owners_ = 0;
  v16 = (unint64_t *)&v15->__shared_owners_;
  v15->__shared_weak_owners_ = 0;
  v15->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81570;
  v15[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v15[1].__shared_owners_, v74);
  v15[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA82960;
  sub_210957BA4((uint64_t)&v15[6].__shared_owners_, (uint64_t)&__p);
  v15[7].__shared_weak_owners_ = v78;
  LOWORD(v15[8].__vftable) = WORD4(v78);
  v15[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81608;
  v91 = v15 + 1;
  v92 = v15;
  v89 = 0;
  v90 = 0;
  v17 = v96;
  v96 = 0;
  v93 = v15 + 1;
  v94 = v15;
  do
    v18 = __ldxr(v16);
  while (__stxr(v18 + 1, v16));
  if (!v17
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  *(_QWORD *)&v82 = v15 + 1;
  *((_QWORD *)&v82 + 1) = v15;
  v93 = 0;
  v94 = 0;
  v83 = v17;
  v84 = 1;
  v85 = &off_24CA79A00;
  v86 = 0;
  v87 = v100;
  v88 = v101;
  if (v101)
  {
    v19 = (unint64_t *)&v101->__shared_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  v95 = 0;
  do
    v21 = __ldaxr(v16);
  while (__stlxr(v21 - 1, v16));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  v22 = v90;
  if (v90)
  {
    v23 = (unint64_t *)&v90->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v12 = v101;
  v97 = &off_24CA79A00;
  if (v101)
  {
LABEL_33:
    v25 = (unint64_t *)&v12->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
LABEL_37:
  if (v96)
    (*(void (**)(void *))(*(_QWORD *)v96 + 8))(v96);
  if (v86)
  {
    std::operator+<char>();
    if ((v99 & 0x80u) == 0)
      v66 = &v96;
    else
      v66 = (void **)v96;
    if ((v99 & 0x80u) == 0)
      v67 = v99;
    else
      v67 = (uint64_t)v97;
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/include_private/LearnedFeatures/DescriptorExtraction/DescriptorExtractionUtil.h", 100, (uint64_t)&unk_210A01421, 0, (uint64_t)v66, v67, (void (*)(void **))sub_2109EDDB4);
    if ((char)v99 < 0)
      operator delete(v96);
    abort();
  }
  v27 = operator new();
  *(_OWORD *)v27 = v82;
  v82 = 0uLL;
  v28 = v88;
  *(_QWORD *)(v27 + 16) = v83;
  v83 = 0;
  v85 = &off_24CA79A00;
  if (v28)
  {
    v29 = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v84)
  {
    v31 = v83;
    v83 = 0;
    if (v31)
      (*(void (**)(void *))(*(_QWORD *)v31 + 8))(v31);
    v32 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
    if (*((_QWORD *)&v82 + 1))
    {
      v33 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
      do
        v34 = __ldaxr(v33);
      while (__stlxr(v34 - 1, v33));
      if (!v34)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
  }
  v73 = &off_24CA82960;
  if (v77 && (_QWORD)__p)
  {
    *((_QWORD *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  v73 = (uint64_t (**)())off_24CA82AC0;
  sub_2108B55B4((uint64_t)v74);
  if (v72 && v71 < 0)
    operator delete(v70[0]);
  v35 = 0;
  v36 = *v4;
  *v4 = v27;
  if (v36)
  {
LABEL_60:
    v37 = *(_QWORD *)(v36 + 16);
    *(_QWORD *)(v36 + 16) = 0;
    if (v37)
      (*(void (**)(uint64_t))(*(_QWORD *)v37 + 8))(v37);
    v38 = *(std::__shared_weak_count **)(v36 + 8);
    if (v38)
    {
      v39 = (unint64_t *)&v38->__shared_owners_;
      do
        v40 = __ldaxr(v39);
      while (__stlxr(v40 - 1, v39));
      if (!v40)
      {
        ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
        std::__shared_weak_count::__release_weak(v38);
      }
    }
    MEMORY[0x212BCC6FC](v36, 0x60C40CE5A77A8);
  }
LABEL_68:
  *(_BYTE *)(a1 + 184) = v35;
  return a1;
}

void sub_21096A5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  void **v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void *v54;

  if (*(_BYTE *)(v50 + 224) && *(char *)(v50 + 223) < 0)
    operator delete(*v49);
  if (*(_BYTE *)(v50 + 176) && *(char *)(v50 + 175) < 0)
    operator delete(*v48);
  *v51 = off_24CA82AC0;
  sub_2108B55B4(v47);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v50);
  operator delete(v54);
  sub_210957AC8((uint64_t *)(v52 - 128));
  sub_21096C01C((uint64_t)&a17);
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  sub_21095B908(v45);
  sub_21096A74C(v46);
  _Unwind_Resume(a1);
}

uint64_t sub_21096A74C(uint64_t a1)
{
  void *v2;

  sub_21095A1BC(a1 + 128, *(void ***)(a1 + 144));
  v2 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0;
  if (v2)
    operator delete(v2);
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
    {
LABEL_5:
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
        goto LABEL_6;
LABEL_10:
      operator delete(*(void **)(a1 + 48));
      if ((*(char *)(a1 + 47) & 0x80000000) == 0)
        return a1;
      goto LABEL_11;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 71) < 0)
    goto LABEL_10;
LABEL_6:
  if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    return a1;
LABEL_11:
  operator delete(*(void **)(a1 + 24));
  return a1;
}

uint64_t sub_21096A7F0(uint64_t a1)
{
  return *(_QWORD *)(**(_QWORD **)(a1 + 176) + 8);
}

uint64_t sub_21096A808(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

BOOL sub_21096A810(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  int v4;
  char *v5;
  __int128 v6;
  _QWORD *v7;
  void **v8;
  void **v9;
  void *v10;
  void *v12;
  void *v13;
  char *v14;
  void *__p;
  void **v16;
  char v17;

  v3 = a1 + 17;
  v4 = (*(uint64_t (**)(_QWORD *))(*a1 + 24))(a1);
  v5 = (char *)operator new(0x28uLL);
  v13 = v5 + 40;
  v14 = v5 + 40;
  *(_DWORD *)v5 = 1;
  *(_QWORD *)(v5 + 4) = *a2;
  *(_QWORD *)&v6 = 0x100000001;
  *((_QWORD *)&v6 + 1) = 0x100000001;
  *(_OWORD *)(v5 + 12) = v6;
  *(_QWORD *)(v5 + 28) = 0x600000001;
  *((_DWORD *)v5 + 9) = v4;
  v12 = v5;
  LOBYTE(__p) = 0;
  v17 = 0;
  v7 = sub_210988F20(v3, (unint64_t)&v12);
  if (v17)
  {
    v8 = (void **)__p;
    if (__p)
    {
      v9 = v16;
      v10 = __p;
      if (v16 != __p)
      {
        do
        {
          if (*((char *)v9 - 1) < 0)
            operator delete(*(v9 - 3));
          v9 -= 3;
        }
        while (v9 != v8);
        v10 = __p;
      }
      v16 = v8;
      operator delete(v10);
    }
  }
  if (v12)
  {
    v13 = v12;
    operator delete(v12);
  }
  return v7 != 0;
}

void sub_21096A90C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_21095BC5C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096A920(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void *v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  _QWORD *v17;
  void **v18;
  void **v19;
  void *v20;
  uint64_t v21;
  int v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  __int128 v39;
  unint64_t *v40;
  unint64_t v41;
  void *v42;
  int v43;
  __int16 v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  char *v48;
  unsigned int v49;
  char *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  __int16 v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  int v71;
  __int16 v72;
  unint64_t v73;
  unint64_t *v74;
  unint64_t v75;
  unsigned int v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  char *v83;
  void *v84;
  char *v85;
  uint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  char *v90;
  char *v91;
  void *v92;
  char *v93;
  uint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  int v101;
  const std::string::value_type *v102;
  std::string::size_type v103;
  std::string *v104;
  __int128 v105;
  _BYTE *v106;
  uint64_t v107;
  _QWORD v109[2];
  _BYTE v110[54];
  uint64_t (**v111)();
  uint64_t v112;
  std::__shared_weak_count *v113;
  _BYTE v114[30];
  char v115;
  _BYTE v116[54];
  uint64_t (**v117)();
  uint64_t v118;
  std::__shared_weak_count *v119;
  _BYTE v120[30];
  char v121;
  int v122;
  _BYTE v123[32];
  void *v124[2];
  int v125;
  __int16 v126;
  uint64_t (**v127)();
  uint64_t v128;
  std::__shared_weak_count *v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  int v133;
  __int16 v134;
  char v135;
  unsigned int v136;
  void *v137;
  char *v138;
  unint64_t v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  int v143;
  uint64_t v144;
  std::__shared_weak_count *v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  __int16 v150;
  char v151;
  uint64_t (**v152)();
  char v153;
  std::__shared_weak_count *v154;
  __int128 __dst;
  uint64_t v156;

  if (a3 == (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1))
  {
    v11 = 0;
  }
  else
  {
    v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
    sub_21096E320(a3, a4, v12, v123);
    v11 = *(void **)v123;
    a4 = *(_QWORD **)v123;
  }
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = (char *)operator new(0x28uLL);
  *(_QWORD *)&v123[8] = v15 + 40;
  *(_QWORD *)&v123[16] = v15 + 40;
  *(_DWORD *)v15 = 1;
  *(_QWORD *)(v15 + 4) = v14;
  *(_QWORD *)&v16 = 0x100000001;
  *((_QWORD *)&v16 + 1) = 0x100000001;
  *(_OWORD *)(v15 + 12) = v16;
  *(_QWORD *)(v15 + 28) = 0x600000001;
  *((_DWORD *)v15 + 9) = v13;
  *(_QWORD *)v123 = v15;
  v123[24] = 0;
  LOBYTE(v125) = 0;
  v17 = sub_210988F20((_QWORD *)(a1 + 136), (unint64_t)v123);
  if (!v17)
    sub_2108B307C("unordered_map::at: key not found");
  if (*((char *)v17 + 95) < 0)
  {
    sub_2108B314C(&__dst, (void *)v17[9], v17[10]);
  }
  else
  {
    __dst = *(_OWORD *)(v17 + 9);
    v156 = v17[11];
  }
  if ((_BYTE)v125)
  {
    v18 = *(void ***)&v123[24];
    if (*(_QWORD *)&v123[24])
    {
      v19 = (void **)v124[0];
      v20 = *(void **)&v123[24];
      if (v124[0] != *(void **)&v123[24])
      {
        do
        {
          if (*((char *)v19 - 1) < 0)
            operator delete(*(v19 - 3));
          v19 -= 3;
        }
        while (v19 != v18);
        v20 = *(void **)&v123[24];
      }
      v124[0] = v18;
      operator delete(v20);
    }
  }
  if (*(_QWORD *)v123)
  {
    *(_QWORD *)&v123[8] = *(_QWORD *)v123;
    operator delete(*(void **)v123);
  }
  v21 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)v123 = off_24CA82900;
  if (SHIBYTE(v156) < 0)
  {
    sub_2108B314C(&v123[8], (void *)__dst, *((unint64_t *)&__dst + 1));
  }
  else
  {
    *(_OWORD *)&v123[8] = __dst;
    *(_QWORD *)&v123[24] = v156;
  }
  (*(void (**)(uint64_t (***__return_ptr)(), _QWORD, _BYTE *))(**(_QWORD **)(v21 + 16) + 48))(&v152, *(_QWORD *)(v21 + 16), v123);
  *(_QWORD *)v123 = off_24CA82900;
  if ((v123[31] & 0x80000000) != 0)
  {
    operator delete(*(void **)&v123[8]);
    if (!v153)
      goto LABEL_27;
  }
  else if (!v153)
  {
    goto LABEL_27;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/ATUDescriptorModel.cpp", 94, (uint64_t)"ret_config == kml::MLResultCode::NoError", 40, (uint64_t)"Unable to set model configuration", 33, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_27:
  v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  LODWORD(v137) = 65;
  v123[0] = 0;
  LOBYTE(v127) = 0;
  *(_OWORD *)v110 = xmmword_210A185C0;
  *(_DWORD *)&v110[16] = v22;
  v116[0] = 0;
  v116[20] = 0;
  sub_21098B528((uint64_t)&v140, (uint64_t)a4, (__int128 *)v110, (__int128 *)v116, &v137, (uint64_t)v123);
  if ((_BYTE)v127)
  {
    v23 = *(std::__shared_weak_count **)&v123[16];
    if (*(_QWORD *)&v123[16])
    {
      v24 = (unint64_t *)(*(_QWORD *)&v123[16] + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
        std::__shared_weak_count::__release_weak(v23);
      }
    }
  }
  v137 = 0;
  v138 = 0;
  v139 = 0;
  *(_QWORD *)v110 = &off_24CA79890;
  v26 = *(_QWORD *)(a2 + 8);
  v27 = *(std::__shared_weak_count **)(a2 + 16);
  if (v27)
  {
    p_shared_owners = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(p_shared_owners);
    while (__stxr(v29 + 1, p_shared_owners));
    v30 = *(_DWORD *)(a2 + 44);
    v32 = *(_QWORD *)(a2 + 24);
    v31 = *(_QWORD *)(a2 + 32);
    v33 = *(_WORD *)(a2 + 48);
    do
      v34 = __ldxr(p_shared_owners);
    while (__stxr(v34 + 1, p_shared_owners));
    do
      v35 = __ldxr(p_shared_owners);
    while (__stxr(v35 + 1, p_shared_owners));
  }
  else
  {
    v30 = *(_DWORD *)(a2 + 44);
    v32 = *(_QWORD *)(a2 + 24);
    v31 = *(_QWORD *)(a2 + 32);
    v33 = *(_WORD *)(a2 + 48);
  }
  *(_QWORD *)&v110[8] = v26;
  *(_QWORD *)&v110[16] = v27;
  *(_QWORD *)&v110[24] = v31;
  *(_DWORD *)&v110[32] = v30;
  *(_QWORD *)&v110[40] = v32;
  *(_DWORD *)&v110[48] = 1;
  *(_WORD *)&v110[52] = v33;
  if (v27)
  {
    v36 = (unint64_t *)&v27->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    do
      v38 = __ldaxr(v36);
    while (__stlxr(v38 - 1, v36));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v39 = *(_OWORD *)&v110[8];
  *(_QWORD *)v116 = &off_24CA79890;
  *(_OWORD *)&v116[8] = *(_OWORD *)&v110[8];
  *(_OWORD *)&v110[8] = 0uLL;
  *(_OWORD *)&v116[24] = *(_OWORD *)&v110[24];
  *(_OWORD *)&v116[38] = *(_OWORD *)&v110[38];
  v122 = 2;
  v136 = -1;
  *(_QWORD *)v123 = &off_24CA79890;
  if (*((_QWORD *)&v39 + 1))
  {
    v40 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 1, v40));
    v42 = *(void **)&v116[40];
    v43 = *(_DWORD *)&v116[48];
    v44 = *(_WORD *)&v116[52];
    do
      v45 = __ldxr(v40);
    while (__stxr(v45 + 1, v40));
  }
  else
  {
    v42 = *(void **)&v116[40];
    v43 = *(_DWORD *)&v116[48];
    v44 = *(_WORD *)&v116[52];
  }
  *(_OWORD *)&v123[8] = v39;
  *(_QWORD *)&v123[24] = *(_QWORD *)&v116[24];
  LODWORD(v124[0]) = *(_DWORD *)&v116[32];
  v124[1] = v42;
  v125 = v43;
  v126 = v44;
  if (*((_QWORD *)&v39 + 1))
  {
    v46 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v39 + 1) + 16))(*((_QWORD *)&v39 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v39 + 1));
      v136 = 2;
      v48 = v138;
      if ((unint64_t)v138 < v139)
        goto LABEL_61;
LABEL_65:
      v50 = sub_210965228((char **)&v137, (uint64_t)v123);
      goto LABEL_66;
    }
  }
  v136 = 2;
  v48 = v138;
  if ((unint64_t)v138 >= v139)
    goto LABEL_65;
LABEL_61:
  *v48 = 0;
  *((_DWORD *)v48 + 30) = -1;
  v49 = v136;
  if (v136 != -1)
  {
    ((void (*)(_QWORD *, char *, _BYTE *))off_24CA815C8[v136])(v109, v48, v123);
    *((_DWORD *)v48 + 30) = v49;
  }
  v50 = v48 + 128;
LABEL_66:
  v138 = v50;
  if (v136 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_24CA815B0[v136])(v109, v123);
  v136 = -1;
  if (v122 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_24CA815B0[v122])(v109, v116);
  v122 = -1;
  v51 = *(std::__shared_weak_count **)&v110[16];
  if (*(_QWORD *)&v110[16])
  {
    v52 = (unint64_t *)(*(_QWORD *)&v110[16] + 8);
    do
      v53 = __ldaxr(v52);
    while (__stlxr(v53 - 1, v52));
    if (!v53)
    {
      ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
      std::__shared_weak_count::__release_weak(v51);
    }
  }
  *(_OWORD *)v110 = v140;
  *(_OWORD *)&v110[16] = v141;
  *(_OWORD *)&v110[32] = v142;
  *(_DWORD *)&v110[48] = v143;
  LOBYTE(v111) = 0;
  v115 = 0;
  if (v151)
  {
    v111 = &off_24CA79890;
    v54 = v144;
    v55 = v145;
    if (v145)
    {
      v56 = (unint64_t *)&v145->__shared_owners_;
      do
        v57 = __ldxr(v56);
      while (__stxr(v57 + 1, v56));
      v58 = v148;
      v59 = v149;
      v60 = v150;
      do
        v61 = __ldxr(v56);
      while (__stxr(v61 + 1, v56));
    }
    else
    {
      v58 = v148;
      v59 = v149;
      v60 = v150;
    }
    v112 = v54;
    v113 = v55;
    *(_QWORD *)v114 = v146;
    *(_DWORD *)&v114[8] = v147;
    *(_QWORD *)&v114[16] = v58;
    *(_DWORD *)&v114[24] = v59;
    *(_WORD *)&v114[28] = v60;
    if (v55)
    {
      v64 = (unint64_t *)&v55->__shared_owners_;
      do
        v65 = __ldaxr(v64);
      while (__stlxr(v65 - 1, v64));
      if (!v65)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    *(_OWORD *)v116 = *(_OWORD *)v110;
    *(_OWORD *)&v116[16] = *(_OWORD *)&v110[16];
    *(_OWORD *)&v116[32] = *(_OWORD *)&v110[32];
    *(_OWORD *)&v120[14] = *(_OWORD *)&v114[14];
    *(_OWORD *)v120 = *(_OWORD *)v114;
    v115 = 1;
    *(_DWORD *)&v116[48] = *(_DWORD *)&v110[48];
    v66 = v112;
    v67 = v113;
    v117 = &off_24CA79890;
    v118 = v112;
    v119 = v113;
    v112 = 0;
    v113 = 0;
    v121 = 1;
    v122 = 1;
    v136 = -1;
    v125 = *(_DWORD *)&v110[48];
    *(_OWORD *)&v123[16] = *(_OWORD *)&v110[16];
    *(_OWORD *)v124 = *(_OWORD *)&v110[32];
    *(_OWORD *)v123 = *(_OWORD *)v110;
    v135 = 0;
    v127 = &off_24CA79890;
    if (v67)
    {
      v68 = (unint64_t *)&v67->__shared_owners_;
      do
        v69 = __ldxr(v68);
      while (__stxr(v69 + 1, v68));
      v70 = *(_QWORD *)&v120[16];
      v71 = *(_DWORD *)&v120[24];
      v72 = *(_WORD *)&v120[28];
      do
        v73 = __ldxr(v68);
      while (__stxr(v73 + 1, v68));
    }
    else
    {
      v70 = *(_QWORD *)&v120[16];
      v71 = *(_DWORD *)&v120[24];
      v72 = *(_WORD *)&v120[28];
    }
    v128 = v66;
    v129 = v67;
    v130 = *(_QWORD *)v120;
    v131 = *(_DWORD *)&v120[8];
    v132 = v70;
    v133 = v71;
    v134 = v72;
    if (v67)
    {
      v74 = (unint64_t *)&v67->__shared_owners_;
      do
        v75 = __ldaxr(v74);
      while (__stlxr(v75 - 1, v74));
      if (!v75)
      {
        ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
        std::__shared_weak_count::__release_weak(v67);
      }
    }
    v135 = 1;
    v136 = 1;
    v62 = v138;
    if ((unint64_t)v138 < v139)
    {
LABEL_104:
      *v62 = 0;
      *((_DWORD *)v62 + 30) = -1;
      v76 = v136;
      if (v136 != -1)
      {
        ((void (*)(_QWORD *, char *, _BYTE *))off_24CA815C8[v136])(v109, v62, v123);
        *((_DWORD *)v62 + 30) = v76;
      }
      v138 = v62 + 128;
      v63 = v136;
      if (v136 != -1)
        goto LABEL_107;
      goto LABEL_108;
    }
  }
  else
  {
    *(_OWORD *)v116 = v140;
    *(_OWORD *)&v116[16] = v141;
    *(_OWORD *)&v116[32] = v142;
    *(_DWORD *)&v116[48] = v143;
    LOBYTE(v117) = 0;
    v121 = 0;
    v122 = 1;
    v125 = v143;
    *(_OWORD *)v123 = v140;
    *(_OWORD *)&v123[16] = v141;
    *(_OWORD *)v124 = v142;
    LOBYTE(v127) = 0;
    v135 = 0;
    v136 = 1;
    v62 = v138;
    if ((unint64_t)v138 < v139)
      goto LABEL_104;
  }
  v138 = sub_210965228((char **)&v137, (uint64_t)v123);
  v63 = v136;
  if (v136 != -1)
LABEL_107:
    ((void (*)(_QWORD *, _BYTE *))off_24CA815B0[v63])(v109, v123);
LABEL_108:
  v136 = -1;
  if (v122 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_24CA815B0[v122])(v109, v116);
  v122 = -1;
  if (v115)
  {
    v77 = v113;
    if (v113)
    {
      v78 = (unint64_t *)&v113->__shared_owners_;
      do
        v79 = __ldaxr(v78);
      while (__stlxr(v79 - 1, v78));
      if (!v79)
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
    }
  }
  v109[0] = &off_24CA829E0;
  v109[1] = a5;
  v80 = *(unsigned __int8 *)(a1 + 184);
  kdebug_trace();
  if ((_DWORD)v80)
    v81 = v109;
  else
    v81 = 0;
  sub_2109A978C(*(_QWORD *)(*(_QWORD *)(a1 + 176) + 16), &v137, (uint64_t)v81, v80, (uint64_t)v123);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  kdebug_trace();
  if (v123[8])
  {
    sub_21095C620((uint64_t *)v110, "Error:");
    v101 = *(char *)(*(_QWORD *)&v123[16] + 23);
    if (v101 >= 0)
      v102 = *(const std::string::value_type **)&v123[16];
    else
      v102 = **(const std::string::value_type ***)&v123[16];
    if (v101 >= 0)
      v103 = *(unsigned __int8 *)(*(_QWORD *)&v123[16] + 23);
    else
      v103 = *(_QWORD *)(*(_QWORD *)&v123[16] + 8);
    v104 = std::string::append((std::string *)v110, v102, v103);
    v105 = *(_OWORD *)&v104->__r_.__value_.__l.__data_;
    *(_QWORD *)&v116[16] = *((_QWORD *)&v104->__r_.__value_.__l + 2);
    *(_OWORD *)v116 = v105;
    v104->__r_.__value_.__l.__size_ = 0;
    v104->__r_.__value_.__r.__words[2] = 0;
    v104->__r_.__value_.__r.__words[0] = 0;
    if (v116[23] >= 0)
      v106 = v116;
    else
      v106 = *(_BYTE **)v116;
    if (v116[23] >= 0)
      v107 = v116[23];
    else
      v107 = *(_QWORD *)&v116[8];
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/ATUDescriptorModel.cpp", 123, (uint64_t)&unk_210A01421, 0, (uint64_t)v106, v107, (void (*)(void **))sub_2109EDDB4);
    if ((v116[23] & 0x80000000) != 0)
      operator delete(*(void **)v116);
    if ((v110[23] & 0x80000000) != 0)
      operator delete(*(void **)v110);
    abort();
  }
  sub_21096C934((__int128 *)v124[0], (unint64_t)a3, a6);
  if ((_BYTE)v127)
  {
    v82 = (char *)v124[0];
    if (v124[0])
    {
      v83 = (char *)v124[1];
      v84 = v124[0];
      if (v124[1] != v124[0])
      {
        do
        {
          v85 = v83 - 128;
          v86 = *((unsigned int *)v83 - 2);
          if ((_DWORD)v86 != -1)
            ((void (*)(_BYTE *, char *))off_24CA815E0[v86])(v116, v83 - 128);
          *((_DWORD *)v83 - 2) = -1;
          v83 -= 128;
        }
        while (v85 != v82);
        v84 = v124[0];
      }
      v124[1] = v82;
      operator delete(v84);
    }
  }
  *(_QWORD *)v123 = &off_24CA79A00;
  v87 = *(std::__shared_weak_count **)&v123[24];
  if (!*(_QWORD *)&v123[24])
    goto LABEL_133;
  v88 = (unint64_t *)(*(_QWORD *)&v123[24] + 8);
  do
    v89 = __ldaxr(v88);
  while (__stlxr(v89 - 1, v88));
  if (!v89)
  {
    ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
    std::__shared_weak_count::__release_weak(v87);
    v90 = (char *)v137;
    if (!v137)
      goto LABEL_141;
  }
  else
  {
LABEL_133:
    v90 = (char *)v137;
    if (!v137)
      goto LABEL_141;
  }
  v91 = v138;
  v92 = v90;
  if (v138 != v90)
  {
    do
    {
      v93 = v91 - 128;
      v94 = *((unsigned int *)v91 - 2);
      if ((_DWORD)v94 != -1)
        ((void (*)(_BYTE *, char *))off_24CA815B0[v94])(v123, v91 - 128);
      *((_DWORD *)v91 - 2) = -1;
      v91 -= 128;
    }
    while (v93 != v90);
    v92 = v137;
  }
  v138 = v90;
  operator delete(v92);
  if (!v151)
    goto LABEL_146;
  v95 = v145;
  if (!v145)
    goto LABEL_146;
LABEL_141:
  v96 = (unint64_t *)&v145->__shared_owners_;
  do
    v97 = __ldaxr(v96);
  while (__stlxr(v97 - 1, v96));
  if (!v97)
  {
    ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
    std::__shared_weak_count::__release_weak(v95);
    v152 = &off_24CA79A00;
    v98 = v154;
    if (!v154)
      goto LABEL_150;
  }
  else
  {
LABEL_146:
    v152 = &off_24CA79A00;
    v98 = v154;
    if (!v154)
      goto LABEL_150;
  }
  v99 = (unint64_t *)&v98->__shared_owners_;
  do
    v100 = __ldaxr(v99);
  while (__stlxr(v100 - 1, v99));
  if (v100)
  {
LABEL_150:
    if ((SHIBYTE(v156) & 0x80000000) == 0)
      goto LABEL_152;
    goto LABEL_151;
  }
  ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
  std::__shared_weak_count::__release_weak(v98);
  if (SHIBYTE(v156) < 0)
LABEL_151:
    operator delete((void *)__dst);
LABEL_152:
  if (v11)
    operator delete(v11);
}

void sub_21096B550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  char a64;
  void *v64;
  uint64_t v65;

  sub_21095F77C((uint64_t)&a45);
  sub_21095F86C(&a61);
  sub_2108B0424((uint64_t)&a64);
  sub_2108AB288((_QWORD *)(v65 - 176));
  if (*(char *)(v65 - 121) < 0)
  {
    operator delete(*(void **)(v65 - 144));
    if (!v64)
      goto LABEL_6;
  }
  else if (!v64)
  {
LABEL_6:
    _Unwind_Resume(a1);
  }
  operator delete(v64);
  _Unwind_Resume(a1);
}

void sub_21096B6A0()
{
  uint64_t v0;

  if (v0)
    JUMPOUT(0x21096B670);
  JUMPOUT(0x21096B698);
}

void sub_21096B6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  uint64_t v45;

  sub_21095BC5C((uint64_t)&a45);
  if (v45)
    JUMPOUT(0x21096B670);
  JUMPOUT(0x21096B698);
}

void sub_21096B6CC(uint64_t a1)
{
  sub_21096B790(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21096B6F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81520;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21096B700(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81520;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21096B730(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_21096B740(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81570;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21096B750(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81570;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21096B780(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_21096B790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  void *v7;

  *(_QWORD *)a1 = &off_24CA814C8;
  v2 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *(std::__shared_weak_count **)(v2 + 8);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    MEMORY[0x212BCC6FC](v2, 0x60C40CE5A77A8);
  }
  sub_21095A1BC(a1 + 136, *(void ***)(a1 + 152));
  v7 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = 0;
  if (v7)
    operator delete(v7);
  if (*(char *)(a1 + 127) < 0)
  {
    operator delete(*(void **)(a1 + 104));
    if ((*(char *)(a1 + 103) & 0x80000000) == 0)
    {
LABEL_14:
      if ((*(char *)(a1 + 79) & 0x80000000) == 0)
        goto LABEL_15;
LABEL_19:
      operator delete(*(void **)(a1 + 56));
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
        return a1;
      goto LABEL_20;
    }
  }
  else if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    goto LABEL_14;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 79) < 0)
    goto LABEL_19;
LABEL_15:
  if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    return a1;
LABEL_20:
  operator delete(*(void **)(a1 + 32));
  return a1;
}

uint64_t sub_21096B8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v7[2];
  uint64_t v8;
  char v9;
  void (**v10)();
  uint64_t v11;
  int v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int16 v26;
  void *__p[3];
  char v28;
  uint64_t v29;
  __int16 v30;
  __int128 __dst;
  uint64_t v32;
  char v33;
  uint64_t v34[15];

  LOBYTE(v7[0]) = 0;
  v9 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v7, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v7 = *(_OWORD *)a3;
      v8 = *(_QWORD *)(a3 + 16);
    }
    v9 = 1;
    LOBYTE(__dst) = 0;
    v33 = 0;
    if (SHIBYTE(v8) < 0)
    {
      sub_2108B314C(&__dst, v7[0], (unint64_t)v7[1]);
    }
    else
    {
      __dst = *(_OWORD *)v7;
      v32 = v8;
    }
    v33 = 1;
  }
  else
  {
    LOBYTE(__dst) = 0;
    v33 = 0;
  }
  sub_21096C124((uint64_t)v34, a2, (uint64_t)&__dst);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)__dst);
  LOBYTE(__p[0]) = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  LODWORD(v29) = *(_DWORD *)(a2 + 120);
  v10 = off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v11, v34);
  v10 = (void (**)())&off_24CA82960;
  sub_210957BA4((uint64_t)&v22, (uint64_t)__p);
  v25 = v29;
  v26 = v30;
  if (v28 && __p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_2108B55B4((uint64_t)v34);
  v5 = v11;
  *(_QWORD *)a1 = off_24CA82AC0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 40) = v14;
  v13 = 0uLL;
  *(_OWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  v16 = 0;
  v14 = 0;
  v15 = 0uLL;
  *(_OWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 88) = v18;
  v17 = 0uLL;
  v18 = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (v21)
  {
    *(_OWORD *)(a1 + 96) = v19;
    *(_QWORD *)(a1 + 112) = v20;
    v20 = 0;
    v19 = 0uLL;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_QWORD *)a1 = &off_24CA82960;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  if (v24)
  {
    *(_OWORD *)(a1 + 128) = v22;
    *(_QWORD *)(a1 + 144) = v23;
    v23 = 0;
    v22 = 0uLL;
    *(_BYTE *)(a1 + 152) = 1;
    *(_QWORD *)(a1 + 160) = v25;
    *(_WORD *)(a1 + 168) = v26;
    v10 = off_24CA82AC0;
    sub_2108B55B4((uint64_t)&v11);
    if (!v9)
      goto LABEL_24;
  }
  else
  {
    *(_QWORD *)(a1 + 160) = v25;
    *(_WORD *)(a1 + 168) = v26;
    v10 = off_24CA82AC0;
    sub_2108B55B4((uint64_t)&v11);
    if (!v9)
      goto LABEL_24;
  }
  if (SHIBYTE(v8) < 0)
    operator delete(v7[0]);
LABEL_24:
  *(_QWORD *)a1 = &off_24CA81608;
  return a1;
}

void sub_21096BB64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  if (*(_BYTE *)(v41 - 200) && *(char *)(v41 - 201) < 0)
    operator delete(*(void **)(v41 - 224));
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21096BBE8(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_21096BC40(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21096BCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  void *v9[2];
  uint64_t v10;
  char v11;
  void (**v12)();
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int8 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  void *__p;
  char v37;
  char v38;
  __int128 __dst;
  uint64_t v40;
  char v41;
  uint64_t v42[15];

  LOBYTE(v9[0]) = 0;
  v11 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v9, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)a3;
      v10 = *(_QWORD *)(a3 + 16);
    }
    v11 = 1;
    LOBYTE(__dst) = 0;
    v41 = 0;
    if (SHIBYTE(v10) < 0)
    {
      sub_2108B314C(&__dst, v9[0], (unint64_t)v9[1]);
    }
    else
    {
      __dst = *(_OWORD *)v9;
      v40 = v10;
    }
    v41 = 1;
  }
  else
  {
    LOBYTE(__dst) = 0;
    v41 = 0;
  }
  sub_21096C124((uint64_t)v42, a2, (uint64_t)&__dst);
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)__dst);
  if (*(_DWORD *)(a2 + 120)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/ATUDescriptorModelDefinition.cpp", 76, (uint64_t)"param.device == DeviceType::Any", 31, (uint64_t)"Only DeviceType::Any supported for EspressoV2", 45, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  LOBYTE(v31) = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  LOBYTE(__p) = 0;
  v38 = 0;
  v12 = off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v13, v42);
  v12 = (void (**)())off_24CA829B8;
  sub_210964BC8(&v24, &v31);
  if (v38 && v37 < 0)
    operator delete(__p);
  if (v33 && v32 < 0)
    operator delete((void *)v31);
  sub_2108B55B4((uint64_t)v42);
  v5 = v13;
  *(_QWORD *)a1 = off_24CA82AC0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 40) = v16;
  v15 = 0uLL;
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  v18 = 0;
  v16 = 0;
  v17 = 0uLL;
  *(_OWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  v19 = 0uLL;
  v20 = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (v23)
  {
    *(_OWORD *)(a1 + 96) = v21;
    *(_QWORD *)(a1 + 112) = v22;
    v22 = 0;
    v21 = 0uLL;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_QWORD *)a1 = off_24CA829B8;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  v6 = v26;
  if (v26)
  {
    *(_OWORD *)(a1 + 128) = v24;
    *(_QWORD *)(a1 + 144) = v25;
    v25 = 0;
    v24 = 0uLL;
    *(_BYTE *)(a1 + 152) = 1;
  }
  v7 = v27;
  *(_BYTE *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 160) = v7;
  *(_BYTE *)(a1 + 200) = 0;
  if (v30)
  {
    *(_OWORD *)(a1 + 176) = v28;
    *(_QWORD *)(a1 + 192) = v29;
    v29 = 0;
    v28 = 0uLL;
    *(_BYTE *)(a1 + 200) = 1;
  }
  v12 = (void (**)())off_24CA829B8;
  if (v6 && SHIBYTE(v25) < 0)
    operator delete((void *)v24);
  v12 = off_24CA82AC0;
  sub_2108B55B4((uint64_t)&v13);
  if (v11 && SHIBYTE(v10) < 0)
    operator delete(v9[0]);
  *(_QWORD *)a1 = off_24CA81630;
  return a1;
}

void sub_21096BFA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  uint64_t v42;

  if (*(_BYTE *)(v42 - 184) && *(char *)(v42 - 185) < 0)
    operator delete(*(void **)(v42 - 208));
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21096C01C(uint64_t a1)
{
  *(_QWORD *)a1 = off_24CA829B8;
  if (*(_BYTE *)(a1 + 200) && *(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    if (!*(_BYTE *)(a1 + 152))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 152))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
LABEL_7:
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_21096C098(uint64_t a1)
{
  *(_QWORD *)a1 = off_24CA829B8;
  if (*(_BYTE *)(a1 + 200) && *(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    if (!*(_BYTE *)(a1 + 152))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 152))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
LABEL_7:
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21096C124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  void **v16;
  int v17;
  unint64_t *v18;
  void **v19;
  void **v20;
  void *v21;
  void **v22;
  void **v23;
  void *v24;
  char *v25;
  void *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  void **v42;
  _BYTE *v43;
  void *v44;
  char *v45;
  void *v46[2];
  uint64_t v47;
  unsigned __int8 v48;
  _BYTE v49[24];
  _BYTE *v50;
  char v51;
  _BYTE v52[24];
  _BYTE *v53;
  char v54;
  void *__p;
  char v56;
  char v57;
  _BYTE v58[24];
  _BYTE *v59;
  char v60;
  _BYTE v61[24];
  _BYTE *v62;
  char v63;
  void *v64[2];
  uint64_t v65;
  char v66;
  int v67;
  char v68;
  int v69;
  char v70;
  int v71;
  char v72;
  int v73;
  char v74;
  int v75;
  char v76;
  char v77;
  char v78;
  char v79;
  _BYTE v80[24];
  _BYTE *v81;
  char v82;
  _BYTE v83[24];
  _BYTE *v84;
  char v85;
  __int128 __dst;
  uint64_t v87;
  char v88;
  int v89;
  char v90;
  int v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  int v97;
  char v98;
  int v99;
  char v100;
  char v101;
  _BYTE v102[24];
  _BYTE *v103;
  char v104;
  _BYTE v105[24];
  _BYTE *v106;
  char v107;
  uint64_t v108;

  v108 = *MEMORY[0x24BDAC8D0];
  if (*(char *)(a2 + 47) < 0)
  {
    sub_2108B314C(&__dst, *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
  }
  else
  {
    __dst = *(_OWORD *)(a2 + 24);
    v87 = *(_QWORD *)(a2 + 40);
  }
  v88 = 1;
  v89 = 17;
  v90 = 1;
  v91 = 1;
  v92 = 1;
  v93 = 0;
  v94 = 0;
  v95 = 0;
  v96 = 0;
  v97 = 1;
  v98 = 1;
  v99 = 1;
  v100 = 1;
  v101 = 1;
  v102[0] = 0;
  v104 = 0;
  v105[0] = 0;
  v107 = 0;
  if (*(char *)(a2 + 71) < 0)
  {
    sub_2108B314C(v64, *(void **)(a2 + 48), *(_QWORD *)(a2 + 56));
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)(a2 + 48);
    v65 = *(_QWORD *)(a2 + 64);
  }
  v66 = 1;
  v67 = 65;
  v68 = 1;
  v69 = 1;
  v70 = 1;
  v71 = 1;
  v72 = 1;
  v73 = 1;
  v74 = 1;
  v75 = 6;
  v76 = 1;
  v77 = 0;
  v78 = 0;
  v79 = 1;
  v80[0] = 0;
  v82 = 0;
  v83[0] = 0;
  v85 = 0;
  sub_2108B43C0((char *)v46, &__dst);
  sub_2108B43C0((char *)&__p, (__int128 *)v64);
  sub_210958984((uint64_t)&v44, (uint64_t)v46, 2uLL);
  if (v63)
  {
    v6 = v62;
    if (v62 == v61)
    {
      v7 = 4;
      v6 = v61;
    }
    else
    {
      if (!v62)
        goto LABEL_13;
      v7 = 5;
    }
    (*(void (**)(void))(*v6 + 8 * v7))();
  }
LABEL_13:
  if (v60)
  {
    v8 = v59;
    if (v59 == v58)
    {
      v9 = 4;
      v8 = v58;
      goto LABEL_18;
    }
    if (v59)
    {
      v9 = 5;
LABEL_18:
      (*(void (**)(void))(*v8 + 8 * v9))();
    }
  }
  if (v57 && v56 < 0)
    operator delete(__p);
  if (v54)
  {
    v10 = v53;
    if (v53 == v52)
    {
      v11 = 4;
      v10 = v52;
    }
    else
    {
      if (!v53)
        goto LABEL_28;
      v11 = 5;
    }
    (*(void (**)(void))(*v10 + 8 * v11))();
  }
LABEL_28:
  if (v51)
  {
    v12 = v50;
    if (v50 == v49)
    {
      v13 = 4;
      v12 = v49;
      goto LABEL_33;
    }
    if (v50)
    {
      v13 = 5;
LABEL_33:
      (*(void (**)(void))(*v12 + 8 * v13))();
    }
  }
  if (v48 && SHIBYTE(v47) < 0)
    operator delete(v46[0]);
  if (*(char *)(a2 + 95) < 0)
  {
    sub_2108B314C(v46, *(void **)(a2 + 72), *(_QWORD *)(a2 + 80));
  }
  else
  {
    *(_OWORD *)v46 = *(_OWORD *)(a2 + 72);
    v47 = *(_QWORD *)(a2 + 88);
  }
  v48 = 1;
  v14 = operator new(0x20uLL);
  v15 = v14;
  v41 = v14;
  v42 = (void **)v14;
  v16 = (void **)(v14 + 32);
  v43 = v14 + 32;
  *v14 = 0;
  v14[24] = 0;
  if (SHIBYTE(v47) < 0)
  {
    sub_2108B314C(v14, v46[0], (unint64_t)v46[1]);
    v17 = v48;
    v15[24] = 1;
    v42 = v16;
    if (v17 && SHIBYTE(v47) < 0)
      operator delete(v46[0]);
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v46;
    *((_QWORD *)v14 + 2) = v47;
    v14[24] = 1;
    v42 = (void **)(v14 + 32);
  }
  sub_2109866A4(a2 + 128, (uint64_t)v46);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      v18 = (unint64_t *)(a3 + 8);
LABEL_51:
      sub_2108B314C((_BYTE *)(a1 + 16), *(void **)a3, *v18);
      goto LABEL_52;
    }
  }
  else
  {
    a3 = a2 + 96;
    if (*(char *)(a2 + 119) < 0)
    {
      v18 = (unint64_t *)(a2 + 104);
      goto LABEL_51;
    }
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a3 + 16);
LABEL_52:
  sub_2108B4278(a1 + 40, (uint64_t *)&v44);
  sub_2108B458C((_QWORD *)(a1 + 64), (uint64_t *)&v41);
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  sub_2108B4718((char *)(a1 + 88), (uint64_t)v46[0], (uint64_t)v46[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v46[1] - (char *)v46[0]) >> 3));
  *(_BYTE *)(a1 + 112) = 1;
  v19 = (void **)v46[0];
  if (v46[0])
  {
    v20 = (void **)v46[1];
    v21 = v46[0];
    if (v46[1] != v46[0])
    {
      do
      {
        if (*((char *)v20 - 1) < 0)
          operator delete(*(v20 - 3));
        v20 -= 3;
      }
      while (v20 != v19);
      v21 = v46[0];
    }
    v46[1] = v19;
    operator delete(v21);
  }
  v22 = (void **)v41;
  if (v41)
  {
    v23 = v42;
    v24 = v41;
    if (v42 != v41)
    {
      do
      {
        if (*((_BYTE *)v23 - 8) && *((char *)v23 - 9) < 0)
          operator delete(*(v23 - 4));
        v23 -= 4;
      }
      while (v23 != v22);
      v24 = v41;
    }
    v42 = v22;
    operator delete(v24);
  }
  v25 = (char *)v44;
  if (!v44)
    goto LABEL_90;
  v26 = v44;
  if (v45 == v44)
    goto LABEL_89;
  v27 = v45 - 80;
  do
  {
    if (!v27[72])
      goto LABEL_79;
    v29 = (char *)*((_QWORD *)v27 + 8);
    if (v27 + 40 == v29)
    {
      v29 = v27 + 40;
      v30 = 4;
    }
    else
    {
      if (!v29)
        goto LABEL_79;
      v30 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v29 + 8 * v30))();
LABEL_79:
    if (v27[32])
    {
      v31 = (char *)*((_QWORD *)v27 + 3);
      if (v27 == v31)
      {
        v31 = v27;
        v32 = 4;
        goto LABEL_84;
      }
      if (v31)
      {
        v32 = 5;
LABEL_84:
        (*(void (**)(void))(*(_QWORD *)v31 + 8 * v32))();
      }
    }
    if (*(v27 - 64) && *(v27 - 65) < 0)
      operator delete(*((void **)v27 - 11));
    v28 = v27 - 88;
    v27 -= 168;
  }
  while (v28 != v25);
  v26 = v44;
LABEL_89:
  v45 = v25;
  operator delete(v26);
LABEL_90:
  if (v85)
  {
    v33 = v84;
    if (v84 == v83)
    {
      v34 = 4;
      v33 = v83;
LABEL_95:
      (*(void (**)(void))(*v33 + 8 * v34))();
    }
    else if (v84)
    {
      v34 = 5;
      goto LABEL_95;
    }
  }
  if (v82)
  {
    v35 = v81;
    if (v81 == v80)
    {
      v36 = 4;
      v35 = v80;
LABEL_101:
      (*(void (**)(void))(*v35 + 8 * v36))();
    }
    else if (v81)
    {
      v36 = 5;
      goto LABEL_101;
    }
  }
  if (v66 && SHIBYTE(v65) < 0)
    operator delete(v64[0]);
  if (v107)
  {
    v37 = v106;
    if (v106 == v105)
    {
      v38 = 4;
      v37 = v105;
LABEL_110:
      (*(void (**)(void))(*v37 + 8 * v38))();
    }
    else if (v106)
    {
      v38 = 5;
      goto LABEL_110;
    }
  }
  if (v104)
  {
    v39 = v103;
    if (v103 == v102)
    {
      v40 = 4;
      v39 = v102;
LABEL_116:
      (*(void (**)(void))(*v39 + 8 * v40))();
    }
    else if (v103)
    {
      v40 = 5;
      goto LABEL_116;
    }
  }
  if (v88)
  {
    if (SHIBYTE(v87) < 0)
      operator delete((void *)__dst);
  }
}

void sub_21096C7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  uint64_t v60;

  sub_2108A89B4(&__p);
  sub_2108B4114((void **)&a9);
  sub_2108B418C(&a12);
  sub_2109588CC((uint64_t)&a60);
  sub_2109588CC(v60 - 224);
  _Unwind_Resume(a1);
}

void sub_21096C8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v57;
  uint64_t v58;

  sub_2109588CC(v57);
  sub_2109588CC((uint64_t)&a15);
  sub_2109588CC((uint64_t)&a57);
  sub_2109588CC(v58 - 224);
  _Unwind_Resume(a1);
}

void sub_21096C918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v57;

  sub_2109588CC((uint64_t)&a57);
  sub_2109588CC(v57 - 224);
  _Unwind_Resume(a1);
}

void sub_21096C934(__int128 *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  __int128 v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  uint64_t v29;
  int v30;
  __int16 v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t (**v50)();
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  __int16 v57;
  char v58;

  v5 = *((_DWORD *)a1 + 30);
  if (v5 == 2)
  {
    v24 = a1[1];
    v46 = *a1;
    v47 = v24;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v25 = *((_QWORD *)a1 + 8);
      v26 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v26)
      {
        p_shared_owners = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(p_shared_owners);
        while (__stxr(v28 + 1, p_shared_owners));
        v29 = *((_QWORD *)a1 + 12);
        v30 = *((_DWORD *)a1 + 26);
        v31 = *((_WORD *)a1 + 54);
        do
          v32 = __ldxr(p_shared_owners);
        while (__stxr(v32 + 1, p_shared_owners));
      }
      else
      {
        v29 = *((_QWORD *)a1 + 12);
        v30 = *((_DWORD *)a1 + 26);
        v31 = *((_WORD *)a1 + 54);
      }
      v51 = v25;
      v52 = v26;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v29;
      v56 = v30;
      v57 = v31;
      if (v26)
      {
        v38 = (unint64_t *)&v26->__shared_owners_;
        do
          v39 = __ldaxr(v38);
        while (__stlxr(v39 - 1, v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v58 = 1;
    }
    if (!sub_21096D188((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 53, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096EA1C((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 1;
    *(_QWORD *)(a3 + 32) = 64;
    *(_DWORD *)(a3 + 40) = 1;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v40 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v40);
        while (__stlxr(v37 - 1, v40));
        goto LABEL_66;
      }
    }
  }
  else if (v5 == 1)
  {
    v15 = a1[1];
    v46 = *a1;
    v47 = v15;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v16 = *((_QWORD *)a1 + 8);
      v17 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        v20 = *((_QWORD *)a1 + 12);
        v21 = *((_DWORD *)a1 + 26);
        v22 = *((_WORD *)a1 + 54);
        do
          v23 = __ldxr(v18);
        while (__stxr(v23 + 1, v18));
      }
      else
      {
        v20 = *((_QWORD *)a1 + 12);
        v21 = *((_DWORD *)a1 + 26);
        v22 = *((_WORD *)a1 + 54);
      }
      v51 = v16;
      v52 = v17;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v20;
      v56 = v21;
      v57 = v22;
      if (v17)
      {
        v33 = (unint64_t *)&v17->__shared_owners_;
        do
          v34 = __ldaxr(v33);
        while (__stlxr(v34 - 1, v33));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v58 = 1;
    }
    if (!sub_21096CFF0((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 49, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096EE74((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 1;
    *(_QWORD *)(a3 + 32) = 64;
    *(_DWORD *)(a3 + 40) = 1;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v36 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        goto LABEL_66;
      }
    }
  }
  else
  {
    if (v5)
    {
      sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 56, (uint64_t)"", 0, (uint64_t)"OutputDataVariant copy not implemented", 38, (void (*)(void **))sub_2109EDDB4);
      abort();
    }
    v6 = a1[1];
    v46 = *a1;
    v47 = v6;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v7 = *((_QWORD *)a1 + 8);
      v8 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v8)
      {
        v9 = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
        v11 = *((_QWORD *)a1 + 12);
        v12 = *((_DWORD *)a1 + 26);
        v13 = *((_WORD *)a1 + 54);
        do
          v14 = __ldxr(v9);
        while (__stxr(v14 + 1, v9));
      }
      else
      {
        v11 = *((_QWORD *)a1 + 12);
        v12 = *((_DWORD *)a1 + 26);
        v13 = *((_WORD *)a1 + 54);
      }
      v51 = v7;
      v52 = v8;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v11;
      v56 = v12;
      v57 = v13;
      if (v8)
      {
        v41 = (unint64_t *)&v8->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v58 = 1;
    }
    if (!sub_21096CEC8((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 45, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096E7AC((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 1;
    *(_QWORD *)(a3 + 32) = 64;
    *(_DWORD *)(a3 + 40) = 1;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v43 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v43);
        while (__stlxr(v37 - 1, v43));
LABEL_66:
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
    }
  }
}

void sub_21096CE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096CE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096CE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21096D118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096CE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096CEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096CEB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21096D118((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_21096CEC8(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  BOOL v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int32x4_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[20];
  int32x4_t v14;
  int v15;

  sub_2108C0534(a1, (uint64_t)&v12);
  v2 = *(_QWORD *)&v13[4];
  if (HIDWORD(*(_QWORD *)&v13[4]))
    v3 = *(_DWORD *)&v13[4] == 0;
  else
    v3 = 1;
  v5 = v3 || *(_DWORD *)&v13[12] == 0 || HIDWORD(*(_QWORD *)&v13[12]) == 0;
  v6 = v5;
  if (v5)
    v7 = 0;
  else
    v7 = *(_QWORD *)&v13[12];
  if (HIDWORD(v7) * v15 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2108C0534(a1, (uint64_t)&v12);
  v8 = 0;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*(int32x4_t *)v13))) & 1) == 0 && *(_DWORD *)&v13[16])
  {
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    v8 = (vaddvq_s32(vmulq_s32(v14, vaddq_s32(*(int32x4_t *)v13, v9)))
                      + v15 * (*(_DWORD *)&v13[16] - 1)
                      + 1);
  }
  if (v6)
    v10 = 0;
  else
    v10 = v2;
  return v8 == (_DWORD)v7 * (_DWORD)v10 * HIDWORD(v10) * HIDWORD(v7);
}

BOOL sub_21096CFF0(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  BOOL v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int32x4_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[20];
  int32x4_t v14;
  int v15;

  sub_21096E5EC(a1, (uint64_t)&v12);
  v2 = *(_QWORD *)&v13[4];
  if (HIDWORD(*(_QWORD *)&v13[4]))
    v3 = *(_DWORD *)&v13[4] == 0;
  else
    v3 = 1;
  v5 = v3 || *(_DWORD *)&v13[12] == 0 || HIDWORD(*(_QWORD *)&v13[12]) == 0;
  v6 = v5;
  if (v5)
    v7 = 0;
  else
    v7 = *(_QWORD *)&v13[12];
  if (HIDWORD(v7) * v15 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21096E5EC(a1, (uint64_t)&v12);
  v8 = 0;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*(int32x4_t *)v13))) & 1) == 0 && *(_DWORD *)&v13[16])
  {
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    v8 = (vaddvq_s32(vmulq_s32(v14, vaddq_s32(*(int32x4_t *)v13, v9)))
                      + v15 * (*(_DWORD *)&v13[16] - 1)
                      + 1);
  }
  if (v6)
    v10 = 0;
  else
    v10 = v2;
  return v8 == (_DWORD)v7 * (_DWORD)v10 * HIDWORD(v10) * HIDWORD(v7);
}

uint64_t sub_21096D118(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  if (*(_BYTE *)(result + 112))
  {
    v2 = *(std::__shared_weak_count **)(result + 72);
    if (v2)
    {
      p_shared_owners = (unint64_t *)&v2->__shared_owners_;
      do
        v4 = __ldaxr(p_shared_owners);
      while (__stlxr(v4 - 1, p_shared_owners));
      if (!v4)
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
        return v1;
      }
    }
  }
  return result;
}

BOOL sub_21096D188(uint64_t a1)
{
  uint64_t v2;
  BOOL v3;
  BOOL v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int32x4_t v9;
  uint64_t v10;
  uint64_t v12;
  _BYTE v13[20];
  int32x4_t v14;
  int v15;

  sub_2108C2820(a1, (uint64_t)&v12);
  v2 = *(_QWORD *)&v13[4];
  if (HIDWORD(*(_QWORD *)&v13[4]))
    v3 = *(_DWORD *)&v13[4] == 0;
  else
    v3 = 1;
  v5 = v3 || *(_DWORD *)&v13[12] == 0 || HIDWORD(*(_QWORD *)&v13[12]) == 0;
  v6 = v5;
  if (v5)
    v7 = 0;
  else
    v7 = *(_QWORD *)&v13[12];
  if (HIDWORD(v7) * v15 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_2108C2820(a1, (uint64_t)&v12);
  v8 = 0;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*(int32x4_t *)v13))) & 1) == 0 && *(_DWORD *)&v13[16])
  {
    v9.i64[0] = -1;
    v9.i64[1] = -1;
    v8 = (vaddvq_s32(vmulq_s32(v14, vaddq_s32(*(int32x4_t *)v13, v9)))
                      + v15 * (*(_DWORD *)&v13[16] - 1)
                      + 1);
  }
  if (v6)
    v10 = 0;
  else
    v10 = v2;
  return v8 == (_DWORD)v7 * (_DWORD)v10 * HIDWORD(v10) * HIDWORD(v7);
}

void sub_21096D2B0(__int128 *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  __int128 v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  uint64_t v29;
  int v30;
  __int16 v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t (**v50)();
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  __int16 v57;
  char v58;

  v5 = *((_DWORD *)a1 + 30);
  if (v5 == 2)
  {
    v24 = a1[1];
    v46 = *a1;
    v47 = v24;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v25 = *((_QWORD *)a1 + 8);
      v26 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v26)
      {
        p_shared_owners = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(p_shared_owners);
        while (__stxr(v28 + 1, p_shared_owners));
        v29 = *((_QWORD *)a1 + 12);
        v30 = *((_DWORD *)a1 + 26);
        v31 = *((_WORD *)a1 + 54);
        do
          v32 = __ldxr(p_shared_owners);
        while (__stxr(v32 + 1, p_shared_owners));
      }
      else
      {
        v29 = *((_QWORD *)a1 + 12);
        v30 = *((_DWORD *)a1 + 26);
        v31 = *((_WORD *)a1 + 54);
      }
      v51 = v25;
      v52 = v26;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v29;
      v56 = v30;
      v57 = v31;
      if (v26)
      {
        v38 = (unint64_t *)&v26->__shared_owners_;
        do
          v39 = __ldaxr(v38);
        while (__stlxr(v39 - 1, v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v58 = 1;
    }
    if (!sub_21096D188((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 53, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096F720((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 2;
    *(_QWORD *)(a3 + 32) = 64;
    *(_DWORD *)(a3 + 40) = 2;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v40 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v40);
        while (__stlxr(v37 - 1, v40));
        goto LABEL_66;
      }
    }
  }
  else if (v5 == 1)
  {
    v15 = a1[1];
    v46 = *a1;
    v47 = v15;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v16 = *((_QWORD *)a1 + 8);
      v17 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        v20 = *((_QWORD *)a1 + 12);
        v21 = *((_DWORD *)a1 + 26);
        v22 = *((_WORD *)a1 + 54);
        do
          v23 = __ldxr(v18);
        while (__stxr(v23 + 1, v18));
      }
      else
      {
        v20 = *((_QWORD *)a1 + 12);
        v21 = *((_DWORD *)a1 + 26);
        v22 = *((_WORD *)a1 + 54);
      }
      v51 = v16;
      v52 = v17;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v20;
      v56 = v21;
      v57 = v22;
      if (v17)
      {
        v33 = (unint64_t *)&v17->__shared_owners_;
        do
          v34 = __ldaxr(v33);
        while (__stlxr(v34 - 1, v33));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v58 = 1;
    }
    if (!sub_21096CFF0((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 49, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096F990((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 2;
    *(_QWORD *)(a3 + 32) = 64;
    *(_DWORD *)(a3 + 40) = 2;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v36 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        goto LABEL_66;
      }
    }
  }
  else
  {
    if (v5)
    {
      sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 56, (uint64_t)"", 0, (uint64_t)"OutputDataVariant copy not implemented", 38, (void (*)(void **))sub_2109EDDB4);
      abort();
    }
    v6 = a1[1];
    v46 = *a1;
    v47 = v6;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v7 = *((_QWORD *)a1 + 8);
      v8 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v8)
      {
        v9 = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
        v11 = *((_QWORD *)a1 + 12);
        v12 = *((_DWORD *)a1 + 26);
        v13 = *((_WORD *)a1 + 54);
        do
          v14 = __ldxr(v9);
        while (__stxr(v14 + 1, v9));
      }
      else
      {
        v11 = *((_QWORD *)a1 + 12);
        v12 = *((_DWORD *)a1 + 26);
        v13 = *((_WORD *)a1 + 54);
      }
      v51 = v7;
      v52 = v8;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v11;
      v56 = v12;
      v57 = v13;
      if (v8)
      {
        v41 = (unint64_t *)&v8->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v58 = 1;
    }
    if (!sub_21096CEC8((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 45, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096F2CC((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 2;
    *(_QWORD *)(a3 + 32) = 64;
    *(_DWORD *)(a3 + 40) = 2;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v43 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v43);
        while (__stlxr(v37 - 1, v43));
LABEL_66:
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
    }
  }
}

void sub_21096D7CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096D7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096D7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21096D118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096D808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096D81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096D830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21096D118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096D844(__int128 *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  __int128 v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  unint64_t v23;
  __int128 v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  uint64_t v29;
  int v30;
  __int16 v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  int v49;
  uint64_t (**v50)();
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  __int16 v57;
  char v58;

  v5 = *((_DWORD *)a1 + 30);
  if (v5 == 2)
  {
    v24 = a1[1];
    v46 = *a1;
    v47 = v24;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v25 = *((_QWORD *)a1 + 8);
      v26 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v26)
      {
        p_shared_owners = (unint64_t *)&v26->__shared_owners_;
        do
          v28 = __ldxr(p_shared_owners);
        while (__stxr(v28 + 1, p_shared_owners));
        v29 = *((_QWORD *)a1 + 12);
        v30 = *((_DWORD *)a1 + 26);
        v31 = *((_WORD *)a1 + 54);
        do
          v32 = __ldxr(p_shared_owners);
        while (__stxr(v32 + 1, p_shared_owners));
      }
      else
      {
        v29 = *((_QWORD *)a1 + 12);
        v30 = *((_DWORD *)a1 + 26);
        v31 = *((_WORD *)a1 + 54);
      }
      v51 = v25;
      v52 = v26;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v29;
      v56 = v30;
      v57 = v31;
      if (v26)
      {
        v38 = (unint64_t *)&v26->__shared_owners_;
        do
          v39 = __ldaxr(v38);
        while (__stlxr(v39 - 1, v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v58 = 1;
    }
    if (!sub_21096D188((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 53, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_210970240((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 3;
    *(_QWORD *)(a3 + 32) = 128;
    *(_DWORD *)(a3 + 40) = 2;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v40 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v40);
        while (__stlxr(v37 - 1, v40));
        goto LABEL_66;
      }
    }
  }
  else if (v5 == 1)
  {
    v15 = a1[1];
    v46 = *a1;
    v47 = v15;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v16 = *((_QWORD *)a1 + 8);
      v17 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        v20 = *((_QWORD *)a1 + 12);
        v21 = *((_DWORD *)a1 + 26);
        v22 = *((_WORD *)a1 + 54);
        do
          v23 = __ldxr(v18);
        while (__stxr(v23 + 1, v18));
      }
      else
      {
        v20 = *((_QWORD *)a1 + 12);
        v21 = *((_DWORD *)a1 + 26);
        v22 = *((_WORD *)a1 + 54);
      }
      v51 = v16;
      v52 = v17;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v20;
      v56 = v21;
      v57 = v22;
      if (v17)
      {
        v33 = (unint64_t *)&v17->__shared_owners_;
        do
          v34 = __ldaxr(v33);
        while (__stlxr(v34 - 1, v33));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v58 = 1;
    }
    if (!sub_21096CFF0((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 49, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_2109704B0((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 3;
    *(_QWORD *)(a3 + 32) = 128;
    *(_DWORD *)(a3 + 40) = 2;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v36 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        goto LABEL_66;
      }
    }
  }
  else
  {
    if (v5)
    {
      sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 56, (uint64_t)"", 0, (uint64_t)"OutputDataVariant copy not implemented", 38, (void (*)(void **))sub_2109EDDB4);
      abort();
    }
    v6 = a1[1];
    v46 = *a1;
    v47 = v6;
    v48 = a1[2];
    v49 = *((_DWORD *)a1 + 12);
    LOBYTE(v50) = 0;
    v58 = 0;
    if (*((_BYTE *)a1 + 112))
    {
      v50 = &off_24CA79890;
      v7 = *((_QWORD *)a1 + 8);
      v8 = (std::__shared_weak_count *)*((_QWORD *)a1 + 9);
      if (v8)
      {
        v9 = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
        v11 = *((_QWORD *)a1 + 12);
        v12 = *((_DWORD *)a1 + 26);
        v13 = *((_WORD *)a1 + 54);
        do
          v14 = __ldxr(v9);
        while (__stxr(v14 + 1, v9));
      }
      else
      {
        v11 = *((_QWORD *)a1 + 12);
        v12 = *((_DWORD *)a1 + 26);
        v13 = *((_WORD *)a1 + 54);
      }
      v51 = v7;
      v52 = v8;
      v53 = *((_QWORD *)a1 + 10);
      v54 = *((_DWORD *)a1 + 22);
      v55 = v11;
      v56 = v12;
      v57 = v13;
      if (v8)
      {
        v41 = (unint64_t *)&v8->__shared_owners_;
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v58 = 1;
    }
    if (!sub_21096CEC8((uint64_t)&v46)
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionCommonUtil.cpp", 45, (uint64_t)"IsContiguousMemory(data_view)", 29, (uint64_t)"Data is not contiguous", 22, (void (*)(void **))sub_2109EDDB4))
    {
      abort();
    }
    sub_21096FDEC((uint64_t)&v46, a2, &v44);
    *(_OWORD *)a3 = v44;
    *(_QWORD *)(a3 + 16) = v45;
    *(_DWORD *)(a3 + 24) = 3;
    *(_QWORD *)(a3 + 32) = 128;
    *(_DWORD *)(a3 + 40) = 2;
    if (v58)
    {
      v35 = v52;
      if (v52)
      {
        v43 = (unint64_t *)&v52->__shared_owners_;
        do
          v37 = __ldaxr(v43);
        while (__stlxr(v37 - 1, v43));
LABEL_66:
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
    }
  }
}

void sub_21096DD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096DD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096DD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21096D118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096DDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096DDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108B0424((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096DDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21096D118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21096DDE4(unsigned int *a1@<X0>, unint64_t a2@<X1>, float *a3@<X2>, float **a4@<X8>)
{
  unsigned int v4;
  unsigned int v5;
  float *v8;
  float *v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  __float2 v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  float *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  float *v26;
  float *v27;
  __int128 v28;
  float *v29;
  float *v30;
  float **v31;
  float v32;
  float v33;
  float *v34;
  float *v35;

  v5 = *a1;
  v4 = a1[1];
  if (!a2)
  {
    v30 = 0;
    v8 = 0;
    v29 = 0;
    goto LABEL_25;
  }
  if (a2 > 0xAAAAAAAAAAAAAAALL)
    sub_21096E5D8();
  v31 = a4;
  v8 = (float *)operator new(24 * a2);
  v32 = 1.0 / (float)((float)v4 + -1.0);
  v33 = 1.0 / (float)((float)v5 + -1.0);
  v34 = v8;
  v35 = &v8[6 * a2];
  v9 = &a3[5 * a2];
  do
  {
    while (1)
    {
      while (1)
      {
        v10 = *a3;
        v11 = a3[1];
        v12 = a3[3];
        v13 = (float)(v33 * 12.0) * v12;
        v14 = (float)(v32 * 12.0) * v12;
        v15 = __sincosf_stret(a3[2]);
        v16 = (float)(v33 * v10) + (float)(v33 * v10) + -1.0;
        v17 = (float)(v32 * v11) + (float)(v32 * v11) + -1.0;
        v18 = v15.__cosval * v13;
        v19 = -(float)(v13 * v15.__sinval);
        v20 = v15.__sinval * v14;
        v21 = v15.__cosval * v14;
        if (v8 >= v35)
          break;
        *v8 = v18;
        v8[1] = v19;
        v8[2] = v16;
        v8[3] = v20;
        v8[4] = v21;
        v8[5] = v17;
        v8 += 6;
        a3 += 5;
        if (a3 == v9)
          goto LABEL_23;
      }
      v22 = v34;
      v23 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v34) >> 3) + 1;
      if (v23 > 0xAAAAAAAAAAAAAAALL)
        sub_21096E5D8();
      if (0x5555555555555556 * (((char *)v35 - (char *)v34) >> 3) > v23)
        v23 = 0x5555555555555556 * (((char *)v35 - (char *)v34) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (char *)v34) >> 3) >= 0x555555555555555)
        v24 = 0xAAAAAAAAAAAAAAALL;
      else
        v24 = v23;
      if (v24)
      {
        if (v24 > 0xAAAAAAAAAAAAAAALL)
          sub_2108B2B1C();
        v25 = (char *)operator new(24 * v24);
      }
      else
      {
        v25 = 0;
      }
      v26 = (float *)&v25[8 * (((char *)v8 - (char *)v34) >> 3)];
      *v26 = v18;
      v26[1] = v19;
      v26[2] = v16;
      v26[3] = v20;
      v26[4] = v21;
      v26[5] = v17;
      v27 = v26 + 6;
      if (v8 == v34)
      {
        v34 = (float *)&v25[8 * (((char *)v8 - (char *)v34) >> 3)];
        v22 = v8;
        v35 = (float *)&v25[24 * v24];
        break;
      }
      do
      {
        v28 = *(_OWORD *)(v8 - 6);
        *((_QWORD *)v26 - 1) = *((_QWORD *)v8 - 1);
        *(_OWORD *)(v26 - 6) = v28;
        v26 -= 6;
        v8 -= 6;
      }
      while (v8 != v34);
      v34 = v26;
      v35 = (float *)&v25[24 * v24];
      if (v22)
        break;
      v8 = v27;
      a3 += 5;
      if (a3 == v9)
        goto LABEL_23;
    }
    operator delete(v22);
    v8 = v27;
    a3 += 5;
  }
  while (a3 != v9);
LABEL_23:
  v29 = v34;
  v30 = v35;
  a4 = v31;
LABEL_25:
  *a4 = v29;
  a4[1] = v8;
  a4[2] = v30;
}

void sub_21096E09C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_21096E0D8(unsigned int *a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  float v20;
  float v21;
  float v22;
  float v23;
  uint64_t v24;
  float *v25;
  float v26;
  float v27;
  float v28;
  __float2 v29;
  _WORD *v30;
  uint64_t result;
  uint64_t v42;
  unint64_t v43[2];

  v43[0] = a2;
  v43[1] = a3;
  v6 = *a1;
  v5 = a1[1];
  v7 = *(_QWORD *)(a4 + 8);
  if (v7)
  {
    v8 = *(std::__shared_weak_count **)(a4 + 16);
    if (!v8)
      goto LABEL_27;
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    v7 = *(_QWORD *)(a4 + 8);
    v12 = *(std::__shared_weak_count **)(a4 + 16);
    if (!v12)
      goto LABEL_27;
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
      if (*(_BYTE *)(a4 + 49))
        goto LABEL_14;
    }
    else
    {
LABEL_27:
      if (*(_BYTE *)(a4 + 49))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v7 + 96))(&v42, v7, 1);
        goto LABEL_17;
      }
    }
  }
  v42 = 0;
LABEL_17:
  if (v43[0] >= *(unsigned int *)(a4 + 36))
    v16 = *(unsigned int *)(a4 + 36);
  else
    v16 = v43[0];
  v17 = sub_21095FE2C(v43, 0, v16);
  if (v17)
  {
    v19 = 0;
    v20 = (float)v5 + -1.0;
    v21 = 1.0 / (float)((float)v6 + -1.0);
    v22 = 1.0 / v20;
    v23 = (float)(1.0 / v20) * 12.0;
    v24 = 20 * v17;
    v25 = (float *)(v18 + 8);
    do
    {
      v26 = v25[1];
      v27 = (float)(v21 * 12.0) * v26;
      v28 = v23 * v26;
      v29 = __sincosf_stret(*v25);
      v30 = (_WORD *)(*(_QWORD *)(a4 + 24) + 2 * (*(_DWORD *)(a4 + 44) * v19));
      _S2 = v27 * v29.__cosval;
      __asm { FCVT            H2, S2 }
      *v30 = LOWORD(_S2);
      _S2 = -(float)(v27 * v29.__sinval);
      __asm { FCVT            H2, S2 }
      v30[1] = LOWORD(_S2);
      _S2 = (float)((float)(v21 * *(v25 - 2)) + (float)(v21 * *(v25 - 2))) + -1.0;
      __asm { FCVT            H2, S2 }
      v30[2] = LOWORD(_S2);
      _S0 = v28 * v29.__sinval;
      __asm { FCVT            H0, S0 }
      v30[3] = LOWORD(_S0);
      _S0 = v28 * v29.__cosval;
      __asm { FCVT            H0, S0 }
      v30[4] = LOWORD(_S0);
      _S0 = (float)((float)(v22 * *(v25 - 1)) + (float)(v22 * *(v25 - 1))) + -1.0;
      __asm { FCVT            H0, S0 }
      v30[5] = LOWORD(_S0);
      ++v19;
      v25 += 5;
      v24 -= 20;
    }
    while (v24);
  }
  result = v42;
  v42 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_21096E2FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void *sub_21096E320@<X0>(void *result@<X0>, _QWORD *a2@<X1>, unint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  unint64_t v6;
  size_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  __int128 v15;
  void *v16;
  unint64_t v17[2];

  if (result == (void *)a3)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (a3)
    {
      v6 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(24 * a3) >> 3);
      if (v6 > 0xAAAAAAAAAAAAAAALL)
        sub_21096E5D8();
      v7 = 24 * a3;
      v8 = (char *)operator new(24 * a3);
      *a4 = v8;
      v9 = &v8[24 * v6];
      a4[2] = v9;
      result = memcpy(v8, a2, v7);
      a4[1] = v9;
    }
  }
  else
  {
    v10 = (unint64_t)result;
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    if (a3)
    {
      if (a3 > 0xAAAAAAAAAAAAAAALL)
        sub_21096E5D8();
      v11 = 24 * a3;
      v12 = (char *)operator new(24 * a3);
      *a4 = v12;
      a4[1] = v12;
      v13 = &v12[v11];
      a4[2] = &v12[v11];
      v14 = v12;
      do
      {
        v15 = *(_OWORD *)a2;
        *((_QWORD *)v14 + 2) = a2[2];
        *(_OWORD *)v14 = v15;
        v14 += 24;
        v11 -= 24;
      }
      while (v11);
      a4[1] = v13;
    }
    else
    {
      v13 = 0;
      v12 = 0;
    }
    v17[0] = 0xAAAAAAAAAAAAAAABLL * ((v13 - v12) >> 3);
    v17[1] = (unint64_t)v12;
    result = (void *)sub_21096E4AC(v17, 0, v10);
    if (v10)
      return memmove(v16, a2, 24 * v10);
  }
  return result;
}

void sub_21096E488(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_21096E4AC(unint64_t *a1, unint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;

  if (a3 != -1)
  {
    v5 = a3;
    if (a3 + a2 > *a1
      && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 474, (uint64_t)"offset + count <= size()", 24, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
    {
      goto LABEL_14;
    }
    if (!v5 || a1[1])
      return v5;
LABEL_12:
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))return v5;
LABEL_14:
    abort();
  }
  v6 = *a1;
  if (*a1 < a2)
  {
    if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 471, (uint64_t)"offset <= size()", 16, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
    {
      goto LABEL_14;
    }
    v6 = *a1;
  }
  v5 = v6 - a2;
  if (!a1[1] && v5)
    goto LABEL_12;
  return v5;
}

void sub_21096E5D8()
{
  sub_2108A4B90("vector");
}

uint64_t sub_21096E5EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  int v12;
  int32x4_t v13;

  v2 = result;
  if ((*(_BYTE *)(result + 48) & 0x20) == 0)
  {
    result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/include/Kit/ML/DataView.h", 727, (uint64_t)"format.Contains(FormatFlags::FLOAT16)", 37, (uint64_t)"The DataView does not contain half data", 39, (void (*)(void **))sub_2109EDDB4);
    if ((_DWORD)result)
      goto LABEL_22;
  }
  if (*(_BYTE *)(v2 + 112))
  {
    if (*(_BYTE *)(v2 + 108) && *(_QWORD *)(v2 + 96))
    {
      v4 = *(_QWORD *)(v2 + 64);
      v5 = *(std::__shared_weak_count **)(v2 + 72);
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v4 + 88))(v4, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    }
    v9 = (uint64_t *)(v2 + 96);
  }
  else
  {
    v9 = (uint64_t *)(v2 + 40);
  }
  v10 = *v9;
  v11 = *(_DWORD *)(v2 + 36);
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqzq_s32(*(int32x4_t *)v2))) & 1) != 0 || (v12 = *(_DWORD *)(v2 + 16)) == 0)
  {
    v12 = 0;
    v13 = 0uLL;
  }
  else
  {
    v13 = *(int32x4_t *)v2;
  }
  *(_OWORD *)(a2 + 28) = *(_OWORD *)(v2 + 20);
  *(_QWORD *)a2 = v10;
  *(int32x4_t *)(a2 + 8) = v13;
  *(_DWORD *)(a2 + 24) = v12;
  *(_DWORD *)(a2 + 44) = v11;
  if (v12 * v11 == -1)
  {
    result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    if ((_DWORD)result)
LABEL_22:
      abort();
  }
  return result;
}

void *sub_21096E7AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  char *v12;
  const void **v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;

  sub_2108C0534(a1, (uint64_t)&v20);
  if (HIDWORD(v21))
    v6 = (_DWORD)v21 == 0;
  else
    v6 = 1;
  v8 = v6 || (_DWORD)v22 == 0 || HIDWORD(v22) == 0;
  if (v8)
    v9 = 0;
  else
    v9 = v21;
  if (v8)
    v10 = 0;
  else
    v10 = v22;
  if (HIDWORD(v10) * v23 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v10 * (_DWORD)v9 * HIDWORD(v9) != 64&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_38;
  }
  v11 = a2 << 6;
  if (HIDWORD(v10) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_24;
    }
LABEL_38:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (a2)
  {
LABEL_24:
    if (a2 >> 58)
      sub_2108B327C();
    v12 = (char *)operator new(a2 << 6);
    *a3 = v12;
    a3[2] = &v12[64 * a2];
    bzero(v12, a2 << 6);
    a3[1] = &v12[v11];
    if (*(_BYTE *)(a1 + 112))
      goto LABEL_26;
LABEL_36:
    v13 = (const void **)(a1 + 40);
    return memcpy(v12, *v13, v11);
  }
  v12 = 0;
  if (!*(_BYTE *)(a1 + 112))
    goto LABEL_36;
LABEL_26:
  v13 = (const void **)(a1 + 96);
  if (*(_BYTE *)(a1 + 108) && *(_QWORD *)(a1 + 96))
  {
    v15 = *(_QWORD *)(a1 + 64);
    v14 = *(std::__shared_weak_count **)(a1 + 72);
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
      do
        v18 = __ldaxr(p_shared_owners);
      while (__stlxr(v18 - 1, p_shared_owners));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
  return memcpy(v12, *v13, v11);
}

void sub_21096E9FC(_Unwind_Exception *exception_object)
{
  void **v1;
  _QWORD *v2;
  void *v4;

  v4 = *v1;
  if (*v1)
  {
    *v2 = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

float sub_21096EA1C@<S0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  float result;
  __int128 v14;
  float *v15;
  BOOL v16;
  int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  float *v39;
  int v40;
  unint64_t v41;
  _BYTE v42[12];
  __int128 v43;
  uint64_t v44;

  sub_2108C2820(a1, (uint64_t)&v39);
  if (HIDWORD(v41))
    v6 = (_DWORD)v41 == 0;
  else
    v6 = 1;
  v8 = v6 || *(_DWORD *)v42 == 0 || *(unsigned int *)&v42[4] == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = v41;
  if (v8)
    v11 = 0;
  else
    v11 = *(_QWORD *)v42;
  if (HIDWORD(v11) * HIDWORD(v43) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v11 * (_DWORD)v10 * HIDWORD(v10) != 64&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_83;
  }
  if (HIDWORD(v11) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_27;
    }
LABEL_83:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (!a2)
  {
    v12 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (a2 >> 58)
    sub_2108B327C();
  v12 = (char *)operator new(a2 << 6);
  *a3 = v12;
  a3[2] = &v12[64 * a2];
  bzero(v12, a2 << 6);
  a3[1] = &v12[64 * a2];
LABEL_29:
  sub_2108C2820(a1, (uint64_t)&v39);
  v14 = v43;
  v15 = v39;
  if (*(_DWORD *)&v42[4])
    v16 = *(_DWORD *)v42 == 0;
  else
    v16 = 1;
  if (v16 || (_DWORD)v41 == 0 || HIDWORD(v41) == 0)
    v19 = 0;
  else
    v19 = *(_DWORD *)&v42[4];
  v20 = HIDWORD(*((_QWORD *)&v43 + 1));
  if (v19 * HIDWORD(v43) == -1)
  {
    v21 = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    v20 = HIDWORD(*((_QWORD *)&v14 + 1));
    if (v21)
      abort();
  }
  v38 = v20;
  v22 = v11;
  v23 = v11 | ((unint64_t)a2 << 32);
  if ((_DWORD)v10)
    v24 = v22 == 0;
  else
    v24 = 1;
  v25 = v24;
  if (HIDWORD(v23))
    v26 = v25;
  else
    v26 = 1;
  v27 = v9 | v26;
  v28 = v9;
  if (v27)
    v29 = 0;
  else
    v29 = v10;
  if (v27)
    v30 = 0;
  else
    v30 = v23;
  if ((_DWORD)v20 * HIDWORD(v30) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if ((_DWORD)a2)
    v31 = v25;
  else
    v31 = 1;
  if (v28 | v31)
  {
    v10 = 0;
    v32 = 0;
  }
  else
  {
    v32 = v23;
  }
  v33 = HIDWORD(v10) * v10 * v32;
  v34 = HIDWORD(v32);
  if ((_DWORD)v34)
    v35 = v33;
  else
    v35 = 0;
  if ((_DWORD)v35 * (_DWORD)v34 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if (HIDWORD(v30) && (_DWORD)v30 && HIDWORD(v29) && (_DWORD)v29 && (_DWORD)v30)
  {
    v39 = 0;
    v40 = v29 - 1;
    v41 = v14 | ((unint64_t)((_DWORD)v10 != 0) << 32);
    *(_DWORD *)v42 = HIDWORD(v29) - 1;
    v36 = v10 << 32;
    if (!HIDWORD(v10))
      v36 = 0;
    *(_QWORD *)&v42[4] = v36 & 0xFFFFFFFF00000000 | DWORD1(v14);
    LODWORD(v43) = v30 - 1;
    *(_QWORD *)((char *)&v43 + 4) = DWORD2(v14) | ((unint64_t)DWORD2(v14) << 32);
    v44 = v38 | (v35 << 32);
    v37 = HIDWORD(v30) - 1;
    HIDWORD(v43) = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      do
      {
        sub_210975420(&v39, v15, v12);
        v12 += v35;
        v15 += v38;
        --v37;
      }
      while (v37);
    }
    return sub_210975420(&v39, v15, v12);
  }
  return result;
}

void sub_21096EE38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10)
{
  void *v10;

  if (v10)
  {
    *a10 = v10;
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

float sub_21096EE74@<S0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  float result;
  __int128 v14;
  __int16 *v15;
  BOOL v16;
  int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  __int16 *v39;
  int v40;
  unint64_t v41;
  _BYTE v42[12];
  __int128 v43;
  uint64_t v44;

  sub_21096E5EC(a1, (uint64_t)&v39);
  if (HIDWORD(v41))
    v6 = (_DWORD)v41 == 0;
  else
    v6 = 1;
  v8 = v6 || *(_DWORD *)v42 == 0 || *(unsigned int *)&v42[4] == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = v41;
  if (v8)
    v11 = 0;
  else
    v11 = *(_QWORD *)v42;
  if (HIDWORD(v11) * HIDWORD(v43) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v11 * (_DWORD)v10 * HIDWORD(v10) != 64&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_83;
  }
  if (HIDWORD(v11) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_27;
    }
LABEL_83:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (!a2)
  {
    v12 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (a2 >> 58)
    sub_2108B327C();
  v12 = (char *)operator new(a2 << 6);
  *a3 = v12;
  a3[2] = &v12[64 * a2];
  bzero(v12, a2 << 6);
  a3[1] = &v12[64 * a2];
LABEL_29:
  sub_21096E5EC(a1, (uint64_t)&v39);
  v14 = v43;
  v15 = v39;
  if (*(_DWORD *)&v42[4])
    v16 = *(_DWORD *)v42 == 0;
  else
    v16 = 1;
  if (v16 || (_DWORD)v41 == 0 || HIDWORD(v41) == 0)
    v19 = 0;
  else
    v19 = *(_DWORD *)&v42[4];
  v20 = HIDWORD(*((_QWORD *)&v43 + 1));
  if (v19 * HIDWORD(v43) == -1)
  {
    v21 = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    v20 = HIDWORD(*((_QWORD *)&v14 + 1));
    if (v21)
      abort();
  }
  v38 = v20;
  v22 = v11;
  v23 = v11 | ((unint64_t)a2 << 32);
  if ((_DWORD)v10)
    v24 = v22 == 0;
  else
    v24 = 1;
  v25 = v24;
  if (HIDWORD(v23))
    v26 = v25;
  else
    v26 = 1;
  v27 = v9 | v26;
  v28 = v9;
  if (v27)
    v29 = 0;
  else
    v29 = v10;
  if (v27)
    v30 = 0;
  else
    v30 = v23;
  if ((_DWORD)v20 * HIDWORD(v30) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if ((_DWORD)a2)
    v31 = v25;
  else
    v31 = 1;
  if (v28 | v31)
  {
    v10 = 0;
    v32 = 0;
  }
  else
  {
    v32 = v23;
  }
  v33 = HIDWORD(v10) * v10 * v32;
  v34 = HIDWORD(v32);
  if ((_DWORD)v34)
    v35 = v33;
  else
    v35 = 0;
  if ((_DWORD)v35 * (_DWORD)v34 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if (HIDWORD(v30) && (_DWORD)v30 && HIDWORD(v29) && (_DWORD)v29 && (_DWORD)v30)
  {
    v39 = 0;
    v40 = v29 - 1;
    v41 = v14 | ((unint64_t)((_DWORD)v10 != 0) << 32);
    *(_DWORD *)v42 = HIDWORD(v29) - 1;
    v36 = v10 << 32;
    if (!HIDWORD(v10))
      v36 = 0;
    *(_QWORD *)&v42[4] = v36 & 0xFFFFFFFF00000000 | DWORD1(v14);
    LODWORD(v43) = v30 - 1;
    *(_QWORD *)((char *)&v43 + 4) = DWORD2(v14) | ((unint64_t)DWORD2(v14) << 32);
    v44 = v38 | (v35 << 32);
    v37 = HIDWORD(v30) - 1;
    HIDWORD(v43) = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      do
      {
        sub_2109755E4(&v39, v15, v12);
        v12 += v35;
        v15 += v38;
        --v37;
      }
      while (v37);
    }
    return sub_2109755E4(&v39, v15, v12);
  }
  return result;
}

void sub_21096F290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10)
{
  void *v10;

  if (v10)
  {
    *a10 = v10;
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

float sub_21096F2CC@<S0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  float result;
  unsigned int v14;
  uint64_t v15;
  _BYTE *v16;
  BOOL v17;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  _BOOL4 v31;
  int v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  _BYTE *v43;
  int v44;
  unint64_t v45;
  _BYTE v46[12];
  __int128 v47;
  uint64_t v48;

  sub_2108C0534(a1, (uint64_t)&v43);
  if (HIDWORD(v45))
    v6 = (_DWORD)v45 == 0;
  else
    v6 = 1;
  v8 = v6 || *(_DWORD *)v46 == 0 || *(unsigned int *)&v46[4] == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = v45;
  if (v8)
    v11 = 0;
  else
    v11 = *(_QWORD *)v46;
  if (HIDWORD(v11) * HIDWORD(v47) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v11 * (_DWORD)v10 * HIDWORD(v10) != 64&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_87;
  }
  if (HIDWORD(v11) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_27;
    }
LABEL_87:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (!a2)
  {
    v12 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (HIBYTE(a2))
    sub_2108B327C();
  v12 = (char *)operator new(a2 << 8);
  *a3 = v12;
  a3[2] = &v12[256 * a2];
  bzero(v12, a2 << 8);
  a3[1] = &v12[256 * a2];
LABEL_29:
  sub_2108C0534(a1, (uint64_t)&v43);
  v15 = v47;
  v14 = DWORD2(v47);
  v16 = v43;
  if (*(_DWORD *)&v46[4])
    v17 = *(_DWORD *)v46 == 0;
  else
    v17 = 1;
  if (v17 || (_DWORD)v45 == 0 || HIDWORD(v45) == 0)
    v20 = 0;
  else
    v20 = *(_DWORD *)&v46[4];
  v21 = HIDWORD(*((_QWORD *)&v47 + 1));
  if (v20 * HIDWORD(v47) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v42 = v14;
  v22 = v11;
  v23 = v11 | ((unint64_t)a2 << 32);
  if ((_DWORD)v10)
    v24 = v22 == 0;
  else
    v24 = 1;
  v25 = v24;
  if (HIDWORD(v23))
    v26 = v25;
  else
    v26 = 1;
  v27 = v9 | v26;
  v28 = v9;
  if (v27)
    v29 = 0;
  else
    v29 = v10;
  if (v27)
    v30 = 0;
  else
    v30 = v23;
  if ((_DWORD)v21 * HIDWORD(v30) == -1)
  {
    v41 = v28;
    v31 = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    v28 = v41;
    if (v31)
      abort();
  }
  if ((_DWORD)a2)
    v32 = v25;
  else
    v32 = 1;
  if (v28 | v32)
  {
    v10 = 0;
    v33 = 0;
  }
  else
  {
    v33 = v23;
  }
  if ((_DWORD)v33)
    v34 = HIDWORD(v10) * v10;
  else
    v34 = 0;
  v35 = HIDWORD(v10) * v10 * v33;
  v36 = HIDWORD(v33);
  if ((_DWORD)v36)
    v37 = v35;
  else
    v37 = 0;
  if ((_DWORD)v37 * (_DWORD)v36 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if (HIDWORD(v30) && (_DWORD)v30 && HIDWORD(v29) && (_DWORD)v29 && (_DWORD)v30)
  {
    v43 = 0;
    v44 = v29 - 1;
    v45 = v15 | ((unint64_t)((_DWORD)v10 != 0) << 32);
    *(_DWORD *)v46 = HIDWORD(v29) - 1;
    v38 = v10 << 32;
    if (!HIDWORD(v10))
      v38 = 0;
    *(_QWORD *)&v46[4] = v38 & 0xFFFFFFFF00000000 | HIDWORD(v15);
    LODWORD(v47) = v30 - 1;
    *(_QWORD *)((char *)&v47 + 4) = v42 | ((unint64_t)v34 << 32);
    v48 = v21 | (v37 << 32);
    v39 = HIDWORD(v30) - 1;
    HIDWORD(v47) = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      v40 = 4 * v37;
      do
      {
        result = sub_2108C2594(&v43, v16, (float *)v12, result);
        v16 += v21;
        v12 += v40;
        --v39;
      }
      while (v39);
    }
    return sub_2108C2594(&v43, v16, (float *)v12, result);
  }
  return result;
}

void sub_21096F6E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  void *v11;

  if (v11)
  {
    *a11 = v11;
    operator delete(v11);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21096F720@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  char *v12;
  const void **v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;

  sub_2108C2820(a1, (uint64_t)&v20);
  if (HIDWORD(v21))
    v6 = (_DWORD)v21 == 0;
  else
    v6 = 1;
  v8 = v6 || (_DWORD)v22 == 0 || HIDWORD(v22) == 0;
  if (v8)
    v9 = 0;
  else
    v9 = v21;
  if (v8)
    v10 = 0;
  else
    v10 = v22;
  if (HIDWORD(v10) * v23 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v10 * (_DWORD)v9 * HIDWORD(v9) != 64&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_38;
  }
  v11 = a2 << 8;
  if (HIDWORD(v10) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_24;
    }
LABEL_38:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (a2)
  {
LABEL_24:
    if (HIBYTE(a2))
      sub_2108B327C();
    v12 = (char *)operator new(a2 << 8);
    *a3 = v12;
    a3[2] = &v12[256 * a2];
    bzero(v12, a2 << 8);
    a3[1] = &v12[v11];
    if (*(_BYTE *)(a1 + 112))
      goto LABEL_26;
LABEL_36:
    v13 = (const void **)(a1 + 40);
    return memcpy(v12, *v13, v11);
  }
  v12 = 0;
  if (!*(_BYTE *)(a1 + 112))
    goto LABEL_36;
LABEL_26:
  v13 = (const void **)(a1 + 96);
  if (*(_BYTE *)(a1 + 108) && *(_QWORD *)(a1 + 96))
  {
    v15 = *(_QWORD *)(a1 + 64);
    v14 = *(std::__shared_weak_count **)(a1 + 72);
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
      do
        v18 = __ldaxr(p_shared_owners);
      while (__stlxr(v18 - 1, p_shared_owners));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
  return memcpy(v12, *v13, v11);
}

void sub_21096F970(_Unwind_Exception *exception_object)
{
  void **v1;
  _QWORD *v2;
  void *v4;

  v4 = *v1;
  if (*v1)
  {
    *v2 = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

float sub_21096F990@<S0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  float result;
  __int128 v14;
  __int16 *v15;
  BOOL v16;
  int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  int v41;
  unint64_t v42;
  _BYTE v43[12];
  __int128 v44;
  uint64_t v45;

  sub_21096E5EC(a1, (uint64_t)&v40);
  if (HIDWORD(v42))
    v6 = (_DWORD)v42 == 0;
  else
    v6 = 1;
  v8 = v6 || *(_DWORD *)v43 == 0 || *(unsigned int *)&v43[4] == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = v42;
  if (v8)
    v11 = 0;
  else
    v11 = *(_QWORD *)v43;
  if (HIDWORD(v11) * HIDWORD(v44) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v11 * (_DWORD)v10 * HIDWORD(v10) != 64&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_84;
  }
  if (HIDWORD(v11) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_27;
    }
LABEL_84:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (!a2)
  {
    v12 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (HIBYTE(a2))
    sub_2108B327C();
  v12 = (char *)operator new(a2 << 8);
  *a3 = v12;
  a3[2] = &v12[256 * a2];
  bzero(v12, a2 << 8);
  a3[1] = &v12[256 * a2];
LABEL_29:
  sub_21096E5EC(a1, (uint64_t)&v40);
  v14 = v44;
  v15 = v40;
  if (*(_DWORD *)&v43[4])
    v16 = *(_DWORD *)v43 == 0;
  else
    v16 = 1;
  if (v16 || (_DWORD)v42 == 0 || HIDWORD(v42) == 0)
    v19 = 0;
  else
    v19 = *(_DWORD *)&v43[4];
  v20 = HIDWORD(*((_QWORD *)&v44 + 1));
  if (v19 * HIDWORD(v44) == -1)
  {
    v21 = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    v20 = HIDWORD(*((_QWORD *)&v14 + 1));
    if (v21)
      abort();
  }
  v39 = v20;
  v22 = v11;
  v23 = v11 | ((unint64_t)a2 << 32);
  if ((_DWORD)v10)
    v24 = v22 == 0;
  else
    v24 = 1;
  v25 = v24;
  if (HIDWORD(v23))
    v26 = v25;
  else
    v26 = 1;
  v27 = v9 | v26;
  v28 = v9;
  if (v27)
    v29 = 0;
  else
    v29 = v10;
  if (v27)
    v30 = 0;
  else
    v30 = v23;
  if ((_DWORD)v20 * HIDWORD(v30) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if ((_DWORD)a2)
    v31 = v25;
  else
    v31 = 1;
  if (v28 | v31)
  {
    v10 = 0;
    v32 = 0;
  }
  else
  {
    v32 = v23;
  }
  v33 = HIDWORD(v10) * v10 * v32;
  v34 = HIDWORD(v32);
  if ((_DWORD)v34)
    v35 = v33;
  else
    v35 = 0;
  if ((_DWORD)v35 * (_DWORD)v34 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if (HIDWORD(v30) && (_DWORD)v30 && HIDWORD(v29) && (_DWORD)v29 && (_DWORD)v30)
  {
    v40 = 0;
    v41 = v29 - 1;
    v42 = v14 | ((unint64_t)((_DWORD)v10 != 0) << 32);
    *(_DWORD *)v43 = HIDWORD(v29) - 1;
    v36 = v10 << 32;
    if (!HIDWORD(v10))
      v36 = 0;
    *(_QWORD *)&v43[4] = v36 & 0xFFFFFFFF00000000 | DWORD1(v14);
    LODWORD(v44) = v30 - 1;
    *(_QWORD *)((char *)&v44 + 4) = DWORD2(v14) | ((unint64_t)DWORD2(v14) << 32);
    v45 = v39 | (v35 << 32);
    v37 = HIDWORD(v30) - 1;
    HIDWORD(v44) = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      v38 = 4 * v35;
      do
      {
        sub_2109757C8(&v40, v15, v12);
        v15 += v39;
        v12 += v38;
        --v37;
      }
      while (v37);
    }
    return sub_2109757C8(&v40, v15, v12);
  }
  return result;
}

void sub_21096FDB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10)
{
  void *v10;

  if (v10)
  {
    *a10 = v10;
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

float sub_21096FDEC@<S0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  float result;
  unsigned int v14;
  uint64_t v15;
  _BYTE *v16;
  BOOL v17;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  _BOOL4 v31;
  int v32;
  unint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  _BYTE *v43;
  int v44;
  unint64_t v45;
  _BYTE v46[12];
  __int128 v47;
  uint64_t v48;

  sub_2108C0534(a1, (uint64_t)&v43);
  if (HIDWORD(v45))
    v6 = (_DWORD)v45 == 0;
  else
    v6 = 1;
  v8 = v6 || *(_DWORD *)v46 == 0 || *(unsigned int *)&v46[4] == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = v45;
  if (v8)
    v11 = 0;
  else
    v11 = *(_QWORD *)v46;
  if (HIDWORD(v11) * HIDWORD(v47) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v11 * (_DWORD)v10 * HIDWORD(v10) != 128&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_87;
  }
  if (HIDWORD(v11) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_27;
    }
LABEL_87:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (!a2)
  {
    v12 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (a2 >> 55)
    sub_2108B327C();
  v12 = (char *)operator new(a2 << 9);
  *a3 = v12;
  a3[2] = &v12[512 * a2];
  bzero(v12, a2 << 9);
  a3[1] = &v12[512 * a2];
LABEL_29:
  sub_2108C0534(a1, (uint64_t)&v43);
  v15 = v47;
  v14 = DWORD2(v47);
  v16 = v43;
  if (*(_DWORD *)&v46[4])
    v17 = *(_DWORD *)v46 == 0;
  else
    v17 = 1;
  if (v17 || (_DWORD)v45 == 0 || HIDWORD(v45) == 0)
    v20 = 0;
  else
    v20 = *(_DWORD *)&v46[4];
  v21 = HIDWORD(*((_QWORD *)&v47 + 1));
  if (v20 * HIDWORD(v47) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v42 = v14;
  v22 = v11;
  v23 = v11 | ((unint64_t)a2 << 32);
  if ((_DWORD)v10)
    v24 = v22 == 0;
  else
    v24 = 1;
  v25 = v24;
  if (HIDWORD(v23))
    v26 = v25;
  else
    v26 = 1;
  v27 = v9 | v26;
  v28 = v9;
  if (v27)
    v29 = 0;
  else
    v29 = v10;
  if (v27)
    v30 = 0;
  else
    v30 = v23;
  if ((_DWORD)v21 * HIDWORD(v30) == -1)
  {
    v41 = v28;
    v31 = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    v28 = v41;
    if (v31)
      abort();
  }
  if ((_DWORD)a2)
    v32 = v25;
  else
    v32 = 1;
  if (v28 | v32)
  {
    v10 = 0;
    v33 = 0;
  }
  else
  {
    v33 = v23;
  }
  if ((_DWORD)v33)
    v34 = HIDWORD(v10) * v10;
  else
    v34 = 0;
  v35 = HIDWORD(v10) * v10 * v33;
  v36 = HIDWORD(v33);
  if ((_DWORD)v36)
    v37 = v35;
  else
    v37 = 0;
  if ((_DWORD)v37 * (_DWORD)v36 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if (HIDWORD(v30) && (_DWORD)v30 && HIDWORD(v29) && (_DWORD)v29 && (_DWORD)v30)
  {
    v43 = 0;
    v44 = v29 - 1;
    v45 = v15 | ((unint64_t)((_DWORD)v10 != 0) << 32);
    *(_DWORD *)v46 = HIDWORD(v29) - 1;
    v38 = v10 << 32;
    if (!HIDWORD(v10))
      v38 = 0;
    *(_QWORD *)&v46[4] = v38 & 0xFFFFFFFF00000000 | HIDWORD(v15);
    LODWORD(v47) = v30 - 1;
    *(_QWORD *)((char *)&v47 + 4) = v42 | ((unint64_t)v34 << 32);
    v48 = v21 | (v37 << 32);
    v39 = HIDWORD(v30) - 1;
    HIDWORD(v47) = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      v40 = 4 * v37;
      do
      {
        result = sub_2108C2594(&v43, v16, (float *)v12, result);
        v16 += v21;
        v12 += v40;
        --v39;
      }
      while (v39);
    }
    return sub_2108C2594(&v43, v16, (float *)v12, result);
  }
  return result;
}

void sub_210970204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  void *v11;

  if (v11)
  {
    *a11 = v11;
    operator delete(v11);
  }
  _Unwind_Resume(exception_object);
}

void *sub_210970240@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  char *v12;
  const void **v13;
  std::__shared_weak_count *v14;
  uint64_t v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;

  sub_2108C2820(a1, (uint64_t)&v20);
  if (HIDWORD(v21))
    v6 = (_DWORD)v21 == 0;
  else
    v6 = 1;
  v8 = v6 || (_DWORD)v22 == 0 || HIDWORD(v22) == 0;
  if (v8)
    v9 = 0;
  else
    v9 = v21;
  if (v8)
    v10 = 0;
  else
    v10 = v22;
  if (HIDWORD(v10) * v23 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v10 * (_DWORD)v9 * HIDWORD(v9) != 128&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_38;
  }
  v11 = a2 << 9;
  if (HIDWORD(v10) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_24;
    }
LABEL_38:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (a2)
  {
LABEL_24:
    if (a2 >> 55)
      sub_2108B327C();
    v12 = (char *)operator new(a2 << 9);
    *a3 = v12;
    a3[2] = &v12[512 * a2];
    bzero(v12, a2 << 9);
    a3[1] = &v12[v11];
    if (*(_BYTE *)(a1 + 112))
      goto LABEL_26;
LABEL_36:
    v13 = (const void **)(a1 + 40);
    return memcpy(v12, *v13, v11);
  }
  v12 = 0;
  if (!*(_BYTE *)(a1 + 112))
    goto LABEL_36;
LABEL_26:
  v13 = (const void **)(a1 + 96);
  if (*(_BYTE *)(a1 + 108) && *(_QWORD *)(a1 + 96))
  {
    v15 = *(_QWORD *)(a1 + 64);
    v14 = *(std::__shared_weak_count **)(a1 + 72);
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        v17 = __ldxr(p_shared_owners);
      while (__stxr(v17 + 1, p_shared_owners));
      do
        v18 = __ldaxr(p_shared_owners);
      while (__stlxr(v18 - 1, p_shared_owners));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v15 + 88))(v15, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
  return memcpy(v12, *v13, v11);
}

void sub_210970490(_Unwind_Exception *exception_object)
{
  void **v1;
  _QWORD *v2;
  void *v4;

  v4 = *v1;
  if (*v1)
  {
    *v2 = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

float sub_2109704B0@<S0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  BOOL v6;
  BOOL v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  float result;
  __int128 v14;
  __int16 *v15;
  BOOL v16;
  int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  int v41;
  unint64_t v42;
  _BYTE v43[12];
  __int128 v44;
  uint64_t v45;

  sub_21096E5EC(a1, (uint64_t)&v40);
  if (HIDWORD(v42))
    v6 = (_DWORD)v42 == 0;
  else
    v6 = 1;
  v8 = v6 || *(_DWORD *)v43 == 0 || *(unsigned int *)&v43[4] == 0;
  v9 = v8;
  if (v8)
    v10 = 0;
  else
    v10 = v42;
  if (v8)
    v11 = 0;
  else
    v11 = *(_QWORD *)v43;
  if (HIDWORD(v11) * HIDWORD(v44) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4)|| (_DWORD)v11 * (_DWORD)v10 * HIDWORD(v10) != 128&& sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 47, (uint64_t)"w * h * c == N", 14, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    goto LABEL_84;
  }
  if (HIDWORD(v11) < a2)
  {
    if (!sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 48, (uint64_t)"num_valid_descriptors <= num_of_output_descriptors", 50, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      a3[1] = 0;
      *a3 = 0;
      a3[2] = 0;
      goto LABEL_27;
    }
LABEL_84:
    abort();
  }
  a3[1] = 0;
  *a3 = 0;
  a3[2] = 0;
  if (!a2)
  {
    v12 = 0;
    goto LABEL_29;
  }
LABEL_27:
  if (a2 >> 55)
    sub_2108B327C();
  v12 = (char *)operator new(a2 << 9);
  *a3 = v12;
  a3[2] = &v12[512 * a2];
  bzero(v12, a2 << 9);
  a3[1] = &v12[512 * a2];
LABEL_29:
  sub_21096E5EC(a1, (uint64_t)&v40);
  v14 = v44;
  v15 = v40;
  if (*(_DWORD *)&v43[4])
    v16 = *(_DWORD *)v43 == 0;
  else
    v16 = 1;
  if (v16 || (_DWORD)v42 == 0 || HIDWORD(v42) == 0)
    v19 = 0;
  else
    v19 = *(_DWORD *)&v43[4];
  v20 = HIDWORD(*((_QWORD *)&v44 + 1));
  if (v19 * HIDWORD(v44) == -1)
  {
    v21 = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4);
    v20 = HIDWORD(*((_QWORD *)&v14 + 1));
    if (v21)
      abort();
  }
  v39 = v20;
  v22 = v11;
  v23 = v11 | ((unint64_t)a2 << 32);
  if ((_DWORD)v10)
    v24 = v22 == 0;
  else
    v24 = 1;
  v25 = v24;
  if (HIDWORD(v23))
    v26 = v25;
  else
    v26 = 1;
  v27 = v9 | v26;
  v28 = v9;
  if (v27)
    v29 = 0;
  else
    v29 = v10;
  if (v27)
    v30 = 0;
  else
    v30 = v23;
  if ((_DWORD)v20 * HIDWORD(v30) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if ((_DWORD)a2)
    v31 = v25;
  else
    v31 = 1;
  if (v28 | v31)
  {
    v10 = 0;
    v32 = 0;
  }
  else
  {
    v32 = v23;
  }
  v33 = HIDWORD(v10) * v10 * v32;
  v34 = HIDWORD(v32);
  if ((_DWORD)v34)
    v35 = v33;
  else
    v35 = 0;
  if ((_DWORD)v35 * (_DWORD)v34 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  if (HIDWORD(v30) && (_DWORD)v30 && HIDWORD(v29) && (_DWORD)v29 && (_DWORD)v30)
  {
    v40 = 0;
    v41 = v29 - 1;
    v42 = v14 | ((unint64_t)((_DWORD)v10 != 0) << 32);
    *(_DWORD *)v43 = HIDWORD(v29) - 1;
    v36 = v10 << 32;
    if (!HIDWORD(v10))
      v36 = 0;
    *(_QWORD *)&v43[4] = v36 & 0xFFFFFFFF00000000 | DWORD1(v14);
    LODWORD(v44) = v30 - 1;
    *(_QWORD *)((char *)&v44 + 4) = DWORD2(v14) | ((unint64_t)DWORD2(v14) << 32);
    v45 = v39 | (v35 << 32);
    v37 = HIDWORD(v30) - 1;
    HIDWORD(v44) = HIDWORD(v30) - 1;
    if (HIDWORD(v30) != 1)
    {
      v38 = 4 * v35;
      do
      {
        sub_2109757C8(&v40, v15, v12);
        v15 += v39;
        v12 += v38;
        --v37;
      }
      while (v37);
    }
    return sub_2109757C8(&v40, v15, v12);
  }
  return result;
}

void sub_2109708D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10)
{
  void *v10;

  if (v10)
  {
    *a10 = v10;
    operator delete(v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_21097090C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int16 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  char *v38;
  int v39;
  __int16 v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  char *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  __int128 v61;
  uint64_t v62;
  __int16 v63;
  uint64_t v64;
  _BYTE v65[30];
  _QWORD v66[3];
  _BYTE v67[30];
  int v68;
  uint64_t (**v69)();
  uint64_t v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  void *__p;
  char *v74;
  int v75;
  __int16 v76;
  char v77;
  int v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _BYTE v82[9];

  v9 = *(_QWORD *)(a2 + 8);
  v79 = 0;
  v80 = 0;
  v81 = 0;
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(std::__shared_weak_count **)(a2 + 40);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    v14 = *(_WORD *)(a2 + 72);
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    v61 = *(_OWORD *)(a2 + 48);
    v62 = *(_QWORD *)(a2 + 64);
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    v59 = v10;
    v60 = v11;
    v63 = v14;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v19 = v59;
    v20 = (unint64_t *)&v11->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    v22 = HIDWORD(v62);
    v23 = *((_QWORD *)&v61 + 1);
    v24 = v61;
    v25 = v63;
    do
      v26 = __ldxr(v20);
    while (__stxr(v26 + 1, v20));
    do
      v27 = __ldxr(v20);
    while (__stxr(v27 + 1, v20));
  }
  else
  {
    v60 = 0;
    v19 = *(_QWORD *)(a2 + 32);
    v11 = 0;
    v22 = HIDWORD(*(_QWORD *)(a2 + 64));
    v23 = *(_QWORD *)(a2 + 56);
    v24 = *(_QWORD *)(a2 + 48);
    v25 = *(_WORD *)(a2 + 72);
  }
  v64 = v19;
  *(_QWORD *)v65 = v23;
  *(_DWORD *)&v65[8] = v22;
  *(_QWORD *)&v65[16] = v24;
  *(_DWORD *)&v65[24] = 1;
  *(_WORD *)&v65[28] = v25;
  if (v11)
  {
    v28 = a5;
    v29 = v9;
    v30 = a1;
    v31 = a3;
    v32 = a4;
    v33 = (unint64_t *)&v11->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    a4 = v32;
    a3 = v31;
    a1 = v30;
    v9 = v29;
    a5 = v28;
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v66[0] = &off_24CA79890;
  v66[1] = v64;
  v66[2] = v11;
  *(_OWORD *)v67 = *(_OWORD *)v65;
  *(_OWORD *)&v67[14] = *(_OWORD *)&v65[14];
  v68 = 2;
  v78 = -1;
  v69 = &off_24CA79890;
  if (v11)
  {
    v36 = (unint64_t *)&v11->__shared_owners_;
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 1, v36));
    v38 = *(char **)&v67[16];
    v39 = *(_DWORD *)&v67[24];
    v40 = *(_WORD *)&v67[28];
    do
      v41 = __ldxr(v36);
    while (__stxr(v41 + 1, v36));
  }
  else
  {
    v38 = *(char **)&v67[16];
    v39 = *(_DWORD *)&v67[24];
    v40 = *(_WORD *)&v67[28];
  }
  v70 = v64;
  v71 = v11;
  v72 = *(std::__shared_weak_count **)v67;
  LODWORD(__p) = *(_DWORD *)&v67[8];
  v74 = v38;
  v75 = v39;
  v76 = v40;
  if (!v11)
    goto LABEL_41;
  v42 = (unint64_t *)&v11->__shared_owners_;
  do
    v43 = __ldaxr(v42);
  while (__stlxr(v43 - 1, v42));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v78 = 2;
  }
  else
  {
LABEL_41:
    v78 = 2;
  }
  v80 = sub_210965228(&v79, (uint64_t)&v69);
  if (v78 != -1)
    ((void (*)(_BYTE *, uint64_t (***)()))off_24CA81678[v78])(v82, &v69);
  v78 = -1;
  ((void (*)(_BYTE *, _QWORD *))off_24CA81678[v68])(v82, v66);
  v68 = -1;
  if (v60)
  {
    v44 = (unint64_t *)&v60->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  kdebug_trace();
  sub_2109A978C(*(_QWORD *)(a1 + 16), &v79, a3, a4, (uint64_t)&v69);
  kdebug_trace();
  if ((_BYTE)v70)
  {
    *(_QWORD *)(a5 + 32) = 0;
    *(_DWORD *)(a5 + 40) = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)a5 = 0;
    *(_DWORD *)(a5 + 24) = 0;
  }
  else
  {
    if (!v77)
      sub_2108B1AA4();
    sub_21096C934((__int128 *)__p, v9, a5);
  }
  if (v77)
  {
    v46 = (char *)__p;
    if (__p)
    {
      v47 = v74;
      v48 = __p;
      if (v74 != __p)
      {
        do
        {
          v49 = v47 - 128;
          v50 = *((unsigned int *)v47 - 2);
          if ((_DWORD)v50 != -1)
            ((void (*)(_QWORD *, char *))off_24CA816C0[v50])(v66, v47 - 128);
          *((_DWORD *)v47 - 2) = -1;
          v47 -= 128;
        }
        while (v49 != v46);
        v48 = __p;
      }
      v74 = v46;
      operator delete(v48);
    }
  }
  v69 = &off_24CA79A00;
  v51 = v72;
  if (!v72)
    goto LABEL_67;
  v52 = (unint64_t *)&v72->__shared_owners_;
  do
    v53 = __ldaxr(v52);
  while (__stlxr(v53 - 1, v52));
  if (!v53)
  {
    ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
    std::__shared_weak_count::__release_weak(v51);
    v54 = v79;
    if (!v79)
      return;
  }
  else
  {
LABEL_67:
    v54 = v79;
    if (!v79)
      return;
  }
  v55 = v80;
  v56 = v54;
  if (v80 != v54)
  {
    do
    {
      v57 = v55 - 128;
      v58 = *((unsigned int *)v55 - 2);
      if ((_DWORD)v58 != -1)
        ((void (*)(uint64_t (***)(), char *))off_24CA81678[v58])(&v69, v55 - 128);
      *((_DWORD *)v55 - 2) = -1;
      v55 -= 128;
    }
    while (v57 != v54);
    v56 = v79;
  }
  v80 = v54;
  operator delete(v56);
}

void sub_210970F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t v40;

  sub_21095F6CC((uint64_t)&a40);
  sub_21095F724((uint64_t)&a24);
  sub_2108B1CE0((uint64_t)&a17);
  sub_2108B8838((uint64_t)&a10);
  sub_21095F86C((void **)(v40 - 120));
  _Unwind_Resume(a1);
}

void sub_210970F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t v40;

  sub_21095F77C((uint64_t)&a40);
  sub_21095F86C((void **)(v40 - 120));
  _Unwind_Resume(a1);
}

void sub_210970FA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_21095F86C((void **)(v1 - 120));
  _Unwind_Resume(a1);
}

void sub_210970FC8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int16 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  char *v38;
  int v39;
  __int16 v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  char *v46;
  char *v47;
  void *v48;
  char *v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  __int128 v61;
  uint64_t v62;
  __int16 v63;
  uint64_t v64;
  _BYTE v65[30];
  _QWORD v66[3];
  _BYTE v67[30];
  int v68;
  uint64_t (**v69)();
  uint64_t v70;
  std::__shared_weak_count *v71;
  std::__shared_weak_count *v72;
  void *__p;
  char *v74;
  int v75;
  __int16 v76;
  char v77;
  int v78;
  char *v79;
  char *v80;
  uint64_t v81;
  _BYTE v82[9];

  v9 = *(_QWORD *)(a2 + 8);
  v79 = 0;
  v80 = 0;
  v81 = 0;
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(std::__shared_weak_count **)(a2 + 40);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    v14 = *(_WORD *)(a2 + 72);
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    v61 = *(_OWORD *)(a2 + 48);
    v62 = *(_QWORD *)(a2 + 64);
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    v59 = v10;
    v60 = v11;
    v63 = v14;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    v19 = v59;
    v20 = (unint64_t *)&v11->__shared_owners_;
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
    v22 = HIDWORD(v62);
    v23 = *((_QWORD *)&v61 + 1);
    v24 = v61;
    v25 = v63;
    do
      v26 = __ldxr(v20);
    while (__stxr(v26 + 1, v20));
    do
      v27 = __ldxr(v20);
    while (__stxr(v27 + 1, v20));
  }
  else
  {
    v60 = 0;
    v19 = *(_QWORD *)(a2 + 32);
    v11 = 0;
    v22 = HIDWORD(*(_QWORD *)(a2 + 64));
    v23 = *(_QWORD *)(a2 + 56);
    v24 = *(_QWORD *)(a2 + 48);
    v25 = *(_WORD *)(a2 + 72);
  }
  v64 = v19;
  *(_QWORD *)v65 = v23;
  *(_DWORD *)&v65[8] = v22;
  *(_QWORD *)&v65[16] = v24;
  *(_DWORD *)&v65[24] = 1;
  *(_WORD *)&v65[28] = v25;
  if (v11)
  {
    v28 = a5;
    v29 = v9;
    v30 = a1;
    v31 = a3;
    v32 = a4;
    v33 = (unint64_t *)&v11->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    a4 = v32;
    a3 = v31;
    a1 = v30;
    v9 = v29;
    a5 = v28;
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v66[0] = &off_24CA79890;
  v66[1] = v64;
  v66[2] = v11;
  *(_OWORD *)v67 = *(_OWORD *)v65;
  *(_OWORD *)&v67[14] = *(_OWORD *)&v65[14];
  v68 = 2;
  v78 = -1;
  v69 = &off_24CA79890;
  if (v11)
  {
    v36 = (unint64_t *)&v11->__shared_owners_;
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 1, v36));
    v38 = *(char **)&v67[16];
    v39 = *(_DWORD *)&v67[24];
    v40 = *(_WORD *)&v67[28];
    do
      v41 = __ldxr(v36);
    while (__stxr(v41 + 1, v36));
  }
  else
  {
    v38 = *(char **)&v67[16];
    v39 = *(_DWORD *)&v67[24];
    v40 = *(_WORD *)&v67[28];
  }
  v70 = v64;
  v71 = v11;
  v72 = *(std::__shared_weak_count **)v67;
  LODWORD(__p) = *(_DWORD *)&v67[8];
  v74 = v38;
  v75 = v39;
  v76 = v40;
  if (!v11)
    goto LABEL_41;
  v42 = (unint64_t *)&v11->__shared_owners_;
  do
    v43 = __ldaxr(v42);
  while (__stlxr(v43 - 1, v42));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v78 = 2;
  }
  else
  {
LABEL_41:
    v78 = 2;
  }
  v80 = sub_210965228(&v79, (uint64_t)&v69);
  if (v78 != -1)
    ((void (*)(_BYTE *, uint64_t (***)()))off_24CA81678[v78])(v82, &v69);
  v78 = -1;
  ((void (*)(_BYTE *, _QWORD *))off_24CA81678[v68])(v82, v66);
  v68 = -1;
  if (v60)
  {
    v44 = (unint64_t *)&v60->__shared_owners_;
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
      std::__shared_weak_count::__release_weak(v60);
    }
  }
  kdebug_trace();
  sub_2109A978C(*(_QWORD *)(a1 + 16), &v79, a3, a4, (uint64_t)&v69);
  kdebug_trace();
  if ((_BYTE)v70)
  {
    *(_QWORD *)(a5 + 32) = 0;
    *(_DWORD *)(a5 + 40) = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)a5 = 0;
    *(_DWORD *)(a5 + 24) = 0;
  }
  else
  {
    if (!v77)
      sub_2108B1AA4();
    sub_21096D2B0((__int128 *)__p, v9, a5);
  }
  if (v77)
  {
    v46 = (char *)__p;
    if (__p)
    {
      v47 = v74;
      v48 = __p;
      if (v74 != __p)
      {
        do
        {
          v49 = v47 - 128;
          v50 = *((unsigned int *)v47 - 2);
          if ((_DWORD)v50 != -1)
            ((void (*)(_QWORD *, char *))off_24CA816C0[v50])(v66, v47 - 128);
          *((_DWORD *)v47 - 2) = -1;
          v47 -= 128;
        }
        while (v49 != v46);
        v48 = __p;
      }
      v74 = v46;
      operator delete(v48);
    }
  }
  v69 = &off_24CA79A00;
  v51 = v72;
  if (!v72)
    goto LABEL_67;
  v52 = (unint64_t *)&v72->__shared_owners_;
  do
    v53 = __ldaxr(v52);
  while (__stlxr(v53 - 1, v52));
  if (!v53)
  {
    ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
    std::__shared_weak_count::__release_weak(v51);
    v54 = v79;
    if (!v79)
      return;
  }
  else
  {
LABEL_67:
    v54 = v79;
    if (!v79)
      return;
  }
  v55 = v80;
  v56 = v54;
  if (v80 != v54)
  {
    do
    {
      v57 = v55 - 128;
      v58 = *((unsigned int *)v55 - 2);
      if ((_DWORD)v58 != -1)
        ((void (*)(uint64_t (***)(), char *))off_24CA81678[v58])(&v69, v55 - 128);
      *((_DWORD *)v55 - 2) = -1;
      v55 -= 128;
    }
    while (v57 != v54);
    v56 = v79;
  }
  v80 = v54;
  operator delete(v56);
}

void sub_210971608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t v40;

  sub_21095F6CC((uint64_t)&a40);
  sub_21095F724((uint64_t)&a24);
  sub_2108B1CE0((uint64_t)&a17);
  sub_2108B8838((uint64_t)&a10);
  sub_21095F86C((void **)(v40 - 120));
  _Unwind_Resume(a1);
}

void sub_210971644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t v40;

  sub_21095F77C((uint64_t)&a40);
  sub_21095F86C((void **)(v40 - 120));
  _Unwind_Resume(a1);
}

void sub_210971664(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_21095F86C((void **)(v1 - 120));
  _Unwind_Resume(a1);
}

void sub_210971684(int a1@<W0>, uint64_t a2@<X8>)
{
  _BYTE *v4;
  int v5;
  std::string __p;

  sub_2109891EC(&__p);
  *(_QWORD *)a2 = 0x700000003;
  *(_DWORD *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 16) = xmmword_210A187E0;
  *(_QWORD *)(a2 + 32) = 0x7475706E69;
  *(_BYTE *)(a2 + 55) = 5;
  *(_QWORD *)(a2 + 56) = 0x74757074756FLL;
  *(_BYTE *)(a2 + 79) = 6;
  v4 = (_BYTE *)(a2 + 80);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v5 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(_WORD *)(a2 + 104) = 256;
    *(_DWORD *)(a2 + 108) = a1;
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    if (v5 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(a2 + 96) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_WORD *)(a2 + 104) = 256;
    *(_DWORD *)(a2 + 108) = a1;
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
  }
}

void sub_21097176C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 + 79) < 0)
  {
    operator delete(*(void **)(v15 + 56));
    if ((*(char *)(v15 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      if ((a15 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v15 + 55) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v15 + 32));
  if ((a15 & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2109717C0(int a1@<W0>, uint64_t a2@<X8>)
{
  _OWORD *v4;
  __int128 v5;
  _OWORD *v6;
  __int128 v7;
  _OWORD *v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  __int128 v13;
  _OWORD *v14;
  __int128 v15;
  _OWORD *v16;
  __int128 v17;
  _OWORD *v18;
  __int128 v19;
  _OWORD *v20;
  __int128 v21;
  _OWORD *v22;
  __int128 v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  std::string *v31;
  char *v32;
  void *v33;
  uint64_t v34;
  void *v35[5];
  _BYTE v36[128];
  std::string __p;
  _OWORD *v38;
  char *v39;
  char *v40;
  char v41;
  char v42;
  char v43[24];
  _OWORD *v44;
  char *v45;
  char *v46;
  char v47;
  char v48;
  char v49[24];
  _OWORD *v50;
  char *v51;
  char *v52;
  char v53;
  char v54;
  char v55[24];
  _OWORD *v56;
  char *v57;
  char *v58;
  char v59;
  char v60;
  char v61[24];
  _OWORD *v62;
  char *v63;
  char *v64;
  char v65;
  char v66;
  char v67[23];
  _BYTE v68[9];
  char *v69;
  char *v70;
  char v71;
  char v72;
  char v73[23];
  _BYTE v74[9];
  char *v75;
  char *v76;
  char v77;
  char v78;
  char v79[23];
  _BYTE v80[9];
  char *v81;
  char *v82;
  char v83;
  char v84;
  char v85[23];
  _BYTE v86[9];
  char *v87;
  char *v88;
  char v89;
  char v90;
  char v91[23];
  _BYTE v92[9];
  char *v93;
  char *v94;
  char v95;
  char v96;
  char v97[24];
  _OWORD *v98;
  char *v99;
  char *v100;
  char v101;
  char v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = 10;
  strcpy((char *)&__p, "lf-640x640");
  v4 = operator new(0x28uLL);
  v39 = (char *)v4 + 40;
  v40 = (char *)v4 + 40;
  *(_QWORD *)&v5 = 0x100000001;
  *((_QWORD *)&v5 + 1) = 0x100000001;
  *v4 = xmmword_210A17AF0;
  v4[1] = v5;
  *((_QWORD *)v4 + 4) = 0x20000000006;
  v38 = v4;
  v41 = 0;
  v42 = 0;
  v43[23] = 10;
  strcpy(v43, "lf-640x480");
  v6 = operator new(0x28uLL);
  v45 = (char *)v6 + 40;
  v46 = (char *)v6 + 40;
  *(_QWORD *)&v7 = 0x100000001;
  *((_QWORD *)&v7 + 1) = 0x100000001;
  *v6 = xmmword_210A17A60;
  v6[1] = v7;
  *((_QWORD *)v6 + 4) = 0x20000000006;
  v44 = v6;
  v47 = 0;
  v48 = 0;
  v49[23] = 10;
  strcpy(v49, "lf-640x360");
  v8 = operator new(0x28uLL);
  v51 = (char *)v8 + 40;
  v52 = (char *)v8 + 40;
  *(_QWORD *)&v9 = 0x100000001;
  *((_QWORD *)&v9 + 1) = 0x100000001;
  *v8 = xmmword_210A17A70;
  v8[1] = v9;
  *((_QWORD *)v8 + 4) = 0x20000000006;
  v50 = v8;
  v53 = 0;
  v54 = 0;
  v55[23] = 10;
  strcpy(v55, "lf-480x480");
  v10 = operator new(0x28uLL);
  v57 = (char *)v10 + 40;
  v58 = (char *)v10 + 40;
  *(_QWORD *)&v11 = 0x100000001;
  *((_QWORD *)&v11 + 1) = 0x100000001;
  *v10 = xmmword_210A17A80;
  v10[1] = v11;
  *((_QWORD *)v10 + 4) = 0x20000000006;
  v56 = v10;
  v59 = 0;
  v60 = 0;
  v61[23] = 10;
  strcpy(v61, "lf-480x360");
  v12 = operator new(0x28uLL);
  v64 = (char *)v12 + 40;
  *(_QWORD *)&v13 = 0x100000001;
  *((_QWORD *)&v13 + 1) = 0x100000001;
  *v12 = xmmword_210A17A90;
  v12[1] = v13;
  *((_QWORD *)v12 + 4) = 0x20000000006;
  v62 = v12;
  v63 = (char *)v12 + 40;
  v65 = 0;
  v66 = 0;
  strcpy(v68, "\n");
  strcpy(v67, "lf-480x270");
  v70 = 0;
  v68[2] = 0;
  *(_WORD *)&v68[3] = 0;
  *(_DWORD *)&v68[5] = 0;
  v69 = 0;
  v14 = operator new(0x28uLL);
  v70 = (char *)v14 + 40;
  *(_QWORD *)&v15 = 0x100000001;
  *((_QWORD *)&v15 + 1) = 0x100000001;
  *v14 = xmmword_210A17AA0;
  v14[1] = v15;
  *((_QWORD *)v14 + 4) = 0x20000000006;
  *(_QWORD *)&v68[1] = v14;
  v69 = (char *)v14 + 40;
  v71 = 0;
  v72 = 0;
  strcpy(v74, "\n");
  strcpy(v73, "lf-360x270");
  v76 = 0;
  v74[2] = 0;
  *(_WORD *)&v74[3] = 0;
  *(_DWORD *)&v74[5] = 0;
  v75 = 0;
  v16 = operator new(0x28uLL);
  v76 = (char *)v16 + 40;
  *(_QWORD *)&v17 = 0x100000001;
  *((_QWORD *)&v17 + 1) = 0x100000001;
  *v16 = xmmword_210A17AB0;
  v16[1] = v17;
  *((_QWORD *)v16 + 4) = 0x20000000006;
  *(_QWORD *)&v74[1] = v16;
  v75 = (char *)v16 + 40;
  v77 = 0;
  v78 = 0;
  strcpy(v80, "\n");
  strcpy(v79, "lf-320x320");
  v80[2] = 0;
  *(_WORD *)&v80[3] = 0;
  *(_DWORD *)&v80[5] = 0;
  v82 = 0;
  v81 = 0;
  v18 = operator new(0x28uLL);
  *(_QWORD *)&v80[1] = v18;
  v82 = (char *)v18 + 40;
  *(_QWORD *)&v19 = 0x100000001;
  *((_QWORD *)&v19 + 1) = 0x100000001;
  *v18 = xmmword_210A17AE0;
  v18[1] = v19;
  *((_QWORD *)v18 + 4) = 0x20000000006;
  v81 = (char *)v18 + 40;
  v83 = 0;
  v84 = 0;
  strcpy(v86, "\n");
  strcpy(v85, "lf-320x240");
  v86[2] = 0;
  *(_WORD *)&v86[3] = 0;
  *(_DWORD *)&v86[5] = 0;
  v88 = 0;
  v87 = 0;
  v20 = operator new(0x28uLL);
  *(_QWORD *)&v86[1] = v20;
  v88 = (char *)v20 + 40;
  *(_QWORD *)&v21 = 0x100000001;
  *((_QWORD *)&v21 + 1) = 0x100000001;
  *v20 = xmmword_210A17AD0;
  v20[1] = v21;
  *((_QWORD *)v20 + 4) = 0x20000000006;
  v87 = (char *)v20 + 40;
  v89 = 0;
  v90 = 0;
  strcpy(v92, "\n");
  strcpy(v91, "lf-320x180");
  v92[2] = 0;
  *(_WORD *)&v92[3] = 0;
  *(_DWORD *)&v92[5] = 0;
  v94 = 0;
  v93 = 0;
  v22 = operator new(0x28uLL);
  *(_QWORD *)&v92[1] = v22;
  v94 = (char *)v22 + 40;
  *(_QWORD *)&v23 = 0x100000001;
  *((_QWORD *)&v23 + 1) = 0x100000001;
  *v22 = xmmword_210A17AC0;
  v22[1] = v23;
  *((_QWORD *)v22 + 4) = 0x20000000006;
  v93 = (char *)v22 + 40;
  v95 = 0;
  v96 = 0;
  v97[23] = 19;
  strcpy(v97, "lf-big-test-512x380");
  v98 = 0;
  v100 = 0;
  v99 = 0;
  v24 = operator new(0x28uLL);
  v98 = v24;
  v100 = (char *)v24 + 40;
  *(_QWORD *)&v25 = 0x100000001;
  *((_QWORD *)&v25 + 1) = 0x100000001;
  *v24 = xmmword_210A17B00;
  v24[1] = v25;
  *((_QWORD *)v24 + 4) = 0x20000000006;
  v99 = (char *)v24 + 40;
  v101 = 0;
  v102 = 0;
  sub_2109842CC((__int128 *)&__p, 0xBuLL, (uint64_t)v36);
  if (!v36[120])
  {
    v34 = sub_21096575C((uint64_t)v36);
    sub_21096579C(v34);
  }
  sub_2109657A8((uint64_t)v35, (uint64_t)v36);
  sub_210966108((uint64_t)v36);
  v26 = &v103;
  do
  {
    if (*((_BYTE *)v26 - 8))
    {
      v27 = *(v26 - 4);
      if (v27)
      {
        v28 = *(v26 - 3);
        v29 = (void *)*(v26 - 4);
        if (v28 != v27)
        {
          do
          {
            if (*(char *)(v28 - 1) < 0)
              operator delete(*(void **)(v28 - 24));
            v28 -= 24;
          }
          while (v28 != v27);
          v29 = (void *)*(v26 - 4);
        }
        *(v26 - 3) = v27;
        operator delete(v29);
      }
    }
    v30 = (void *)*(v26 - 7);
    if (v30)
    {
      *(v26 - 6) = (uint64_t)v30;
      operator delete(v30);
    }
    v31 = (std::string *)(v26 - 10);
    if (*((char *)v26 - 57) < 0)
      operator delete(v31->__r_.__value_.__l.__data_);
    v26 -= 10;
  }
  while (v31 != &__p);
  v32 = (char *)operator new(0x20uLL);
  strcpy(v32, "output_batch_size_512_0_0");
  *(_QWORD *)a2 = 0x700000003;
  *(_QWORD *)(a2 + 16) = 512;
  *(_QWORD *)(a2 + 24) = 0x6D695F7475706E69;
  *(_QWORD *)(a2 + 32) = 6645601;
  *(_BYTE *)(a2 + 47) = 11;
  *(_QWORD *)(a2 + 48) = 0x746E696F7079656BLL;
  *(_QWORD *)(a2 + 56) = 115;
  *(_BYTE *)(a2 + 71) = 9;
  *(_DWORD *)(a2 + 8) = 0;
  sub_2108B314C((_BYTE *)(a2 + 72), v32, 0x19uLL);
  sub_210989A58(&__p);
  if ((_BYTE)v38)
  {
    *(std::string *)(a2 + 96) = __p;
    memset(&__p, 0, sizeof(__p));
  }
  else
  {
    *(_BYTE *)(a2 + 119) = 0;
    *(_BYTE *)(a2 + 96) = 0;
  }
  *(_DWORD *)(a2 + 120) = a1;
  sub_2109657A8(a2 + 128, (uint64_t)v35);
  if ((_BYTE)v38 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  operator delete(v32);
  sub_21095A1BC((int)v35, (void **)v35[2]);
  v33 = v35[0];
  v35[0] = 0;
  if (v33)
    operator delete(v33);
}

void sub_210971E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39)
{
  uint64_t v39;
  void *v40;
  void **v41;
  void **v42;

  if (*(char *)(v39 + 119) < 0)
    operator delete(*v42);
  if (a39)
  {
    if (a38 < 0)
      operator delete(__p);
  }
  if (*(char *)(v39 + 95) < 0)
  {
    operator delete(*v41);
    if ((*(char *)(v39 + 71) & 0x80000000) == 0)
    {
LABEL_8:
      if ((*(char *)(v39 + 47) & 0x80000000) == 0)
        goto LABEL_10;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(v39 + 71) & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  operator delete(*(void **)(v39 + 48));
  if ((*(char *)(v39 + 47) & 0x80000000) == 0)
  {
LABEL_10:
    operator delete(v40);
    sub_210964AE0((uint64_t)&a12);
    _Unwind_Resume(a1);
  }
LABEL_9:
  operator delete(*(void **)(v39 + 24));
  goto LABEL_10;
}

void sub_210971F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  char *v33;

  do
  {
    v33 -= 80;
    sub_2109656B0((uint64_t)v33);
  }
  while (v33 != &a33);
  _Unwind_Resume(a1);
}

void sub_210971FBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_210971FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_210966108((uint64_t)&a17);
  sub_2109656B0(v35);
  sub_2109656B0(v34);
  sub_2109656B0(v41);
  sub_2109656B0(v40);
  sub_2109656B0(v39);
  sub_2109656B0(a10);
  sub_2109656B0(v33);
  sub_2109656B0(v36);
  sub_2109656B0(v38);
  sub_2109656B0(v37);
  sub_2109656B0((uint64_t)&a33);
  _Unwind_Resume(a1);
}

void sub_210972030(int a1@<W0>, uint64_t a2@<X8>)
{
  _BYTE *v4;
  int v5;
  std::string __p;
  char v7;

  sub_2108A4A34(&__p);
  sub_210997120((uint64_t)&__p, 0xDu);
  if (v7 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  sub_21098A2C0(&__p);
  *(_QWORD *)a2 = 2;
  *(_DWORD *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 16) = xmmword_210A187E0;
  *(_QWORD *)(a2 + 32) = 0x7475706E69;
  *(_BYTE *)(a2 + 55) = 5;
  *(_QWORD *)(a2 + 56) = 0x74757074756FLL;
  *(_BYTE *)(a2 + 79) = 6;
  v4 = (_BYTE *)(a2 + 80);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v5 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    *(_WORD *)(a2 + 104) = 256;
    *(_DWORD *)(a2 + 108) = a1;
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    if (v5 < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    *(_OWORD *)v4 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(a2 + 96) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
    *(_WORD *)(a2 + 104) = 256;
    *(_DWORD *)(a2 + 108) = a1;
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
  }
}

void sub_210972160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 + 79) < 0)
    operator delete(*(void **)(v15 + 56));
  if (*(char *)(v15 + 55) < 0)
    operator delete(*(void **)(v15 + 32));
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2109721AC(int a1@<W0>, uint64_t a2@<X8>)
{
  _BYTE *v4;
  _BOOL4 v5;
  std::string __p;

  sub_21098AB6C(&__p);
  *(_QWORD *)a2 = 2;
  *(_DWORD *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 16) = xmmword_210A187E0;
  strcpy((char *)(a2 + 32), "input_patches");
  *(_WORD *)(a2 + 46) = 0;
  *(_BYTE *)(a2 + 55) = 13;
  *(_QWORD *)(a2 + 56) = 0x74757074756FLL;
  *(_BYTE *)(a2 + 79) = 6;
  v4 = (_BYTE *)(a2 + 80);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_2108B314C(v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v5 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
  }
  else
  {
    v5 = 0;
    *(_OWORD *)v4 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_QWORD *)(a2 + 96) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
  }
  *(_WORD *)(a2 + 104) = 256;
  *(_DWORD *)(a2 + 108) = a1;
  strcpy((char *)(a2 + 112), "input_keypoints");
  *(_WORD *)(a2 + 135) = 271;
  if (v5)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_2109722B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 + 79) < 0)
  {
    operator delete(*(void **)(v15 + 56));
    if ((*(char *)(v15 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      if ((a15 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v15 + 55) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v15 + 32));
  if ((a15 & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_210972308(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  BOOL v9;
  void *v10;
  void *v11;
  char v12;
  char v13;
  void *v14;
  char v15;
  char v16;
  uint64_t (**v17)();
  _BYTE v18[120];
  void *__p;
  void *v20;
  char v21;
  char v22;
  void *v23;
  char v24;
  char v25;

  v3 = *(unsigned __int8 *)(a1 + 103);
  v4 = (char)v3;
  if ((v3 & 0x80u) != 0)
    v3 = *(_QWORD *)(a1 + 88);
  if (v3 >= 7
    && (v4 >= 0 ? (v5 = a1 + 80) : (v5 = *(_QWORD *)(a1 + 80)),
        (v6 = v3 + v5, v7 = *(_DWORD *)(v6 - 7), v8 = *(_DWORD *)(v6 - 4), v7 == 1853186606)
      ? (v9 = v8 == 1701602414)
      : (v9 = 0),
        v9))
  {
    LOBYTE(v14) = 0;
    v16 = 0;
    sub_21097AD58((uint64_t)&v17, a1, (uint64_t)&v14);
    sub_2109724E4((uint64_t)&v17, a2);
    v17 = off_24CA829B8;
    if (v25 && v24 < 0)
      operator delete(v23);
    if (v22 && v21 < 0)
      operator delete(__p);
    v17 = (uint64_t (**)())off_24CA82AC0;
    sub_2108B55B4((uint64_t)v18);
    if (v16 && v15 < 0)
    {
      v10 = v14;
      goto LABEL_17;
    }
  }
  else
  {
    LOBYTE(v11) = 0;
    v13 = 0;
    sub_21097A968((uint64_t)&v17, a1, (uint64_t)&v11);
    sub_210972944((uint64_t)&v17, a2);
    v17 = &off_24CA82960;
    if (v22 && __p)
    {
      v20 = __p;
      operator delete(__p);
    }
    v17 = (uint64_t (**)())off_24CA82AC0;
    sub_2108B55B4((uint64_t)v18);
    if (v13 && v12 < 0)
    {
      v10 = v11;
LABEL_17:
      operator delete(v10);
    }
  }
}

void sub_210972484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,int a23,__int16 a24,char a25,char a26)
{
  sub_21097B0CC((uint64_t)&a24);
  if (a22)
  {
    if (a21 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2109724E4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  void *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  void **v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  char v23;
  std::__shared_weak_count *v24;
  void *v25;
  uint64_t (**v26)();
  char v27;
  unsigned __int8 v28;
  std::__shared_weak_count *v29;

  sub_21098D1D0(a1, (uint64_t)&v25);
  if (v27)
  {
    LOBYTE(v21) = 0;
    v23 = v27;
    v4 = v29;
    v24 = v29;
    if (!v29)
      goto LABEL_21;
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v26 = &off_24CA79A00;
    goto LABEL_17;
  }
  v7 = (std::__shared_weak_count *)operator new(0xE8uLL);
  v7->__shared_owners_ = 0;
  v8 = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA816E8;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v7[1].__shared_owners_, (uint64_t *)(a1 + 8));
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA829B8;
  sub_210964BC8(&v7[6].__shared_owners_, (__int128 *)(a1 + 128));
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA81830;
  v9 = v25;
  v25 = 0;
  do
    v10 = __ldxr(v8);
  while (__stxr(v10 + 1, v8));
  if (!v9
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  *(_QWORD *)&v21 = v7 + 1;
  *((_QWORD *)&v21 + 1) = v7;
  v22 = v9;
  v23 = 0;
  v24 = v29;
  if (v29)
  {
    v11 = (unint64_t *)&v29->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  do
    v13 = __ldaxr(v8);
  while (__stlxr(v13 - 1, v8));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v4 = v29;
  v26 = &off_24CA79A00;
  if (v29)
  {
LABEL_17:
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
LABEL_21:
  if (v25)
    (*(void (**)(void *))(*(_QWORD *)v25 + 8))(v25);
  if (v23)
  {
    std::operator+<char>();
    if ((v28 & 0x80u) == 0)
      v19 = &v25;
    else
      v19 = (void **)v25;
    if ((v28 & 0x80u) == 0)
      v20 = v28;
    else
      v20 = (uint64_t)v26;
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/include_private/LearnedFeatures/DescriptorExtraction/DescriptorExtractionUtil.h", 100, (uint64_t)&unk_210A01421, 0, (uint64_t)v19, v20, (void (*)(void **))sub_2109EDDB4);
    if ((char)v28 < 0)
      operator delete(v25);
    abort();
  }
  v16 = operator new();
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v16 + 16) = v22;
  *a2 = v16;
  if (v24)
  {
    v17 = (unint64_t *)&v24->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_210972890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (*(char *)(v9 - 81) < 0)
  {
    operator delete(*(void **)(v9 - 104));
    sub_2109579F0((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  sub_2109579F0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_210972944(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  void *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  void **v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  char v23;
  std::__shared_weak_count *v24;
  void *v25;
  uint64_t (**v26)();
  char v27;
  unsigned __int8 v28;
  std::__shared_weak_count *v29;

  sub_21098CEE4(a1, (uint64_t)&v25);
  if (v27)
  {
    LOBYTE(v21) = 0;
    v23 = v27;
    v4 = v29;
    v24 = v29;
    if (!v29)
      goto LABEL_21;
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v26 = &off_24CA79A00;
    goto LABEL_17;
  }
  v7 = (std::__shared_weak_count *)operator new(0xC8uLL);
  v7->__shared_owners_ = 0;
  v8 = (unint64_t *)&v7->__shared_owners_;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81738;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v7[1].__shared_owners_, (uint64_t *)(a1 + 8));
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA82960;
  sub_210957BA4((uint64_t)&v7[6].__shared_owners_, a1 + 128);
  v7[7].__shared_weak_owners_ = *(_QWORD *)(a1 + 160);
  LOWORD(v7[8].__vftable) = *(_WORD *)(a1 + 168);
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81808;
  v9 = v25;
  v25 = 0;
  do
    v10 = __ldxr(v8);
  while (__stxr(v10 + 1, v8));
  if (!v9
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/ML/src/Model.cpp", 39, (uint64_t)"instance_ != nullptr", 20, (uint64_t)"", 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  *(_QWORD *)&v21 = v7 + 1;
  *((_QWORD *)&v21 + 1) = v7;
  v22 = v9;
  v23 = 0;
  v24 = v29;
  if (v29)
  {
    v11 = (unint64_t *)&v29->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  do
    v13 = __ldaxr(v8);
  while (__stlxr(v13 - 1, v8));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v4 = v29;
  v26 = &off_24CA79A00;
  if (v29)
  {
LABEL_17:
    v14 = (unint64_t *)&v4->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
LABEL_21:
  if (v25)
    (*(void (**)(void *))(*(_QWORD *)v25 + 8))(v25);
  if (v23)
  {
    std::operator+<char>();
    if ((v28 & 0x80u) == 0)
      v19 = &v25;
    else
      v19 = (void **)v25;
    if ((v28 & 0x80u) == 0)
      v20 = v28;
    else
      v20 = (uint64_t)v26;
    sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/include_private/LearnedFeatures/DescriptorExtraction/DescriptorExtractionUtil.h", 100, (uint64_t)&unk_210A01421, 0, (uint64_t)v19, v20, (void (*)(void **))sub_2109EDDB4);
    if ((char)v28 < 0)
      operator delete(v25);
    abort();
  }
  v16 = operator new();
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v16 + 16) = v22;
  *a2 = v16;
  if (v24)
  {
    v17 = (unint64_t *)&v24->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_210972D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (*(char *)(v9 - 81) < 0)
  {
    operator delete(*(void **)(v9 - 104));
    sub_2109579F0((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  sub_2109579F0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_210972DB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  __int16 v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __int16 v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  __int16 v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  unsigned int v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  __int16 v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  unint64_t v91;
  BOOL v92;
  uint64_t (**v93)();
  unint64_t v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  __int16 v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  uint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  __int16 v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  __int16 v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  unint64_t v133;
  std::__shared_weak_count *v134;
  unint64_t *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  std::__shared_weak_count *v139;
  unint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  std::__shared_weak_count *v152;
  unint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  std::__shared_weak_count *v159;
  std::__shared_weak_count *v160;
  uint64_t v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  uint64_t v184;
  std::__shared_weak_count *v185;
  unint64_t *v186;
  unint64_t v187;
  std::__shared_weak_count *v188;
  unint64_t *v189;
  unint64_t v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  _QWORD *result;
  uint64_t v199;
  uint64_t v200;
  __int16 v201;
  uint64_t v202;
  uint64_t (**v203)();
  uint64_t v204;
  std::__shared_weak_count *v205;
  __int128 v206;
  std::__shared_weak_count *v207;
  uint64_t v208;
  __int128 v209;
  __int16 v210;
  _QWORD v211[4];
  uint64_t v212;
  std::__shared_weak_count *v213;
  __int128 v214;
  uint64_t v215;
  __int16 v216;
  uint64_t (**v217)();
  uint64_t v218;
  std::__shared_weak_count *v219;
  __int128 v220;
  std::__shared_weak_count *v221;
  _BYTE v222[24];
  __int16 v223;
  uint64_t (**v224)();
  unint64_t v225;
  std::__shared_weak_count *v226;
  __int128 v227;
  std::__shared_weak_count *v228;
  __int16 v229;
  uint64_t v230;
  void (*v231)(void);
  _QWORD v232[4];
  uint64_t v233;
  std::__shared_weak_count *v234;
  __int128 v235;
  std::__shared_weak_count *v236;
  __int16 v237;
  _QWORD *v238[2];
  int v239;
  uint64_t v240;
  uint64_t v241;
  _DWORD v242[2];
  __int128 v243;
  std::__shared_weak_count *v244;
  __int128 v245;
  uint64_t v246;
  __int16 v247;
  uint64_t v248;
  unint64_t v249;
  __int128 v250;
  _QWORD v251[3];
  _QWORD *v252;
  uint64_t v253;

  v253 = *MEMORY[0x24BDAC8D0];
  v241 = a5;
  v11 = *(_QWORD *)(a2 + 8);
  if (v11 > (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 32))(*a1)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 254, (uint64_t)"patches.NumberOfUsedPatches() <= model->BatchSize()", 51, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_21097432C((uint64_t)&v224, a2);
  v12 = v225;
  v13 = v226;
  kdebug_trace();
  v240 = 0;
  v251[0] = &off_24CA81788;
  v251[1] = &v240;
  v251[2] = 0;
  v252 = v251;
  v14 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 32))(*a1);
  v238[0] = a1;
  v238[1] = &v241;
  v239 = v13;
  v15 = *(_QWORD *)(a2 + 16);
  if (v15 == (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 32))(*a1))
  {
    sub_21097456C(a6, v238, a2, a3, a4);
    v232[0] = 0;
    v217 = (uint64_t (**)())v232;
    v16 = *(unsigned int *)(a6 + 24);
    if ((_DWORD)v16 == -1)
      sub_2108B9060();
    v224 = (uint64_t (**)())&v217;
    ((void (*)(uint64_t (***)(), uint64_t))off_24CA822B8[v16])(&v224, a6);
    v240 = v232[0];
    goto LABEL_322;
  }
  v17 = *(std::__shared_weak_count **)(a2 + 40);
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(p_shared_owners);
    while (__stxr(v19 + 1, p_shared_owners));
    do
      v20 = __ldxr(p_shared_owners);
    while (__stxr(v20 + 1, p_shared_owners));
    v21 = *(_DWORD *)(a2 + 60);
    do
      v22 = __ldxr(p_shared_owners);
    while (__stxr(v22 + 1, p_shared_owners));
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    do
      v25 = __ldaxr(p_shared_owners);
    while (__stlxr(v25 - 1, p_shared_owners));
    if (v25)
    {
      if (v21 >= v13)
        goto LABEL_26;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
      if (v21 >= v13)
        goto LABEL_26;
    }
  }
  else if (*(_DWORD *)(a2 + 60) >= v13)
  {
    goto LABEL_26;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/PatchCropping/include/LearnedFeatures/PatchCropping/ImagePatches.h", 215, (uint64_t)"this->Patches().Height() >= batch_start + num_patches", 53, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_26:
  v224 = &off_24CA79B48;
  v26 = *(_QWORD *)(a2 + 32);
  v27 = *(std::__shared_weak_count **)(a2 + 40);
  if (v27)
  {
    v28 = (unint64_t *)&v27->__shared_owners_;
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
    v30 = *(_WORD *)(a2 + 72);
    do
      v31 = __ldxr(v28);
    while (__stxr(v31 + 1, v28));
    v227 = *(_OWORD *)(a2 + 48);
    v228 = *(std::__shared_weak_count **)(a2 + 64);
    do
      v32 = __ldxr(v28);
    while (__stxr(v32 + 1, v28));
    v225 = v26;
    v226 = v27;
    v229 = v30;
    do
      v33 = __ldaxr(v28);
    while (__stlxr(v33 - 1, v28));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    do
      v34 = __ldaxr(v28);
    while (__stlxr(v34 - 1, v28));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
    v35 = v225;
    if (!v225)
      goto LABEL_57;
  }
  else
  {
    v36 = *(_WORD *)(a2 + 72);
    v225 = *(_QWORD *)(a2 + 32);
    v226 = 0;
    v227 = *(_OWORD *)(a2 + 48);
    v228 = *(std::__shared_weak_count **)(a2 + 64);
    v229 = v36;
    v35 = v225;
    if (!v225)
      goto LABEL_57;
  }
  v37 = v226;
  if (v226)
  {
    v38 = (unint64_t *)&v226->__shared_owners_;
    do
      v39 = __ldxr(v38);
    while (__stxr(v39 + 1, v38));
    do
      v40 = __ldaxr(v38);
    while (__stlxr(v40 - 1, v38));
    if (!v40)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    v35 = v225;
    v41 = v226;
    if (v226)
    {
      v42 = (unint64_t *)&v226->__shared_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      do
        v44 = __ldaxr(v42);
      while (__stlxr(v44 - 1, v42));
      if (!v44)
      {
        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
        std::__shared_weak_count::__release_weak(v41);
      }
    }
  }
  if (HIBYTE(v229))
  {
    (*(void (**)(__int128 *__return_ptr, unint64_t, _QWORD))(*(_QWORD *)v35 + 96))(&v243, v35, 0);
    goto LABEL_58;
  }
LABEL_57:
  *(_QWORD *)&v243 = 0;
LABEL_58:
  v45 = *(_QWORD *)a2;
  *(_QWORD *)&v250 = __PAIR64__(v13, DWORD2(v227));
  v211[0] = v227;
  v217 = &off_24CA79B48;
  if (DWORD2(v227))
    v46 = (_DWORD)v13 == 0;
  else
    v46 = 1;
  v47 = (unint64_t)HIDWORD(v228) << 32;
  if (v46)
    v47 = 0;
  v203 = (uint64_t (**)())(v47 | (DWORD2(v227) != 0));
  sub_210975C5C(v211, &v250, (uint64_t *)&v203, (uint64_t)&v218);
  v232[0] = v45;
  v232[1] = v13;
  v232[2] = v13;
  v232[3] = &off_24CA79B48;
  v48 = v218;
  v49 = v219;
  if (v219)
  {
    v50 = (unint64_t *)&v219->__shared_owners_;
    do
      v51 = __ldxr(v50);
    while (__stxr(v51 + 1, v50));
    v52 = *(_WORD *)v222;
    do
      v53 = __ldxr(v50);
    while (__stxr(v53 + 1, v50));
    v235 = v220;
    v236 = v221;
    do
      v54 = __ldxr(v50);
    while (__stxr(v54 + 1, v50));
    v233 = v48;
    v234 = v49;
    v237 = v52;
    do
      v55 = __ldaxr(v50);
    while (__stlxr(v55 - 1, v50));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
    do
      v56 = __ldaxr(v50);
    while (__stlxr(v56 - 1, v50));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  else
  {
    v233 = v218;
    v234 = 0;
    v235 = v220;
    v236 = v221;
    v237 = *(_WORD *)v222;
  }
  v57 = v219;
  if (v219)
  {
    v58 = (unint64_t *)&v219->__shared_owners_;
    do
      v59 = __ldaxr(v58);
    while (__stlxr(v59 - 1, v58));
    if (!v59)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
  v60 = v243;
  *(_QWORD *)&v243 = 0;
  if (v60)
    (*(void (**)(uint64_t))(*(_QWORD *)v60 + 8))(v60);
  v61 = v226;
  if (v226)
  {
    v62 = (unint64_t *)&v226->__shared_owners_;
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  LOWORD(v217) = 0;
  sub_21097EB9C((uint64_t)&v224, v12, v14, (uint64_t)&v217);
  v64 = *(_QWORD *)(a2 + 8);
  if ((unint64_t)v226 < v64
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/PatchCropping/include/LearnedFeatures/PatchCropping/ImagePatches.h", 103, (uint64_t)"_num_used_patches <= num_allocated_patches", 42, (uint64_t)"Number of used patches must be equal or less than the number of pathces.", 72, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v225 = v64;
  sub_210975EB4((uint64_t)&v217, (uint64_t *)&v224);
  v65 = v221;
  if (v221)
  {
    v66 = (unint64_t *)&v221->__shared_owners_;
    do
      v67 = __ldxr(v66);
    while (__stxr(v67 + 1, v66));
    do
      v68 = __ldxr(v66);
    while (__stxr(v68 + 1, v66));
    v69 = *(_DWORD *)&v222[12];
    do
      v70 = __ldxr(v66);
    while (__stxr(v70 + 1, v66));
    do
      v71 = __ldaxr(v66);
    while (__stlxr(v71 - 1, v66));
    if (!v71)
    {
      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
      std::__shared_weak_count::__release_weak(v65);
    }
    do
      v72 = __ldaxr(v66);
    while (__stlxr(v72 - 1, v66));
    if (!v72)
    {
      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
      std::__shared_weak_count::__release_weak(v65);
    }
    do
      v73 = __ldaxr(v66);
    while (__stlxr(v73 - 1, v66));
    if (v73)
    {
      if (v69 >= v13)
        goto LABEL_112;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
      std::__shared_weak_count::__release_weak(v65);
      if (v69 >= v13)
        goto LABEL_112;
    }
  }
  else if (*(_DWORD *)&v222[12] >= v13)
  {
    goto LABEL_112;
  }
  if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/PatchCropping/include/LearnedFeatures/PatchCropping/ImagePatches.h", 215, (uint64_t)"this->Patches().Height() >= batch_start + num_patches", 53, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
LABEL_112:
  v203 = &off_24CA7AAC0;
  v74 = *((_QWORD *)&v220 + 1);
  v75 = v221;
  if (v221)
  {
    v76 = (unint64_t *)&v221->__shared_owners_;
    do
      v77 = __ldxr(v76);
    while (__stxr(v77 + 1, v76));
    v78 = v223;
    do
      v79 = __ldxr(v76);
    while (__stxr(v79 + 1, v76));
    v206 = *(_OWORD *)v222;
    v207 = *(std::__shared_weak_count **)&v222[16];
    do
      v80 = __ldxr(v76);
    while (__stxr(v80 + 1, v76));
    v204 = v74;
    v205 = v75;
    LOWORD(v208) = v78;
    do
      v81 = __ldaxr(v76);
    while (__stlxr(v81 - 1, v76));
    if (!v81)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
    do
      v82 = __ldaxr(v76);
    while (__stlxr(v82 - 1, v76));
    if (!v82)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
    v83 = v204;
    if (!v204)
      goto LABEL_143;
  }
  else
  {
    v204 = *((_QWORD *)&v220 + 1);
    v205 = 0;
    v206 = *(_OWORD *)v222;
    v207 = *(std::__shared_weak_count **)&v222[16];
    LOWORD(v208) = v223;
    v83 = *((_QWORD *)&v220 + 1);
    if (!*((_QWORD *)&v220 + 1))
      goto LABEL_143;
  }
  v84 = v205;
  if (v205)
  {
    v85 = (unint64_t *)&v205->__shared_owners_;
    do
      v86 = __ldxr(v85);
    while (__stxr(v86 + 1, v85));
    do
      v87 = __ldaxr(v85);
    while (__stlxr(v87 - 1, v85));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
      std::__shared_weak_count::__release_weak(v84);
    }
    v83 = v204;
    v88 = v205;
    if (v205)
    {
      v89 = (unint64_t *)&v205->__shared_owners_;
      do
        v90 = __ldxr(v89);
      while (__stxr(v90 + 1, v89));
      do
        v91 = __ldaxr(v89);
      while (__stlxr(v91 - 1, v89));
      if (!v91)
      {
        ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
        std::__shared_weak_count::__release_weak(v88);
      }
    }
  }
  if (BYTE1(v208))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v83 + 96))(&v248, v83, 1);
    goto LABEL_144;
  }
LABEL_143:
  v248 = 0;
LABEL_144:
  if (DWORD2(v206))
    v92 = (_DWORD)v13 == 0;
  else
    v92 = 1;
  v93 = v217;
  v242[0] = DWORD2(v206);
  v242[1] = v13;
  *(_QWORD *)&v243 = &off_24CA7AAC0;
  v94 = (unint64_t)HIDWORD(v207) << 32;
  if (v92)
    v94 = 0;
  v249 = v94 | (DWORD2(v206) != 0);
  *(_QWORD *)&v250 = v206;
  sub_2108FE228(&v250, v242, (uint64_t *)&v249, (uint64_t)&v243 + 8);
  v211[0] = v93;
  v211[1] = v13;
  v211[2] = v13;
  v211[3] = &off_24CA7AAC0;
  v95 = *((_QWORD *)&v243 + 1);
  v96 = v244;
  if (v244)
  {
    v97 = (unint64_t *)&v244->__shared_owners_;
    do
      v98 = __ldxr(v97);
    while (__stxr(v98 + 1, v97));
    v99 = v247;
    do
      v100 = __ldxr(v97);
    while (__stxr(v100 + 1, v97));
    v214 = v245;
    v215 = v246;
    do
      v101 = __ldxr(v97);
    while (__stxr(v101 + 1, v97));
    v212 = v95;
    v213 = v96;
    v216 = v99;
    do
      v102 = __ldaxr(v97);
    while (__stlxr(v102 - 1, v97));
    if (!v102)
    {
      ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
      std::__shared_weak_count::__release_weak(v96);
    }
    do
      v103 = __ldaxr(v97);
    while (__stlxr(v103 - 1, v97));
    if (!v103)
    {
      ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
      std::__shared_weak_count::__release_weak(v96);
    }
  }
  else
  {
    v212 = *((_QWORD *)&v243 + 1);
    v213 = 0;
    v214 = v245;
    v215 = v246;
    v216 = v247;
  }
  v104 = v244;
  if (v244)
  {
    v105 = (unint64_t *)&v244->__shared_owners_;
    do
      v106 = __ldaxr(v105);
    while (__stlxr(v106 - 1, v105));
    if (!v106)
    {
      ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
      std::__shared_weak_count::__release_weak(v104);
    }
  }
  v107 = v248;
  v248 = 0;
  if (v107)
    (*(void (**)(uint64_t))(*(_QWORD *)v107 + 8))(v107);
  v108 = v205;
  if (v205)
  {
    v109 = (unint64_t *)&v205->__shared_owners_;
    do
      v110 = __ldaxr(v109);
    while (__stlxr(v110 - 1, v109));
    if (!v110)
    {
      ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
      std::__shared_weak_count::__release_weak(v108);
      v203 = &off_24CA79B48;
      v111 = v233;
      v112 = v234;
      if (v234)
        goto LABEL_176;
LABEL_206:
      v204 = v111;
      v205 = 0;
      v206 = v235;
      v207 = v236;
      LOWORD(v208) = v237;
      *(_QWORD *)&v243 = &off_24CA7AAC0;
      v120 = v212;
      v121 = v213;
      if (v213)
        goto LABEL_190;
LABEL_207:
      *((_QWORD *)&v243 + 1) = v120;
      v244 = 0;
      v245 = v214;
      v246 = v215;
      v247 = v216;
      v129 = v204;
      if (!v204)
        goto LABEL_223;
      goto LABEL_208;
    }
  }
  v203 = &off_24CA79B48;
  v111 = v233;
  v112 = v234;
  if (!v234)
    goto LABEL_206;
LABEL_176:
  v113 = (unint64_t *)&v112->__shared_owners_;
  do
    v114 = __ldxr(v113);
  while (__stxr(v114 + 1, v113));
  v115 = v237;
  do
    v116 = __ldxr(v113);
  while (__stxr(v116 + 1, v113));
  v206 = v235;
  v207 = v236;
  do
    v117 = __ldxr(v113);
  while (__stxr(v117 + 1, v113));
  v204 = v111;
  v205 = v112;
  LOWORD(v208) = v115;
  do
    v118 = __ldaxr(v113);
  while (__stlxr(v118 - 1, v113));
  if (!v118)
  {
    ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
    std::__shared_weak_count::__release_weak(v112);
  }
  do
    v119 = __ldaxr(v113);
  while (__stlxr(v119 - 1, v113));
  if (!v119)
  {
    ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
    std::__shared_weak_count::__release_weak(v112);
  }
  *(_QWORD *)&v243 = &off_24CA7AAC0;
  v120 = v212;
  v121 = v213;
  if (!v213)
    goto LABEL_207;
LABEL_190:
  v122 = (unint64_t *)&v121->__shared_owners_;
  do
    v123 = __ldxr(v122);
  while (__stxr(v123 + 1, v122));
  v124 = v216;
  do
    v125 = __ldxr(v122);
  while (__stxr(v125 + 1, v122));
  v245 = v214;
  v246 = v215;
  do
    v126 = __ldxr(v122);
  while (__stxr(v126 + 1, v122));
  *((_QWORD *)&v243 + 1) = v120;
  v244 = v121;
  v247 = v124;
  do
    v127 = __ldaxr(v122);
  while (__stlxr(v127 - 1, v122));
  if (!v127)
  {
    ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
    std::__shared_weak_count::__release_weak(v121);
  }
  do
    v128 = __ldaxr(v122);
  while (__stlxr(v128 - 1, v122));
  if (!v128)
  {
    ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
    std::__shared_weak_count::__release_weak(v121);
  }
  v129 = v204;
  if (!v204)
  {
LABEL_223:
    *(_QWORD *)&v250 = 0;
    v138 = *((_QWORD *)&v243 + 1);
    if (!*((_QWORD *)&v243 + 1))
      goto LABEL_238;
    goto LABEL_224;
  }
LABEL_208:
  v130 = v205;
  if (v205)
  {
    v131 = (unint64_t *)&v205->__shared_owners_;
    do
      v132 = __ldxr(v131);
    while (__stxr(v132 + 1, v131));
    do
      v133 = __ldaxr(v131);
    while (__stlxr(v133 - 1, v131));
    if (!v133)
    {
      ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
      std::__shared_weak_count::__release_weak(v130);
    }
    v129 = v204;
    v134 = v205;
    if (v205)
    {
      v135 = (unint64_t *)&v205->__shared_owners_;
      do
        v136 = __ldxr(v135);
      while (__stxr(v136 + 1, v135));
      do
        v137 = __ldaxr(v135);
      while (__stlxr(v137 - 1, v135));
      if (!v137)
      {
        ((void (*)(std::__shared_weak_count *))v134->__on_zero_shared)(v134);
        std::__shared_weak_count::__release_weak(v134);
      }
    }
  }
  if (!BYTE1(v208))
    goto LABEL_223;
  (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v129 + 96))(&v250, v129, 0);
  v138 = *((_QWORD *)&v243 + 1);
  if (!*((_QWORD *)&v243 + 1))
    goto LABEL_238;
LABEL_224:
  v139 = v244;
  if (v244)
  {
    v140 = (unint64_t *)&v244->__shared_owners_;
    do
      v141 = __ldxr(v140);
    while (__stxr(v141 + 1, v140));
    do
      v142 = __ldaxr(v140);
    while (__stlxr(v142 - 1, v140));
    if (!v142)
    {
      ((void (*)(std::__shared_weak_count *))v139->__on_zero_shared)(v139);
      std::__shared_weak_count::__release_weak(v139);
    }
    v138 = *((_QWORD *)&v243 + 1);
    v143 = v244;
    if (v244)
    {
      v144 = (unint64_t *)&v244->__shared_owners_;
      do
        v145 = __ldxr(v144);
      while (__stxr(v145 + 1, v144));
      do
        v146 = __ldaxr(v144);
      while (__stlxr(v146 - 1, v144));
      if (!v146)
      {
        ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
        std::__shared_weak_count::__release_weak(v143);
      }
    }
  }
  if (HIBYTE(v247))
  {
    (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v138 + 96))(&v249, v138, 1);
    goto LABEL_239;
  }
LABEL_238:
  v249 = 0;
LABEL_239:
  sub_2109760BC((uint64_t)&v203, (uint64_t)&v243);
  v147 = v249;
  v249 = 0;
  if (v147)
    (*(void (**)(uint64_t))(*(_QWORD *)v147 + 8))(v147);
  v148 = v250;
  *(_QWORD *)&v250 = 0;
  if (v148)
    (*(void (**)(uint64_t))(*(_QWORD *)v148 + 8))(v148);
  v149 = v244;
  if (v244)
  {
    v150 = (unint64_t *)&v244->__shared_owners_;
    do
      v151 = __ldaxr(v150);
    while (__stlxr(v151 - 1, v150));
    if (!v151)
    {
      ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
      std::__shared_weak_count::__release_weak(v149);
    }
  }
  v152 = v205;
  if (v205)
  {
    v153 = (unint64_t *)&v205->__shared_owners_;
    do
      v154 = __ldaxr(v153);
    while (__stlxr(v154 - 1, v153));
    if (!v154)
    {
      ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
      std::__shared_weak_count::__release_weak(v152);
    }
  }
  v155 = a3;
  v156 = a4;
  v158 = (uint64_t)v217;
  v157 = v218;
  v159 = v219;
  v161 = *((_QWORD *)&v220 + 1);
  v160 = v221;
  if (v221)
  {
    v162 = (unint64_t *)&v221->__shared_owners_;
    do
      v163 = __ldxr(v162);
    while (__stxr(v163 + 1, v162));
    v202 = a6;
    v201 = v223;
    do
      v164 = __ldxr(v162);
    while (__stxr(v164 + 1, v162));
    v165 = *(_QWORD *)v222;
    v250 = *(_OWORD *)&v222[8];
    do
      v166 = __ldxr(v162);
    while (__stxr(v166 + 1, v162));
    do
      v167 = __ldaxr(v162);
    while (__stlxr(v167 - 1, v162));
    if (!v167)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    do
      v168 = __ldaxr(v162);
    while (__stlxr(v168 - 1, v162));
    if (!v168)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    do
      v169 = __ldxr(v162);
    while (__stxr(v169 + 1, v162));
    do
      v170 = __ldxr(v162);
    while (__stxr(v170 + 1, v162));
    v243 = v250;
    do
      v171 = __ldxr(v162);
    while (__stxr(v171 + 1, v162));
    do
      v172 = __ldaxr(v162);
    while (__stlxr(v172 - 1, v162));
    if (!v172)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    do
      v173 = __ldaxr(v162);
    while (__stlxr(v173 - 1, v162));
    if (!v173)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    v203 = (uint64_t (**)())v158;
    v204 = v157;
    v205 = v159;
    *(_QWORD *)&v206 = &off_24CA79B48;
    do
      v174 = __ldxr(v162);
    while (__stxr(v174 + 1, v162));
    do
      v175 = __ldxr(v162);
    while (__stxr(v175 + 1, v162));
    v208 = v165;
    v209 = v243;
    do
      v176 = __ldxr(v162);
    while (__stxr(v176 + 1, v162));
    *((_QWORD *)&v206 + 1) = v161;
    v207 = v160;
    v210 = v201;
    a6 = v202;
    do
      v177 = __ldaxr(v162);
    while (__stlxr(v177 - 1, v162));
    if (!v177)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    do
      v178 = __ldaxr(v162);
    while (__stlxr(v178 - 1, v162));
    if (!v178)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    do
      v179 = __ldaxr(v162);
    while (__stlxr(v179 - 1, v162));
    if (!v179)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
    do
      v180 = __ldaxr(v162);
    while (__stlxr(v180 - 1, v162));
    if (!v180)
    {
      ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
      std::__shared_weak_count::__release_weak(v160);
    }
  }
  else
  {
    v203 = v217;
    v204 = v218;
    v205 = v219;
    *(_QWORD *)&v206 = &off_24CA79B48;
    *((_QWORD *)&v206 + 1) = *((_QWORD *)&v220 + 1);
    v207 = 0;
    v208 = *(_QWORD *)v222;
    v209 = *(_OWORD *)&v222[8];
    v210 = v223;
  }
  sub_21097456C(a6, v238, (uint64_t)&v203, v155, v156);
  v181 = v207;
  if (v207)
  {
    v182 = (unint64_t *)&v207->__shared_owners_;
    do
      v183 = __ldaxr(v182);
    while (__stlxr(v183 - 1, v182));
    if (!v183)
    {
      ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
      std::__shared_weak_count::__release_weak(v181);
    }
  }
  *(_QWORD *)&v243 = 0;
  *(_QWORD *)&v250 = &v243;
  v184 = *(unsigned int *)(a6 + 24);
  if ((_DWORD)v184 == -1)
    sub_2108B9060();
  v203 = (uint64_t (**)())&v250;
  ((void (*)(uint64_t (***)(), uint64_t))off_24CA822B8[v184])(&v203, a6);
  v240 = v243;
  v185 = v213;
  if (v213)
  {
    v186 = (unint64_t *)&v213->__shared_owners_;
    do
      v187 = __ldaxr(v186);
    while (__stlxr(v187 - 1, v186));
    if (!v187)
    {
      ((void (*)(std::__shared_weak_count *))v185->__on_zero_shared)(v185);
      std::__shared_weak_count::__release_weak(v185);
    }
  }
  v188 = v221;
  if (!v221)
    goto LABEL_310;
  v189 = (unint64_t *)&v221->__shared_owners_;
  do
    v190 = __ldaxr(v189);
  while (__stlxr(v190 - 1, v189));
  if (v190)
  {
LABEL_310:
    v191 = v230;
    v230 = 0;
    if (!v191)
      goto LABEL_312;
    goto LABEL_311;
  }
  ((void (*)(std::__shared_weak_count *))v188->__on_zero_shared)(v188);
  std::__shared_weak_count::__release_weak(v188);
  v200 = v230;
  v230 = 0;
  if (v200)
LABEL_311:
    v231();
LABEL_312:
  v192 = v228;
  if (v228)
  {
    v193 = (unint64_t *)&v228->__shared_owners_;
    do
      v194 = __ldaxr(v193);
    while (__stlxr(v194 - 1, v193));
    if (!v194)
    {
      ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
      std::__shared_weak_count::__release_weak(v192);
    }
  }
  v195 = v234;
  if (v234)
  {
    v196 = (unint64_t *)&v234->__shared_owners_;
    do
      v197 = __ldaxr(v196);
    while (__stlxr(v197 - 1, v196));
    if (!v197)
    {
      ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
      std::__shared_weak_count::__release_weak(v195);
    }
  }
LABEL_322:
  if (!v252)
    sub_2108B30F0();
  (*(void (**)(_QWORD *))(*v252 + 48))(v252);
  result = v252;
  if (v252 == v251)
  {
    v199 = 4;
    result = v251;
  }
  else
  {
    if (!v252)
      return result;
    v199 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v199))();
}

void sub_210974180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  uint64_t v53;
  uint64_t v55;

  v55 = *(_QWORD *)(v53 - 160);
  *(_QWORD *)(v53 - 160) = 0;
  if (v55)
    (*(void (**)(uint64_t))(*(_QWORD *)v55 + 8))(v55);
  sub_2108C9DAC(v53 - 240);
  sub_2108B8838((uint64_t)&a11);
  sub_210974754((uint64_t)&a21);
  sub_210974754((uint64_t)&a31);
  sub_2109747BC((uint64_t)&a41);
  sub_210974754((uint64_t)&a53);
  sub_2108A6938((_QWORD *)(v53 - 136));
  _Unwind_Resume(a1);
}

void sub_2109742C8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_2108CE6E8(v1);
  sub_2108A6938((_QWORD *)(v2 - 136));
  _Unwind_Resume(a1);
}

void sub_2109742E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108A6938((_QWORD *)(v1 - 136));
  _Unwind_Resume(a1);
}

void sub_210974300(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108A6938((_QWORD *)(v1 - 136));
  _Unwind_Resume(a1);
}

void sub_210974314(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_2108ABF6C(exception_object);
}

uint64_t sub_21097432C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  _BOOL4 v20;
  BOOL v21;
  uint64_t v22;
  int v23;
  uint64_t result;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 32);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a2 + 40);
    if (!v5)
      goto LABEL_42;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a2 + 32);
    v9 = *(std::__shared_weak_count **)(a2 + 40);
    if (!v9)
      goto LABEL_42;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a2 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v25, v4, 0);
        if (!*(_BYTE *)(a2 + 72))
          goto LABEL_26;
        goto LABEL_18;
      }
    }
    else
    {
LABEL_42:
      if (*(_BYTE *)(a2 + 73))
        goto LABEL_14;
    }
  }
  v25 = 0;
  if (!*(_BYTE *)(a2 + 72))
    goto LABEL_26;
LABEL_18:
  if (*(_QWORD *)(a2 + 48))
  {
    v13 = *(_QWORD *)(a2 + 32);
    v14 = *(std::__shared_weak_count **)(a2 + 40);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
      do
        v17 = __ldaxr(v15);
      while (__stlxr(v17 - 1, v15));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
LABEL_26:
  v18 = *(_DWORD *)(a2 + 68);
  v19 = *(unsigned int *)(a2 + 64) | ((unint64_t)*(_QWORD *)a2 << 32);
  v20 = *(_QWORD *)a2 == 0;
  if (!*(_DWORD *)(a2 + 16))
    v20 = 1;
  v21 = !v20;
  if (v20)
    v22 = 0;
  else
    v22 = *(_QWORD *)a2 | (*(_QWORD *)a2 << 32);
  if (v21)
    v23 = *(_DWORD *)(a2 + 16);
  else
    v23 = 0;
  *(_QWORD *)a1 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 8) = v22;
  *(_DWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 20) = v19;
  *(_DWORD *)(a1 + 28) = v18;
  if (v23 * v18 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_210974544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_21097456C(uint64_t a1, _QWORD **a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v9;
  int64x2_t *v10;
  int64x2_t *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  int64x2_t v17;
  int64x2_t *v18;
  uint64_t v19;

  if (a4)
  {
    v9 = *((unsigned int *)a2 + 4);
    if (a4 == v9)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, unint64_t *, _QWORD))(*(_QWORD *)**a2 + 64))(**a2, a3, a4, a5, *a2[1]);
    }
    else
    {
      if ((_DWORD)v9)
      {
        v10 = (int64x2_t *)operator new(8 * v9);
        v11 = v10;
        v12 = (unint64_t *)v10 + v9;
        v13 = *a5;
        v14 = (v9 - 1) & 0x1FFFFFFFFFFFFFFFLL;
        v15 = (unint64_t *)v10;
        if (v14 < 3)
          goto LABEL_20;
        v16 = v14 + 1;
        v15 = (unint64_t *)v10 + (v16 & 0x3FFFFFFFFFFFFFFCLL);
        v17 = vdupq_n_s64(v13);
        v18 = v10 + 1;
        v19 = v16 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v18[-1] = v17;
          *v18 = v17;
          v18 += 2;
          v19 -= 4;
        }
        while (v19);
        if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_20:
          do
            *v15++ = v13;
          while (v15 != v12);
        }
      }
      else
      {
        if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
        {
          abort();
        }
        v11 = 0;
        v12 = 0;
      }
      memmove(v11, a5, 8 * a4);
      (*(void (**)(_QWORD, uint64_t, int64_t, int64x2_t *, _QWORD))(*(_QWORD *)**a2 + 64))(**a2, a3, ((char *)v12 - (char *)v11) >> 3, v11, *a2[1]);
      if (v11)
        operator delete(v11);
    }
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)**a2 + 56))(**a2, a3, *a2[1]);
  }
}

void sub_21097473C(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_210974754(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 40);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_2109747BC(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v2 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 88))();
  v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v3)
    return a1;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return a1;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_21097483C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  int v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  __int16 v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  int v47;
  __int16 v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  char *v56;
  char *v57;
  void *v58;
  char *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  char *v63;
  char *v64;
  void *v65;
  char *v66;
  uint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  uint64_t v77;
  std::__shared_weak_count *v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  __int16 v83;
  __int16 v84;
  void *__p;
  char *v86;
  uint64_t (**v87)();
  char v88;
  std::__shared_weak_count *v89;
  void *v90;
  char *v91;
  char v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  int v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  __int16 v103;
  char v104;
  char v105[16];
  int v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  int v110;
  uint64_t (**v111)();
  uint64_t v112;
  std::__shared_weak_count *v113;
  __int128 v114;
  uint64_t v115;
  int v116;
  __int16 v117;
  char v118;
  int v119;
  __int128 v120;
  std::__shared_weak_count *v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  int v125;
  __int16 v126;
  int v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  int v132;
  _QWORD v133[2];
  std::__shared_weak_count *v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  int v138;
  __int16 v139;
  char v140;
  int v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  int v145;
  uint64_t (**v146)();
  uint64_t v147;
  std::__shared_weak_count *v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  int v152;
  __int16 v153;
  char v154;
  int v155;
  uint64_t v156;

  v156 = *MEMORY[0x24BDAC8D0];
  sub_21097432C((uint64_t)v105, a2);
  v11 = v106;
  if (a3 != v106
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorExtractionUtil.cpp", 333, (uint64_t)"keypoints.size() == n", 21, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  v12 = *(_QWORD *)(a2 + 8);
  LODWORD(v87) = 65;
  LOBYTE(v133[0]) = 0;
  v140 = 0;
  v107 = xmmword_210A187F0;
  LODWORD(v108) = v11;
  LOBYTE(v120) = 0;
  BYTE4(v121) = 0;
  sub_21098B528((uint64_t)&v93, a4, &v107, &v120, &v87, (uint64_t)v133);
  if (v140)
  {
    v13 = v134;
    if (v134)
    {
      p_shared_owners = (unint64_t *)&v134->__shared_owners_;
      do
        v15 = __ldaxr(p_shared_owners);
      while (__stlxr(v15 - 1, p_shared_owners));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  kdebug_trace();
  v16 = *(_QWORD *)(a2 + 32);
  v17 = *(std::__shared_weak_count **)(a2 + 40);
  if (v17)
  {
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
    v20 = *(_WORD *)(a2 + 72);
    do
      v21 = __ldxr(v18);
    while (__stxr(v21 + 1, v18));
    v79 = *(_OWORD *)(a2 + 48);
    v81 = *(_QWORD *)(a2 + 64);
    do
      v22 = __ldxr(v18);
    while (__stxr(v22 + 1, v18));
    v77 = v16;
    v78 = v17;
    v83 = v20;
    do
      v23 = __ldaxr(v18);
    while (__stlxr(v23 - 1, v18));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    do
      v24 = __ldaxr(v18);
    while (__stlxr(v24 - 1, v18));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
    v26 = v77;
    v25 = v78;
    v27 = (unint64_t *)&v78->__shared_owners_;
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
    v29 = HIDWORD(v81);
    v31 = *((_QWORD *)&v79 + 1);
    v30 = v79;
    v32 = v83;
    do
      v33 = __ldxr(v27);
    while (__stxr(v33 + 1, v27));
    do
      v34 = __ldxr(v27);
    while (__stxr(v34 + 1, v27));
    do
      v35 = __ldaxr(v27);
    while (__stlxr(v35 - 1, v27));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
    do
      v36 = __ldaxr(v27);
    while (__stlxr(v36 - 1, v27));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
  }
  else
  {
    v78 = 0;
    v80 = *(_OWORD *)(a2 + 48);
    v82 = *(_QWORD *)(a2 + 64);
    v84 = *(_WORD *)(a2 + 72);
    v26 = *(_QWORD *)(a2 + 32);
    v25 = 0;
    v29 = HIDWORD(v82);
    v31 = *((_QWORD *)&v80 + 1);
    v30 = v80;
    v32 = v84;
  }
  *(_QWORD *)&v120 = &off_24CA79890;
  *((_QWORD *)&v120 + 1) = v26;
  v121 = v25;
  v122 = v31;
  v123 = v29;
  v124 = v30;
  v125 = 1;
  v126 = v32;
  v127 = 2;
  v141 = -1;
  v133[0] = &off_24CA79890;
  if (v25)
  {
    v37 = (unint64_t *)&v25->__shared_owners_;
    do
      v38 = __ldxr(v37);
    while (__stxr(v38 + 1, v37));
    do
      v39 = __ldxr(v37);
    while (__stxr(v39 + 1, v37));
  }
  v133[1] = v26;
  v134 = v25;
  v135 = v122;
  v136 = v123;
  v137 = v30;
  v138 = 1;
  v139 = v32;
  if (v25)
  {
    v40 = (unint64_t *)&v25->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v141 = 2;
  v129 = v93;
  v130 = v94;
  v131 = v95;
  v132 = v96;
  if (v104)
  {
    v43 = v97;
    v42 = v98;
    if (v98)
    {
      v44 = (unint64_t *)&v98->__shared_owners_;
      do
        v45 = __ldxr(v44);
      while (__stxr(v45 + 1, v44));
      v46 = v101;
      v47 = v102;
      v48 = v103;
      do
        v49 = __ldxr(v44);
      while (__stxr(v49 + 1, v44));
      *(_QWORD *)&v128 = v99;
      DWORD2(v128) = v100;
      do
        v50 = __ldaxr(v44);
      while (__stlxr(v50 - 1, v44));
      if (!v50)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
    else
    {
      v46 = v101;
      v47 = v102;
      v48 = v103;
      *(_QWORD *)&v128 = v99;
      DWORD2(v128) = v100;
    }
    v107 = v129;
    v108 = v130;
    v109 = v131;
    v110 = v132;
    v111 = &off_24CA79890;
    v112 = v43;
    v114 = v128;
    v113 = v42;
    v115 = v46;
    v116 = v47;
    v117 = v48;
    v118 = 1;
    v119 = 1;
    v155 = -1;
    v142 = v129;
    v143 = v130;
    v144 = v131;
    v145 = v132;
    v154 = 0;
    v146 = &off_24CA79890;
    if (v42)
    {
      v51 = (unint64_t *)&v42->__shared_owners_;
      do
        v52 = __ldxr(v51);
      while (__stxr(v52 + 1, v51));
      v46 = v115;
      v47 = v116;
      v48 = v117;
      do
        v53 = __ldxr(v51);
      while (__stxr(v53 + 1, v51));
    }
    v147 = v43;
    v148 = v42;
    v149 = v114;
    v150 = DWORD2(v114);
    v151 = v46;
    v152 = v47;
    v153 = v48;
    if (v42)
    {
      v54 = (unint64_t *)&v42->__shared_owners_;
      do
        v55 = __ldaxr(v54);
      while (__stlxr(v55 - 1, v54));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
      }
    }
    v154 = 1;
  }
  else
  {
    v107 = v93;
    v108 = v94;
    v109 = v95;
    v110 = v96;
    LOBYTE(v111) = 0;
    v118 = 0;
    v119 = 1;
    v155 = -1;
    v142 = v93;
    v143 = v94;
    v144 = v95;
    v145 = v96;
    LOBYTE(v146) = 0;
    v154 = 0;
  }
  v155 = 1;
  sub_2109768D4(&__p, (uint64_t)v133, 2uLL);
  if (v155 != -1)
    ((void (*)(__int128 *, __int128 *))off_24CA81678[v155])(&v129, &v142);
  v155 = -1;
  if (v141 != -1)
    ((void (*)(__int128 *, _QWORD *))off_24CA81678[v141])(&v129, v133);
  v141 = -1;
  if (v119 != -1)
    ((void (*)(__int128 *, __int128 *))off_24CA81678[v119])(&v129, &v107);
  if (v127 != -1)
    ((void (*)(__int128 *, __int128 *))off_24CA81678[v127])(&v107, &v120);
  sub_2109A978C(*(_QWORD *)(a1 + 16), &__p, a5, a6, (uint64_t)&v87);
  v56 = (char *)__p;
  if (__p)
  {
    v57 = v86;
    v58 = __p;
    if (v86 != __p)
    {
      do
      {
        v59 = v57 - 128;
        v60 = *((unsigned int *)v57 - 2);
        if ((_DWORD)v60 != -1)
          ((void (*)(_QWORD *, char *))off_24CA81678[v60])(v133, v57 - 128);
        *((_DWORD *)v57 - 2) = -1;
        v57 -= 128;
      }
      while (v59 != v56);
      v58 = __p;
    }
    v86 = v56;
    operator delete(v58);
  }
  if (v78)
  {
    v61 = (unint64_t *)&v78->__shared_owners_;
    do
      v62 = __ldaxr(v61);
    while (__stlxr(v62 - 1, v61));
    if (!v62)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
  }
  kdebug_trace();
  if (v88)
  {
    *(_QWORD *)(a7 + 32) = 0;
    *(_DWORD *)(a7 + 40) = 0;
    *(_QWORD *)(a7 + 8) = 0;
    *(_QWORD *)(a7 + 16) = 0;
    *(_QWORD *)a7 = 0;
    *(_DWORD *)(a7 + 24) = 0;
  }
  else
  {
    sub_21096D844((__int128 *)v90, v12, a7);
  }
  if (v92)
  {
    v63 = (char *)v90;
    if (v90)
    {
      v64 = v91;
      v65 = v90;
      if (v91 != v90)
      {
        do
        {
          v66 = v64 - 128;
          v67 = *((unsigned int *)v64 - 2);
          if ((_DWORD)v67 != -1)
            ((void (*)(_QWORD *, char *))off_24CA816C0[v67])(v133, v64 - 128);
          *((_DWORD *)v64 - 2) = -1;
          v64 -= 128;
        }
        while (v66 != v63);
        v65 = v90;
      }
      v91 = v63;
      operator delete(v65);
    }
  }
  v87 = &off_24CA79A00;
  v68 = v89;
  if (v89)
  {
    v69 = (unint64_t *)&v89->__shared_owners_;
    do
      v70 = __ldaxr(v69);
    while (__stlxr(v70 - 1, v69));
    if (!v70)
    {
      ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
      std::__shared_weak_count::__release_weak(v68);
    }
  }
  if (v104)
  {
    v71 = v98;
    if (v98)
    {
      v72 = (unint64_t *)&v98->__shared_owners_;
      do
        v73 = __ldaxr(v72);
      while (__stlxr(v73 - 1, v72));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
  }
}

void sub_2109750AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_21095F77C((uint64_t)&a22);
  sub_2108B0424((uint64_t)&a30);
  _Unwind_Resume(a1);
}

void sub_2109750C8(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_2108ABF6C(a1);
}

void sub_210975170(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;

  v3 = *a3;
  v4 = a3[1];
  v5 = a3[2];
  *(_DWORD *)(a2 + 48) = *((_DWORD *)a3 + 12);
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = v5;
  *(_OWORD *)a2 = v3;
  *(_BYTE *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (*((_BYTE *)a3 + 112))
  {
    *(_QWORD *)(a2 + 56) = &off_24CA79890;
    v7 = *((_QWORD *)a3 + 8);
    v8 = (std::__shared_weak_count *)*((_QWORD *)a3 + 9);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      v11 = *((_QWORD *)a3 + 12);
      v12 = *((_DWORD *)a3 + 26);
      v13 = *((_WORD *)a3 + 54);
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
    }
    else
    {
      v11 = *((_QWORD *)a3 + 12);
      v12 = *((_DWORD *)a3 + 26);
      v13 = *((_WORD *)a3 + 54);
    }
    *(_QWORD *)(a2 + 64) = v7;
    *(_QWORD *)(a2 + 72) = v8;
    v15 = *((_QWORD *)a3 + 10);
    *(_DWORD *)(a2 + 88) = *((_DWORD *)a3 + 22);
    *(_QWORD *)(a2 + 80) = v15;
    *(_QWORD *)(a2 + 96) = v11;
    *(_DWORD *)(a2 + 104) = v12;
    *(_WORD *)(a2 + 108) = v13;
    if (v8)
    {
      v16 = (unint64_t *)&v8->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    *(_BYTE *)(a2 + 112) = 1;
  }
}

void sub_210975264(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  int v12;
  __int16 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;

  v3 = *a3;
  v4 = a3[1];
  v5 = a3[2];
  *(_DWORD *)(a2 + 48) = *((_DWORD *)a3 + 12);
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = v5;
  *(_OWORD *)a2 = v3;
  *(_BYTE *)(a2 + 56) = 0;
  *(_BYTE *)(a2 + 112) = 0;
  if (*((_BYTE *)a3 + 112))
  {
    *(_QWORD *)(a2 + 56) = &off_24CA79890;
    v7 = *((_QWORD *)a3 + 8);
    v8 = (std::__shared_weak_count *)*((_QWORD *)a3 + 9);
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      v11 = *((_QWORD *)a3 + 12);
      v12 = *((_DWORD *)a3 + 26);
      v13 = *((_WORD *)a3 + 54);
      do
        v14 = __ldxr(p_shared_owners);
      while (__stxr(v14 + 1, p_shared_owners));
    }
    else
    {
      v11 = *((_QWORD *)a3 + 12);
      v12 = *((_DWORD *)a3 + 26);
      v13 = *((_WORD *)a3 + 54);
    }
    *(_QWORD *)(a2 + 64) = v7;
    *(_QWORD *)(a2 + 72) = v8;
    v15 = *((_QWORD *)a3 + 10);
    *(_DWORD *)(a2 + 88) = *((_DWORD *)a3 + 22);
    *(_QWORD *)(a2 + 80) = v15;
    *(_QWORD *)(a2 + 96) = v11;
    *(_DWORD *)(a2 + 104) = v12;
    *(_WORD *)(a2 + 108) = v13;
    if (v8)
    {
      v16 = (unint64_t *)&v8->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    *(_BYTE *)(a2 + 112) = 1;
  }
}

void sub_210975358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  int v8;
  __int16 v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  *(_QWORD *)a2 = &off_24CA79890;
  v3 = *(_QWORD *)(a3 + 8);
  v4 = *(std::__shared_weak_count **)(a3 + 16);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v7 = *(_QWORD *)(a3 + 40);
    v8 = *(_DWORD *)(a3 + 48);
    v9 = *(_WORD *)(a3 + 52);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 40);
    v8 = *(_DWORD *)(a3 + 48);
    v9 = *(_WORD *)(a3 + 52);
  }
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  v11 = *(_QWORD *)(a3 + 24);
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(a3 + 32);
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 40) = v7;
  *(_DWORD *)(a2 + 48) = v8;
  *(_WORD *)(a2 + 52) = v9;
  if (v4)
  {
    v12 = (unint64_t *)&v4->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

float sub_210975420(_DWORD *a1, float *a2, _BYTE *a3)
{
  unsigned int v3;
  float *v4;
  _BYTE *v5;
  unsigned int v6;
  _BYTE *v7;
  float *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _BYTE *v12;
  float *v13;
  unsigned int v14;
  unsigned int v15;
  float result;

  if (a1[8])
  {
    v3 = 0;
    do
    {
      v4 = a2;
      v5 = a3;
      if (a1[5])
      {
        v6 = 0;
        v4 = a2;
        v5 = a3;
        do
        {
          v7 = v5;
          v8 = v4;
          if (a1[2])
          {
            v9 = 0;
            v8 = v4;
            v7 = v5;
            do
            {
              *v7 = (int)*v8;
              v8 += a1[3];
              v7 += a1[4];
              ++v9;
            }
            while (v9 < a1[2]);
          }
          *v7 = (int)*v8;
          v4 += a1[6];
          v5 += a1[7];
          ++v6;
        }
        while (v6 < a1[5]);
      }
      if (a1[2])
      {
        v10 = 0;
        do
        {
          *v5 = (int)*v4;
          v4 += a1[3];
          v5 += a1[4];
          ++v10;
        }
        while (v10 < a1[2]);
      }
      *v5 = (int)*v4;
      a2 += a1[9];
      a3 += a1[10];
      ++v3;
    }
    while (v3 < a1[8]);
  }
  if (a1[5])
  {
    v11 = 0;
    do
    {
      v12 = a3;
      v13 = a2;
      if (a1[2])
      {
        v14 = 0;
        v13 = a2;
        v12 = a3;
        do
        {
          *v12 = (int)*v13;
          v13 += a1[3];
          v12 += a1[4];
          ++v14;
        }
        while (v14 < a1[2]);
      }
      *v12 = (int)*v13;
      a2 += a1[6];
      a3 += a1[7];
      ++v11;
    }
    while (v11 < a1[5]);
  }
  if (a1[2])
  {
    v15 = 0;
    do
    {
      *a3 = (int)*a2;
      a2 += a1[3];
      a3 += a1[4];
      ++v15;
    }
    while (v15 < a1[2]);
  }
  result = *a2;
  *a3 = (int)*a2;
  return result;
}

float sub_2109755E4(_DWORD *a1, __int16 *a2, _BYTE *a3)
{
  unsigned int v3;
  __int16 *v10;
  _BYTE *v11;
  unsigned int v12;
  _BYTE *v15;
  __int16 *v16;
  unsigned int v17;
  unsigned int v20;
  unsigned int v23;
  _BYTE *v26;
  __int16 *v27;
  unsigned int v28;
  unsigned int v31;
  float result;

  if (a1[8])
  {
    v3 = 0;
    do
    {
      v10 = a2;
      v11 = a3;
      if (a1[5])
      {
        v12 = 0;
        v10 = a2;
        v11 = a3;
        do
        {
          v15 = v11;
          v16 = v10;
          if (a1[2])
          {
            v17 = 0;
            v16 = v10;
            v15 = v11;
            do
            {
              _H0 = *v16;
              __asm { FCVT            S0, H0 }
              *v15 = (int)_S0;
              v16 += a1[3];
              v15 += a1[4];
              ++v17;
            }
            while (v17 < a1[2]);
          }
          _H0 = *v16;
          __asm { FCVT            S0, H0 }
          *v15 = (int)_S0;
          v10 += a1[6];
          v11 += a1[7];
          ++v12;
        }
        while (v12 < a1[5]);
      }
      if (a1[2])
      {
        v20 = 0;
        do
        {
          _H0 = *v10;
          __asm { FCVT            S0, H0 }
          *v11 = (int)_S0;
          v10 += a1[3];
          v11 += a1[4];
          ++v20;
        }
        while (v20 < a1[2]);
      }
      _H0 = *v10;
      __asm { FCVT            S0, H0 }
      *v11 = (int)_S0;
      a2 += a1[9];
      a3 += a1[10];
      ++v3;
    }
    while (v3 < a1[8]);
  }
  if (a1[5])
  {
    v23 = 0;
    do
    {
      v26 = a3;
      v27 = a2;
      if (a1[2])
      {
        v28 = 0;
        v27 = a2;
        v26 = a3;
        do
        {
          _H0 = *v27;
          __asm { FCVT            S0, H0 }
          *v26 = (int)_S0;
          v27 += a1[3];
          v26 += a1[4];
          ++v28;
        }
        while (v28 < a1[2]);
      }
      _H0 = *v27;
      __asm { FCVT            S0, H0 }
      *v26 = (int)_S0;
      a2 += a1[6];
      a3 += a1[7];
      ++v23;
    }
    while (v23 < a1[5]);
  }
  if (a1[2])
  {
    v31 = 0;
    do
    {
      _H0 = *a2;
      __asm { FCVT            S0, H0 }
      *a3 = (int)_S0;
      a2 += a1[3];
      a3 += a1[4];
      ++v31;
    }
    while (v31 < a1[2]);
  }
  _H0 = *a2;
  __asm { FCVT            S0, H0 }
  *a3 = (int)result;
  return result;
}

float sub_2109757C8(_DWORD *a1, __int16 *a2, _DWORD *a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 *v17;
  _DWORD *v18;
  int v19;
  _DWORD *v20;
  __int16 *v21;
  _DWORD *v22;
  __int16 *v23;
  __int16 *v24;
  _DWORD *v25;
  _DWORD *v26;
  __int16 *v27;
  int v28;
  int v37;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  __int16 *v48;
  int v49;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _DWORD *v59;
  __int16 *v60;
  int v61;
  uint64_t v66;
  uint64_t v67;
  _DWORD *v70;
  __int16 *v71;
  int v72;
  float result;

  v3 = a1[8];
  v4 = a1[5];
  if (v3)
  {
    v5 = a1[2];
    v6 = a1[9];
    v7 = a1[10];
    if (v4)
    {
      v8 = a1[6];
      v9 = a1[7];
      if (!v5)
      {
        do
        {
          v70 = a3;
          v71 = a2;
          v72 = v4;
          do
          {
            _H0 = *v71;
            __asm { FCVT            S0, H0 }
            *v70 = _S0;
            v71 += v8;
            v70 += v9;
            --v72;
          }
          while (v72);
          _H0 = *v71;
          __asm { FCVT            S0, H0 }
          *v70 = _S0;
          a2 += v6;
          a3 += v7;
          ++v5;
        }
        while (v5 != v3);
        goto LABEL_32;
      }
      v10 = 0;
      v11 = 2 * v6;
      v12 = v8;
      v13 = 2 * a1[3];
      v14 = 4 * v7;
      v15 = v9;
      v16 = 4 * a1[4];
      v17 = &a2[v12];
      v18 = &a3[v15];
      do
      {
        v19 = 0;
        v20 = v18;
        v21 = v17;
        v22 = a3;
        v23 = a2;
        do
        {
          v24 = v21;
          v25 = v20;
          v26 = v22;
          v27 = v23;
          v28 = v5;
          do
          {
            _H0 = *v27;
            __asm { FCVT            S0, H0 }
            *v26 = _S0;
            v27 = (__int16 *)((char *)v27 + v13);
            v26 = (_DWORD *)((char *)v26 + v16);
            --v28;
          }
          while (v28);
          _H0 = *v27;
          __asm { FCVT            S0, H0 }
          *v26 = _S0;
          v23 = (__int16 *)((char *)v23 + v12 * 2);
          v22 = (_DWORD *)((char *)v22 + v15 * 4);
          ++v19;
          v21 = &v24[v12];
          v20 = &v25[v15];
        }
        while (v19 != v4);
        v37 = v5;
        do
        {
          _H0 = *v24;
          __asm { FCVT            S0, H0 }
          *v25 = _S0;
          v24 = (__int16 *)((char *)v24 + v13);
          v25 = (_DWORD *)((char *)v25 + v16);
          --v37;
        }
        while (v37);
        _H0 = *v24;
        __asm { FCVT            S0, H0 }
        *v25 = _S0;
        a2 = (__int16 *)((char *)a2 + v11);
        a3 = (_DWORD *)((char *)a3 + v14);
        ++v10;
        v17 = (__int16 *)((char *)v17 + v11);
        v18 = (_DWORD *)((char *)v18 + v14);
      }
      while (v10 != v3);
LABEL_14:
      v8 = a1[6];
      v9 = a1[7];
      if (v5)
      {
        v42 = 0;
        v43 = 2 * v8;
        v44 = 2 * a1[3];
        v45 = 4 * v9;
        v46 = 4 * a1[4];
        do
        {
          v47 = a3;
          v48 = a2;
          v49 = v5;
          do
          {
            _H0 = *v48;
            __asm { FCVT            S0, H0 }
            *v47 = _S0;
            v48 = (__int16 *)((char *)v48 + v44);
            v47 = (_DWORD *)((char *)v47 + v46);
            --v49;
          }
          while (v49);
          _H0 = *v48;
          __asm { FCVT            S0, H0 }
          *v47 = _S0;
          a2 = (__int16 *)((char *)a2 + v43);
          a3 = (_DWORD *)((char *)a3 + v45);
          ++v42;
        }
        while (v42 != v4);
        goto LABEL_25;
      }
      do
      {
LABEL_32:
        _H0 = *a2;
        __asm { FCVT            S0, H0 }
        *a3 = _S0;
        a2 += v8;
        a3 += v9;
        --v4;
      }
      while (v4);
      goto LABEL_35;
    }
    if (!v5)
    {
      do
      {
        _H0 = *a2;
        __asm { FCVT            S0, H0 }
        *a3 = _S0;
        a2 += v6;
        a3 += v7;
        --v3;
      }
      while (v3);
      goto LABEL_35;
    }
    v54 = 0;
    v55 = 2 * v6;
    v56 = 2 * a1[3];
    v57 = 4 * v7;
    v58 = 4 * a1[4];
    do
    {
      v59 = a3;
      v60 = a2;
      v61 = v5;
      do
      {
        _H0 = *v60;
        __asm { FCVT            S0, H0 }
        *v59 = _S0;
        v60 = (__int16 *)((char *)v60 + v56);
        v59 = (_DWORD *)((char *)v59 + v58);
        --v61;
      }
      while (v61);
      _H0 = *v60;
      __asm { FCVT            S0, H0 }
      *v59 = _S0;
      a2 = (__int16 *)((char *)a2 + v55);
      a3 = (_DWORD *)((char *)a3 + v57);
      ++v54;
    }
    while (v54 != v3);
  }
  else
  {
    v5 = a1[2];
    if (v4)
      goto LABEL_14;
  }
LABEL_25:
  if (v5)
  {
    v66 = 2 * a1[3];
    v67 = 4 * a1[4];
    do
    {
      _H0 = *a2;
      __asm { FCVT            S0, H0 }
      *a3 = _S0;
      a2 = (__int16 *)((char *)a2 + v66);
      a3 = (_DWORD *)((char *)a3 + v67);
      --v5;
    }
    while (v5);
  }
LABEL_35:
  _H0 = *a2;
  __asm { FCVT            S0, H0 }
  *(float *)a3 = result;
  return result;
}

void sub_210975AA0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA816E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210975AB0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA816E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210975AE0(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_210975AF0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81738;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_210975B00(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA81738;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210975B30(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_210975B44()
{
  JUMPOUT(0x212BCC6FCLL);
}

__n128 sub_210975B58(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24CA81788;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_210975B90(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24CA81788;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_210975BB0()
{
  return kdebug_trace();
}

uint64_t sub_210975BE4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature21DescriptorsForPatchesENS3_10shared_p"
                     "trINS6_16IDescriptorModelEEERKNS5_2pc16ImagePatchesViewIKhEENS0_4spanIKNS0_4math6VectorIfLj2EEELm18"
                     "446744073709551615EEEPvE3$_0JEEEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature21DescriptorsForPatchesENS3"
                                "_10shared_ptrINS6_16IDescriptorModelEEERKNS5_2pc16ImagePatchesViewIKhEENS0_4spanIKNS0_4m"
                                "ath6VectorIfLj2EEELm18446744073709551615EEEPvE3$_0JEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature21DescriptorsForPatchesENS3_10shared_ptrINS6_16IDescriptorModelEEERKNS5_2pc16ImagePatchesViewIKhEENS0_4spanIKNS0_4math6VectorIfLj2EEELm18446744073709551615EEEPvE3$_0JEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3esn5Defer11BindWrapperINSt3__16__bindIRZNS_2lf7feature21DescriptorsForPatchesENS3_10shared_ptrINS6_16IDescriptorModelEEERKNS5_2pc16ImagePatchesViewIKhEENS0_4spanIKNS0_4math6VectorIfLj2EEELm18446744073709551615EEEPvE3$_0JEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_210975C50()
{
  return &unk_24CA817E8;
}

void sub_210975C5C(_QWORD *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v13 = 0;
  v14 = 0;
  if (a2[1])
    v5 = *a2 == 0;
  else
    v5 = 1;
  v6 = *(_QWORD *)a2;
  if (v5)
    v6 = 0;
  v7 = *a3;
  *(_QWORD *)&v11 = *a1;
  *((_QWORD *)&v11 + 1) = v6;
  v12 = v7;
  if (HIDWORD(v6) * HIDWORD(v7) == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  sub_210975D64(a4, &v13, &v11);
  v8 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_210975D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_210975D64(uint64_t result, uint64_t *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  _WORD *v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  unsigned __int8 v14;
  __int16 v15;

  v3 = result;
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    *(_QWORD *)result = v4;
    *(_QWORD *)(result + 8) = v5;
    v8 = *a3;
    *(_QWORD *)(result + 32) = *((_QWORD *)a3 + 2);
    *(_OWORD *)(result + 16) = v8;
    if (v4)
    {
      v9 = (_WORD *)(result + 40);
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
      goto LABEL_12;
    }
LABEL_17:
    *(_WORD *)(result + 40) = 0;
    *(_BYTE *)(result + 41) = 0;
    return result;
  }
  *(_QWORD *)result = v4;
  *(_QWORD *)(result + 8) = 0;
  v12 = *a3;
  *(_QWORD *)(result + 32) = *((_QWORD *)a3 + 2);
  *(_OWORD *)(result + 16) = v12;
  if (!v4)
    goto LABEL_17;
  v9 = (_WORD *)(result + 40);
LABEL_12:
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
  v14 = v13;
  if ((v13 & 0xFFFFFF) <= 0x10000)
    v14 = 0;
  v15 = v13 & 0xFF00;
  if ((v13 & 0xFF0000) == 0)
    v15 = 0;
  *v9 = v15 & 0xFF00 | v14;
  return v3;
}

void sub_210975E70(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_210975EB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int16 v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int16 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;

  v4 = *a2;
  v3 = a2[1];
  v5 = a2[2];
  v7 = a2[4];
  v6 = (std::__shared_weak_count *)a2[5];
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    v10 = *((_WORD *)a2 + 36);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    v25 = *((_OWORD *)a2 + 3);
    v26 = a2[8];
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = &off_24CA7AAC0;
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
    do
      v16 = __ldxr(p_shared_owners);
    while (__stxr(v16 + 1, p_shared_owners));
    *(_OWORD *)(a1 + 48) = v25;
    *(_QWORD *)(a1 + 64) = v26;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v6;
    *(_WORD *)(a1 + 72) = v10;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  else
  {
    v21 = *((_WORD *)a2 + 36);
    v22 = *((_OWORD *)a2 + 3);
    v23 = a2[8];
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = &off_24CA7AAC0;
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = 0;
    *(_OWORD *)(a1 + 48) = v22;
    *(_QWORD *)(a1 + 64) = v23;
    *(_WORD *)(a1 + 72) = v21;
  }
  return a1;
}

uint64_t sub_2109760BC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  size_t v7;
  const void *v8;
  BOOL v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;

  v3 = result;
  v4 = *(_DWORD *)(result + 32);
  v5 = *(_DWORD *)(result + 44);
  if (v5 != *(_DWORD *)(a2 + 44) || v5 != v4)
  {
    v21 = *(unsigned int *)(result + 32);
    return sub_2109762C0(result, a2, &v21);
  }
  v7 = *(unsigned int *)(result + 36) * (unint64_t)v4;
  v8 = *(const void **)(result + 24);
  if (*(_BYTE *)(result + 48))
    v9 = v8 == 0;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = *(_QWORD *)(result + 8);
    v11 = *(std::__shared_weak_count **)(result + 16);
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v10 + 88))(v10, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v8 = *(const void **)(v3 + 24);
  }
  if (v7)
  {
    if (!v8)
    {
      result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4);
      if ((_DWORD)result)
LABEL_33:
        abort();
    }
  }
  v15 = *(void **)(a2 + 24);
  if (*(_BYTE *)(a2 + 48) && v15)
  {
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (v17)
    {
      v18 = (unint64_t *)&v17->__shared_owners_;
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
      do
        v20 = __ldaxr(v18);
      while (__stlxr(v20 - 1, v18));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v16 + 88))(v16, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
    v15 = *(void **)(a2 + 24);
  }
  if (v7 && !v15)
  {
    if (sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4))
    {
      goto LABEL_33;
    }
    return (uint64_t)memmove(v15, v8, v7);
  }
  if (v7)
    return (uint64_t)memmove(v15, v8, v7);
  return result;
}

uint64_t sub_2109762C0(uint64_t a1, uint64_t a2, size_t *a3)
{
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 + 8);
  if (!v6)
    goto LABEL_17;
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v7)
    goto LABEL_42;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  v6 = *(_QWORD *)(a1 + 8);
  v11 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v11)
    goto LABEL_42;
  v12 = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldxr(v12);
  while (__stxr(v13 + 1, v12));
  do
    v14 = __ldaxr(v12);
  while (__stlxr(v14 - 1, v12));
  if (v14)
  {
LABEL_42:
    if (*(_BYTE *)(a1 + 49))
      goto LABEL_14;
LABEL_17:
    v27 = 0;
    v15 = *(_QWORD *)(a2 + 8);
    if (!v15)
      goto LABEL_33;
LABEL_18:
    v16 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v16)
      goto LABEL_29;
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    v15 = *(_QWORD *)(a2 + 8);
    v20 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v20)
      goto LABEL_29;
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    else
    {
LABEL_29:
      if (!*(_BYTE *)(a2 + 49))
        goto LABEL_33;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v26, v15, 1);
    if (!*(_DWORD *)(a1 + 32))
      goto LABEL_36;
    goto LABEL_34;
  }
  ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
  std::__shared_weak_count::__release_weak(v11);
  if (!*(_BYTE *)(a1 + 49))
    goto LABEL_17;
LABEL_14:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v27, v6, 0);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_18;
LABEL_33:
  v26 = 0;
  if (!*(_DWORD *)(a1 + 32))
    goto LABEL_36;
LABEL_34:
  if (*(_DWORD *)(a1 + 36))
    sub_210976550(a3, a1, a2);
LABEL_36:
  v24 = v26;
  v26 = 0;
  if (v24)
    (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  result = v27;
  v27 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_2109764EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a10)
    _Unwind_Resume(exception_object);
  (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

size_t *sub_210976550(size_t *result, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  BOOL v5;
  size_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  _OWORD v28[2];

  v4 = *(_DWORD *)(a2 + 32);
  v3 = *(_DWORD *)(a2 + 36);
  if (v4)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v8 = result;
    v24 = v4 - 1;
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(unsigned int *)(a3 + 44);
    v25 = *(unsigned int *)(a2 + 40) | ((unint64_t)*(unsigned int *)(a3 + 40) << 32);
    v23 = 0;
    v26 = v3 - 1;
    v27 = v9 | (v10 << 32);
    v11 = *(char **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(char **)(a2 + 24);
    }
    v17 = *(char **)(a3 + 24);
    if (*(_BYTE *)(a3 + 48) && v17)
    {
      v18 = *(_QWORD *)(a3 + 8);
      v19 = *(std::__shared_weak_count **)(a3 + 16);
      if (v19)
      {
        v20 = (unint64_t *)&v19->__shared_owners_;
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
        do
          v22 = __ldaxr(v20);
        while (__stlxr(v22 - 1, v20));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
        }
      }
      (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v18 + 88))(v18, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v17 = *(char **)(a3 + 24);
    }
    memset(v28, 0, sizeof(v28));
    return (size_t *)sub_2109766D4((uint64_t)&v23, (uint64_t)v28, v8, v11, v17);
  }
  return result;
}

uint64_t sub_2109766D4(uint64_t result, uint64_t a2, size_t *a3, char *__src, char *__dst)
{
  char *v5;
  char *v6;
  int v9;
  int v10;
  _DWORD *v11;
  int v12;
  size_t v13;
  void *v14;
  size_t v15;
  size_t v16;
  size_t v17;

  v5 = __dst;
  v6 = __src;
  v9 = *(_DWORD *)(result + 12);
  v10 = *(_DWORD *)(result + 16);
  *(_QWORD *)a2 = __src;
  *(_DWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = __dst;
  *(_DWORD *)(a2 + 24) = v10;
  if (*(_DWORD *)(result + 20))
  {
    v11 = (_DWORD *)result;
    v12 = 0;
    do
    {
      *(_QWORD *)a2 = v6;
      *(_QWORD *)(a2 + 16) = v5;
      v13 = *a3;
      v14 = v5;
      v15 = *a3;
      if (!v6)
      {
        v14 = v5;
        v15 = *a3;
        if (v13)
        {
          result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4);
          if ((result & 1) != 0)
            goto LABEL_23;
          v15 = *a3;
          v14 = *(void **)(a2 + 16);
        }
      }
      if (!v14)
      {
        if (v15)
        {
          result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4);
          if ((_DWORD)result)
            goto LABEL_23;
        }
      }
      if (v13)
        result = (uint64_t)memmove(v14, v6, v13);
      v6 += v11[6];
      v5 += v11[7];
    }
    while (++v12 < v11[5]);
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v5;
  v16 = *a3;
  v17 = *a3;
  if (!v6 && v16)
  {
    result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4);
    if ((result & 1) != 0)
      goto LABEL_23;
    v17 = *a3;
    v5 = *(char **)(a2 + 16);
  }
  if (!v5)
  {
    if (v17)
    {
      result = sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_210A01421, 0, (void (*)(void **))sub_2109EDDB4);
      if ((_DWORD)result)
LABEL_23:
        abort();
    }
  }
  if (v16)
    return (uint64_t)memmove(v5, v6, v16);
  return result;
}

_QWORD *sub_2109768D4(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  char *v7;

  a1[2] = 0;
  v4 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  if (a3)
  {
    if (a3 >> 57)
      sub_2108B327C();
    v6 = a3 << 7;
    v7 = (char *)operator new(a3 << 7);
    *a1 = v7;
    a1[1] = v7;
    a1[2] = &v7[v6];
    a1[1] = sub_2109769F4(v4, a2, a2 + v6, (uint64_t)v7);
  }
  return a1;
}

void sub_210976970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  void **v13;
  void *v14;
  char *v16;
  char *v17;
  void *v18;
  char *v19;
  uint64_t v20;

  v13[1] = v14;
  v16 = (char *)*v13;
  if (*v13)
  {
    v17 = (char *)v13[1];
    v18 = *v13;
    if (v17 != v16)
    {
      do
      {
        v19 = v17 - 128;
        v20 = *((unsigned int *)v17 - 2);
        if ((_DWORD)v20 != -1)
          ((void (*)(char *, char *))off_24CA81678[v20])(&a13, v17 - 128);
        *((_DWORD *)v17 - 2) = -1;
        v17 -= 128;
      }
      while (v19 != v16);
      v18 = *v13;
    }
    v13[1] = v16;
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2109769F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[3];

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      v8 = a4 + v7;
      *(_BYTE *)v8 = 0;
      *(_DWORD *)(v8 + 120) = -1;
      v9 = *(unsigned int *)(a2 + v7 + 120);
      if ((_DWORD)v9 != -1)
      {
        ((void (*)(_BYTE *, uint64_t))off_24CA816A8[v9])(v11, a4 + v7);
        *(_DWORD *)(v8 + 120) = v9;
      }
      v7 += 128;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_210976AA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = *(unsigned int *)(v13 + v14 + 120);
  if ((_DWORD)v16 != -1)
    ((void (*)(char *, uint64_t))off_24CA81678[v16])(&a12, v13 + v14);
  for (*(_DWORD *)(v13 + v14 + 120) = -1; v14; v14 -= 128)
  {
    v17 = v13 + v14;
    v18 = *(unsigned int *)(v13 + v14 - 8);
    if ((_DWORD)v18 != -1)
      ((void (*)(char *, uint64_t))off_24CA81678[v18])(&a13, v17 - 128);
    *(_DWORD *)(v17 - 8) = -1;
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_210976B24(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(***(_QWORD ***)(a1 + 8) + 16))(**(_QWORD **)(a1 + 8));
}

BOOL sub_210976B38(uint64_t a1, _DWORD *a2)
{
  return *a2 > 1u && a2[1] > 1u;
}

void sub_210976B4C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  std::mutex *v22;
  std::__thread_struct *v23;
  char *v24;
  int v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(void);
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  std::mutex *v40;
  std::__thread_struct *v41;
  char *v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::unique_lock<std::mutex>::mutex_type *v49;
  pthread_t v50;
  uint64_t v51;
  __int128 v52;
  unint64_t *v53;
  unint64_t v54;
  __int16 v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  std::mutex *v82;
  unint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  unsigned int v92;
  unint64_t *v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t *v96;
  unint64_t v97;
  std::exception_ptr v98;
  uint64_t v99;
  uint64_t v101;
  _QWORD *v102;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  std::__shared_weak_count *v109;
  std::unique_lock<std::mutex> __lk;
  uint64_t v111;
  uint64_t (**v112)();
  __int128 v113;
  uint64_t v114;
  __int128 v115;
  __int16 v116;
  uint64_t v117;
  std::__shared_weak_count *v118;
  std::exception_ptr v119;
  int v120;
  pthread_t v121[2];
  uint64_t v122;
  uint64_t (**v123)();
  __int128 v124;
  _BYTE v125[26];
  uint64_t v126;
  void (*v127)(void);
  void *__p[2];
  uint64_t v129;
  char *v130[3];
  unsigned int v131;
  uint64_t v132;
  int v133;
  unint64_t v134[2];
  __int128 v135;
  __int128 v136;

  v7 = *(uint64_t **)(a1 + 8);
  v8 = *v7;
  v9 = (std::__shared_weak_count *)v7[1];
  v108 = *v7;
  v109 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
    v7 = *(uint64_t **)(a1 + 8);
  }
  v12 = *a3;
  v13 = a3[1] - *a3;
  v14 = 0xCCCCCCCCCCCCCCCDLL * (v13 >> 2);
  v134[0] = v14;
  v134[1] = v12;
  if (!v13)
  {
    *(_QWORD *)(a5 + 32) = 0;
    *(_DWORD *)(a5 + 40) = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)a5 = 0;
    *(_DWORD *)(a5 + 24) = 0;
    if (v9)
      goto LABEL_125;
    return;
  }
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8);
  v16 = v15;
  v132 = 0;
  v133 = 0;
  memset(v130, 0, sizeof(v130));
  v131 = 0;
  if (v134[0] % v15)
    v17 = v134[0] % v15;
  else
    v17 = v15;
  v105 = v17;
  v106 = sub_21095FE2C(v134, 0, v17);
  v19 = v18;
  v104 = v16;
  v101 = a5;
  v102 = v7 + 2;
  v20 = operator new();
  *(_QWORD *)(v20 + 8) = 0;
  v21 = (unint64_t *)(v20 + 8);
  *(_QWORD *)(v20 + 24) = 850045863;
  v22 = (std::mutex *)(v20 + 24);
  *(_QWORD *)(v20 + 16) = 0;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)(v20 + 64) = 0u;
  *(_QWORD *)(v20 + 80) = 0;
  *(_QWORD *)(v20 + 88) = 1018212795;
  *(_OWORD *)(v20 + 96) = 0u;
  *(_OWORD *)(v20 + 112) = 0u;
  *(_OWORD *)(v20 + 124) = 0u;
  *(_QWORD *)v20 = &off_24CA818D8;
  *(_QWORD *)(v20 + 264) = v7 + 2;
  *(_QWORD *)(v20 + 272) = a2;
  *(_QWORD *)(v20 + 280) = &v108;
  *(_QWORD *)(v20 + 288) = v106;
  *(_QWORD *)(v20 + 296) = v19;
  v23 = (std::__thread_struct *)operator new();
  std::__thread_struct::__thread_struct(v23);
  v24 = (char *)operator new();
  *(_QWORD *)v24 = v23;
  *(_OWORD *)(v24 + 8) = xmmword_210A18BD0;
  *((_QWORD *)v24 + 3) = v20;
  v25 = pthread_create(v121, 0, (void *(__cdecl *)(void *))sub_210978DDC, v24);
  if (v25)
  {
LABEL_111:
    std::__throw_system_error(v25, "thread constructor failed");
LABEL_136:
    __break(1u);
    return;
  }
  std::thread::detach((std::thread *)v121);
  std::thread::~thread((std::thread *)v121);
  std::mutex::lock(v22);
  v26 = *(_DWORD *)(v20 + 136);
  if ((v26 & 2) != 0)
    sub_2109788B4(1u);
  do
    v27 = __ldxr(v21);
  while (__stxr(v27 + 1, v21));
  *(_DWORD *)(v20 + 136) = v26 | 2;
  std::mutex::unlock(v22);
  do
    v28 = __ldaxr(v21);
  while (__stlxr(v28 - 1, v21));
  if (!v28)
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
  v29 = 0;
  v99 = a5 + 32;
  v107 = vcvtps_u32_f32((float)v14 / (float)v104);
  while (v29 != v107)
  {
    __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(v20 + 24);
    __lk.__owns_ = 1;
    std::mutex::lock((std::mutex *)(v20 + 24));
    std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)v20, &__lk);
    v119.__ptr_ = 0;
    v30 = *(_QWORD *)(v20 + 16);
    std::exception_ptr::~exception_ptr(&v119);
    if (v30)
    {
      std::exception_ptr::exception_ptr(&v119, (const std::exception_ptr *)(v20 + 16));
      v98.__ptr_ = &v119;
      std::rethrow_exception(v98);
      goto LABEL_136;
    }
    *(_OWORD *)v121 = *(_OWORD *)(v20 + 144);
    v31 = *(_OWORD *)(v20 + 192);
    v124 = *(_OWORD *)(v20 + 176);
    v122 = *(_QWORD *)(v20 + 160);
    v123 = &off_24CA7AAC0;
    *(_QWORD *)(v20 + 176) = 0;
    *(_QWORD *)(v20 + 184) = 0;
    *(_OWORD *)v125 = v31;
    *(_OWORD *)&v125[10] = *(_OWORD *)(v20 + 202);
    v32 = *(_QWORD *)(v20 + 224);
    v33 = *(void (**)(void))(v20 + 232);
    *(_QWORD *)(v20 + 224) = 0;
    v126 = v32;
    v127 = v33;
    *(_OWORD *)__p = *(_OWORD *)(v20 + 240);
    v129 = *(_QWORD *)(v20 + 256);
    *(_QWORD *)(v20 + 240) = 0;
    *(_QWORD *)(v20 + 248) = 0;
    *(_QWORD *)(v20 + 256) = 0;
    if (__lk.__owns_)
      std::mutex::unlock(__lk.__m_);
    v34 = (unint64_t *)(v20 + 8);
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (v35)
    {
      if (++v29 >= v107)
        goto LABEL_36;
    }
    else
    {
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
      if (++v29 >= v107)
      {
LABEL_36:
        v20 = 0;
        v46 = v109;
        v117 = v108;
        v118 = v109;
        if (!v109)
          goto LABEL_39;
LABEL_37:
        v47 = (unint64_t *)&v46->__shared_owners_;
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
        goto LABEL_39;
      }
    }
    v36 = sub_21095FE2C(v134, v105, v104);
    v38 = v37;
    v20 = operator new();
    *(_QWORD *)(v20 + 8) = 0;
    v39 = (unint64_t *)(v20 + 8);
    *(_QWORD *)(v20 + 24) = 850045863;
    v40 = (std::mutex *)(v20 + 24);
    *(_QWORD *)(v20 + 16) = 0;
    *(_OWORD *)(v20 + 32) = 0u;
    *(_OWORD *)(v20 + 48) = 0u;
    *(_OWORD *)(v20 + 64) = 0u;
    *(_QWORD *)(v20 + 80) = 0;
    *(_QWORD *)(v20 + 88) = 1018212795;
    *(_OWORD *)(v20 + 96) = 0u;
    *(_OWORD *)(v20 + 112) = 0u;
    *(_OWORD *)(v20 + 124) = 0u;
    *(_QWORD *)v20 = &off_24CA81980;
    *(_QWORD *)(v20 + 264) = v102;
    *(_QWORD *)(v20 + 272) = a2;
    *(_QWORD *)(v20 + 280) = &v108;
    *(_QWORD *)(v20 + 288) = v36;
    *(_QWORD *)(v20 + 296) = v38;
    v41 = (std::__thread_struct *)operator new();
    std::__thread_struct::__thread_struct(v41);
    v42 = (char *)operator new();
    *(_QWORD *)v42 = v41;
    *(_OWORD *)(v42 + 8) = xmmword_210A18BD0;
    *((_QWORD *)v42 + 3) = v20;
    v25 = pthread_create((pthread_t *)&__lk, 0, (void *(__cdecl *)(void *))sub_2109799FC, v42);
    if (v25)
      goto LABEL_111;
    std::thread::detach((std::thread *)&__lk);
    std::thread::~thread((std::thread *)&__lk);
    std::mutex::lock(v40);
    v43 = *(_DWORD *)(v20 + 136);
    if ((v43 & 2) != 0)
      sub_2109788B4(1u);
    do
      v44 = __ldxr(v39);
    while (__stxr(v44 + 1, v39));
    *(_DWORD *)(v20 + 136) = v43 | 2;
    std::mutex::unlock(v40);
    do
      v45 = __ldaxr(v39);
    while (__stlxr(v45 - 1, v39));
    if (!v45)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
    v105 += v104;
    v46 = v109;
    v117 = v108;
    v118 = v109;
    if (v109)
      goto LABEL_37;
LABEL_39:
    v49 = (std::unique_lock<std::mutex>::mutex_type *)v121[0];
    v50 = v121[1];
    v51 = v122;
    v52 = v124;
    if (*((_QWORD *)&v124 + 1))
    {
      v53 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
      do
        v54 = __ldxr(v53);
      while (__stxr(v54 + 1, v53));
      v55 = *(_WORD *)&v125[24];
      do
        v56 = __ldxr(v53);
      while (__stxr(v56 + 1, v53));
      v57 = *(_QWORD *)v125;
      v135 = *(_OWORD *)&v125[8];
      do
        v58 = __ldxr(v53);
      while (__stxr(v58 + 1, v53));
      do
        v59 = __ldaxr(v53);
      while (__stlxr(v59 - 1, v53));
      if (!v59)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      do
        v60 = __ldaxr(v53);
      while (__stlxr(v60 - 1, v53));
      if (!v60)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      do
        v61 = __ldxr(v53);
      while (__stxr(v61 + 1, v53));
      do
        v62 = __ldxr(v53);
      while (__stxr(v62 + 1, v53));
      v136 = v135;
      do
        v63 = __ldxr(v53);
      while (__stxr(v63 + 1, v53));
      do
        v64 = __ldaxr(v53);
      while (__stlxr(v64 - 1, v53));
      if (!v64)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      do
        v65 = __ldaxr(v53);
      while (__stlxr(v65 - 1, v53));
      if (!v65)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      __lk.__m_ = v49;
      *(_QWORD *)&__lk.__owns_ = v50;
      v111 = v51;
      v112 = &off_24CA79B48;
      do
        v66 = __ldxr(v53);
      while (__stxr(v66 + 1, v53));
      do
        v67 = __ldxr(v53);
      while (__stxr(v67 + 1, v53));
      v114 = v57;
      v115 = v136;
      do
        v68 = __ldxr(v53);
      while (__stxr(v68 + 1, v53));
      v113 = v52;
      v116 = v55;
      do
        v69 = __ldaxr(v53);
      while (__stlxr(v69 - 1, v53));
      if (!v69)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      do
        v70 = __ldaxr(v53);
      while (__stlxr(v70 - 1, v53));
      if (!v70)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      do
        v71 = __ldaxr(v53);
      while (__stlxr(v71 - 1, v53));
      if (!v71)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
      do
        v72 = __ldaxr(v53);
      while (__stlxr(v72 - 1, v53));
      if (!v72)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v52 + 1) + 16))(*((_QWORD *)&v52 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v52 + 1));
      }
    }
    else
    {
      __lk = *(std::unique_lock<std::mutex> *)v121;
      v111 = v122;
      v112 = &off_24CA79B48;
      v113 = (unint64_t)v124;
      v114 = *(_QWORD *)v125;
      v115 = *(_OWORD *)&v125[8];
      v116 = *(_WORD *)&v125[24];
    }
    sub_210972DB4(&v117, (uint64_t)&__lk, ((char *)__p[1] - (char *)__p[0]) >> 3, (unint64_t *)__p[0], a4, (uint64_t)&v119);
    v73 = (std::__shared_weak_count *)*((_QWORD *)&v113 + 1);
    if (!*((_QWORD *)&v113 + 1))
      goto LABEL_85;
    v74 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
      v76 = v118;
      if (v118)
      {
LABEL_86:
        v77 = (unint64_t *)&v76->__shared_owners_;
        do
          v78 = __ldaxr(v77);
        while (__stlxr(v78 - 1, v77));
        if (!v78)
        {
          ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
          std::__shared_weak_count::__release_weak(v76);
        }
      }
    }
    else
    {
LABEL_85:
      v76 = v118;
      if (v118)
        goto LABEL_86;
    }
    LOBYTE(v135) = 1;
    *(_QWORD *)&v136 = &v135;
    if (v120 == -1)
      sub_2108B9060();
    __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)&v136;
    ((void (*)(std::unique_lock<std::mutex> *, std::exception_ptr *))off_24CA822D8[v120])(&__lk, &v119);
    v79 = v135;
    if ((_BYTE)v135)
    {
      *(_QWORD *)(v101 + 32) = 0;
      *(_DWORD *)(v101 + 40) = 0;
      *(_QWORD *)(v101 + 8) = 0;
      *(_QWORD *)(v101 + 16) = 0;
      *(_QWORD *)v101 = 0;
      *(_DWORD *)(v101 + 24) = 0;
    }
    else
    {
      v80 = *(_QWORD **)(*v102 + 96);
      if (v80)
      {
        v81 = *v80;
        v82 = (std::mutex *)(*v80 + 72);
        std::mutex::lock(v82);
        v83 = *(_QWORD *)(v81 + 40);
        if (v83 >= *(_QWORD *)(v81 + 48))
        {
          v87 = sub_21097FC38((void **)(v81 + 32), (uint64_t)v121);
        }
        else
        {
          v84 = v122;
          *(_OWORD *)v83 = *(_OWORD *)v121;
          *(_QWORD *)(v83 + 16) = v84;
          *(_QWORD *)(v83 + 24) = &off_24CA7AAC0;
          *(_OWORD *)(v83 + 32) = v124;
          v124 = 0uLL;
          v85 = *(_OWORD *)&v125[10];
          *(_OWORD *)(v83 + 48) = *(_OWORD *)v125;
          *(_OWORD *)(v83 + 58) = v85;
          v86 = v126;
          v126 = 0;
          *(_QWORD *)(v83 + 80) = v86;
          *(_QWORD *)(v83 + 88) = v127;
          v87 = (char *)(v83 + 96);
        }
        *(_QWORD *)(v81 + 40) = v87;
        std::mutex::unlock(v82);
      }
      sub_210983B80(v130, (uint64_t)&v119);
    }
    if (v120 != -1)
      ((void (*)(std::unique_lock<std::mutex> *, std::exception_ptr *))off_24CA81A00[v120])(&__lk, &v119);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    v88 = v126;
    v126 = 0;
    if (v88)
      v127();
    v89 = (std::__shared_weak_count *)*((_QWORD *)&v124 + 1);
    if (*((_QWORD *)&v124 + 1))
    {
      v90 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
      do
        v91 = __ldaxr(v90);
      while (__stlxr(v91 - 1, v90));
      if (!v91)
      {
        ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
        std::__shared_weak_count::__release_weak(v89);
      }
    }
    if (v79)
      goto LABEL_118;
  }
  *(_BYTE *)v101 = 0;
  *(_DWORD *)(v101 + 24) = -1;
  v92 = v131;
  if (v131 != -1)
  {
    ((void (*)(pthread_t *, uint64_t, char **))off_24CA81A20[v131])(v121, v101, v130);
    *(_DWORD *)(v101 + 24) = v92;
  }
  *(_QWORD *)v99 = v132;
  *(_DWORD *)(v99 + 8) = v133;
  if (!v20)
    goto LABEL_122;
LABEL_118:
  v93 = (unint64_t *)(v20 + 8);
  do
    v94 = __ldaxr(v93);
  while (__stlxr(v94 - 1, v93));
  if (!v94)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v20 + 16))(v20);
    v95 = v131;
    if (v131 != -1)
LABEL_123:
      ((void (*)(pthread_t *, char **))off_24CA81A00[v95])(v121, v130);
  }
  else
  {
LABEL_122:
    v95 = v131;
    if (v131 != -1)
      goto LABEL_123;
  }
  v9 = v109;
  if (!v109)
    return;
LABEL_125:
  v96 = (unint64_t *)&v9->__shared_owners_;
  do
    v97 = __ldaxr(v96);
  while (__stlxr(v97 - 1, v96));
  if (!v97)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
}

void sub_210977A5C()
{
  unint64_t *v0;
  std::mutex *v1;
  unint64_t v2;

  std::mutex::unlock(v1);
  do
    v2 = __ldaxr(v0);
  while (__stlxr(v2 - 1, v0));
  if (v2)
    JUMPOUT(0x210977B74);
  JUMPOUT(0x210977B64);
}

void sub_210977A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  sub_2108CE6E8(v17 - 192);
  sub_2108A894C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_210977AD0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,std::mutex *a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,std::exception_ptr a39)
{
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;

  if (a28)
    std::mutex::unlock(a27);
  if (v39)
  {
    v40 = (unint64_t *)(v39 + 8);
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    JUMPOUT(0x210977B60);
  }
  JUMPOUT(0x210977B74);
}

void sub_210977B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  sub_210974754((uint64_t)&a27);
  sub_2108A894C((uint64_t)&a37);
  JUMPOUT(0x210977B40);
}

void sub_210977B30()
{
  JUMPOUT(0x210977B38);
}

void sub_210977B8C(int a1@<W0>, _QWORD *a2@<X8>)
{
  _BOOL4 v3;
  void *v4;
  void *v5;
  uint64_t v6;
  char v7;
  void **v8;
  char *v9;
  int v10;
  int v11;
  void *v13[2];
  void *v14;
  void *__p[2];
  char v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  void *v24[2];
  void *v25[2];
  void *v26;
  void *v27;
  char v28;
  void *v29;

  if (a1 == 2)
  {
    sub_2109721AC(0, (uint64_t)__p);
    goto LABEL_17;
  }
  if (a1 == 1)
  {
    sub_210972030(0, (uint64_t)__p);
LABEL_17:
    *(_OWORD *)v13 = *(_OWORD *)v24;
    v14 = v25[0];
    v24[1] = 0;
    v25[0] = 0;
    v24[0] = 0;
    if (v28 && SHIBYTE(v27) < 0 && (operator delete(v26), SHIBYTE(v25[0]) < 0))
    {
      operator delete(v24[0]);
      if ((SHIBYTE(v23) & 0x80000000) == 0)
      {
LABEL_21:
        if ((SHIBYTE(v20) & 0x80000000) == 0)
          goto LABEL_27;
LABEL_25:
        v5 = v18;
LABEL_26:
        operator delete(v5);
        goto LABEL_27;
      }
    }
    else if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
      goto LABEL_21;
    }
    operator delete(v21);
    if ((SHIBYTE(v20) & 0x80000000) == 0)
      goto LABEL_27;
    goto LABEL_25;
  }
  sub_2108A4A34(__p);
  v3 = sub_210997120((uint64_t)__p, 0xEu);
  if ((_BYTE)v17 && v16 < 0)
    operator delete(__p[0]);
  if (!v3)
  {
    sub_210971684(0, (uint64_t)__p);
    goto LABEL_17;
  }
  sub_2109717C0(0, (uint64_t)__p);
  *(_OWORD *)v13 = *(_OWORD *)v25;
  v14 = v26;
  v25[1] = 0;
  v26 = 0;
  v25[0] = 0;
  sub_21095A1BC((int)&v27, (void **)v29);
  v4 = v27;
  v27 = 0;
  if (v4)
    operator delete(v4);
  if (SHIBYTE(v26) < 0)
  {
    operator delete(v25[0]);
    if ((SHIBYTE(v24[1]) & 0x80000000) == 0)
    {
LABEL_13:
      if ((v22 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_45;
    }
  }
  else if ((SHIBYTE(v24[1]) & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v23);
  if ((v22 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v19 & 0x80000000) == 0)
      goto LABEL_27;
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v20);
  if (v19 < 0)
  {
LABEL_46:
    v5 = v17;
    goto LABEL_26;
  }
LABEL_27:
  v6 = HIBYTE(v14);
  v7 = HIBYTE(v14);
  if (SHIBYTE(v14) < 0)
    v6 = (uint64_t)v13[1];
  if (v6 < 6)
    goto LABEL_36;
  v8 = (void **)v13[0];
  if (SHIBYTE(v14) >= 0)
    v8 = v13;
  v9 = (char *)v8 + v6;
  v10 = *(_DWORD *)(v9 - 6);
  v11 = *((unsigned __int16 *)v9 - 1);
  if (v10 != 1684960610 || v11 != 25964)
  {
LABEL_36:
    *a2 = 0;
    a2[1] = 0;
    if ((v7 & 0x80) == 0)
      return;
LABEL_42:
    operator delete(v13[0]);
    return;
  }
  v16 = 4;
  strcpy((char *)__p, "main");
  sub_2108ABA8C(a2);
  if (v16 < 0)
  {
    operator delete(__p[0]);
    if ((HIBYTE(v14) & 0x80) != 0)
      goto LABEL_42;
  }
  else if ((HIBYTE(v14) & 0x80) != 0)
  {
    goto LABEL_42;
  }
}

void sub_210977DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  _Unwind_Resume(exception_object);
}

uint64_t sub_210977E30(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &off_24CA81888;
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  return a1;
}

void sub_210977E70(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = &off_24CA81888;
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    (*(void (**)(void))(a1 + 16))();
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210977EC0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = *(void **)(a1 + 96);
  if (v2)
  {
    *(_QWORD *)(a1 + 104) = v2;
    operator delete(v2);
  }
  v3 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = 0;
  if (v3)
    (*(void (**)(void))(a1 + 88))();
  v4 = *(std::__shared_weak_count **)(a1 + 40);
  if (!v4)
    return a1;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return a1;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_210977F50(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_210977F9C(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210977FFC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  std::__assoc_sub_state::wait((std::__assoc_sub_state *)a1);
  if ((*(_BYTE *)(a1 + 136) & 1) == 0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(_QWORD *)(a1 + 248) = v2;
    operator delete(v2);
  }
  v3 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = 0;
  if (v3)
    (*(void (**)(void))(a1 + 232))();
  v4 = *(std::__shared_weak_count **)(a1 + 184);
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
}

void sub_2109780AC(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::exception_ptr v13;

  sub_2109782F8((uint64_t)&v5, a1 + 264);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v13.__ptr_ = 0, v2 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v13), v2))
  {
    sub_2109788B4(2u);
  }
  *(_OWORD *)(a1 + 144) = v5;
  *(_QWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 168) = &off_24CA7AAC0;
  v3 = v8[0];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v3;
  *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)v8 + 10);
  v4 = v10;
  *(_QWORD *)(a1 + 224) = v9;
  *(_QWORD *)(a1 + 232) = v4;
  *(_OWORD *)(a1 + 240) = v11;
  *(_QWORD *)(a1 + 256) = v12;
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock((std::mutex *)(a1 + 24));
}

void sub_21097817C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  std::__assoc_sub_state *v32;
  uint64_t v34;
  uint64_t *p_shared_owners;
  unint64_t v36;
  std::exception_ptr v37;
  std::exception_ptr v38[6];
  std::__shared_weak_count *v39;
  uint64_t v40;
  void (*v41)(void);
  void *v42;
  void *v43;

  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v34 = v40;
  v40 = 0;
  if (v34)
    v41();
  if (v39)
  {
    p_shared_owners = &v39->__shared_owners_;
    do
      v36 = __ldaxr((unint64_t *)p_shared_owners);
    while (__stlxr(v36 - 1, (unint64_t *)p_shared_owners));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  __cxa_begin_catch(a1);
  std::current_exception();
  v37.__ptr_ = v38;
  std::__assoc_sub_state::set_exception(v32, v37);
  std::exception_ptr::~exception_ptr(v38);
  __cxa_end_catch();
}

void sub_210978234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  std::exception_ptr::~exception_ptr(&a10);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_210978250(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if ((*(_BYTE *)(a1 + 136) & 1) == 0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(_QWORD *)(a1 + 248) = v2;
    operator delete(v2);
  }
  v3 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = 0;
  if (v3)
    (*(void (**)(void))(a1 + 232))();
  v4 = *(std::__shared_weak_count **)(a1 + 184);
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
}

void sub_2109782F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  float v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t **v16;
  unint64_t *v17;
  uint64_t v18;
  float v19;
  unsigned int v20;
  unsigned int v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  _BYTE v34[28];
  unsigned int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  _OWORD v40[2];
  uint64_t v41;
  void (*v42)(void);
  __int128 v43;
  uint64_t v44;
  void **v45;
  _QWORD v46[3];
  _QWORD *v47;
  char v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  int v52;
  unint64_t *v53;
  int v54;
  unint64_t v55;
  _BYTE *v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  _QWORD v61[4];

  v61[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  sub_2109800B8(*(uint64_t **)a2, *(_QWORD *)(a2 + 8), v5, v4, (uint64_t)&v36);
  (*(void (**)(_QWORD *__return_ptr))(***(_QWORD ***)(a2 + 16) + 40))(v46);
  if (v48)
  {
    sub_210978910((uint64_t)&v36, (uint64_t)&v56);
    sub_210978910((uint64_t)&v36, (uint64_t)v34);
    *(_QWORD *)&v43 = v46;
    if (v57)
    {
      if (v58 && v59)
      {
        v51 = v60 | ((unint64_t)*(unsigned int *)&v34[20] << 32);
        v49 = 0;
        v50 = v57 - 1;
        v52 = v58 - 1;
        v53 = (unint64_t *)(LODWORD(v61[0]) | ((unint64_t)*(unsigned int *)&v34[24] << 32));
        v54 = v59 - 1;
        v55 = HIDWORD(v61[0]) | ((unint64_t)v35 << 32);
        sub_210978B50(&v49, (uint64_t *)&v43, v56, *(_BYTE **)v34, v6);
      }
    }
  }
  v32 = v36;
  v8 = v38;
  v7 = v39;
  v33 = v37;
  v38 = 0;
  v39 = 0;
  *(_OWORD *)v34 = v40[0];
  *(_OWORD *)&v34[10] = *(_OWORD *)((char *)v40 + 10);
  v9 = v41;
  v10 = v42;
  v41 = 0;
  (*(void (**)(unint64_t *__return_ptr))(***(_QWORD ***)(a2 + 16) + 48))(&v49);
  if (!(_BYTE)v54)
    goto LABEL_35;
  v11 = v53;
  if (v53 == &v49)
  {
    v12 = 4;
    v11 = &v49;
  }
  else
  {
    if (!v53)
      goto LABEL_12;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_12:
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v43 = 0uLL;
  v44 = 0;
  if (v5)
  {
    if (v5 >> 61)
      sub_2108B327C();
    *(_QWORD *)&v43 = operator new(8 * v5);
    *((_QWORD *)&v43 + 1) = v43;
    v44 = v43 + 8 * v5;
    v45 = (void **)&v43;
    v15 = 20 * v5;
    while (1)
    {
      (*(void (**)(unint64_t *__return_ptr))(**(_QWORD **)v14 + 48))(&v49);
      if (!(_BYTE)v54)
        sub_2108B1AA4();
      v16 = (unint64_t **)v61;
      if (v53)
      {
        if (v53 == &v49)
        {
          v61[0] = &v56;
          (*(void (**)(unint64_t *, _BYTE **))(v49 + 24))(&v49, &v56);
          if (!(_BYTE)v54)
            goto LABEL_25;
          goto LABEL_20;
        }
        v61[0] = v53;
        v16 = &v53;
      }
      *v16 = 0;
LABEL_20:
      v17 = v53;
      if (v53 == &v49)
      {
        v17 = &v49;
        v18 = 4;
      }
      else
      {
        if (!v53)
          goto LABEL_25;
        v18 = 5;
      }
      (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_25:
      if (!v61[0])
        sub_2108B30F0();
      v19 = (*(float (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)v61[0] + 48))(v61[0], v4, v13 + 32);
      v21 = v20;
      v22 = (_QWORD *)v61[0];
      if ((_BYTE **)v61[0] == &v56)
      {
        v22 = &v56;
        v23 = 4;
        goto LABEL_30;
      }
      if (v61[0])
      {
        v23 = 5;
LABEL_30:
        (*(void (**)(void))(*v22 + 8 * v23))();
      }
      v49 = __PAIR64__(v21, LODWORD(v19));
      sub_2109661B4(&v45, &v49);
      v4 += 20;
      v15 -= 20;
      if (!v15)
      {
        v24 = v43;
        v25 = v44;
        goto LABEL_36;
      }
    }
  }
LABEL_35:
  v25 = 0;
  v24 = 0uLL;
LABEL_36:
  *(_OWORD *)a1 = v32;
  *(_QWORD *)(a1 + 16) = v33;
  *(_QWORD *)(a1 + 24) = &off_24CA7AAC0;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v34;
  *(_OWORD *)(a1 + 58) = *(_OWORD *)&v34[10];
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_OWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 112) = v25;
  if (v48)
  {
    v26 = v47;
    if (v47 == v46)
    {
      v27 = 4;
      v26 = v46;
    }
    else
    {
      if (!v47)
        goto LABEL_42;
      v27 = 5;
    }
    (*(void (**)(void))(*v26 + 8 * v27))();
  }
LABEL_42:
  v28 = v41;
  v41 = 0;
  if (v28)
    v42();
  v29 = v39;
  if (v39)
  {
    p_shared_owners = (unint64_t *)&v39->__shared_owners_;
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_21097870C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_2108ABF6C(exception_object);
}

void sub_2109788B4(unsigned int a1)
{
  void *exception;
  const std::error_category *v3;

  exception = __cxa_allocate_exception(0x20uLL);
  v3 = std::future_category();
  MEMORY[0x212BCC468](exception, a1, v3);
  __cxa_throw(exception, MEMORY[0x24BEDB6E0], MEMORY[0x24BEDAD80]);
}

void sub_2109788FC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_210978910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  _BOOL4 v20;
  BOOL v21;
  uint64_t v22;
  int v23;
  uint64_t result;
  uint64_t v25;

  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v5)
      goto LABEL_42;
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    v4 = *(_QWORD *)(a1 + 32);
    v9 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v9)
      goto LABEL_42;
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    do
      v12 = __ldaxr(v10);
    while (__stlxr(v12 - 1, v10));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (*(_BYTE *)(a1 + 73))
      {
LABEL_14:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 96))(&v25, v4, 1);
        if (!*(_BYTE *)(a1 + 72))
          goto LABEL_26;
        goto LABEL_18;
      }
    }
    else
    {
LABEL_42:
      if (*(_BYTE *)(a1 + 73))
        goto LABEL_14;
    }
  }
  v25 = 0;
  if (!*(_BYTE *)(a1 + 72))
    goto LABEL_26;
LABEL_18:
  if (*(_QWORD *)(a1 + 48))
  {
    v13 = *(_QWORD *)(a1 + 32);
    v14 = *(std::__shared_weak_count **)(a1 + 40);
    if (v14)
    {
      v15 = (unint64_t *)&v14->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
      do
        v17 = __ldaxr(v15);
      while (__stlxr(v17 - 1, v15));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v13 + 88))(v13, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
  }
LABEL_26:
  v18 = *(_DWORD *)(a1 + 68);
  v19 = *(unsigned int *)(a1 + 64) | ((unint64_t)*(_QWORD *)a1 << 32);
  v20 = *(_QWORD *)a1 == 0;
  if (!*(_DWORD *)(a1 + 16))
    v20 = 1;
  v21 = !v20;
  if (v20)
    v22 = 0;
  else
    v22 = *(_QWORD *)a1 | (*(_QWORD *)a1 << 32);
  if (v21)
    v23 = *(_DWORD *)(a1 + 16);
  else
    v23 = 0;
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a2 + 8) = v22;
  *(_DWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 20) = v19;
  *(_DWORD *)(a2 + 28) = v18;
  if (v23 * v18 == -1
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  result = v25;
  v25 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void sub_210978B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

void sub_210978B50(_DWORD *a1, uint64_t *a2, _BYTE *a3, _BYTE *a4, float a5)
{
  int v9;
  _BYTE *v10;
  _BYTE *v11;
  unsigned int v12;
  _BYTE *v13;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  float v22;
  float v23;

  if (a1[8])
  {
    v9 = 0;
    do
    {
      v21 = v9;
      v10 = a4;
      v11 = a3;
      if (a1[5])
      {
        v12 = 0;
        v11 = a3;
        v10 = a4;
        do
        {
          v13 = v10;
          v14 = v11;
          if (a1[2])
          {
            v15 = 0;
            v14 = v11;
            v13 = v10;
            while (1)
            {
              v16 = *a2;
              LOBYTE(a5) = *v14;
              v23 = (float)LODWORD(a5);
              v17 = *(_QWORD *)(v16 + 24);
              if (!v17)
                break;
              a5 = (*(float (**)(uint64_t, float *))(*(_QWORD *)v17 + 48))(v17, &v23);
              *v13 = (int)a5;
              v14 += a1[3];
              v13 += a1[4];
              if (++v15 >= a1[2])
                goto LABEL_10;
            }
LABEL_17:
            sub_2108B30F0();
          }
LABEL_10:
          v18 = *a2;
          LOBYTE(a5) = *v14;
          v22 = (float)LODWORD(a5);
          v19 = *(_QWORD *)(v18 + 24);
          if (!v19)
            goto LABEL_17;
          a5 = (*(float (**)(uint64_t, float *))(*(_QWORD *)v19 + 48))(v19, &v22);
          *v13 = (int)a5;
          v11 += a1[6];
          v10 += a1[7];
          ++v12;
        }
        while (v12 < a1[5]);
      }
      sub_210978D10(a1, a2, v11, v10, a5);
      a3 += a1[9];
      a4 += a1[10];
      v9 = v21 + 1;
    }
    while ((v21 + 1) < a1[8]);
  }
  if (a1[5])
  {
    v20 = 0;
    do
    {
      sub_210978D10(a1, a2, a3, a4, a5);
      a3 += a1[6];
      a4 += a1[7];
      ++v20;
    }
    while (v20 < a1[5]);
  }
  sub_210978D10(a1, a2, a3, a4, a5);
}

void sub_210978D10(_DWORD *a1, uint64_t *a2, _BYTE *a3, _BYTE *a4, float a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float v14;
  float v15;

  if (a1[2])
  {
    v9 = 0;
    while (1)
    {
      v10 = *a2;
      LOBYTE(a5) = *a3;
      v15 = (float)LODWORD(a5);
      v11 = *(_QWORD *)(v10 + 24);
      if (!v11)
        break;
      a5 = (*(float (**)(uint64_t, float *))(*(_QWORD *)v11 + 48))(v11, &v15);
      *a4 = (int)a5;
      a3 += a1[3];
      a4 += a1[4];
      if (++v9 >= a1[2])
        goto LABEL_5;
    }
LABEL_7:
    sub_2108B30F0();
  }
LABEL_5:
  v12 = *a2;
  LOBYTE(a5) = *a3;
  v14 = (float)LODWORD(a5);
  v13 = *(_QWORD *)(v12 + 24);
  if (!v13)
    goto LABEL_7;
  *a4 = (int)(*(float (**)(uint64_t, float *))(*(_QWORD *)v13 + 48))(v13, &v14);
}

uint64_t sub_210978DDC(uint64_t a1)
{
  std::__thread_specific_ptr<std::__thread_struct> *v2;
  const void *v3;
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  const void *v7;
  uint64_t v8;

  v2 = std::__thread_local_data();
  v3 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  v4 = *(void (**)(_QWORD *))(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 24) + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(void (**)(_QWORD *))(*v6 + v4);
  v4(v6);
  v7 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  if (v7)
  {
    v8 = MEMORY[0x212BCC4F8]();
    MEMORY[0x212BCC6FC](v8, 0x20C4093837F09);
  }
  MEMORY[0x212BCC6FC](a1, 0xA0C40F20CD8FBLL);
  return 0;
}

void sub_210978E74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_210978E88((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_210978E88(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    v3 = *v2;
    *v2 = 0;
    if (v3)
    {
      v4 = MEMORY[0x212BCC4F8]();
      MEMORY[0x212BCC6FC](v4, 0x20C4093837F09);
    }
    MEMORY[0x212BCC6FC](v2, 0xA0C40F20CD8FBLL);
  }
  return a1;
}

void sub_210978EF0(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_210978F3C(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210978F9C(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::exception_ptr v13;

  sub_2109782F8((uint64_t)&v5, a1 + 264);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v13.__ptr_ = 0, v2 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v13), v2))
  {
    sub_2109788B4(2u);
  }
  *(_OWORD *)(a1 + 144) = v5;
  *(_QWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 168) = &off_24CA7AAC0;
  v3 = v8[0];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v3;
  *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)v8 + 10);
  v4 = v10;
  *(_QWORD *)(a1 + 224) = v9;
  *(_QWORD *)(a1 + 232) = v4;
  *(_OWORD *)(a1 + 240) = v11;
  *(_QWORD *)(a1 + 256) = v12;
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock((std::mutex *)(a1 + 24));
}

void sub_21097906C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  std::__assoc_sub_state *v32;
  uint64_t v34;
  uint64_t *p_shared_owners;
  unint64_t v36;
  std::exception_ptr v37;
  std::exception_ptr v38[6];
  std::__shared_weak_count *v39;
  uint64_t v40;
  void (*v41)(void);
  void *v42;
  void *v43;

  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v34 = v40;
  v40 = 0;
  if (v34)
    v41();
  if (v39)
  {
    p_shared_owners = &v39->__shared_owners_;
    do
      v36 = __ldaxr((unint64_t *)p_shared_owners);
    while (__stlxr(v36 - 1, (unint64_t *)p_shared_owners));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  __cxa_begin_catch(a1);
  std::current_exception();
  v37.__ptr_ = v38;
  std::__assoc_sub_state::set_exception(v32, v37);
  std::exception_ptr::~exception_ptr(v38);
  __cxa_end_catch();
}

void sub_210979124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  std::exception_ptr::~exception_ptr(&a10);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_210979140(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_21097918C(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_2109791EC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  std::__assoc_sub_state::wait((std::__assoc_sub_state *)a1);
  if ((*(_BYTE *)(a1 + 136) & 1) == 0)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(_QWORD *)(a1 + 248) = v2;
    operator delete(v2);
  }
  v3 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = 0;
  if (v3)
    (*(void (**)(void))(a1 + 232))();
  v4 = *(std::__shared_weak_count **)(a1 + 184);
  if (!v4)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 8))(a1);
}

void sub_21097929C(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::exception_ptr v13;

  sub_210979440((uint64_t)&v5, a1 + 264);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v13.__ptr_ = 0, v2 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v13), v2))
  {
    sub_2109788B4(2u);
  }
  *(_OWORD *)(a1 + 144) = v5;
  *(_QWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 168) = &off_24CA7AAC0;
  v3 = v8[0];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v3;
  *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)v8 + 10);
  v4 = v10;
  *(_QWORD *)(a1 + 224) = v9;
  *(_QWORD *)(a1 + 232) = v4;
  *(_OWORD *)(a1 + 240) = v11;
  *(_QWORD *)(a1 + 256) = v12;
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock((std::mutex *)(a1 + 24));
}

void sub_21097936C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  std::__assoc_sub_state *v32;
  uint64_t v34;
  uint64_t *p_shared_owners;
  unint64_t v36;
  std::exception_ptr v37;
  std::exception_ptr v38[6];
  std::__shared_weak_count *v39;
  uint64_t v40;
  void (*v41)(void);
  void *v42;
  void *v43;

  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v34 = v40;
  v40 = 0;
  if (v34)
    v41();
  if (v39)
  {
    p_shared_owners = &v39->__shared_owners_;
    do
      v36 = __ldaxr((unint64_t *)p_shared_owners);
    while (__stlxr(v36 - 1, (unint64_t *)p_shared_owners));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  __cxa_begin_catch(a1);
  std::current_exception();
  v37.__ptr_ = v38;
  std::__assoc_sub_state::set_exception(v32, v37);
  std::exception_ptr::~exception_ptr(v38);
  __cxa_end_catch();
}

void sub_210979424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  std::exception_ptr::~exception_ptr(&a10);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_210979440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  float v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t **v16;
  unint64_t *v17;
  uint64_t v18;
  float v19;
  unsigned int v20;
  unsigned int v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  _BYTE v34[28];
  unsigned int v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  _OWORD v40[2];
  uint64_t v41;
  void (*v42)(void);
  __int128 v43;
  uint64_t v44;
  void **v45;
  _QWORD v46[3];
  _QWORD *v47;
  char v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  int v52;
  unint64_t *v53;
  int v54;
  unint64_t v55;
  _BYTE *v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  _QWORD v61[4];

  v61[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  sub_2109800B8(*(uint64_t **)a2, *(_QWORD *)(a2 + 8), v5, v4, (uint64_t)&v36);
  (*(void (**)(_QWORD *__return_ptr))(***(_QWORD ***)(a2 + 16) + 40))(v46);
  if (v48)
  {
    sub_210978910((uint64_t)&v36, (uint64_t)&v56);
    sub_210978910((uint64_t)&v36, (uint64_t)v34);
    *(_QWORD *)&v43 = v46;
    if (v57)
    {
      if (v58 && v59)
      {
        v51 = v60 | ((unint64_t)*(unsigned int *)&v34[20] << 32);
        v49 = 0;
        v50 = v57 - 1;
        v52 = v58 - 1;
        v53 = (unint64_t *)(LODWORD(v61[0]) | ((unint64_t)*(unsigned int *)&v34[24] << 32));
        v54 = v59 - 1;
        v55 = HIDWORD(v61[0]) | ((unint64_t)v35 << 32);
        sub_210978B50(&v49, (uint64_t *)&v43, v56, *(_BYTE **)v34, v6);
      }
    }
  }
  v32 = v36;
  v8 = v38;
  v7 = v39;
  v33 = v37;
  v38 = 0;
  v39 = 0;
  *(_OWORD *)v34 = v40[0];
  *(_OWORD *)&v34[10] = *(_OWORD *)((char *)v40 + 10);
  v9 = v41;
  v10 = v42;
  v41 = 0;
  (*(void (**)(unint64_t *__return_ptr))(***(_QWORD ***)(a2 + 16) + 48))(&v49);
  if (!(_BYTE)v54)
    goto LABEL_35;
  v11 = v53;
  if (v53 == &v49)
  {
    v12 = 4;
    v11 = &v49;
  }
  else
  {
    if (!v53)
      goto LABEL_12;
    v12 = 5;
  }
  (*(void (**)(void))(*v11 + 8 * v12))();
LABEL_12:
  v13 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v43 = 0uLL;
  v44 = 0;
  if (v5)
  {
    if (v5 >> 61)
      sub_2108B327C();
    *(_QWORD *)&v43 = operator new(8 * v5);
    *((_QWORD *)&v43 + 1) = v43;
    v44 = v43 + 8 * v5;
    v45 = (void **)&v43;
    v15 = 20 * v5;
    while (1)
    {
      (*(void (**)(unint64_t *__return_ptr))(**(_QWORD **)v14 + 48))(&v49);
      if (!(_BYTE)v54)
        sub_2108B1AA4();
      v16 = (unint64_t **)v61;
      if (v53)
      {
        if (v53 == &v49)
        {
          v61[0] = &v56;
          (*(void (**)(unint64_t *, _BYTE **))(v49 + 24))(&v49, &v56);
          if (!(_BYTE)v54)
            goto LABEL_25;
          goto LABEL_20;
        }
        v61[0] = v53;
        v16 = &v53;
      }
      *v16 = 0;
LABEL_20:
      v17 = v53;
      if (v53 == &v49)
      {
        v17 = &v49;
        v18 = 4;
      }
      else
      {
        if (!v53)
          goto LABEL_25;
        v18 = 5;
      }
      (*(void (**)(void))(*v17 + 8 * v18))();
LABEL_25:
      if (!v61[0])
        sub_2108B30F0();
      v19 = (*(float (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)v61[0] + 48))(v61[0], v4, v13 + 32);
      v21 = v20;
      v22 = (_QWORD *)v61[0];
      if ((_BYTE **)v61[0] == &v56)
      {
        v22 = &v56;
        v23 = 4;
        goto LABEL_30;
      }
      if (v61[0])
      {
        v23 = 5;
LABEL_30:
        (*(void (**)(void))(*v22 + 8 * v23))();
      }
      v49 = __PAIR64__(v21, LODWORD(v19));
      sub_2109661B4(&v45, &v49);
      v4 += 20;
      v15 -= 20;
      if (!v15)
      {
        v24 = v43;
        v25 = v44;
        goto LABEL_36;
      }
    }
  }
LABEL_35:
  v25 = 0;
  v24 = 0uLL;
LABEL_36:
  *(_OWORD *)a1 = v32;
  *(_QWORD *)(a1 + 16) = v33;
  *(_QWORD *)(a1 + 24) = &off_24CA7AAC0;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v34;
  *(_OWORD *)(a1 + 58) = *(_OWORD *)&v34[10];
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_OWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 112) = v25;
  if (v48)
  {
    v26 = v47;
    if (v47 == v46)
    {
      v27 = 4;
      v26 = v46;
    }
    else
    {
      if (!v47)
        goto LABEL_42;
      v27 = 5;
    }
    (*(void (**)(void))(*v26 + 8 * v27))();
  }
LABEL_42:
  v28 = v41;
  v41 = 0;
  if (v28)
    v42();
  v29 = v39;
  if (v39)
  {
    p_shared_owners = (unint64_t *)&v39->__shared_owners_;
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_210979854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_2108ABF6C(exception_object);
}

uint64_t sub_2109799FC(uint64_t a1)
{
  std::__thread_specific_ptr<std::__thread_struct> *v2;
  const void *v3;
  void (*v4)(_QWORD *);
  uint64_t v5;
  _QWORD *v6;
  const void *v7;
  uint64_t v8;

  v2 = std::__thread_local_data();
  v3 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  pthread_setspecific(v2->__key_, v3);
  v4 = *(void (**)(_QWORD *))(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = (_QWORD *)(*(_QWORD *)(a1 + 24) + (v5 >> 1));
  if ((v5 & 1) != 0)
    v4 = *(void (**)(_QWORD *))(*v6 + v4);
  v4(v6);
  v7 = *(const void **)a1;
  *(_QWORD *)a1 = 0;
  if (v7)
  {
    v8 = MEMORY[0x212BCC4F8]();
    MEMORY[0x212BCC6FC](v8, 0x20C4093837F09);
  }
  MEMORY[0x212BCC6FC](a1, 0xA0C40F20CD8FBLL);
  return 0;
}

void sub_210979A94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_210978E88((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_210979AA8(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_210979AF4(uint64_t a1)
{
  std::exception_ptr *v2;

  *(_QWORD *)a1 = MEMORY[0x24BEDB850] + 16;
  v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_210979B54(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::exception_ptr v13;

  sub_210979440((uint64_t)&v5, a1 + 264);
  std::mutex::lock((std::mutex *)(a1 + 24));
  if ((*(_BYTE *)(a1 + 136) & 1) != 0
    || (v13.__ptr_ = 0, v2 = *(_QWORD *)(a1 + 16), std::exception_ptr::~exception_ptr(&v13), v2))
  {
    sub_2109788B4(2u);
  }
  *(_OWORD *)(a1 + 144) = v5;
  *(_QWORD *)(a1 + 160) = v6;
  *(_QWORD *)(a1 + 168) = &off_24CA7AAC0;
  v3 = v8[0];
  *(_OWORD *)(a1 + 176) = v7;
  *(_OWORD *)(a1 + 192) = v3;
  *(_OWORD *)(a1 + 202) = *(_OWORD *)((char *)v8 + 10);
  v4 = v10;
  *(_QWORD *)(a1 + 224) = v9;
  *(_QWORD *)(a1 + 232) = v4;
  *(_OWORD *)(a1 + 240) = v11;
  *(_QWORD *)(a1 + 256) = v12;
  *(_DWORD *)(a1 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(a1 + 88));
  std::mutex::unlock((std::mutex *)(a1 + 24));
}

void sub_210979C24(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  std::__assoc_sub_state *v32;
  uint64_t v34;
  uint64_t *p_shared_owners;
  unint64_t v36;
  std::exception_ptr v37;
  std::exception_ptr v38[6];
  std::__shared_weak_count *v39;
  uint64_t v40;
  void (*v41)(void);
  void *v42;
  void *v43;

  if (v42)
  {
    v43 = v42;
    operator delete(v42);
  }
  v34 = v40;
  v40 = 0;
  if (v34)
    v41();
  if (v39)
  {
    p_shared_owners = &v39->__shared_owners_;
    do
      v36 = __ldaxr((unint64_t *)p_shared_owners);
    while (__stlxr(v36 - 1, (unint64_t *)p_shared_owners));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  __cxa_begin_catch(a1);
  std::current_exception();
  v37.__ptr_ = v38;
  std::__assoc_sub_state::set_exception(v32, v37);
  std::exception_ptr::~exception_ptr(v38);
  __cxa_end_catch();
}

void sub_210979CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
  std::exception_ptr::~exception_ptr(&a10);
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_210979CF8(_QWORD *a1, int a2, int a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;
  __int16 v12;
  int v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  if (a2 == 2)
  {
    v5 = (_QWORD *)operator new();
    sub_21097A4AC(v5, a3);
  }
  else if (a2 == 1)
  {
    v5 = (_QWORD *)operator new();
    sub_21097A37C(v5, a3);
  }
  else
  {
    v5 = (_QWORD *)operator new();
    sub_21097A24C(v5, a3);
  }
  *a1 = v5;
  v6 = (_QWORD *)operator new();
  *v6 = &off_24CA81A50;
  v6[1] = 0;
  v6[2] = 0;
  v6[3] = v5;
  a1[1] = v6;
  v7 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 24))(*a1);
  v8 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*a1 + 32))(*a1);
  v11 = 0x100000000;
  v12 = 0;
  v16 = 0;
  v17 = 0;
  v13 = 1086324736;
  v14 = 1;
  v15 = v7;
  v18 = 1;
  v19 = v8;
  v20 = 3;
  v9 = (uint64_t *)operator new();
  sub_210980F7C(v9, (uint64_t)&v11);
  a1[2] = v9;
  a1[3] = sub_2109824A0;
  return a1;
}

void sub_210979E64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BCC6FC](v1, 0x10B3C40BF87A6DDLL);
  _Unwind_Resume(a1);
}

void sub_210979E90(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x212BCC6FC](v2, 0x1020C40E94EDECFLL);
  sub_2108A894C(v1);
  _Unwind_Resume(a1);
}

void sub_210979EBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_210979ED8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108A894C(v1);
  _Unwind_Resume(a1);
}

void sub_210979EF0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_210979F14(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_210979F2C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d2lf7feature16IDescriptorModelEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature16IDescriptorModelEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d2lf7feature16IDescriptorModelEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d2lf7feature16IDescriptorModelEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_210979F9C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;

  if (result)
  {
    v1 = result;
    v2 = *(_QWORD *)(result + 16);
    *(_QWORD *)(v1 + 16) = 0;
    if (v2)
      (*(void (**)(void))(v1 + 24))();
    v3 = *(std::__shared_weak_count **)(v1 + 8);
    if (v3)
    {
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      do
        v5 = __ldaxr(p_shared_owners);
      while (__stlxr(v5 - 1, p_shared_owners));
      if (!v5)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    JUMPOUT(0x212BCC6FCLL);
  }
  return result;
}

uint64_t sub_21097A02C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 136) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    if ((*(char *)(a1 + 103) & 0x80000000) == 0)
    {
LABEL_4:
      if ((*(char *)(a1 + 79) & 0x80000000) == 0)
        goto LABEL_5;
LABEL_9:
      operator delete(*(void **)(a1 + 56));
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
        return a1;
      goto LABEL_10;
    }
  }
  else if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 79) < 0)
    goto LABEL_9;
LABEL_5:
  if ((*(char *)(a1 + 55) & 0x80000000) == 0)
    return a1;
LABEL_10:
  operator delete(*(void **)(a1 + 32));
  return a1;
}

uint64_t sub_21097A0BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *(_QWORD *)a1 = &off_24CA81AA0;
  v2 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    *(_QWORD *)(v2 + 16) = 0;
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *(std::__shared_weak_count **)(v2 + 8);
    if (v4)
    {
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    MEMORY[0x212BCC6FC](v2, 0x60C40CE5A77A8);
  }
  if (*(_BYTE *)(a1 + 144) && *(char *)(a1 + 143) < 0)
  {
    operator delete(*(void **)(a1 + 120));
    if ((*(char *)(a1 + 111) & 0x80000000) == 0)
    {
LABEL_13:
      if ((*(char *)(a1 + 87) & 0x80000000) == 0)
        goto LABEL_14;
LABEL_18:
      operator delete(*(void **)(a1 + 64));
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        return a1;
      goto LABEL_19;
    }
  }
  else if ((*(char *)(a1 + 111) & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(*(void **)(a1 + 88));
  if (*(char *)(a1 + 87) < 0)
    goto LABEL_18;
LABEL_14:
  if ((*(char *)(a1 + 63) & 0x80000000) == 0)
    return a1;
LABEL_19:
  operator delete(*(void **)(a1 + 40));
  return a1;
}

void sub_21097A1DC(uint64_t a1)
{
  sub_21097A0BC(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21097A200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_2108B3FF0((uint64_t)&v3, (uint64_t *)(**(_QWORD **)(a1 + 152) + 8));
  v1 = v3;
  sub_2108B55B4((uint64_t)&v3);
  return v1;
}

_QWORD *sub_21097A24C(_QWORD *a1, int a2)
{
  _BYTE v4[32];
  void *v5;
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *__p;
  char v12;
  char v13;

  sub_210971684(a2, (uint64_t)v4);
  *a1 = &off_24CA81AA0;
  sub_21097A6C8((uint64_t)(a1 + 1), (uint64_t)v4);
  sub_210972308((uint64_t)v4, a1 + 19);
  if (v13 && v12 < 0)
    operator delete(__p);
  if ((v10 & 0x80000000) == 0)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
LABEL_9:
    operator delete(v7);
    if ((v6 & 0x80000000) == 0)
      goto LABEL_7;
LABEL_10:
    operator delete(v5);
    goto LABEL_7;
  }
  operator delete(v9);
  if (v8 < 0)
    goto LABEL_9;
LABEL_6:
  if (v6 < 0)
    goto LABEL_10;
LABEL_7:
  *a1 = &off_24CA81AF8;
  return a1;
}

void sub_21097A310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_21097A02C(v9);
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097A32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097A340(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD v5[2];

  v4 = *(_QWORD *)(a1 + 152);
  v5[0] = &off_24CA829E0;
  v5[1] = a3;
  sub_21097090C(v4, a2, (uint64_t)v5, 1, a4);
}

_QWORD *sub_21097A37C(_QWORD *a1, int a2)
{
  _BYTE v4[32];
  void *v5;
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *__p;
  char v12;
  char v13;

  sub_210972030(a2, (uint64_t)v4);
  *a1 = &off_24CA81AA0;
  sub_21097A6C8((uint64_t)(a1 + 1), (uint64_t)v4);
  sub_210972308((uint64_t)v4, a1 + 19);
  if (v13 && v12 < 0)
    operator delete(__p);
  if ((v10 & 0x80000000) == 0)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
LABEL_9:
    operator delete(v7);
    if ((v6 & 0x80000000) == 0)
      goto LABEL_7;
LABEL_10:
    operator delete(v5);
    goto LABEL_7;
  }
  operator delete(v9);
  if (v8 < 0)
    goto LABEL_9;
LABEL_6:
  if (v6 < 0)
    goto LABEL_10;
LABEL_7:
  *a1 = &off_24CA81B50;
  return a1;
}

void sub_21097A440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_21097A02C(v9);
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097A45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097A470(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD v5[2];

  v4 = *(_QWORD *)(a1 + 152);
  v5[0] = &off_24CA829E0;
  v5[1] = a3;
  sub_210970FC8(v4, a2, (uint64_t)v5, 1, a4);
}

_QWORD *sub_21097A4AC(_QWORD *a1, int a2)
{
  _BYTE v4[32];
  void *v5;
  char v6;
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *__p;
  char v12;
  char v13;

  sub_2109721AC(a2, (uint64_t)v4);
  *a1 = &off_24CA81AA0;
  sub_21097A6C8((uint64_t)(a1 + 1), (uint64_t)v4);
  sub_210972308((uint64_t)v4, a1 + 19);
  if (v13 && v12 < 0)
    operator delete(__p);
  if ((v10 & 0x80000000) == 0)
  {
    if ((v8 & 0x80000000) == 0)
      goto LABEL_6;
LABEL_9:
    operator delete(v7);
    if ((v6 & 0x80000000) == 0)
      goto LABEL_7;
LABEL_10:
    operator delete(v5);
    goto LABEL_7;
  }
  operator delete(v9);
  if (v8 < 0)
    goto LABEL_9;
LABEL_6:
  if (v6 < 0)
    goto LABEL_10;
LABEL_7:
  *a1 = &off_24CA81BA8;
  return a1;
}

void sub_21097A570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_21097A02C(v9);
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097A58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097A5A0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = &off_24CA81C60;
  *(_QWORD *)(a1 + 8) = sub_21097A5C4;
  *(_QWORD *)(a1 + 24) = a1;
  *(_BYTE *)(a1 + 32) = 1;
}

float32x2_t sub_21097A5C4(float32x2_t *a1, uint32x2_t *a2)
{
  __asm { FMOV            V2.2S, #-1.0 }
  return vadd_f32(vdiv_f32(vadd_f32(*a1, *a1), vadd_f32(vcvt_f32_u32(*a2), _D2)), _D2);
}

void sub_21097A5EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  _QWORD v7[2];

  v6 = *(_QWORD *)(a1 + 152);
  v7[0] = &off_24CA829E0;
  v7[1] = a5;
  sub_21097483C(v6, a2, a3, a4, (uint64_t)v7, 1, a6);
}

uint64_t sub_21097A628(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

uint64_t sub_21097A630(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

void sub_21097A638(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[32] = 0;
}

void sub_21097A644(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[32] = 0;
}

void sub_21097A654(uint64_t a1)
{
  sub_21097A0BC(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21097A67C(uint64_t a1)
{
  sub_21097A0BC(a1);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21097A6A4(uint64_t a1)
{
  sub_21097A0BC(a1);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21097A6C8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  if (*(char *)(a2 + 55) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
    v6 = a1 + 56;
    if ((*(char *)(a2 + 79) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
    v6 = a1 + 56;
    if ((*(char *)(a2 + 79) & 0x80000000) == 0)
    {
LABEL_3:
      v7 = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(v6 + 16) = *(_QWORD *)(a2 + 72);
      *(_OWORD *)v6 = v7;
      goto LABEL_6;
    }
  }
  sub_2108B314C((_BYTE *)v6, *(void **)(a2 + 56), *(_QWORD *)(a2 + 64));
LABEL_6:
  if (*(char *)(a2 + 103) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 80), *(void **)(a2 + 80), *(_QWORD *)(a2 + 88));
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v8;
  }
  v9 = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 136) = 0;
  if (*(_BYTE *)(a2 + 136))
  {
    if (*(char *)(a2 + 135) < 0)
    {
      sub_2108B314C((_BYTE *)(a1 + 112), *(void **)(a2 + 112), *(_QWORD *)(a2 + 120));
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = v10;
    }
    *(_BYTE *)(a1 + 136) = 1;
  }
  return a1;
}

void sub_21097A7EC(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;

  if (v1[136])
  {
    if (v1[135] < 0)
      operator delete(*v5);
  }
  if (v1[103] < 0)
  {
    operator delete(*v4);
    if ((v1[79] & 0x80000000) == 0)
    {
LABEL_6:
      if ((v1[55] & 0x80000000) == 0)
        goto LABEL_7;
      goto LABEL_10;
    }
  }
  else if ((v1[79] & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(*v3);
  if ((v1[55] & 0x80000000) == 0)
LABEL_7:
    _Unwind_Resume(exception_object);
LABEL_10:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_21097A87C()
{
  JUMPOUT(0x212BCC6FCLL);
}

_QWORD *sub_21097A890(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24CA81C60;
  result[1] = v3;
  return result;
}

uint64_t sub_21097A8C4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24CA81C60;
  a2[1] = v2;
  return result;
}

uint64_t sub_21097A8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(a2, a3);
}

uint64_t sub_21097A8F0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "PFN4cv3d3esn4math6VectorIfLj2EEERKNS_2lf8KeypointERKNS0_3arr5SizeTILj2ELNS8_8SizeTypeE0EvEEE")
    return a1 + 8;
  if (((v3 & (unint64_t)"PFN4cv3d3esn4math6VectorIfLj2EEERKNS_2lf8KeypointERKNS0_3arr5SizeTILj2ELNS8_8SizeTypeE0EvEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "PFN4cv3d3esn4math6VectorIfLj2EEERKNS_2lf8KeypointERKNS0_3arr5SizeTILj2ELNS8_8SizeTypeE0EvEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"PFN4cv3d3esn4math6VectorIfLj2EEERKNS_2lf8KeypointERKNS0_3arr5SizeTILj2ELNS8_8SizeTypeE0EvEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_21097A95C()
{
  return &unk_24CA81CE0;
}

uint64_t sub_21097A968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v7[2];
  uint64_t v8;
  char v9;
  void (**v10)();
  uint64_t v11;
  int v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int16 v26;
  void *__p[3];
  char v28;
  uint64_t v29;
  __int16 v30;
  __int128 __dst;
  uint64_t v32;
  char v33;
  uint64_t v34[15];

  LOBYTE(v7[0]) = 0;
  v9 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v7, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v7 = *(_OWORD *)a3;
      v8 = *(_QWORD *)(a3 + 16);
    }
    v9 = 1;
    LOBYTE(__dst) = 0;
    v33 = 0;
    if (SHIBYTE(v8) < 0)
    {
      sub_2108B314C(&__dst, v7[0], (unint64_t)v7[1]);
    }
    else
    {
      __dst = *(_OWORD *)v7;
      v32 = v8;
    }
    v33 = 1;
  }
  else
  {
    LOBYTE(__dst) = 0;
    v33 = 0;
  }
  sub_21097B1D4((uint64_t)v34, a2, (uint64_t)&__dst);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)__dst);
  LOBYTE(__p[0]) = 0;
  v28 = 0;
  v30 = 0;
  v29 = 0;
  LOBYTE(v30) = *(_BYTE *)(a2 + 104);
  LODWORD(v29) = *(_DWORD *)(a2 + 108);
  v10 = off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v11, v34);
  v10 = (void (**)())&off_24CA82960;
  sub_210957BA4((uint64_t)&v22, (uint64_t)__p);
  v25 = v29;
  v26 = v30;
  if (v28 && __p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  sub_2108B55B4((uint64_t)v34);
  v5 = v11;
  *(_QWORD *)a1 = off_24CA82AC0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 40) = v14;
  v13 = 0uLL;
  *(_OWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 64) = v16;
  v16 = 0;
  v14 = 0;
  v15 = 0uLL;
  *(_OWORD *)(a1 + 72) = v17;
  *(_QWORD *)(a1 + 88) = v18;
  v17 = 0uLL;
  v18 = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (v21)
  {
    *(_OWORD *)(a1 + 96) = v19;
    *(_QWORD *)(a1 + 112) = v20;
    v20 = 0;
    v19 = 0uLL;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_QWORD *)a1 = &off_24CA82960;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  if (v24)
  {
    *(_OWORD *)(a1 + 128) = v22;
    *(_QWORD *)(a1 + 144) = v23;
    v23 = 0;
    v22 = 0uLL;
    *(_BYTE *)(a1 + 152) = 1;
    *(_QWORD *)(a1 + 160) = v25;
    *(_WORD *)(a1 + 168) = v26;
    v10 = off_24CA82AC0;
    sub_2108B55B4((uint64_t)&v11);
    if (!v9)
      goto LABEL_24;
  }
  else
  {
    *(_QWORD *)(a1 + 160) = v25;
    *(_WORD *)(a1 + 168) = v26;
    v10 = off_24CA82AC0;
    sub_2108B55B4((uint64_t)&v11);
    if (!v9)
      goto LABEL_24;
  }
  if (SHIBYTE(v8) < 0)
    operator delete(v7[0]);
LABEL_24:
  *(_QWORD *)a1 = &off_24CA81808;
  return a1;
}

void sub_21097AC14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  if (*(_BYTE *)(v41 - 200) && *(char *)(v41 - 201) < 0)
    operator delete(*(void **)(v41 - 224));
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21097AC98(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_21097ACF0(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &off_24CA82960;
  if (*(_BYTE *)(a1 + 152))
  {
    v2 = *(void **)(a1 + 128);
    if (v2)
    {
      *(_QWORD *)(a1 + 136) = v2;
      operator delete(v2);
    }
  }
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

uint64_t sub_21097AD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  void *v9[2];
  uint64_t v10;
  char v11;
  void (**v12)();
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int8 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  void *__p;
  char v37;
  char v38;
  __int128 __dst;
  uint64_t v40;
  char v41;
  uint64_t v42[15];

  LOBYTE(v9[0]) = 0;
  v11 = 0;
  if (*(_BYTE *)(a3 + 24))
  {
    if (*(char *)(a3 + 23) < 0)
    {
      sub_2108B314C(v9, *(void **)a3, *(_QWORD *)(a3 + 8));
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)a3;
      v10 = *(_QWORD *)(a3 + 16);
    }
    v11 = 1;
    LOBYTE(__dst) = 0;
    v41 = 0;
    if (SHIBYTE(v10) < 0)
    {
      sub_2108B314C(&__dst, v9[0], (unint64_t)v9[1]);
    }
    else
    {
      __dst = *(_OWORD *)v9;
      v40 = v10;
    }
    v41 = 1;
  }
  else
  {
    LOBYTE(__dst) = 0;
    v41 = 0;
  }
  sub_21097B1D4((uint64_t)v42, a2, (uint64_t)&__dst);
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)__dst);
  if (*(_DWORD *)(a2 + 108)
    && sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/DescriptorModelDefinition.cpp", 89, (uint64_t)"param.device == DeviceType::Any", 31, (uint64_t)"Only DeviceType::Any supported for EspressoV2", 45, (void (*)(void **))sub_2109EDDB4))
  {
    abort();
  }
  LOBYTE(v31) = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  LOBYTE(__p) = 0;
  v38 = 0;
  v12 = off_24CA82AC0;
  sub_2108B3FF0((uint64_t)&v13, v42);
  v12 = (void (**)())off_24CA829B8;
  sub_210964BC8(&v24, &v31);
  if (v38 && v37 < 0)
    operator delete(__p);
  if (v33 && v32 < 0)
    operator delete((void *)v31);
  sub_2108B55B4((uint64_t)v42);
  v5 = v13;
  *(_QWORD *)a1 = off_24CA82AC0;
  *(_QWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 40) = v16;
  v15 = 0uLL;
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  v18 = 0;
  v16 = 0;
  v17 = 0uLL;
  *(_OWORD *)(a1 + 72) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  v19 = 0uLL;
  v20 = 0;
  *(_BYTE *)(a1 + 96) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  if (v23)
  {
    *(_OWORD *)(a1 + 96) = v21;
    *(_QWORD *)(a1 + 112) = v22;
    v22 = 0;
    v21 = 0uLL;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_QWORD *)a1 = off_24CA829B8;
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  v6 = v26;
  if (v26)
  {
    *(_OWORD *)(a1 + 128) = v24;
    *(_QWORD *)(a1 + 144) = v25;
    v25 = 0;
    v24 = 0uLL;
    *(_BYTE *)(a1 + 152) = 1;
  }
  v7 = v27;
  *(_BYTE *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 160) = v7;
  *(_BYTE *)(a1 + 200) = 0;
  if (v30)
  {
    *(_OWORD *)(a1 + 176) = v28;
    *(_QWORD *)(a1 + 192) = v29;
    v29 = 0;
    v28 = 0uLL;
    *(_BYTE *)(a1 + 200) = 1;
  }
  v12 = (void (**)())off_24CA829B8;
  if (v6 && SHIBYTE(v25) < 0)
    operator delete((void *)v24);
  v12 = off_24CA82AC0;
  sub_2108B55B4((uint64_t)&v13);
  if (v11 && SHIBYTE(v10) < 0)
    operator delete(v9[0]);
  *(_QWORD *)a1 = off_24CA81830;
  return a1;
}

void sub_21097B050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  uint64_t v42;

  if (*(_BYTE *)(v42 - 184) && *(char *)(v42 - 185) < 0)
    operator delete(*(void **)(v42 - 208));
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21097B0CC(uint64_t a1)
{
  *(_QWORD *)a1 = off_24CA829B8;
  if (*(_BYTE *)(a1 + 200) && *(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    if (!*(_BYTE *)(a1 + 152))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 152))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
LABEL_7:
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  return a1;
}

void sub_21097B148(uint64_t a1)
{
  *(_QWORD *)a1 = off_24CA829B8;
  if (*(_BYTE *)(a1 + 200) && *(char *)(a1 + 199) < 0)
  {
    operator delete(*(void **)(a1 + 176));
    if (!*(_BYTE *)(a1 + 152))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 152))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 151) < 0)
    operator delete(*(void **)(a1 + 128));
LABEL_7:
  *(_QWORD *)a1 = off_24CA82AC0;
  sub_2108B55B4(a1 + 8);
  JUMPOUT(0x212BCC6FCLL);
}

void sub_21097B1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  void **v25;
  int v26;
  void **v27;
  void **v28;
  void *v29;
  char *v30;
  void *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 __p;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  void *v56;
  void **v57;
  _BYTE *v58;
  void *v59;
  char *v60;
  unint64_t v61;
  void *v62[2];
  uint64_t v63;
  unsigned __int8 v64;
  int v65;
  char v66;
  int v67;
  char v68;
  int v69;
  char v70;
  int v71;
  char v72;
  int v73;
  char v74;
  int v75;
  char v76;
  char v77;
  _BYTE v78[24];
  _BYTE *v79;
  char v80;
  _BYTE v81[24];
  _BYTE *v82;
  char v83;
  __int128 __dst;
  uint64_t v85;
  char v86;
  int v87;
  char v88;
  int v89;
  char v90;
  int v91;
  char v92;
  int v93;
  char v94;
  int v95;
  char v96;
  int v97;
  char v98;
  char v99;
  _BYTE v100[24];
  _BYTE *v101;
  char v102;
  _BYTE v103[24];
  _BYTE *v104;
  char v105;
  uint64_t v106;

  v106 = *MEMORY[0x24BDAC8D0];
  sub_21097A6C8((uint64_t)&v42, a2);
  if (!*(_BYTE *)(a3 + 24))
  {
    a3 = a2 + 80;
    if (*(char *)(a2 + 103) < 0)
    {
      v6 = (unint64_t *)(a2 + 88);
      goto LABEL_7;
    }
LABEL_5:
    __dst = *(_OWORD *)a3;
    v85 = *(_QWORD *)(a3 + 16);
    goto LABEL_8;
  }
  if ((*(char *)(a3 + 23) & 0x80000000) == 0)
    goto LABEL_5;
  v6 = (unint64_t *)(a3 + 8);
LABEL_7:
  sub_2108B314C(&__dst, *(void **)a3, *v6);
LABEL_8:
  if (SHIBYTE(v51) < 0)
    operator delete((void *)__p);
  __p = __dst;
  v51 = v85;
  v7 = v44;
  if (v52)
    v8 = v44;
  else
    v8 = 1;
  if (v52)
    v9 = 17;
  else
    v9 = 65;
  if (v52)
    v10 = v45;
  else
    v10 = v44;
  if (v52)
    v11 = 1;
  else
    v11 = v45;
  if (SHIBYTE(v47) < 0)
  {
    sub_2108B314C(&__dst, (void *)v46, *((unint64_t *)&v46 + 1));
  }
  else
  {
    __dst = v46;
    v85 = v47;
  }
  v87 = v9;
  v86 = 1;
  v88 = 1;
  v89 = 1;
  v90 = 1;
  v91 = v8 * v7;
  v92 = 1;
  v93 = v10;
  v94 = 1;
  v95 = 1;
  v96 = 1;
  v97 = v11;
  v98 = 1;
  v99 = 1;
  v100[0] = 0;
  v102 = 0;
  v103[0] = 0;
  v105 = 0;
  sub_2108B43C0((char *)v62, &__dst);
  sub_210958984((uint64_t)&v59, (uint64_t)v62, 1uLL);
  if (v83)
  {
    v12 = v82;
    if (v82 == v81)
    {
      v13 = 4;
      v12 = v81;
    }
    else
    {
      if (!v82)
        goto LABEL_31;
      v13 = 5;
    }
    (*(void (**)(void))(*v12 + 8 * v13))();
  }
LABEL_31:
  if (v80)
  {
    v14 = v79;
    if (v79 == v78)
    {
      v15 = 4;
      v14 = v78;
      goto LABEL_36;
    }
    if (v79)
    {
      v15 = 5;
LABEL_36:
      (*(void (**)(void))(*v14 + 8 * v15))();
    }
  }
  if (v64 && SHIBYTE(v63) < 0)
    operator delete(v62[0]);
  if (!v55)
    goto LABEL_62;
  v16 = v45;
  if (SHIBYTE(v54) < 0)
  {
    sub_2108B314C(v62, (void *)v53, *((unint64_t *)&v53 + 1));
  }
  else
  {
    *(_OWORD *)v62 = v53;
    v63 = v54;
  }
  v64 = 1;
  v65 = 65;
  v66 = 1;
  v67 = 1;
  v68 = 1;
  v69 = 1;
  v70 = 1;
  v71 = 1;
  v72 = 1;
  v73 = 2;
  v74 = 1;
  v75 = v16;
  v76 = 1;
  v77 = 1;
  v78[0] = 0;
  v80 = 0;
  v81[0] = 0;
  v83 = 0;
  v17 = v60;
  if ((unint64_t)v60 >= v61)
  {
    v18 = sub_210967F78((__int128 **)&v59, (__int128 *)v62);
  }
  else
  {
    sub_2108B43C0(v60, (__int128 *)v62);
    v18 = v17 + 168;
  }
  v60 = v18;
  if (v83)
  {
    v19 = v82;
    if (v82 == v81)
    {
      v20 = 4;
      v19 = v81;
    }
    else
    {
      if (!v82)
        goto LABEL_53;
      v20 = 5;
    }
    (*(void (**)(void))(*v19 + 8 * v20))();
  }
LABEL_53:
  if (v80)
  {
    v21 = v79;
    if (v79 == v78)
    {
      v22 = 4;
      v21 = v78;
      goto LABEL_58;
    }
    if (v79)
    {
      v22 = 5;
LABEL_58:
      (*(void (**)(void))(*v21 + 8 * v22))();
    }
  }
  if (v64 && SHIBYTE(v63) < 0)
    operator delete(v62[0]);
LABEL_62:
  if (SHIBYTE(v49) < 0)
  {
    sub_2108B314C(v62, (void *)v48, *((unint64_t *)&v48 + 1));
  }
  else
  {
    *(_OWORD *)v62 = v48;
    v63 = v49;
  }
  v64 = 1;
  v57 = 0;
  v58 = 0;
  v56 = 0;
  v23 = operator new(0x20uLL);
  v24 = v23;
  v56 = v23;
  v57 = (void **)v23;
  v25 = (void **)(v23 + 32);
  v58 = v23 + 32;
  *v23 = 0;
  v23[24] = 0;
  if (SHIBYTE(v63) < 0)
  {
    sub_2108B314C(v23, v62[0], (unint64_t)v62[1]);
    v26 = v64;
    v24[24] = 1;
    v57 = v25;
    if (v26 && SHIBYTE(v63) < 0)
      operator delete(v62[0]);
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v62;
    *((_QWORD *)v23 + 2) = v63;
    v23[24] = 1;
    v57 = (void **)(v23 + 32);
  }
  *(_QWORD *)a1 = v42;
  *(_DWORD *)(a1 + 8) = v43;
  if (SHIBYTE(v51) < 0)
  {
    sub_2108B314C((_BYTE *)(a1 + 16), (void *)__p, *((unint64_t *)&__p + 1));
  }
  else
  {
    *(_OWORD *)(a1 + 16) = __p;
    *(_QWORD *)(a1 + 32) = v51;
  }
  sub_2108B4278(a1 + 40, (uint64_t *)&v59);
  sub_2108B458C((_QWORD *)(a1 + 64), (uint64_t *)&v56);
  *(_BYTE *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  v27 = (void **)v56;
  if (v56)
  {
    v28 = v57;
    v29 = v56;
    if (v57 != v56)
    {
      do
      {
        if (*((_BYTE *)v28 - 8) && *((char *)v28 - 9) < 0)
          operator delete(*(v28 - 4));
        v28 -= 4;
      }
      while (v28 != v27);
      v29 = v56;
    }
    v57 = v27;
    operator delete(v29);
  }
  v30 = (char *)v59;
  if (!v59)
    goto LABEL_103;
  v31 = v59;
  if (v60 == v59)
    goto LABEL_102;
  v32 = v60 - 80;
  do
  {
    if (!v32[72])
      goto LABEL_92;
    v34 = (char *)*((_QWORD *)v32 + 8);
    if (v32 + 40 == v34)
    {
      v34 = v32 + 40;
      v35 = 4;
    }
    else
    {
      if (!v34)
        goto LABEL_92;
      v35 = 5;
    }
    (*(void (**)(void))(*(_QWORD *)v34 + 8 * v35))();
LABEL_92:
    if (v32[32])
    {
      v36 = (char *)*((_QWORD *)v32 + 3);
      if (v32 == v36)
      {
        v36 = v32;
        v37 = 4;
        goto LABEL_97;
      }
      if (v36)
      {
        v37 = 5;
LABEL_97:
        (*(void (**)(void))(*(_QWORD *)v36 + 8 * v37))();
      }
    }
    if (*(v32 - 64) && *(v32 - 65) < 0)
      operator delete(*((void **)v32 - 11));
    v33 = v32 - 88;
    v32 -= 168;
  }
  while (v33 != v30);
  v31 = v59;
LABEL_102:
  v60 = v30;
  operator delete(v31);
LABEL_103:
  if (v105)
  {
    v38 = v104;
    if (v104 == v103)
    {
      v39 = 4;
      v38 = v103;
LABEL_108:
      (*(void (**)(void))(*v38 + 8 * v39))();
    }
    else if (v104)
    {
      v39 = 5;
      goto LABEL_108;
    }
  }
  if (v102)
  {
    v40 = v101;
    if (v101 == v100)
    {
      v41 = 4;
      v40 = v100;
LABEL_114:
      (*(void (**)(void))(*v40 + 8 * v41))();
    }
    else if (v101)
    {
      v41 = 5;
      goto LABEL_114;
    }
  }
  if (v86 && SHIBYTE(v85) < 0)
    operator delete((void *)__dst);
  if (v55)
  {
    if (SHIBYTE(v54) < 0)
      operator delete((void *)v53);
  }
  if (SHIBYTE(v51) < 0)
  {
    operator delete((void *)__p);
    if (SHIBYTE(v49) < 0)
      goto LABEL_126;
LABEL_123:
    if (SHIBYTE(v47) < 0)
LABEL_127:
      operator delete((void *)v46);
  }
  else
  {
    if ((SHIBYTE(v49) & 0x80000000) == 0)
      goto LABEL_123;
LABEL_126:
    operator delete((void *)v48);
    if (SHIBYTE(v47) < 0)
      goto LABEL_127;
  }
}

void sub_21097B888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39)
{
  uint64_t v39;

  sub_2108B418C(&a30);
  sub_2109588CC(v39 - 256);
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097B9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  sub_2109588CC((uint64_t)&a33);
  sub_2109588CC(v33 - 256);
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097B9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2109588CC(v9 - 256);
  sub_21097A02C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_21097B9F8()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/IDescriptorModel.cpp", 35, (uint64_t)&unk_210A01421, 0, (uint64_t)"Not implemented for this model", 30, (void (*)(void **))sub_2109EDDB4);
  abort();
}

void sub_21097BA34()
{
  sub_2109ED958("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/LearnedFeatures/DescriptorExtraction/src/IDescriptorModel.cpp", 41, (uint64_t)&unk_210A01421, 0, (uint64_t)"Not implemented for this model", 30, (void (*)(void **))sub_2109EDDB4);
  abort();
}

uint64_t sub_21097BA70(uint64_t a1, unsigned int a2)
{
  _QWORD *v4;
  int32x2_t v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v18;
  unsigned int v20;
  float v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  float *v25;
  int32x4_t v26;
  int32x4_t v31;
  unsigned int v32;
  uint64_t v33;
  int32x4_t v34;
  uint64_t v35;
  float *v36;
  int32x4_t v37;
  float *v38;
  float32x4_t v39;
  uint64_t v40;
  float32x4x2_t v41;

  LODWORD(v40) = a2;
  HIDWORD(v40) = a2;
  *(_QWORD *)a1 = off_24CA81D40;
  *(_QWORD *)(a1 + 8) = &off_24CA81E60;
  v4 = (_QWORD *)(a1 + 16);
  sub_21097C4B8(&v40, (uint64_t *)(a1 + 16));
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (!v7)
      goto LABEL_11;
  }
  else
  {
LABEL_6:
    if (!v7)
      goto LABEL_11;
  }
  if (*(_BYTE *)(a1 + 137))
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 96))(&v40, *(_QWORD *)(a1 + 16), 1);
    v11 = *(_QWORD *)(a1 + 120);
    v12 = *(_QWORD *)(a1 + 40);
    v13 = HIDWORD(v11);
    if (!*(_BYTE *)(a1 + 136))
      goto LABEL_14;
    goto LABEL_12;
  }
LABEL_11:
  v40 = 0;
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = HIDWORD(v11);
  if (!*(_BYTE *)(a1 + 136))
    goto LABEL_14;
LABEL_12:
  if (v12)
  {
    (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)*v4 + 88))(*v4, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/Image.h:1190");
    v12 = *(_QWORD *)(a1 + 40);
    LODWORD(v13) = *(_DWORD *)(a1 + 124);
  }
LABEL_14:
  v14 = *(unsigned int *)(a1 + 116);
  v15 = v14 * v13;
  v16 = (2 * v11);
  if (v15)
    _ZF = (_DWORD)v16 == 0;
  else
    _ZF = 1;
  if (!_ZF)
  {
    v20 = 0;
    v21 = 2.0 / (float)((float)a2 + -1.0);
    v22 = v12 + 4 * v15;
    v23 = 8 * (v11 & 0x7FFFFFFF) - 8;
    v24 = (v23 >> 3) + 1;
    v25 = (float *)(v12 + 32);
    v26.i64[0] = 0x400000004;
    v26.i64[1] = 0x400000004;
    __asm { FMOV            V4.4S, #-1.0 }
    v31.i64[0] = 0x800000008;
    v31.i64[1] = 0x800000008;
    do
    {
      *(float *)v5.i32 = (float)(v21 * (float)v20) + -1.0;
      if (v23 >= 0x38)
      {
        v33 = v12 + 8 * (v24 & 0x3FFFFFFFFFFFFFF8);
        v34 = vdupq_lane_s32(v5, 0);
        v35 = v24 & 0x3FFFFFFFFFFFFFF8;
        v36 = v25;
        v37 = (int32x4_t)xmmword_210A19730;
        do
        {
          v38 = v36 - 8;
          v39 = vaddq_f32(vmulq_n_f32(vcvtq_f32_u32((uint32x4_t)v37), v21), _Q4);
          vst2q_f32(v38, *(float32x4x2_t *)(&v34 - 1));
          v41.val[0] = vaddq_f32(vmulq_n_f32(vcvtq_f32_u32((uint32x4_t)vaddq_s32(v37, v26)), v21), _Q4);
          v41.val[1] = (float32x4_t)v34;
          vst2q_f32(v36, v41);
          v37 = vaddq_s32(v37, v31);
          v36 += 16;
          v35 -= 8;
        }
        while (v35);
        v32 = v24 & 0xFFFFFFF8;
        if (v24 == (v24 & 0x3FFFFFFFFFFFFFF8))
          goto LABEL_22;
      }
      else
      {
        v32 = 0;
        v33 = v12;
      }
      do
      {
        *(float *)v33 = (float)(v21 * (float)v32) + -1.0;
        *(_DWORD *)(v33 + 4) = v5.i32[0];
        v33 += 8;
        ++v32;
      }
      while (v33 != v12 + 4 * v16);
LABEL_22:
      v12 += 4 * v14;
      ++v20;
      v25 += v14;
    }
    while (v12 != v22);
  }
  v18 = v40;
  v40 = 0;
  if (v18)
    (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  return a1;
}

void sub_21097BCDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108A894C(v1);
  _Unwind_Resume(a1);
}

void sub_21097BCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  sub_2108A894C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_21097BD1C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21097BD8C(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t (**v11)();
  uint64_t v12;
  std::__shared_weak_count *v13;

  *a4 = &off_24CA81E60;
  sub_21097C4B8(a1 + 30, a4 + 1);
  v11 = &off_24CA7D530;
  sub_21097CE08((uint64_t)a4, &v12);
  (*(void (**)(_DWORD *, uint64_t (***)(), uint64_t, uint64_t))(*(_QWORD *)a1 + 16))(a1, &v11, a2, a3);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_21097BE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  sub_2108FDE70((uint64_t)&a9);
  sub_2108A894C(v9);
  _Unwind_Resume(a1);
}

void sub_21097BE90(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2108A894C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21097BEA4(uint64_t a1, uint64_t a2, float *a3, uint64_t a4)
{
  float v7;
  float v8;
  __float2 v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float *v30;
  float *v31;
  uint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  float v38;
  int v39;
  int v40;
  int v41;
  float *v42;
  float *v43;
  float *v44;
  float *v45;
  int v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (*(_BYTE *)(a4 + 4))
    v7 = *(float *)a4;
  else
    v7 = 1.0;
  v8 = a3[3];
  v9 = __sincosf_stret(a3[2]);
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v10)
    goto LABEL_9;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldxr(p_shared_owners);
  while (__stxr(v13 + 1, p_shared_owners));
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    if (!v11)
    {
LABEL_14:
      v51 = 0;
      v15 = *(_QWORD *)(a2 + 8);
      if (!v15)
        goto LABEL_31;
LABEL_15:
      v16 = *(std::__shared_weak_count **)(a2 + 16);
      if (!v16)
        goto LABEL_27;
      v17 = (unint64_t *)&v16->__shared_owners_;
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 1, v17));
      do
        v19 = __ldaxr(v17);
      while (__stlxr(v19 - 1, v17));
      if (v19)
      {
        v15 = *(_QWORD *)(a2 + 8);
        v20 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v20)
          goto LABEL_27;
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
        v15 = *(_QWORD *)(a2 + 8);
        v20 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v20)
          goto LABEL_27;
      }
      v21 = (unint64_t *)&v20->__shared_owners_;
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 1, v21));
      do
        v23 = __ldaxr(v21);
      while (__stlxr(v23 - 1, v21));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
        if (!*(_BYTE *)(a2 + 73))
          goto LABEL_31;
LABEL_28:
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v15 + 96))(&v50, v15, 1);
        if (!*(_DWORD *)(a1 + 96))
          goto LABEL_57;
        goto LABEL_32;
      }
LABEL_27:
      if (!*(_BYTE *)(a2 + 73))
        goto LABEL_31;
      goto LABEL_28;
    }
  }
  else
  {
LABEL_9:
    if (!v11)
      goto LABEL_14;
  }
  if (!*(_BYTE *)(a1 + 137))
    goto LABEL_14;
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 96))(&v51, *(_QWORD *)(a1 + 16), 1);
  v15 = *(_QWORD *)(a2 + 8);
  if (v15)
    goto LABEL_15;
LABEL_31:
  v50 = 0;
  if (!*(_DWORD *)(a1 + 96))
    goto LABEL_57;
LABEL_32:
  v24 = *(_DWORD *)(a1 + 100);
  if (v24)
  {
    v25 = *(_DWORD *)(a1 + 104);
    if (v25)
    {
      v26 = *(unsigned int *)(a1 + 112);
      v27 = *(unsigned int *)(a1 + 116);
      v28 = *(unsigned int *)(a2 + 48);
      v29 = *(unsigned int *)(a2 + 52);
      v30 = *(float **)(a1 + 40);
      if (*(_BYTE *)(a1 + 136) && v30)
      {
        (*(void (**)(_QWORD, uint64_t, const char *))(**(_QWORD **)(a1 + 16) + 88))(*(_QWORD *)(a1 + 16), 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/Image.h:1190");
        v30 = *(float **)(a1 + 40);
      }
      v31 = *(float **)(a2 + 24);
      if (*(_BYTE *)(a2 + 72) && v31)
      {
        v49 = v28;
        v32 = v26;
        v33 = *(_QWORD *)(a2 + 8);
        v34 = *(std::__shared_weak_count **)(a2 + 16);
        if (v34)
        {
          v35 = (unint64_t *)&v34->__shared_owners_;
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
          do
            v37 = __ldaxr(v35);
          while (__stlxr(v37 - 1, v35));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v33 + 88))(v33, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_LearnedFeatures/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v26 = v32;
        v28 = v49;
        v31 = *(float **)(a2 + 24);
      }
      v38 = v8 * v7;
      v39 = v24 - 1;
      v40 = v25 - 1;
      if (v25 != 1)
      {
        if (v24 == 1)
        {
          do
          {
            *v31 = *a3 + (float)(v38 * (float)((float)(v9.__cosval * *v30) - (float)(v9.__sinval * v30[1])));
            v31[1] = a3[1] + (float)(v38 * (float)((float)(v9.__sinval * *v30) + (float)(v9.__cosval * v30[1])));
            v30 += v27;
            v31 += v29;
            --v40;
          }
          while (v40);
LABEL_56:
          *v31 = *a3 + (float)(v38 * (float)((float)(v9.__cosval * *v30) - (float)(v9.__sinval * v30[1])));
          v31[1] = a3[1] + (float)(v38 * (float)((float)(v9.__sinval * *v30) + (float)(v9.__cosval * v30[1])));
          goto LABEL_57;
        }
        v41 = 0;
        v42 = v30 + 1;
        v43 = v31 + 1;
        do
        {
          v44 = v43;
          v45 = v42;
          v46 = v24 - 1;
          do
          {
            *(v44 - 1) = *a3 + (float)(v38 * (float)((float)(v9.__cosval * *(v45 - 1)) - (float)(v9.__sinval * *v45)));
            *v44 = a3[1] + (float)(v38 * (float)((float)(v9.__sinval * *(v45 - 1)) + (float)(v9.__cosval * *v45)));
            v45 += v26;
            v44 += v28;
            --v46;
          }
          while (v46);
          *(v44 - 1) = *a3 + (float)(v38 * (float)((float)(v9.__cosval * *(v45 - 1)) - (float)(v9.__sinval * *v45)));
          *v44 = a3[1] + (float)(v38 * (float)((float)(v9.__sinval * *(v45 - 1)) + (float)(v9.__cosval * *v45)));
          v30 += v27;
          v31 += v29;
          ++v41;
          v42 += v27;
          v43 += v29;
        }
        while (v41 != v40);
      }
      if (v24 != 1)
      {
        do
        {
          *v31 = *a3 + (float)(v38 * (float)((float)(v9.__cosval * *v30) - (float)(v9.__sinval * v30[1])));
          v31[1] = a3[1] + (float)(v38 * (float)((float)(v9.__sinval * *v30) + (float)(v9.__cosval * v30[1])));
          v30 += v26;
          v31 += v28;
          --v39;
        }
        while (v39);
      }
      goto LABEL_56;
    }
  }
LABEL_57:
  v47 = v50;
  v50 = 0;
  if (v47)
    (*(void (**)(uint64_t))(*(_QWORD *)v47 + 8))(v47);
  result = v51;
  v51 = 0;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

