void sub_22402B8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402B8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402B8FC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned __int8 *v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  size_t v17;
  char *v18;
  int v19;
  int v20;
  unsigned __int8 *v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  char *v33;
  unsigned int v34;
  int v35;
  char *v36;
  unsigned int v37;
  int v38;
  unint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  unint64_t v43;
  int v44;
  unint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  unsigned __int8 *v51;
  int v52;
  unint64_t v53;
  _QWORD *v54;
  float *v55;
  unint64_t v56;
  unint64_t v57;
  float **v58;
  unint64_t v59;
  _QWORD *exception;
  __int128 v61;
  uint64_t v62;
  _OWORD v63[2];

  *(_QWORD *)&v63[0] = "vertices";
  *((_QWORD *)&v63[0] + 1) = 8;
  *(_QWORD *)&v63[1] = a2;
  sub_22402C1BC(a1, (uint64_t)v63);
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "colors_type";
  *(_QWORD *)(a1 + 96) = 11;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 32;
  sub_22402C318((uint64_t *)a1, (_DWORD **)v63);
  *(_QWORD *)&v63[0] = "colors";
  *((_QWORD *)&v63[0] + 1) = 6;
  *(_QWORD *)&v63[1] = a2 + 40;
  sub_22402C1BC(a1, (uint64_t)v63);
  v7 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "normals_type";
  *(_QWORD *)(a1 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 72;
  sub_22402C318((uint64_t *)a1, (_DWORD **)v63);
  *(_QWORD *)&v63[0] = "normals";
  *((_QWORD *)&v63[0] + 1) = 7;
  *(_QWORD *)&v63[1] = a2 + 80;
  sub_22402C1BC(a1, (uint64_t)v63);
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "semantics_type";
  *(_QWORD *)(a1 + 96) = 14;
  if (!v8)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 112;
  sub_22402C318((uint64_t *)a1, (_DWORD **)v63);
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "semantics";
  *(_QWORD *)(a1 + 96) = 9;
  if (v9)
  {
    v10 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
    v11 = *v10;
    if (v11 != 2)
      goto LABEL_9;
LABEL_13:
    v12 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v10 + 1) + 8) - **((_QWORD **)v10 + 1)) >> 4;
    v14 = (uint64_t *)(a2 + 128);
    v13 = *(_QWORD *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 120);
    v16 = v13 - v15;
    v17 = v12 - (v13 - v15);
    if (v12 > v13 - v15)
      goto LABEL_19;
    goto LABEL_16;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v10 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
  v11 = *v10;
  if (v11 == 2)
    goto LABEL_13;
LABEL_9:
  if (v11 == 1)
  {
    v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v10 + 1) + 8) - **((_QWORD **)v10 + 1)) >> 3);
    v14 = (uint64_t *)(a2 + 128);
    v13 = *(_QWORD *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 120);
    v16 = v13 - v15;
    v17 = v12 - (v13 - v15);
    if (v12 > v13 - v15)
      goto LABEL_19;
  }
  else
  {
    if (!v11)
    {
      v12 = 0;
      v14 = (uint64_t *)(a2 + 128);
      v13 = *(_QWORD *)(a2 + 128);
      v15 = *(_QWORD *)(a2 + 120);
      v16 = v13 - v15;
      goto LABEL_16;
    }
    v12 = 1;
    v14 = (uint64_t *)(a2 + 128);
    v13 = *(_QWORD *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 120);
    v16 = v13 - v15;
    v17 = 1 - (v13 - v15);
    if (v13 == v15)
    {
LABEL_19:
      sub_22317F2E8(a2 + 120, v17);
      v15 = *(_QWORD *)(a2 + 120);
      v13 = *v14;
      goto LABEL_20;
    }
  }
LABEL_16:
  if (v16 > v12)
  {
    v13 = v15 + v12;
    *v14 = v15 + v12;
  }
LABEL_20:
  *(_QWORD *)&v63[0] = v13 - v15;
  *((_QWORD *)&v63[0] + 1) = v15;
  v18 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2245449F8(v18, (uint64_t)v63);
  v19 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "materials_type";
  *(_QWORD *)(a1 + 96) = 14;
  if (!v19)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 152;
  sub_22402C318((uint64_t *)a1, (_DWORD **)v63);
  v20 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "materials";
  *(_QWORD *)(a1 + 96) = 9;
  if (v20)
  {
    v21 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
    v22 = *v21;
    if (v22 != 2)
      goto LABEL_24;
LABEL_28:
    v23 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v21 + 1) + 8) - **((_QWORD **)v21 + 1)) >> 4;
    v25 = (uint64_t *)(a2 + 168);
    v24 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 160);
    v27 = v24 - v26;
    v28 = v23 - (v24 - v26);
    if (v23 > v24 - v26)
      goto LABEL_34;
    goto LABEL_31;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v21 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
  v22 = *v21;
  if (v22 == 2)
    goto LABEL_28;
LABEL_24:
  if (v22 == 1)
  {
    v23 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v21 + 1) + 8) - **((_QWORD **)v21 + 1)) >> 3);
    v25 = (uint64_t *)(a2 + 168);
    v24 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 160);
    v27 = v24 - v26;
    v28 = v23 - (v24 - v26);
    if (v23 > v24 - v26)
      goto LABEL_34;
  }
  else
  {
    if (!v22)
    {
      v23 = 0;
      v25 = (uint64_t *)(a2 + 168);
      v24 = *(_QWORD *)(a2 + 168);
      v26 = *(_QWORD *)(a2 + 160);
      v27 = v24 - v26;
      goto LABEL_31;
    }
    v23 = 1;
    v25 = (uint64_t *)(a2 + 168);
    v24 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 160);
    v27 = v24 - v26;
    v28 = 1 - (v24 - v26);
    if (v24 == v26)
    {
LABEL_34:
      sub_22317F2E8(a2 + 160, v28);
      v26 = *(_QWORD *)(a2 + 160);
      v24 = *v25;
      goto LABEL_35;
    }
  }
LABEL_31:
  if (v27 > v23)
  {
    v24 = v26 + v23;
    *v25 = v26 + v23;
  }
LABEL_35:
  *(_QWORD *)&v63[0] = v24 - v26;
  *((_QWORD *)&v63[0] + 1) = v26;
  v29 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2245449F8(v29, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "faces";
  *((_QWORD *)&v63[0] + 1) = 5;
  *(_QWORD *)&v63[1] = a2 + 192;
  sub_22402C508(a1, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "edges";
  *((_QWORD *)&v63[0] + 1) = 5;
  *(_QWORD *)&v63[1] = a2 + 224;
  sub_22402C678(a1, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "tex_coords";
  *((_QWORD *)&v63[0] + 1) = 10;
  *(_QWORD *)&v63[1] = a2 + 256;
  sub_22402C7CC(a1, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "tex_faces";
  *((_QWORD *)&v63[0] + 1) = 9;
  *(_QWORD *)&v63[1] = a2 + 288;
  sub_22402C508(a1, (uint64_t)v63);
  if (a3 < 2)
    return;
  v30 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "box";
  *(_QWORD *)(a1 + 96) = 3;
  if (v30)
  {
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
      goto LABEL_38;
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245448E0((uint64_t *)a1))
    {
LABEL_38:
      v61 = 0uLL;
      v62 = 0;
      v31 = *(_DWORD *)(a1 + 8);
      sub_224544628(a1);
      v32 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v32)
        *(_BYTE *)(a1 + 104) = 1;
      v33 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      *(_QWORD *)&v63[0] = 0;
      sub_22451CAD4(v33, v63);
      v34 = v63[0];
      if (!HIDWORD(*(_QWORD *)&v63[0]))
      {
        if (v31 < 1)
          goto LABEL_50;
        if (v31 != 2 || LODWORD(v63[0]) < 2)
        {
LABEL_48:
          if (v34 >= 2)
            v34 = 2;
LABEL_50:
          if (v34 < 2)
          {
            memset(v63, 0, 24);
            v42 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "min";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v42)
              *(_BYTE *)(a1 + 104) = 1;
            v43 = sub_2245448E0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545EA4(v43, (float *)v63);
            v44 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "max";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v44)
              *(_BYTE *)(a1 + 104) = 1;
            v45 = sub_2245448E0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545EA4(v45, (float *)((unint64_t)v63 | 0xC));
            v46 = v63[0];
            HIDWORD(v46) = HIDWORD(v63[0]);
            v61 = v46;
            LODWORD(v46) = vdup_lane_s32(*(int32x2_t *)((char *)v63 + 12), 1).u32[0];
            DWORD1(v46) = DWORD1(v63[1]);
            v62 = v46;
          }
          else
          {
            v38 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "min";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v38)
              *(_BYTE *)(a1 + 104) = 1;
            v39 = sub_2245448E0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545EA4(v39, (float *)&v61);
            v40 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "max";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v40)
              *(_BYTE *)(a1 + 104) = 1;
            v41 = sub_2245448E0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545EA4(v41, (float *)((unint64_t)&v61 | 0xC));
          }
          v47 = *(_QWORD *)(a1 + 48);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(v47 - 8);
          v48 = *(_QWORD *)(a1 + 72);
          *(_QWORD *)(a1 + 112) = *(_QWORD *)(v48 - 8);
          *(_QWORD *)(a1 + 48) = v47 - 8;
          *(_QWORD *)(a1 + 72) = v48 - 8;
          *(_OWORD *)(a2 + 320) = v61;
          *(_QWORD *)(a2 + 336) = v62;
          *(_BYTE *)(a2 + 344) = 1;
          if (a3 >= 4)
            goto LABEL_67;
          return;
        }
        v35 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "min_version";
        *(_QWORD *)(a1 + 96) = 11;
        if (!v35)
          *(_BYTE *)(a1 + 104) = 1;
        v36 = (char *)sub_2245448E0((uint64_t *)a1);
        ++*(_QWORD *)(a1 + 112);
        *(_QWORD *)&v63[0] = 0;
        sub_22451CAD4(v36, v63);
        v37 = v63[0];
        if (!HIDWORD(*(_QWORD *)&v63[0]))
        {
          if (LODWORD(v63[0]) >= 3)
          {
            sub_22402C90C();
            sub_22455C3A8((std::string *)&xmmword_2540CECC8, v37, 2u);
          }
          goto LABEL_48;
        }
      }
      exception = __cxa_allocate_exception(8uLL);
      *exception = &off_24EC7AC38;
      __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
    }
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 344))
    *(_BYTE *)(a2 + 344) = 0;
  if (a3 >= 4)
  {
LABEL_67:
    v49 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "confidences_type";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v49)
      *(_BYTE *)(a1 + 104) = 1;
    *(_QWORD *)&v63[0] = a2 + 348;
    sub_22402C318((uint64_t *)a1, (_DWORD **)v63);
    v50 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "confidences";
    *(_QWORD *)(a1 + 96) = 11;
    if (!v50)
      *(_BYTE *)(a1 + 104) = 1;
    v51 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
    v52 = *v51;
    if (v52 == 2)
    {
      v53 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v51 + 1) + 8) - **((_QWORD **)v51 + 1)) >> 4;
      v55 = *(float **)(a2 + 352);
      v56 = (uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2;
      v57 = v53 - v56;
      if (v53 > v56)
        goto LABEL_82;
    }
    else if (v52 == 1)
    {
      v53 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v51 + 1) + 8) - **((_QWORD **)v51 + 1)) >> 3);
      v55 = *(float **)(a2 + 352);
      v56 = (uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2;
      v57 = v53 - v56;
      if (v53 > v56)
        goto LABEL_82;
    }
    else
    {
      if (!*v51)
      {
        v53 = 0;
        v54 = (_QWORD *)(a2 + 360);
        v55 = *(float **)(a2 + 352);
        if (!((uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2))
          goto LABEL_83;
        goto LABEL_80;
      }
      v53 = 1;
      v55 = *(float **)(a2 + 352);
      v56 = (uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2;
      v57 = 1 - v56;
      if (!v56)
      {
LABEL_82:
        v58 = (float **)(a2 + 352);
        sub_22317F4CC((uint64_t)v58, v57);
        v55 = *v58;
        goto LABEL_83;
      }
    }
    v54 = (_QWORD *)(a2 + 360);
    if (v56 <= v53)
    {
LABEL_83:
      v59 = sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545EA4(v59, v55);
      return;
    }
LABEL_80:
    *v54 = &v55[v53];
    goto LABEL_83;
  }
}

void sub_22402C1BC(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  float **v8;
  float *v9;
  float *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(uint64_t **)(a2 + 16);
  sub_224544628(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 3);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = (float **)(v4 + 1);
      v9 = (float *)v4[1];
      v10 = (float *)*v4;
      v11 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *v4) >> 2);
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = (float **)(v4 + 1);
  v9 = (float *)v4[1];
  v10 = (float *)*v4;
  v11 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *v4) >> 2);
  if (v7 > v11)
  {
    sub_2232F52A0(v4, v7 - v11);
    v10 = (float *)*v4;
    v9 = (float *)v4[1];
    goto LABEL_15;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = &v10[3 * v7];
    *v8 = v9;
  }
LABEL_15:
  while (v10 != v9)
  {
    v12 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v12, v10);
    v10 += 3;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402C318(uint64_t *a1, _DWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_2241492E4((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_22402C47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_22402C508(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(uint64_t **)(a2 + 16);
  sub_224544628(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 3);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = (unint64_t *)(v4 + 1);
      v9 = v4[1];
      v10 = *v4;
      v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *v4) >> 2);
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = (unint64_t *)(v4 + 1);
  v9 = v4[1];
  v10 = *v4;
  v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *v4) >> 2);
  if (v7 > v11)
  {
    sub_2232F5570(v4, v7 - v11);
    v10 = *v4;
    v9 = v4[1];
    goto LABEL_14;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = v10 + 12 * v7;
    *v8 = v9;
  }
LABEL_14:
  while (v10 != v9)
  {
    v15[0] = 3;
    v15[1] = v10;
    v12 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v12, (uint64_t)v15);
    v10 += 12;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402C678(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(uint64_t **)(a2 + 16);
  sub_224544628(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 3);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = v4 + 1;
      v9 = v4[1];
      v10 = *v4;
      v11 = (v9 - *v4) >> 3;
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = v4 + 1;
  v9 = v4[1];
  v10 = *v4;
  v11 = (v9 - *v4) >> 3;
  if (v7 > v11)
  {
    sub_2232F5840((uint64_t)v4, v7 - v11);
    v10 = *v4;
    v9 = v4[1];
    goto LABEL_14;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = v10 + 8 * v7;
    *v8 = v9;
  }
LABEL_14:
  while (v10 != v9)
  {
    v15[0] = 2;
    v15[1] = v10;
    v12 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v12, (uint64_t)v15);
    v10 += 8;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402C7CC(uint64_t a1, uint64_t a2)
{
  int v3;
  float **v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  float **v8;
  float *v9;
  float *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(float ***)(a2 + 16);
  sub_224544628(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 3);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = v4 + 1;
      v9 = v4[1];
      v10 = *v4;
      v11 = ((char *)v9 - (char *)*v4) >> 3;
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = v4 + 1;
  v9 = v4[1];
  v10 = *v4;
  v11 = ((char *)v9 - (char *)*v4) >> 3;
  if (v7 > v11)
  {
    sub_2232F5AE0((uint64_t)v4, v7 - v11);
    v10 = *v4;
    v9 = v4[1];
    goto LABEL_15;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = &v10[2 * v7];
    *v8 = v9;
  }
LABEL_15:
  while (v10 != v9)
  {
    v12 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v12, v10);
    v10 += 2;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402C90C()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2540CEC78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2540CEC78))
  {
    sub_22402C9C4();
    if (byte_2540CECF7 < 0)
    {
      sub_223197FA4(&xmmword_2540CECC8, (void *)qword_2540CECE0, unk_2540CECE8);
    }
    else
    {
      xmmword_2540CECC8 = *(_OWORD *)&qword_2540CECE0;
      qword_2540CECD8 = unk_2540CECF0;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2540CECC8, &dword_22314D000);
    __cxa_guard_release(&qword_2540CEC78);
  }
}

void sub_22402C9AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CEC78);
  _Unwind_Resume(a1);
}

void sub_22402C9C4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_2540CEC80);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2540CEC80))
  {
    sub_22402CAA0(__p);
    sub_2232A0AA8((char *)__p, (std::string *)&qword_2540CECE0);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_2540CECE0, &dword_22314D000);
    __cxa_guard_release(&qword_2540CEC80);
  }
}

void sub_22402CA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CEC80);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CEC80);
  _Unwind_Resume(a1);
}

void sub_22402CAA0(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CEC88);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CEC88))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::mesh::TriMeshBoundingBoxSample<>]", qword_2540CECF8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2540CECF8, &dword_22314D000);
    __cxa_guard_release(&qword_2540CEC88);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2540CEC90);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CEC90))
  {
    v5 = sub_2231A38CC(qword_2540CECF8, "<", 0);
    sub_2231A37C8(qword_2540CECF8, 0, v5, qword_2540CED10);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2540CED10, &dword_22314D000);
    __cxa_guard_release(&qword_2540CEC90);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2540CEC98);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2540CEC98))
  {
    sub_224573040((uint64_t)qword_2540CED10, (uint64_t)&xmmword_2540CED28);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2540CED28, &dword_22314D000);
    __cxa_guard_release(&qword_2540CEC98);
  }
  if (byte_2540CED3F < 0)
  {
    sub_223197FA4(__dst, (void *)xmmword_2540CED28, *((unint64_t *)&xmmword_2540CED28 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2540CED28;
    __dst[2] = unk_2540CED38;
  }
}

void sub_22402CC34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CEC98);
  _Unwind_Resume(a1);
}

void sub_22402CC4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CEC90);
  _Unwind_Resume(a1);
}

void sub_22402CC64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CEC88);
  _Unwind_Resume(a1);
}

uint64_t sub_22402CC7C(uint64_t a1, uint64_t *a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544138(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451C444(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 4)
    v6 = 4;
  else
    v6 = v12;
  if (v6 < 3)
    sub_22402CD78((uint64_t)&v11, a1, a2, v6);
  else
    sub_22402D418(a1, (uint64_t)a2, v6);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

uint64_t *sub_22402CD78(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned int a4)
{
  int v7;
  int v8;
  int v9;
  int v10;
  unsigned __int8 *v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  size_t v17;
  char *v18;
  int v19;
  int v20;
  unsigned __int8 *v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  size_t v27;
  char *v28;
  int v29;
  int v30;
  char *v31;
  int v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *exception;
  __int128 v40;
  uint64_t *v41;
  uint64_t v42[3];
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];
  int v56;
  _BYTE v57[24];
  int v58;
  _BYTE v59[24];
  int v60;
  _BYTE v61[24];
  int v62;
  int v63;
  __int128 v64;
  uint64_t *v65;
  char v66;
  uint64_t v67;

  memset(v42, 0, sizeof(v42));
  v43 = 0;
  memset(v44, 0, sizeof(v44));
  v45 = 0;
  memset(v46, 0, sizeof(v46));
  v47 = 0;
  v48 = 0;
  v50 = 0;
  v49 = 0;
  v51 = 0;
  v53 = 0;
  v52 = 0;
  v54 = 0;
  v63 = 0;
  LOBYTE(v64) = 0;
  v66 = 0;
  memset(v55, 0, sizeof(v55));
  v56 = 0;
  v58 = 0;
  memset(v57, 0, sizeof(v57));
  v60 = 0;
  memset(v59, 0, sizeof(v59));
  memset(v61, 0, sizeof(v61));
  v62 = 0;
  *(_QWORD *)&v40 = "vertices";
  *((_QWORD *)&v40 + 1) = 8;
  v41 = v42;
  sub_22402DC9C(a2, (uint64_t)&v40);
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "colors_type";
  *(_QWORD *)(a2 + 96) = 11;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v40 = (char *)&v43 + 4;
  sub_22402DDE4((uint64_t *)a2, (_DWORD **)&v40);
  *(_QWORD *)&v40 = "colors";
  *((_QWORD *)&v40 + 1) = 6;
  v41 = v44;
  sub_22402DC9C(a2, (uint64_t)&v40);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "normals_type";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v40 = (char *)&v45 + 4;
  sub_22402DDE4((uint64_t *)a2, (_DWORD **)&v40);
  *(_QWORD *)&v40 = "normals";
  *((_QWORD *)&v40 + 1) = 7;
  v41 = v46;
  sub_22402DC9C(a2, (uint64_t)&v40);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "semantics_type";
  *(_QWORD *)(a2 + 96) = 14;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v40 = (char *)&v47 + 4;
  sub_22402DDE4((uint64_t *)a2, (_DWORD **)&v40);
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "semantics";
  *(_QWORD *)(a2 + 96) = 9;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  v11 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a2);
  v12 = *v11;
  if (v12 == 2)
  {
    v13 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v11 + 1) + 8) - **((_QWORD **)v11 + 1)) >> 4;
    v14 = v49;
    v15 = v48;
    v16 = v49 - v48;
    v17 = v13 - (v49 - v48);
    if (v13 <= v49 - v48)
      goto LABEL_18;
    goto LABEL_16;
  }
  if (v12 == 1)
  {
    v13 = *(_QWORD *)(*((_QWORD *)v11 + 1) + 16);
    v14 = v49;
    v15 = v48;
    v16 = v49 - v48;
    v17 = v13 - (v49 - v48);
    if (v13 <= v49 - v48)
      goto LABEL_18;
LABEL_16:
    sub_22317F2E8((uint64_t)&v48, v17);
    v15 = v48;
    v14 = v49;
    goto LABEL_20;
  }
  if (!*v11)
  {
    v13 = 0;
    v14 = v49;
    v15 = v48;
    v16 = v49 - v48;
    goto LABEL_18;
  }
  v13 = 1;
  v14 = v49;
  v15 = v48;
  v16 = v49 - v48;
  v17 = 1 - (v49 - v48);
  if (v49 == v48)
    goto LABEL_16;
LABEL_18:
  if (v16 > v13)
  {
    v14 = v15 + v13;
    v49 = v15 + v13;
  }
LABEL_20:
  *(_QWORD *)&v40 = v14 - v15;
  *((_QWORD *)&v40 + 1) = v15;
  v18 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544508(v18, (uint64_t)&v40);
  v19 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "materials_type";
  *(_QWORD *)(a2 + 96) = 14;
  if (!v19)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v40 = (char *)&v51 + 4;
  sub_22402DDE4((uint64_t *)a2, (_DWORD **)&v40);
  v20 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "materials";
  *(_QWORD *)(a2 + 96) = 9;
  if (!v20)
    *(_BYTE *)(a2 + 104) = 1;
  v21 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a2);
  v22 = *v21;
  if (v22 == 2)
  {
    v23 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v21 + 1) + 8) - **((_QWORD **)v21 + 1)) >> 4;
    v24 = v53;
    v25 = v52;
    v26 = v53 - v52;
    v27 = v23 - (v53 - v52);
    if (v23 <= v53 - v52)
      goto LABEL_33;
    goto LABEL_31;
  }
  if (v22 == 1)
  {
    v23 = *(_QWORD *)(*((_QWORD *)v21 + 1) + 16);
    v24 = v53;
    v25 = v52;
    v26 = v53 - v52;
    v27 = v23 - (v53 - v52);
    if (v23 <= v53 - v52)
      goto LABEL_33;
LABEL_31:
    sub_22317F2E8((uint64_t)&v52, v27);
    v25 = v52;
    v24 = v53;
    goto LABEL_35;
  }
  if (!*v21)
  {
    v23 = 0;
    v24 = v53;
    v25 = v52;
    v26 = v53 - v52;
    goto LABEL_33;
  }
  v23 = 1;
  v24 = v53;
  v25 = v52;
  v26 = v53 - v52;
  v27 = 1 - (v53 - v52);
  if (v53 == v52)
    goto LABEL_31;
LABEL_33:
  if (v26 > v23)
  {
    v24 = v25 + v23;
    v53 = v25 + v23;
  }
LABEL_35:
  *(_QWORD *)&v40 = v24 - v25;
  *((_QWORD *)&v40 + 1) = v25;
  v28 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544508(v28, (uint64_t)&v40);
  *(_QWORD *)&v40 = "faces";
  *((_QWORD *)&v40 + 1) = 5;
  v41 = (uint64_t *)&v55[4];
  sub_22402DFD4(a2, (uint64_t)&v40);
  *(_QWORD *)&v40 = "edges";
  *((_QWORD *)&v40 + 1) = 5;
  v41 = (uint64_t *)&v57[4];
  sub_22402E130(a2, (uint64_t)&v40);
  *(_QWORD *)&v40 = "tex_coords";
  *((_QWORD *)&v40 + 1) = 10;
  v41 = (uint64_t *)&v59[4];
  sub_22402E270(a2, (uint64_t)&v40);
  *(_QWORD *)&v40 = "tex_faces";
  *((_QWORD *)&v40 + 1) = 9;
  v41 = (uint64_t *)&v61[4];
  sub_22402DFD4(a2, (uint64_t)&v40);
  if (a4 >= 2)
  {
    v29 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "box";
    *(_QWORD *)(a2 + 96) = 3;
    if (!v29)
      *(_BYTE *)(a2 + 104) = 1;
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a2))
    {
      v40 = 0uLL;
      v41 = 0;
      sub_224544138(a2);
      v30 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "version";
      *(_QWORD *)(a2 + 96) = 7;
      if (!v30)
        *(_BYTE *)(a2 + 104) = 1;
      v31 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v67 = 0;
      sub_22451C444(v31, &v67);
      if (HIDWORD(v67))
      {
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      v32 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "min";
      *(_QWORD *)(a2 + 96) = 3;
      if (!v32)
        *(_BYTE *)(a2 + 104) = 1;
      v33 = sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      sub_224545240(v33, (float *)&v40);
      v34 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "max";
      *(_QWORD *)(a2 + 96) = 3;
      if (!v34)
        *(_BYTE *)(a2 + 104) = 1;
      v35 = sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      sub_224545240(v35, (float *)&v40 + 3);
      v36 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a2 + 32) = *(_QWORD *)(v36 - 8);
      v37 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a2 + 112) = *(_QWORD *)(v37 - 8);
      *(_QWORD *)(a2 + 48) = v36 - 8;
      *(_QWORD *)(a2 + 72) = v37 - 8;
      v65 = v41;
      v64 = v40;
      v66 = 1;
    }
    else
    {
      ++*(_QWORD *)(a2 + 112);
      if (v66)
        v66 = 0;
    }
    if (a4 >= 4)
    {
      if (!*(_BYTE *)(a2 + 104))
        *(_BYTE *)(a2 + 104) = 1;
      *(_QWORD *)(a2 + 88) = "confidences";
      *(_QWORD *)(a2 + 96) = 11;
    }
  }
  sub_2232F5FB8((uint64_t)&v40, (uint64_t)v42);
  sub_2232F60FC(a3, (uint64_t)&v40);
  sub_2232E7BD4((uint64_t *)&v40);
  return sub_2232F82A0(v42);
}

void sub_22402D3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402D404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402D418(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned __int8 *v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  size_t v17;
  char *v18;
  int v19;
  int v20;
  unsigned __int8 *v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  char *v33;
  unsigned int v34;
  int v35;
  char *v36;
  unsigned int v37;
  int v38;
  unint64_t v39;
  int v40;
  unint64_t v41;
  int v42;
  unint64_t v43;
  int v44;
  unint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  unsigned __int8 *v51;
  int v52;
  unint64_t v53;
  _QWORD *v54;
  float *v55;
  unint64_t v56;
  unint64_t v57;
  float **v58;
  unint64_t v59;
  _QWORD *exception;
  __int128 v61;
  uint64_t v62;
  _OWORD v63[2];

  *(_QWORD *)&v63[0] = "vertices";
  *((_QWORD *)&v63[0] + 1) = 8;
  *(_QWORD *)&v63[1] = a2;
  sub_22402DC9C(a1, (uint64_t)v63);
  v6 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "colors_type";
  *(_QWORD *)(a1 + 96) = 11;
  if (!v6)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 32;
  sub_22402DDE4((uint64_t *)a1, (_DWORD **)v63);
  *(_QWORD *)&v63[0] = "colors";
  *((_QWORD *)&v63[0] + 1) = 6;
  *(_QWORD *)&v63[1] = a2 + 40;
  sub_22402DC9C(a1, (uint64_t)v63);
  v7 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "normals_type";
  *(_QWORD *)(a1 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 72;
  sub_22402DDE4((uint64_t *)a1, (_DWORD **)v63);
  *(_QWORD *)&v63[0] = "normals";
  *((_QWORD *)&v63[0] + 1) = 7;
  *(_QWORD *)&v63[1] = a2 + 80;
  sub_22402DC9C(a1, (uint64_t)v63);
  v8 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "semantics_type";
  *(_QWORD *)(a1 + 96) = 14;
  if (!v8)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 112;
  sub_22402DDE4((uint64_t *)a1, (_DWORD **)v63);
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "semantics";
  *(_QWORD *)(a1 + 96) = 9;
  if (v9)
  {
    v10 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
    v11 = *v10;
    if (v11 != 2)
      goto LABEL_9;
LABEL_13:
    v12 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v10 + 1) + 8) - **((_QWORD **)v10 + 1)) >> 4;
    v14 = (uint64_t *)(a2 + 128);
    v13 = *(_QWORD *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 120);
    v16 = v13 - v15;
    v17 = v12 - (v13 - v15);
    if (v12 > v13 - v15)
      goto LABEL_19;
    goto LABEL_16;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v10 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
  v11 = *v10;
  if (v11 == 2)
    goto LABEL_13;
LABEL_9:
  if (v11 == 1)
  {
    v12 = *(_QWORD *)(*((_QWORD *)v10 + 1) + 16);
    v14 = (uint64_t *)(a2 + 128);
    v13 = *(_QWORD *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 120);
    v16 = v13 - v15;
    v17 = v12 - (v13 - v15);
    if (v12 > v13 - v15)
      goto LABEL_19;
  }
  else
  {
    if (!v11)
    {
      v12 = 0;
      v14 = (uint64_t *)(a2 + 128);
      v13 = *(_QWORD *)(a2 + 128);
      v15 = *(_QWORD *)(a2 + 120);
      v16 = v13 - v15;
      goto LABEL_16;
    }
    v12 = 1;
    v14 = (uint64_t *)(a2 + 128);
    v13 = *(_QWORD *)(a2 + 128);
    v15 = *(_QWORD *)(a2 + 120);
    v16 = v13 - v15;
    v17 = 1 - (v13 - v15);
    if (v13 == v15)
    {
LABEL_19:
      sub_22317F2E8(a2 + 120, v17);
      v15 = *(_QWORD *)(a2 + 120);
      v13 = *v14;
      goto LABEL_20;
    }
  }
LABEL_16:
  if (v16 > v12)
  {
    v13 = v15 + v12;
    *v14 = v15 + v12;
  }
LABEL_20:
  *(_QWORD *)&v63[0] = v13 - v15;
  *((_QWORD *)&v63[0] + 1) = v15;
  v18 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_224544508(v18, (uint64_t)v63);
  v19 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "materials_type";
  *(_QWORD *)(a1 + 96) = 14;
  if (!v19)
    *(_BYTE *)(a1 + 104) = 1;
  *(_QWORD *)&v63[0] = a2 + 152;
  sub_22402DDE4((uint64_t *)a1, (_DWORD **)v63);
  v20 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "materials";
  *(_QWORD *)(a1 + 96) = 9;
  if (v20)
  {
    v21 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
    v22 = *v21;
    if (v22 != 2)
      goto LABEL_24;
LABEL_28:
    v23 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v21 + 1) + 8) - **((_QWORD **)v21 + 1)) >> 4;
    v25 = (uint64_t *)(a2 + 168);
    v24 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 160);
    v27 = v24 - v26;
    v28 = v23 - (v24 - v26);
    if (v23 > v24 - v26)
      goto LABEL_34;
    goto LABEL_31;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v21 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
  v22 = *v21;
  if (v22 == 2)
    goto LABEL_28;
LABEL_24:
  if (v22 == 1)
  {
    v23 = *(_QWORD *)(*((_QWORD *)v21 + 1) + 16);
    v25 = (uint64_t *)(a2 + 168);
    v24 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 160);
    v27 = v24 - v26;
    v28 = v23 - (v24 - v26);
    if (v23 > v24 - v26)
      goto LABEL_34;
  }
  else
  {
    if (!v22)
    {
      v23 = 0;
      v25 = (uint64_t *)(a2 + 168);
      v24 = *(_QWORD *)(a2 + 168);
      v26 = *(_QWORD *)(a2 + 160);
      v27 = v24 - v26;
      goto LABEL_31;
    }
    v23 = 1;
    v25 = (uint64_t *)(a2 + 168);
    v24 = *(_QWORD *)(a2 + 168);
    v26 = *(_QWORD *)(a2 + 160);
    v27 = v24 - v26;
    v28 = 1 - (v24 - v26);
    if (v24 == v26)
    {
LABEL_34:
      sub_22317F2E8(a2 + 160, v28);
      v26 = *(_QWORD *)(a2 + 160);
      v24 = *v25;
      goto LABEL_35;
    }
  }
LABEL_31:
  if (v27 > v23)
  {
    v24 = v26 + v23;
    *v25 = v26 + v23;
  }
LABEL_35:
  *(_QWORD *)&v63[0] = v24 - v26;
  *((_QWORD *)&v63[0] + 1) = v26;
  v29 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_224544508(v29, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "faces";
  *((_QWORD *)&v63[0] + 1) = 5;
  *(_QWORD *)&v63[1] = a2 + 192;
  sub_22402DFD4(a1, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "edges";
  *((_QWORD *)&v63[0] + 1) = 5;
  *(_QWORD *)&v63[1] = a2 + 224;
  sub_22402E130(a1, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "tex_coords";
  *((_QWORD *)&v63[0] + 1) = 10;
  *(_QWORD *)&v63[1] = a2 + 256;
  sub_22402E270(a1, (uint64_t)v63);
  *(_QWORD *)&v63[0] = "tex_faces";
  *((_QWORD *)&v63[0] + 1) = 9;
  *(_QWORD *)&v63[1] = a2 + 288;
  sub_22402DFD4(a1, (uint64_t)v63);
  if (a3 < 2)
    return;
  v30 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "box";
  *(_QWORD *)(a1 + 96) = 3;
  if (v30)
  {
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
      goto LABEL_38;
  }
  else
  {
    *(_BYTE *)(a1 + 104) = 1;
    if (*(_BYTE *)sub_2245443F0((uint64_t *)a1))
    {
LABEL_38:
      v61 = 0uLL;
      v62 = 0;
      v31 = *(_DWORD *)(a1 + 8);
      sub_224544138(a1);
      v32 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v32)
        *(_BYTE *)(a1 + 104) = 1;
      v33 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      *(_QWORD *)&v63[0] = 0;
      sub_22451C444(v33, v63);
      v34 = v63[0];
      if (!HIDWORD(*(_QWORD *)&v63[0]))
      {
        if (v31 < 1)
          goto LABEL_50;
        if (v31 != 2 || LODWORD(v63[0]) < 2)
        {
LABEL_48:
          if (v34 >= 2)
            v34 = 2;
LABEL_50:
          if (v34 < 2)
          {
            memset(v63, 0, 24);
            v42 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "min";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v42)
              *(_BYTE *)(a1 + 104) = 1;
            v43 = sub_2245443F0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545240(v43, (float *)v63);
            v44 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "max";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v44)
              *(_BYTE *)(a1 + 104) = 1;
            v45 = sub_2245443F0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545240(v45, (float *)((unint64_t)v63 | 0xC));
            v46 = v63[0];
            HIDWORD(v46) = HIDWORD(v63[0]);
            v61 = v46;
            LODWORD(v46) = vdup_lane_s32(*(int32x2_t *)((char *)v63 + 12), 1).u32[0];
            DWORD1(v46) = DWORD1(v63[1]);
            v62 = v46;
          }
          else
          {
            v38 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "min";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v38)
              *(_BYTE *)(a1 + 104) = 1;
            v39 = sub_2245443F0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545240(v39, (float *)&v61);
            v40 = *(unsigned __int8 *)(a1 + 104);
            *(_QWORD *)(a1 + 88) = "max";
            *(_QWORD *)(a1 + 96) = 3;
            if (!v40)
              *(_BYTE *)(a1 + 104) = 1;
            v41 = sub_2245443F0((uint64_t *)a1);
            ++*(_QWORD *)(a1 + 112);
            sub_224545240(v41, (float *)((unint64_t)&v61 | 0xC));
          }
          v47 = *(_QWORD *)(a1 + 48);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(v47 - 8);
          v48 = *(_QWORD *)(a1 + 72);
          *(_QWORD *)(a1 + 112) = *(_QWORD *)(v48 - 8);
          *(_QWORD *)(a1 + 48) = v47 - 8;
          *(_QWORD *)(a1 + 72) = v48 - 8;
          *(_OWORD *)(a2 + 320) = v61;
          *(_QWORD *)(a2 + 336) = v62;
          *(_BYTE *)(a2 + 344) = 1;
          if (a3 >= 4)
            goto LABEL_67;
          return;
        }
        v35 = *(unsigned __int8 *)(a1 + 104);
        *(_QWORD *)(a1 + 88) = "min_version";
        *(_QWORD *)(a1 + 96) = 11;
        if (!v35)
          *(_BYTE *)(a1 + 104) = 1;
        v36 = (char *)sub_2245443F0((uint64_t *)a1);
        ++*(_QWORD *)(a1 + 112);
        *(_QWORD *)&v63[0] = 0;
        sub_22451C444(v36, v63);
        v37 = v63[0];
        if (!HIDWORD(*(_QWORD *)&v63[0]))
        {
          if (LODWORD(v63[0]) >= 3)
          {
            sub_22402C90C();
            sub_22455C3A8((std::string *)&xmmword_2540CECC8, v37, 2u);
          }
          goto LABEL_48;
        }
      }
      exception = __cxa_allocate_exception(8uLL);
      *exception = &off_24EC7AC38;
      __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
    }
  }
  ++*(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a2 + 344))
    *(_BYTE *)(a2 + 344) = 0;
  if (a3 >= 4)
  {
LABEL_67:
    v49 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "confidences_type";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v49)
      *(_BYTE *)(a1 + 104) = 1;
    *(_QWORD *)&v63[0] = a2 + 348;
    sub_22402DDE4((uint64_t *)a1, (_DWORD **)v63);
    v50 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "confidences";
    *(_QWORD *)(a1 + 96) = 11;
    if (!v50)
      *(_BYTE *)(a1 + 104) = 1;
    v51 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
    v52 = *v51;
    if (v52 == 2)
    {
      v53 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v51 + 1) + 8) - **((_QWORD **)v51 + 1)) >> 4;
      v55 = *(float **)(a2 + 352);
      v56 = (uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2;
      v57 = v53 - v56;
      if (v53 > v56)
        goto LABEL_82;
    }
    else if (v52 == 1)
    {
      v53 = *(_QWORD *)(*((_QWORD *)v51 + 1) + 16);
      v55 = *(float **)(a2 + 352);
      v56 = (uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2;
      v57 = v53 - v56;
      if (v53 > v56)
        goto LABEL_82;
    }
    else
    {
      if (!*v51)
      {
        v53 = 0;
        v54 = (_QWORD *)(a2 + 360);
        v55 = *(float **)(a2 + 352);
        if (!((uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2))
          goto LABEL_83;
        goto LABEL_80;
      }
      v53 = 1;
      v55 = *(float **)(a2 + 352);
      v56 = (uint64_t)(*(_QWORD *)(a2 + 360) - (_QWORD)v55) >> 2;
      v57 = 1 - v56;
      if (!v56)
      {
LABEL_82:
        v58 = (float **)(a2 + 352);
        sub_22317F4CC((uint64_t)v58, v57);
        v55 = *v58;
        goto LABEL_83;
      }
    }
    v54 = (_QWORD *)(a2 + 360);
    if (v56 <= v53)
    {
LABEL_83:
      v59 = sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_224545240(v59, v55);
      return;
    }
LABEL_80:
    *v54 = &v55[v53];
    goto LABEL_83;
  }
}

void sub_22402DC9C(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  float **v8;
  float *v9;
  float *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(uint64_t **)(a2 + 16);
  sub_224544138(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = *(_QWORD *)(*((_QWORD *)v5 + 1) + 16);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = (float **)(v4 + 1);
      v9 = (float *)v4[1];
      v10 = (float *)*v4;
      v11 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *v4) >> 2);
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = (float **)(v4 + 1);
  v9 = (float *)v4[1];
  v10 = (float *)*v4;
  v11 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v9 - *v4) >> 2);
  if (v7 > v11)
  {
    sub_2232F52A0(v4, v7 - v11);
    v10 = (float *)*v4;
    v9 = (float *)v4[1];
    goto LABEL_15;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = &v10[3 * v7];
    *v8 = v9;
  }
LABEL_15:
  while (v10 != v9)
  {
    v12 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v12, v10);
    v10 += 3;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402DDE4(uint64_t *a1, _DWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_2241492E4((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_22402DF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_22402DFD4(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(uint64_t **)(a2 + 16);
  sub_224544138(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = *(_QWORD *)(*((_QWORD *)v5 + 1) + 16);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = (unint64_t *)(v4 + 1);
      v9 = v4[1];
      v10 = *v4;
      v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *v4) >> 2);
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = (unint64_t *)(v4 + 1);
  v9 = v4[1];
  v10 = *v4;
  v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *v4) >> 2);
  if (v7 > v11)
  {
    sub_2232F5570(v4, v7 - v11);
    v10 = *v4;
    v9 = v4[1];
    goto LABEL_14;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = v10 + 12 * v7;
    *v8 = v9;
  }
LABEL_14:
  while (v10 != v9)
  {
    v15[0] = 3;
    v15[1] = v10;
    v12 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v12, (uint64_t)v15);
    v10 += 12;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402E130(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(uint64_t **)(a2 + 16);
  sub_224544138(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = *(_QWORD *)(*((_QWORD *)v5 + 1) + 16);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = v4 + 1;
      v9 = v4[1];
      v10 = *v4;
      v11 = (v9 - *v4) >> 3;
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = v4 + 1;
  v9 = v4[1];
  v10 = *v4;
  v11 = (v9 - *v4) >> 3;
  if (v7 > v11)
  {
    sub_2232F5840((uint64_t)v4, v7 - v11);
    v10 = *v4;
    v9 = v4[1];
    goto LABEL_14;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = v10 + 8 * v7;
    *v8 = v9;
  }
LABEL_14:
  while (v10 != v9)
  {
    v15[0] = 2;
    v15[1] = v10;
    v12 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v12, (uint64_t)v15);
    v10 += 8;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

void sub_22402E270(uint64_t a1, uint64_t a2)
{
  int v3;
  float **v4;
  unsigned __int8 *v5;
  int v6;
  unint64_t v7;
  float **v8;
  float *v9;
  float *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(float ***)(a2 + 16);
  sub_224544138(a1);
  v5 = *(unsigned __int8 **)(a1 + 32);
  v6 = *v5;
  if (v6 == 2)
  {
    v7 = (uint64_t)(*(_QWORD *)(*((_QWORD *)v5 + 1) + 8) - **((_QWORD **)v5 + 1)) >> 4;
  }
  else if (v6 == 1)
  {
    v7 = *(_QWORD *)(*((_QWORD *)v5 + 1) + 16);
  }
  else
  {
    if (!*v5)
    {
      v7 = 0;
      v8 = v4 + 1;
      v9 = v4[1];
      v10 = *v4;
      v11 = ((char *)v9 - (char *)*v4) >> 3;
      goto LABEL_12;
    }
    v7 = 1;
  }
  v8 = v4 + 1;
  v9 = v4[1];
  v10 = *v4;
  v11 = ((char *)v9 - (char *)*v4) >> 3;
  if (v7 > v11)
  {
    sub_2232F5AE0((uint64_t)v4, v7 - v11);
    v10 = *v4;
    v9 = v4[1];
    goto LABEL_15;
  }
LABEL_12:
  if (v11 > v7)
  {
    v9 = &v10[2 * v7];
    *v8 = v9;
  }
LABEL_15:
  while (v10 != v9)
  {
    v12 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v12, v10);
    v10 += 2;
  }
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(a1 + 48) = v13 - 8;
  *(_QWORD *)(a1 + 72) = v14 - 8;
}

uint64_t *sub_22402E39C(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned int a4)
{
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  unint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  unint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _DWORD *v29;
  unint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  _DWORD *v34;
  unint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  _DWORD *v39;
  unint64_t v40;
  _DWORD *v41;
  _DWORD *v42;
  uint64_t v43;
  _DWORD *v44;
  unint64_t v45;
  _DWORD *v46;
  _DWORD *v47;
  uint64_t v49[48];
  _DWORD *v50;
  _DWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _DWORD *v54;
  _DWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _DWORD *v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _DWORD v69[33];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;

  v50 = 0;
  v51 = 0;
  v53 = 0;
  v52 = 0;
  v54 = 0;
  v55 = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  v59 = 0;
  v61 = 0;
  v60 = 0;
  v62 = 0;
  v64 = 0;
  v63 = 0;
  v65 = 0;
  v67 = 0;
  v66 = 0;
  v68 = 0;
  v69[32] = 0;
  LOBYTE(v70) = 0;
  v73 = 0;
  memset(v69, 0, 28);
  memset(&v69[8], 0, 28);
  memset(&v69[16], 0, 28);
  memset(&v69[24], 0, 28);
  v49[0] = 0;
  sub_224550D98(a2, v49);
  v8 = v50;
  v7 = v51;
  v9 = 0xAAAAAAAAAAAAAAABLL * (v51 - v50);
  if (v49[0] <= v9)
  {
    if (v49[0] < v9)
    {
      v7 = &v50[3 * v49[0]];
      v51 = v7;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)&v50, v49[0] - v9);
    v8 = v50;
    v7 = v51;
  }
  if (v7 != v8)
  {
    v10 = v7;
    do
    {
      sub_224551268(a2, v8);
      v11 = v8 + 1;
      sub_224551268(a2, v11++);
      sub_224551268(a2, v11);
      v8 = v11 + 1;
    }
    while (v8 != v10);
  }
  LODWORD(v49[0]) = 0;
  sub_2245508F0(a2, v49);
  HIDWORD(v53) = v49[0];
  v49[0] = 0xAAAAAAAAAAAAAAABLL * (v55 - v54);
  sub_224550D98(a2, v49);
  v13 = v54;
  v12 = v55;
  v14 = 0xAAAAAAAAAAAAAAABLL * (v55 - v54);
  if (v49[0] <= v14)
  {
    if (v49[0] < v14)
    {
      v12 = &v54[3 * v49[0]];
      v55 = v12;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)&v54, v49[0] - v14);
    v13 = v54;
    v12 = v55;
  }
  if (v12 != v13)
  {
    v15 = v12;
    do
    {
      sub_224551268(a2, v13);
      v16 = v13 + 1;
      sub_224551268(a2, v16++);
      sub_224551268(a2, v16);
      v13 = v16 + 1;
    }
    while (v13 != v15);
  }
  LODWORD(v49[0]) = 0;
  sub_2245508F0(a2, v49);
  HIDWORD(v57) = v49[0];
  v49[0] = 0xAAAAAAAAAAAAAAABLL * (v59 - v58);
  sub_224550D98(a2, v49);
  v18 = v58;
  v17 = v59;
  v19 = 0xAAAAAAAAAAAAAAABLL * (v59 - v58);
  if (v49[0] <= v19)
  {
    if (v49[0] < v19)
    {
      v17 = &v58[3 * v49[0]];
      v59 = v17;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)&v58, v49[0] - v19);
    v18 = v58;
    v17 = v59;
  }
  if (v17 != v18)
  {
    v20 = v17;
    do
    {
      sub_224551268(a2, v18);
      v21 = v18 + 1;
      sub_224551268(a2, v21++);
      sub_224551268(a2, v21);
      v18 = v21 + 1;
    }
    while (v18 != v20);
  }
  LODWORD(v49[0]) = 0;
  sub_2245508F0(a2, v49);
  HIDWORD(v61) = v49[0];
  v49[0] = v63 - v62;
  sub_224550D98(a2, v49);
  v22 = v63;
  v23 = v62;
  if (v49[0] <= (unint64_t)(v63 - v62))
  {
    if (v49[0] < (unint64_t)(v63 - v62))
    {
      v22 = &v62[v49[0]];
      v63 = &v62[v49[0]];
    }
  }
  else
  {
    sub_22317F2E8((uint64_t)&v62, v49[0] - (v63 - v62));
    v23 = v62;
    v22 = v63;
  }
  v24 = v22 - v23;
  if (v22 != v23)
  {
    do
    {
      sub_22454FFAC(a2, v23++);
      --v24;
    }
    while (v24);
  }
  LODWORD(v49[0]) = 0;
  sub_2245508F0(a2, v49);
  HIDWORD(v65) = v49[0];
  v49[0] = v67 - v66;
  sub_224550D98(a2, v49);
  v25 = v67;
  v26 = v66;
  if (v49[0] <= (unint64_t)(v67 - v66))
  {
    if (v49[0] < (unint64_t)(v67 - v66))
    {
      v25 = &v66[v49[0]];
      v67 = &v66[v49[0]];
    }
  }
  else
  {
    sub_22317F2E8((uint64_t)&v66, v49[0] - (v67 - v66));
    v26 = v66;
    v25 = v67;
  }
  v27 = v25 - v26;
  if (v25 != v26)
  {
    do
    {
      sub_22454FFAC(a2, v26++);
      --v27;
    }
    while (v27);
  }
  v49[0] = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v69[3] - *(_QWORD *)&v69[1]) >> 2);
  sub_224550D98(a2, v49);
  v28 = *(_QWORD *)&v69[3];
  v29 = *(_DWORD **)&v69[1];
  v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v69[3] - *(_QWORD *)&v69[1]) >> 2);
  if (v49[0] <= v30)
  {
    if (v49[0] < v30)
    {
      v28 = *(_QWORD *)&v69[1] + 12 * v49[0];
      *(_QWORD *)&v69[3] = v28;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)&v69[1], v49[0] - v30);
    v29 = *(_DWORD **)&v69[1];
    v28 = *(_QWORD *)&v69[3];
  }
  if ((_DWORD *)v28 != v29)
  {
    v31 = (_DWORD *)v28;
    do
    {
      sub_2245508F0(a2, v29);
      v32 = v29 + 1;
      sub_2245508F0(a2, v32++);
      sub_2245508F0(a2, v32);
      v29 = v32 + 1;
    }
    while (v29 != v31);
  }
  v49[0] = (uint64_t)(*(_QWORD *)&v69[11] - *(_QWORD *)&v69[9]) >> 3;
  sub_224550D98(a2, v49);
  v33 = *(_QWORD *)&v69[11];
  v34 = *(_DWORD **)&v69[9];
  v35 = (uint64_t)(*(_QWORD *)&v69[11] - *(_QWORD *)&v69[9]) >> 3;
  if (v49[0] <= v35)
  {
    if (v49[0] < v35)
    {
      v33 = *(_QWORD *)&v69[9] + 8 * v49[0];
      *(_QWORD *)&v69[11] = v33;
    }
  }
  else
  {
    sub_2232F5840((uint64_t)&v69[9], v49[0] - v35);
    v34 = *(_DWORD **)&v69[9];
    v33 = *(_QWORD *)&v69[11];
  }
  if ((_DWORD *)v33 != v34)
  {
    v36 = (_DWORD *)v33;
    do
    {
      sub_2245508F0(a2, v34);
      v37 = v34 + 1;
      sub_2245508F0(a2, v37);
      v34 = v37 + 1;
    }
    while (v34 != v36);
  }
  v49[0] = (uint64_t)(*(_QWORD *)&v69[19] - *(_QWORD *)&v69[17]) >> 3;
  sub_224550D98(a2, v49);
  v38 = *(_QWORD *)&v69[19];
  v39 = *(_DWORD **)&v69[17];
  v40 = (uint64_t)(*(_QWORD *)&v69[19] - *(_QWORD *)&v69[17]) >> 3;
  if (v49[0] <= v40)
  {
    if (v49[0] < v40)
    {
      v38 = *(_QWORD *)&v69[17] + 8 * v49[0];
      *(_QWORD *)&v69[19] = v38;
    }
  }
  else
  {
    sub_2232F5AE0((uint64_t)&v69[17], v49[0] - v40);
    v39 = *(_DWORD **)&v69[17];
    v38 = *(_QWORD *)&v69[19];
  }
  if ((_DWORD *)v38 != v39)
  {
    v41 = (_DWORD *)v38;
    do
    {
      sub_224551268(a2, v39);
      v42 = v39 + 1;
      sub_224551268(a2, v42);
      v39 = v42 + 1;
    }
    while (v39 != v41);
  }
  v49[0] = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v69[27] - *(_QWORD *)&v69[25]) >> 2);
  sub_224550D98(a2, v49);
  v43 = *(_QWORD *)&v69[27];
  v44 = *(_DWORD **)&v69[25];
  v45 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v69[27] - *(_QWORD *)&v69[25]) >> 2);
  if (v49[0] <= v45)
  {
    if (v49[0] < v45)
    {
      v43 = *(_QWORD *)&v69[25] + 12 * v49[0];
      *(_QWORD *)&v69[27] = v43;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)&v69[25], v49[0] - v45);
    v44 = *(_DWORD **)&v69[25];
    v43 = *(_QWORD *)&v69[27];
  }
  if ((_DWORD *)v43 != v44)
  {
    v46 = (_DWORD *)v43;
    do
    {
      sub_2245508F0(a2, v44);
      v47 = v44 + 1;
      sub_2245508F0(a2, v47++);
      sub_2245508F0(a2, v47);
      v44 = v47 + 1;
    }
    while (v44 != v46);
  }
  if (a4 >= 2)
  {
    v74 = 0;
    sub_22454FFAC(a2, &v74);
    if (v74)
    {
      if (!v73)
      {
        v70 = 0;
        v71 = 0;
        v72 = 0;
        v73 = 1;
      }
      LODWORD(v49[0]) = 1;
      sub_2245508F0(a2, v49);
      sub_224551268(a2, &v70);
      sub_224551268(a2, (_DWORD *)&v70 + 1);
      sub_224551268(a2, &v71);
      sub_224551268(a2, (_DWORD *)&v71 + 1);
      sub_224551268(a2, &v72);
      sub_224551268(a2, (_DWORD *)&v72 + 1);
    }
    else if (v73)
    {
      v73 = 0;
    }
  }
  sub_2232F5FB8((uint64_t)v49, (uint64_t)&v50);
  sub_2232F60FC(a3, (uint64_t)v49);
  sub_2232E7BD4(v49);
  return sub_2232F82A0((uint64_t *)&v50);
}

void sub_22402EB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EBC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22402EC14(uint64_t a1, uint64_t a2, unsigned int a3)
{
  _DWORD *v6;
  _DWORD *v7;
  unint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  unint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  unint64_t v16;
  _DWORD *v17;
  char *v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  _BYTE *v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  unint64_t v26;
  _DWORD *v27;
  char *v28;
  char *v29;
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  _DWORD *v36;
  _DWORD *v37;
  unint64_t v38;
  _DWORD *v39;
  unsigned int v40;
  unsigned int v41;
  __int128 v42;
  int32x2_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void *__p[4];

  __p[0] = (void *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 2));
  sub_224550D98(a1, __p);
  v7 = *(_DWORD **)a2;
  v6 = *(_DWORD **)(a2 + 8);
  v8 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v6 - *(_QWORD *)a2) >> 2);
  if (__p[0] <= (void *)v8)
  {
    if (__p[0] < (void *)v8)
    {
      v6 = &v7[3 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 8) = v6;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)a2, (unint64_t)__p[0] - v8);
    v7 = *(_DWORD **)a2;
    v6 = *(_DWORD **)(a2 + 8);
  }
  if (v6 != v7)
  {
    v9 = v6;
    do
    {
      sub_224551268(a1, v7);
      sub_224551268(a1, v7 + 1);
      sub_224551268(a1, v7 + 2);
      v7 += 3;
    }
    while (v7 != v9);
  }
  LODWORD(__p[0]) = 0;
  sub_2245508F0(a1, __p);
  *(_DWORD *)(a2 + 32) = __p[0];
  __p[0] = (void *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 48) - *(_QWORD *)(a2 + 40)) >> 2));
  sub_224550D98(a1, __p);
  v11 = *(_DWORD **)(a2 + 40);
  v10 = *(_DWORD **)(a2 + 48);
  v12 = 0xAAAAAAAAAAAAAAABLL * (v10 - v11);
  if (__p[0] <= (void *)v12)
  {
    if (__p[0] < (void *)v12)
    {
      v10 = &v11[3 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 48) = v10;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)(a2 + 40), (unint64_t)__p[0] - v12);
    v11 = *(_DWORD **)(a2 + 40);
    v10 = *(_DWORD **)(a2 + 48);
  }
  if (v10 != v11)
  {
    v13 = v10;
    do
    {
      sub_224551268(a1, v11);
      sub_224551268(a1, v11 + 1);
      sub_224551268(a1, v11 + 2);
      v11 += 3;
    }
    while (v11 != v13);
  }
  LODWORD(__p[0]) = 0;
  sub_2245508F0(a1, __p);
  *(_DWORD *)(a2 + 72) = __p[0];
  __p[0] = (void *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 2));
  sub_224550D98(a1, __p);
  v15 = *(_DWORD **)(a2 + 80);
  v14 = *(_DWORD **)(a2 + 88);
  v16 = 0xAAAAAAAAAAAAAAABLL * (v14 - v15);
  if (__p[0] <= (void *)v16)
  {
    if (__p[0] < (void *)v16)
    {
      v14 = &v15[3 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 88) = v14;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)(a2 + 80), (unint64_t)__p[0] - v16);
    v15 = *(_DWORD **)(a2 + 80);
    v14 = *(_DWORD **)(a2 + 88);
  }
  if (v14 != v15)
  {
    v17 = v14;
    do
    {
      sub_224551268(a1, v15);
      sub_224551268(a1, v15 + 1);
      sub_224551268(a1, v15 + 2);
      v15 += 3;
    }
    while (v15 != v17);
  }
  LODWORD(__p[0]) = 0;
  sub_2245508F0(a1, __p);
  *(_DWORD *)(a2 + 112) = __p[0];
  __p[0] = (void *)(*(_QWORD *)(a2 + 128) - *(_QWORD *)(a2 + 120));
  sub_224550D98(a1, __p);
  v19 = *(_BYTE **)(a2 + 120);
  v18 = *(char **)(a2 + 128);
  if (__p[0] <= (void *)(v18 - v19))
  {
    if (__p[0] < (void *)(v18 - v19))
    {
      v18 = &v19[(unint64_t)__p[0]];
      *(_QWORD *)(a2 + 128) = &v19[(unint64_t)__p[0]];
    }
  }
  else
  {
    sub_22317F2E8(a2 + 120, (size_t)__p[0] - (v18 - v19));
    v19 = *(_BYTE **)(a2 + 120);
    v18 = *(char **)(a2 + 128);
  }
  v20 = v18 - v19;
  if (v18 != v19)
  {
    do
    {
      sub_22454FFAC(a1, v19++);
      --v20;
    }
    while (v20);
  }
  LODWORD(__p[0]) = 0;
  sub_2245508F0(a1, __p);
  *(_DWORD *)(a2 + 152) = __p[0];
  __p[0] = (void *)(*(_QWORD *)(a2 + 168) - *(_QWORD *)(a2 + 160));
  sub_224550D98(a1, __p);
  v22 = *(_BYTE **)(a2 + 160);
  v21 = *(char **)(a2 + 168);
  if (__p[0] <= (void *)(v21 - v22))
  {
    if (__p[0] < (void *)(v21 - v22))
    {
      v21 = &v22[(unint64_t)__p[0]];
      *(_QWORD *)(a2 + 168) = &v22[(unint64_t)__p[0]];
    }
  }
  else
  {
    sub_22317F2E8(a2 + 160, (size_t)__p[0] - (v21 - v22));
    v22 = *(_BYTE **)(a2 + 160);
    v21 = *(char **)(a2 + 168);
  }
  v23 = v21 - v22;
  if (v21 != v22)
  {
    do
    {
      sub_22454FFAC(a1, v22++);
      --v23;
    }
    while (v23);
  }
  __p[0] = (void *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 200) - *(_QWORD *)(a2 + 192)) >> 2));
  sub_224550D98(a1, __p);
  v25 = *(_DWORD **)(a2 + 192);
  v24 = *(_DWORD **)(a2 + 200);
  v26 = 0xAAAAAAAAAAAAAAABLL * (v24 - v25);
  if (__p[0] <= (void *)v26)
  {
    if (__p[0] < (void *)v26)
    {
      v24 = &v25[3 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 200) = v24;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)(a2 + 192), (unint64_t)__p[0] - v26);
    v25 = *(_DWORD **)(a2 + 192);
    v24 = *(_DWORD **)(a2 + 200);
  }
  if (v24 != v25)
  {
    v27 = v24;
    do
    {
      sub_2245508F0(a1, v25);
      sub_2245508F0(a1, v25 + 1);
      sub_2245508F0(a1, v25 + 2);
      v25 += 3;
    }
    while (v25 != v27);
  }
  __p[0] = (void *)((uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 3);
  sub_224550D98(a1, __p);
  v29 = *(char **)(a2 + 224);
  v28 = *(char **)(a2 + 232);
  v30 = (v28 - v29) >> 3;
  if (__p[0] <= (void *)v30)
  {
    if (__p[0] < (void *)v30)
    {
      v28 = &v29[8 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 232) = v28;
    }
  }
  else
  {
    sub_2232F5840(a2 + 224, (unint64_t)__p[0] - v30);
    v29 = *(char **)(a2 + 224);
    v28 = *(char **)(a2 + 232);
  }
  if (v28 != v29)
  {
    v31 = v28;
    do
    {
      sub_2245508F0(a1, v29);
      sub_2245508F0(a1, (_DWORD *)v29 + 1);
      v29 += 8;
    }
    while (v29 != v31);
  }
  __p[0] = (void *)((uint64_t)(*(_QWORD *)(a2 + 264) - *(_QWORD *)(a2 + 256)) >> 3);
  sub_224550D98(a1, __p);
  v33 = *(char **)(a2 + 256);
  v32 = *(char **)(a2 + 264);
  v34 = (v32 - v33) >> 3;
  if (__p[0] <= (void *)v34)
  {
    if (__p[0] < (void *)v34)
    {
      v32 = &v33[8 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 264) = v32;
    }
  }
  else
  {
    sub_2232F5AE0(a2 + 256, (unint64_t)__p[0] - v34);
    v33 = *(char **)(a2 + 256);
    v32 = *(char **)(a2 + 264);
  }
  if (v32 != v33)
  {
    v35 = v32;
    do
    {
      sub_224551268(a1, v33);
      sub_224551268(a1, (_DWORD *)v33 + 1);
      v33 += 8;
    }
    while (v33 != v35);
  }
  __p[0] = (void *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 296) - *(_QWORD *)(a2 + 288)) >> 2));
  sub_224550D98(a1, __p);
  v37 = *(_DWORD **)(a2 + 288);
  v36 = *(_DWORD **)(a2 + 296);
  v38 = 0xAAAAAAAAAAAAAAABLL * (v36 - v37);
  if (__p[0] <= (void *)v38)
  {
    if (__p[0] < (void *)v38)
    {
      v36 = &v37[3 * (uint64_t)__p[0]];
      *(_QWORD *)(a2 + 296) = v36;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)(a2 + 288), (unint64_t)__p[0] - v38);
    v37 = *(_DWORD **)(a2 + 288);
    v36 = *(_DWORD **)(a2 + 296);
  }
  if (v36 != v37)
  {
    v39 = v36;
    do
    {
      sub_2245508F0(a1, v37);
      sub_2245508F0(a1, v37 + 1);
      sub_2245508F0(a1, v37 + 2);
      v37 += 3;
    }
    while (v37 != v39);
  }
  if (a3 >= 2)
  {
    v51 = 0;
    sub_22454FFAC(a1, &v51);
    if (!v51)
    {
      if (*(_BYTE *)(a2 + 344))
        *(_BYTE *)(a2 + 344) = 0;
      goto LABEL_76;
    }
    if (!*(_BYTE *)(a2 + 344))
    {
      *(_QWORD *)(a2 + 320) = 0;
      *(_QWORD *)(a2 + 328) = 0;
      *(_QWORD *)(a2 + 336) = 0;
      *(_BYTE *)(a2 + 344) = 1;
    }
    LODWORD(__p[0]) = 2;
    sub_2245508F0(a1, __p);
    v40 = __p[0];
    if (LODWORD(__p[0]) >= 2)
      v41 = 2;
    else
      v41 = __p[0];
    if (v41 < 2)
    {
      memset(__p, 0, 24);
      sub_224551268(a1, __p);
      sub_224551268(a1, (_DWORD *)__p + 1);
      sub_224551268(a1, &__p[1]);
      sub_224551268(a1, (_DWORD *)((unint64_t)__p | 0xC));
      sub_224551268(a1, &__p[2]);
      sub_224551268(a1, (_DWORD *)&__p[2] + 1);
      v42 = *(_OWORD *)__p;
      v43 = *(int32x2_t *)((char *)&__p[1] + 4);
      HIDWORD(v42) = HIDWORD(__p[1]);
      *(_OWORD *)(a2 + 320) = v42;
      LODWORD(v42) = vdup_lane_s32(v43, 1).u32[0];
      DWORD1(v42) = HIDWORD(__p[2]);
      *(_QWORD *)(a2 + 336) = v42;
      if (v40 < 2)
        goto LABEL_76;
    }
    else
    {
      sub_224551268(a1, (_DWORD *)(a2 + 320));
      sub_224551268(a1, (_DWORD *)(a2 + 324));
      sub_224551268(a1, (_DWORD *)(a2 + 328));
      sub_224551268(a1, (_DWORD *)(a2 + 332));
      sub_224551268(a1, (_DWORD *)(a2 + 336));
      sub_224551268(a1, (_DWORD *)(a2 + 340));
      if (v40 < 2)
      {
LABEL_76:
        if (a3 >= 4)
        {
          LODWORD(__p[0]) = 0;
          sub_2245508F0(a1, __p);
          *(_DWORD *)(a2 + 348) = __p[0];
          __p[0] = (void *)((uint64_t)(*(_QWORD *)(a2 + 360) - *(_QWORD *)(a2 + 352)) >> 2);
          sub_224550D98(a1, __p);
          v45 = *(char **)(a2 + 352);
          v44 = *(char **)(a2 + 360);
          v46 = (v44 - v45) >> 2;
          if (__p[0] <= (void *)v46)
          {
            if (__p[0] < (void *)v46)
            {
              v44 = &v45[4 * (uint64_t)__p[0]];
              *(_QWORD *)(a2 + 360) = v44;
            }
          }
          else
          {
            sub_22317F4CC(a2 + 352, (unint64_t)__p[0] - v46);
            v45 = *(char **)(a2 + 352);
            v44 = *(char **)(a2 + 360);
          }
          v49 = v44 - v45;
          if (v49)
          {
            v50 = 4 * (v49 >> 2);
            do
            {
              sub_224551268(a1, v45);
              v45 += 4;
              v50 -= 4;
            }
            while (v50);
          }
        }
        return;
      }
    }
    if (*(_BYTE *)(a1 + 131))
      goto LABEL_76;
    while (1)
    {
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
        goto LABEL_76;
      sub_2245523C0(a1, (uint64_t)__p);
      if (SHIBYTE(__p[2]) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_90:
          v48 = 0;
          if (SHIBYTE(__p[2]) < 0)
            goto LABEL_93;
          goto LABEL_79;
        }
      }
      else if (SHIBYTE(__p[2]) == 1 && *(unsigned __int8 *)(a1 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_90;
      }
      v48 = 1;
      if (SHIBYTE(__p[2]) < 0)
LABEL_93:
        operator delete(__p[0]);
LABEL_79:
      if (*(_BYTE *)(a1 + 131))
        v47 = 0;
      else
        v47 = v48;
      if ((v47 & 1) == 0)
        goto LABEL_76;
    }
  }
}

void sub_22402F460(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  std::logic_error *exception;
  char v14;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 >= 3)
    sub_2244FFA6C(a2);
  if (v9 >= 4)
    v10 = 4;
  else
    v10 = v9;
  if (v10 < 3)
  {
    sub_22402F574((uint64_t)&v14, a2, a3, v10);
    if (v9 < 3)
      return;
  }
  else
  {
    sub_22402F91C(a2, (uint64_t)a3, v10);
    if (v9 < 3)
      return;
  }
  v11 = a2[12];
  v12 = a2[9];
  a2[6] = *(_QWORD *)(v11 - 8) + *(_QWORD *)(v12 - 8) + 8;
  a2[9] = v12 - 8;
  a2[12] = v11 - 8;
}

void sub_22402F560(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_22402F574(uint64_t a1, _QWORD *a2, uint64_t *a3, unsigned int a4)
{
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  std::logic_error *exception;
  uint64_t v31[48];
  uint64_t v32[3];
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36[3];
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  _QWORD v40[19];
  int v41;
  _BYTE v42[24];
  char v43;

  memset(v32, 0, sizeof(v32));
  v33 = 0;
  memset(v34, 0, sizeof(v34));
  v35 = 0;
  memset(v36, 0, sizeof(v36));
  v37 = 0;
  memset(v38, 0, sizeof(v38));
  v39 = 0;
  memset(v40, 0, 24);
  v41 = 0;
  v42[0] = 0;
  v43 = 0;
  memset((char *)&v40[3] + 4, 0, 28);
  memset((char *)&v40[7] + 4, 0, 28);
  memset((char *)&v40[11] + 4, 0, 28);
  memset((char *)&v40[15] + 4, 0, 28);
  sub_22402FEA0(a2, v32);
  v7 = a2[6];
  v8 = a2[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 <= 3)
    goto LABEL_25;
  v11 = *(_DWORD *)(a2[3] + v7);
  a2[6] = v7 + 4;
  HIDWORD(v33) = v11;
  sub_22402FEA0(a2, v34);
  v12 = a2[6];
  v13 = a2[7];
  v9 = v13 >= v12;
  v14 = v13 - v12;
  if (!v9)
    v14 = 0;
  if (v14 <= 3)
    goto LABEL_25;
  v15 = *(_DWORD *)(a2[3] + v12);
  a2[6] = v12 + 4;
  HIDWORD(v35) = v15;
  sub_22402FEA0(a2, v36);
  v16 = a2[6];
  v17 = a2[7];
  v9 = v17 >= v16;
  v18 = v17 - v16;
  if (!v9)
    v18 = 0;
  if (v18 <= 3)
    goto LABEL_25;
  v19 = *(_DWORD *)(a2[3] + v16);
  a2[6] = v16 + 4;
  HIDWORD(v37) = v19;
  sub_224030004(a2, v38);
  v20 = a2[6];
  v21 = a2[7];
  v9 = v21 >= v20;
  v22 = v21 - v20;
  if (!v9)
    v22 = 0;
  if (v22 <= 3)
    goto LABEL_25;
  v23 = *(_DWORD *)(a2[3] + v20);
  a2[6] = v20 + 4;
  HIDWORD(v39) = v23;
  sub_224030004(a2, v40);
  sub_22403011C(a2, &v40[4]);
  sub_224030280(a2, (char **)&v40[8]);
  sub_2240303B0(a2, (char **)&v40[12]);
  sub_22403011C(a2, &v40[16]);
  if (a4 >= 2)
  {
    v24 = a2[6];
    v25 = a2[7];
    if (v25 <= v24)
      goto LABEL_25;
    v26 = *(unsigned __int8 *)(a2[3] + v24);
    v27 = v24 + 1;
    a2[6] = v24 + 1;
    if (v26)
    {
      if (!v43)
      {
        memset(v42, 0, sizeof(v42));
        v43 = 1;
      }
      v9 = v25 >= v27;
      v28 = v25 - v27;
      if (!v9)
        v28 = 0;
      if (v28 > 3)
      {
        a2[6] = v24 + 5;
        sub_2240304E0(a2, (uint64_t)v42);
        goto LABEL_24;
      }
LABEL_25:
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(exception, "Not enough data to read");
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
      __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
    }
    if (v43)
      v43 = 0;
  }
LABEL_24:
  sub_2232F5FB8((uint64_t)v31, (uint64_t)v32);
  sub_2232F60FC(a3, (uint64_t)v31);
  sub_2232E7BD4(v31);
  return sub_2232F82A0(v32);
}

void sub_22402F8C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  void *v57;

  __cxa_free_exception(v57);
  sub_2232F82A0(&a57);
  _Unwind_Resume(a1);
}

void sub_22402F8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  sub_2232F82A0(&a57);
  _Unwind_Resume(a1);
}

void sub_22402F908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  sub_2232F82A0(&a57);
  _Unwind_Resume(a1);
}

void sub_22402F91C(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  int32x2_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  std::logic_error *exception;
  _OWORD v58[2];

  sub_22402FEA0(a1, (uint64_t *)a2);
  v6 = a1[6];
  v7 = a1[7];
  v8 = v7 >= v6;
  v9 = v7 - v6;
  if (!v8)
    v9 = 0;
  if (v9 <= 3)
    goto LABEL_49;
  v10 = *(_DWORD *)(a1[3] + v6);
  a1[6] = v6 + 4;
  *(_DWORD *)(a2 + 32) = v10;
  sub_22402FEA0(a1, (uint64_t *)(a2 + 40));
  v11 = a1[6];
  v12 = a1[7];
  v8 = v12 >= v11;
  v13 = v12 - v11;
  if (!v8)
    v13 = 0;
  if (v13 <= 3)
    goto LABEL_49;
  v14 = *(_DWORD *)(a1[3] + v11);
  a1[6] = v11 + 4;
  *(_DWORD *)(a2 + 72) = v14;
  sub_22402FEA0(a1, (uint64_t *)(a2 + 80));
  v15 = a1[6];
  v16 = a1[7];
  v8 = v16 >= v15;
  v17 = v16 - v15;
  if (!v8)
    v17 = 0;
  if (v17 <= 3)
    goto LABEL_49;
  v18 = *(_DWORD *)(a1[3] + v15);
  a1[6] = v15 + 4;
  *(_DWORD *)(a2 + 112) = v18;
  sub_224030004(a1, (_QWORD *)(a2 + 120));
  v19 = a1[6];
  v20 = a1[7];
  v8 = v20 >= v19;
  v21 = v20 - v19;
  if (!v8)
    v21 = 0;
  if (v21 <= 3)
    goto LABEL_49;
  v22 = *(_DWORD *)(a1[3] + v19);
  a1[6] = v19 + 4;
  *(_DWORD *)(a2 + 152) = v22;
  sub_224030004(a1, (_QWORD *)(a2 + 160));
  sub_22403011C(a1, (uint64_t *)(a2 + 192));
  sub_224030280(a1, (char **)(a2 + 224));
  sub_2240303B0(a1, (char **)(a2 + 256));
  sub_22403011C(a1, (uint64_t *)(a2 + 288));
  if (a3 < 2)
    return;
  v24 = a1[6];
  v23 = a1[7];
  if (v23 <= v24)
    goto LABEL_49;
  v25 = *(unsigned __int8 *)(a1[3] + v24);
  v26 = v24 + 1;
  a1[6] = v26;
  if (!v25)
  {
    if (*(_BYTE *)(a2 + 344))
      *(_BYTE *)(a2 + 344) = 0;
    if (a3 >= 4)
      goto LABEL_35;
    return;
  }
  v27 = (_QWORD *)(a2 + 320);
  if (!*(_BYTE *)(a2 + 344))
  {
    *v27 = 0;
    *(_QWORD *)(a2 + 328) = 0;
    *(_QWORD *)(a2 + 336) = 0;
    *(_BYTE *)(a2 + 344) = 1;
    v26 = a1[6];
    v23 = a1[7];
  }
  v8 = v23 >= v26;
  v28 = v23 - v26;
  if (!v8)
    v28 = 0;
  if (v28 <= 3)
  {
LABEL_49:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_57;
  }
  v29 = *(_DWORD *)(a1[3] + v26);
  a1[6] = v26 + 4;
  if (v29 <= 1)
  {
    memset(v58, 0, 24);
    sub_2240304E0(a1, (uint64_t)v58);
    v42 = v58[0];
    v43 = *(int32x2_t *)((char *)v58 + 12);
    HIDWORD(v42) = HIDWORD(v58[0]);
    *(_OWORD *)(a2 + 320) = v42;
    LODWORD(v42) = vdup_lane_s32(v43, 1).u32[0];
    DWORD1(v42) = DWORD1(v58[1]);
    *(_QWORD *)(a2 + 336) = v42;
    if (a3 >= 4)
      goto LABEL_35;
  }
  else
  {
    sub_2244FFA6C(a1);
    v30 = a1[6];
    v31 = a1[7];
    v8 = v31 >= v30;
    v32 = v31 - v30;
    if (!v8)
      v32 = 0;
    if (v32 <= 0xB)
      goto LABEL_56;
    v33 = (uint64_t *)(a1[3] + v30);
    v34 = *v33;
    *(_DWORD *)(a2 + 328) = *((_DWORD *)v33 + 2);
    *v27 = v34;
    v35 = a1[7];
    v36 = a1[6] + 12;
    a1[6] = v36;
    v8 = v35 >= v36;
    v37 = v35 - v36;
    if (!v8)
      v37 = 0;
    if (v37 <= 0xB)
    {
LABEL_56:
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      sub_223198268(exception, "Not enough data to read span");
      goto LABEL_57;
    }
    v38 = a1[3] + v36;
    v39 = *(_QWORD *)v38;
    *(_DWORD *)(a2 + 340) = *(_DWORD *)(v38 + 8);
    *(_QWORD *)(a2 + 332) = v39;
    a1[6] += 12;
    v40 = a1[12];
    v41 = a1[9];
    a1[6] = *(_QWORD *)(v40 - 8) + *(_QWORD *)(v41 - 8) + 8;
    a1[9] = v41 - 8;
    a1[12] = v40 - 8;
    if (a3 >= 4)
    {
LABEL_35:
      v45 = a1[6];
      v44 = a1[7];
      v46 = v44 - v45;
      if (v44 < v45)
        v46 = 0;
      if (v46 <= 3)
        goto LABEL_53;
      v47 = a1[3];
      v48 = *(_DWORD *)(v47 + v45);
      a1[6] = v45 + 4;
      *(_DWORD *)(a2 + 348) = v48;
      v49 = v44 - (v45 + 4);
      if (v44 < v45 + 4)
        v49 = 0;
      if (v49 <= 7)
      {
LABEL_53:
        exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        sub_223198268(exception, "Not enough data to read");
      }
      else
      {
        v50 = *(_QWORD *)(v47 + v45 + 4);
        v51 = v45 + 12;
        a1[6] = v51;
        v52 = *(char **)(a2 + 352);
        v53 = *(char **)(a2 + 360);
        v54 = (v53 - v52) >> 2;
        if (v50 <= v54)
        {
          if (v50 < v54)
          {
            v53 = &v52[4 * v50];
            *(_QWORD *)(a2 + 360) = v53;
          }
        }
        else
        {
          sub_22317F4CC(a2 + 352, v50 - v54);
          v52 = *(char **)(a2 + 352);
          v53 = *(char **)(a2 + 360);
          v51 = a1[6];
          v44 = a1[7];
        }
        v55 = v53 - v52;
        v8 = v44 >= v51;
        v56 = v44 - v51;
        if (!v8)
          v56 = 0;
        if (v56 >= v55)
        {
          memcpy(v52, (const void *)(a1[3] + v51), v53 - v52);
          a1[6] += v55;
          return;
        }
        exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
        sub_223198268(exception, "Not enough data to read span");
      }
LABEL_57:
      __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
    }
  }
}

void sub_22402FDC4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FDD8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FDEC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE00(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE14(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE28(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE3C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE50(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE64(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE78(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FE8C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FEA0(_QWORD *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  a1[6] = v2 + 8;
  v9 = *a2;
  v10 = a2[1];
  v11 = 0xAAAAAAAAAAAAAAABLL * ((v10 - *a2) >> 2);
  if (v8 <= v11)
  {
    if (v8 < v11)
    {
      v10 = v9 + 12 * v8;
      a2[1] = v10;
    }
  }
  else
  {
    sub_2232F52A0(a2, v8 - v11);
    v9 = *a2;
    v10 = a2[1];
  }
  v12 = v10 - v9;
  if (v12)
  {
    v13 = a1[6];
    v14 = 12 * (v12 / 12);
    while (1)
    {
      v15 = a1[7];
      v4 = v15 >= v13;
      v16 = v15 - v13;
      if (!v4)
        v16 = 0;
      if (v16 <= 0xB)
        break;
      v17 = a1[3] + v13;
      v18 = *(_QWORD *)v17;
      *(_DWORD *)(v9 + 8) = *(_DWORD *)(v17 + 8);
      *(_QWORD *)v9 = v18;
      v9 += 12;
      v13 = a1[6] + 12;
      a1[6] = v13;
      v14 -= 12;
      if (!v14)
        return;
    }
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
LABEL_16:
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
}

void sub_22402FFDC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22402FFF0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_224030004(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  void *result;
  std::logic_error *exception;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 - v3;
  if (v2 < v3)
    v4 = 0;
  if (v4 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_14;
  }
  v7 = *(_QWORD *)(a1[3] + v3);
  v8 = v3 + 8;
  a1[6] = v8;
  v9 = (char *)*a2;
  v10 = (char *)a2[1];
  v11 = &v10[-*a2];
  if (v7 <= (unint64_t)v11)
  {
    if (v7 < (unint64_t)v11)
    {
      v10 = &v9[v7];
      a2[1] = &v9[v7];
    }
  }
  else
  {
    sub_22317F2E8((uint64_t)a2, v7 - (_QWORD)v11);
    v9 = (char *)*a2;
    v10 = (char *)a2[1];
    v8 = a1[6];
    v2 = a1[7];
  }
  v12 = v10 - v9;
  v13 = v2 >= v8;
  v14 = v2 - v8;
  if (!v13)
    v14 = 0;
  if (v14 < v12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
LABEL_14:
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  result = memcpy(v9, (const void *)(a1[3] + v8), v10 - v9);
  a1[6] += v12;
  return result;
}

void sub_2240300F4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224030108(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22403011C(_QWORD *a1, uint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  a1[6] = v2 + 8;
  v9 = *a2;
  v10 = a2[1];
  v11 = 0xAAAAAAAAAAAAAAABLL * ((v10 - *a2) >> 2);
  if (v8 <= v11)
  {
    if (v8 < v11)
    {
      v10 = v9 + 12 * v8;
      a2[1] = v10;
    }
  }
  else
  {
    sub_2232F5570(a2, v8 - v11);
    v9 = *a2;
    v10 = a2[1];
  }
  v12 = v10 - v9;
  if (v12)
  {
    v13 = a1[6];
    v14 = 12 * (v12 / 12);
    while (1)
    {
      v15 = a1[7];
      v4 = v15 >= v13;
      v16 = v15 - v13;
      if (!v4)
        v16 = 0;
      if (v16 <= 0xB)
        break;
      v17 = a1[3] + v13;
      v18 = *(_QWORD *)v17;
      *(_DWORD *)(v9 + 8) = *(_DWORD *)(v17 + 8);
      *(_QWORD *)v9 = v18;
      v9 += 12;
      v13 = a1[6] + 12;
      a1[6] = v13;
      v14 -= 12;
      if (!v14)
        return;
    }
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
LABEL_16:
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
}

void sub_224030258(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22403026C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224030280(_QWORD *a1, char **a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  a1[6] = v2 + 8;
  v9 = *a2;
  v10 = a2[1];
  v11 = (v10 - *a2) >> 3;
  if (v8 <= v11)
  {
    if (v8 < v11)
    {
      v10 = &v9[8 * v8];
      a2[1] = v10;
    }
  }
  else
  {
    sub_2232F5840((uint64_t)a2, v8 - v11);
    v9 = *a2;
    v10 = a2[1];
  }
  v12 = v10 - v9;
  if (v12)
  {
    v13 = a1[6];
    v14 = 8 * (v12 >> 3);
    while (1)
    {
      v15 = a1[7];
      v4 = v15 >= v13;
      v16 = v15 - v13;
      if (!v4)
        v16 = 0;
      if (v16 <= 7)
        break;
      *(_QWORD *)v9 = *(_QWORD *)(a1[3] + v13);
      v9 += 8;
      v13 = a1[6] + 8;
      a1[6] = v13;
      v14 -= 8;
      if (!v14)
        return;
    }
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
LABEL_16:
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
}

void sub_224030388(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22403039C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240303B0(_QWORD *a1, char **a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  a1[6] = v2 + 8;
  v9 = *a2;
  v10 = a2[1];
  v11 = (v10 - *a2) >> 3;
  if (v8 <= v11)
  {
    if (v8 < v11)
    {
      v10 = &v9[8 * v8];
      a2[1] = v10;
    }
  }
  else
  {
    sub_2232F5AE0((uint64_t)a2, v8 - v11);
    v9 = *a2;
    v10 = a2[1];
  }
  v12 = v10 - v9;
  if (v12)
  {
    v13 = a1[6];
    v14 = 8 * (v12 >> 3);
    while (1)
    {
      v15 = a1[7];
      v4 = v15 >= v13;
      v16 = v15 - v13;
      if (!v4)
        v16 = 0;
      if (v16 <= 7)
        break;
      *(_QWORD *)v9 = *(_QWORD *)(a1[3] + v13);
      v9 += 8;
      v13 = a1[6] + 8;
      a1[6] = v13;
      v14 -= 8;
      if (!v14)
        return;
    }
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
LABEL_16:
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
}

void sub_2240304B8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240304CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240304E0(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xB)
    goto LABEL_8;
  v6 = (uint64_t *)(result[3] + v2);
  v7 = *v6;
  *(_DWORD *)(a2 + 8) = *((_DWORD *)v6 + 2);
  *(_QWORD *)a2 = v7;
  v8 = result[7];
  v9 = result[6] + 12;
  result[6] = v9;
  v4 = v8 >= v9;
  v10 = v8 - v9;
  if (!v4)
    v10 = 0;
  if (v10 <= 0xB)
  {
LABEL_8:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v11 = result[3] + v9;
  v12 = *(_QWORD *)v11;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)(v11 + 8);
  *(_QWORD *)(a2 + 12) = v12;
  result[6] += 12;
  return result;
}

void sub_2240305B0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240305C4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240305D8(int *a1, _BYTE *a2, uint64_t *a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 3)
    {
      v9 = 0;
      goto LABEL_9;
    }
    v12 = 3;
    (*(void (**)(_BYTE *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 5)
    {
      v11 = v12;
      sub_2240306DC();
      sub_22455C3A8((std::string *)&xmmword_2540CED40, v11, 4u);
    }
    v7 = *a1;
  }
  v9 = 0;
  if (a4 >= 3 && v7 >= 1)
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
  }
LABEL_9:
  if (a4 >= 4)
    v10 = 4;
  else
    v10 = a4;
  if (v10 < 3)
  {
    sub_224030A4C(a2, a3, v10);
    if (!v9)
      return;
  }
  else
  {
    sub_2240313E8((uint64_t)a2, (uint64_t)a3, v10);
    if (!v9)
      return;
  }
  (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

void sub_2240306DC()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_2540CECA0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2540CECA0))
  {
    sub_224030794();
    if (byte_2540CED6F < 0)
    {
      sub_223197FA4(&xmmword_2540CED40, (void *)qword_2540CED58, unk_2540CED60);
    }
    else
    {
      xmmword_2540CED40 = *(_OWORD *)&qword_2540CED58;
      qword_2540CED50 = unk_2540CED68;
    }
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2540CED40, &dword_22314D000);
    __cxa_guard_release(&qword_2540CECA0);
  }
}

void sub_22403077C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CECA0);
  _Unwind_Resume(a1);
}

void sub_224030794()
{
  unsigned __int8 v0;
  void *__p[2];
  char v2;

  v0 = atomic_load((unsigned __int8 *)&qword_2540CECA8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2540CECA8))
  {
    sub_224030870(__p);
    sub_223FC4854((char *)__p, (std::string *)&qword_2540CED58);
    if (v2 < 0)
      operator delete(__p[0]);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &qword_2540CED58, &dword_22314D000);
    __cxa_guard_release(&qword_2540CECA8);
  }
}

void sub_224030830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2540CECA8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2540CECA8);
  _Unwind_Resume(a1);
}

void sub_224030870(_QWORD *__dst)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2540CECB0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2540CECB0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::mesh::TriMeshDataSample<>]", qword_2540CED70);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2540CED70, &dword_22314D000);
    __cxa_guard_release(&qword_2540CECB0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2540CECB8);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2540CECB8))
  {
    v5 = sub_2231A38CC(qword_2540CED70, "<", 0);
    sub_2231A37C8(qword_2540CED70, 0, v5, qword_2540CED88);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2540CED88, &dword_22314D000);
    __cxa_guard_release(&qword_2540CECB8);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2540CECC0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2540CECC0))
  {
    sub_224573040((uint64_t)qword_2540CED88, (uint64_t)&xmmword_2540CEDA0);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2540CEDA0, &dword_22314D000);
    __cxa_guard_release(&qword_2540CECC0);
  }
  if (byte_2540CEDB7 < 0)
  {
    sub_223197FA4(__dst, (void *)xmmword_2540CEDA0, *((unint64_t *)&xmmword_2540CEDA0 + 1));
  }
  else
  {
    *(_OWORD *)__dst = xmmword_2540CEDA0;
    __dst[2] = unk_2540CEDB0;
  }
}

void sub_224030A04(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CECC0);
  _Unwind_Resume(a1);
}

void sub_224030A1C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CECB8);
  _Unwind_Resume(a1);
}

void sub_224030A34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2540CECB0);
  _Unwind_Resume(a1);
}

uint64_t *sub_224030A4C(_BYTE *a1, uint64_t *a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v48[48];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  _DWORD v68[33];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;

  v49 = 0;
  v50 = 0;
  v52 = 0;
  v51 = 0;
  v53 = 0;
  v54 = 0;
  v55 = 0;
  v56 = 0;
  v57 = 0;
  v58 = 0;
  v60 = 0;
  v59 = 0;
  v61 = 0;
  v63 = 0;
  v62 = 0;
  v64 = 0;
  v66 = 0;
  v65 = 0;
  v67 = 0;
  v68[32] = 0;
  LOBYTE(v69) = 0;
  v72 = 0;
  memset(v68, 0, 28);
  memset(&v68[8], 0, 28);
  memset(&v68[16], 0, 28);
  memset(&v68[24], 0, 28);
  v48[0] = 0;
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v7 = v49;
  v6 = v50;
  v8 = 0xAAAAAAAAAAAAAAABLL * ((v50 - v49) >> 2);
  if (v48[0] <= (_DWORD *)v8)
  {
    if (v48[0] < (_DWORD *)v8)
    {
      v6 = v49 + 12 * (uint64_t)v48[0];
      v50 = v6;
    }
  }
  else
  {
    sub_2232F52A0(&v49, (unint64_t)v48[0] - v8);
    v7 = v49;
    v6 = v50;
  }
  if (v6 != v7)
  {
    v9 = v6;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v7);
      v10 = v7 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v10);
      v10 += 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v10);
      v7 = v10 + 4;
    }
    while (v7 != v9);
  }
  v48[0] = (_DWORD *)&v52 + 1;
  sub_224031CA8(a1, v48);
  v48[0] = (_DWORD *)(0xAAAAAAAAAAAAAAABLL * ((v54 - v53) >> 2));
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v12 = v53;
  v11 = v54;
  v13 = 0xAAAAAAAAAAAAAAABLL * ((v54 - v53) >> 2);
  if (v48[0] <= (_DWORD *)v13)
  {
    if (v48[0] < (_DWORD *)v13)
    {
      v11 = v53 + 12 * (uint64_t)v48[0];
      v54 = v11;
    }
  }
  else
  {
    sub_2232F52A0(&v53, (unint64_t)v48[0] - v13);
    v12 = v53;
    v11 = v54;
  }
  if (v11 != v12)
  {
    v14 = v11;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v12);
      v15 = v12 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v15);
      v15 += 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v15);
      v12 = v15 + 4;
    }
    while (v12 != v14);
  }
  v48[0] = (_DWORD *)&v56 + 1;
  sub_224031CA8(a1, v48);
  v48[0] = (_DWORD *)(0xAAAAAAAAAAAAAAABLL * ((v58 - v57) >> 2));
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v17 = v57;
  v16 = v58;
  v18 = 0xAAAAAAAAAAAAAAABLL * ((v58 - v57) >> 2);
  if (v48[0] <= (_DWORD *)v18)
  {
    if (v48[0] < (_DWORD *)v18)
    {
      v16 = v57 + 12 * (uint64_t)v48[0];
      v58 = v16;
    }
  }
  else
  {
    sub_2232F52A0(&v57, (unint64_t)v48[0] - v18);
    v17 = v57;
    v16 = v58;
  }
  if (v16 != v17)
  {
    v19 = v16;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v17);
      v20 = v17 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v20);
      v20 += 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v20);
      v17 = v20 + 4;
    }
    while (v17 != v19);
  }
  v48[0] = (_DWORD *)&v60 + 1;
  sub_224031CA8(a1, v48);
  v48[0] = (_DWORD *)(v62 - v61);
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v21 = v62;
  v22 = v61;
  if (v48[0] <= (_DWORD *)(v62 - v61))
  {
    if (v48[0] < (_DWORD *)(v62 - v61))
    {
      v21 = &v61[(unint64_t)v48[0]];
      v62 = &v61[(unint64_t)v48[0]];
    }
  }
  else
  {
    sub_22317F2E8((uint64_t)&v61, (size_t)v48[0] - (v62 - v61));
    v22 = v61;
    v21 = v62;
  }
  if (v21 != v22)
  {
    v23 = (char *)(v21 - v22);
    do
    {
      (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 80))(a1, v22++);
      --v23;
    }
    while (v23);
  }
  v48[0] = (_DWORD *)&v64 + 1;
  sub_224031CA8(a1, v48);
  v48[0] = (_DWORD *)(v66 - v65);
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v24 = v66;
  v25 = v65;
  if (v48[0] <= (_DWORD *)(v66 - v65))
  {
    if (v48[0] < (_DWORD *)(v66 - v65))
    {
      v24 = &v65[(unint64_t)v48[0]];
      v66 = &v65[(unint64_t)v48[0]];
    }
  }
  else
  {
    sub_22317F2E8((uint64_t)&v65, (size_t)v48[0] - (v66 - v65));
    v25 = v65;
    v24 = v66;
  }
  if (v24 != v25)
  {
    v26 = (char *)(v24 - v25);
    do
    {
      (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 80))(a1, v25++);
      --v26;
    }
    while (v26);
  }
  v48[0] = (_DWORD *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v68[3] - *(_QWORD *)&v68[1]) >> 2));
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v27 = *(_QWORD *)&v68[3];
  v28 = *(_QWORD *)&v68[1];
  v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v68[3] - *(_QWORD *)&v68[1]) >> 2);
  if (v48[0] <= (_DWORD *)v29)
  {
    if (v48[0] < (_DWORD *)v29)
    {
      v27 = *(_QWORD *)&v68[1] + 12 * (uint64_t)v48[0];
      *(_QWORD *)&v68[3] = v27;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)&v68[1], (unint64_t)v48[0] - v29);
    v28 = *(_QWORD *)&v68[1];
    v27 = *(_QWORD *)&v68[3];
  }
  if (v27 != v28)
  {
    v30 = v27;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v28);
      v31 = v28 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v31);
      v31 += 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v31);
      v28 = v31 + 4;
    }
    while (v28 != v30);
  }
  v48[0] = (_DWORD *)((uint64_t)(*(_QWORD *)&v68[11] - *(_QWORD *)&v68[9]) >> 3);
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v32 = *(_QWORD *)&v68[11];
  v33 = *(_QWORD *)&v68[9];
  v34 = (uint64_t)(*(_QWORD *)&v68[11] - *(_QWORD *)&v68[9]) >> 3;
  if (v48[0] <= (_DWORD *)v34)
  {
    if (v48[0] < (_DWORD *)v34)
    {
      v32 = *(_QWORD *)&v68[9] + 8 * (uint64_t)v48[0];
      *(_QWORD *)&v68[11] = v32;
    }
  }
  else
  {
    sub_2232F5840((uint64_t)&v68[9], (unint64_t)v48[0] - v34);
    v33 = *(_QWORD *)&v68[9];
    v32 = *(_QWORD *)&v68[11];
  }
  if (v32 != v33)
  {
    v35 = v32;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v33);
      v36 = v33 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v36);
      v33 = v36 + 4;
    }
    while (v33 != v35);
  }
  v48[0] = (_DWORD *)((uint64_t)(*(_QWORD *)&v68[19] - *(_QWORD *)&v68[17]) >> 3);
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v37 = *(_QWORD *)&v68[19];
  v38 = *(_QWORD *)&v68[17];
  v39 = (uint64_t)(*(_QWORD *)&v68[19] - *(_QWORD *)&v68[17]) >> 3;
  if (v48[0] <= (_DWORD *)v39)
  {
    if (v48[0] < (_DWORD *)v39)
    {
      v37 = *(_QWORD *)&v68[17] + 8 * (uint64_t)v48[0];
      *(_QWORD *)&v68[19] = v37;
    }
  }
  else
  {
    sub_2232F5AE0((uint64_t)&v68[17], (unint64_t)v48[0] - v39);
    v38 = *(_QWORD *)&v68[17];
    v37 = *(_QWORD *)&v68[19];
  }
  if (v37 != v38)
  {
    v40 = v37;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v38);
      v41 = v38 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, v41);
      v38 = v41 + 4;
    }
    while (v38 != v40);
  }
  v48[0] = (_DWORD *)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v68[27] - *(_QWORD *)&v68[25]) >> 2));
  (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 120))(a1, v48);
  v42 = *(_QWORD *)&v68[27];
  v43 = *(_QWORD *)&v68[25];
  v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)&v68[27] - *(_QWORD *)&v68[25]) >> 2);
  if (v48[0] <= (_DWORD *)v44)
  {
    if (v48[0] < (_DWORD *)v44)
    {
      v42 = *(_QWORD *)&v68[25] + 12 * (uint64_t)v48[0];
      *(_QWORD *)&v68[27] = v42;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)&v68[25], (unint64_t)v48[0] - v44);
    v43 = *(_QWORD *)&v68[25];
    v42 = *(_QWORD *)&v68[27];
  }
  if (v42 != v43)
  {
    v45 = v42;
    do
    {
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v43);
      v46 = v43 + 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v46);
      v46 += 4;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 104))(a1, v46);
      v43 = v46 + 4;
    }
    while (v43 != v45);
  }
  if (a3 >= 2)
  {
    v73 = 0;
    (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 80))(a1, &v73);
    if (v73)
    {
      if (!v72)
      {
        v69 = 0;
        v70 = 0;
        v71 = 0;
        v72 = 1;
      }
      LODWORD(v48[0]) = 1;
      (*(void (**)(_BYTE *, _DWORD **))(*(_QWORD *)a1 + 104))(a1, v48);
      (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a1 + 128))(a1, &v69);
      (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 128))(a1, (char *)&v69 + 4);
      (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a1 + 128))(a1, &v70);
      (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 128))(a1, (char *)&v70 + 4);
      (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a1 + 128))(a1, &v71);
      (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 128))(a1, (char *)&v71 + 4);
    }
    else if (v72)
    {
      v72 = 0;
    }
  }
  sub_2232F5FB8((uint64_t)v48, (uint64_t)&v49);
  sub_2232F60FC(a2, (uint64_t)v48);
  sub_2232E7BD4((uint64_t *)v48);
  return sub_2232F82A0(&v49);
}

void sub_22403130C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_224031320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_224031334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_224031348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_22403135C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_224031370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_224031384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_224031398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_2240313AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_2240313C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_2240313D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  sub_2232F82A0(&a58);
  _Unwind_Resume(a1);
}

void sub_2240313E8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;

  v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 2);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *(_QWORD *)a2) >> 2);
  if (v47 <= v8)
  {
    if (v47 < v8)
    {
      v6 = v7 + 12 * v47;
      *(_QWORD *)(a2 + 8) = v6;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)a2, v47 - v8);
    v7 = *(_QWORD *)a2;
    v6 = *(_QWORD *)(a2 + 8);
  }
  if (v6 != v7)
  {
    v9 = v6;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v7);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v7 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v7 + 8);
      v7 += 12;
    }
    while (v7 != v9);
  }
  v47 = a2 + 32;
  sub_224031CA8((_BYTE *)a1, (_DWORD **)&v47);
  v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 48) - *(_QWORD *)(a2 + 40)) >> 2);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v11 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v12 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v11) >> 2);
  if (v47 <= v12)
  {
    if (v47 < v12)
    {
      v10 = v11 + 12 * v47;
      *(_QWORD *)(a2 + 48) = v10;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)(a2 + 40), v47 - v12);
    v11 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
  }
  if (v10 != v11)
  {
    v13 = v10;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v11);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v11 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v11 + 8);
      v11 += 12;
    }
    while (v11 != v13);
  }
  v47 = a2 + 72;
  sub_224031CA8((_BYTE *)a1, (_DWORD **)&v47);
  v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 2);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v15 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v16 = 0xAAAAAAAAAAAAAAABLL * ((v14 - v15) >> 2);
  if (v47 <= v16)
  {
    if (v47 < v16)
    {
      v14 = v15 + 12 * v47;
      *(_QWORD *)(a2 + 88) = v14;
    }
  }
  else
  {
    sub_2232F52A0((uint64_t *)(a2 + 80), v47 - v16);
    v15 = *(_QWORD *)(a2 + 80);
    v14 = *(_QWORD *)(a2 + 88);
  }
  if (v14 != v15)
  {
    v17 = v14;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v15);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v15 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v15 + 8);
      v15 += 12;
    }
    while (v15 != v17);
  }
  v47 = a2 + 112;
  sub_224031CA8((_BYTE *)a1, (_DWORD **)&v47);
  v47 = *(_QWORD *)(a2 + 128) - *(_QWORD *)(a2 + 120);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v19 = *(char **)(a2 + 120);
  v18 = *(char **)(a2 + 128);
  if (v47 <= v18 - v19)
  {
    if (v47 < v18 - v19)
    {
      v18 = &v19[v47];
      *(_QWORD *)(a2 + 128) = &v19[v47];
    }
  }
  else
  {
    sub_22317F2E8(a2 + 120, v47 - (v18 - v19));
    v19 = *(char **)(a2 + 120);
    v18 = *(char **)(a2 + 128);
  }
  if (v18 != v19)
  {
    v20 = (char *)(v18 - v19);
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 80))(a1, v19++);
      --v20;
    }
    while (v20);
  }
  v47 = a2 + 152;
  sub_224031CA8((_BYTE *)a1, (_DWORD **)&v47);
  v47 = *(_QWORD *)(a2 + 168) - *(_QWORD *)(a2 + 160);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v22 = *(char **)(a2 + 160);
  v21 = *(char **)(a2 + 168);
  if (v47 <= v21 - v22)
  {
    if (v47 < v21 - v22)
    {
      v21 = &v22[v47];
      *(_QWORD *)(a2 + 168) = &v22[v47];
    }
  }
  else
  {
    sub_22317F2E8(a2 + 160, v47 - (v21 - v22));
    v22 = *(char **)(a2 + 160);
    v21 = *(char **)(a2 + 168);
  }
  if (v21 != v22)
  {
    v23 = (char *)(v21 - v22);
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 80))(a1, v22++);
      --v23;
    }
    while (v23);
  }
  v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 200) - *(_QWORD *)(a2 + 192)) >> 2);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v25 = *(_QWORD *)(a2 + 192);
  v24 = *(_QWORD *)(a2 + 200);
  v26 = 0xAAAAAAAAAAAAAAABLL * ((v24 - v25) >> 2);
  if (v47 <= v26)
  {
    if (v47 < v26)
    {
      v24 = v25 + 12 * v47;
      *(_QWORD *)(a2 + 200) = v24;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)(a2 + 192), v47 - v26);
    v25 = *(_QWORD *)(a2 + 192);
    v24 = *(_QWORD *)(a2 + 200);
  }
  if (v24 != v25)
  {
    v27 = v24;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v25);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v25 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v25 + 8);
      v25 += 12;
    }
    while (v25 != v27);
  }
  v47 = (uint64_t)(*(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 224)) >> 3;
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v29 = *(_QWORD *)(a2 + 224);
  v28 = *(_QWORD *)(a2 + 232);
  v30 = (v28 - v29) >> 3;
  if (v47 <= v30)
  {
    if (v47 < v30)
    {
      v28 = v29 + 8 * v47;
      *(_QWORD *)(a2 + 232) = v28;
    }
  }
  else
  {
    sub_2232F5840(a2 + 224, v47 - v30);
    v29 = *(_QWORD *)(a2 + 224);
    v28 = *(_QWORD *)(a2 + 232);
  }
  if (v28 != v29)
  {
    v31 = v28;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v29);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v29 + 4);
      v29 += 8;
    }
    while (v29 != v31);
  }
  v47 = (uint64_t)(*(_QWORD *)(a2 + 264) - *(_QWORD *)(a2 + 256)) >> 3;
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v33 = *(_QWORD *)(a2 + 256);
  v32 = *(_QWORD *)(a2 + 264);
  v34 = (v32 - v33) >> 3;
  if (v47 <= v34)
  {
    if (v47 < v34)
    {
      v32 = v33 + 8 * v47;
      *(_QWORD *)(a2 + 264) = v32;
    }
  }
  else
  {
    sub_2232F5AE0(a2 + 256, v47 - v34);
    v33 = *(_QWORD *)(a2 + 256);
    v32 = *(_QWORD *)(a2 + 264);
  }
  if (v32 != v33)
  {
    v35 = v32;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v33);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v33 + 4);
      v33 += 8;
    }
    while (v33 != v35);
  }
  v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 296) - *(_QWORD *)(a2 + 288)) >> 2);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
  v37 = *(_QWORD *)(a2 + 288);
  v36 = *(_QWORD *)(a2 + 296);
  v38 = 0xAAAAAAAAAAAAAAABLL * ((v36 - v37) >> 2);
  if (v47 <= v38)
  {
    if (v47 < v38)
    {
      v36 = v37 + 12 * v47;
      *(_QWORD *)(a2 + 296) = v36;
    }
  }
  else
  {
    sub_2232F5570((uint64_t *)(a2 + 288), v47 - v38);
    v37 = *(_QWORD *)(a2 + 288);
    v36 = *(_QWORD *)(a2 + 296);
  }
  if (v36 != v37)
  {
    v39 = v36;
    do
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v37);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v37 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, v37 + 8);
      v37 += 12;
    }
    while (v37 != v39);
  }
  v46 = 0;
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 80))(a1, &v46);
  if (v46)
  {
    if (!*(_BYTE *)(a2 + 344))
    {
      *(_QWORD *)(a2 + 320) = 0;
      *(_QWORD *)(a2 + 328) = 0;
      *(_QWORD *)(a2 + 336) = 0;
      *(_BYTE *)(a2 + 344) = 1;
    }
    v40 = *(_DWORD *)(a1 + 8);
    LODWORD(v47) = 2;
    (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 104))(a1, &v47);
    if (v40 >= 1)
    {
      if (v40 == 2)
      {
        if (v47 >= 2)
        {
          LODWORD(v47) = 2;
          (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 104))(a1, &v47);
          v41 = v47;
          if (v47 >= 3)
          {
            sub_22402C90C();
            sub_22455C3A8((std::string *)&xmmword_2540CECC8, v41, 2u);
          }
          goto LABEL_75;
        }
      }
      else if (v47 > 1)
      {
LABEL_75:
        (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 320);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 324);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 328);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 332);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 336);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 340);
        (*(void (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
        goto LABEL_77;
      }
    }
    sub_224031E5C(a1, a2 + 320, v47);
  }
  else if (*(_BYTE *)(a2 + 344))
  {
    *(_BYTE *)(a2 + 344) = 0;
  }
LABEL_77:
  if (a3 >= 4)
  {
    v47 = a2 + 348;
    sub_224031CA8((_BYTE *)a1, (_DWORD **)&v47);
    v47 = (uint64_t)(*(_QWORD *)(a2 + 360) - *(_QWORD *)(a2 + 352)) >> 2;
    (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v47);
    v43 = *(_QWORD *)(a2 + 352);
    v42 = *(_QWORD *)(a2 + 360);
    v44 = (v42 - v43) >> 2;
    if (v47 <= v44)
    {
      if (v47 < v44)
      {
        v42 = v43 + 4 * v47;
        *(_QWORD *)(a2 + 360) = v42;
      }
    }
    else
    {
      sub_22317F4CC(a2 + 352, v47 - v44);
      v43 = *(_QWORD *)(a2 + 352);
      v42 = *(_QWORD *)(a2 + 360);
    }
    if (v42 != v43)
    {
      v45 = 4 * ((v42 - v43) >> 2);
      do
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, v43);
        v43 += 4;
        v45 -= 4;
      }
      while (v45);
    }
  }
}

void sub_224031CA8(_BYTE *a1, _DWORD **a2)
{
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  int v14;
  uint64_t v15;

  if ((a1[12] & 2) != 0)
  {
    __p[0] = 0;
    __p[1] = 0;
    v13 = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    v3 = SHIBYTE(v13);
    v4 = (char *)__p[0];
    v5 = operator new();
    v6 = v5;
    if (v3 >= 0)
      v7 = (char *)__p;
    else
      v7 = v4;
    sub_22456E918(v5, v7);
    v15 = v6;
    v14 = 0;
    sub_2241492E4((uint64_t *)v6, &v14);
    v8 = v14;
    v9 = MEMORY[0x24BEDB7F0];
    v10 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
    v11 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)(v6 + *(_QWORD *)(v10 - 24)) = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v6 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v6 + 16) = v11;
    if (*(char *)(v6 + 111) < 0)
      operator delete(*(void **)(v6 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v6 + 128);
    MEMORY[0x227684CE8](v6, 0x10B2C40EED050F3);
    **a2 = v8;
    if (SHIBYTE(v13) < 0)
      operator delete(__p[0]);
  }
  else
  {
    LODWORD(__p[0]) = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 104))(a1, __p);
    **a2 = __p[0];
  }
}

void sub_224031E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  sub_22456E764(&a17);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

__n64 sub_224031E5C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  __n64 result;
  __int128 v6;
  int32x2_t v7;
  _OWORD v8[2];

  if (a3 < 2)
  {
    memset(v8, 0, 24);
    (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)a1 + 128))(a1, v8);
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 128))(a1, (char *)v8 + 4);
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 128))(a1, (char *)v8 + 8);
    (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a1 + 128))(a1, (unint64_t)v8 | 0xC);
    (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)a1 + 128))(a1, &v8[1]);
    (*(void (**)(uint64_t, char *))(*(_QWORD *)a1 + 128))(a1, (char *)&v8[1] + 4);
    v6 = v8[0];
    v7 = *(int32x2_t *)((char *)v8 + 12);
    HIDWORD(v6) = HIDWORD(v8[0]);
    *(_OWORD *)a2 = v6;
    result.n64_u32[0] = vdup_lane_s32(v7, 1).u32[0];
    result.n64_u32[1] = DWORD1(v8[1]);
    *(__n64 *)(a2 + 16) = result;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
  }
  return result;
}

_QWORD *sub_224031FD8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *result;

  v5 = *a2;
  v6 = a2[1];
  *a2 = 0;
  a2[1] = 0;
  v7 = (_QWORD *)operator new();
  *v7 = &off_24EC281F8;
  v7[1] = v5;
  v7[2] = v6;
  sub_2231AB0FC((uint64_t)(v7 + 4), a3);
  *v7 = &off_24EC28178;
  *a1 = &off_24EC6A3B8;
  a1[1] = v7;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v7;
  a1[2] = result;
  return result;
}

void sub_2240320A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240320C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  sub_223167354(v10);
  MEMORY[0x227684CE8](v9, 0x10B3C40E92279A6);
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240320FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224032110(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v6 = a2 + 16;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "info";
    *(_QWORD *)(a1 + 80) = 4;
    if (!v7)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22454024C(a1);
  v14 = (unint64_t)"version";
  v15 = 7;
  v16 = 6;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "version";
    *(_QWORD *)(a1 + 80) = 7;
    if (!v8)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224542048(a1, &v16);
  sub_223B8D388(a1, v6, v16);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 **)(v9 - 8);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 56) = v9 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
  v11 = a2 + 192;
  if (*v10 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "value";
    *(_QWORD *)(a1 + 80) = 5;
    *(_BYTE *)(a1 + 88) = 1;
    sub_224027870((uint64_t)&v14, a1, v11);
    if (a3 < 3)
      return;
  }
  else
  {
    sub_224027870((uint64_t)&v14, a1, v11);
    if (a3 < 3)
      return;
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v12 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "textures";
    *(_QWORD *)(a1 + 80) = 8;
    if (!v12)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v13 = *(_QWORD *)(a2 + 576);
  v14 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a2 + 584) - v13) >> 3);
  v15 = v13;
  sub_224543FD4(a1, &v14);
}

void sub_2240322BC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  const void **v15;
  const void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char v23;

  v6 = a2 + 16;
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v7 + 40))
  {
    v22 = (uint64_t *)(v7 + 16);
    sub_22455A7EC(&v22, 6u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v22, v7 + 8);
  }
  sub_224555278(*(_QWORD *)(a1 + 24));
  sub_223B970F8(a1, v6, 6u);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 88) - 8);
  sub_224554D6C((uint64_t *)(v8 + 48), *(_QWORD *)(v8 + 16) - v9 - 9);
  v10 = *(_QWORD *)(v8 + 48);
  if (v10)
    memmove((void *)(*(_QWORD *)(v8 + 24) + v9), *(const void **)(v8 + 56), v10);
  *(_QWORD *)(v8 + 48) = 0;
  v11 = *(_QWORD *)(v8 + 80);
  v12 = *(_QWORD *)(v8 + 88) - 8;
  *(_QWORD *)(v8 + 88) = v12;
  if (v11 == v12)
  {
    std::ostream::write();
    if (*(_BYTE *)(v8 + 40))
    {
      free(*(void **)(v8 + 24));
      *(_BYTE *)(v8 + 40) = 0;
    }
  }
  sub_2240287F0((uint64_t)&v22, a1, a2 + 192);
  if (a3 >= 3)
  {
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 584) - *(_QWORD *)(a2 + 576)) >> 3);
    v14 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v14 + 40))
    {
      v22 = (uint64_t *)(v14 + 16);
      sub_22455B1CC(&v22, v13);
    }
    else
    {
      sub_22455B4D4();
    }
    v15 = *(const void ***)(a2 + 576);
    v16 = *(const void ***)(a2 + 584);
    v17 = ((char *)v16 - (char *)v15) / 24;
    v18 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v18 + 40))
    {
      v22 = (uint64_t *)(v18 + 16);
      if (v16 != v15)
      {
        v19 = 24 * v17;
        do
        {
          sub_22455B8BC((uint64_t)&v23, &v22, v15);
          v15 += 3;
          v19 -= 24;
        }
        while (v19);
      }
    }
    else if (v16 != v15)
    {
      v20 = v18 + 8;
      v21 = 24 * v17;
      do
      {
        sub_22455BCF4((uint64_t)&v22, v20, (uint64_t)v15);
        v15 += 3;
        v21 -= 24;
      }
      while (v21);
    }
  }
}

void sub_2240324AC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v6 = a2 + 16;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "info";
    *(_QWORD *)(a1 + 80) = 4;
    if (!v7)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_22453FAE0(a1);
  v14 = (unint64_t)"version";
  v15 = 7;
  v16 = 6;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "version";
    *(_QWORD *)(a1 + 80) = 7;
    if (!v8)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_224540500(a1, &v16);
  sub_223B98294(a1, v6, v16);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 **)(v9 - 8);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 56) = v9 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
  v11 = a2 + 192;
  if (*v10 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "value";
    *(_QWORD *)(a1 + 80) = 5;
    *(_BYTE *)(a1 + 88) = 1;
    sub_224028918((uint64_t)&v14, a1, v11);
    if (a3 < 3)
      return;
  }
  else
  {
    sub_224028918((uint64_t)&v14, a1, v11);
    if (a3 < 3)
      return;
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v12 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "textures";
    *(_QWORD *)(a1 + 80) = 8;
    if (!v12)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v13 = *(_QWORD *)(a2 + 576);
  v14 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a2 + 584) - v13) >> 3);
  v15 = v13;
  sub_224541EE4(a1, &v14);
}

void sub_224032658(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  _QWORD *v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[48];

  v6 = a2 + 16;
  if (*(_QWORD *)(a1 + 40))
  {
    v7 = *(_QWORD **)(a1 + 24);
    LOBYTE(v21[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v7, (uint64_t)v21, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_223B9FBAC(a1, v6, 6u);
  v8 = *(_BYTE *)(a1 + 34);
  if (*(_QWORD *)(a1 + 40))
  {
    v9 = *(_QWORD **)(a1 + 24);
    LOBYTE(v21[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v9, (uint64_t)v21, 1);
  }
  v10 = *(_QWORD **)(a1 + 24);
  LOBYTE(v21[0]) = v8;
  sub_2231813E8(v10, (uint64_t)v21, 1);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v11 + 1;
  if (v11 != -1)
  {
    v12 = *(_QWORD **)(a1 + 24);
    LOBYTE(v21[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v12, (uint64_t)v21, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_22402821C((uint64_t)v21, a2 + 192);
  sub_2240293C4(a1, v21, 4u);
  sub_2232E7BD4(v21);
  v13 = *(_BYTE *)(a1 + 34);
  if (*(_QWORD *)(a1 + 40))
  {
    v14 = *(_QWORD **)(a1 + 24);
    LOBYTE(v21[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v14, (uint64_t)v21, 1);
  }
  v15 = *(_QWORD **)(a1 + 24);
  LOBYTE(v21[0]) = v13;
  sub_2231813E8(v15, (uint64_t)v21, 1);
  v16 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 40) = v16;
  if (a3 >= 3)
  {
    if (v16)
    {
      v17 = *(_QWORD **)(a1 + 24);
      LOBYTE(v21[0]) = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v17, (uint64_t)v21, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a1 + 40);
    v18 = *(_QWORD *)(a2 + 576);
    v19 = *(_QWORD *)(a2 + 584) - v18;
    if (v19)
    {
      v20 = 24 * (v19 / 24);
      do
      {
        sub_22454F620(a1, v18);
        v18 += 24;
        v20 -= 24;
      }
      while (v20);
    }
  }
}

void sub_224032864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2232E7BD4(&a9);
  _Unwind_Resume(a1);
}

void *sub_224032878(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  char *v15;
  uint64_t v16;
  BOOL v17;
  _BOOL4 v18;
  unint64_t v19;
  uint64_t __src;
  uint64_t v21;

  v6 = a2 + 16;
  LODWORD(__src) = 6;
  v7 = a1 + 24;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
  v8 = __src;
  sub_2244FF590((_QWORD *)a1);
  sub_223BA5FAC(a1, v6, v8);
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a1 + 32) - v9 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  result = sub_22402A070(a1, a2 + 192);
  if (a3 >= 3)
  {
    v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 584) - *(_QWORD *)(a2 + 576)) >> 3);
    result = sub_224501B60(v7, *(char **)(a1 + 32), (char *)&v19, (char *)&__src, 8);
    v11 = *(_QWORD *)(a2 + 576);
    v12 = *(_QWORD *)(a2 + 584) - v11;
    if (v12)
    {
      v13 = 24 * (v12 / 24);
      do
      {
        v16 = *(unsigned __int8 *)(v11 + 23);
        if ((v16 & 0x80u) != 0)
          v16 = *(_QWORD *)(v11 + 8);
        __src = v16;
        sub_224501B60(v7, *(char **)(a1 + 32), (char *)&__src, (char *)&v21, 8);
        if (*(char *)(v11 + 23) < 0)
        {
          v15 = *(char **)v11;
          v14 = *(_QWORD *)(v11 + 8);
          if (*(_QWORD *)v11)
            v17 = 1;
          else
            v17 = v14 == 0;
          if (!v17)
          {
            v18 = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
            v15 = 0;
            if (v18)
              abort();
          }
        }
        else
        {
          v14 = *(unsigned __int8 *)(v11 + 23);
          v15 = (char *)v11;
        }
        result = sub_224501B60(v7, *(char **)(a1 + 32), v15, &v15[v14], v14);
        v11 += 24;
        v13 -= 24;
      }
      while (v13);
    }
  }
  return result;
}

uint64_t *sub_224032A7C(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v6 = a2 + 16;
  v7 = *((_DWORD *)a1 + 2);
  LODWORD(v13) = 6;
  (*(void (**)(_QWORD *, unint64_t *))(*a1 + 104))(a1, &v13);
  v8 = v13;
  if (v7 < 1)
  {
    sub_223BABEC8((uint64_t)a1, v6, v13);
  }
  else
  {
    if (v7 == 2)
    {
      LODWORD(v13) = 3;
      (*(void (**)(_QWORD *, unint64_t *))(*a1 + 104))(a1, &v13);
    }
    (*(void (**)(_QWORD *))(*a1 + 16))(a1);
    sub_223BABEC8((uint64_t)a1, v6, v8);
    (*(void (**)(_QWORD *))(*a1 + 24))(a1);
  }
  v13 = a1[1];
  result = sub_22402A840((int *)&v13, (uint64_t)a1, a2 + 192);
  if (a3 >= 3)
  {
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 584) - *(_QWORD *)(a2 + 576)) >> 3);
    result = (uint64_t *)(*(uint64_t (**)(_QWORD *, unint64_t *))(*a1 + 120))(a1, &v13);
    v10 = *(_QWORD *)(a2 + 576);
    v11 = *(_QWORD *)(a2 + 584) - v10;
    if (v11)
    {
      v12 = 24 * (v11 / 24);
      do
      {
        result = (uint64_t *)(*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 144))(a1, v10);
        v10 += 24;
        v12 -= 24;
      }
      while (v12);
    }
  }
  return result;
}

BOOL sub_224032BF0(const void *a1, uint64_t a2, unsigned int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t *v9;
  int v10;
  void **v11;
  int v12;
  unsigned __int8 *v13;
  char v15;

  v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  v6 = (uint64_t)v5;
  if (v5)
  {
    v7 = *a3;
    v8 = *((unsigned __int8 *)v5 + 104);
    v5[11] = "info";
    v5[12] = 4;
    if (!v8)
      *((_BYTE *)v5 + 104) = 1;
    sub_223BB4B40((uint64_t)v5, a2 + 16);
    v9 = (uint64_t *)(a2 + 192);
    v10 = *(unsigned __int8 *)(v6 + 104);
    *(_QWORD *)(v6 + 88) = "value";
    *(_QWORD *)(v6 + 96) = 5;
    if (v10)
    {
      sub_22402B138(v6, v9);
      if (v7 < 3)
        return v6 != 0;
    }
    else
    {
      *(_BYTE *)(v6 + 104) = 1;
      sub_22402B138(v6, v9);
      if (v7 < 3)
        return v6 != 0;
    }
    v11 = (void **)(a2 + 576);
    v12 = *(unsigned __int8 *)(v6 + 104);
    *(_QWORD *)(v6 + 88) = "textures";
    *(_QWORD *)(v6 + 96) = 8;
    if (!v12)
      *(_BYTE *)(v6 + 104) = 1;
    v15 = 0;
    v13 = (unsigned __int8 *)sub_2245448E0((uint64_t *)v6);
    ++*(_QWORD *)(v6 + 112);
    sub_224546428((uint64_t)&v15, v13, v11);
  }
  return v6 != 0;
}

BOOL sub_224032D0C(const void *a1, uint64_t a2, unsigned int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t *v9;
  int v10;
  void **v11;
  int v12;
  unsigned __int8 *v13;
  char v15;

  v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
  v6 = (uint64_t)v5;
  if (v5)
  {
    v7 = *a3;
    v8 = *((unsigned __int8 *)v5 + 104);
    v5[11] = "info";
    v5[12] = 4;
    if (!v8)
      *((_BYTE *)v5 + 104) = 1;
    sub_223BBD758((uint64_t)v5, a2 + 16);
    v9 = (uint64_t *)(a2 + 192);
    v10 = *(unsigned __int8 *)(v6 + 104);
    *(_QWORD *)(v6 + 88) = "value";
    *(_QWORD *)(v6 + 96) = 5;
    if (v10)
    {
      sub_22402CC7C(v6, v9);
      if (v7 < 3)
        return v6 != 0;
    }
    else
    {
      *(_BYTE *)(v6 + 104) = 1;
      sub_22402CC7C(v6, v9);
      if (v7 < 3)
        return v6 != 0;
    }
    v11 = (void **)(a2 + 576);
    v12 = *(unsigned __int8 *)(v6 + 104);
    *(_QWORD *)(v6 + 88) = "textures";
    *(_QWORD *)(v6 + 96) = 8;
    if (!v12)
      *(_BYTE *)(v6 + 104) = 1;
    v15 = 0;
    v13 = (unsigned __int8 *)sub_2245443F0((uint64_t *)v6);
    ++*(_QWORD *)(v6 + 112);
    sub_224545590((uint64_t)&v15, v13, v11);
  }
  return v6 != 0;
}

double sub_224032E28(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  double result;
  char v12;
  char v13;
  char v14;
  char v15;
  void *__p;
  uint64_t v17;
  char v18;

  v6 = a2 + 16;
  LODWORD(__p) = 6;
  sub_2245508F0(a1, &__p);
  v7 = __p;
  if (__p >= 6)
    v8 = 6;
  else
    v8 = __p;
  if (v8 < 3)
  {
    sub_223BC4F50((uint64_t)&__p, a1, v6, v8);
    if (v7 < 3)
      goto LABEL_9;
LABEL_8:
    if (*(_BYTE *)(a1 + 131))
      goto LABEL_9;
    while (1)
    {
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
        goto LABEL_9;
      sub_2245523C0(a1, (uint64_t)&__p);
      if (v18 < 0)
      {
        if (v17 == 1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_26:
          v13 = 0;
          if (v18 < 0)
            goto LABEL_29;
          goto LABEL_15;
        }
      }
      else if (v18 == 1 && *(unsigned __int8 *)(a1 + 72) == __p)
      {
        goto LABEL_26;
      }
      v13 = 1;
      if (v18 < 0)
LABEL_29:
        operator delete(__p);
LABEL_15:
      if (*(_BYTE *)(a1 + 131))
        v12 = 0;
      else
        v12 = v13;
      if ((v12 & 1) == 0)
        goto LABEL_9;
    }
  }
  sub_223BC5140(a1, v6, v8);
  if (v7 >= 3)
    goto LABEL_8;
LABEL_9:
  LODWORD(__p) = 4;
  sub_2245508F0(a1, &__p);
  v9 = __p;
  if (__p >= 4)
    v10 = 4;
  else
    v10 = __p;
  if (v10 < 3)
  {
    sub_22402E39C((uint64_t)&__p, a1, (uint64_t *)(a2 + 192), v10);
    if (v9 < 3)
      goto LABEL_32;
LABEL_31:
    if (*(_BYTE *)(a1 + 131))
      goto LABEL_32;
    while (1)
    {
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
        goto LABEL_32;
      sub_2245523C0(a1, (uint64_t)&__p);
      if (v18 < 0)
      {
        if (v17 == 1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_46:
          v15 = 0;
          if (v18 < 0)
            goto LABEL_49;
          goto LABEL_35;
        }
      }
      else if (v18 == 1 && *(unsigned __int8 *)(a1 + 72) == __p)
      {
        goto LABEL_46;
      }
      v15 = 1;
      if (v18 < 0)
LABEL_49:
        operator delete(__p);
LABEL_35:
      if (*(_BYTE *)(a1 + 131))
        v14 = 0;
      else
        v14 = v15;
      if ((v14 & 1) == 0)
        goto LABEL_32;
    }
  }
  sub_22402EC14(a1, a2 + 192, v10);
  if (v9 >= 3)
    goto LABEL_31;
LABEL_32:
  if (a3 >= 3)
    *(_QWORD *)&result = sub_223BC5A8C(a1, (char **)(a2 + 576)).n128_u64[0];
  return result;
}

void sub_22403307C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  int v11[3];
  unsigned int v12;

  v6 = a2 + 16;
  v7 = *(_QWORD *)a1;
  *(_QWORD *)v11 = *(_QWORD *)(a1 + 8);
  v12 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v7 + 104))(a1, &v12);
  if (v11[0] < 1)
  {
    if (v12 < 3)
      sub_223BD7864((uint64_t)&v12, a1, v6, v12);
    else
      sub_223BD7AD8(a1, v6, v12);
  }
  else
  {
    sub_223BD7174(v11, a1, v6, v12);
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)v11 = *(_QWORD *)(a1 + 8);
  v9 = v11[0];
  v12 = 4;
  (*(void (**)(uint64_t, unsigned int *))(v8 + 104))(a1, &v12);
  if (v9 >= 1)
  {
    sub_2240305D8(v11, (_BYTE *)a1, (uint64_t *)(a2 + 192), v12);
    if (a3 < 3)
      return;
    goto LABEL_13;
  }
  v10 = (uint64_t *)(a2 + 192);
  if (v12 < 3)
  {
    sub_224030A4C((_BYTE *)a1, v10, v12);
    if (a3 < 3)
      return;
    goto LABEL_13;
  }
  sub_2240313E8(a1, (uint64_t)v10, v12);
  if (a3 >= 3)
LABEL_13:
    sub_223BD8570(a1, (char **)(a2 + 576));
}

uint64_t sub_2240331AC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::string v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  uint64_t *v19;

  v14 = a2;
  v15 = (std::string *)"{";
  v16 = a2;
  v17 = (std::string *)"{";
  v18 = (std::string *)"{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *))off_24EC66D70[v3])(&v13);
  std::to_string(&v13, *a3);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    sub_22316DD70();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24EC66CE0[v6])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24EC66D70[v7])(&v13, a2);
  std::to_string(&v13, a3[1]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
    goto LABEL_16;
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24EC66CE0[v8])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)",";
  v16 = a2;
  v17 = (std::string *)",";
  v18 = (std::string *)",";
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
LABEL_15:
    sub_22316DD70();
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  ((void (*)(std::string *, uint64_t))off_24EC66D70[v9])(&v13, a2);
  std::to_string(&v13, a3[2]);
  v14 = a2;
  v15 = &v13;
  v16 = a2;
  v17 = &v13;
  v18 = &v13;
  v10 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v10 == -1)
LABEL_16:
    sub_22316DD70();
  v19 = &v14;
  ((void (*)(uint64_t **, uint64_t))off_24EC66CE0[v10])(&v19, a2);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v13.__r_.__value_.__l.__data_);
  v14 = a2;
  v15 = (std::string *)"}";
  v16 = a2;
  v17 = (std::string *)"}";
  v18 = (std::string *)"}";
  v11 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v11 == -1)
    goto LABEL_15;
  v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&v14;
  return ((uint64_t (*)(std::string *, uint64_t))off_24EC66D70[v11])(&v13, a2);
}

void sub_2240333C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240333EC(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void **v8;
  void **v9;
  void *v10;
  void *__p;
  void **v12;
  void *__dst[2];
  std::string::size_type v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = sub_2232A1174();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__dst = v5;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 1uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v6, v7);
  v8 = (void **)__p;
  if (__p)
  {
    v9 = v12;
    v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0)
          operator delete(*(v9 - 3));
        v9 -= 3;
      }
      while (v9 != v8);
      v10 = __p;
    }
    v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(__dst[0]);
}

void sub_2240334E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  sub_22319BB48(&a10);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *sub_224033514@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC20A50;
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(a1 + 8);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 88) = 0;
  if (*(_BYTE *)(a1 + 88))
  {
    *(_OWORD *)(v4 + 64) = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(v4 + 80) = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_BYTE *)(v4 + 88) = 1;
  }
  *(_BYTE *)(v4 + 96) = 0;
  *(_BYTE *)(v4 + 120) = 0;
  if (*(_BYTE *)(a1 + 120))
  {
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(a1 + 96);
    *(_QWORD *)(v4 + 112) = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_BYTE *)(v4 + 120) = 1;
  }
  *(_BYTE *)(v4 + 160) = 0;
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a1 + 128);
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a1 + 144);
  *(_BYTE *)(v4 + 208) = 0;
  if (*(_BYTE *)(a1 + 208))
  {
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(a1 + 160);
    *(_QWORD *)(v4 + 176) = *(_QWORD *)(a1 + 176);
    *(_QWORD *)(a1 + 168) = 0;
    *(_QWORD *)(a1 + 176) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    v6 = (unsigned __int128 *)(a1 + 192);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 192) = v7;
    *(_BYTE *)(v4 + 208) = 1;
  }
  *(_BYTE *)(v4 + 224) = 0;
  *(_BYTE *)(v4 + 248) = 0;
  if (*(_BYTE *)(a1 + 248))
  {
    *(_OWORD *)(v4 + 224) = *(_OWORD *)(a1 + 224);
    *(_QWORD *)(v4 + 240) = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_BYTE *)(v4 + 248) = 1;
  }
  *(_QWORD *)v4 = &off_24EC209D0;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_2240336C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2240336DC()
{
  sub_22316DBD4("vector");
}

void sub_2240336F0(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  size_t v5;
  char *v6;
  char *v7;
  int v8;
  _BYTE v9[16];
  void *__p;
  void *v11;
  char *v12;
  _BYTE *v13;

  v9[0] = *(_BYTE *)a2;
  v9[8] = *(_BYTE *)(a2 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  v4 = *(_BYTE **)(a2 + 16);
  v3 = *(_BYTE **)(a2 + 24);
  v5 = v3 - v4;
  if (v3 != v4)
  {
    if ((v5 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v6 = (char *)operator new(v3 - v4);
    v7 = &v6[v5];
    __p = v6;
    v12 = &v6[v5];
    memcpy(v6, v4, v5);
    v11 = v7;
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v8)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v13 = v9;
  sub_224033EEC(a1, &v13);
  sub_2240337FC(v9[0], (uint64_t)v9, a1);
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240337DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240337FC(int a1, uint64_t a2, uint64_t a3)
{
  void **v4;
  int v5;
  int v6;
  int v7;
  int v8;
  void **v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int *v16;
  int v17;
  int v18;
  int *v20;
  int v21;
  int v22;
  int *v24;
  int v25;
  int v26;
  unsigned __int8 *v28;
  int *v29;
  int v30;
  int v31;
  int *v33;
  int v34;
  int v35;
  int *v37;
  int v38;
  int v39;
  int *v41;
  int v42;
  int v43;
  int v45;
  void **v46;
  int *v47;
  int v48;
  int v49;
  int *v51;
  int v52;
  int v53;
  uint64_t v55;
  void **v56;

  switch(a1)
  {
    case 0:
      v4 = (void **)*(unsigned __int8 *)sub_22454C038(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_54;
      }
      else
      {
        v5 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v5)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_54;
      v16 = *(int **)(a3 + 72);
      v17 = *v16;
      v18 = *(int *)((char *)v16 + 3);
      if (v17 != *(_DWORD *)"version" || v18 != *(_DWORD *)"sion")
        goto LABEL_54;
      return;
    case 1:
      v4 = (void **)*(unsigned __int16 *)sub_22454C290(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_54;
      }
      else
      {
        v6 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v6)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_54;
      v20 = *(int **)(a3 + 72);
      v21 = *v20;
      v22 = *(int *)((char *)v20 + 3);
      if (v21 != *(_DWORD *)"version" || v22 != *(_DWORD *)"sion")
        goto LABEL_54;
      return;
    case 2:
      LODWORD(v55) = *(_DWORD *)sub_22454C378(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v7)
          *(_BYTE *)(a3 + 88) = 1;
      }
      sub_224542048(a3, &v55);
      return;
    case 3:
      v4 = *(void ***)sub_22454C460(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
        {
LABEL_54:
          LOBYTE(v55) = 6;
          v56 = v4;
          v28 = (unsigned __int8 *)sub_22453FEA0(a3);
          goto LABEL_83;
        }
      }
      else
      {
        v8 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v8)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_54;
      v24 = *(int **)(a3 + 72);
      v25 = *v24;
      v26 = *(int *)((char *)v24 + 3);
      if (v25 != *(_DWORD *)"version" || v26 != *(_DWORD *)"sion")
        goto LABEL_54;
      return;
    case 5:
      v9 = (void **)*(char *)sub_22454C548(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v10 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v10)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_82;
      v29 = *(int **)(a3 + 72);
      v30 = *v29;
      v31 = *(int *)((char *)v29 + 3);
      if (v30 != *(_DWORD *)"version" || v31 != *(_DWORD *)"sion")
        goto LABEL_82;
      return;
    case 6:
      v9 = (void **)*(__int16 *)sub_22454C630(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v11 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v11)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_82;
      v33 = *(int **)(a3 + 72);
      v34 = *v33;
      v35 = *(int *)((char *)v33 + 3);
      if (v34 != *(_DWORD *)"version" || v35 != *(_DWORD *)"sion")
        goto LABEL_82;
      return;
    case 7:
      v9 = (void **)*(int *)sub_22454C718(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v12 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v12)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_82;
      v37 = *(int **)(a3 + 72);
      v38 = *v37;
      v39 = *(int *)((char *)v37 + 3);
      if (v38 != *(_DWORD *)"version" || v39 != *(_DWORD *)"sion")
        goto LABEL_82;
      return;
    case 8:
      v9 = *(void ***)sub_22454C800(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v13 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v13)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) == 7)
      {
        v41 = *(int **)(a3 + 72);
        v42 = *v41;
        v43 = *(int *)((char *)v41 + 3);
        if (v42 == *(_DWORD *)"version" && v43 == *(_DWORD *)"sion")
          return;
      }
LABEL_82:
      LOBYTE(v55) = 5;
      v56 = v9;
      v28 = (unsigned __int8 *)sub_22453FEA0(a3);
LABEL_83:
      v45 = *v28;
      *v28 = v55;
      LOBYTE(v55) = v45;
      v46 = (void **)*((_QWORD *)v28 + 1);
      *((_QWORD *)v28 + 1) = v56;
      v56 = v46;
      sub_22345337C(&v56, v45);
      return;
    case 11:
      LODWORD(v55) = *(_DWORD *)sub_22454C8E8(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
        {
LABEL_90:
          sub_224542124(a3, (float *)&v55);
          return;
        }
      }
      else
      {
        v14 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v14)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_90;
      v47 = *(int **)(a3 + 72);
      v48 = *v47;
      v49 = *(int *)((char *)v47 + 3);
      if (v48 != *(_DWORD *)"version" || v49 != *(_DWORD *)"sion")
        goto LABEL_90;
      return;
    case 12:
      v55 = *(_QWORD *)sub_22454C9D0(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
        {
LABEL_97:
          sub_22454231C(a3, (double *)&v55);
          return;
        }
      }
      else
      {
        v15 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v15)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_97;
      v51 = *(int **)(a3 + 72);
      v52 = *v51;
      v53 = *(int *)((char *)v51 + 3);
      if (v52 != *(_DWORD *)"version" || v53 != *(_DWORD *)"sion")
        goto LABEL_97;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224033E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224033EEC(uint64_t a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_223B97FF0((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_224033FB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224033FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224033FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224033FF4(uint64_t a1, char *a2)
{
  int v3;
  _BYTE *v4;
  _BYTE *v5;
  size_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _BYTE v10[16];
  void *__p;
  void *v12;
  char *v13;
  uint64_t *v14;

  v3 = *a2;
  v10[0] = *a2;
  v10[8] = a2[8];
  v12 = 0;
  v13 = 0;
  __p = 0;
  v5 = (_BYTE *)*((_QWORD *)a2 + 2);
  v4 = (_BYTE *)*((_QWORD *)a2 + 3);
  v6 = v4 - v5;
  if (v4 != v5)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v7 = (char *)operator new(v4 - v5);
    v8 = &v7[v6];
    __p = v7;
    v13 = &v7[v6];
    memcpy(v7, v5, v6);
    v12 = v8;
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v9 + 40))
  {
    v14 = (uint64_t *)(v9 + 16);
    sub_224559C04(&v14, v3);
  }
  else
  {
    if (v3 < 0)
    {
      LOBYTE(v14) = -52;
      BYTE1(v14) = v3;
    }
    else
    {
      LOBYTE(v14) = v3;
    }
    std::ostream::write();
  }
  sub_2231A6F94(v10[0], (uint64_t)v10, a1);
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224034100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224034120(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  size_t v5;
  char *v6;
  char *v7;
  int v8;
  _BYTE v9[16];
  void *__p;
  void *v11;
  char *v12;
  _BYTE *v13;

  v9[0] = *(_BYTE *)a2;
  v9[8] = *(_BYTE *)(a2 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  v4 = *(_BYTE **)(a2 + 16);
  v3 = *(_BYTE **)(a2 + 24);
  v5 = v3 - v4;
  if (v3 != v4)
  {
    if ((v5 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v6 = (char *)operator new(v3 - v4);
    v7 = &v6[v5];
    __p = v6;
    v12 = &v6[v5];
    memcpy(v6, v4, v5);
    v11 = v7;
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v8)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v13 = v9;
  sub_22403491C(a1, &v13);
  sub_22403422C(v9[0], (uint64_t)v9, a1);
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403420C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403422C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int *v16;
  int v17;
  int v18;
  int *v20;
  int v21;
  int v22;
  int *v24;
  int v25;
  int v26;
  unsigned __int8 *v28;
  int *v29;
  int v30;
  int v31;
  int *v33;
  int v34;
  int v35;
  int *v37;
  int v38;
  int v39;
  int *v41;
  int v42;
  int v43;
  int v45;
  uint64_t v46;
  int *v47;
  int v48;
  int v49;
  int *v51;
  int v52;
  int v53;
  uint64_t v55;
  uint64_t v56;

  switch(a1)
  {
    case 0:
      v4 = *(unsigned __int8 *)sub_22454C038(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_54;
      }
      else
      {
        v5 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v5)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_54;
      v16 = *(int **)(a3 + 72);
      v17 = *v16;
      v18 = *(int *)((char *)v16 + 3);
      if (v17 != *(_DWORD *)"version" || v18 != *(_DWORD *)"sion")
        goto LABEL_54;
      return;
    case 1:
      v4 = *(unsigned __int16 *)sub_22454C290(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_54;
      }
      else
      {
        v6 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v6)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_54;
      v20 = *(int **)(a3 + 72);
      v21 = *v20;
      v22 = *(int *)((char *)v20 + 3);
      if (v21 != *(_DWORD *)"version" || v22 != *(_DWORD *)"sion")
        goto LABEL_54;
      return;
    case 2:
      LODWORD(v55) = *(_DWORD *)sub_22454C378(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v7)
          *(_BYTE *)(a3 + 88) = 1;
      }
      sub_224540500(a3, &v55);
      return;
    case 3:
      v4 = *(_QWORD *)sub_22454C460(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
        {
LABEL_54:
          LOBYTE(v55) = 6;
          v56 = v4;
          v28 = (unsigned __int8 *)sub_22453F8B8(a3);
          goto LABEL_83;
        }
      }
      else
      {
        v8 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v8)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_54;
      v24 = *(int **)(a3 + 72);
      v25 = *v24;
      v26 = *(int *)((char *)v24 + 3);
      if (v25 != *(_DWORD *)"version" || v26 != *(_DWORD *)"sion")
        goto LABEL_54;
      return;
    case 5:
      v9 = *(char *)sub_22454C548(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v10 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v10)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_82;
      v29 = *(int **)(a3 + 72);
      v30 = *v29;
      v31 = *(int *)((char *)v29 + 3);
      if (v30 != *(_DWORD *)"version" || v31 != *(_DWORD *)"sion")
        goto LABEL_82;
      return;
    case 6:
      v9 = *(__int16 *)sub_22454C630(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v11 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v11)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_82;
      v33 = *(int **)(a3 + 72);
      v34 = *v33;
      v35 = *(int *)((char *)v33 + 3);
      if (v34 != *(_DWORD *)"version" || v35 != *(_DWORD *)"sion")
        goto LABEL_82;
      return;
    case 7:
      v9 = *(int *)sub_22454C718(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v12 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v12)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_82;
      v37 = *(int **)(a3 + 72);
      v38 = *v37;
      v39 = *(int *)((char *)v37 + 3);
      if (v38 != *(_DWORD *)"version" || v39 != *(_DWORD *)"sion")
        goto LABEL_82;
      return;
    case 8:
      v9 = *(_QWORD *)sub_22454C800(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
          goto LABEL_82;
      }
      else
      {
        v13 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v13)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) == 7)
      {
        v41 = *(int **)(a3 + 72);
        v42 = *v41;
        v43 = *(int *)((char *)v41 + 3);
        if (v42 == *(_DWORD *)"version" && v43 == *(_DWORD *)"sion")
          return;
      }
LABEL_82:
      LOBYTE(v55) = 5;
      v56 = v9;
      v28 = (unsigned __int8 *)sub_22453F8B8(a3);
LABEL_83:
      v45 = *v28;
      *v28 = v55;
      LOBYTE(v55) = v45;
      v46 = *((_QWORD *)v28 + 1);
      *((_QWORD *)v28 + 1) = v56;
      v56 = v46;
      sub_223454278(&v56, v45);
      return;
    case 11:
      LODWORD(v55) = *(_DWORD *)sub_22454C8E8(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
        {
LABEL_90:
          sub_2245405DC(a3, (float *)&v55);
          return;
        }
      }
      else
      {
        v14 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v14)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_90;
      v47 = *(int **)(a3 + 72);
      v48 = *v47;
      v49 = *(int *)((char *)v47 + 3);
      if (v48 != *(_DWORD *)"version" || v49 != *(_DWORD *)"sion")
        goto LABEL_90;
      return;
    case 12:
      v55 = *(_QWORD *)sub_22454C9D0(a2 + 8);
      if (**(unsigned __int8 **)(a3 + 40) > 1u)
      {
        if (!*(_BYTE *)(a3 + 88))
        {
LABEL_97:
          sub_2245407D4(a3, (double *)&v55);
          return;
        }
      }
      else
      {
        v15 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "number";
        *(_QWORD *)(a3 + 80) = 6;
        if (!v15)
          *(_BYTE *)(a3 + 88) = 1;
      }
      if (*(_QWORD *)(a3 + 80) != 7)
        goto LABEL_97;
      v51 = *(int **)(a3 + 72);
      v52 = *v51;
      v53 = *(int *)((char *)v51 + 3);
      if (v52 != *(_DWORD *)"version" || v53 != *(_DWORD *)"sion")
        goto LABEL_97;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224034874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_22403488C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240348A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240348BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240348D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_2240348EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224034904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_22403491C(uint64_t a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_223B97FF0((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_2240349E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240349FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224034A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224034A24(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;
  _BYTE *v4;
  _BYTE *v5;
  size_t v6;
  char *v7;
  char *v8;
  _BYTE v9[16];
  void *__p;
  void *v11;
  char *v12;
  unsigned __int8 v13;

  v3 = *(_BYTE *)a2;
  v9[0] = *(_BYTE *)a2;
  v9[8] = *(_BYTE *)(a2 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  v5 = *(_BYTE **)(a2 + 16);
  v4 = *(_BYTE **)(a2 + 24);
  v6 = v4 - v5;
  if (v4 != v5)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v7 = (char *)operator new(v4 - v5);
    v8 = &v7[v6];
    __p = v7;
    v12 = &v7[v6];
    memcpy(v7, v5, v6);
    v11 = v8;
  }
  v13 = v3;
  sub_22454F564(a1, &v13);
  sub_223BA59B8(v9[0], (uint64_t)v9, a1);
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224034AE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224034B04(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE *v4;
  _BYTE *v5;
  size_t v6;
  char *v7;
  char *v8;
  _BYTE v9[16];
  void *__p;
  void *v11;
  char *v12;
  char __src;
  uint64_t v14;

  v3 = *(_BYTE *)a2;
  v9[0] = *(_BYTE *)a2;
  v9[8] = *(_BYTE *)(a2 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  v5 = *(_BYTE **)(a2 + 16);
  v4 = *(_BYTE **)(a2 + 24);
  v6 = v4 - v5;
  if (v4 != v5)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v7 = (char *)operator new(v4 - v5);
    v8 = &v7[v6];
    __p = v7;
    v12 = &v7[v6];
    memcpy(v7, v5, v6);
    v11 = v8;
  }
  __src = v3;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v14, 1);
  sub_223BABD44(v9[0], (uint64_t)v9, a1);
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224034BD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224034BF4(_BYTE *a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  size_t v5;
  char *v6;
  char *v7;
  _BYTE v8[16];
  void *__p;
  void *v10;
  char *v11;
  _BYTE *v12;

  v8[0] = *(_BYTE *)a2;
  v8[8] = *(_BYTE *)(a2 + 8);
  v10 = 0;
  v11 = 0;
  __p = 0;
  v4 = *(_BYTE **)(a2 + 16);
  v3 = *(_BYTE **)(a2 + 24);
  v5 = v3 - v4;
  if (v3 != v4)
  {
    if ((v5 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v6 = (char *)operator new(v3 - v4);
    v7 = &v6[v5];
    __p = v6;
    v11 = &v6[v5];
    memcpy(v6, v4, v5);
    v10 = v7;
  }
  v12 = v8;
  sub_223BB23F8(a1, &v12);
  sub_223BB228C(v8[0], (uint64_t)v8, (uint64_t)a1);
  if (__p)
  {
    v10 = __p;
    operator delete(__p);
  }
}

void sub_224034CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224034CD4(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  int v5;
  char *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *exception;
  unint64_t v12;

  sub_224544628(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v12 = 0;
  sub_22451CAD4(v6, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v7 = 2;
  else
    v7 = v12;
  if (v7 < 2)
  {
    sub_224034E00((uint64_t)&v12, a2, (uint64_t)a3);
  }
  else
  {
    v8 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "value_type";
    *(_QWORD *)(a2 + 96) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 104) = 1;
    v12 = (unint64_t)a3;
    sub_224035430((uint64_t *)a2, (_BYTE **)&v12);
    sub_224034FA4(*a3, a2, (uint64_t)a3);
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
}

void sub_224034E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int v6;
  unsigned __int8 v7;
  char v8;
  char *v9;
  size_t v10;
  char *v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  unsigned __int8 *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20[8];
  char v21;
  char *v22;
  char *v23;
  _DWORD *v24;

  v20[0] = 7;
  v21 = 7;
  v5 = (char *)operator new(4uLL);
  v22 = v5;
  *(_DWORD *)v5 = 0;
  v23 = v5 + 4;
  v24 = v5 + 4;
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v15 = v20;
  sub_224035430((uint64_t *)a2, &v15);
  sub_224035620(v20[0], a2, (uint64_t)v20);
  v7 = v20[0];
  LOBYTE(v15) = v20[0];
  v8 = v21;
  v16 = v21;
  v18 = 0;
  v19 = 0;
  v17 = 0;
  v9 = v22;
  v10 = v23 - v22;
  if (v23 == v22)
  {
    v12 = 0;
    v11 = 0;
    *(_BYTE *)a3 = v20[0];
    *(_BYTE *)(a3 + 8) = v8;
    v14 = (_QWORD *)(a3 + 16);
    v13 = *(void **)(a3 + 16);
    if (v13)
    {
LABEL_6:
      *(_QWORD *)(a3 + 24) = v13;
      operator delete(v13);
      *v14 = 0;
      v14[1] = 0;
      v14[2] = 0;
      v9 = v22;
    }
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v11 = (char *)operator new(v23 - v22);
    v12 = &v11[v10];
    memcpy(v11, v9, v10);
    *(_BYTE *)a3 = v7;
    *(_BYTE *)(a3 + 8) = v8;
    v14 = (_QWORD *)(a3 + 16);
    v13 = *(void **)(a3 + 16);
    if (v13)
      goto LABEL_6;
  }
  *(_QWORD *)(a3 + 16) = v11;
  *(_QWORD *)(a3 + 24) = v12;
  *(_QWORD *)(a3 + 32) = v12;
  if (v9)
  {
    v23 = v9;
    operator delete(v9);
  }
}

void sub_224034F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  void *v18;

  if (__p)
  {
    operator delete(__p);
    v18 = a16;
    if (!a16)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v18 = a16;
    if (!a16)
      goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_224034FA4(int a1, uint64_t a2, uint64_t a3)
{
  int v5;
  char *v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;
  int v10;
  char *v11;
  __int16 v12;
  char v13;
  int v14;
  char *v15;
  int v16;
  int v17;
  char *v18;
  unint64_t v19;
  int v20;
  char *v21;
  char v22;
  int v23;
  char *v24;
  __int16 v25;
  int v26;
  char *v27;
  int v28;
  int v29;
  char *v30;
  unint64_t v31;
  int v32;
  uint64_t *v33;
  float v34;
  int v35;
  uint64_t *v36;
  double v37;
  void *v38;
  _QWORD *exception;
  unint64_t v40;

  switch(a1)
  {
    case 0:
      v5 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v5)
        *(_BYTE *)(a2 + 104) = 1;
      v6 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v6, &v40);
      v7 = v40;
      if (v40 >= 0x100)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v7;
      v9 = v8 + 1;
      *(_BYTE *)(a3 + 8) = 0;
      goto LABEL_39;
    case 1:
      v10 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v10)
        *(_BYTE *)(a2 + 104) = 1;
      v11 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v11, &v40);
      v12 = v40;
      if (v40 >= 0x10000)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v12;
      v9 = v8 + 2;
      v13 = 1;
      goto LABEL_38;
    case 2:
      v14 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v14)
        *(_BYTE *)(a2 + 104) = 1;
      v15 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v15, &v40);
      v16 = v40;
      if (HIDWORD(v40))
        goto LABEL_42;
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v16;
      v9 = v8 + 4;
      v13 = 2;
      goto LABEL_38;
    case 3:
      v17 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v17)
        *(_BYTE *)(a2 + 104) = 1;
      v18 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v18, &v40);
      v19 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v19;
      v9 = v8 + 8;
      v13 = 3;
      goto LABEL_38;
    case 5:
      v20 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v20)
        *(_BYTE *)(a2 + 104) = 1;
      v21 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v21, &v40);
      v22 = v40;
      if (v40 != (char)v40)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v22;
      v9 = v8 + 1;
      v13 = 5;
      goto LABEL_38;
    case 6:
      v23 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v23)
        *(_BYTE *)(a2 + 104) = 1;
      v24 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v24, &v40);
      v25 = v40;
      if (v40 != (__int16)v40)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v25;
      v9 = v8 + 2;
      v13 = 6;
      goto LABEL_38;
    case 7:
      v26 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a2 + 104) = 1;
      v27 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v27, &v40);
      v28 = v40;
      if (v40 != (int)v40)
      {
LABEL_42:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v28;
      v9 = v8 + 4;
      v13 = 7;
      goto LABEL_38;
    case 8:
      v29 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v29)
        *(_BYTE *)(a2 + 104) = 1;
      v30 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v30, &v40);
      v31 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v31;
      v9 = v8 + 8;
      *(_BYTE *)(a3 + 8) = 8;
      goto LABEL_39;
    case 11:
      v32 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v32)
        *(_BYTE *)(a2 + 104) = 1;
      v33 = (uint64_t *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v34 = sub_22454AD28(v33);
      v8 = operator new(4uLL);
      *(float *)v8 = v34;
      v9 = v8 + 4;
      v13 = 11;
      goto LABEL_38;
    case 12:
      v35 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v35)
        *(_BYTE *)(a2 + 104) = 1;
      v36 = (uint64_t *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v37 = sub_22454AE08(v36);
      v8 = operator new(8uLL);
      *(double *)v8 = v37;
      v9 = v8 + 8;
      v13 = 12;
LABEL_38:
      *(_BYTE *)(a3 + 8) = v13;
LABEL_39:
      v38 = *(void **)(a3 + 16);
      if (v38)
      {
        *(_QWORD *)(a3 + 24) = v38;
        operator delete(v38);
      }
      *(_QWORD *)(a3 + 16) = v8;
      *(_QWORD *)(a3 + 24) = v9;
      *(_QWORD *)(a3 + 32) = v9;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224035430(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_22454B5A4((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_224035594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_224035620(int a1, uint64_t a2, uint64_t a3)
{
  int v5;
  char *v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;
  int v10;
  char *v11;
  __int16 v12;
  char v13;
  int v14;
  char *v15;
  int v16;
  int v17;
  char *v18;
  unint64_t v19;
  int v20;
  char *v21;
  char v22;
  int v23;
  char *v24;
  __int16 v25;
  int v26;
  char *v27;
  int v28;
  int v29;
  char *v30;
  unint64_t v31;
  int v32;
  uint64_t *v33;
  float v34;
  int v35;
  uint64_t *v36;
  double v37;
  void *v38;
  _QWORD *exception;
  unint64_t v40;

  switch(a1)
  {
    case 0:
      v5 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v5)
        *(_BYTE *)(a2 + 104) = 1;
      v6 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v6, &v40);
      v7 = v40;
      if (v40 >= 0x100)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v7;
      v9 = v8 + 1;
      *(_BYTE *)(a3 + 8) = 0;
      goto LABEL_39;
    case 1:
      v10 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v10)
        *(_BYTE *)(a2 + 104) = 1;
      v11 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v11, &v40);
      v12 = v40;
      if (v40 >= 0x10000)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v12;
      v9 = v8 + 2;
      v13 = 1;
      goto LABEL_38;
    case 2:
      v14 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v14)
        *(_BYTE *)(a2 + 104) = 1;
      v15 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v15, &v40);
      v16 = v40;
      if (HIDWORD(v40))
        goto LABEL_42;
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v16;
      v9 = v8 + 4;
      v13 = 2;
      goto LABEL_38;
    case 3:
      v17 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v17)
        *(_BYTE *)(a2 + 104) = 1;
      v18 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CAD4(v18, &v40);
      v19 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v19;
      v9 = v8 + 8;
      v13 = 3;
      goto LABEL_38;
    case 5:
      v20 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v20)
        *(_BYTE *)(a2 + 104) = 1;
      v21 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v21, &v40);
      v22 = v40;
      if (v40 != (char)v40)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v22;
      v9 = v8 + 1;
      v13 = 5;
      goto LABEL_38;
    case 6:
      v23 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v23)
        *(_BYTE *)(a2 + 104) = 1;
      v24 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v24, &v40);
      v25 = v40;
      if (v40 != (__int16)v40)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v25;
      v9 = v8 + 2;
      v13 = 6;
      goto LABEL_38;
    case 7:
      v26 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a2 + 104) = 1;
      v27 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v27, &v40);
      v28 = v40;
      if (v40 != (int)v40)
      {
LABEL_42:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v28;
      v9 = v8 + 4;
      v13 = 7;
      goto LABEL_38;
    case 8:
      v29 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v29)
        *(_BYTE *)(a2 + 104) = 1;
      v30 = (char *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451CC1C(v30, &v40);
      v31 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v31;
      v9 = v8 + 8;
      *(_BYTE *)(a3 + 8) = 8;
      goto LABEL_39;
    case 11:
      v32 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v32)
        *(_BYTE *)(a2 + 104) = 1;
      v33 = (uint64_t *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v34 = sub_22454AD28(v33);
      v8 = operator new(4uLL);
      *(float *)v8 = v34;
      v9 = v8 + 4;
      v13 = 11;
      goto LABEL_38;
    case 12:
      v35 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v35)
        *(_BYTE *)(a2 + 104) = 1;
      v36 = (uint64_t *)sub_2245448E0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v37 = sub_22454AE08(v36);
      v8 = operator new(8uLL);
      *(double *)v8 = v37;
      v9 = v8 + 8;
      v13 = 12;
LABEL_38:
      *(_BYTE *)(a3 + 8) = v13;
LABEL_39:
      v38 = *(void **)(a3 + 16);
      if (v38)
      {
        *(_QWORD *)(a3 + 24) = v38;
        operator delete(v38);
      }
      *(_QWORD *)(a3 + 16) = v8;
      *(_QWORD *)(a3 + 24) = v9;
      *(_QWORD *)(a3 + 32) = v9;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224035AAC(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  int v5;
  char *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *exception;
  unint64_t v12;

  sub_224544138(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v12 = 0;
  sub_22451C444(v6, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v7 = 2;
  else
    v7 = v12;
  if (v7 < 2)
  {
    sub_224035BD8((uint64_t)&v12, a2, (uint64_t)a3);
  }
  else
  {
    v8 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "value_type";
    *(_QWORD *)(a2 + 96) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 104) = 1;
    v12 = (unint64_t)a3;
    sub_224036208((uint64_t *)a2, (_BYTE **)&v12);
    sub_224035D7C(*a3, a2, (uint64_t)a3);
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
}

void sub_224035BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int v6;
  unsigned __int8 v7;
  char v8;
  char *v9;
  size_t v10;
  char *v11;
  char *v12;
  void *v13;
  _QWORD *v14;
  unsigned __int8 *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20[8];
  char v21;
  char *v22;
  char *v23;
  _DWORD *v24;

  v20[0] = 7;
  v21 = 7;
  v5 = (char *)operator new(4uLL);
  v22 = v5;
  *(_DWORD *)v5 = 0;
  v23 = v5 + 4;
  v24 = v5 + 4;
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v15 = v20;
  sub_224036208((uint64_t *)a2, &v15);
  sub_2240363F8(v20[0], a2, (uint64_t)v20);
  v7 = v20[0];
  LOBYTE(v15) = v20[0];
  v8 = v21;
  v16 = v21;
  v18 = 0;
  v19 = 0;
  v17 = 0;
  v9 = v22;
  v10 = v23 - v22;
  if (v23 == v22)
  {
    v12 = 0;
    v11 = 0;
    *(_BYTE *)a3 = v20[0];
    *(_BYTE *)(a3 + 8) = v8;
    v14 = (_QWORD *)(a3 + 16);
    v13 = *(void **)(a3 + 16);
    if (v13)
    {
LABEL_6:
      *(_QWORD *)(a3 + 24) = v13;
      operator delete(v13);
      *v14 = 0;
      v14[1] = 0;
      v14[2] = 0;
      v9 = v22;
    }
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_2240336DC();
    v11 = (char *)operator new(v23 - v22);
    v12 = &v11[v10];
    memcpy(v11, v9, v10);
    *(_BYTE *)a3 = v7;
    *(_BYTE *)(a3 + 8) = v8;
    v14 = (_QWORD *)(a3 + 16);
    v13 = *(void **)(a3 + 16);
    if (v13)
      goto LABEL_6;
  }
  *(_QWORD *)(a3 + 16) = v11;
  *(_QWORD *)(a3 + 24) = v12;
  *(_QWORD *)(a3 + 32) = v12;
  if (v9)
  {
    v23 = v9;
    operator delete(v9);
  }
}

void sub_224035D30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  void *v18;

  if (__p)
  {
    operator delete(__p);
    v18 = a16;
    if (!a16)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v18 = a16;
    if (!a16)
      goto LABEL_3;
  }
  operator delete(v18);
  _Unwind_Resume(exception_object);
}

void sub_224035D7C(int a1, uint64_t a2, uint64_t a3)
{
  int v5;
  char *v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;
  int v10;
  char *v11;
  __int16 v12;
  char v13;
  int v14;
  char *v15;
  int v16;
  int v17;
  char *v18;
  unint64_t v19;
  int v20;
  char *v21;
  char v22;
  int v23;
  char *v24;
  __int16 v25;
  int v26;
  char *v27;
  int v28;
  int v29;
  char *v30;
  unint64_t v31;
  int v32;
  uint64_t *v33;
  float v34;
  int v35;
  uint64_t *v36;
  double v37;
  void *v38;
  _QWORD *exception;
  unint64_t v40;

  switch(a1)
  {
    case 0:
      v5 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v5)
        *(_BYTE *)(a2 + 104) = 1;
      v6 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v6, &v40);
      v7 = v40;
      if (v40 >= 0x100)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v7;
      v9 = v8 + 1;
      *(_BYTE *)(a3 + 8) = 0;
      goto LABEL_39;
    case 1:
      v10 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v10)
        *(_BYTE *)(a2 + 104) = 1;
      v11 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v11, &v40);
      v12 = v40;
      if (v40 >= 0x10000)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v12;
      v9 = v8 + 2;
      v13 = 1;
      goto LABEL_38;
    case 2:
      v14 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v14)
        *(_BYTE *)(a2 + 104) = 1;
      v15 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v15, &v40);
      v16 = v40;
      if (HIDWORD(v40))
        goto LABEL_42;
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v16;
      v9 = v8 + 4;
      v13 = 2;
      goto LABEL_38;
    case 3:
      v17 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v17)
        *(_BYTE *)(a2 + 104) = 1;
      v18 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v18, &v40);
      v19 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v19;
      v9 = v8 + 8;
      v13 = 3;
      goto LABEL_38;
    case 5:
      v20 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v20)
        *(_BYTE *)(a2 + 104) = 1;
      v21 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v21, &v40);
      v22 = v40;
      if (v40 != (char)v40)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v22;
      v9 = v8 + 1;
      v13 = 5;
      goto LABEL_38;
    case 6:
      v23 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v23)
        *(_BYTE *)(a2 + 104) = 1;
      v24 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v24, &v40);
      v25 = v40;
      if (v40 != (__int16)v40)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v25;
      v9 = v8 + 2;
      v13 = 6;
      goto LABEL_38;
    case 7:
      v26 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a2 + 104) = 1;
      v27 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v27, &v40);
      v28 = v40;
      if (v40 != (int)v40)
      {
LABEL_42:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v28;
      v9 = v8 + 4;
      v13 = 7;
      goto LABEL_38;
    case 8:
      v29 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v29)
        *(_BYTE *)(a2 + 104) = 1;
      v30 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v30, &v40);
      v31 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v31;
      v9 = v8 + 8;
      *(_BYTE *)(a3 + 8) = 8;
      goto LABEL_39;
    case 11:
      v32 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v32)
        *(_BYTE *)(a2 + 104) = 1;
      v33 = (uint64_t *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v34 = sub_22454A580(v33);
      v8 = operator new(4uLL);
      *(float *)v8 = v34;
      v9 = v8 + 4;
      v13 = 11;
      goto LABEL_38;
    case 12:
      v35 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v35)
        *(_BYTE *)(a2 + 104) = 1;
      v36 = (uint64_t *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v37 = sub_22454A660(v36);
      v8 = operator new(8uLL);
      *(double *)v8 = v37;
      v9 = v8 + 8;
      v13 = 12;
LABEL_38:
      *(_BYTE *)(a3 + 8) = v13;
LABEL_39:
      v38 = *(void **)(a3 + 16);
      if (v38)
      {
        *(_QWORD *)(a3 + 24) = v38;
        operator delete(v38);
      }
      *(_QWORD *)(a3 + 16) = v8;
      *(_QWORD *)(a3 + 24) = v9;
      *(_QWORD *)(a3 + 32) = v9;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224036208(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_22454B5A4((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_22403636C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240363F8(int a1, uint64_t a2, uint64_t a3)
{
  int v5;
  char *v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;
  int v10;
  char *v11;
  __int16 v12;
  char v13;
  int v14;
  char *v15;
  int v16;
  int v17;
  char *v18;
  unint64_t v19;
  int v20;
  char *v21;
  char v22;
  int v23;
  char *v24;
  __int16 v25;
  int v26;
  char *v27;
  int v28;
  int v29;
  char *v30;
  unint64_t v31;
  int v32;
  uint64_t *v33;
  float v34;
  int v35;
  uint64_t *v36;
  double v37;
  void *v38;
  _QWORD *exception;
  unint64_t v40;

  switch(a1)
  {
    case 0:
      v5 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v5)
        *(_BYTE *)(a2 + 104) = 1;
      v6 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v6, &v40);
      v7 = v40;
      if (v40 >= 0x100)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v7;
      v9 = v8 + 1;
      *(_BYTE *)(a3 + 8) = 0;
      goto LABEL_39;
    case 1:
      v10 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v10)
        *(_BYTE *)(a2 + 104) = 1;
      v11 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v11, &v40);
      v12 = v40;
      if (v40 >= 0x10000)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v12;
      v9 = v8 + 2;
      v13 = 1;
      goto LABEL_38;
    case 2:
      v14 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v14)
        *(_BYTE *)(a2 + 104) = 1;
      v15 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v15, &v40);
      v16 = v40;
      if (HIDWORD(v40))
        goto LABEL_42;
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v16;
      v9 = v8 + 4;
      v13 = 2;
      goto LABEL_38;
    case 3:
      v17 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v17)
        *(_BYTE *)(a2 + 104) = 1;
      v18 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C444(v18, &v40);
      v19 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v19;
      v9 = v8 + 8;
      v13 = 3;
      goto LABEL_38;
    case 5:
      v20 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v20)
        *(_BYTE *)(a2 + 104) = 1;
      v21 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v21, &v40);
      v22 = v40;
      if (v40 != (char)v40)
        goto LABEL_42;
      v8 = operator new(1uLL);
      *v8 = v22;
      v9 = v8 + 1;
      v13 = 5;
      goto LABEL_38;
    case 6:
      v23 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v23)
        *(_BYTE *)(a2 + 104) = 1;
      v24 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v24, &v40);
      v25 = v40;
      if (v40 != (__int16)v40)
        goto LABEL_42;
      v8 = operator new(2uLL);
      *(_WORD *)v8 = v25;
      v9 = v8 + 2;
      v13 = 6;
      goto LABEL_38;
    case 7:
      v26 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a2 + 104) = 1;
      v27 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v27, &v40);
      v28 = v40;
      if (v40 != (int)v40)
      {
LABEL_42:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      v8 = operator new(4uLL);
      *(_DWORD *)v8 = v28;
      v9 = v8 + 4;
      v13 = 7;
      goto LABEL_38;
    case 8:
      v29 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v29)
        *(_BYTE *)(a2 + 104) = 1;
      v30 = (char *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v40 = 0;
      sub_22451C58C(v30, &v40);
      v31 = v40;
      v8 = operator new(8uLL);
      *(_QWORD *)v8 = v31;
      v9 = v8 + 8;
      *(_BYTE *)(a3 + 8) = 8;
      goto LABEL_39;
    case 11:
      v32 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v32)
        *(_BYTE *)(a2 + 104) = 1;
      v33 = (uint64_t *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v34 = sub_22454A580(v33);
      v8 = operator new(4uLL);
      *(float *)v8 = v34;
      v9 = v8 + 4;
      v13 = 11;
      goto LABEL_38;
    case 12:
      v35 = *(unsigned __int8 *)(a2 + 104);
      *(_QWORD *)(a2 + 88) = "number";
      *(_QWORD *)(a2 + 96) = 6;
      if (!v35)
        *(_BYTE *)(a2 + 104) = 1;
      v36 = (uint64_t *)sub_2245443F0((uint64_t *)a2);
      ++*(_QWORD *)(a2 + 112);
      v37 = sub_22454A660(v36);
      v8 = operator new(8uLL);
      *(double *)v8 = v37;
      v9 = v8 + 8;
      v13 = 12;
LABEL_38:
      *(_BYTE *)(a3 + 8) = v13;
LABEL_39:
      v38 = *(void **)(a3 + 16);
      if (v38)
      {
        *(_QWORD *)(a3 + 24) = v38;
        operator delete(v38);
      }
      *(_QWORD *)(a3 + 16) = v8;
      *(_QWORD *)(a3 + 24) = v9;
      *(_QWORD *)(a3 + 32) = v9;
      return;
    default:
      sub_22454B274(a1);
  }
}

_QWORD *sub_224036884@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC2B830;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(v4 + 72) = 1;
  }
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 176) = v7;
    *(_BYTE *)(v4 + 192) = 1;
  }
  *(_BYTE *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    *(_OWORD *)(v4 + 208) = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(v4 + 224) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *(_BYTE *)(v4 + 232) = 1;
  }
  *(_QWORD *)v4 = &off_24EC2B7B0;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_224036A1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_224036A38(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  int v7;
  int *v8;
  int v9;
  int v10;
  unsigned __int8 *v12;
  int v13;
  void **v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  __int128 *v21;
  void **v22;

  v18 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v19 = *((_QWORD *)a2 + 2);
  v20 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v21 = &v18;
  sub_224033EEC(a1, (_BYTE **)&v21);
  if (**(unsigned __int8 **)(a1 + 40) > 1u)
  {
    if (*(_BYTE *)(a1 + 88) && *(_QWORD *)(a1 + 80) == 7)
    {
      v8 = *(int **)(a1 + 72);
      v9 = *v8;
      v10 = *(int *)((char *)v8 + 3);
      if (v9 == *(_DWORD *)"version" && v10 == *(_DWORD *)"sion")
        goto LABEL_17;
    }
  }
  else
  {
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "size";
    *(_QWORD *)(a1 + 80) = 4;
    if (!v7)
      *(_BYTE *)(a1 + 88) = 1;
  }
  LOBYTE(v21) = 6;
  v22 = (void **)*((_QWORD *)&v18 + 1);
  v12 = (unsigned __int8 *)sub_22453FEA0(a1);
  v13 = *v12;
  *v12 = v21;
  LOBYTE(v21) = v13;
  v14 = (void **)*((_QWORD *)v12 + 1);
  *((_QWORD *)v12 + 1) = v22;
  v22 = v14;
  sub_22345337C(&v22, v13);
LABEL_17:
  sub_224036C0C(v18, (uint64_t)&v18, a1);
  v15 = v20;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_224036BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_22345337C(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224036BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224036C0C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  float *v7;
  BOOL v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  float *v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  int v54;
  float *v55;
  uint64_t v56;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(a2 + 16);
      v7 = *(float **)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v9 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v9)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v7;
      v56 = v6;
      sub_2245403C8(a3, (size_t *)&v55);
      break;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v10 = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (v13
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v14 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v14)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v12 >> 1);
      v56 = v11;
      sub_2245429C8(a3, (uint64_t)&v55);
      break;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v15 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (v18
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v19 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v19)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v17 >> 2);
      v56 = v16;
      sub_224542C38(a3, (uint64_t)&v55);
      break;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v20 = *(_QWORD *)(a2 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (v23
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v24 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v24)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v22 >> 3);
      v56 = v21;
      sub_224543118(a3, (uint64_t)&v55);
      break;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v25 = *(_QWORD *)(a2 + 16);
      v27 = *(float **)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (!v28
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v29 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v29)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v27;
      v56 = v26;
      sub_224542758(a3, (size_t *)&v55);
      break;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v30 = *(_QWORD *)(a2 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (v33
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v34 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v34)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v32 >> 1);
      v56 = v31;
      sub_224542890(a3, (uint64_t)&v55);
      break;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v35 = *(_QWORD *)(a2 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (v38
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v39 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v39)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v37 >> 2);
      v56 = v36;
      sub_224542B00(a3, (uint64_t)&v55);
      break;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v40 = *(_QWORD *)(a2 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (v43
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v44 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v44)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v42 >> 3);
      v56 = v41;
      sub_224542FE0(a3, (uint64_t)&v55);
      break;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v45 = *(_QWORD *)(a2 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (v48
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v49 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v49)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v47 >> 2);
      v56 = v46;
      sub_2245436F8(a3, &v55);
      break;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v50 = *(_QWORD *)(a2 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_100:
        abort();
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v54 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v54)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = (float *)(v52 >> 3);
      v56 = v51;
      sub_224543B18(a3, &v55);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224037304(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v6 + 40))
  {
    v14 = (uint64_t *)(v6 + 16);
    sub_224559C04(&v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14) = -52;
      BYTE1(v14) = v11;
    }
    else
    {
      LOBYTE(v14) = v11;
    }
    std::ostream::write();
  }
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v7 + 40))
  {
    v14 = (uint64_t *)(v7 + 16);
    sub_22455B1CC(&v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_22455B4D4();
  }
  sub_22403744C(v11, (uint64_t)&v11, a1);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_224037438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22403744C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  unsigned int *v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  __int16 *v35;
  unint64_t v36;
  BOOL v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unint64_t v43;
  BOOL v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  BOOL v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  BOOL v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  __int128 v82;
  uint64_t v83;

  v83 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v6 = *(_QWORD *)(a2 + 16);
      v8 = *(_QWORD *)(v6 + 40);
      v7 = *(char **)(v6 + 48);
      if (v7)
        v9 = 1;
      else
        v9 = v8 == 0;
      if (!v9)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v10 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v10 + 40))
      {
        for (*(_QWORD *)&v82 = v10 + 16; v8; --v8)
          result = (uint64_t)sub_224559C04((uint64_t **)&v82, *v7++);
      }
      else
      {
        for (; v8; --v8)
        {
          v69 = *v7;
          if (v69 < 0)
          {
            LOBYTE(v82) = -52;
            BYTE1(v82) = v69;
          }
          else
          {
            LOBYTE(v82) = *v7;
          }
          result = std::ostream::write();
          ++v7;
        }
      }
      break;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v11 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      *(_QWORD *)&v82 = v13 >> 1;
      *((_QWORD *)&v82 + 1) = v12;
      result = sub_224553564(*(_QWORD *)(a3 + 24), &v82);
      break;
    case 2:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v15 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(unsigned int **)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (v18)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v19 = v17 >> 2;
      v20 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v20 + 40))
      {
        *(_QWORD *)&v82 = v20 + 16;
        if (v17 >= 4)
        {
          v21 = 4 * v19;
          do
          {
            result = (uint64_t)sub_22455A7EC((uint64_t **)&v82, *v16++);
            v21 -= 4;
          }
          while (v21);
        }
      }
      else if (v17 >= 4)
      {
        v70 = v20 + 8;
        v71 = 4 * v19;
        do
        {
          result = sub_22455AA60((uint64_t)&v82, v70);
          ++v16;
          v71 -= 4;
        }
        while (v71);
      }
      break;
    case 3:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v22 = *(_QWORD *)(a2 + 16);
      v24 = *(_QWORD *)(v22 + 40);
      v23 = *(unint64_t **)(v22 + 48);
      if (v23)
        v25 = 0;
      else
        v25 = v24 >= 8;
      if (v25)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v26 = v24 >> 3;
      v27 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v27 + 40))
      {
        *(_QWORD *)&v82 = v27 + 16;
        if (v24 >= 8)
        {
          v28 = 8 * v26;
          do
          {
            result = (uint64_t)sub_22455B1CC((uint64_t **)&v82, *v23++);
            v28 -= 8;
          }
          while (v28);
        }
      }
      else if (v24 >= 8)
      {
        v72 = 8 * v26;
        do
        {
          ++v23;
          result = sub_22455B4D4();
          v72 -= 8;
        }
        while (v72);
      }
      break;
    case 5:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v29 = *(_QWORD *)(a2 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_BYTE **)(v29 + 48);
      if (v30)
        v32 = 1;
      else
        v32 = v31 == 0;
      if (!v32)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v33 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v33 + 40))
      {
        for (*(_QWORD *)&v82 = v33 + 16; v31; --v31)
          result = (uint64_t)sub_224559ABC((uint64_t **)&v82, (char)*v30++);
      }
      else
      {
        for (; v31; --v31)
        {
          v73 = (char)*v30;
          if (v73 > -33)
          {
            LOBYTE(v82) = *v30;
          }
          else
          {
            LOBYTE(v82) = -48;
            BYTE1(v82) = v73;
          }
          result = std::ostream::write();
          ++v30;
        }
      }
      break;
    case 6:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v34 = *(_QWORD *)(a2 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(__int16 **)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 2;
      if (v37)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v38 = v36 >> 1;
      v39 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v39 + 40))
      {
        *(_QWORD *)&v82 = v39 + 16;
        if (v36 >= 2)
        {
          v40 = 2 * v38;
          do
          {
            result = (uint64_t)sub_224559D48((uint64_t **)&v82, *v35++);
            v40 -= 2;
          }
          while (v40);
        }
      }
      else if (v36 >= 2)
      {
        v74 = 2 * v38;
        do
        {
          ++v35;
          result = sub_22455A00C();
          v74 -= 2;
        }
        while (v74);
      }
      break;
    case 7:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v41 = *(_QWORD *)(a2 + 16);
      v43 = *(_QWORD *)(v41 + 40);
      v42 = *(unsigned int **)(v41 + 48);
      if (v42)
        v44 = 0;
      else
        v44 = v43 >= 4;
      if (v44)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v45 = v43 >> 2;
      v46 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v46 + 40))
      {
        *(_QWORD *)&v82 = v46 + 16;
        if (v43 >= 4)
        {
          v47 = 4 * v45;
          do
          {
            result = (uint64_t)sub_22455A2D4((uint64_t **)&v82, *v42++);
            v47 -= 4;
          }
          while (v47);
        }
      }
      else if (v43 >= 4)
      {
        v75 = 4 * v45;
        do
        {
          ++v42;
          result = sub_22455A6F0();
          v75 -= 4;
        }
        while (v75);
      }
      break;
    case 8:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v48 = *(_QWORD *)(a2 + 16);
      v50 = *(_QWORD *)(v48 + 40);
      v49 = *(unint64_t **)(v48 + 48);
      if (v49)
        v51 = 0;
      else
        v51 = v50 >= 8;
      if (v51)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v52 = v50 >> 3;
      v53 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v53 + 40))
      {
        *(_QWORD *)&v82 = v53 + 16;
        if (v50 >= 8)
        {
          v54 = 8 * v52;
          do
          {
            result = (uint64_t)sub_22455AB50((uint64_t **)&v82, *v49++);
            v54 -= 8;
          }
          while (v54);
        }
      }
      else if (v50 >= 8)
      {
        v76 = 8 * v52;
        do
        {
          ++v49;
          result = sub_22455B08C();
          v76 -= 8;
        }
        while (v76);
      }
      break;
    case 11:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v55 = *(_QWORD *)(a2 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unsigned int **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 4;
      if (v58)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 2;
      v60 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v82 = v60 + 16;
        if (v57 >= 4)
        {
          v61 = 4 * v59;
          do
          {
            result = (uint64_t)sub_22455B5CC((uint64_t)&v81, (uint64_t **)&v82, v56++);
            v61 -= 4;
          }
          while (v61);
        }
      }
      else if (v57 >= 4)
      {
        v77 = 4 * v59;
        do
        {
          v78 = *v56;
          LOBYTE(v82) = -54;
          *(_DWORD *)((char *)&v82 + 1) = bswap32(v78);
          result = std::ostream::write();
          ++v56;
          v77 -= 4;
        }
        while (v77);
      }
      break;
    case 12:
      result = (uint64_t)sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v62 = *(_QWORD *)(a2 + 16);
      v64 = *(_QWORD *)(v62 + 40);
      v63 = *(unint64_t **)(v62 + 48);
      if (v63)
        v65 = 0;
      else
        v65 = v64 >= 8;
      if (v65)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v66 = v64 >> 3;
      v67 = *(_QWORD *)(a3 + 24);
      if (*(_BYTE *)(v67 + 40))
      {
        *(_QWORD *)&v82 = v67 + 16;
        if (v64 >= 8)
        {
          v68 = 8 * v66;
          do
          {
            result = (uint64_t)sub_22455B6A8((uint64_t)&v81, (uint64_t **)&v82, v63++);
            v68 -= 8;
          }
          while (v68);
        }
      }
      else if (v64 >= 8)
      {
        v79 = 8 * v66;
        do
        {
          v80 = *v63;
          LOBYTE(v82) = -53;
          *(_QWORD *)((char *)&v82 + 1) = bswap64(v80);
          result = std::ostream::write();
          ++v63;
          v79 -= 8;
        }
        while (v79);
      }
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_224037C58(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  int v7;
  int *v8;
  int v9;
  int v10;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  __int128 *v21;
  uint64_t v22;

  v18 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v19 = *((_QWORD *)a2 + 2);
  v20 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v21 = &v18;
  sub_22403491C(a1, (_BYTE **)&v21);
  if (**(unsigned __int8 **)(a1 + 40) > 1u)
  {
    if (*(_BYTE *)(a1 + 88) && *(_QWORD *)(a1 + 80) == 7)
    {
      v8 = *(int **)(a1 + 72);
      v9 = *v8;
      v10 = *(int *)((char *)v8 + 3);
      if (v9 == *(_DWORD *)"version" && v10 == *(_DWORD *)"sion")
        goto LABEL_17;
    }
  }
  else
  {
    v7 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "size";
    *(_QWORD *)(a1 + 80) = 4;
    if (!v7)
      *(_BYTE *)(a1 + 88) = 1;
  }
  LOBYTE(v21) = 6;
  v22 = *((_QWORD *)&v18 + 1);
  v12 = (unsigned __int8 *)sub_22453F8B8(a1);
  v13 = *v12;
  *v12 = v21;
  LOBYTE(v21) = v13;
  v14 = *((_QWORD *)v12 + 1);
  *((_QWORD *)v12 + 1) = v22;
  v22 = v14;
  sub_223454278(&v22, v13);
LABEL_17:
  sub_224037E2C(v18, (uint64_t)&v18, a1);
  v15 = v20;
  if (v20)
  {
    v16 = (unint64_t *)&v20->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_224037DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_223454278(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224037E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224037E2C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  BOOL v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  int v54;
  size_t v55;
  uint64_t v56;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(a2 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v9 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v9)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v7;
      v56 = v6;
      sub_22453FC5C(a3, &v55);
      break;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v10 = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (v13
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v14 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v14)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v12 >> 1;
      v56 = v11;
      sub_224540D48(a3, (uint64_t)&v55);
      break;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v15 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (v18
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v19 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v19)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v17 >> 2;
      v56 = v16;
      sub_224540FB8(a3, (uint64_t)&v55);
      break;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v20 = *(_QWORD *)(a2 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (v23
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v24 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v24)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v22 >> 3;
      v56 = v21;
      sub_224541228(a3, (uint64_t)&v55);
      break;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v25 = *(_QWORD *)(a2 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (!v28
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v29 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v29)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v27;
      v56 = v26;
      sub_224540AD8(a3, &v55);
      break;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v30 = *(_QWORD *)(a2 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (v33
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v34 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v34)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v32 >> 1;
      v56 = v31;
      sub_224540C10(a3, (uint64_t)&v55);
      break;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v35 = *(_QWORD *)(a2 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (v38
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v39 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v39)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v37 >> 2;
      v56 = v36;
      sub_224540E80(a3, (uint64_t)&v55);
      break;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v40 = *(_QWORD *)(a2 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (v43
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v44 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v44)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v42 >> 3;
      v56 = v41;
      sub_2245410F0(a3, (uint64_t)&v55);
      break;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v45 = *(_QWORD *)(a2 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (v48
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_100;
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v49 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v49)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v47 >> 2;
      v56 = v46;
      sub_224541808(a3, &v55);
      break;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v50 = *(_QWORD *)(a2 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_100:
        abort();
      }
      if (**(unsigned __int8 **)(a3 + 40) <= 1u)
      {
        v54 = *(unsigned __int8 *)(a3 + 88);
        *(_QWORD *)(a3 + 72) = "numbers";
        *(_QWORD *)(a3 + 80) = 7;
        if (!v54)
          *(_BYTE *)(a3 + 88) = 1;
      }
      v55 = v52 >> 3;
      v56 = v51;
      sub_224541B78(a3, &v55);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224038524(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unsigned __int8 v13;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v13 = v10;
  sub_22454F564(a1, &v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    v13 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)&v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_224038628(v10, (uint64_t)&v10, a1);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_224038614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224038628(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(a2 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(unsigned __int8 **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        do
        {
LABEL_65:
          sub_22454F564(a3, v6++);
          --v7;
        }
        while (v7);
        return;
      }
      goto LABEL_110;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v9 = *(_QWORD *)(a2 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_68;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_68:
        v46 = *(_QWORD *)(a3 + 40);
        v47 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v46)
          {
            v48 = *(_QWORD **)(a3 + 24);
            v71 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v48, (uint64_t)&v71, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v46 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v46;
          v47 -= 2;
        }
        while (v47);
        return;
      }
      goto LABEL_110;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v13 = *(_QWORD *)(a2 + 16);
      v15 = *(_QWORD *)(v13 + 40);
      v14 = *(_QWORD *)(v13 + 48);
      if (v14)
        v16 = 0;
      else
        v16 = v15 >= 4;
      if (!v16)
      {
        if (v15 < 4)
          return;
        goto LABEL_73;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_73:
        v49 = *(_QWORD *)(a3 + 40);
        v50 = v15 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v49)
          {
            v51 = *(_QWORD **)(a3 + 24);
            v72 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v51, (uint64_t)&v72, 1);
          }
          v14 += 4;
          std::ostream::operator<<();
          v49 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v49;
          v50 -= 4;
        }
        while (v50);
        return;
      }
      goto LABEL_110;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v17 = *(_QWORD *)(a2 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(_QWORD *)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 8;
      if (!v20)
      {
        if (v19 < 8)
          return;
        goto LABEL_78;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_78:
        v52 = *(_QWORD *)(a3 + 40);
        v53 = v19 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v52)
          {
            v54 = *(_QWORD **)(a3 + 24);
            v73 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v54, (uint64_t)&v73, 1);
          }
          v18 += 8;
          std::ostream::operator<<();
          v52 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v52;
          v53 -= 8;
        }
        while (v53);
        return;
      }
      goto LABEL_110;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v21 = *(_QWORD *)(a2 + 16);
      v23 = *(_QWORD *)(v21 + 40);
      v22 = *(char **)(v21 + 48);
      if (v22)
        v24 = 1;
      else
        v24 = v23 == 0;
      if (v24)
      {
        if (!v23)
          return;
        goto LABEL_83;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        do
        {
LABEL_83:
          sub_22454F380(a3, v22++);
          --v23;
        }
        while (v23);
        return;
      }
      goto LABEL_110;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v25 = *(_QWORD *)(a2 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 2;
      if (!v28)
      {
        if (v27 < 2)
          return;
        goto LABEL_86;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_86:
        v56 = *(_QWORD *)(a3 + 40);
        v57 = v27 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(a3 + 24);
            v74 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v58, (uint64_t)&v74, 1);
          }
          v26 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_110;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v29 = *(_QWORD *)(a2 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 4;
      if (!v32)
      {
        if (v31 < 4)
          return;
        goto LABEL_91;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_91:
        v59 = *(_QWORD *)(a3 + 40);
        v60 = v31 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v59)
          {
            v61 = *(_QWORD **)(a3 + 24);
            v75 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v61, (uint64_t)&v75, 1);
          }
          v30 += 4;
          std::ostream::operator<<();
          v59 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v59;
          v60 -= 4;
        }
        while (v60);
        return;
      }
      goto LABEL_110;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v33 = *(_QWORD *)(a2 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_QWORD *)(v33 + 48);
      if (v34)
        v36 = 0;
      else
        v36 = v35 >= 8;
      if (!v36)
      {
        if (v35 < 8)
          return;
        goto LABEL_96;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_96:
        v62 = *(_QWORD *)(a3 + 40);
        v63 = v35 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v62)
          {
            v64 = *(_QWORD **)(a3 + 24);
            v76 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v64, (uint64_t)&v76, 1);
          }
          v34 += 8;
          std::ostream::operator<<();
          v62 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v62;
          v63 -= 8;
        }
        while (v63);
        return;
      }
      goto LABEL_110;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v37 = *(_QWORD *)(a2 + 16);
      v39 = *(_QWORD *)(v37 + 40);
      v38 = *(_QWORD *)(v37 + 48);
      if (v38)
        v40 = 0;
      else
        v40 = v39 >= 4;
      if (!v40)
      {
        if (v39 < 4)
          return;
        goto LABEL_101;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_101:
        v65 = *(_QWORD *)(a3 + 40);
        v66 = v39 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v65)
          {
            v67 = *(_QWORD **)(a3 + 24);
            v77 = *(_BYTE *)(a3 + 32);
            sub_2231813E8(v67, (uint64_t)&v77, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a3 + 24) + *(_QWORD *)(**(_QWORD **)(a3 + 24) - 24) + 16) = 9;
          v38 += 4;
          std::ostream::operator<<();
          v65 = *(_QWORD *)(a3 + 40) + 1;
          *(_QWORD *)(a3 + 40) = v65;
          v66 -= 4;
        }
        while (v66);
        return;
      }
      goto LABEL_110;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v41 = *(_QWORD *)(a2 + 16);
      v43 = *(_QWORD *)(v41 + 40);
      v42 = *(_QWORD *)(v41 + 48);
      if (v42)
        v44 = 0;
      else
        v44 = v43 >= 8;
      if (v44)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_110:
          abort();
        }
      }
      else if (v43 < 8)
      {
        return;
      }
      v68 = *(_QWORD *)(a3 + 40);
      v69 = v43 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v68)
        {
          v70 = *(_QWORD **)(a3 + 24);
          v78 = *(_BYTE *)(a3 + 32);
          sub_2231813E8(v70, (uint64_t)&v78, 1);
        }
        *(_QWORD *)(*(_QWORD *)(a3 + 24) + *(_QWORD *)(**(_QWORD **)(a3 + 24) - 24) + 16) = 17;
        v42 += 8;
        std::ostream::operator<<();
        v68 = *(_QWORD *)(a3 + 40) + 1;
        *(_QWORD *)(a3 + 40) = v68;
        v69 -= 8;
      }
      while (v69);
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224038CF8(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  char __src;
  uint64_t v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  __src = v9;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v13, 1);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  sub_224038DF8(v9, (uint64_t)&v9, a1);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_224038DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_224038DF8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int64_t v6;
  char *v7;
  BOOL v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  BOOL v33;
  BOOL v34;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(a2 + 16);
      v6 = *(_QWORD *)(v5 + 40);
      v7 = *(char **)(v5 + 48);
      if (v7)
        v8 = 1;
      else
        v8 = v6 == 0;
      if (!v8)
        goto LABEL_27;
      return sub_224501B60(a3 + 24, *(char **)(a3 + 32), v7, &v7[v6], v6);
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v9 = *(_QWORD *)(a2 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(char **)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(v13 + 40);
      v10 = *(char **)(v13 + 48);
      if (v10)
        v15 = 0;
      else
        v15 = v14 >= 4;
      if (!v15)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v16 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(v16 + 40);
      v10 = *(char **)(v16 + 48);
      if (v10)
        v18 = 0;
      else
        v18 = v17 >= 8;
      if (!v18)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v19 = *(_QWORD *)(a2 + 16);
      v6 = *(_QWORD *)(v19 + 40);
      v7 = *(char **)(v19 + 48);
      if (v7)
        v20 = 1;
      else
        v20 = v6 == 0;
      if (v20)
        return sub_224501B60(a3 + 24, *(char **)(a3 + 32), v7, &v7[v6], v6);
LABEL_27:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
      return sub_224501B60(a3 + 24, *(char **)(a3 + 32), v7, &v7[v6], v6);
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v21 = *(_QWORD *)(a2 + 16);
      v11 = *(_QWORD *)(v21 + 40);
      v10 = *(char **)(v21 + 48);
      if (v10)
        v22 = 0;
      else
        v22 = v11 >= 2;
      if (!v22)
        goto LABEL_37;
LABEL_36:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_37:
      v23 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if (v10)
        v24 = 1;
      else
        v24 = v23 == 0;
      if (!v24)
        goto LABEL_75;
      return sub_224501B60(a3 + 24, *(char **)(a3 + 32), v10, &v10[v23], v23);
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v25 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(v25 + 40);
      v10 = *(char **)(v25 + 48);
      if (v10)
        v26 = 0;
      else
        v26 = v14 >= 4;
      if (!v26)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v27 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(v27 + 40);
      v10 = *(char **)(v27 + 48);
      if (v10)
        v28 = 0;
      else
        v28 = v17 >= 8;
      if (!v28)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v29 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(v29 + 40);
      v10 = *(char **)(v29 + 48);
      if (v10)
        v30 = 0;
      else
        v30 = v14 >= 4;
      if (!v30)
        goto LABEL_59;
LABEL_58:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_59:
      v23 = v14 & 0xFFFFFFFFFFFFFFFCLL;
      if (v10)
        v31 = 1;
      else
        v31 = v23 == 0;
      if (!v31)
        goto LABEL_75;
      return sub_224501B60(a3 + 24, *(char **)(a3 + 32), v10, &v10[v23], v23);
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v32 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(v32 + 40);
      v10 = *(char **)(v32 + 48);
      if (v10)
        v33 = 0;
      else
        v33 = v17 >= 8;
      if (!v33)
        goto LABEL_71;
LABEL_70:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_71:
      v23 = v17 & 0xFFFFFFFFFFFFFFF8;
      if (v10)
        v34 = 1;
      else
        v34 = v23 == 0;
      if (!v34)
      {
LABEL_75:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_77:
          abort();
        }
      }
      return sub_224501B60(a3 + 24, *(char **)(a3 + 32), v10, &v10[v23], v23);
    default:
      sub_22454B274(a1);
  }
}

void sub_22403914C(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  __int128 *v12;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12 = &v9;
  sub_223BB23F8(a1, (_BYTE **)&v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  sub_22403922C(v9, (uint64_t)&v9, (uint64_t)a1);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_224039218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_22403922C(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  switch(a1)
  {
    case 0:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v6 = *(_QWORD *)(a2 + 16);
      v8 = *(_QWORD *)(v6 + 40);
      v7 = *(_QWORD *)(v6 + 48);
      if (v7)
        v9 = 1;
      else
        v9 = v8 == 0;
      if (v9)
      {
        if (!v8)
          return result;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        do
        {
LABEL_65:
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 80))(a3, v7++);
          --v8;
        }
        while (v8);
        return result;
      }
      goto LABEL_102;
    case 1:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v10 = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_68;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_68:
        v47 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 96))(a3, v11);
          v11 += 2;
          v47 -= 2;
        }
        while (v47);
        return result;
      }
      goto LABEL_102;
    case 2:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v14 = *(_QWORD *)(a2 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return result;
        goto LABEL_72;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_72:
        v48 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 104))(a3, v15);
          v15 += 4;
          v48 -= 4;
        }
        while (v48);
        return result;
      }
      goto LABEL_102;
    case 3:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v18 = *(_QWORD *)(a2 + 16);
      v20 = *(_QWORD *)(v18 + 40);
      v19 = *(_QWORD *)(v18 + 48);
      if (v19)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
      {
        if (v20 < 8)
          return result;
        goto LABEL_76;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_76:
        v49 = v20 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 120))(a3, v19);
          v19 += 8;
          v49 -= 8;
        }
        while (v49);
        return result;
      }
      goto LABEL_102;
    case 5:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v22 = *(_QWORD *)(a2 + 16);
      v24 = *(_QWORD *)(v22 + 40);
      v23 = *(_QWORD *)(v22 + 48);
      if (v23)
        v25 = 1;
      else
        v25 = v24 == 0;
      if (v25)
      {
        if (!v24)
          return result;
        goto LABEL_80;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        do
        {
LABEL_80:
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 88))(a3, v23++);
          --v24;
        }
        while (v24);
        return result;
      }
      goto LABEL_102;
    case 6:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v26 = *(_QWORD *)(a2 + 16);
      v28 = *(_QWORD *)(v26 + 40);
      v27 = *(_QWORD *)(v26 + 48);
      if (v27)
        v29 = 0;
      else
        v29 = v28 >= 2;
      if (!v29)
      {
        if (v28 < 2)
          return result;
        goto LABEL_83;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_83:
        v51 = v28 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 48))(a3, v27);
          v27 += 2;
          v51 -= 2;
        }
        while (v51);
        return result;
      }
      goto LABEL_102;
    case 7:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v30 = *(_QWORD *)(a2 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 4;
      if (!v33)
      {
        if (v32 < 4)
          return result;
        goto LABEL_87;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_87:
        v52 = v32 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 56))(a3, v31);
          v31 += 4;
          v52 -= 4;
        }
        while (v52);
        return result;
      }
      goto LABEL_102;
    case 8:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v34 = *(_QWORD *)(a2 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 8;
      if (!v37)
      {
        if (v36 < 8)
          return result;
        goto LABEL_91;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_91:
        v53 = v36 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 72))(a3, v35);
          v35 += 8;
          v53 -= 8;
        }
        while (v53);
        return result;
      }
      goto LABEL_102;
    case 11:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v38 = *(_QWORD *)(a2 + 16);
      v40 = *(_QWORD *)(v38 + 40);
      v39 = *(_QWORD *)(v38 + 48);
      if (v39)
        v41 = 0;
      else
        v41 = v40 >= 4;
      if (!v41)
      {
        if (v40 < 4)
          return result;
        goto LABEL_95;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_95:
        v54 = v40 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 128))(a3, v39);
          v39 += 4;
          v54 -= 4;
        }
        while (v54);
        return result;
      }
      goto LABEL_102;
    case 12:
      result = sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v42 = *(_QWORD *)(a2 + 16);
      v44 = *(_QWORD *)(v42 + 40);
      v43 = *(_QWORD *)(v42 + 48);
      if (v43)
        v45 = 0;
      else
        v45 = v44 >= 8;
      if (v45)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_102:
          abort();
        }
      }
      else if (v44 < 8)
      {
        return result;
      }
      v55 = v44 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a3 + 136))(a3, v43);
        v43 += 8;
        v55 -= 8;
      }
      while (v55);
      return result;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240397BC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  unsigned int v7;
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  unint64_t v14;

  sub_224544628(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451CAD4(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v14 >= 2)
    v7 = 2;
  else
    v7 = v14;
  if (v7 < 2)
  {
    sub_224039930((uint64_t)&v14, a2, (uint64_t)a3);
  }
  else
  {
    v8 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "value_type";
    *(_QWORD *)(a2 + 96) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 104) = 1;
    v14 = (unint64_t)a3;
    sub_224035430((uint64_t *)a2, (_BYTE **)&v14);
    v9 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "size";
    *(_QWORD *)(a2 + 96) = 4;
    if (!v9)
      *(_BYTE *)(a2 + 104) = 1;
    v10 = (char *)sub_2245448E0((uint64_t *)a2);
    ++*(_QWORD *)(a2 + 112);
    v14 = 0;
    sub_22451CAD4(v10, &v14);
    *((_QWORD *)a3 + 1) = v14;
    sub_224039AF0(*a3, (uint64_t)a3, a2);
  }
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
}

void sub_224039930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  char *v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16[8];
  void *v17;
  __int128 v18;
  void *__p;
  void *v20;
  uint64_t v21;
  __int128 v22;

  v16[0] = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_22450F3D8(&v22, 7, (uint64_t)&__p);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  __p = v16;
  sub_224035430((uint64_t *)a2, (_BYTE **)&__p);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  __p = 0;
  sub_22451CAD4(v7, &__p);
  v17 = __p;
  sub_22403AA00(v16[0], (uint64_t)v16, a2);
  v8 = v17;
  v9 = v18;
  v18 = 0uLL;
  *(_BYTE *)a3 = v16[0];
  *(_QWORD *)(a3 + 8) = v8;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_OWORD *)(a3 + 16) = v9;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_224039AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224039ADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224039AF0(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224039C18(v3);
      break;
    case 1:
      sub_224039D68(v3);
      break;
    case 2:
      sub_224039EC4(v3);
      break;
    case 3:
      sub_22403A024(v3);
      break;
    case 5:
      sub_22403A1BC(v3);
      break;
    case 6:
      sub_22403A30C(v3);
      break;
    case 7:
      sub_22403A468(v3);
      break;
    case 8:
      sub_22403A5C8(v3);
      break;
    case 11:
      sub_22403A760(v3);
      break;
    case 12:
      sub_22403A8B0(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224039C18(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_2245449F8(v7, (uint64_t)&v15);
  sub_22450EEF0(&v15, 0, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224039D44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224039D68(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545920(v7, (uint64_t)&v15);
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224039EA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224039EC4(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545A98(v7, (uint64_t)&v15);
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403A000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A024(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_224547FD0(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F8C4(&v15, 3, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403A180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A1BC(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545740(v7, (uint64_t)&v15);
  sub_22450ED50(&v15, 5, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403A2E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A30C(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545830(v7, (uint64_t)&v15);
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403A444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A468(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_2245459DC(v7, (uint64_t)&v15);
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403A5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A5C8(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_224547C94(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F720(&v15, 8, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403A724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A760(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v13 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545EA4(v6, (float *)v3);
  sub_22450FA68(&v14, 11, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403A88C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403A8B0(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v13 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545FAC(v6, (double *)v3);
  sub_22450FC0C(&v14, 12, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403A9DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403AA00(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22403AB28(v3);
      break;
    case 1:
      sub_22403AC78(v3);
      break;
    case 2:
      sub_22403ADD4(v3);
      break;
    case 3:
      sub_22403AF34(v3);
      break;
    case 5:
      sub_22403B0CC(v3);
      break;
    case 6:
      sub_22403B21C(v3);
      break;
    case 7:
      sub_22403B378(v3);
      break;
    case 8:
      sub_22403B4D8(v3);
      break;
    case 11:
      sub_22403B670(v3);
      break;
    case 12:
      sub_22403B7C0(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22403AB28(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_2245449F8(v7, (uint64_t)&v15);
  sub_22450EEF0(&v15, 0, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403AC54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403AC78(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545920(v7, (uint64_t)&v15);
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403ADB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403ADD4(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545A98(v7, (uint64_t)&v15);
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403AF10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403AF34(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_224547FD0(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F8C4(&v15, 3, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403B090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B0CC(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545740(v7, (uint64_t)&v15);
  sub_22450ED50(&v15, 5, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403B1F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B21C(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224545830(v7, (uint64_t)&v15);
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403B354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B378(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245448E0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_2245459DC(v7, (uint64_t)&v15);
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403B4B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B4D8(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_224547C94(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F720(&v15, 8, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403B634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B670(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v13 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545EA4(v6, (float *)v3);
  sub_22450FA68(&v14, 11, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403B79C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B7C0(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v13 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245448E0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545FAC(v6, (double *)v3);
  sub_22450FC0C(&v14, 12, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403B8EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403B910(uint64_t a1, _QWORD *a2, unsigned __int8 *a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;

  if (a4 < 2)
  {
    sub_22403B9EC((uint64_t)&v9, (uint64_t)a2, (uint64_t)a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v10 = 0;
    sub_224553CF0(a2[6], &v10);
    *a3 = v10;
    sub_2245543E8(a2[6], (_QWORD *)a3 + 1);
    sub_22403BB64(*a3, (uint64_t)a3, (uint64_t)a2);
    v7 = a2[4];
    v8 = *(_QWORD *)(v7 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v7 - 8);
    if (v8)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v8);
    a2[4] -= 16;
  }
}

void sub_22403B9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned __int8 v13[8];
  uint64_t v14;
  __int128 v15;
  void *__p;
  void *v17;
  uint64_t v18;
  __int128 v19;

  v13[0] = 7;
  v14 = 0;
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_22450F3D8(&v19, 7, (uint64_t)&__p);
  v15 = v19;
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  LOBYTE(__p) = 0;
  sub_224553CF0(*(_QWORD *)(a2 + 48), &__p);
  v13[0] = __p;
  sub_2245543E8(*(_QWORD *)(a2 + 48), &v14);
  sub_22403C954(v13[0], (uint64_t)v13, a2);
  v5 = v14;
  v6 = v15;
  v15 = 0uLL;
  *(_BYTE *)a3 = v13[0];
  *(_QWORD *)(a3 + 8) = v5;
  v7 = *(std::__shared_weak_count **)(a3 + 24);
  *(_OWORD *)(a3 + 16) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_22403BB34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403BB50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22403BB64(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22403BC8C(v3);
      break;
    case 1:
      sub_22403BDC4(v3);
      break;
    case 2:
      sub_22403BF0C(v3);
      break;
    case 3:
      sub_22403C058(v3);
      break;
    case 5:
      sub_22403C1A4(v3);
      break;
    case 6:
      sub_22403C2DC(v3);
      break;
    case 7:
      sub_22403C424(v3);
      break;
    case 8:
      sub_22403C570(v3);
      break;
    case 11:
      sub_22403C6BC(v3);
      break;
    case 12:
      sub_22403C808(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22403BC8C(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = *(_QWORD *)(a1[1] + 48);
    do
    {
      sub_224553CF0(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450EEF0(&v13, 0, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403BDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403BDC4(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_224553E94(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F234(&v13, 1, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403BEE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403BF0C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_224554038(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F57C(&v13, 2, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C058(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_2245543E8(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F8C4(&v13, 3, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C1A4(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = *(_QWORD *)(a1[1] + 48);
    do
    {
      sub_224553C38(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450ED50(&v13, 5, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C2B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C2DC(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_224553DDC(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F090(&v13, 6, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C424(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_224553F80(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F3D8(&v13, 7, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C54C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C570(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_2245542F8(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F720(&v13, 8, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C6BC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_2245544CC(v4, (float *)v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450FA68(&v13, 11, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C7E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C808(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_224554604(v4, (double *)v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450FC0C(&v13, 12, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403C930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403C954(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22403CA7C(v3);
      break;
    case 1:
      sub_22403CBB4(v3);
      break;
    case 2:
      sub_22403CCFC(v3);
      break;
    case 3:
      sub_22403CE48(v3);
      break;
    case 5:
      sub_22403CF94(v3);
      break;
    case 6:
      sub_22403D0CC(v3);
      break;
    case 7:
      sub_22403D214(v3);
      break;
    case 8:
      sub_22403D360(v3);
      break;
    case 11:
      sub_22403D4AC(v3);
      break;
    case 12:
      sub_22403D5F8(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22403CA7C(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = *(_QWORD *)(a1[1] + 48);
    do
    {
      sub_224553CF0(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450EEF0(&v13, 0, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403CB90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403CBB4(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_224553E94(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F234(&v13, 1, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403CCD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403CCFC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_224554038(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F57C(&v13, 2, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403CE24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403CE48(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_2245543E8(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F8C4(&v13, 3, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403CF70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403CF94(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = *(_QWORD *)(a1[1] + 48);
    do
    {
      sub_224553C38(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450ED50(&v13, 5, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403D0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403D0CC(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_224553DDC(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F090(&v13, 6, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403D1F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403D214(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_224553F80(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F3D8(&v13, 7, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403D33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403D360(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_2245542F8(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F720(&v13, 8, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403D488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403D4AC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_2245544CC(v4, (float *)v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450FA68(&v13, 11, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403D5D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403D5F8(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = *(_QWORD *)(a1[1] + 48);
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_224554604(v4, (double *)v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450FC0C(&v13, 12, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403D720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403D744(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  unsigned int v7;
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  unint64_t v14;

  sub_224544138(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_22451C444(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v14 >= 2)
    v7 = 2;
  else
    v7 = v14;
  if (v7 < 2)
  {
    sub_22403D8B8((uint64_t)&v14, a2, (uint64_t)a3);
  }
  else
  {
    v8 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "value_type";
    *(_QWORD *)(a2 + 96) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 104) = 1;
    v14 = (unint64_t)a3;
    sub_224036208((uint64_t *)a2, (_BYTE **)&v14);
    v9 = *(unsigned __int8 *)(a2 + 104);
    *(_QWORD *)(a2 + 88) = "size";
    *(_QWORD *)(a2 + 96) = 4;
    if (!v9)
      *(_BYTE *)(a2 + 104) = 1;
    v10 = (char *)sub_2245443F0((uint64_t *)a2);
    ++*(_QWORD *)(a2 + 112);
    v14 = 0;
    sub_22451C444(v10, &v14);
    *((_QWORD *)a3 + 1) = v14;
    sub_22403DA78(*a3, (uint64_t)a3, a2);
  }
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
}

void sub_22403D8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  char *v7;
  void *v8;
  __int128 v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16[8];
  void *v17;
  __int128 v18;
  void *__p;
  void *v20;
  uint64_t v21;
  __int128 v22;

  v16[0] = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_22450F3D8(&v22, 7, (uint64_t)&__p);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  __p = v16;
  sub_224036208((uint64_t *)a2, (_BYTE **)&__p);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  __p = 0;
  sub_22451C444(v7, &__p);
  v17 = __p;
  sub_22403E988(v16[0], (uint64_t)v16, a2);
  v8 = v17;
  v9 = v18;
  v18 = 0uLL;
  *(_BYTE *)a3 = v16[0];
  *(_QWORD *)(a3 + 8) = v8;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_OWORD *)(a3 + 16) = v9;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22403DA48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403DA64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22403DA78(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22403DBA0(v3);
      break;
    case 1:
      sub_22403DCF0(v3);
      break;
    case 2:
      sub_22403DE4C(v3);
      break;
    case 3:
      sub_22403DFAC(v3);
      break;
    case 5:
      sub_22403E144(v3);
      break;
    case 6:
      sub_22403E294(v3);
      break;
    case 7:
      sub_22403E3F0(v3);
      break;
    case 8:
      sub_22403E550(v3);
      break;
    case 11:
      sub_22403E6E8(v3);
      break;
    case 12:
      sub_22403E838(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22403DBA0(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544508(v7, (uint64_t)&v15);
  sub_22450EEF0(&v15, 0, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403DCCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403DCF0(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544C94(v7, (uint64_t)&v15);
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403DE28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403DE4C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544E0C(v7, (uint64_t)&v15);
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403DF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403DFAC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_224546D08(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F8C4(&v15, 3, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403E108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E144(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544AB4(v7, (uint64_t)&v15);
  sub_22450ED50(&v15, 5, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403E270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E294(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544BA4(v7, (uint64_t)&v15);
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403E3CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E3F0(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544D50(v7, (uint64_t)&v15);
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403E52C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E550(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_22454664C(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F720(&v15, 8, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403E6AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E6E8(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v13 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545240(v6, (float *)v3);
  sub_22450FA68(&v14, 11, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403E814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E838(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v13 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545370(v6, (double *)v3);
  sub_22450FC0C(&v14, 12, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403E964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403E988(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22403EAB0(v3);
      break;
    case 1:
      sub_22403EC00(v3);
      break;
    case 2:
      sub_22403ED5C(v3);
      break;
    case 3:
      sub_22403EEBC(v3);
      break;
    case 5:
      sub_22403F054(v3);
      break;
    case 6:
      sub_22403F1A4(v3);
      break;
    case 7:
      sub_22403F300(v3);
      break;
    case 8:
      sub_22403F460(v3);
      break;
    case 11:
      sub_22403F5F8(v3);
      break;
    case 12:
      sub_22403F748(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22403EAB0(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544508(v7, (uint64_t)&v15);
  sub_22450EEF0(&v15, 0, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403EBDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403EC00(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544C94(v7, (uint64_t)&v15);
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403ED38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403ED5C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544E0C(v7, (uint64_t)&v15);
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403EE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403EEBC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_224546D08(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F8C4(&v15, 3, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403F018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F054(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v14 = &v3[v2];
    bzero(v3, v2);
    v13 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = v4 - v3;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544AB4(v7, (uint64_t)&v15);
  sub_22450ED50(&v15, 5, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22403F180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F1A4(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v14 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 1;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544BA4(v7, (uint64_t)&v15);
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403F2DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F300(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  int v6;
  char *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v14 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v14;
    v13 = v14;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = a1[1];
  v6 = *(unsigned __int8 *)(v5 + 104);
  *(_QWORD *)(v5 + 88) = "numbers";
  *(_QWORD *)(v5 + 96) = 7;
  if (!v6)
    *(_BYTE *)(v5 + 104) = 1;
  *(_QWORD *)&v15 = (v4 - v3) >> 2;
  *((_QWORD *)&v15 + 1) = v3;
  v7 = (char *)sub_2245443F0((uint64_t *)v5);
  ++*(_QWORD *)(v5 + 112);
  sub_224544D50(v7, (uint64_t)&v15);
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403F43C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F460(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  char *v6;
  void *v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v14 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v13 = v14;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = (char *)sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  v15 = 0uLL;
  v16 = 0;
  sub_22454664C(v6, (uint64_t)&v15);
  v7 = (void *)v15;
  if (*((_QWORD *)&v15 + 1) != (_QWORD)v15)
    memmove(v3, (const void *)v15, *((_QWORD *)&v15 + 1) - v15);
  if (v7)
  {
    *((_QWORD *)&v15 + 1) = v7;
    operator delete(v7);
  }
  sub_22450F720(&v15, 8, (uint64_t)&__p);
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v8 + 16) = v15;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22403F5BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F5F8(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v13 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545240(v6, (float *)v3);
  sub_22450FA68(&v14, 11, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403F724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F748(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v13 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v12 = v13;
  }
  else
  {
    v3 = 0;
  }
  v4 = a1[1];
  v5 = *(unsigned __int8 *)(v4 + 104);
  *(_QWORD *)(v4 + 88) = "numbers";
  *(_QWORD *)(v4 + 96) = 7;
  if (!v5)
    *(_BYTE *)(v4 + 104) = 1;
  v6 = sub_2245443F0((uint64_t *)v4);
  ++*(_QWORD *)(v4 + 112);
  sub_224545370(v6, (double *)v3);
  sub_22450FC0C(&v14, 12, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22403F874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403F898(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v5;
  unsigned int v6;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  LODWORD(__p[0]) = 2;
  sub_2245508F0(a2, __p);
  v5 = __p[0];
  if (LODWORD(__p[0]) >= 2)
    v6 = 2;
  else
    v6 = __p[0];
  if (v6 < 2)
  {
    sub_22403F9EC((uint64_t)__p, a2, (uint64_t)a3);
    if (v5 < 2)
      return;
  }
  else
  {
    LOBYTE(__p[0]) = 0;
    sub_22454FFAC(a2, __p);
    *a3 = __p[0];
    sub_224550D98(a2, (_QWORD *)a3 + 1);
    sub_22403FB64(*a3, (uint64_t)a3, a2);
    if (v5 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_21:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_24;
          goto LABEL_10;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_21;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_24:
        operator delete(__p[0]);
LABEL_10:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_22403F9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned __int8 v13[8];
  uint64_t v14;
  __int128 v15;
  void *__p;
  void *v17;
  uint64_t v18;
  __int128 v19;

  v13[0] = 7;
  v14 = 0;
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_22450F3D8(&v19, 7, (uint64_t)&__p);
  v15 = v19;
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  LOBYTE(__p) = 0;
  sub_22454FFAC(a2, &__p);
  v13[0] = __p;
  sub_224550D98(a2, &v14);
  sub_22404092C(v13[0], (uint64_t)v13, a2);
  v5 = v14;
  v6 = v15;
  v15 = 0uLL;
  *(_BYTE *)a3 = v13[0];
  *(_QWORD *)(a3 + 8) = v5;
  v7 = *(std::__shared_weak_count **)(a3 + 24);
  *(_OWORD *)(a3 + 16) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_22403FB34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403FB50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22403FB64(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22403FC8C(v3);
      break;
    case 1:
      sub_22403FDC0(v3);
      break;
    case 2:
      sub_22403FF04(v3);
      break;
    case 3:
      sub_22404004C(v3);
      break;
    case 5:
      sub_224040194(v3);
      break;
    case 6:
      sub_2240402C8(v3);
      break;
    case 7:
      sub_22404040C(v3);
      break;
    case 8:
      sub_224040554(v3);
      break;
    case 11:
      sub_22404069C(v3);
      break;
    case 12:
      sub_2240407E4(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22403FC8C(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = a1[1];
    do
    {
      sub_22454FFAC(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450EEF0(&v13, 0, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403FD9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403FDC0(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = a1[1];
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_224550448(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F234(&v13, 1, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22403FEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22403FF04(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = a1[1];
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_2245508F0(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F57C(&v13, 2, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040028(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404004C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = a1[1];
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_224550D98(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F8C4(&v13, 3, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224040194(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = a1[1];
    do
    {
      sub_22454FD64(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450ED50(&v13, 5, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240402A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240402C8(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = a1[1];
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_2245501F4(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F090(&v13, 6, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240403E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404040C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = a1[1];
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_22455069C(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F3D8(&v13, 7, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224040554(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = a1[1];
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_224550B44(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F720(&v13, 8, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404069C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = a1[1];
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_224551268(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450FA68(&v13, 11, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240407C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240407E4(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = a1[1];
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_2245514BC(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450FC0C(&v13, 12, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404092C(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224040A54(v3);
      break;
    case 1:
      sub_224040B88(v3);
      break;
    case 2:
      sub_224040CCC(v3);
      break;
    case 3:
      sub_224040E14(v3);
      break;
    case 5:
      sub_224040F5C(v3);
      break;
    case 6:
      sub_224041090(v3);
      break;
    case 7:
      sub_2240411D4(v3);
      break;
    case 8:
      sub_22404131C(v3);
      break;
    case 11:
      sub_224041464(v3);
      break;
    case 12:
      sub_2240415AC(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224040A54(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = a1[1];
    do
    {
      sub_22454FFAC(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450EEF0(&v13, 0, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224040B88(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = a1[1];
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_224550448(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F234(&v13, 1, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040CA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224040CCC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = a1[1];
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_2245508F0(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F57C(&v13, 2, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040DF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224040E14(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = a1[1];
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_224550D98(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F8C4(&v13, 3, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224040F38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224040F5C(_QWORD *a1)
{
  size_t v2;
  _BYTE *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  _BYTE *v11;
  _BYTE *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = operator new(v2);
    __p = v3;
    v12 = &v3[v2];
    bzero(v3, v2);
    v11 = &v3[v2];
    v4 = v2;
    v5 = a1[1];
    do
    {
      sub_22454FD64(v5, v3++);
      --v4;
    }
    while (v4);
  }
  sub_22450ED50(&v13, 5, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_22404106C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224041090(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v12 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v11 = v12;
    if (2 * v2)
    {
      v4 = a1[1];
      v5 = 2 * ((2 * v2) >> 1);
      do
      {
        sub_2245501F4(v4, v3);
        v3 += 2;
        v5 -= 2;
      }
      while (v5);
    }
  }
  sub_22450F090(&v13, 6, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240411B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240411D4(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = a1[1];
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_22455069C(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450F3D8(&v13, 7, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240412F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404131C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = a1[1];
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_224550B44(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450F720(&v13, 8, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224041440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224041464(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v12 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v11 = v12;
    if (4 * v2)
    {
      v4 = a1[1];
      v5 = 4 * ((uint64_t)(4 * v2) >> 2);
      do
      {
        sub_224551268(v4, v3);
        v3 += 4;
        v5 -= 4;
      }
      while (v5);
    }
  }
  sub_22450FA68(&v13, 11, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_224041588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240415AC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  void *__p;
  void *v11;
  char *v12;
  __int128 v13;

  v2 = *(_QWORD *)(*a1 + 8);
  v11 = 0;
  v12 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v12 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v11 = v12;
    if (8 * v2)
    {
      v4 = a1[1];
      v5 = 8 * ((uint64_t)(8 * v2) >> 3);
      do
      {
        sub_2245514BC(v4, v3);
        v3 += 8;
        v5 -= 8;
      }
      while (v5);
    }
  }
  sub_22450FC0C(&v13, 12, (uint64_t)&__p);
  v6 = *a1;
  v7 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v6 + 16) = v13;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (__p)
  {
    v11 = __p;
    operator delete(__p);
  }
}

void sub_2240416D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240416F4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_2240417E8((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_22404193C(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_2240417D4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240417E8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  char v13[8];
  uint64_t v14;
  __int128 v15;
  void *__p;
  void *v17;
  uint64_t v18;
  __int128 v19;

  v13[0] = 7;
  v14 = 0;
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_22450F3D8(&v19, 7, (uint64_t)&__p);
  v15 = v19;
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  sub_224042B80(a2, (uint64_t)v13);
  v5 = v14;
  v6 = v15;
  v15 = 0uLL;
  *(_BYTE *)a3 = v13[0];
  *(_QWORD *)(a3 + 8) = v5;
  v7 = *(std::__shared_weak_count **)(a3 + 24);
  *(_OWORD *)(a3 + 16) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_22404190C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224041920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404193C(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v5 = a1[3];
  v6 = *(unsigned __int8 *)(v5 + v2);
  v7 = v2 + 1;
  a1[6] = v7;
  *(_BYTE *)a2 = v6;
  v8 = v3 >= v7;
  v9 = v3 - v7;
  if (!v8)
    v9 = 0;
  if (v9 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v5 + v7);
  a1[6] += 8;
  sub_224041A10(v6, a2, (uint64_t)a1);
}

void sub_2240419E8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240419FC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224041A10(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224041B38(v3);
      break;
    case 1:
      sub_224041CD0(v3);
      break;
    case 2:
      sub_224041E70(v3);
      break;
    case 3:
      sub_224042014(v3);
      break;
    case 5:
      sub_2240421B8(v3);
      break;
    case 6:
      sub_224042350(v3);
      break;
    case 7:
      sub_2240424F0(v3);
      break;
    case 8:
      sub_224042694(v3);
      break;
    case 11:
      sub_224042838(v3);
      break;
    case 12:
      sub_2240429DC(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224041B38(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  char *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v18 = &v3[v2];
    bzero(v3, v2);
    v17 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450EEF0(&v19, 0, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224041C9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224041CD0(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v18 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F234(&v19, 1, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224041E3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224041E70(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v18 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F57C(&v19, 2, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224041FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224042014(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v18 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F8C4(&v19, 3, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224042184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240421B8(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  char *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v18 = &v3[v2];
    bzero(v3, v2);
    v17 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450ED50(&v19, 5, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404231C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224042350(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v18 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F090(&v19, 6, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_2240424BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240424F0(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v18 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F3D8(&v19, 7, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224042660(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224042694(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v18 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F720(&v19, 8, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224042804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224042838(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v18 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450FA68(&v19, 11, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_2240429A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240429DC(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v18 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450FC0C(&v19, 12, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224042B4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224042B80(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  std::logic_error *exception;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v5 = a1[3];
  v6 = *(unsigned __int8 *)(v5 + v2);
  v7 = v2 + 1;
  a1[6] = v7;
  *(_BYTE *)a2 = v6;
  v8 = v3 >= v7;
  v9 = v3 - v7;
  if (!v8)
    v9 = 0;
  if (v9 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v5 + v7);
  a1[6] += 8;
  sub_224042C54(v6, a2, (uint64_t)a1);
}

void sub_224042C2C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224042C40(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224042C54(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224042D7C(v3);
      break;
    case 1:
      sub_224042F14(v3);
      break;
    case 2:
      sub_2240430B4(v3);
      break;
    case 3:
      sub_224043258(v3);
      break;
    case 5:
      sub_2240433FC(v3);
      break;
    case 6:
      sub_224043594(v3);
      break;
    case 7:
      sub_224043734(v3);
      break;
    case 8:
      sub_2240438D8(v3);
      break;
    case 11:
      sub_224043A7C(v3);
      break;
    case 12:
      sub_224043C20(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224042D7C(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  char *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v18 = &v3[v2];
    bzero(v3, v2);
    v17 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450EEF0(&v19, 0, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224042EE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224042F14(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v18 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F234(&v19, 1, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224043080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240430B4(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v18 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F57C(&v19, 2, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224043224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224043258(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v18 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F8C4(&v19, 3, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_2240433C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240433FC(_QWORD *a1)
{
  size_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  char *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    v4 = &v3[v2];
    __p = v3;
    v18 = &v3[v2];
    bzero(v3, v2);
    v17 = &v3[v2];
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450ED50(&v19, 5, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224043560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224043594(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = (char *)operator new(2 * v2);
    __p = v3;
    v18 = &v3[2 * v2];
    bzero(v3, 2 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F090(&v19, 6, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224043700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224043734(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v18 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F3D8(&v19, 7, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_2240438A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240438D8(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v18 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450F720(&v19, 8, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224043A48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224043A7C(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = (char *)operator new(4 * v2);
    __p = v3;
    v18 = &v3[4 * v2];
    bzero(v3, 4 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450FA68(&v19, 11, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224043BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224043C20(_QWORD *a1)
{
  unint64_t v2;
  char *v3;
  char *v4;
  size_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  size_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::logic_error *exception;
  void *__p;
  void *v17;
  char *v18;
  __int128 v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v17 = 0;
  v18 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = (char *)operator new(8 * v2);
    __p = v3;
    v18 = &v3[8 * v2];
    bzero(v3, 8 * v2);
    v4 = v18;
    v17 = v18;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  v5 = v4 - v3;
  v6 = (_QWORD *)a1[1];
  v7 = v6[6];
  v8 = v6[7];
  v9 = v8 >= v7;
  v10 = v8 - v7;
  if (!v9)
    v10 = 0;
  if (v10 < v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v3, (const void *)(v6[3] + v7), v5);
  v6[6] += v5;
  sub_22450FC0C(&v19, 12, (uint64_t)&__p);
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v11 + 16) = v19;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
}

void sub_224043D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224043DC4(int *a1, _BYTE *a2, _BYTE *a3)
{
  unsigned int v6;
  char v7;
  _BYTE *v8;

  v6 = 2;
  (*(void (**)(_BYTE *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v6);
  if (*a1 < 1)
  {
    if (v6 < 2)
    {
      sub_2240441E0((uint64_t)&v7, a2, (uint64_t)a3);
    }
    else
    {
      v8 = a3;
      sub_223BDEF78(a2, &v8);
      (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
      sub_22404435C(*a3, (uint64_t)a3, (uint64_t)a2);
    }
  }
  else
  {
    sub_224043EA8(a1, a2, a3, v6);
  }
}

void sub_224043EA8(int *a1, _BYTE *a2, _BYTE *a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  unsigned int v11;
  __int128 *v12;
  unsigned int v13;
  char v14;
  _BYTE *v15;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v13 = 2;
    (*(void (**)(_BYTE *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v13);
    if (v13 >= 3)
    {
      v11 = v13;
      v12 = sub_224043FE4();
      sub_22455C3A8((std::string *)v12, v11, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 >= 1)
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
    goto LABEL_13;
  }
LABEL_8:
  if (a4 >= 2)
    v10 = 2;
  else
    v10 = a4;
  if (v10 <= 1)
  {
    sub_2240441E0((uint64_t)&v14, a2, (uint64_t)a3);
    return;
  }
  v9 = 0;
LABEL_13:
  v15 = a3;
  sub_223BDEF78(a2, &v15);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  sub_22404435C(*a3, (uint64_t)a3, (uint64_t)a2);
  if (v9)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_224043FE4()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FC70);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FC70))
    return &xmmword_25578FC58;
  v2 = (char *)sub_2240440C0();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_25578FC58, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25578FC68 = *((_QWORD *)v2 + 2);
    xmmword_25578FC58 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FC58, &dword_22314D000);
  __cxa_guard_release(&qword_25578FC70);
  return &xmmword_25578FC58;
}

void sub_2240440A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FC70);
  _Unwind_Resume(a1);
}

void *sub_2240440C0()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FC90);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578FC90))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::NumbersSample]", qword_25578FC78);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FC78, &dword_22314D000);
    __cxa_guard_release(&qword_25578FC90);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25578FCB0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FCB0))
    return &unk_25578FC98;
  sub_224573040((uint64_t)qword_25578FC78, (uint64_t)&unk_25578FC98);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25578FC98, &dword_22314D000);
  __cxa_guard_release(&qword_25578FCB0);
  return &unk_25578FC98;
}

void sub_2240441B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FCB0);
  _Unwind_Resume(a1);
}

void sub_2240441C8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FC90);
  _Unwind_Resume(a1);
}

void sub_2240441E0(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned __int8 v13[8];
  uint64_t v14;
  __int128 v15;
  void *__p;
  void *v17;
  uint64_t v18;
  __int128 v19;

  v13[0] = 7;
  v14 = 0;
  __p = 0;
  v17 = 0;
  v18 = 0;
  sub_22450F3D8(&v19, 7, (uint64_t)&__p);
  v15 = v19;
  if (__p)
  {
    v17 = __p;
    operator delete(__p);
  }
  __p = v13;
  sub_223BDEF78(a2, (_BYTE **)&__p);
  (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 120))(a2, &v14);
  sub_22404503C(v13[0], (uint64_t)v13, (uint64_t)a2);
  v5 = v14;
  v6 = v15;
  v15 = 0uLL;
  *(_BYTE *)a3 = v13[0];
  *(_QWORD *)(a3 + 8) = v5;
  v7 = *(std::__shared_weak_count **)(a3 + 24);
  *(_OWORD *)(a3 + 16) = v6;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v11 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_22404432C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044348(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22404435C(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224044484(v3);
      break;
    case 1:
      sub_2240445A4(v3);
      break;
    case 2:
      sub_2240446D0(v3);
      break;
    case 3:
      sub_224044800(v3);
      break;
    case 5:
      sub_224044930(v3);
      break;
    case 6:
      sub_224044A50(v3);
      break;
    case 7:
      sub_224044B7C(v3);
      break;
    case 8:
      sub_224044CAC(v3);
      break;
    case 11:
      sub_224044DDC(v3);
      break;
    case 12:
      sub_224044F0C(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224044484(_QWORD *a1)
{
  size_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *__p;
  char *v10;
  char *v11;
  __int128 v12;

  v2 = *(_QWORD *)(*a1 + 8);
  v10 = 0;
  v11 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    __p = v3;
    v11 = &v3[v2];
    bzero(v3, v2);
    v10 = &v3[v2];
    v4 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v4 + 80))(v4, v3++);
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v12, 0, (uint64_t)&__p);
  v5 = *a1;
  v6 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v5 + 16) = v12;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (__p)
  {
    v10 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224044580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240445A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = 2 * v2;
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v13 = &v4[2 * v2];
    bzero(v4, 2 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 96))(v5, v4);
      v4 += 2;
      v6 -= 2;
    }
    while (v6);
  }
  sub_22450F234(&v14, 1, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_2240446AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240446D0(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = 4 * v2;
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v13 = &v4[4 * v2];
    bzero(v4, 4 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 104))(v5, v4);
      v4 += 4;
      v6 -= 4;
    }
    while (v6);
  }
  sub_22450F57C(&v14, 2, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_2240447DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044800(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = 8 * v2;
    v4 = (char *)operator new(8 * v2);
    __p = v4;
    v13 = &v4[8 * v2];
    bzero(v4, 8 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 120))(v5, v4);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  sub_22450F8C4(&v14, 3, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22404490C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044930(_QWORD *a1)
{
  size_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *__p;
  char *v10;
  char *v11;
  __int128 v12;

  v2 = *(_QWORD *)(*a1 + 8);
  v10 = 0;
  v11 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    __p = v3;
    v11 = &v3[v2];
    bzero(v3, v2);
    v10 = &v3[v2];
    v4 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v4 + 88))(v4, v3++);
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v12, 5, (uint64_t)&__p);
  v5 = *a1;
  v6 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v5 + 16) = v12;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (__p)
  {
    v10 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224044A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044A50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = 2 * v2;
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v13 = &v4[2 * v2];
    bzero(v4, 2 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 48))(v5, v4);
      v4 += 2;
      v6 -= 2;
    }
    while (v6);
  }
  sub_22450F090(&v14, 6, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224044B58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044B7C(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = 4 * v2;
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v13 = &v4[4 * v2];
    bzero(v4, 4 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 56))(v5, v4);
      v4 += 4;
      v6 -= 4;
    }
    while (v6);
  }
  sub_22450F3D8(&v14, 7, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224044C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044CAC(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = 8 * v2;
    v4 = (char *)operator new(8 * v2);
    __p = v4;
    v13 = &v4[8 * v2];
    bzero(v4, 8 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 72))(v5, v4);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  sub_22450F720(&v14, 8, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224044DB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044DDC(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = 4 * v2;
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v13 = &v4[4 * v2];
    bzero(v4, 4 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 128))(v5, v4);
      v4 += 4;
      v6 -= 4;
    }
    while (v6);
  }
  sub_22450FA68(&v14, 11, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224044EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224044F0C(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = 8 * v2;
    v4 = (char *)operator new(8 * v2);
    __p = v4;
    v13 = &v4[8 * v2];
    bzero(v4, 8 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 136))(v5, v4);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  sub_22450FC0C(&v14, 12, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224045018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404503C(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224045164(v3);
      break;
    case 1:
      sub_224045284(v3);
      break;
    case 2:
      sub_2240453B0(v3);
      break;
    case 3:
      sub_2240454E0(v3);
      break;
    case 5:
      sub_224045610(v3);
      break;
    case 6:
      sub_224045730(v3);
      break;
    case 7:
      sub_22404585C(v3);
      break;
    case 8:
      sub_22404598C(v3);
      break;
    case 11:
      sub_224045ABC(v3);
      break;
    case 12:
      sub_224045BEC(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224045164(_QWORD *a1)
{
  size_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *__p;
  char *v10;
  char *v11;
  __int128 v12;

  v2 = *(_QWORD *)(*a1 + 8);
  v10 = 0;
  v11 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_22316E078();
    v3 = (char *)operator new(v2);
    __p = v3;
    v11 = &v3[v2];
    bzero(v3, v2);
    v10 = &v3[v2];
    v4 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v4 + 80))(v4, v3++);
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v12, 0, (uint64_t)&__p);
  v5 = *a1;
  v6 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v5 + 16) = v12;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (__p)
  {
    v10 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224045260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224045284(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_223257BE4();
    v3 = 2 * v2;
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v13 = &v4[2 * v2];
    bzero(v4, 2 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 96))(v5, v4);
      v4 += 2;
      v6 -= 2;
    }
    while (v6);
  }
  sub_22450F234(&v14, 1, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_22404538C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240453B0(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = 4 * v2;
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v13 = &v4[4 * v2];
    bzero(v4, 4 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 104))(v5, v4);
      v4 += 4;
      v6 -= 4;
    }
    while (v6);
  }
  sub_22450F57C(&v14, 2, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_2240454BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240454E0(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223323BA8();
    v3 = 8 * v2;
    v4 = (char *)operator new(8 * v2);
    __p = v4;
    v13 = &v4[8 * v2];
    bzero(v4, 8 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 120))(v5, v4);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  sub_22450F8C4(&v14, 3, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_2240455EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224045610(_QWORD *a1)
{
  size_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  void *__p;
  char *v10;
  char *v11;
  __int128 v12;

  v2 = *(_QWORD *)(*a1 + 8);
  v10 = 0;
  v11 = 0;
  __p = 0;
  if (v2)
  {
    if ((v2 & 0x8000000000000000) != 0)
      sub_223662A04();
    v3 = (char *)operator new(v2);
    __p = v3;
    v11 = &v3[v2];
    bzero(v3, v2);
    v10 = &v3[v2];
    v4 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v4 + 88))(v4, v3++);
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v12, 5, (uint64_t)&__p);
  v5 = *a1;
  v6 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v5 + 16) = v12;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if (__p)
  {
    v10 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404570C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224045730(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 < 0)
      sub_2240336DC();
    v3 = 2 * v2;
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v13 = &v4[2 * v2];
    bzero(v4, 2 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 48))(v5, v4);
      v4 += 2;
      v6 -= 2;
    }
    while (v6);
  }
  sub_22450F090(&v14, 6, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224045838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404585C(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22352449C();
    v3 = 4 * v2;
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v13 = &v4[4 * v2];
    bzero(v4, 4 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 56))(v5, v4);
      v4 += 4;
      v6 -= 4;
    }
    while (v6);
  }
  sub_22450F3D8(&v14, 7, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224045968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404598C(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_223FCCF04();
    v3 = 8 * v2;
    v4 = (char *)operator new(8 * v2);
    __p = v4;
    v13 = &v4[8 * v2];
    bzero(v4, 8 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 72))(v5, v4);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  sub_22450F720(&v14, 8, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224045A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224045ABC(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 62)
      sub_22316E078();
    v3 = 4 * v2;
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v13 = &v4[4 * v2];
    bzero(v4, 4 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 128))(v5, v4);
      v4 += 4;
      v6 -= 4;
    }
    while (v6);
  }
  sub_22450FA68(&v14, 11, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224045BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224045BEC(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *__p;
  void *v12;
  char *v13;
  __int128 v14;

  v2 = *(_QWORD *)(*a1 + 8);
  v12 = 0;
  v13 = 0;
  __p = 0;
  if (v2)
  {
    if (v2 >> 61)
      sub_22316E078();
    v3 = 8 * v2;
    v4 = (char *)operator new(8 * v2);
    __p = v4;
    v13 = &v4[8 * v2];
    bzero(v4, 8 * v2);
    v12 = v13;
    v5 = a1[1];
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 136))(v5, v4);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  sub_22450FC0C(&v14, 12, (uint64_t)&__p);
  v7 = *a1;
  v8 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_OWORD *)(v7 + 16) = v14;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (__p)
  {
    v12 = __p;
    operator delete(__p);
  }
}

void sub_224045CF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_224045D1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC27C78;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(v4 + 72) = 1;
  }
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 176) = v7;
    *(_BYTE *)(v4 + 192) = 1;
  }
  *(_BYTE *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    *(_OWORD *)(v4 + 208) = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(v4 + 224) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *(_BYTE *)(v4 + 232) = 1;
  }
  *(_QWORD *)v4 = &off_24EC27BF8;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_224045EB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_224045ED0(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  void **v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_224033EEC(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = (void **)*((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453FEA0(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_22345337C(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "points2";
    *v11 = 7;
    if (!v16)
      *v10 = 1;
  }
  sub_22454024C(a1);
  sub_224046130(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_2240460FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_22345337C(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22404611C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224046130(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v5)
        v6 = 1;
      else
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v6)
      {
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
        {
          if (!v5)
          {
LABEL_86:
            v36 = 0;
            while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              v47 = 2;
              v48 = v36;
              sub_2245403C8(a3, (size_t *)&v47);
              v36 += 2;
              if (!--v7)
                return;
            }
            goto LABEL_144;
          }
          do
          {
            v47 = 2;
            v48 = v5;
            sub_2245403C8(a3, (size_t *)&v47);
            v5 += 2;
            --v7;
          }
          while (v7);
        }
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
          goto LABEL_86;
      }
      return;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v8)
        v9 = 0;
      else
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v9)
      {
        v10 = *(_QWORD *)(a2 + 8);
        if (!v10)
          return;
        if (v8)
        {
          do
          {
            v47 = 2;
            v48 = v8;
            sub_2245429C8(a3, (uint64_t)&v47);
            v8 += 4;
            --v10;
          }
          while (v10);
          return;
        }
        goto LABEL_92;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v10 = *(_QWORD *)(a2 + 8);
      if (v10)
      {
LABEL_92:
        v37 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v37;
          sub_2245429C8(a3, (uint64_t)&v47);
          v37 += 4;
          if (!--v10)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v11)
        v12 = 0;
      else
        v12 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v12)
      {
        v13 = *(_QWORD *)(a2 + 8);
        if (!v13)
          return;
        if (v11)
        {
          do
          {
            v47 = 2;
            v48 = v11;
            sub_224542C38(a3, (uint64_t)&v47);
            v11 += 8;
            --v13;
          }
          while (v13);
          return;
        }
        goto LABEL_98;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (v13)
      {
LABEL_98:
        v38 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v38;
          sub_224542C38(a3, (uint64_t)&v47);
          v38 += 8;
          if (!--v13)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v14 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v14)
        v15 = 0;
      else
        v15 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v15)
      {
        v16 = *(_QWORD *)(a2 + 8);
        if (!v16)
          return;
        if (v14)
        {
          do
          {
            v47 = 2;
            v48 = v14;
            sub_224543118(a3, (uint64_t)&v47);
            v14 += 16;
            --v16;
          }
          while (v16);
          return;
        }
        goto LABEL_104;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v16 = *(_QWORD *)(a2 + 8);
      if (v16)
      {
LABEL_104:
        v39 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v39;
          sub_224543118(a3, (uint64_t)&v47);
          v39 += 16;
          if (!--v16)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v17)
        v18 = 1;
      else
        v18 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v18)
      {
        v19 = *(_QWORD *)(a2 + 8);
        if (!v19)
          return;
        if (!v17)
          goto LABEL_110;
        do
        {
          v47 = 2;
          v48 = v17;
          sub_224542758(a3, (size_t *)&v47);
          v17 += 2;
          --v19;
        }
        while (v19);
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v19 = *(_QWORD *)(a2 + 8);
        if (v19)
        {
LABEL_110:
          v41 = 0;
          while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v47 = 2;
            v48 = v41;
            sub_224542758(a3, (size_t *)&v47);
            v41 += 2;
            if (!--v19)
              return;
          }
          goto LABEL_144;
        }
      }
      return;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v20)
        v21 = 0;
      else
        v21 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v21)
      {
        v22 = *(_QWORD *)(a2 + 8);
        if (!v22)
          return;
        if (v20)
        {
          do
          {
            v47 = 2;
            v48 = v20;
            sub_224542890(a3, (uint64_t)&v47);
            v20 += 4;
            --v22;
          }
          while (v22);
          return;
        }
        goto LABEL_116;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
      {
LABEL_116:
        v42 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v42;
          sub_224542890(a3, (uint64_t)&v47);
          v42 += 4;
          if (!--v22)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v23 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v23)
        v24 = 0;
      else
        v24 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v24)
      {
        v25 = *(_QWORD *)(a2 + 8);
        if (!v25)
          return;
        if (v23)
        {
          do
          {
            v47 = 2;
            v48 = v23;
            sub_224542B00(a3, (uint64_t)&v47);
            v23 += 8;
            --v25;
          }
          while (v25);
          return;
        }
        goto LABEL_122;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v25 = *(_QWORD *)(a2 + 8);
      if (v25)
      {
LABEL_122:
        v43 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v43;
          sub_224542B00(a3, (uint64_t)&v47);
          v43 += 8;
          if (!--v25)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v26 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v26)
        v27 = 0;
      else
        v27 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v27)
      {
        v28 = *(_QWORD *)(a2 + 8);
        if (!v28)
          return;
        if (v26)
        {
          do
          {
            v47 = 2;
            v48 = v26;
            sub_224542FE0(a3, (uint64_t)&v47);
            v26 += 16;
            --v28;
          }
          while (v28);
          return;
        }
        goto LABEL_128;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v28 = *(_QWORD *)(a2 + 8);
      if (v28)
      {
LABEL_128:
        v44 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v44;
          sub_224542FE0(a3, (uint64_t)&v47);
          v44 += 16;
          if (!--v28)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v29 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v29)
        v30 = 0;
      else
        v30 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v30)
      {
        v31 = *(_QWORD *)(a2 + 8);
        if (!v31)
          return;
        if (v29)
        {
          do
          {
            v47 = 2;
            v48 = v29;
            sub_2245436F8(a3, (float **)&v47);
            v29 += 8;
            --v31;
          }
          while (v31);
          return;
        }
        goto LABEL_134;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v31 = *(_QWORD *)(a2 + 8);
      if (v31)
      {
LABEL_134:
        v45 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v45;
          sub_2245436F8(a3, (float **)&v47);
          v45 += 8;
          if (!--v31)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v32 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v32)
        v33 = 0;
      else
        v33 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v33)
      {
        v34 = *(_QWORD *)(a2 + 8);
        if (!v34)
          return;
        if (v32)
        {
          do
          {
            v47 = 2;
            v48 = v32;
            sub_224543B18(a3, &v47);
            v32 += 16;
            --v34;
          }
          while (v34);
          return;
        }
LABEL_140:
        v46 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v46;
          sub_224543B18(a3, &v47);
          v46 += 16;
          if (!--v34)
            return;
        }
LABEL_144:
        abort();
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v34 = *(_QWORD *)(a2 + 8);
      if (v34)
        goto LABEL_140;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_224046B48(uint64_t *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14[3];
  __int128 v15;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[3];
  if (*(_BYTE *)(v6 + 40))
  {
    v14[0] = (uint64_t *)(v6 + 16);
    sub_224559C04(v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14[0]) = -52;
      BYTE1(v14[0]) = v11;
    }
    else
    {
      LOBYTE(v14[0]) = v11;
    }
    std::ostream::write();
  }
  v7 = a1[3];
  if (*(_BYTE *)(v7 + 40))
  {
    v14[0] = (uint64_t *)(v7 + 16);
    sub_22455B1CC(v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_22455B4D4();
  }
  v15 = xmmword_24EC66DB8;
  v14[0] = (uint64_t *)&v11;
  v14[1] = a1;
  v14[2] = (uint64_t *)&v15;
  sub_224046CAC(v11, v14);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_224046C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_224046CAC(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  BOOL v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(char **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v9 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        for (*(_QWORD *)&v91 = v9 + 16; v7; --v7)
          result = (uint64_t)sub_224559C04((uint64_t **)&v91, *v6++);
      }
      else
      {
        for (; v7; --v7)
        {
          v78 = *v6;
          if (v78 < 0)
          {
            LOBYTE(v91) = -52;
            BYTE1(v91) = v78;
          }
          else
          {
            LOBYTE(v91) = *v6;
          }
          result = std::ostream::write();
          ++v6;
        }
      }
      break;
    case 1:
      v10 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v11 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v15 = a2[1];
      *(_QWORD *)&v91 = v13 >> 1;
      *((_QWORD *)&v91 + 1) = v12;
      result = sub_224553564(*(_QWORD *)(v15 + 24), &v91);
      break;
    case 2:
      v16 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(unsigned int **)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 4;
      if (v20)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v21 = v19 >> 2;
      v22 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)&v91 = v22 + 16;
        if (v19 >= 4)
        {
          v23 = 4 * v21;
          do
          {
            result = (uint64_t)sub_22455A7EC((uint64_t **)&v91, *v18++);
            v23 -= 4;
          }
          while (v23);
        }
      }
      else if (v19 >= 4)
      {
        v79 = v22 + 8;
        v80 = 4 * v21;
        do
        {
          result = sub_22455AA60((uint64_t)&v91, v79);
          ++v18;
          v80 -= 4;
        }
        while (v80);
      }
      break;
    case 3:
      v24 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(unint64_t **)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 8;
      if (v28)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v29 = v27 >> 3;
      v30 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v30 + 40))
      {
        *(_QWORD *)&v91 = v30 + 16;
        if (v27 >= 8)
        {
          v31 = 8 * v29;
          do
          {
            result = (uint64_t)sub_22455B1CC((uint64_t **)&v91, *v26++);
            v31 -= 8;
          }
          while (v31);
        }
      }
      else if (v27 >= 8)
      {
        v81 = 8 * v29;
        do
        {
          ++v26;
          result = sub_22455B4D4();
          v81 -= 8;
        }
        while (v81);
      }
      break;
    case 5:
      v32 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v33 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_BYTE **)(v33 + 48);
      if (v34)
        v36 = 1;
      else
        v36 = v35 == 0;
      if (!v36)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v37 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v37 + 40))
      {
        for (*(_QWORD *)&v91 = v37 + 16; v35; --v35)
          result = (uint64_t)sub_224559ABC((uint64_t **)&v91, (char)*v34++);
      }
      else
      {
        for (; v35; --v35)
        {
          v82 = (char)*v34;
          if (v82 > -33)
          {
            LOBYTE(v91) = *v34;
          }
          else
          {
            LOBYTE(v91) = -48;
            BYTE1(v91) = v82;
          }
          result = std::ostream::write();
          ++v34;
        }
      }
      break;
    case 6:
      v38 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(__int16 **)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 2;
      if (v42)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v43 = v41 >> 1;
      v44 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)&v91 = v44 + 16;
        if (v41 >= 2)
        {
          v45 = 2 * v43;
          do
          {
            result = (uint64_t)sub_224559D48((uint64_t **)&v91, *v40++);
            v45 -= 2;
          }
          while (v45);
        }
      }
      else if (v41 >= 2)
      {
        v83 = 2 * v43;
        do
        {
          ++v40;
          result = sub_22455A00C();
          v83 -= 2;
        }
        while (v83);
      }
      break;
    case 7:
      v46 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v47 = *(_QWORD *)(v46 + 16);
      v49 = *(_QWORD *)(v47 + 40);
      v48 = *(unsigned int **)(v47 + 48);
      if (v48)
        v50 = 0;
      else
        v50 = v49 >= 4;
      if (v50)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v51 = v49 >> 2;
      v52 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v52 + 40))
      {
        *(_QWORD *)&v91 = v52 + 16;
        if (v49 >= 4)
        {
          v53 = 4 * v51;
          do
          {
            result = (uint64_t)sub_22455A2D4((uint64_t **)&v91, *v48++);
            v53 -= 4;
          }
          while (v53);
        }
      }
      else if (v49 >= 4)
      {
        v84 = 4 * v51;
        do
        {
          ++v48;
          result = sub_22455A6F0();
          v84 -= 4;
        }
        while (v84);
      }
      break;
    case 8:
      v54 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v55 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unint64_t **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 8;
      if (v58)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 3;
      v60 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v91 = v60 + 16;
        if (v57 >= 8)
        {
          v61 = 8 * v59;
          do
          {
            result = (uint64_t)sub_22455AB50((uint64_t **)&v91, *v56++);
            v61 -= 8;
          }
          while (v61);
        }
      }
      else if (v57 >= 8)
      {
        v85 = 8 * v59;
        do
        {
          ++v56;
          result = sub_22455B08C();
          v85 -= 8;
        }
        while (v85);
      }
      break;
    case 11:
      v62 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v63 = *(_QWORD *)(v62 + 16);
      v65 = *(_QWORD *)(v63 + 40);
      v64 = *(unsigned int **)(v63 + 48);
      if (v64)
        v66 = 0;
      else
        v66 = v65 >= 4;
      if (v66)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v67 = v65 >> 2;
      v68 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v68 + 40))
      {
        *(_QWORD *)&v91 = v68 + 16;
        if (v65 >= 4)
        {
          v69 = 4 * v67;
          do
          {
            result = (uint64_t)sub_22455B5CC((uint64_t)&v90, (uint64_t **)&v91, v64++);
            v69 -= 4;
          }
          while (v69);
        }
      }
      else if (v65 >= 4)
      {
        v86 = 4 * v67;
        do
        {
          v87 = *v64;
          LOBYTE(v91) = -54;
          *(_DWORD *)((char *)&v91 + 1) = bswap32(v87);
          result = std::ostream::write();
          ++v64;
          v86 -= 4;
        }
        while (v86);
      }
      break;
    case 12:
      v70 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v71 = *(_QWORD *)(v70 + 16);
      v73 = *(_QWORD *)(v71 + 40);
      v72 = *(unint64_t **)(v71 + 48);
      if (v72)
        v74 = 0;
      else
        v74 = v73 >= 8;
      if (v74)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v75 = v73 >> 3;
      v76 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v76 + 40))
      {
        *(_QWORD *)&v91 = v76 + 16;
        if (v73 >= 8)
        {
          v77 = 8 * v75;
          do
          {
            result = (uint64_t)sub_22455B6A8((uint64_t)&v90, (uint64_t **)&v91, v72++);
            v77 -= 8;
          }
          while (v77);
        }
      }
      else if (v73 >= 8)
      {
        v88 = 8 * v75;
        do
        {
          v89 = *v72;
          LOBYTE(v91) = -53;
          *(_QWORD *)((char *)&v91 + 1) = bswap64(v89);
          result = std::ostream::write();
          ++v72;
          v88 -= 8;
        }
        while (v88);
      }
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_224047504(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  uint64_t v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_22403491C(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = *((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453F8B8(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_223454278(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "points2";
    *v11 = 7;
    if (!v16)
      *v10 = 1;
  }
  sub_22453FAE0(a1);
  sub_224047764(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_224047730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_223454278(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224047750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224047764(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  size_t v47;
  uint64_t v48;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v5)
        v6 = 1;
      else
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v6)
      {
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
        {
          if (!v5)
          {
LABEL_86:
            v36 = 0;
            while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              v47 = 2;
              v48 = v36;
              sub_22453FC5C(a3, &v47);
              v36 += 2;
              if (!--v7)
                return;
            }
            goto LABEL_144;
          }
          do
          {
            v47 = 2;
            v48 = v5;
            sub_22453FC5C(a3, &v47);
            v5 += 2;
            --v7;
          }
          while (v7);
        }
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
          goto LABEL_86;
      }
      return;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v8)
        v9 = 0;
      else
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v9)
      {
        v10 = *(_QWORD *)(a2 + 8);
        if (!v10)
          return;
        if (v8)
        {
          do
          {
            v47 = 2;
            v48 = v8;
            sub_224540D48(a3, (uint64_t)&v47);
            v8 += 4;
            --v10;
          }
          while (v10);
          return;
        }
        goto LABEL_92;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v10 = *(_QWORD *)(a2 + 8);
      if (v10)
      {
LABEL_92:
        v37 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v37;
          sub_224540D48(a3, (uint64_t)&v47);
          v37 += 4;
          if (!--v10)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v11)
        v12 = 0;
      else
        v12 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v12)
      {
        v13 = *(_QWORD *)(a2 + 8);
        if (!v13)
          return;
        if (v11)
        {
          do
          {
            v47 = 2;
            v48 = v11;
            sub_224540FB8(a3, (uint64_t)&v47);
            v11 += 8;
            --v13;
          }
          while (v13);
          return;
        }
        goto LABEL_98;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (v13)
      {
LABEL_98:
        v38 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v38;
          sub_224540FB8(a3, (uint64_t)&v47);
          v38 += 8;
          if (!--v13)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v14 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v14)
        v15 = 0;
      else
        v15 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v15)
      {
        v16 = *(_QWORD *)(a2 + 8);
        if (!v16)
          return;
        if (v14)
        {
          do
          {
            v47 = 2;
            v48 = v14;
            sub_224541228(a3, (uint64_t)&v47);
            v14 += 16;
            --v16;
          }
          while (v16);
          return;
        }
        goto LABEL_104;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v16 = *(_QWORD *)(a2 + 8);
      if (v16)
      {
LABEL_104:
        v39 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v39;
          sub_224541228(a3, (uint64_t)&v47);
          v39 += 16;
          if (!--v16)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v17)
        v18 = 1;
      else
        v18 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v18)
      {
        v19 = *(_QWORD *)(a2 + 8);
        if (!v19)
          return;
        if (!v17)
          goto LABEL_110;
        do
        {
          v47 = 2;
          v48 = v17;
          sub_224540AD8(a3, &v47);
          v17 += 2;
          --v19;
        }
        while (v19);
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v19 = *(_QWORD *)(a2 + 8);
        if (v19)
        {
LABEL_110:
          v41 = 0;
          while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v47 = 2;
            v48 = v41;
            sub_224540AD8(a3, &v47);
            v41 += 2;
            if (!--v19)
              return;
          }
          goto LABEL_144;
        }
      }
      return;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v20)
        v21 = 0;
      else
        v21 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v21)
      {
        v22 = *(_QWORD *)(a2 + 8);
        if (!v22)
          return;
        if (v20)
        {
          do
          {
            v47 = 2;
            v48 = v20;
            sub_224540C10(a3, (uint64_t)&v47);
            v20 += 4;
            --v22;
          }
          while (v22);
          return;
        }
        goto LABEL_116;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
      {
LABEL_116:
        v42 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v42;
          sub_224540C10(a3, (uint64_t)&v47);
          v42 += 4;
          if (!--v22)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v23 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v23)
        v24 = 0;
      else
        v24 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v24)
      {
        v25 = *(_QWORD *)(a2 + 8);
        if (!v25)
          return;
        if (v23)
        {
          do
          {
            v47 = 2;
            v48 = v23;
            sub_224540E80(a3, (uint64_t)&v47);
            v23 += 8;
            --v25;
          }
          while (v25);
          return;
        }
        goto LABEL_122;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v25 = *(_QWORD *)(a2 + 8);
      if (v25)
      {
LABEL_122:
        v43 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v43;
          sub_224540E80(a3, (uint64_t)&v47);
          v43 += 8;
          if (!--v25)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v26 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v26)
        v27 = 0;
      else
        v27 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v27)
      {
        v28 = *(_QWORD *)(a2 + 8);
        if (!v28)
          return;
        if (v26)
        {
          do
          {
            v47 = 2;
            v48 = v26;
            sub_2245410F0(a3, (uint64_t)&v47);
            v26 += 16;
            --v28;
          }
          while (v28);
          return;
        }
        goto LABEL_128;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v28 = *(_QWORD *)(a2 + 8);
      if (v28)
      {
LABEL_128:
        v44 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v44;
          sub_2245410F0(a3, (uint64_t)&v47);
          v44 += 16;
          if (!--v28)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v29 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v29)
        v30 = 0;
      else
        v30 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v30)
      {
        v31 = *(_QWORD *)(a2 + 8);
        if (!v31)
          return;
        if (v29)
        {
          do
          {
            v47 = 2;
            v48 = v29;
            sub_224541808(a3, &v47);
            v29 += 8;
            --v31;
          }
          while (v31);
          return;
        }
        goto LABEL_134;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v31 = *(_QWORD *)(a2 + 8);
      if (v31)
      {
LABEL_134:
        v45 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v45;
          sub_224541808(a3, &v47);
          v45 += 8;
          if (!--v31)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v32 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v32)
        v33 = 0;
      else
        v33 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v33)
      {
        v34 = *(_QWORD *)(a2 + 8);
        if (!v34)
          return;
        if (v32)
        {
          do
          {
            v47 = 2;
            v48 = v32;
            sub_224541B78(a3, &v47);
            v32 += 16;
            --v34;
          }
          while (v34);
          return;
        }
LABEL_140:
        v46 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 2;
          v48 = v46;
          sub_224541B78(a3, &v47);
          v46 += 16;
          if (!--v34)
            return;
        }
LABEL_144:
        abort();
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v34 = *(_QWORD *)(a2 + 8);
      if (v34)
        goto LABEL_140;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_22404817C(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  _QWORD v13[3];
  __int128 v14;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(v13[0]) = v10;
  sub_22454F564(a1, (unsigned __int8 *)v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v13[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v14 = xmmword_24EC66DB8;
  v13[0] = &v10;
  v13[1] = a1;
  v13[2] = &v14;
  sub_22404829C(v10, v13);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_224048288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22404829C(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(unsigned __int8 **)(v4 + 48);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (v7)
      {
        if (!v6)
          return;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v54 = a2[1];
        do
        {
          sub_22454F564(v54, v5++);
          --v6;
        }
        while (v6);
        return;
      }
      goto LABEL_112;
    case 1:
      v8 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v9 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v55 = a2[1];
        v56 = *(_QWORD *)(v55 + 40);
        v57 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(v55 + 24);
            v89 = *(_BYTE *)(v55 + 32);
            sub_2231813E8(v58, (uint64_t)&v89, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(v55 + 40) + 1;
          *(_QWORD *)(v55 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_112;
    case 2:
      v13 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v14 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return;
        goto LABEL_74;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_74:
        v59 = a2[1];
        v60 = *(_QWORD *)(v59 + 40);
        v61 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v60)
          {
            v62 = *(_QWORD **)(v59 + 24);
            v90 = *(_BYTE *)(v59 + 32);
            sub_2231813E8(v62, (uint64_t)&v90, 1);
          }
          v15 += 4;
          std::ostream::operator<<();
          v60 = *(_QWORD *)(v59 + 40) + 1;
          *(_QWORD *)(v59 + 40) = v60;
          v61 -= 4;
        }
        while (v61);
        return;
      }
      goto LABEL_112;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
        v22 = 0;
      else
        v22 = v21 >= 8;
      if (!v22)
      {
        if (v21 < 8)
          return;
        goto LABEL_79;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_79:
        v63 = a2[1];
        v64 = *(_QWORD *)(v63 + 40);
        v65 = v21 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v64)
          {
            v66 = *(_QWORD **)(v63 + 24);
            v91 = *(_BYTE *)(v63 + 32);
            sub_2231813E8(v66, (uint64_t)&v91, 1);
          }
          v20 += 8;
          std::ostream::operator<<();
          v64 = *(_QWORD *)(v63 + 40) + 1;
          *(_QWORD *)(v63 + 40) = v64;
          v65 -= 8;
        }
        while (v65);
        return;
      }
      goto LABEL_112;
    case 5:
      v23 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v24 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v24 + 40);
      v25 = *(char **)(v24 + 48);
      if (v25)
        v27 = 1;
      else
        v27 = v26 == 0;
      if (v27)
      {
        if (!v26)
          return;
        goto LABEL_84;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_84:
        v68 = a2[1];
        do
        {
          sub_22454F380(v68, v25++);
          --v26;
        }
        while (v26);
        return;
      }
      goto LABEL_112;
    case 6:
      v28 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v29 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 2;
      if (!v32)
      {
        if (v31 < 2)
          return;
        goto LABEL_88;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_88:
        v69 = a2[1];
        v70 = *(_QWORD *)(v69 + 40);
        v71 = v31 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v70)
          {
            v72 = *(_QWORD **)(v69 + 24);
            v92 = *(_BYTE *)(v69 + 32);
            sub_2231813E8(v72, (uint64_t)&v92, 1);
          }
          v30 += 2;
          std::ostream::operator<<();
          v70 = *(_QWORD *)(v69 + 40) + 1;
          *(_QWORD *)(v69 + 40) = v70;
          v71 -= 2;
        }
        while (v71);
        return;
      }
      goto LABEL_112;
    case 7:
      v33 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v34 = *(_QWORD *)(v33 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 4;
      if (!v37)
      {
        if (v36 < 4)
          return;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v73 = a2[1];
        v74 = *(_QWORD *)(v73 + 40);
        v75 = v36 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v74)
          {
            v76 = *(_QWORD **)(v73 + 24);
            v93 = *(_BYTE *)(v73 + 32);
            sub_2231813E8(v76, (uint64_t)&v93, 1);
          }
          v35 += 4;
          std::ostream::operator<<();
          v74 = *(_QWORD *)(v73 + 40) + 1;
          *(_QWORD *)(v73 + 40) = v74;
          v75 -= 4;
        }
        while (v75);
        return;
      }
      goto LABEL_112;
    case 8:
      v38 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(_QWORD *)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (!v42)
      {
        if (v41 < 8)
          return;
        goto LABEL_98;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_98:
        v77 = a2[1];
        v78 = *(_QWORD *)(v77 + 40);
        v79 = v41 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v78)
          {
            v80 = *(_QWORD **)(v77 + 24);
            v94 = *(_BYTE *)(v77 + 32);
            sub_2231813E8(v80, (uint64_t)&v94, 1);
          }
          v40 += 8;
          std::ostream::operator<<();
          v78 = *(_QWORD *)(v77 + 40) + 1;
          *(_QWORD *)(v77 + 40) = v78;
          v79 -= 8;
        }
        while (v79);
        return;
      }
      goto LABEL_112;
    case 11:
      v43 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v44 = *(_QWORD *)(v43 + 16);
      v46 = *(_QWORD *)(v44 + 40);
      v45 = *(_QWORD *)(v44 + 48);
      if (v45)
        v47 = 0;
      else
        v47 = v46 >= 4;
      if (!v47)
      {
        if (v46 < 4)
          return;
        goto LABEL_103;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_103:
        v81 = a2[1];
        v82 = *(_QWORD *)(v81 + 40);
        v83 = v46 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v82)
          {
            v84 = *(_QWORD **)(v81 + 24);
            v95 = *(_BYTE *)(v81 + 32);
            sub_2231813E8(v84, (uint64_t)&v95, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v81 + 24) + *(_QWORD *)(**(_QWORD **)(v81 + 24) - 24) + 16) = 9;
          v45 += 4;
          std::ostream::operator<<();
          v82 = *(_QWORD *)(v81 + 40) + 1;
          *(_QWORD *)(v81 + 40) = v82;
          v83 -= 4;
        }
        while (v83);
        return;
      }
      goto LABEL_112;
    case 12:
      v48 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v49 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(_QWORD *)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_112:
          abort();
        }
      }
      else if (v51 < 8)
      {
        return;
      }
      v85 = a2[1];
      v86 = *(_QWORD *)(v85 + 40);
      v87 = v51 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v86)
        {
          v88 = *(_QWORD **)(v85 + 24);
          v96 = *(_BYTE *)(v85 + 32);
          sub_2231813E8(v88, (uint64_t)&v96, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v85 + 24) + *(_QWORD *)(**(_QWORD **)(v85 + 24) - 24) + 16) = 17;
        v50 += 8;
        std::ostream::operator<<();
        v86 = *(_QWORD *)(v85 + 40) + 1;
        *(_QWORD *)(v85 + 40) = v86;
        v87 -= 8;
      }
      while (v87);
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240489B8(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD __src[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(__src[0]) = v9;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)__src, (char *)__src + 1, 1);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  v13 = xmmword_24EC66DB8;
  __src[0] = &v9;
  __src[1] = a1;
  __src[2] = &v13;
  sub_224048ADC(v9, __src);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_224048AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_224048ADC(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char *result;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v4 + 40);
      v6 = *(char **)(v4 + 48);
      if (v6)
        v7 = 1;
      else
        v7 = v5 == 0;
      if (!v7)
        goto LABEL_27;
      goto LABEL_7;
    case 1:
      v9 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(char **)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      v14 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v15 + 40);
      v11 = *(char **)(v15 + 48);
      if (v11)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v19 + 40);
      v11 = *(char **)(v19 + 48);
      if (v11)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      v22 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v23 = *(_QWORD *)(v22 + 16);
      v5 = *(_QWORD *)(v23 + 40);
      v6 = *(char **)(v23 + 48);
      if (v6)
        v24 = 1;
      else
        v24 = v5 == 0;
      if (v24)
      {
LABEL_7:
        v8 = a2[1];
      }
      else
      {
LABEL_27:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = a2[1], sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)))
        {
LABEL_77:
          abort();
        }
      }
      result = sub_224501B60(v8 + 24, *(char **)(v8 + 32), v6, &v6[v5], v5);
      break;
    case 6:
      v25 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v26 = *(_QWORD *)(v25 + 16);
      v12 = *(_QWORD *)(v26 + 40);
      v11 = *(char **)(v26 + 48);
      if (v11)
        v27 = 0;
      else
        v27 = v12 >= 2;
      if (!v27)
        goto LABEL_37;
LABEL_36:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_37:
      v28 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[1];
      if (v11)
        v30 = 1;
      else
        v30 = v28 == 0;
      if (!v30)
        goto LABEL_75;
      goto LABEL_76;
    case 7:
      v31 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v32 = *(_QWORD *)(v31 + 16);
      v16 = *(_QWORD *)(v32 + 40);
      v11 = *(char **)(v32 + 48);
      if (v11)
        v33 = 0;
      else
        v33 = v16 >= 4;
      if (!v33)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      v34 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v35 = *(_QWORD *)(v34 + 16);
      v20 = *(_QWORD *)(v35 + 40);
      v11 = *(char **)(v35 + 48);
      if (v11)
        v36 = 0;
      else
        v36 = v20 >= 8;
      if (!v36)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      v37 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v38 = *(_QWORD *)(v37 + 16);
      v16 = *(_QWORD *)(v38 + 40);
      v11 = *(char **)(v38 + 48);
      if (v11)
        v39 = 0;
      else
        v39 = v16 >= 4;
      if (!v39)
        goto LABEL_59;
LABEL_58:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_59:
      v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v29 = a2[1];
      if (v11)
        v40 = 1;
      else
        v40 = v28 == 0;
      if (!v40)
        goto LABEL_75;
      goto LABEL_76;
    case 12:
      v41 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v42 = *(_QWORD *)(v41 + 16);
      v20 = *(_QWORD *)(v42 + 40);
      v11 = *(char **)(v42 + 48);
      if (v11)
        v43 = 0;
      else
        v43 = v20 >= 8;
      if (!v43)
        goto LABEL_71;
LABEL_70:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_71:
      v28 = v20 & 0xFFFFFFFFFFFFFFF8;
      v29 = a2[1];
      if (v11)
        v44 = 1;
      else
        v44 = v28 == 0;
      if (v44)
        goto LABEL_76;
LABEL_75:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_76:
      result = sub_224501B60(v29 + 24, *(char **)(v29 + 32), v11, &v11[v28], v28);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_224048E68(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _BYTE *v12[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12[0] = &v9;
  sub_223BB23F8(a1, v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  v13 = xmmword_24EC66DB8;
  v12[0] = &v9;
  v12[1] = a1;
  v12[2] = &v13;
  sub_224048F64(v9, v12);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_224048F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_224048F64(int a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int8 **result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return result;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v55 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v55 + 80))(v55, v6++);
          --v7;
        }
        while (v7);
        return result;
      }
      goto LABEL_104;
    case 1:
      v9 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v56 = a2[1];
        v57 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v56 + 96))(v56, v11);
          v11 += 2;
          v57 -= 2;
        }
        while (v57);
        return result;
      }
      goto LABEL_104;
    case 2:
      v14 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (!v18)
      {
        if (v17 < 4)
          return result;
        goto LABEL_73;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_73:
        v58 = a2[1];
        v59 = v17 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v58 + 104))(v58, v16);
          v16 += 4;
          v59 -= 4;
        }
        while (v59);
        return result;
      }
      goto LABEL_104;
    case 3:
      v19 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v20 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (!v23)
      {
        if (v22 < 8)
          return result;
        goto LABEL_77;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_77:
        v60 = a2[1];
        v61 = v22 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 120))(v60, v21);
          v21 += 8;
          v61 -= 8;
        }
        while (v61);
        return result;
      }
      goto LABEL_104;
    case 5:
      v24 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (v28)
      {
        if (!v27)
          return result;
        goto LABEL_81;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_81:
        v63 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 88))(v63, v26++);
          --v27;
        }
        while (v27);
        return result;
      }
      goto LABEL_104;
    case 6:
      v29 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v30 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (!v33)
      {
        if (v32 < 2)
          return result;
        goto LABEL_85;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_85:
        v64 = a2[1];
        v65 = v32 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v64 + 48))(v64, v31);
          v31 += 2;
          v65 -= 2;
        }
        while (v65);
        return result;
      }
      goto LABEL_104;
    case 7:
      v34 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v35 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (!v38)
      {
        if (v37 < 4)
          return result;
        goto LABEL_89;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_89:
        v66 = a2[1];
        v67 = v37 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 56))(v66, v36);
          v36 += 4;
          v67 -= 4;
        }
        while (v67);
        return result;
      }
      goto LABEL_104;
    case 8:
      v39 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v40 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (!v43)
      {
        if (v42 < 8)
          return result;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v68 = a2[1];
        v69 = v42 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 72))(v68, v41);
          v41 += 8;
          v69 -= 8;
        }
        while (v69);
        return result;
      }
      goto LABEL_104;
    case 11:
      v44 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v45 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (!v48)
      {
        if (v47 < 4)
          return result;
        goto LABEL_97;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_97:
        v70 = a2[1];
        v71 = v47 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 128))(v70, v46);
          v46 += 4;
          v71 -= 4;
        }
        while (v71);
        return result;
      }
      goto LABEL_104;
    case 12:
      v49 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v50 = *(_QWORD *)(v49 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_104:
          abort();
        }
      }
      else if (v52 < 8)
      {
        return result;
      }
      v72 = a2[1];
      v73 = v52 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 136))(v72, v51);
        v51 += 8;
        v73 -= 8;
      }
      while (v73);
      return result;
    default:
      sub_22454B274(a1);
  }
}

void sub_224049540(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  if (a3 < 2)
  {
    sub_224049664((uint64_t)&v11, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "value_type";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v11 = a2;
    sub_224035430((uint64_t *)a1, &v11);
    v6 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "size";
    *(_QWORD *)(a1 + 96) = 4;
    if (!v6)
      *(_BYTE *)(a1 + 104) = 1;
    v7 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    v11 = 0;
    sub_22451CAD4(v7, &v11);
    *((_QWORD *)a2 + 1) = v11;
    v8 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "points2";
    *(_QWORD *)(a1 + 96) = 7;
    if (!v8)
      *(_BYTE *)(a1 + 104) = 1;
    sub_224544628(a1);
    sub_224049878(*a2, (uint64_t)a2, a1);
    v9 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v9 - 8);
    v10 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(v10 - 8);
    *(_QWORD *)(a1 + 48) = v9 - 8;
    *(_QWORD *)(a1 + 72) = v10 - 8;
  }
}

void sub_224049664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned __int8 v22[8];
  void *v23;
  __int128 v24;
  void *__p;
  void *v26;
  uint64_t v27;
  __int128 v28;

  v22[0] = 7;
  v23 = 0;
  __p = 0;
  v26 = 0;
  v27 = 0;
  sub_2245114E4((uint64_t)&__p, &v28);
  v24 = v28;
  if (__p)
  {
    v26 = __p;
    operator delete(__p);
  }
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  __p = v22;
  sub_224035430((uint64_t *)a2, (_BYTE **)&__p);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  __p = 0;
  sub_22451CAD4(v7, &__p);
  v23 = __p;
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "points2";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  sub_22404B040(v22[0], (uint64_t)v22, a2);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
  v11 = v22[0];
  v12 = v23;
  v13 = v24;
  if (*((_QWORD *)&v24 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_BYTE *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = v13;
  v16 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v13 + 1);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
  if (*((_QWORD *)&v24 + 1))
  {
    v20 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
}

void sub_224049848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224049864(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224049878(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_2240499A0(v3);
      break;
    case 1:
      sub_224049BCC(v3);
      break;
    case 2:
      sub_224049E04(v3);
      break;
    case 3:
      sub_22404A040(v3);
      break;
    case 5:
      sub_22404A2C0(v3);
      break;
    case 6:
      sub_22404A4EC(v3);
      break;
    case 7:
      sub_22404A724(v3);
      break;
    case 8:
      sub_22404A960(v3);
      break;
    case 11:
      sub_22404ABE0(v3);
      break;
    case 12:
      sub_22404AE10(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240499A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_2245449F8(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224049B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224049BCC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_223257BE4();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545920(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224049DA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224049E04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545A98(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224049FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404A040(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547FD0(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22404A244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404A2C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545740(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_22404A488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404A4EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_2240336DC();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545830(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404A6C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404A724(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22352449C();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_2245459DC(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404A8FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404A960(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547C94(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22404AB64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404ABE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v15 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545EA4(v6, (float *)&v4[v3]);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404ADAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404AE10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_22316E078();
    __p = operator new(16 * v2);
    v15 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545FAC(v6, (double *)&v4[v3]);
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404AFDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404B040(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22404B168(v3);
      break;
    case 1:
      sub_22404B394(v3);
      break;
    case 2:
      sub_22404B5CC(v3);
      break;
    case 3:
      sub_22404B808(v3);
      break;
    case 5:
      sub_22404BA88(v3);
      break;
    case 6:
      sub_22404BCB4(v3);
      break;
    case 7:
      sub_22404BEEC(v3);
      break;
    case 8:
      sub_22404C128(v3);
      break;
    case 11:
      sub_22404C3A8(v3);
      break;
    case 12:
      sub_22404C5D8(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22404B168(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_2245449F8(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_22404B330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404B394(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_223257BE4();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545920(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404B568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404B5CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545A98(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404B7A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404B808(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547FD0(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22404BA0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404BA88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545740(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_22404BC50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404BCB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_2240336DC();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545830(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404BE88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404BEEC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22352449C();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_2245459DC(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404C0C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404C128(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547C94(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22404C32C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404C3A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v15 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545EA4(v6, (float *)&v4[v3]);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404C574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404C5D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_22316E078();
    __p = operator new(16 * v2);
    v15 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545FAC(v6, (double *)&v4[v3]);
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404C7A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404C808(uint64_t a1, uint64_t *a2, unsigned __int8 *a3, unsigned int a4)
{
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;

  if (a4 < 2)
  {
    sub_22404C8FC((uint64_t)v10, a2, (uint64_t)a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    LOBYTE(v10[0]) = 0;
    sub_224553CF0(a2[6], v10);
    *a3 = v10[0];
    sub_2245543E8(a2[6], (_QWORD *)a3 + 1);
    v11 = xmmword_24EC66DB8;
    v7 = *a3;
    v10[0] = a3;
    v10[1] = a2;
    v10[2] = &v11;
    sub_22404CA90(v7, v10);
    v8 = a2[4];
    v9 = *(_QWORD *)(v8 - 16) - (*(uint64_t (**)(uint64_t *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v8 - 8);
    if (v9)
      (*(void (**)(uint64_t *, uint64_t))(*v6 + 40))(a2 + 2, v9);
    a2[4] -= 16;
  }
}

void sub_22404C8FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  void *__p;
  void *v20;
  __int128 *v21;
  __int128 v22;

  v16 = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245114E4((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  LOBYTE(__p) = 0;
  sub_224553CF0(a2[6], &__p);
  v16 = __p;
  sub_2245543E8(a2[6], &v17);
  v22 = xmmword_24EC66DB8;
  __p = &v16;
  v20 = a2;
  v21 = &v22;
  sub_22404DD28(v16, &__p);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22404CA60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404CA7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22404CA90(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22404CB38(a2);
      break;
    case 1:
      sub_22404CCF4(a2);
      break;
    case 2:
      sub_22404CEC0(a2);
      break;
    case 3:
      sub_22404D090(a2);
      break;
    case 5:
      sub_22404D260(a2);
      break;
    case 6:
      sub_22404D41C(a2);
      break;
    case 7:
      sub_22404D5E8(a2);
      break;
    case 8:
      sub_22404D7B8(a2);
      break;
    case 11:
      sub_22404D988(a2);
      break;
    case 12:
      sub_22404DB58(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22404CB38(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553CF0(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404CC94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404CCF4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553E94(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404CE60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404CEC0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224554038(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404D030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404D090(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245543E8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404D200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404D260(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553C38(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404D3BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404D41C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553DDC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404D588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404D5E8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224553F80(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404D758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404D7B8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245542F8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404D928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404D988(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_2245544CC(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404DAF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404DB58(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_224554604(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404DCC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404DD28(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22404DDD0(a2);
      break;
    case 1:
      sub_22404DF8C(a2);
      break;
    case 2:
      sub_22404E158(a2);
      break;
    case 3:
      sub_22404E328(a2);
      break;
    case 5:
      sub_22404E4F8(a2);
      break;
    case 6:
      sub_22404E6B4(a2);
      break;
    case 7:
      sub_22404E880(a2);
      break;
    case 8:
      sub_22404EA50(a2);
      break;
    case 11:
      sub_22404EC20(a2);
      break;
    case 12:
      sub_22404EDF0(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22404DDD0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553CF0(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404DF2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404DF8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553E94(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404E0F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404E158(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224554038(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404E2C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404E328(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245543E8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404E498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404E4F8(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553C38(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22404E654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404E6B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553DDC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404E820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404E880(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224553F80(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404E9F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404EA50(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245542F8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404EBC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404EC20(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_2245544CC(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404ED90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404EDF0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_224554604(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22404EF60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404EFC0(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  if (a3 < 2)
  {
    sub_22404F0E4((uint64_t)&v11, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "value_type";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v11 = a2;
    sub_224036208((uint64_t *)a1, &v11);
    v6 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "size";
    *(_QWORD *)(a1 + 96) = 4;
    if (!v6)
      *(_BYTE *)(a1 + 104) = 1;
    v7 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    v11 = 0;
    sub_22451C444(v7, &v11);
    *((_QWORD *)a2 + 1) = v11;
    v8 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "points2";
    *(_QWORD *)(a1 + 96) = 7;
    if (!v8)
      *(_BYTE *)(a1 + 104) = 1;
    sub_224544138(a1);
    sub_22404F2F8(*a2, (uint64_t)a2, a1);
    v9 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v9 - 8);
    v10 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(v10 - 8);
    *(_QWORD *)(a1 + 48) = v9 - 8;
    *(_QWORD *)(a1 + 72) = v10 - 8;
  }
}

void sub_22404F0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned __int8 v22[8];
  void *v23;
  __int128 v24;
  void *__p;
  void *v26;
  uint64_t v27;
  __int128 v28;

  v22[0] = 7;
  v23 = 0;
  __p = 0;
  v26 = 0;
  v27 = 0;
  sub_2245114E4((uint64_t)&__p, &v28);
  v24 = v28;
  if (__p)
  {
    v26 = __p;
    operator delete(__p);
  }
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  __p = v22;
  sub_224036208((uint64_t *)a2, (_BYTE **)&__p);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  __p = 0;
  sub_22451C444(v7, &__p);
  v23 = __p;
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "points2";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  sub_224050AC0(v22[0], (uint64_t)v22, a2);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
  v11 = v22[0];
  v12 = v23;
  v13 = v24;
  if (*((_QWORD *)&v24 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_BYTE *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = v13;
  v16 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v13 + 1);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
  if (*((_QWORD *)&v24 + 1))
  {
    v20 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
}

void sub_22404F2C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404F2E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22404F2F8(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22404F420(v3);
      break;
    case 1:
      sub_22404F64C(v3);
      break;
    case 2:
      sub_22404F884(v3);
      break;
    case 3:
      sub_22404FAC0(v3);
      break;
    case 5:
      sub_22404FD40(v3);
      break;
    case 6:
      sub_22404FF6C(v3);
      break;
    case 7:
      sub_2240501A4(v3);
      break;
    case 8:
      sub_2240503E0(v3);
      break;
    case 11:
      sub_224050660(v3);
      break;
    case 12:
      sub_224050890(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22404F420(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544508(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_22404F5E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404F64C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_223257BE4();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544C94(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404F820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404F884(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544E0C(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22404FA5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404FAC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224546D08(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22404FCC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404FD40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544AB4(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_22404FF08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22404FF6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_2240336DC();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544BA4(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224050140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240501A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22352449C();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544D50(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22405037C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240503E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_22454664C(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_2240505E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224050660(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v15 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545240(v6, (float *)&v4[v3]);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22405082C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224050890(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_22316E078();
    __p = operator new(16 * v2);
    v15 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545370(v6, (double *)&v4[v3]);
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224050A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224050AC0(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_224050BE8(v3);
      break;
    case 1:
      sub_224050E14(v3);
      break;
    case 2:
      sub_22405104C(v3);
      break;
    case 3:
      sub_224051288(v3);
      break;
    case 5:
      sub_224051508(v3);
      break;
    case 6:
      sub_224051734(v3);
      break;
    case 7:
      sub_22405196C(v3);
      break;
    case 8:
      sub_224051BA8(v3);
      break;
    case 11:
      sub_224051E28(v3);
      break;
    case 12:
      sub_224052058(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224050BE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544508(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224050DB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224050E14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_223257BE4();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544C94(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224050FE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405104C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544E0C(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224051224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224051288(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224546D08(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22405148C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224051508(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 2 * v2);
    v16 = v5;
  }
  if (v2)
  {
    v6 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 2;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544AB4(v8, (uint64_t)&v18);
      v6 += 2;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if ((*(_BYTE *)(v18 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_2240516D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224051734(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (2 * v2 < 0)
      sub_2240336DC();
    __p = operator new(4 * v2);
    v14 = (char *)__p + 4 * v2;
    bzero(__p, 4 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544BA4(v5, (uint64_t)&v15);
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224051908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405196C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22352449C();
    __p = operator new(8 * v2);
    v14 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v13 = v14;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 2;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544D50(v5, (uint64_t)&v15);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if ((*(_BYTE *)(v15 + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224051B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224051BA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(16 * v2);
    v16 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v15 = v16;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_22454664C(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if ((v17[56] & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_224051DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224051E28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 62)
      sub_22316E078();
    __p = operator new(8 * v2);
    v15 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545240(v6, (float *)&v4[v3]);
      v3 += 8;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224051FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224052058(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((unint64_t)(2 * v2) >> 61)
      sub_22316E078();
    __p = operator new(16 * v2);
    v15 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v14 = v15;
  }
  if (v2)
  {
    v3 = 0;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545370(v6, (double *)&v4[v3]);
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224052224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224052288(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  char v8;
  char v9;
  __int128 v10;
  void *__p;
  uint64_t v12;
  __int128 *v13;

  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  v5 = __p;
  if (__p >= 2)
    v6 = 2;
  else
    v6 = __p;
  if (v6 < 2)
  {
    sub_2240523F4((uint64_t)&__p, a2, (uint64_t)a3);
    if (v5 < 2)
      return;
  }
  else
  {
    LOBYTE(__p) = 0;
    sub_22454FFAC(a2, &__p);
    *a3 = __p;
    sub_224550D98(a2, (_QWORD *)a3 + 1);
    v10 = xmmword_24EC66DB8;
    v7 = *a3;
    __p = a3;
    v12 = a2;
    v13 = &v10;
    sub_224052588(v7, &__p);
    if (v5 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (SHIBYTE(v13) < 0)
      {
        if (v12 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_21:
          v9 = 0;
          if (SHIBYTE(v13) < 0)
            goto LABEL_24;
          goto LABEL_10;
        }
      }
      else if (SHIBYTE(v13) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_21;
      }
      v9 = 1;
      if (SHIBYTE(v13) < 0)
LABEL_24:
        operator delete(__p);
LABEL_10:
      if (*(_BYTE *)(a2 + 131))
        v8 = 0;
      else
        v8 = v9;
    }
    while ((v8 & 1) != 0);
  }
}

void sub_2240523F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  void *__p;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;

  v16 = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245114E4((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = (uint64_t)__p;
    operator delete(__p);
  }
  LOBYTE(__p) = 0;
  sub_22454FFAC(a2, &__p);
  v16 = __p;
  sub_224550D98(a2, &v17);
  v22 = xmmword_24EC66DB8;
  __p = &v16;
  v20 = a2;
  v21 = &v22;
  sub_2240537F8(v16, &__p);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_224052558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224052574(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224052588(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_224052630(a2);
      break;
    case 1:
      sub_2240527E8(a2);
      break;
    case 2:
      sub_2240529B0(a2);
      break;
    case 3:
      sub_224052B7C(a2);
      break;
    case 5:
      sub_224052D48(a2);
      break;
    case 6:
      sub_224052F00(a2);
      break;
    case 7:
      sub_2240530C8(a2);
      break;
    case 8:
      sub_224053294(a2);
      break;
    case 11:
      sub_224053460(a2);
      break;
    case 12:
      sub_22405362C(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224052630(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FFAC(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224052788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240527E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_224550448(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224052950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240529B0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_2245508F0(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224052B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224052B7C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550D98(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224052CE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224052D48(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FD64(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224052EA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224052F00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2245501F4(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240530C8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_22455069C(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224053294(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550B44(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224053460(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_224551268(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240535CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405362C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_2245514BC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240537F8(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240538A0(a2);
      break;
    case 1:
      sub_224053A58(a2);
      break;
    case 2:
      sub_224053C20(a2);
      break;
    case 3:
      sub_224053DEC(a2);
      break;
    case 5:
      sub_224053FB8(a2);
      break;
    case 6:
      sub_224054170(a2);
      break;
    case 7:
      sub_224054338(a2);
      break;
    case 8:
      sub_224054504(a2);
      break;
    case 11:
      sub_2240546D0(a2);
      break;
    case 12:
      sub_22405489C(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240538A0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FFAC(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240539F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224053A58(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_224550448(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224053C20(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_2245508F0(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224053DEC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550D98(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224053F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224053FB8(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FD64(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224054110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224054170(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2245501F4(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240542D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224054338(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_22455069C(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240544A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224054504(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550B44(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224054670(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240546D0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_224551268(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405483C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405489C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_2245514BC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224054A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224054A68(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_224054B5C((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224054CBC(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224054B48(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224054B5C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16[8];
  uint64_t v17;
  __int128 v18;
  void *__p;
  void *v20;
  uint64_t v21;
  __int128 v22;

  v16[0] = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245114E4((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  sub_2240563D4(a2, (uint64_t)v16);
  v5 = v16[0];
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_224054C8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224054CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224054CBC(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24EC66DB8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_224054DBC(v5, v10);
}

void sub_224054D94(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224054DA8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224054DBC(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_224054E64(a2);
      break;
    case 1:
      sub_224055080(a2);
      break;
    case 2:
      sub_2240552A4(a2);
      break;
    case 3:
      sub_2240554CC(a2);
      break;
    case 5:
      sub_2240556F4(a2);
      break;
    case 6:
      sub_224055910(a2);
      break;
    case 7:
      sub_224055B34(a2);
      break;
    case 8:
      sub_224055D5C(a2);
      break;
    case 11:
      sub_224055F84(a2);
      break;
    case 12:
      sub_2240561AC(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224054E64(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450EEF0(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224055010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224055080(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F234(v23, 1, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224055234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240552A4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F57C(v23, 2, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405545C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240554CC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F8C4(v23, 3, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224055684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240556F4(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450ED50(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240558A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224055910(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F090(v23, 6, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224055AC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224055B34(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F3D8(v23, 7, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224055CEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224055D5C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F720(v23, 8, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224055F14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224055F84(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FA68(v23, 11, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405613C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240561AC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FC0C(v23, 12, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224056364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240563D4(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24EC66DB8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_2240564D4(v5, v10);
}

void sub_2240564AC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240564C0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240564D4(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22405657C(a2);
      break;
    case 1:
      sub_224056798(a2);
      break;
    case 2:
      sub_2240569BC(a2);
      break;
    case 3:
      sub_224056BE4(a2);
      break;
    case 5:
      sub_224056E0C(a2);
      break;
    case 6:
      sub_224057028(a2);
      break;
    case 7:
      sub_22405724C(a2);
      break;
    case 8:
      sub_224057474(a2);
      break;
    case 11:
      sub_22405769C(a2);
      break;
    case 12:
      sub_2240578C4(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405657C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450EEF0(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224056728(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224056798(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F234(v23, 1, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405694C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240569BC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F57C(v23, 2, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224056B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224056BE4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F8C4(v23, 3, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224056D9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224056E0C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450ED50(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224056FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224057028(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F090(v23, 6, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240571DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405724C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F3D8(v23, 7, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224057404(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224057474(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450F720(v23, 8, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405762C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405769C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FA68(v23, 11, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224057854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240578C4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_22450FC0C(v23, 12, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224057A7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224057AEC(int *a1, _BYTE *a2, _BYTE *a3)
{
  int v6;
  _BYTE *v7[3];
  __int128 v8;

  LODWORD(v7[0]) = 2;
  (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v7);
  if (*a1 < 1)
  {
    if (LODWORD(v7[0]) < 2)
    {
      sub_2240580EC((uint64_t)v7, a2, (uint64_t)a3);
    }
    else
    {
      v7[0] = a3;
      sub_223BDEF78(a2, v7);
      (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
      v8 = xmmword_24EC66DB8;
      v6 = *a3;
      v7[0] = a3;
      v7[1] = a2;
      v7[2] = &v8;
      sub_224058284(v6, v7);
    }
  }
  else
  {
    sub_224057BE8(a1, a2, a3, v7[0]);
  }
}

void sub_224057BE8(int *a1, _BYTE *a2, _BYTE *a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  __int128 *v13;
  _BYTE *v14[3];
  __int128 v15;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    LODWORD(v14[0]) = 2;
    (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v14);
    if (LODWORD(v14[0]) >= 3)
    {
      v12 = v14[0];
      v13 = sub_224057D3C();
      sub_22455C3A8((std::string *)v13, v12, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 >= 1)
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
    goto LABEL_13;
  }
LABEL_8:
  if (a4 >= 2)
    v10 = 2;
  else
    v10 = a4;
  if (v10 <= 1)
  {
    sub_2240580EC((uint64_t)v14, a2, (uint64_t)a3);
    return;
  }
  v9 = 0;
LABEL_13:
  v14[0] = a3;
  sub_223BDEF78(a2, v14);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v15 = xmmword_24EC66DB8;
  v11 = *a3;
  v14[0] = a3;
  v14[1] = a2;
  v14[2] = &v15;
  sub_224058284(v11, v14);
  if (v9)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_224057D3C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FCD0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FCD0))
    return &xmmword_25578FCB8;
  v2 = sub_224057E18();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578FCB8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578FCC8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578FCB8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FCB8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FCD0);
  return &xmmword_25578FCB8;
}

void sub_224057E00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FCD0);
  _Unwind_Resume(a1);
}

std::string *sub_224057E18()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FCF0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FCF0))
    return &stru_25578FCD8;
  sub_224057F08((uint64_t)__p);
  sub_2232A0AA8((char *)__p, &stru_25578FCD8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FCD8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FCF0);
  return &stru_25578FCD8;
}

void sub_224057EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578FCF0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578FCF0);
  _Unwind_Resume(a1);
}

void sub_224057F08(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FD10);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FD10))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::PointsSample<2>]", qword_25578FCF8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FCF8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FD10);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578FD30);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578FD30))
  {
    v5 = sub_2231A38CC(qword_25578FCF8, "<", 0);
    sub_2231A37C8(qword_25578FCF8, 0, v5, qword_25578FD18);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FD18, &dword_22314D000);
    __cxa_guard_release(&qword_25578FD30);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578FD50);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578FD50))
  {
    sub_224573040((uint64_t)qword_25578FD18, (uint64_t)&xmmword_25578FD38);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FD38, &dword_22314D000);
    __cxa_guard_release(&qword_25578FD50);
  }
  if (byte_25578FD4F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578FD38, *((unint64_t *)&xmmword_25578FD38 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578FD38;
    *(_QWORD *)(a1 + 16) = unk_25578FD48;
  }
}

void sub_2240580A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FD50);
  _Unwind_Resume(a1);
}

void sub_2240580BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FD30);
  _Unwind_Resume(a1);
}

void sub_2240580D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FD10);
  _Unwind_Resume(a1);
}

void sub_2240580EC(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  void *__p;
  void *v20;
  __int128 *v21;
  __int128 v22;

  v16 = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245114E4((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  __p = &v16;
  sub_223BDEF78(a2, (_BYTE **)&__p);
  (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 120))(a2, &v17);
  v22 = xmmword_24EC66DB8;
  __p = &v16;
  v20 = a2;
  v21 = &v22;
  sub_22405944C(v16, &__p);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_224058254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058270(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224058284(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22405832C(a2);
      break;
    case 1:
      sub_2240584D0(a2);
      break;
    case 2:
      sub_224058688(a2);
      break;
    case 3:
      sub_224058844(a2);
      break;
    case 5:
      sub_224058A00(a2);
      break;
    case 6:
      sub_224058BA4(a2);
      break;
    case 7:
      sub_224058D5C(a2);
      break;
    case 8:
      sub_224058F18(a2);
      break;
    case 11:
      sub_2240590D4(a2);
      break;
    case 12:
      sub_224059290(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405832C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450EEF0(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224058470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240584D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224058628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058688(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240587E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058844(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240589A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058A00(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450ED50(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224058B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058BA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224058CFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058D5C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224058EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224058F18(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224059074(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240590D4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224059230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059290(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240593EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405944C(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_2240594F4(a2);
      break;
    case 1:
      sub_224059698(a2);
      break;
    case 2:
      sub_224059850(a2);
      break;
    case 3:
      sub_224059A0C(a2);
      break;
    case 5:
      sub_224059BC8(a2);
      break;
    case 6:
      sub_224059D6C(a2);
      break;
    case 7:
      sub_224059F24(a2);
      break;
    case 8:
      sub_22405A0E0(a2);
      break;
    case 11:
      sub_22405A29C(a2);
      break;
    case 12:
      sub_22405A458(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240594F4(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_22316E078();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450EEF0(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224059638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059698(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_223257BE4();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240597F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059850(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240599AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059A0C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223323BA8();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224059B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059BC8(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_223662A04();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450ED50(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224059D0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059D6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 < 0)
      sub_2240336DC();
    v4 = 4 * v2;
    v5 = (char *)operator new(4 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224059EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224059F24(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22352449C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405A080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405A0E0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_223FCCF04();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405A23C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405A29C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 62)
      sub_22316E078();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405A3F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405A458(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 2 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (2 * v2)
  {
    if (v3 >> 61)
      sub_22316E078();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 1) != 0
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22405A5B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22405A614@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC68088;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(v4 + 72) = 1;
  }
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 176) = v7;
    *(_BYTE *)(v4 + 192) = 1;
  }
  *(_BYTE *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    *(_OWORD *)(v4 + 208) = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(v4 + 224) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *(_BYTE *)(v4 + 232) = 1;
  }
  *(_QWORD *)v4 = &off_24EC68008;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_22405A7AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_22405A7C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68088;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22405A840(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68088;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22405A8B8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_22405A8C0(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24EC6A3F8, (const struct __class_type_info *)&unk_24EC68048, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_224510F44(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_22405A968(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_22405BC4C();
  sub_22405AA1C(a1);
  sub_2231AC984(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_22405AA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22405AA1C(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FED0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FED0))
  {
    v4 = sub_22405B89C();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_2231AD150((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_223197FA4(&xmmword_25578FEB8, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25578FEC8 = *(_QWORD *)(v9 - 8);
      xmmword_25578FEB8 = v7;
    }
    sub_22319BB48(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FEB8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FED0);
  }
  return sub_22405BF14(&xmmword_25578FEB8, (uint64_t)"{", (_BYTE **)(a1 + 8), (uint64_t)"}");
}

void sub_22405AB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_22319BB48(&a9);
  __cxa_guard_abort(&qword_25578FED0);
  _Unwind_Resume(a1);
}

void sub_22405AB4C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FED0);
  _Unwind_Resume(a1);
}

void sub_22405AB64(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 4;
}

void sub_22405AB90(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_22413ADAC(lpsrc, 4, a2);
}

_QWORD *sub_22405ABC8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68088;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22405AC40(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68088;
  sub_2231AD66C((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22405ACB8(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_22405B338();
  return sub_22405AE0C(v2, (uint64_t)"{", (_BYTE **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_22405AD10(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_22405B038((uint64_t)v5, (uint64_t)v2, (_BYTE **)(a1 + 8));
  if (v3 == -1)
    sub_22316DD70();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66D10[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66CF8[v3])(v5, v2);
  return result;
}

void sub_22405ADA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24EC66CF8[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_22405ADE0(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_22405AE0C(__int128 *a1, uint64_t a2, _BYTE **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_2231ABB0C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_22405B038((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  sub_2231AB90C((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v16])(&p_dst, &__dst);
  return result;
}

void sub_22405AFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405AFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405AFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405AFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405AFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405B010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405B024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405B038(uint64_t a1, uint64_t a2, _BYTE **a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD v23[5];
  _QWORD *v24;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v24 = (_QWORD *)v5;
  v6 = sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_22454B4D0(v6, v23);
  sub_2231813E8(v7, (uint64_t)",", 1);
  v23[0] = v5 + 16;
  sub_224512E54(**a3, (uint64_t)a3, (uint64_t)v23);
  sub_2231813E8((_QWORD *)(v5 + 16), (uint64_t)"}", 1);
  v8 = *(_DWORD *)(v5 + 120);
  if ((v8 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v5 + 112);
    v12 = *(_QWORD *)(v5 + 72);
    if (v11 < v12)
    {
      *(_QWORD *)(v5 + 112) = v12;
      v11 = v12;
    }
    v13 = *(const void **)(v5 + 64);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = *(const void **)(v5 + 40);
    v9 = *(_QWORD *)(v5 + 56) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v16 + 16);
    MEMORY[0x227684CE8](v16, 0x10B2C40EED050F3);
  }
  v23[0] = a2;
  v23[1] = __dst;
  v23[2] = a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_22316DD70();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_22405B2E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_22405B308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405B324(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_22456E764((uint64_t *)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_22405B338()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FD70);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FD70))
    return &xmmword_25578FD58;
  v2 = sub_22405B414();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578FD58, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578FD68 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578FD58 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FD58, &dword_22314D000);
  __cxa_guard_release(&qword_25578FD70);
  return &xmmword_25578FD58;
}

void sub_22405B3FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FD70);
  _Unwind_Resume(a1);
}

std::string *sub_22405B414()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FD90);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FD90))
    return &stru_25578FD78;
  sub_22405B6B8((uint64_t)__p);
  sub_22405B504((char *)__p, &stru_25578FD78);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FD78, &dword_22314D000);
  __cxa_guard_release(&qword_25578FD90);
  return &stru_25578FD78;
}

void sub_22405B4C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578FD90);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578FD90);
  _Unwind_Resume(a1);
}

void sub_22405B504(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_22405B89C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_2231AC788();
  if (*((char *)v6 + 23) < 0)
  {
    sub_223197FA4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 2uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_22405B668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_22319BB48((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22405B6B8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FE50);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FE50))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Points<3>>]", qword_25578FE38);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FE38, &dword_22314D000);
    __cxa_guard_release(&qword_25578FE50);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578FE70);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578FE70))
  {
    v5 = sub_2231A38CC(qword_25578FE38, "<", 0);
    sub_2231A37C8(qword_25578FE38, 0, v5, qword_25578FE58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FE58, &dword_22314D000);
    __cxa_guard_release(&qword_25578FE70);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578FE90);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578FE90))
  {
    sub_224573040((uint64_t)qword_25578FE58, (uint64_t)&xmmword_25578FE78);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FE78, &dword_22314D000);
    __cxa_guard_release(&qword_25578FE90);
  }
  if (byte_25578FE8F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578FE78, *((unint64_t *)&xmmword_25578FE78 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578FE78;
    *(_QWORD *)(a1 + 16) = unk_25578FE88;
  }
}

void sub_22405B854(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FE90);
  _Unwind_Resume(a1);
}

void sub_22405B86C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FE70);
  _Unwind_Resume(a1);
}

void sub_22405B884(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FE50);
  _Unwind_Resume(a1);
}

__int128 *sub_22405B89C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FDB0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FDB0))
    return &xmmword_25578FD98;
  v2 = sub_22405B978();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578FD98, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578FDA8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578FD98 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FD98, &dword_22314D000);
  __cxa_guard_release(&qword_25578FDB0);
  return &xmmword_25578FD98;
}

void sub_22405B960(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FDB0);
  _Unwind_Resume(a1);
}

std::string *sub_22405B978()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FDD0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FDD0))
    return &stru_25578FDB8;
  sub_22405BA68((uint64_t)__p);
  sub_2240333EC((char *)__p, &stru_25578FDB8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FDB8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FDD0);
  return &stru_25578FDB8;
}

void sub_22405BA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578FDD0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578FDD0);
  _Unwind_Resume(a1);
}

void sub_22405BA68(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FDF0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FDF0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Points<3>]", qword_25578FDD8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FDD8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FDF0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578FE10);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578FE10))
  {
    v5 = sub_2231A38CC(qword_25578FDD8, "<", 0);
    sub_2231A37C8(qword_25578FDD8, 0, v5, qword_25578FDF8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FDF8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FE10);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578FE30);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578FE30))
  {
    sub_224573040((uint64_t)qword_25578FDF8, (uint64_t)&xmmword_25578FE18);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FE18, &dword_22314D000);
    __cxa_guard_release(&qword_25578FE30);
  }
  if (byte_25578FE2F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578FE18, *((unint64_t *)&xmmword_25578FE18 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578FE18;
    *(_QWORD *)(a1 + 16) = unk_25578FE28;
  }
}

void sub_22405BC04(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FE30);
  _Unwind_Resume(a1);
}

void sub_22405BC1C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FE10);
  _Unwind_Resume(a1);
}

void sub_22405BC34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FDF0);
  _Unwind_Resume(a1);
}

std::string *sub_22405BC4C()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25578FEB0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25578FEB0))
  {
    sub_223174DE4(v9, "viz::PackageData");
    v2 = sub_22405B89C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_223BED35C();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_22319BD1C(v8, (uint64_t)__dst, 4uLL);
    sub_2245730F4((char *)v9, (uint64_t *)v8, &stru_25578FE98, v6, v7);
    sub_22319BB48(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FE98, &dword_22314D000);
        __cxa_guard_release(&qword_25578FEB0);
        return &stru_25578FE98;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_25578FE98;
}

void sub_22405BE30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_22319BB48(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_25578FEB0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_25578FEB0);
  _Unwind_Resume(a1);
}

uint64_t sub_22405BF14(__int128 *a1, uint64_t a2, _BYTE **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_2231ABB0C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_22405B038((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v11])(&p_dst, &__dst);
  return result;
}

void sub_22405C054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405C06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405C080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405C094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405C0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405C0BC(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  void **v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_224033EEC(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = (void **)*((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453FEA0(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_22345337C(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "points3";
    *v11 = 7;
    if (!v16)
      *v10 = 1;
  }
  sub_22454024C(a1);
  sub_22405C31C(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_22405C2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_22345337C(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22405C308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22405C31C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v5)
        v6 = 1;
      else
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v6)
      {
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
        {
          if (!v5)
          {
LABEL_86:
            v36 = 0;
            while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              v47 = 3;
              v48 = v36;
              sub_2245403C8(a3, (size_t *)&v47);
              v36 += 3;
              if (!--v7)
                return;
            }
            goto LABEL_144;
          }
          do
          {
            v47 = 3;
            v48 = v5;
            sub_2245403C8(a3, (size_t *)&v47);
            v5 += 3;
            --v7;
          }
          while (v7);
        }
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
          goto LABEL_86;
      }
      return;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v8)
        v9 = 0;
      else
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v9)
      {
        v10 = *(_QWORD *)(a2 + 8);
        if (!v10)
          return;
        if (v8)
        {
          do
          {
            v47 = 3;
            v48 = v8;
            sub_2245429C8(a3, (uint64_t)&v47);
            v8 += 6;
            --v10;
          }
          while (v10);
          return;
        }
        goto LABEL_92;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v10 = *(_QWORD *)(a2 + 8);
      if (v10)
      {
LABEL_92:
        v37 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v37;
          sub_2245429C8(a3, (uint64_t)&v47);
          v37 += 6;
          if (!--v10)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v11)
        v12 = 0;
      else
        v12 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v12)
      {
        v13 = *(_QWORD *)(a2 + 8);
        if (!v13)
          return;
        if (v11)
        {
          do
          {
            v47 = 3;
            v48 = v11;
            sub_224542C38(a3, (uint64_t)&v47);
            v11 += 12;
            --v13;
          }
          while (v13);
          return;
        }
        goto LABEL_98;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (v13)
      {
LABEL_98:
        v38 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v38;
          sub_224542C38(a3, (uint64_t)&v47);
          v38 += 12;
          if (!--v13)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v14 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v14)
        v15 = 0;
      else
        v15 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v15)
      {
        v16 = *(_QWORD *)(a2 + 8);
        if (!v16)
          return;
        if (v14)
        {
          do
          {
            v47 = 3;
            v48 = v14;
            sub_224543118(a3, (uint64_t)&v47);
            v14 += 24;
            --v16;
          }
          while (v16);
          return;
        }
        goto LABEL_104;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v16 = *(_QWORD *)(a2 + 8);
      if (v16)
      {
LABEL_104:
        v39 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v39;
          sub_224543118(a3, (uint64_t)&v47);
          v39 += 24;
          if (!--v16)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v17)
        v18 = 1;
      else
        v18 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v18)
      {
        v19 = *(_QWORD *)(a2 + 8);
        if (!v19)
          return;
        if (!v17)
          goto LABEL_110;
        do
        {
          v47 = 3;
          v48 = v17;
          sub_224542758(a3, (size_t *)&v47);
          v17 += 3;
          --v19;
        }
        while (v19);
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v19 = *(_QWORD *)(a2 + 8);
        if (v19)
        {
LABEL_110:
          v41 = 0;
          while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v47 = 3;
            v48 = v41;
            sub_224542758(a3, (size_t *)&v47);
            v41 += 3;
            if (!--v19)
              return;
          }
          goto LABEL_144;
        }
      }
      return;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v20)
        v21 = 0;
      else
        v21 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v21)
      {
        v22 = *(_QWORD *)(a2 + 8);
        if (!v22)
          return;
        if (v20)
        {
          do
          {
            v47 = 3;
            v48 = v20;
            sub_224542890(a3, (uint64_t)&v47);
            v20 += 6;
            --v22;
          }
          while (v22);
          return;
        }
        goto LABEL_116;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
      {
LABEL_116:
        v42 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v42;
          sub_224542890(a3, (uint64_t)&v47);
          v42 += 6;
          if (!--v22)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v23 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v23)
        v24 = 0;
      else
        v24 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v24)
      {
        v25 = *(_QWORD *)(a2 + 8);
        if (!v25)
          return;
        if (v23)
        {
          do
          {
            v47 = 3;
            v48 = v23;
            sub_224542B00(a3, (uint64_t)&v47);
            v23 += 12;
            --v25;
          }
          while (v25);
          return;
        }
        goto LABEL_122;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v25 = *(_QWORD *)(a2 + 8);
      if (v25)
      {
LABEL_122:
        v43 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v43;
          sub_224542B00(a3, (uint64_t)&v47);
          v43 += 12;
          if (!--v25)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v26 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v26)
        v27 = 0;
      else
        v27 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v27)
      {
        v28 = *(_QWORD *)(a2 + 8);
        if (!v28)
          return;
        if (v26)
        {
          do
          {
            v47 = 3;
            v48 = v26;
            sub_224542FE0(a3, (uint64_t)&v47);
            v26 += 24;
            --v28;
          }
          while (v28);
          return;
        }
        goto LABEL_128;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v28 = *(_QWORD *)(a2 + 8);
      if (v28)
      {
LABEL_128:
        v44 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v44;
          sub_224542FE0(a3, (uint64_t)&v47);
          v44 += 24;
          if (!--v28)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v29 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v29)
        v30 = 0;
      else
        v30 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v30)
      {
        v31 = *(_QWORD *)(a2 + 8);
        if (!v31)
          return;
        if (v29)
        {
          do
          {
            v47 = 3;
            v48 = v29;
            sub_2245436F8(a3, (float **)&v47);
            v29 += 12;
            --v31;
          }
          while (v31);
          return;
        }
        goto LABEL_134;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v31 = *(_QWORD *)(a2 + 8);
      if (v31)
      {
LABEL_134:
        v45 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v45;
          sub_2245436F8(a3, (float **)&v47);
          v45 += 12;
          if (!--v31)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v32 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v32)
        v33 = 0;
      else
        v33 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v33)
      {
        v34 = *(_QWORD *)(a2 + 8);
        if (!v34)
          return;
        if (v32)
        {
          do
          {
            v47 = 3;
            v48 = v32;
            sub_224543B18(a3, &v47);
            v32 += 24;
            --v34;
          }
          while (v34);
          return;
        }
LABEL_140:
        v46 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v46;
          sub_224543B18(a3, &v47);
          v46 += 24;
          if (!--v34)
            return;
        }
LABEL_144:
        abort();
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v34 = *(_QWORD *)(a2 + 8);
      if (v34)
        goto LABEL_140;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405CD34(uint64_t *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14[3];
  __int128 v15;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[3];
  if (*(_BYTE *)(v6 + 40))
  {
    v14[0] = (uint64_t *)(v6 + 16);
    sub_224559C04(v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14[0]) = -52;
      BYTE1(v14[0]) = v11;
    }
    else
    {
      LOBYTE(v14[0]) = v11;
    }
    std::ostream::write();
  }
  v7 = a1[3];
  if (*(_BYTE *)(v7 + 40))
  {
    v14[0] = (uint64_t *)(v7 + 16);
    sub_22455B1CC(v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_22455B4D4();
  }
  v15 = xmmword_24EC66DC8;
  v14[0] = (uint64_t *)&v11;
  v14[1] = a1;
  v14[2] = (uint64_t *)&v15;
  sub_22405CE98(v11, v14);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_22405CE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22405CE98(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  BOOL v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(char **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v9 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        for (*(_QWORD *)&v91 = v9 + 16; v7; --v7)
          result = (uint64_t)sub_224559C04((uint64_t **)&v91, *v6++);
      }
      else
      {
        for (; v7; --v7)
        {
          v78 = *v6;
          if (v78 < 0)
          {
            LOBYTE(v91) = -52;
            BYTE1(v91) = v78;
          }
          else
          {
            LOBYTE(v91) = *v6;
          }
          result = std::ostream::write();
          ++v6;
        }
      }
      break;
    case 1:
      v10 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v11 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v15 = a2[1];
      *(_QWORD *)&v91 = v13 >> 1;
      *((_QWORD *)&v91 + 1) = v12;
      result = sub_224553564(*(_QWORD *)(v15 + 24), &v91);
      break;
    case 2:
      v16 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(unsigned int **)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 4;
      if (v20)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v21 = v19 >> 2;
      v22 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)&v91 = v22 + 16;
        if (v19 >= 4)
        {
          v23 = 4 * v21;
          do
          {
            result = (uint64_t)sub_22455A7EC((uint64_t **)&v91, *v18++);
            v23 -= 4;
          }
          while (v23);
        }
      }
      else if (v19 >= 4)
      {
        v79 = v22 + 8;
        v80 = 4 * v21;
        do
        {
          result = sub_22455AA60((uint64_t)&v91, v79);
          ++v18;
          v80 -= 4;
        }
        while (v80);
      }
      break;
    case 3:
      v24 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(unint64_t **)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 8;
      if (v28)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v29 = v27 >> 3;
      v30 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v30 + 40))
      {
        *(_QWORD *)&v91 = v30 + 16;
        if (v27 >= 8)
        {
          v31 = 8 * v29;
          do
          {
            result = (uint64_t)sub_22455B1CC((uint64_t **)&v91, *v26++);
            v31 -= 8;
          }
          while (v31);
        }
      }
      else if (v27 >= 8)
      {
        v81 = 8 * v29;
        do
        {
          ++v26;
          result = sub_22455B4D4();
          v81 -= 8;
        }
        while (v81);
      }
      break;
    case 5:
      v32 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v33 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_BYTE **)(v33 + 48);
      if (v34)
        v36 = 1;
      else
        v36 = v35 == 0;
      if (!v36)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v37 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v37 + 40))
      {
        for (*(_QWORD *)&v91 = v37 + 16; v35; --v35)
          result = (uint64_t)sub_224559ABC((uint64_t **)&v91, (char)*v34++);
      }
      else
      {
        for (; v35; --v35)
        {
          v82 = (char)*v34;
          if (v82 > -33)
          {
            LOBYTE(v91) = *v34;
          }
          else
          {
            LOBYTE(v91) = -48;
            BYTE1(v91) = v82;
          }
          result = std::ostream::write();
          ++v34;
        }
      }
      break;
    case 6:
      v38 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(__int16 **)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 2;
      if (v42)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v43 = v41 >> 1;
      v44 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)&v91 = v44 + 16;
        if (v41 >= 2)
        {
          v45 = 2 * v43;
          do
          {
            result = (uint64_t)sub_224559D48((uint64_t **)&v91, *v40++);
            v45 -= 2;
          }
          while (v45);
        }
      }
      else if (v41 >= 2)
      {
        v83 = 2 * v43;
        do
        {
          ++v40;
          result = sub_22455A00C();
          v83 -= 2;
        }
        while (v83);
      }
      break;
    case 7:
      v46 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v47 = *(_QWORD *)(v46 + 16);
      v49 = *(_QWORD *)(v47 + 40);
      v48 = *(unsigned int **)(v47 + 48);
      if (v48)
        v50 = 0;
      else
        v50 = v49 >= 4;
      if (v50)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v51 = v49 >> 2;
      v52 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v52 + 40))
      {
        *(_QWORD *)&v91 = v52 + 16;
        if (v49 >= 4)
        {
          v53 = 4 * v51;
          do
          {
            result = (uint64_t)sub_22455A2D4((uint64_t **)&v91, *v48++);
            v53 -= 4;
          }
          while (v53);
        }
      }
      else if (v49 >= 4)
      {
        v84 = 4 * v51;
        do
        {
          ++v48;
          result = sub_22455A6F0();
          v84 -= 4;
        }
        while (v84);
      }
      break;
    case 8:
      v54 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v55 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unint64_t **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 8;
      if (v58)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 3;
      v60 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v91 = v60 + 16;
        if (v57 >= 8)
        {
          v61 = 8 * v59;
          do
          {
            result = (uint64_t)sub_22455AB50((uint64_t **)&v91, *v56++);
            v61 -= 8;
          }
          while (v61);
        }
      }
      else if (v57 >= 8)
      {
        v85 = 8 * v59;
        do
        {
          ++v56;
          result = sub_22455B08C();
          v85 -= 8;
        }
        while (v85);
      }
      break;
    case 11:
      v62 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v63 = *(_QWORD *)(v62 + 16);
      v65 = *(_QWORD *)(v63 + 40);
      v64 = *(unsigned int **)(v63 + 48);
      if (v64)
        v66 = 0;
      else
        v66 = v65 >= 4;
      if (v66)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v67 = v65 >> 2;
      v68 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v68 + 40))
      {
        *(_QWORD *)&v91 = v68 + 16;
        if (v65 >= 4)
        {
          v69 = 4 * v67;
          do
          {
            result = (uint64_t)sub_22455B5CC((uint64_t)&v90, (uint64_t **)&v91, v64++);
            v69 -= 4;
          }
          while (v69);
        }
      }
      else if (v65 >= 4)
      {
        v86 = 4 * v67;
        do
        {
          v87 = *v64;
          LOBYTE(v91) = -54;
          *(_DWORD *)((char *)&v91 + 1) = bswap32(v87);
          result = std::ostream::write();
          ++v64;
          v86 -= 4;
        }
        while (v86);
      }
      break;
    case 12:
      v70 = *a2;
      result = (uint64_t)sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v71 = *(_QWORD *)(v70 + 16);
      v73 = *(_QWORD *)(v71 + 40);
      v72 = *(unint64_t **)(v71 + 48);
      if (v72)
        v74 = 0;
      else
        v74 = v73 >= 8;
      if (v74)
      {
        result = sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v75 = v73 >> 3;
      v76 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v76 + 40))
      {
        *(_QWORD *)&v91 = v76 + 16;
        if (v73 >= 8)
        {
          v77 = 8 * v75;
          do
          {
            result = (uint64_t)sub_22455B6A8((uint64_t)&v90, (uint64_t **)&v91, v72++);
            v77 -= 8;
          }
          while (v77);
        }
      }
      else if (v73 >= 8)
      {
        v88 = 8 * v75;
        do
        {
          v89 = *v72;
          LOBYTE(v91) = -53;
          *(_QWORD *)((char *)&v91 + 1) = bswap64(v89);
          result = std::ostream::write();
          ++v72;
          v88 -= 8;
        }
        while (v88);
      }
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_22405D6F0(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  uint64_t v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_22403491C(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = *((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_22453F8B8(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_223454278(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "points3";
    *v11 = 7;
    if (!v16)
      *v10 = 1;
  }
  sub_22453FAE0(a1);
  sub_22405D950(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_22405D91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_223454278(v13, a13);
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22405D93C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22405D950(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  size_t v47;
  uint64_t v48;

  switch(a1)
  {
    case 0:
      sub_224510118((unsigned __int8 **)(a2 + 16), 0);
      v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v5)
        v6 = 1;
      else
        v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v6)
      {
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
        {
          if (!v5)
          {
LABEL_86:
            v36 = 0;
            while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
            {
              v47 = 3;
              v48 = v36;
              sub_22453FC5C(a3, &v47);
              v36 += 3;
              if (!--v7)
                return;
            }
            goto LABEL_144;
          }
          do
          {
            v47 = 3;
            v48 = v5;
            sub_22453FC5C(a3, &v47);
            v5 += 3;
            --v7;
          }
          while (v7);
        }
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v7 = *(_QWORD *)(a2 + 8);
        if (v7)
          goto LABEL_86;
      }
      return;
    case 1:
      sub_224510118((unsigned __int8 **)(a2 + 16), 1);
      v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v8)
        v9 = 0;
      else
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v9)
      {
        v10 = *(_QWORD *)(a2 + 8);
        if (!v10)
          return;
        if (v8)
        {
          do
          {
            v47 = 3;
            v48 = v8;
            sub_224540D48(a3, (uint64_t)&v47);
            v8 += 6;
            --v10;
          }
          while (v10);
          return;
        }
        goto LABEL_92;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v10 = *(_QWORD *)(a2 + 8);
      if (v10)
      {
LABEL_92:
        v37 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v37;
          sub_224540D48(a3, (uint64_t)&v47);
          v37 += 6;
          if (!--v10)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 2:
      sub_224510118((unsigned __int8 **)(a2 + 16), 2);
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v11)
        v12 = 0;
      else
        v12 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v12)
      {
        v13 = *(_QWORD *)(a2 + 8);
        if (!v13)
          return;
        if (v11)
        {
          do
          {
            v47 = 3;
            v48 = v11;
            sub_224540FB8(a3, (uint64_t)&v47);
            v11 += 12;
            --v13;
          }
          while (v13);
          return;
        }
        goto LABEL_98;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (v13)
      {
LABEL_98:
        v38 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v38;
          sub_224540FB8(a3, (uint64_t)&v47);
          v38 += 12;
          if (!--v13)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 3:
      sub_224510118((unsigned __int8 **)(a2 + 16), 3);
      v14 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v14)
        v15 = 0;
      else
        v15 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v15)
      {
        v16 = *(_QWORD *)(a2 + 8);
        if (!v16)
          return;
        if (v14)
        {
          do
          {
            v47 = 3;
            v48 = v14;
            sub_224541228(a3, (uint64_t)&v47);
            v14 += 24;
            --v16;
          }
          while (v16);
          return;
        }
        goto LABEL_104;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v16 = *(_QWORD *)(a2 + 8);
      if (v16)
      {
LABEL_104:
        v39 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v39;
          sub_224541228(a3, (uint64_t)&v47);
          v39 += 24;
          if (!--v16)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 5:
      sub_224510118((unsigned __int8 **)(a2 + 16), 5);
      v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v17)
        v18 = 1;
      else
        v18 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) == 0;
      if (v18)
      {
        v19 = *(_QWORD *)(a2 + 8);
        if (!v19)
          return;
        if (!v17)
          goto LABEL_110;
        do
        {
          v47 = 3;
          v48 = v17;
          sub_224540AD8(a3, &v47);
          v17 += 3;
          --v19;
        }
        while (v19);
      }
      else
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          goto LABEL_144;
        }
        v19 = *(_QWORD *)(a2 + 8);
        if (v19)
        {
LABEL_110:
          v41 = 0;
          while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
          {
            v47 = 3;
            v48 = v41;
            sub_224540AD8(a3, &v47);
            v41 += 3;
            if (!--v19)
              return;
          }
          goto LABEL_144;
        }
      }
      return;
    case 6:
      sub_224510118((unsigned __int8 **)(a2 + 16), 6);
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v20)
        v21 = 0;
      else
        v21 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 2uLL;
      if (!v21)
      {
        v22 = *(_QWORD *)(a2 + 8);
        if (!v22)
          return;
        if (v20)
        {
          do
          {
            v47 = 3;
            v48 = v20;
            sub_224540C10(a3, (uint64_t)&v47);
            v20 += 6;
            --v22;
          }
          while (v22);
          return;
        }
        goto LABEL_116;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v22 = *(_QWORD *)(a2 + 8);
      if (v22)
      {
LABEL_116:
        v42 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v42;
          sub_224540C10(a3, (uint64_t)&v47);
          v42 += 6;
          if (!--v22)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 7:
      sub_224510118((unsigned __int8 **)(a2 + 16), 7);
      v23 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v23)
        v24 = 0;
      else
        v24 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v24)
      {
        v25 = *(_QWORD *)(a2 + 8);
        if (!v25)
          return;
        if (v23)
        {
          do
          {
            v47 = 3;
            v48 = v23;
            sub_224540E80(a3, (uint64_t)&v47);
            v23 += 12;
            --v25;
          }
          while (v25);
          return;
        }
        goto LABEL_122;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v25 = *(_QWORD *)(a2 + 8);
      if (v25)
      {
LABEL_122:
        v43 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v43;
          sub_224540E80(a3, (uint64_t)&v47);
          v43 += 12;
          if (!--v25)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 8:
      sub_224510118((unsigned __int8 **)(a2 + 16), 8);
      v26 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v26)
        v27 = 0;
      else
        v27 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v27)
      {
        v28 = *(_QWORD *)(a2 + 8);
        if (!v28)
          return;
        if (v26)
        {
          do
          {
            v47 = 3;
            v48 = v26;
            sub_2245410F0(a3, (uint64_t)&v47);
            v26 += 24;
            --v28;
          }
          while (v28);
          return;
        }
        goto LABEL_128;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v28 = *(_QWORD *)(a2 + 8);
      if (v28)
      {
LABEL_128:
        v44 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v44;
          sub_2245410F0(a3, (uint64_t)&v47);
          v44 += 24;
          if (!--v28)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 11:
      sub_224510118((unsigned __int8 **)(a2 + 16), 11);
      v29 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v29)
        v30 = 0;
      else
        v30 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 4uLL;
      if (!v30)
      {
        v31 = *(_QWORD *)(a2 + 8);
        if (!v31)
          return;
        if (v29)
        {
          do
          {
            v47 = 3;
            v48 = v29;
            sub_224541808(a3, &v47);
            v29 += 12;
            --v31;
          }
          while (v31);
          return;
        }
        goto LABEL_134;
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v31 = *(_QWORD *)(a2 + 8);
      if (v31)
      {
LABEL_134:
        v45 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v45;
          sub_224541808(a3, &v47);
          v45 += 12;
          if (!--v31)
            return;
        }
        goto LABEL_144;
      }
      return;
    case 12:
      sub_224510118((unsigned __int8 **)(a2 + 16), 12);
      v32 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 48);
      if (v32)
        v33 = 0;
      else
        v33 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 40) >= 8uLL;
      if (!v33)
      {
        v34 = *(_QWORD *)(a2 + 8);
        if (!v34)
          return;
        if (v32)
        {
          do
          {
            v47 = 3;
            v48 = v32;
            sub_224541B78(a3, &v47);
            v32 += 24;
            --v34;
          }
          while (v34);
          return;
        }
LABEL_140:
        v46 = 0;
        while (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
          v47 = 3;
          v48 = v46;
          sub_224541B78(a3, &v47);
          v46 += 24;
          if (!--v34)
            return;
        }
LABEL_144:
        abort();
      }
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_144;
      }
      v34 = *(_QWORD *)(a2 + 8);
      if (v34)
        goto LABEL_140;
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405E368(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  _QWORD v13[3];
  __int128 v14;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(v13[0]) = v10;
  sub_22454F564(a1, (unsigned __int8 *)v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v13[0]) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v14 = xmmword_24EC66DC8;
  v13[0] = &v10;
  v13[1] = a1;
  v13[2] = &v14;
  sub_22405E488(v10, v13);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_22405E474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22405E488(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(unsigned __int8 **)(v4 + 48);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (v7)
      {
        if (!v6)
          return;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v54 = a2[1];
        do
        {
          sub_22454F564(v54, v5++);
          --v6;
        }
        while (v6);
        return;
      }
      goto LABEL_112;
    case 1:
      v8 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v9 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v55 = a2[1];
        v56 = *(_QWORD *)(v55 + 40);
        v57 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(v55 + 24);
            v89 = *(_BYTE *)(v55 + 32);
            sub_2231813E8(v58, (uint64_t)&v89, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(v55 + 40) + 1;
          *(_QWORD *)(v55 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_112;
    case 2:
      v13 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v14 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return;
        goto LABEL_74;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_74:
        v59 = a2[1];
        v60 = *(_QWORD *)(v59 + 40);
        v61 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v60)
          {
            v62 = *(_QWORD **)(v59 + 24);
            v90 = *(_BYTE *)(v59 + 32);
            sub_2231813E8(v62, (uint64_t)&v90, 1);
          }
          v15 += 4;
          std::ostream::operator<<();
          v60 = *(_QWORD *)(v59 + 40) + 1;
          *(_QWORD *)(v59 + 40) = v60;
          v61 -= 4;
        }
        while (v61);
        return;
      }
      goto LABEL_112;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
        v22 = 0;
      else
        v22 = v21 >= 8;
      if (!v22)
      {
        if (v21 < 8)
          return;
        goto LABEL_79;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_79:
        v63 = a2[1];
        v64 = *(_QWORD *)(v63 + 40);
        v65 = v21 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v64)
          {
            v66 = *(_QWORD **)(v63 + 24);
            v91 = *(_BYTE *)(v63 + 32);
            sub_2231813E8(v66, (uint64_t)&v91, 1);
          }
          v20 += 8;
          std::ostream::operator<<();
          v64 = *(_QWORD *)(v63 + 40) + 1;
          *(_QWORD *)(v63 + 40) = v64;
          v65 -= 8;
        }
        while (v65);
        return;
      }
      goto LABEL_112;
    case 5:
      v23 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v24 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v24 + 40);
      v25 = *(char **)(v24 + 48);
      if (v25)
        v27 = 1;
      else
        v27 = v26 == 0;
      if (v27)
      {
        if (!v26)
          return;
        goto LABEL_84;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_84:
        v68 = a2[1];
        do
        {
          sub_22454F380(v68, v25++);
          --v26;
        }
        while (v26);
        return;
      }
      goto LABEL_112;
    case 6:
      v28 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v29 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 2;
      if (!v32)
      {
        if (v31 < 2)
          return;
        goto LABEL_88;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_88:
        v69 = a2[1];
        v70 = *(_QWORD *)(v69 + 40);
        v71 = v31 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v70)
          {
            v72 = *(_QWORD **)(v69 + 24);
            v92 = *(_BYTE *)(v69 + 32);
            sub_2231813E8(v72, (uint64_t)&v92, 1);
          }
          v30 += 2;
          std::ostream::operator<<();
          v70 = *(_QWORD *)(v69 + 40) + 1;
          *(_QWORD *)(v69 + 40) = v70;
          v71 -= 2;
        }
        while (v71);
        return;
      }
      goto LABEL_112;
    case 7:
      v33 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v34 = *(_QWORD *)(v33 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 4;
      if (!v37)
      {
        if (v36 < 4)
          return;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v73 = a2[1];
        v74 = *(_QWORD *)(v73 + 40);
        v75 = v36 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v74)
          {
            v76 = *(_QWORD **)(v73 + 24);
            v93 = *(_BYTE *)(v73 + 32);
            sub_2231813E8(v76, (uint64_t)&v93, 1);
          }
          v35 += 4;
          std::ostream::operator<<();
          v74 = *(_QWORD *)(v73 + 40) + 1;
          *(_QWORD *)(v73 + 40) = v74;
          v75 -= 4;
        }
        while (v75);
        return;
      }
      goto LABEL_112;
    case 8:
      v38 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(_QWORD *)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (!v42)
      {
        if (v41 < 8)
          return;
        goto LABEL_98;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_98:
        v77 = a2[1];
        v78 = *(_QWORD *)(v77 + 40);
        v79 = v41 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v78)
          {
            v80 = *(_QWORD **)(v77 + 24);
            v94 = *(_BYTE *)(v77 + 32);
            sub_2231813E8(v80, (uint64_t)&v94, 1);
          }
          v40 += 8;
          std::ostream::operator<<();
          v78 = *(_QWORD *)(v77 + 40) + 1;
          *(_QWORD *)(v77 + 40) = v78;
          v79 -= 8;
        }
        while (v79);
        return;
      }
      goto LABEL_112;
    case 11:
      v43 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v44 = *(_QWORD *)(v43 + 16);
      v46 = *(_QWORD *)(v44 + 40);
      v45 = *(_QWORD *)(v44 + 48);
      if (v45)
        v47 = 0;
      else
        v47 = v46 >= 4;
      if (!v47)
      {
        if (v46 < 4)
          return;
        goto LABEL_103;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_103:
        v81 = a2[1];
        v82 = *(_QWORD *)(v81 + 40);
        v83 = v46 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v82)
          {
            v84 = *(_QWORD **)(v81 + 24);
            v95 = *(_BYTE *)(v81 + 32);
            sub_2231813E8(v84, (uint64_t)&v95, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v81 + 24) + *(_QWORD *)(**(_QWORD **)(v81 + 24) - 24) + 16) = 9;
          v45 += 4;
          std::ostream::operator<<();
          v82 = *(_QWORD *)(v81 + 40) + 1;
          *(_QWORD *)(v81 + 40) = v82;
          v83 -= 4;
        }
        while (v83);
        return;
      }
      goto LABEL_112;
    case 12:
      v48 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v49 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(_QWORD *)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_112:
          abort();
        }
      }
      else if (v51 < 8)
      {
        return;
      }
      v85 = a2[1];
      v86 = *(_QWORD *)(v85 + 40);
      v87 = v51 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v86)
        {
          v88 = *(_QWORD **)(v85 + 24);
          v96 = *(_BYTE *)(v85 + 32);
          sub_2231813E8(v88, (uint64_t)&v96, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v85 + 24) + *(_QWORD *)(**(_QWORD **)(v85 + 24) - 24) + 16) = 17;
        v50 += 8;
        std::ostream::operator<<();
        v86 = *(_QWORD *)(v85 + 40) + 1;
        *(_QWORD *)(v85 + 40) = v86;
        v87 -= 8;
      }
      while (v87);
      return;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405EBA4(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD __src[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(__src[0]) = v9;
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)__src, (char *)__src + 1, 1);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  v13 = xmmword_24EC66DC8;
  __src[0] = &v9;
  __src[1] = a1;
  __src[2] = &v13;
  sub_22405ECC8(v9, __src);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_22405ECB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_22405ECC8(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char *result;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v4 + 40);
      v6 = *(char **)(v4 + 48);
      if (v6)
        v7 = 1;
      else
        v7 = v5 == 0;
      if (!v7)
        goto LABEL_27;
      goto LABEL_7;
    case 1:
      v9 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(char **)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      v14 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v15 + 40);
      v11 = *(char **)(v15 + 48);
      if (v11)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      v18 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v19 + 40);
      v11 = *(char **)(v19 + 48);
      if (v11)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      v22 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v23 = *(_QWORD *)(v22 + 16);
      v5 = *(_QWORD *)(v23 + 40);
      v6 = *(char **)(v23 + 48);
      if (v6)
        v24 = 1;
      else
        v24 = v5 == 0;
      if (v24)
      {
LABEL_7:
        v8 = a2[1];
      }
      else
      {
LABEL_27:
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)|| (v8 = a2[1], sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C)))
        {
LABEL_77:
          abort();
        }
      }
      result = sub_224501B60(v8 + 24, *(char **)(v8 + 32), v6, &v6[v5], v5);
      break;
    case 6:
      v25 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v26 = *(_QWORD *)(v25 + 16);
      v12 = *(_QWORD *)(v26 + 40);
      v11 = *(char **)(v26 + 48);
      if (v11)
        v27 = 0;
      else
        v27 = v12 >= 2;
      if (!v27)
        goto LABEL_37;
LABEL_36:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_37:
      v28 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[1];
      if (v11)
        v30 = 1;
      else
        v30 = v28 == 0;
      if (!v30)
        goto LABEL_75;
      goto LABEL_76;
    case 7:
      v31 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v32 = *(_QWORD *)(v31 + 16);
      v16 = *(_QWORD *)(v32 + 40);
      v11 = *(char **)(v32 + 48);
      if (v11)
        v33 = 0;
      else
        v33 = v16 >= 4;
      if (!v33)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      v34 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v35 = *(_QWORD *)(v34 + 16);
      v20 = *(_QWORD *)(v35 + 40);
      v11 = *(char **)(v35 + 48);
      if (v11)
        v36 = 0;
      else
        v36 = v20 >= 8;
      if (!v36)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      v37 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v38 = *(_QWORD *)(v37 + 16);
      v16 = *(_QWORD *)(v38 + 40);
      v11 = *(char **)(v38 + 48);
      if (v11)
        v39 = 0;
      else
        v39 = v16 >= 4;
      if (!v39)
        goto LABEL_59;
LABEL_58:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_59:
      v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v29 = a2[1];
      if (v11)
        v40 = 1;
      else
        v40 = v28 == 0;
      if (!v40)
        goto LABEL_75;
      goto LABEL_76;
    case 12:
      v41 = *a2;
      sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v42 = *(_QWORD *)(v41 + 16);
      v20 = *(_QWORD *)(v42 + 40);
      v11 = *(char **)(v42 + 48);
      if (v11)
        v43 = 0;
      else
        v43 = v20 >= 8;
      if (!v43)
        goto LABEL_71;
LABEL_70:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_71:
      v28 = v20 & 0xFFFFFFFFFFFFFFF8;
      v29 = a2[1];
      if (v11)
        v44 = 1;
      else
        v44 = v28 == 0;
      if (v44)
        goto LABEL_76;
LABEL_75:
      if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        goto LABEL_77;
      }
LABEL_76:
      result = sub_224501B60(v29 + 24, *(char **)(v29 + 32), v11, &v11[v28], v28);
      break;
    default:
      sub_22454B274(a1);
  }
  return result;
}

void sub_22405F054(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _BYTE *v12[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12[0] = &v9;
  sub_223BB23F8(a1, v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  v13 = xmmword_24EC66DC8;
  v12[0] = &v9;
  v12[1] = a1;
  v12[2] = &v13;
  sub_22405F150(v9, v12);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_22405F13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223198118((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_22405F150(int a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int8 **result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return result;
        goto LABEL_65;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_65:
        v55 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v55 + 80))(v55, v6++);
          --v7;
        }
        while (v7);
        return result;
      }
      goto LABEL_104;
    case 1:
      v9 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_69;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_69:
        v56 = a2[1];
        v57 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v56 + 96))(v56, v11);
          v11 += 2;
          v57 -= 2;
        }
        while (v57);
        return result;
      }
      goto LABEL_104;
    case 2:
      v14 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (!v18)
      {
        if (v17 < 4)
          return result;
        goto LABEL_73;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_73:
        v58 = a2[1];
        v59 = v17 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v58 + 104))(v58, v16);
          v16 += 4;
          v59 -= 4;
        }
        while (v59);
        return result;
      }
      goto LABEL_104;
    case 3:
      v19 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 3);
      v20 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (!v23)
      {
        if (v22 < 8)
          return result;
        goto LABEL_77;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_77:
        v60 = a2[1];
        v61 = v22 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 120))(v60, v21);
          v21 += 8;
          v61 -= 8;
        }
        while (v61);
        return result;
      }
      goto LABEL_104;
    case 5:
      v24 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 5);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (v28)
      {
        if (!v27)
          return result;
        goto LABEL_81;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_81:
        v63 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 88))(v63, v26++);
          --v27;
        }
        while (v27);
        return result;
      }
      goto LABEL_104;
    case 6:
      v29 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 6);
      v30 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (!v33)
      {
        if (v32 < 2)
          return result;
        goto LABEL_85;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_85:
        v64 = a2[1];
        v65 = v32 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v64 + 48))(v64, v31);
          v31 += 2;
          v65 -= 2;
        }
        while (v65);
        return result;
      }
      goto LABEL_104;
    case 7:
      v34 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 7);
      v35 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (!v38)
      {
        if (v37 < 4)
          return result;
        goto LABEL_89;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_89:
        v66 = a2[1];
        v67 = v37 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 56))(v66, v36);
          v36 += 4;
          v67 -= 4;
        }
        while (v67);
        return result;
      }
      goto LABEL_104;
    case 8:
      v39 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 8);
      v40 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (!v43)
      {
        if (v42 < 8)
          return result;
        goto LABEL_93;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_93:
        v68 = a2[1];
        v69 = v42 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 72))(v68, v41);
          v41 += 8;
          v69 -= 8;
        }
        while (v69);
        return result;
      }
      goto LABEL_104;
    case 11:
      v44 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 11);
      v45 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (!v48)
      {
        if (v47 < 4)
          return result;
        goto LABEL_97;
      }
      if (!sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
LABEL_97:
        v70 = a2[1];
        v71 = v47 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 128))(v70, v46);
          v46 += 4;
          v71 -= 4;
        }
        while (v71);
        return result;
      }
      goto LABEL_104;
    case 12:
      v49 = *a2;
      result = sub_224510118((unsigned __int8 **)(*a2 + 16), 12);
      v50 = *(_QWORD *)(v49 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53)
      {
        if (sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
        {
LABEL_104:
          abort();
        }
      }
      else if (v52 < 8)
      {
        return result;
      }
      v72 = a2[1];
      v73 = v52 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 136))(v72, v51);
        v51 += 8;
        v73 -= 8;
      }
      while (v73);
      return result;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405F72C(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  if (a3 < 2)
  {
    sub_22405F850((uint64_t)&v11, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "value_type";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v11 = a2;
    sub_224035430((uint64_t *)a1, &v11);
    v6 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "size";
    *(_QWORD *)(a1 + 96) = 4;
    if (!v6)
      *(_BYTE *)(a1 + 104) = 1;
    v7 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    v11 = 0;
    sub_22451CAD4(v7, &v11);
    *((_QWORD *)a2 + 1) = v11;
    v8 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "points3";
    *(_QWORD *)(a1 + 96) = 7;
    if (!v8)
      *(_BYTE *)(a1 + 104) = 1;
    sub_224544628(a1);
    sub_22405FA64(*a2, (uint64_t)a2, a1);
    v9 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v9 - 8);
    v10 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(v10 - 8);
    *(_QWORD *)(a1 + 48) = v9 - 8;
    *(_QWORD *)(a1 + 72) = v10 - 8;
  }
}

void sub_22405F850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned __int8 v22[8];
  void *v23;
  __int128 v24;
  void *__p;
  void *v26;
  uint64_t v27;
  __int128 v28;

  v22[0] = 7;
  v23 = 0;
  __p = 0;
  v26 = 0;
  v27 = 0;
  sub_2245119CC((uint64_t)&__p, &v28);
  v24 = v28;
  if (__p)
  {
    v26 = __p;
    operator delete(__p);
  }
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  __p = v22;
  sub_224035430((uint64_t *)a2, (_BYTE **)&__p);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  __p = 0;
  sub_22451CAD4(v7, &__p);
  v23 = __p;
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "points3";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544628(a2);
  sub_224061314(v22[0], (uint64_t)v22, a2);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
  v11 = v22[0];
  v12 = v23;
  v13 = v24;
  if (*((_QWORD *)&v24 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_BYTE *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = v13;
  v16 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v13 + 1);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
  if (*((_QWORD *)&v24 + 1))
  {
    v20 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
}

void sub_22405FA34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405FA50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22405FA64(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22405FB8C(v3);
      break;
    case 1:
      sub_22405FDCC(v3);
      break;
    case 2:
      sub_22406001C(v3);
      break;
    case 3:
      sub_224060270(v3);
      break;
    case 5:
      sub_224060508(v3);
      break;
    case 6:
      sub_224060748(v3);
      break;
    case 7:
      sub_224060998(v3);
      break;
    case 8:
      sub_224060BEC(v3);
      break;
    case 11:
      sub_224060E84(v3);
      break;
    case 12:
      sub_2240610CC(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22405FB8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_2245449F8(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_22405FD68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22405FDCC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_223257BE4();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545920(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22405FFB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406001C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545A98(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22406020C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224060270(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547FD0(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_22406048C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224060508(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545740(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_2240606E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224060748(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_2240336DC();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545830(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224060934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224060998(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_2245459DC(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224060B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224060BEC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547C94(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_224060E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224060E84(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v15 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545EA4(v6, (float *)&v4[v3]);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224061068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240610CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    __p = operator new(24 * v2);
    v15 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545FAC(v6, (double *)&v4[v3]);
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240612B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224061314(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22406143C(v3);
      break;
    case 1:
      sub_22406167C(v3);
      break;
    case 2:
      sub_2240618CC(v3);
      break;
    case 3:
      sub_224061B20(v3);
      break;
    case 5:
      sub_224061DB8(v3);
      break;
    case 6:
      sub_224061FF8(v3);
      break;
    case 7:
      sub_224062248(v3);
      break;
    case 8:
      sub_22406249C(v3);
      break;
    case 11:
      sub_224062734(v3);
      break;
    case 12:
      sub_22406297C(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406143C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_2245449F8(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224061618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406167C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_223257BE4();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545920(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224061868(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240618CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545A98(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224061ABC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224061B20(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547FD0(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_224061D3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224061DB8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245448E0(v7);
      ++v7[14];
      sub_224545740(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224061F94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224061FF8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_2240336DC();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_224545830(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_2240621E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224062248(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245448E0(v4);
      ++v4[14];
      sub_2245459DC(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224062438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406249C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245448E0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224547C94(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_2240626B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224062734(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v15 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545EA4(v6, (float *)&v4[v3]);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224062918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406297C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    __p = operator new(24 * v2);
    v15 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245448E0(v5);
      ++v5[14];
      sub_224545FAC(v6, (double *)&v4[v3]);
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224062B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224062BC4(uint64_t a1, uint64_t *a2, unsigned __int8 *a3, unsigned int a4)
{
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;

  if (a4 < 2)
  {
    sub_224062CB8((uint64_t)v10, a2, (uint64_t)a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    LOBYTE(v10[0]) = 0;
    sub_224553CF0(a2[6], v10);
    *a3 = v10[0];
    sub_2245543E8(a2[6], (_QWORD *)a3 + 1);
    v11 = xmmword_24EC66DC8;
    v7 = *a3;
    v10[0] = a3;
    v10[1] = a2;
    v10[2] = &v11;
    sub_224062E4C(v7, v10);
    v8 = a2[4];
    v9 = *(_QWORD *)(v8 - 16) - (*(uint64_t (**)(uint64_t *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v8 - 8);
    if (v9)
      (*(void (**)(uint64_t *, uint64_t))(*v6 + 40))(a2 + 2, v9);
    a2[4] -= 16;
  }
}

void sub_224062CB8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  void *__p;
  void *v20;
  __int128 *v21;
  __int128 v22;

  v16 = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245119CC((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  LOBYTE(__p) = 0;
  sub_224553CF0(a2[6], &__p);
  v16 = __p;
  sub_2245543E8(a2[6], &v17);
  v22 = xmmword_24EC66DC8;
  __p = &v16;
  v20 = a2;
  v21 = &v22;
  sub_2240641D4(v16, &__p);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_224062E1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224062E38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224062E4C(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_224062EF4(a2);
      break;
    case 1:
      sub_2240630C8(a2);
      break;
    case 2:
      sub_2240632AC(a2);
      break;
    case 3:
      sub_224063494(a2);
      break;
    case 5:
      sub_22406367C(a2);
      break;
    case 6:
      sub_224063850(a2);
      break;
    case 7:
      sub_224063A34(a2);
      break;
    case 8:
      sub_224063C1C(a2);
      break;
    case 11:
      sub_224063E04(a2);
      break;
    case 12:
      sub_224063FEC(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224062EF4(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553CF0(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224063068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240630C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223257BE4();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553E94(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406324C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240632AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224554038(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224063434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224063494(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245543E8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406361C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406367C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553C38(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240637F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224063850(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_2240336DC();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553DDC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240639D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224063A34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224553F80(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224063BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224063C1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245542F8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224063DA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224063E04(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_2245544CC(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224063F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224063FEC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_224554604(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224064174(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240641D4(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22406427C(a2);
      break;
    case 1:
      sub_224064450(a2);
      break;
    case 2:
      sub_224064634(a2);
      break;
    case 3:
      sub_22406481C(a2);
      break;
    case 5:
      sub_224064A04(a2);
      break;
    case 6:
      sub_224064BD8(a2);
      break;
    case 7:
      sub_224064DBC(a2);
      break;
    case 8:
      sub_224064FA4(a2);
      break;
    case 11:
      sub_22406518C(a2);
      break;
    case 12:
      sub_224065374(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406427C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553CF0(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240643F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224064450(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223257BE4();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553E94(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240645D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224064634(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224554038(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240647BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406481C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245543E8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240649A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224064A04(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_224553C38(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224064B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224064BD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_2240336DC();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_224553DDC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224064D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224064DBC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_224553F80(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224064F44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224064FA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_2245542F8(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406512C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406518C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_2245544CC(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224065314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224065374(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_224554604(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240654FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406555C(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  if (a3 < 2)
  {
    sub_224065680((uint64_t)&v11, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "value_type";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v11 = a2;
    sub_224036208((uint64_t *)a1, &v11);
    v6 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "size";
    *(_QWORD *)(a1 + 96) = 4;
    if (!v6)
      *(_BYTE *)(a1 + 104) = 1;
    v7 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    v11 = 0;
    sub_22451C444(v7, &v11);
    *((_QWORD *)a2 + 1) = v11;
    v8 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "points3";
    *(_QWORD *)(a1 + 96) = 7;
    if (!v8)
      *(_BYTE *)(a1 + 104) = 1;
    sub_224544138(a1);
    sub_224065894(*a2, (uint64_t)a2, a1);
    v9 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v9 - 8);
    v10 = *(_QWORD *)(a1 + 72);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(v10 - 8);
    *(_QWORD *)(a1 + 48) = v9 - 8;
    *(_QWORD *)(a1 + 72) = v10 - 8;
  }
}

void sub_224065680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  void *v12;
  __int128 v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned __int8 v22[8];
  void *v23;
  __int128 v24;
  void *__p;
  void *v26;
  uint64_t v27;
  __int128 v28;

  v22[0] = 7;
  v23 = 0;
  __p = 0;
  v26 = 0;
  v27 = 0;
  sub_2245119CC((uint64_t)&__p, &v28);
  v24 = v28;
  if (__p)
  {
    v26 = __p;
    operator delete(__p);
  }
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  __p = v22;
  sub_224036208((uint64_t *)a2, (_BYTE **)&__p);
  v6 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v6)
    *(_BYTE *)(a2 + 104) = 1;
  v7 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  __p = 0;
  sub_22451C444(v7, &__p);
  v23 = __p;
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "points3";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224544138(a2);
  sub_224067144(v22[0], (uint64_t)v22, a2);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 48) = v9 - 8;
  *(_QWORD *)(a2 + 72) = v10 - 8;
  v11 = v22[0];
  v12 = v23;
  v13 = v24;
  if (*((_QWORD *)&v24 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_BYTE *)a3 = v11;
  *(_QWORD *)(a3 + 8) = v12;
  *(_QWORD *)(a3 + 16) = v13;
  v16 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v13 + 1);
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = (std::__shared_weak_count *)*((_QWORD *)&v24 + 1);
  if (*((_QWORD *)&v24 + 1))
  {
    v20 = (unint64_t *)(*((_QWORD *)&v24 + 1) + 8);
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
}

void sub_224065864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224065880(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224065894(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_2240659BC(v3);
      break;
    case 1:
      sub_224065BFC(v3);
      break;
    case 2:
      sub_224065E4C(v3);
      break;
    case 3:
      sub_2240660A0(v3);
      break;
    case 5:
      sub_224066338(v3);
      break;
    case 6:
      sub_224066578(v3);
      break;
    case 7:
      sub_2240667C8(v3);
      break;
    case 8:
      sub_224066A1C(v3);
      break;
    case 11:
      sub_224066CB4(v3);
      break;
    case 12:
      sub_224066EFC(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_2240659BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544508(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224065B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224065BFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_223257BE4();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544C94(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224065DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224065E4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544E0C(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_22406603C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240660A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224546D08(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_2240662BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224066338(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544AB4(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224066514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224066578(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_2240336DC();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544BA4(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224066764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240667C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544D50(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_2240669B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224066A1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_22454664C(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_224066C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224066CB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v15 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545240(v6, (float *)&v4[v3]);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224066E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224066EFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    __p = operator new(24 * v2);
    v15 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545370(v6, (double *)&v4[v3]);
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_2240670E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224067144(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_22406726C(v3);
      break;
    case 1:
      sub_2240674AC(v3);
      break;
    case 2:
      sub_2240676FC(v3);
      break;
    case 3:
      sub_224067950(v3);
      break;
    case 5:
      sub_224067BE8(v3);
      break;
    case 6:
      sub_224067E28(v3);
      break;
    case 7:
      sub_224068078(v3);
      break;
    case 8:
      sub_2240682CC(v3);
      break;
    case 11:
      sub_224068564(v3);
      break;
    case 12:
      sub_2240687AC(v3);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406726C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544508(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450EEF0(&v18, 0, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224067448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240674AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_223257BE4();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544C94(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F234(&v15, 1, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224067698(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240676FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544E0C(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F57C(&v15, 2, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_2240678EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224067950(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_224546D08(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F8C4(&v17, 3, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_224067B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224067BE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  void *v16;
  char *v17;
  uint64_t v18;
  char *v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v17 = &v4[v3];
    bzero(v4, 3 * v2);
    v6 = 0;
    v16 = v5;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v18 = 3;
      v19 = (char *)__p + v6;
      v8 = (char *)sub_2245443F0(v7);
      ++v7[14];
      sub_224544AB4(v8, (uint64_t)&v18);
      v6 += 3;
      --v2;
    }
    while (v2);
  }
  sub_22450ED50(&v18, 5, (uint64_t)&__p);
  v10 = v18;
  v9 = v19;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = __p;
    operator delete(__p);
  }
}

void sub_224067DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224067E28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if (3 * v2 < 0)
      sub_2240336DC();
    __p = operator new(6 * v2);
    v14 = (char *)__p + 6 * v2;
    bzero(__p, 6 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544BA4(v5, (uint64_t)&v15);
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  sub_22450F090(&v15, 6, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224068014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224068078(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    __p = operator new(12 * v2);
    v14 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v13 = v14;
    do
    {
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v4 = (uint64_t *)a1[1];
      v15 = 3;
      v16 = (char *)__p + v3;
      v5 = (char *)sub_2245443F0(v4);
      ++v4[14];
      sub_224544D50(v5, (uint64_t)&v15);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450F3D8(&v15, 7, (uint64_t)&__p);
  v7 = v15;
  v6 = v16;
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15 + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = __p;
    operator delete(__p);
  }
}

void sub_224068268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240682CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  const void *v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  void *__p;
  void *v15;
  char *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*a1 + 8);
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    __p = operator new(24 * v2);
    v16 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v15 = v16;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = (char *)sub_2245443F0(v5);
      ++v5[14];
      v17 = 0;
      v18 = 0;
      v19 = 0;
      sub_22454664C(v6, (uint64_t)&v17);
      v7 = v17;
      if (v18 != v17)
      {
        memmove(&v4[v3], v17, v18 - v17);
        v7 = v17;
      }
      if (v7)
      {
        v18 = v7;
        operator delete(v7);
      }
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450F720(&v17, 8, (uint64_t)&__p);
  v9 = v17;
  v8 = v18;
  if (0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v17 + 7) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = *a1;
  v11 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (__p)
  {
    v15 = __p;
    operator delete(__p);
  }
}

void sub_2240684E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224068564(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    __p = operator new(12 * v2);
    v15 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545240(v6, (float *)&v4[v3]);
      v3 += 12;
      --v2;
    }
    while (v2);
  }
  sub_22450FA68(v16, 11, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224068748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240687AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  void *v14;
  char *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    __p = operator new(24 * v2);
    v15 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v3 = 0;
    v14 = v15;
    do
    {
      v4 = (char *)__p;
      if (!__p
        && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
      {
        abort();
      }
      v5 = (uint64_t *)a1[1];
      v6 = sub_2245443F0(v5);
      ++v5[14];
      sub_224545370(v6, (double *)&v4[v3]);
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_22450FC0C(v16, 12, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224068990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240689F4(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  char v8;
  char v9;
  __int128 v10;
  void *__p;
  uint64_t v12;
  __int128 *v13;

  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  v5 = __p;
  if (__p >= 2)
    v6 = 2;
  else
    v6 = __p;
  if (v6 < 2)
  {
    sub_224068B60((uint64_t)&__p, a2, (uint64_t)a3);
    if (v5 < 2)
      return;
  }
  else
  {
    LOBYTE(__p) = 0;
    sub_22454FFAC(a2, &__p);
    *a3 = __p;
    sub_224550D98(a2, (_QWORD *)a3 + 1);
    v10 = xmmword_24EC66DC8;
    v7 = *a3;
    __p = a3;
    v12 = a2;
    v13 = &v10;
    sub_224068CF4(v7, &__p);
    if (v5 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (SHIBYTE(v13) < 0)
      {
        if (v12 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_21:
          v9 = 0;
          if (SHIBYTE(v13) < 0)
            goto LABEL_24;
          goto LABEL_10;
        }
      }
      else if (SHIBYTE(v13) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_21;
      }
      v9 = 1;
      if (SHIBYTE(v13) < 0)
LABEL_24:
        operator delete(__p);
LABEL_10:
      if (*(_BYTE *)(a2 + 131))
        v8 = 0;
      else
        v8 = v9;
    }
    while ((v8 & 1) != 0);
  }
}

void sub_224068B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  void *__p;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;

  v16 = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245119CC((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = (uint64_t)__p;
    operator delete(__p);
  }
  LOBYTE(__p) = 0;
  sub_22454FFAC(a2, &__p);
  v16 = __p;
  sub_224550D98(a2, &v17);
  v22 = xmmword_24EC66DC8;
  __p = &v16;
  v20 = a2;
  v21 = &v22;
  sub_22406A054(v16, &__p);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_224068CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224068CE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224068CF4(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_224068D9C(a2);
      break;
    case 1:
      sub_224068F6C(a2);
      break;
    case 2:
      sub_22406914C(a2);
      break;
    case 3:
      sub_224069330(a2);
      break;
    case 5:
      sub_224069514(a2);
      break;
    case 6:
      sub_2240696E4(a2);
      break;
    case 7:
      sub_2240698C4(a2);
      break;
    case 8:
      sub_224069AA8(a2);
      break;
    case 11:
      sub_224069C8C(a2);
      break;
    case 12:
      sub_224069E70(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224068D9C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FFAC(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224068F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224068F6C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223257BE4();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_224550448(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240690EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406914C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_2245508F0(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240692D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224069330(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550D98(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240694B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224069514(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FD64(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_224069684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240696E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_2240336DC();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2245501F4(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224069864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240698C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_22455069C(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224069A48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224069AA8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550B44(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224069C2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224069C8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_224551268(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224069E10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224069E70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_2245514BC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224069FF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406A054(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22406A0FC(a2);
      break;
    case 1:
      sub_22406A2CC(a2);
      break;
    case 2:
      sub_22406A4AC(a2);
      break;
    case 3:
      sub_22406A690(a2);
      break;
    case 5:
      sub_22406A874(a2);
      break;
    case 6:
      sub_22406AA44(a2);
      break;
    case 7:
      sub_22406AC24(a2);
      break;
    case 8:
      sub_22406AE08(a2);
      break;
    case 11:
      sub_22406AFEC(a2);
      break;
    case 12:
      sub_22406B1D0(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406A0FC(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FFAC(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450EEF0(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22406A26C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406A2CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223257BE4();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_224550448(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406A44C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406A4AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_2245508F0(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406A630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406A690(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550D98(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406A814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406A874(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = operator new(3 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_22454FD64(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_22450ED50(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_22406A9E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406AA44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_2240336DC();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2245501F4(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406ABC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406AC24(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_22455069C(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406ADA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406AE08(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_224550B44(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406AF8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406AFEC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_224551268(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406B170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406B1D0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_2245514BC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406B354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406B3B4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_22406B4A8((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_22406B608(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_22406B494(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22406B4A8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  char v16[8];
  uint64_t v17;
  __int128 v18;
  void *__p;
  void *v20;
  uint64_t v21;
  __int128 v22;

  v16[0] = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245119CC((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  sub_22406CE10(a2, (uint64_t)v16);
  v5 = v16[0];
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22406B5D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22406B5EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406B608(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24EC66DC8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_22406B708(v5, v10);
}

void sub_22406B6E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22406B6F4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22406B708(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22406B7B0(a2);
      break;
    case 1:
      sub_22406B9E4(a2);
      break;
    case 2:
      sub_22406BC20(a2);
      break;
    case 3:
      sub_22406BE60(a2);
      break;
    case 5:
      sub_22406C0A0(a2);
      break;
    case 6:
      sub_22406C2D4(a2);
      break;
    case 7:
      sub_22406C510(a2);
      break;
    case 8:
      sub_22406C750(a2);
      break;
    case 11:
      sub_22406C990(a2);
      break;
    case 12:
      sub_22406CBD0(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406B7B0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450EEF0(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406B974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406B9E4(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if (3 * (_QWORD)v2 < 0)
      sub_223257BE4();
    v4 = 6 * (_QWORD)v2;
    v5 = (char *)operator new(6 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[2 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F234(v22, 1, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406BBB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406BC20(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 62)
      sub_22316E078();
    v4 = 12 * (_QWORD)v2;
    v5 = (char *)operator new(12 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[4 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F57C(v22, 2, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406BDF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406BE60(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 61)
      sub_223323BA8();
    v4 = 24 * (_QWORD)v2;
    v5 = (char *)operator new(24 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[8 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F8C4(v22, 3, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406C030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406C0A0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450ED50(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406C264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406C2D4(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if (3 * (_QWORD)v2 < 0)
      sub_2240336DC();
    v4 = 6 * (_QWORD)v2;
    v5 = (char *)operator new(6 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[2 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F090(v22, 6, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406C4A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406C510(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 62)
      sub_22352449C();
    v4 = 12 * (_QWORD)v2;
    v5 = (char *)operator new(12 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[4 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F3D8(v22, 7, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406C6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406C750(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * (_QWORD)v2;
    v5 = (char *)operator new(24 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[8 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F720(v22, 8, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406C920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406C990(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 62)
      sub_22316E078();
    v4 = 12 * (_QWORD)v2;
    v5 = (char *)operator new(12 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[4 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450FA68(v22, 11, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406CB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406CBD0(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 61)
      sub_22316E078();
    v4 = 24 * (_QWORD)v2;
    v5 = (char *)operator new(24 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[8 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450FC0C(v22, 12, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406CDA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406CE10(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24EC66DC8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_22406CF10(v5, v10);
}

void sub_22406CEE8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22406CEFC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22406CF10(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22406CFB8(a2);
      break;
    case 1:
      sub_22406D1EC(a2);
      break;
    case 2:
      sub_22406D428(a2);
      break;
    case 3:
      sub_22406D668(a2);
      break;
    case 5:
      sub_22406D8A8(a2);
      break;
    case 6:
      sub_22406DADC(a2);
      break;
    case 7:
      sub_22406DD18(a2);
      break;
    case 8:
      sub_22406DF58(a2);
      break;
    case 11:
      sub_22406E198(a2);
      break;
    case 12:
      sub_22406E3D8(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406CFB8(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450EEF0(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406D17C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406D1EC(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if (3 * (_QWORD)v2 < 0)
      sub_223257BE4();
    v4 = 6 * (_QWORD)v2;
    v5 = (char *)operator new(6 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[2 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F234(v22, 1, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406D3B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406D428(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 62)
      sub_22316E078();
    v4 = 12 * (_QWORD)v2;
    v5 = (char *)operator new(12 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[4 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F57C(v22, 2, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406D5F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406D668(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 61)
      sub_223323BA8();
    v4 = 24 * (_QWORD)v2;
    v5 = (char *)operator new(24 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[8 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F8C4(v22, 3, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406D838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406D8A8(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450ED50(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406DA6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406DADC(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if (3 * (_QWORD)v2 < 0)
      sub_2240336DC();
    v4 = 6 * (_QWORD)v2;
    v5 = (char *)operator new(6 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[2 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F090(v22, 6, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406DCA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406DD18(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 62)
      sub_22352449C();
    v4 = 12 * (_QWORD)v2;
    v5 = (char *)operator new(12 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[4 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F3D8(v22, 7, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406DEE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406DF58(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * (_QWORD)v2;
    v5 = (char *)operator new(24 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[8 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450F720(v22, 8, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406E128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406E198(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 62)
      sub_22316E078();
    v4 = 12 * (_QWORD)v2;
    v5 = (char *)operator new(12 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[4 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450FA68(v22, 11, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406E368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406E3D8(_QWORD *a1)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(char **)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * (_QWORD)v2;
    if ((unint64_t)(3 * (_QWORD)v2) >> 61)
      sub_22316E078();
    v4 = 24 * (_QWORD)v2;
    v5 = (char *)operator new(24 * (_QWORD)v2);
    __p = v5;
    v21 = &v5[8 * v3];
    bzero(v5, v4);
    v2 = &v5[v4];
    v20 = &v5[v4];
  }
  else
  {
    v5 = 0;
  }
  v6 = v2 - v5;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_22450FC0C(v22, 12, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406E5A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406E618(int *a1, _BYTE *a2, _BYTE *a3)
{
  int v6;
  _BYTE *v7[3];
  __int128 v8;

  LODWORD(v7[0]) = 2;
  (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v7);
  if (*a1 < 1)
  {
    if (LODWORD(v7[0]) < 2)
    {
      sub_22406EC18((uint64_t)v7, a2, (uint64_t)a3);
    }
    else
    {
      v7[0] = a3;
      sub_223BDEF78(a2, v7);
      (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
      v8 = xmmword_24EC66DC8;
      v6 = *a3;
      v7[0] = a3;
      v7[1] = a2;
      v7[2] = &v8;
      sub_22406EDB0(v6, v7);
    }
  }
  else
  {
    sub_22406E714(a1, a2, a3, v7[0]);
  }
}

void sub_22406E714(int *a1, _BYTE *a2, _BYTE *a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  __int128 *v13;
  _BYTE *v14[3];
  __int128 v15;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    LODWORD(v14[0]) = 2;
    (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v14);
    if (LODWORD(v14[0]) >= 3)
    {
      v12 = v14[0];
      v13 = sub_22406E868();
      sub_22455C3A8((std::string *)v13, v12, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 >= 1)
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
    goto LABEL_13;
  }
LABEL_8:
  if (a4 >= 2)
    v10 = 2;
  else
    v10 = a4;
  if (v10 <= 1)
  {
    sub_22406EC18((uint64_t)v14, a2, (uint64_t)a3);
    return;
  }
  v9 = 0;
LABEL_13:
  v14[0] = a3;
  sub_223BDEF78(a2, v14);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v15 = xmmword_24EC66DC8;
  v11 = *a3;
  v14[0] = a3;
  v14[1] = a2;
  v14[2] = &v15;
  sub_22406EDB0(v11, v14);
  if (v9)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_22406E868()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FEF0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FEF0))
    return &xmmword_25578FED8;
  v2 = sub_22406E944();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578FED8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578FEE8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578FED8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FED8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FEF0);
  return &xmmword_25578FED8;
}

void sub_22406E92C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FEF0);
  _Unwind_Resume(a1);
}

std::string *sub_22406E944()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FF10);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FF10))
    return &stru_25578FEF8;
  sub_22406EA34((uint64_t)__p);
  sub_2240333EC((char *)__p, &stru_25578FEF8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FEF8, &dword_22314D000);
  __cxa_guard_release(&qword_25578FF10);
  return &stru_25578FEF8;
}

void sub_22406E9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578FF10);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578FF10);
  _Unwind_Resume(a1);
}

void sub_22406EA34(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FF30);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FF30))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::PointsSample<3>]", qword_25578FF18);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FF18, &dword_22314D000);
    __cxa_guard_release(&qword_25578FF30);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578FF50);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578FF50))
  {
    v5 = sub_2231A38CC(qword_25578FF18, "<", 0);
    sub_2231A37C8(qword_25578FF18, 0, v5, qword_25578FF38);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FF38, &dword_22314D000);
    __cxa_guard_release(&qword_25578FF50);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25578FF70);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25578FF70))
  {
    sub_224573040((uint64_t)qword_25578FF38, (uint64_t)&xmmword_25578FF58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FF58, &dword_22314D000);
    __cxa_guard_release(&qword_25578FF70);
  }
  if (byte_25578FF6F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578FF58, *((unint64_t *)&xmmword_25578FF58 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578FF58;
    *(_QWORD *)(a1 + 16) = unk_25578FF68;
  }
}

void sub_22406EBD0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FF70);
  _Unwind_Resume(a1);
}

void sub_22406EBE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FF50);
  _Unwind_Resume(a1);
}

void sub_22406EC00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FF30);
  _Unwind_Resume(a1);
}

void sub_22406EC18(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  __int128 v18;
  void *__p;
  void *v20;
  __int128 *v21;
  __int128 v22;

  v16 = 7;
  v17 = 0;
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_2245119CC((uint64_t)&__p, &v22);
  v18 = v22;
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
  __p = &v16;
  sub_223BDEF78(a2, (_BYTE **)&__p);
  (*(void (**)(_BYTE *, uint64_t *))(*(_QWORD *)a2 + 120))(a2, &v17);
  v22 = xmmword_24EC66DC8;
  __p = &v16;
  v20 = a2;
  v21 = &v22;
  sub_224070088(v16, &__p);
  v5 = v16;
  v6 = v17;
  v7 = v18;
  if (*((_QWORD *)&v18 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  *(_BYTE *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  v10 = *(std::__shared_weak_count **)(a3 + 24);
  *(_QWORD *)(a3 + 24) = *((_QWORD *)&v7 + 1);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22406ED80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406ED9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223198118((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22406EDB0(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_22406EE58(a2);
      break;
    case 1:
      sub_22406F014(a2);
      break;
    case 2:
      sub_22406F1E8(a2);
      break;
    case 3:
      sub_22406F3C0(a2);
      break;
    case 5:
      sub_22406F598(a2);
      break;
    case 6:
      sub_22406F754(a2);
      break;
    case 7:
      sub_22406F928(a2);
      break;
    case 8:
      sub_22406FB00(a2);
      break;
    case 11:
      sub_22406FCD8(a2);
      break;
    case 12:
      sub_22406FEB0(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_22406EE58(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450EEF0(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406EFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406F014(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223257BE4();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406F188(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406F1E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406F360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406F3C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406F538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406F598(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450ED50(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406F6F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406F754(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_2240336DC();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406F8C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406F928(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406FAA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406FB00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406FC78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406FCD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22406FE50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22406FEB0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070028(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070088(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_224070130(a2);
      break;
    case 1:
      sub_2240702EC(a2);
      break;
    case 2:
      sub_2240704C0(a2);
      break;
    case 3:
      sub_224070698(a2);
      break;
    case 5:
      sub_224070870(a2);
      break;
    case 6:
      sub_224070A2C(a2);
      break;
    case 7:
      sub_224070C00(a2);
      break;
    case 8:
      sub_224070DD8(a2);
      break;
    case 11:
      sub_224070FB0(a2);
      break;
    case 12:
      sub_224071188(a2);
      break;
    default:
      sub_22454B274(a1);
  }
}

void sub_224070130(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_22316E078();
    v4 = (char *)operator new(3 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450EEF0(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22407028C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240702EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223257BE4();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F234(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240704C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F57C(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070698(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223323BA8();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F8C4(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070870(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_223662A04();
    v4 = (char *)operator new(3 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_22450ED50(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_2240709CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070A2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if (3 * v2 < 0)
      sub_2240336DC();
    v4 = 6 * v2;
    v5 = (char *)operator new(6 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_22450F090(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070BA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070C00(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22352449C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450F3D8(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070D78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070DD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_223FCCF04();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450F720(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224070F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224070FB0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 62)
      sub_22316E078();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_22450FA68(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224071128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224071188(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (v2)
  {
    v3 = 3 * v2;
    if ((unint64_t)(3 * v2) >> 61)
      sub_22316E078();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_22450FC0C(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56) >= 0x5555555555555556
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Kit/Container/src/Points.cpp", 43, (uint64_t)"this->numbers.Size() % N == 0", 29, (uint64_t)&unk_2245B6C3A, 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224071300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_224071360@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  unsigned __int128 *v8;
  unsigned __int128 v9;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC282C8;
  *(_QWORD *)(v4 + 8) = &off_24EC6D000;
  v6 = *(_OWORD *)(a1 + 16);
  v7 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(_BYTE *)(v4 + 48) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
    *(_QWORD *)(v4 + 64) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(v4 + 72) = 1;
  }
  *(_BYTE *)(v4 + 80) = 0;
  *(_BYTE *)(v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v4 + 96) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(v4 + 104) = 1;
  }
  *(_BYTE *)(v4 + 144) = 0;
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    *(_OWORD *)(v4 + 144) = *(_OWORD *)(a1 + 144);
    *(_QWORD *)(v4 + 160) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v8 = (unsigned __int128 *)(a1 + 176);
    do
      v9 = __ldaxp(v8);
    while (__stlxp(v9, v8));
    *(_OWORD *)(v4 + 176) = v9;
    *(_BYTE *)(v4 + 192) = 1;
  }
  *(_BYTE *)(v4 + 208) = 0;
  *(_BYTE *)(v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    *(_OWORD *)(v4 + 208) = *(_OWORD *)(a1 + 208);
    *(_QWORD *)(v4 + 224) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *(_BYTE *)(v4 + 232) = 1;
  }
  *(_QWORD *)v4 = &off_24EC28248;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_2240714F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_224071514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  void (*v6)(uint64_t, uint64_t, uint64_t *, _QWORD, _QWORD);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t *, _QWORD, _QWORD);
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  _QWORD v12[4];

  v12[3] = *MEMORY[0x24BDAC8D0];
  sub_22454024C(a2);
  v10 = "version";
  v11 = 7;
  LODWORD(v12[0]) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, v12);
  LODWORD(v10) = *(_DWORD *)a3;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t *, _QWORD, _QWORD))(a3 + 8);
  v7 = a3 + 8;
  v6 = v8;
  v11 = 0;
  v12[0] = 0;
  if (v8)
    v6(1, v7, &v11, 0, 0);
  sub_224071694(a2, (uint64_t)&v10);
  if (v11)
    ((void (*)(_QWORD, uint64_t *, _QWORD, _QWORD, _QWORD))v11)(0, &v11, 0, 0, 0);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22407164C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224071694(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v14;
  int v15;
  uint64_t (*v16)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v24;
  int v25;
  uint64_t (*v26)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, _QWORD, void *, void *);
  int v29;
  uint64_t (*v30)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v33;
  int v34;
  uint64_t (*v35)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, _QWORD, void *, void *);
  int v38;
  uint64_t (*v39)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, _QWORD, void *, void *);
  int v42;
  int *v43;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "camera_type";
    *(_QWORD *)(a1 + 80) = 11;
    if (!v4)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v43 = (int *)a2;
  sub_224071B38(a1, &v43);
  v5 = *(_DWORD *)a2;
  switch(v5)
  {
    case 0:
      v13 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v12 = a2 + 8;
      v11 = v13;
      if (!v13)
        goto LABEL_55;
      v14 = v11(3, v12, 0, &unk_24EC682D8, &unk_224697234);
      if (!v14)
        goto LABEL_55;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v15 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v15)
          *(_BYTE *)(a1 + 88) = 1;
      }
      sub_223B95BE8((uint64_t)&v43, a1, v14);
      return;
    case 1:
      v18 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v17 = a2 + 8;
      v16 = v18;
      if (!v18)
        goto LABEL_55;
      v19 = v16(3, v17, 0, &unk_24EC68328, &unk_224697308);
      if (!v19)
        goto LABEL_55;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v20 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v20)
          *(_BYTE *)(a1 + 88) = 1;
      }
      goto LABEL_24;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v23 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v22 = a2 + 8;
      v21 = v23;
      if (!v23)
        goto LABEL_55;
      v24 = v21(3, v22, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v24)
        goto LABEL_55;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v25 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v25)
          *(_BYTE *)(a1 + 88) = 1;
      }
      sub_2240720C4((uint64_t)&v43, a1, v24);
      return;
    case 11:
      v28 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v27 = a2 + 8;
      v26 = v28;
      if (!v28 || (v19 = v26(3, v27, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_55:
        sub_224071EE4();
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v29 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v29)
          *(_BYTE *)(a1 + 88) = 1;
      }
LABEL_24:
      sub_224071F38((uint64_t)&v43, a1, v19);
      break;
    default:
      switch(v5)
      {
        case 'd':
          v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v7 = a2 + 8;
          v6 = v8;
          if (!v8)
            goto LABEL_55;
          v9 = v6(3, v7, 0, &unk_24EC68418, &unk_224697588);
          if (!v9)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v10 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v10)
              *(_BYTE *)(a1 + 88) = 1;
          }
          goto LABEL_11;
        case 'e':
          v32 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v31 = a2 + 8;
          v30 = v32;
          if (!v32)
            goto LABEL_55;
          v33 = v30(3, v31, 0, &unk_24EC68468, &unk_224697660);
          if (!v33)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v34 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v34)
              *(_BYTE *)(a1 + 88) = 1;
          }
          goto LABEL_42;
        case 'n':
          v37 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v36 = a2 + 8;
          v35 = v37;
          if (!v37)
            goto LABEL_55;
          v9 = v35(3, v36, 0, &unk_24EC684B8, &unk_224697738);
          if (!v9)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v38 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v38)
              *(_BYTE *)(a1 + 88) = 1;
          }
LABEL_11:
          sub_224072250((uint64_t)&v43, a1, v9);
          break;
        case 'o':
          v41 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v40 = a2 + 8;
          v39 = v41;
          if (!v41)
            goto LABEL_55;
          v33 = v39(3, v40, 0, &unk_24EC68508, &unk_224697810);
          if (!v33)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v42 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v42)
              *(_BYTE *)(a1 + 88) = 1;
          }
LABEL_42:
          sub_224072424((uint64_t)&v43, a1, v33);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_224071B38(uint64_t a1, int **a2)
{
  int *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_224071C40((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_224542510(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_224071BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224071C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224071C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224071C40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_22415363C((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_224071E90(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_224071EB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224071ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_224071EE4()
{
  std::bad_cast *exception;
  std::bad_cast *v1;

  exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
  exception->__vftable = 0;
  v1 = sub_224071F10(exception);
  __cxa_throw(v1, MEMORY[0x24BEDB728], (void (*)(void *))std::exception::~exception);
}

std::bad_cast *sub_224071F10(std::bad_cast *a1)
{
  std::bad_cast *result;

  result = std::bad_cast::bad_cast(a1);
  result->__vftable = (std::bad_cast_vtbl *)(MEMORY[0x24BEDB8A8] + 16);
  return result;
}

void sub_224071F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  sub_22454024C(a2);
  v10 = (uint64_t)"version";
  v11 = 7;
  v12 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224542048(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224542048(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v10 = 2;
  v11 = a3;
  sub_224543B18(a2, &v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 16;
  sub_224543B18(a2, &v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 32;
  sub_224542C38(a2, (uint64_t)&v10);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240720C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  sub_22454024C(a2);
  v10 = (uint64_t)"version";
  v11 = 7;
  v12 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224542048(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224542048(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v10 = 2;
  v11 = a3;
  sub_2245436F8(a2, (float **)&v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 8;
  sub_2245436F8(a2, (float **)&v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 16;
  sub_224542C38(a2, (uint64_t)&v10);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224072250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  sub_22454024C(a2);
  v11 = (uint64_t)"version";
  v12 = 7;
  v13 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224542048(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224542048(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v11 = 2;
  v12 = a3;
  sub_2245436F8(a2, (float **)&v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 8;
  sub_2245436F8(a2, (float **)&v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "distortion_coeff";
    *(_QWORD *)(a2 + 80) = 16;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 5;
  v12 = a3 + 16;
  sub_2245436F8(a2, (float **)&v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v9 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v9)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 36;
  sub_224542C38(a2, (uint64_t)&v11);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 56) = v10 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224072424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  sub_22454024C(a2);
  v11 = (uint64_t)"version";
  v12 = 7;
  v13 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224542048(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224542048(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v11 = 2;
  v12 = a3;
  sub_224543B18(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 16;
  sub_224543B18(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "distortion_coeff";
    *(_QWORD *)(a2 + 80) = 16;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 5;
  v12 = a3 + 32;
  sub_224543B18(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v9 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v9)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 72;
  sub_224542C38(a2, (uint64_t)&v11);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 56) = v10 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240725F8(uint64_t a1, uint64_t a2, int *a3)
{
  void (*v5)(uint64_t, int *, _QWORD *, _QWORD, _QWORD);
  int *v6;
  void (*v7)(uint64_t, int *, _QWORD *, _QWORD, _QWORD);
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD v14[5];

  v14[4] = *MEMORY[0x24BDAC8D0];
  sub_224555278(*(_QWORD *)(a2 + 24));
  v13 = *a3;
  v7 = (void (*)(uint64_t, int *, _QWORD *, _QWORD, _QWORD))*((_QWORD *)a3 + 1);
  v6 = a3 + 2;
  v5 = v7;
  v14[0] = 0;
  v14[1] = 0;
  if (v7)
    v5(1, v6, v14, 0, 0);
  sub_224072780(a2, (uint64_t)&v13);
  if (v14[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v14[0])(0, v14, 0, 0, 0);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 88) - 8);
  sub_224554D6C((uint64_t *)(v8 + 48), *(_QWORD *)(v8 + 16) - v9 - 9);
  v10 = *(_QWORD *)(v8 + 48);
  if (v10)
    memmove((void *)(*(_QWORD *)(v8 + 24) + v9), *(const void **)(v8 + 56), v10);
  *(_QWORD *)(v8 + 48) = 0;
  v11 = *(_QWORD *)(v8 + 80);
  v12 = *(_QWORD *)(v8 + 88) - 8;
  *(_QWORD *)(v8 + 88) = v12;
  if (v11 == v12)
  {
    std::ostream::write();
    if (*(_BYTE *)(v8 + 40))
    {
      free(*(void **)(v8 + 24));
      *(_BYTE *)(v8 + 40) = 0;
    }
  }
}

void sub_224072738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224072780(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, _QWORD, void *, void *);
  unsigned int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, _QWORD, void *, void *);
  unsigned int *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  size_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  _BYTE v113[9];
  uint64_t v114;

  v114 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD *)a2;
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    *(_QWORD *)v113 = v5 + 16;
    sub_22455A7EC((uint64_t **)v113, v4);
  }
  else
  {
    sub_22455AA60((uint64_t)v113, v5 + 8);
  }
  v6 = *(_DWORD *)a2;
  switch(v6)
  {
    case 0u:
      v14 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v13 = a2 + 8;
      v12 = v14;
      if (!v14 || (v15 = (unsigned int *)v12(3, v13, 0, &unk_24EC682D8, &unk_224697234)) == 0)
        sub_224071EE4();
      v16 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v16 + 40))
      {
        *(_QWORD *)v113 = v16 + 16;
        sub_22455A7EC((uint64_t **)v113, 2u);
      }
      else
      {
        sub_22455AA60((uint64_t)v113, v16 + 8);
      }
      sub_224555278(*(_QWORD *)(a1 + 24));
      v45 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v45 + 40))
      {
        *(_QWORD *)v113 = v45 + 16;
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15);
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15 + 1);
      }
      else
      {
        v52 = *v15;
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v52);
        std::ostream::write();
        v53 = v15[1];
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v53);
        std::ostream::write();
      }
      v54 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v54 + 40))
      {
        *(_QWORD *)v113 = v54 + 16;
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15 + 2);
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15 + 3);
      }
      else
      {
        v61 = v15[2];
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v61);
        std::ostream::write();
        v62 = v15[3];
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v62);
        std::ostream::write();
      }
      v58 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v58 + 40))
        goto LABEL_68;
      goto LABEL_125;
    case 1u:
      v28 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v27 = a2 + 8;
      v26 = v28;
      if (!v28 || (v20 = v26(3, v27, 0, &unk_24EC68328, &unk_224697308)) == 0)
        sub_224071EE4();
      v29 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v29 + 40))
      {
        *(_QWORD *)v113 = v29 + 16;
        sub_22455A7EC((uint64_t **)v113, 2u);
      }
      else
      {
        sub_22455AA60((uint64_t)v113, v29 + 8);
      }
      sub_224555278(*(_QWORD *)(a1 + 24));
      v46 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v46 + 40))
      {
        *(_QWORD *)v113 = v46 + 16;
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)v20);
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v20 + 8));
      }
      else
      {
        *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)v20);
        v113[0] = -53;
        std::ostream::write();
        v55 = *(_QWORD *)(v20 + 8);
        v113[0] = -53;
        *(_QWORD *)&v113[1] = bswap64(v55);
        std::ostream::write();
      }
      v56 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v56 + 40))
      {
        *(_QWORD *)v113 = v56 + 16;
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v20 + 16));
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v20 + 24));
      }
      else
      {
        *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)(v20 + 16));
        v113[0] = -53;
        std::ostream::write();
        v63 = *(_QWORD *)(v20 + 24);
        v113[0] = -53;
        *(_QWORD *)&v113[1] = bswap64(v63);
        std::ostream::write();
      }
      v58 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v58 + 40))
        goto LABEL_65;
      goto LABEL_125;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
      return;
    case 0xAu:
      v24 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v23 = a2 + 8;
      v22 = v24;
      if (!v24 || (v15 = (unsigned int *)v22(3, v23, 0, &unk_24EC68378, &unk_2246973DC)) == 0)
        sub_224071EE4();
      v25 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v25 + 40))
      {
        *(_QWORD *)v113 = v25 + 16;
        sub_22455A7EC((uint64_t **)v113, 2u);
      }
      else
      {
        sub_22455AA60((uint64_t)v113, v25 + 8);
      }
      sub_224555278(*(_QWORD *)(a1 + 24));
      v44 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)v113 = v44 + 16;
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15);
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15 + 1);
      }
      else
      {
        v49 = *v15;
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v49);
        std::ostream::write();
        v50 = v15[1];
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v50);
        std::ostream::write();
      }
      v51 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v51 + 40))
      {
        *(_QWORD *)v113 = v51 + 16;
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15 + 2);
        sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v15 + 3);
      }
      else
      {
        v59 = v15[2];
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v59);
        std::ostream::write();
        v60 = v15[3];
        v113[0] = -54;
        *(_DWORD *)&v113[1] = bswap32(v60);
        std::ostream::write();
      }
      v58 = *(_QWORD *)(a1 + 24);
      if (!*(_BYTE *)(v58 + 40))
        goto LABEL_125;
LABEL_68:
      *(_QWORD *)v113 = v58 + 16;
      sub_22455A7EC((uint64_t **)v113, v15[4]);
      sub_22455A7EC((uint64_t **)v113, v15[5]);
      break;
    case 0xBu:
      v19 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v18 = a2 + 8;
      v17 = v19;
      if (!v19 || (v20 = v17(3, v18, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
        sub_224071EE4();
      v21 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v21 + 40))
      {
        *(_QWORD *)v113 = v21 + 16;
        sub_22455A7EC((uint64_t **)v113, 2u);
      }
      else
      {
        sub_22455AA60((uint64_t)v113, v21 + 8);
      }
      sub_224555278(*(_QWORD *)(a1 + 24));
      v43 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v43 + 40))
      {
        *(_QWORD *)v113 = v43 + 16;
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)v20);
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v20 + 8));
      }
      else
      {
        *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)v20);
        v113[0] = -53;
        std::ostream::write();
        v47 = *(_QWORD *)(v20 + 8);
        v113[0] = -53;
        *(_QWORD *)&v113[1] = bswap64(v47);
        std::ostream::write();
      }
      v48 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v48 + 40))
      {
        *(_QWORD *)v113 = v48 + 16;
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v20 + 16));
        sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v20 + 24));
      }
      else
      {
        *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)(v20 + 16));
        v113[0] = -53;
        std::ostream::write();
        v57 = *(_QWORD *)(v20 + 24);
        v113[0] = -53;
        *(_QWORD *)&v113[1] = bswap64(v57);
        std::ostream::write();
      }
      v58 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v58 + 40))
      {
LABEL_65:
        *(_QWORD *)v113 = v58 + 16;
        sub_22455A7EC((uint64_t **)v113, *(_DWORD *)(v20 + 32));
        sub_22455A7EC((uint64_t **)v113, *(_DWORD *)(v20 + 36));
      }
      else
      {
LABEL_125:
        v106 = v58 + 8;
        sub_22455AA60((uint64_t)v113, v58 + 8);
        sub_22455AA60((uint64_t)v113, v106);
      }
      break;
    default:
      switch(v6)
      {
        case 'd':
          v9 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v8 = a2 + 8;
          v7 = v9;
          if (!v9 || (v10 = (unsigned int *)v7(3, v8, 0, &unk_24EC68418, &unk_224697588)) == 0)
            sub_224071EE4();
          v11 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v11 + 40))
          {
            *(_QWORD *)v113 = v11 + 16;
            sub_22455A7EC((uint64_t **)v113, 2u);
          }
          else
          {
            sub_22455AA60((uint64_t)v113, v11 + 8);
          }
          sub_224555278(*(_QWORD *)(a1 + 24));
          v66 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v66 + 40))
          {
            *(_QWORD *)v113 = v66 + 16;
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 1);
          }
          else
          {
            v73 = *v10;
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v73);
            std::ostream::write();
            v74 = v10[1];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v74);
            std::ostream::write();
          }
          v75 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v75 + 40))
          {
            *(_QWORD *)v113 = v75 + 16;
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 2);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 3);
          }
          else
          {
            v83 = v10[2];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v83);
            std::ostream::write();
            v84 = v10[3];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v84);
            std::ostream::write();
          }
          v85 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v85 + 40))
          {
            *(_QWORD *)v113 = v85 + 16;
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 4);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 5);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 6);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 7);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 8);
          }
          else
          {
            v97 = v10[4];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v97);
            std::ostream::write();
            v98 = v10[5];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v98);
            std::ostream::write();
            v99 = v10[6];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v99);
            std::ostream::write();
            v100 = v10[7];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v100);
            std::ostream::write();
            v101 = v10[8];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v101);
            std::ostream::write();
          }
          v58 = *(_QWORD *)(a1 + 24);
          if (!*(_BYTE *)(v58 + 40))
            goto LABEL_125;
          goto LABEL_119;
        case 'e':
          v41 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v40 = a2 + 8;
          v39 = v41;
          if (!v41 || (v33 = v39(3, v40, 0, &unk_24EC68468, &unk_224697660)) == 0)
            sub_224071EE4();
          v42 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v42 + 40))
          {
            *(_QWORD *)v113 = v42 + 16;
            sub_22455A7EC((uint64_t **)v113, 2u);
          }
          else
          {
            sub_22455AA60((uint64_t)v113, v42 + 8);
          }
          sub_224555278(*(_QWORD *)(a1 + 24));
          v67 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v67 + 40))
          {
            *(_QWORD *)v113 = v67 + 16;
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)v33);
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 8));
          }
          else
          {
            *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)v33);
            v113[0] = -53;
            std::ostream::write();
            v76 = *(_QWORD *)(v33 + 8);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v76);
            std::ostream::write();
          }
          v77 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v77 + 40))
          {
            *(_QWORD *)v113 = v77 + 16;
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 16));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 24));
          }
          else
          {
            *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)(v33 + 16));
            v113[0] = -53;
            std::ostream::write();
            v86 = *(_QWORD *)(v33 + 24);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v86);
            std::ostream::write();
          }
          v87 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v87 + 40))
          {
            *(_QWORD *)v113 = v87 + 16;
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 32));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 40));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 48));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 56));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 64));
          }
          else
          {
            *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)(v33 + 32));
            v113[0] = -53;
            std::ostream::write();
            v102 = *(_QWORD *)(v33 + 40);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v102);
            std::ostream::write();
            v103 = *(_QWORD *)(v33 + 48);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v103);
            std::ostream::write();
            v104 = *(_QWORD *)(v33 + 56);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v104);
            std::ostream::write();
            v105 = *(_QWORD *)(v33 + 64);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v105);
            std::ostream::write();
          }
          v58 = *(_QWORD *)(a1 + 24);
          if (!*(_BYTE *)(v58 + 40))
            goto LABEL_125;
          goto LABEL_116;
        case 'n':
          v37 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v36 = a2 + 8;
          v35 = v37;
          if (!v37 || (v10 = (unsigned int *)v35(3, v36, 0, &unk_24EC684B8, &unk_224697738)) == 0)
            sub_224071EE4();
          v38 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v38 + 40))
          {
            *(_QWORD *)v113 = v38 + 16;
            sub_22455A7EC((uint64_t **)v113, 2u);
          }
          else
          {
            sub_22455AA60((uint64_t)v113, v38 + 8);
          }
          sub_224555278(*(_QWORD *)(a1 + 24));
          v65 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v65 + 40))
          {
            *(_QWORD *)v113 = v65 + 16;
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 1);
          }
          else
          {
            v70 = *v10;
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v70);
            std::ostream::write();
            v71 = v10[1];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v71);
            std::ostream::write();
          }
          v72 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v72 + 40))
          {
            *(_QWORD *)v113 = v72 + 16;
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 2);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 3);
          }
          else
          {
            v80 = v10[2];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v80);
            std::ostream::write();
            v81 = v10[3];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v81);
            std::ostream::write();
          }
          v82 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v82 + 40))
          {
            *(_QWORD *)v113 = v82 + 16;
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 4);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 5);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 6);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 7);
            sub_22455B5CC((uint64_t)&v112, (uint64_t **)v113, v10 + 8);
          }
          else
          {
            v92 = v10[4];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v92);
            std::ostream::write();
            v93 = v10[5];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v93);
            std::ostream::write();
            v94 = v10[6];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v94);
            std::ostream::write();
            v95 = v10[7];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v95);
            std::ostream::write();
            v96 = v10[8];
            v113[0] = -54;
            *(_DWORD *)&v113[1] = bswap32(v96);
            std::ostream::write();
          }
          v58 = *(_QWORD *)(a1 + 24);
          if (!*(_BYTE *)(v58 + 40))
            goto LABEL_125;
LABEL_119:
          *(_QWORD *)v113 = v58 + 16;
          sub_22455A7EC((uint64_t **)v113, v10[9]);
          sub_22455A7EC((uint64_t **)v113, v10[10]);
          goto LABEL_126;
        case 'o':
          v32 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v31 = a2 + 8;
          v30 = v32;
          if (!v32 || (v33 = v30(3, v31, 0, &unk_24EC68508, &unk_224697810)) == 0)
            sub_224071EE4();
          v34 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v34 + 40))
          {
            *(_QWORD *)v113 = v34 + 16;
            sub_22455A7EC((uint64_t **)v113, 2u);
          }
          else
          {
            sub_22455AA60((uint64_t)v113, v34 + 8);
          }
          sub_224555278(*(_QWORD *)(a1 + 24));
          v64 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v64 + 40))
          {
            *(_QWORD *)v113 = v64 + 16;
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)v33);
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 8));
          }
          else
          {
            *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)v33);
            v113[0] = -53;
            std::ostream::write();
            v68 = *(_QWORD *)(v33 + 8);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v68);
            std::ostream::write();
          }
          v69 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v69 + 40))
          {
            *(_QWORD *)v113 = v69 + 16;
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 16));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 24));
          }
          else
          {
            *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)(v33 + 16));
            v113[0] = -53;
            std::ostream::write();
            v78 = *(_QWORD *)(v33 + 24);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v78);
            std::ostream::write();
          }
          v79 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v79 + 40))
          {
            *(_QWORD *)v113 = v79 + 16;
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 32));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 40));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 48));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 56));
            sub_22455B6A8((uint64_t)&v112, (uint64_t **)v113, (unint64_t *)(v33 + 64));
          }
          else
          {
            *(_QWORD *)&v113[1] = bswap64(*(_QWORD *)(v33 + 32));
            v113[0] = -53;
            std::ostream::write();
            v88 = *(_QWORD *)(v33 + 40);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v88);
            std::ostream::write();
            v89 = *(_QWORD *)(v33 + 48);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v89);
            std::ostream::write();
            v90 = *(_QWORD *)(v33 + 56);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v90);
            std::ostream::write();
            v91 = *(_QWORD *)(v33 + 64);
            v113[0] = -53;
            *(_QWORD *)&v113[1] = bswap64(v91);
            std::ostream::write();
          }
          v58 = *(_QWORD *)(a1 + 24);
          if (!*(_BYTE *)(v58 + 40))
            goto LABEL_125;
LABEL_116:
          *(_QWORD *)v113 = v58 + 16;
          sub_22455A7EC((uint64_t **)v113, *(_DWORD *)(v33 + 72));
          sub_22455A7EC((uint64_t **)v113, *(_DWORD *)(v33 + 76));
          goto LABEL_126;
        default:
          return;
      }
  }
LABEL_126:
  v107 = *(_QWORD *)(a1 + 24);
  v108 = *(_QWORD *)(*(_QWORD *)(v107 + 88) - 8);
  sub_224554D6C((uint64_t *)(v107 + 48), *(_QWORD *)(v107 + 16) - v108 - 9);
  v109 = *(_QWORD *)(v107 + 48);
  if (v109)
    memmove((void *)(*(_QWORD *)(v107 + 24) + v108), *(const void **)(v107 + 56), v109);
  *(_QWORD *)(v107 + 48) = 0;
  v110 = *(_QWORD *)(v107 + 80);
  v111 = *(_QWORD *)(v107 + 88) - 8;
  *(_QWORD *)(v107 + 88) = v111;
  if (v110 == v111)
  {
    std::ostream::write();
    if (*(_BYTE *)(v107 + 40))
    {
      free(*(void **)(v107 + 24));
      *(_BYTE *)(v107 + 40) = 0;
    }
  }
}

void sub_224073BE0(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

void sub_224073C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  void (*v6)(uint64_t, uint64_t, uint64_t *, _QWORD, _QWORD);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t *, _QWORD, _QWORD);
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  _QWORD v12[4];

  v12[3] = *MEMORY[0x24BDAC8D0];
  sub_22453FAE0(a2);
  v10 = "version";
  v11 = 7;
  LODWORD(v12[0]) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, v12);
  LODWORD(v10) = *(_DWORD *)a3;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t *, _QWORD, _QWORD))(a3 + 8);
  v7 = a3 + 8;
  v6 = v8;
  v11 = 0;
  v12[0] = 0;
  if (v8)
    v6(1, v7, &v11, 0, 0);
  sub_224073DA4(a2, (uint64_t)&v10);
  if (v11)
    ((void (*)(_QWORD, uint64_t *, _QWORD, _QWORD, _QWORD))v11)(0, &v11, 0, 0, 0);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224073D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224073DA4(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v9;
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v14;
  int v15;
  uint64_t (*v16)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v24;
  int v25;
  uint64_t (*v26)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, _QWORD, void *, void *);
  int v29;
  uint64_t (*v30)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v33;
  int v34;
  uint64_t (*v35)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, _QWORD, void *, void *);
  int v38;
  uint64_t (*v39)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, _QWORD, void *, void *);
  int v42;
  int *v43;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "camera_type";
    *(_QWORD *)(a1 + 80) = 11;
    if (!v4)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v43 = (int *)a2;
  sub_224074248(a1, &v43);
  v5 = *(_DWORD *)a2;
  switch(v5)
  {
    case 0:
      v13 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v12 = a2 + 8;
      v11 = v13;
      if (!v13)
        goto LABEL_55;
      v14 = v11(3, v12, 0, &unk_24EC682D8, &unk_224697234);
      if (!v14)
        goto LABEL_55;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v15 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v15)
          *(_BYTE *)(a1 + 88) = 1;
      }
      sub_223B9E69C((uint64_t)&v43, a1, v14);
      return;
    case 1:
      v18 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v17 = a2 + 8;
      v16 = v18;
      if (!v18)
        goto LABEL_55;
      v19 = v16(3, v17, 0, &unk_24EC68328, &unk_224697308);
      if (!v19)
        goto LABEL_55;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v20 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v20)
          *(_BYTE *)(a1 + 88) = 1;
      }
      goto LABEL_24;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v23 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v22 = a2 + 8;
      v21 = v23;
      if (!v23)
        goto LABEL_55;
      v24 = v21(3, v22, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v24)
        goto LABEL_55;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v25 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v25)
          *(_BYTE *)(a1 + 88) = 1;
      }
      sub_2240744DC((uint64_t)&v43, a1, v24);
      return;
    case 11:
      v28 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v27 = a2 + 8;
      v26 = v28;
      if (!v28 || (v19 = v26(3, v27, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_55:
        sub_224071EE4();
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v29 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "camera";
        *(_QWORD *)(a1 + 80) = 6;
        if (!v29)
          *(_BYTE *)(a1 + 88) = 1;
      }
LABEL_24:
      sub_224074350((uint64_t)&v43, a1, v19);
      break;
    default:
      switch(v5)
      {
        case 'd':
          v8 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v7 = a2 + 8;
          v6 = v8;
          if (!v8)
            goto LABEL_55;
          v9 = v6(3, v7, 0, &unk_24EC68418, &unk_224697588);
          if (!v9)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v10 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v10)
              *(_BYTE *)(a1 + 88) = 1;
          }
          goto LABEL_11;
        case 'e':
          v32 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v31 = a2 + 8;
          v30 = v32;
          if (!v32)
            goto LABEL_55;
          v33 = v30(3, v31, 0, &unk_24EC68468, &unk_224697660);
          if (!v33)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v34 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v34)
              *(_BYTE *)(a1 + 88) = 1;
          }
          goto LABEL_42;
        case 'n':
          v37 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v36 = a2 + 8;
          v35 = v37;
          if (!v37)
            goto LABEL_55;
          v9 = v35(3, v36, 0, &unk_24EC684B8, &unk_224697738);
          if (!v9)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v38 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v38)
              *(_BYTE *)(a1 + 88) = 1;
          }
LABEL_11:
          sub_224074668((uint64_t)&v43, a1, v9);
          break;
        case 'o':
          v41 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v40 = a2 + 8;
          v39 = v41;
          if (!v41)
            goto LABEL_55;
          v33 = v39(3, v40, 0, &unk_24EC68508, &unk_224697810);
          if (!v33)
            goto LABEL_55;
          if (**(unsigned __int8 **)(a1 + 40) <= 1u)
          {
            v42 = *(unsigned __int8 *)(a1 + 88);
            *(_QWORD *)(a1 + 72) = "camera";
            *(_QWORD *)(a1 + 80) = 6;
            if (!v42)
              *(_BYTE *)(a1 + 88) = 1;
          }
LABEL_42:
          sub_22407483C((uint64_t)&v43, a1, v33);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_224074248(uint64_t a1, int **a2)
{
  int *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_224071C40((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_22316DD70();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24EC66D10[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24EC66CF8[v7])(&v9, v6);
  sub_2245409C8(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_22407430C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224074328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407433C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224074350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  sub_22453FAE0(a2);
  v10 = (uint64_t)"version";
  v11 = 7;
  v12 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224540500(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224540500(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v10 = 2;
  v11 = a3;
  sub_224541B78(a2, &v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 16;
  sub_224541B78(a2, &v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 32;
  sub_224540FB8(a2, (uint64_t)&v10);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240744DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  sub_22453FAE0(a2);
  v10 = (uint64_t)"version";
  v11 = 7;
  v12 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224540500(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224540500(a2, &v12);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v10 = 2;
  v11 = a3;
  sub_224541808(a2, &v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 8;
  sub_224541808(a2, &v10);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v10 = 2;
  v11 = a3 + 16;
  sub_224540FB8(a2, (uint64_t)&v10);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(a2 + 56) = v9 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224074668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  sub_22453FAE0(a2);
  v11 = (uint64_t)"version";
  v12 = 7;
  v13 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224540500(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224540500(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v11 = 2;
  v12 = a3;
  sub_224541808(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 8;
  sub_224541808(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "distortion_coeff";
    *(_QWORD *)(a2 + 80) = 16;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 5;
  v12 = a3 + 16;
  sub_224541808(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v9 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v9)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 36;
  sub_224540FB8(a2, (uint64_t)&v11);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 56) = v10 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22407483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  sub_22453FAE0(a2);
  v11 = (uint64_t)"version";
  v12 = 7;
  v13 = 2;
  if (**(unsigned __int8 **)(a2 + 40) > 1u
    || (v5 = *(unsigned __int8 *)(a2 + 88), *(_QWORD *)(a2 + 72) = "version", *(_QWORD *)(a2 + 80) = 7, v5))
  {
    sub_224540500(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  else
  {
    *(_BYTE *)(a2 + 88) = 1;
    sub_224540500(a2, &v13);
    if (**(unsigned __int8 **)(a2 + 40) > 1u)
      goto LABEL_7;
  }
  v6 = *(unsigned __int8 *)(a2 + 88);
  *(_QWORD *)(a2 + 72) = "focal_length";
  *(_QWORD *)(a2 + 80) = 12;
  if (!v6)
    *(_BYTE *)(a2 + 88) = 1;
LABEL_7:
  v11 = 2;
  v12 = a3;
  sub_224541B78(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v7 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "principal_point";
    *(_QWORD *)(a2 + 80) = 15;
    if (!v7)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 16;
  sub_224541B78(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v8 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "distortion_coeff";
    *(_QWORD *)(a2 + 80) = 16;
    if (!v8)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 5;
  v12 = a3 + 32;
  sub_224541B78(a2, &v11);
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v9 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "image_size";
    *(_QWORD *)(a2 + 80) = 10;
    if (!v9)
      *(_BYTE *)(a2 + 88) = 1;
  }
  v11 = 2;
  v12 = a3 + 72;
  sub_224540FB8(a2, (uint64_t)&v11);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(a2 + 56) = v10 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_224074A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD);
  void (*v6)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD);
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *result;
  int v11;
  _QWORD v12[5];

  v12[4] = *MEMORY[0x24BDAC8D0];
  v11 = *(_DWORD *)a3;
  v6 = *(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD))(a3 + 8);
  v4 = a3 + 8;
  v5 = v6;
  v12[0] = 0;
  v12[1] = 0;
  if (v6)
    v5(1, v4, v12, 0, 0);
  sub_224074B5C(a2, &v11);
  if (v12[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v12[0])(0, v12, 0, 0, 0);
  v7 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v8 = *(_QWORD **)(a2 + 24);
    LOBYTE(v11) = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v8, (uint64_t)&v11, 1);
  }
  v9 = *(_QWORD **)(a2 + 24);
  LOBYTE(v11) = v7;
  result = sub_2231813E8(v9, (uint64_t)&v11, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_224074B14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_224074B5C(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t result;
  int v6;
  uint64_t (*v7)(uint64_t, int *, _QWORD, void *, void *);
  int *v8;
  uint64_t (*v9)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v10;
  uint64_t (*v11)(uint64_t, int *, _QWORD, void *, void *);
  int *v12;
  uint64_t (*v13)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, int *, _QWORD, void *, void *);
  int *v16;
  uint64_t (*v17)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, int *, _QWORD, void *, void *);
  int *v20;
  uint64_t (*v21)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, int *, _QWORD, void *, void *);
  int *v35;
  uint64_t (*v36)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, int *, _QWORD, void *, void *);
  int *v50;
  uint64_t (*v51)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v52;
  uint64_t (*v53)(uint64_t, int *, _QWORD, void *, void *);
  int *v54;
  uint64_t (*v55)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, int *, _QWORD, void *, void *);
  int *v79;
  uint64_t (*v80)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  char v105;
  _QWORD *v106;
  _QWORD *v107;
  char v108;

  if (*(_QWORD *)(a1 + 40))
  {
    v4 = *(_QWORD **)(a1 + 24);
    v108 = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v4, (uint64_t)&v108, 1);
  }
  result = std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v6 = *a2;
  switch(v6)
  {
    case 0:
      v13 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v12 = a2 + 2;
      v11 = v13;
      if (!v13)
        goto LABEL_105;
      v14 = v11(3, v12, 0, &unk_24EC682D8, &unk_224697234);
      goto LABEL_14;
    case 1:
      v17 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v16 = a2 + 2;
      v15 = v17;
      if (!v17)
        goto LABEL_105;
      v18 = v15(3, v16, 0, &unk_24EC68328, &unk_224697308);
      goto LABEL_31;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return result;
    case 10:
      v21 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v20 = a2 + 2;
      v19 = v21;
      if (!v21)
        goto LABEL_105;
      v14 = v19(3, v20, 0, &unk_24EC68378, &unk_2246973DC);
LABEL_14:
      if (!v14)
        goto LABEL_105;
      if (*(_QWORD *)(a1 + 40))
      {
        v22 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v22, (uint64_t)&v108, 1);
      }
      std::ostream::operator<<();
      v23 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v23 + 1;
      if (v23 != -1)
      {
        v24 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v24, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v25 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v25 + 1;
      if (v25 != -1)
      {
        v26 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v26, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v27 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v27 + 1;
      if (v27 != -1)
      {
        v28 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v28, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v29 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v29 + 1;
      if (v29 != -1)
      {
        v30 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v30, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v31 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v31 + 1;
      if (v31 != -1)
      {
        v32 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v32, (uint64_t)&v108, 1);
      }
      std::ostream::operator<<();
      v33 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v33 + 1;
      if (v33 == -1)
        goto LABEL_102;
      goto LABEL_101;
    case 11:
      v36 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v35 = a2 + 2;
      v34 = v36;
      if (!v36)
        goto LABEL_105;
      v18 = v34(3, v35, 0, &unk_24EC683C8, &unk_2246974B0);
LABEL_31:
      if (!v18)
LABEL_105:
        sub_224071EE4();
      if (*(_QWORD *)(a1 + 40))
      {
        v37 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v37, (uint64_t)&v108, 1);
      }
      std::ostream::operator<<();
      v38 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v38 + 1;
      if (v38 != -1)
      {
        v39 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v39, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v40 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v40 + 1;
      if (v40 != -1)
      {
        v41 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v41, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v42 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v42 + 1;
      if (v42 != -1)
      {
        v43 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v43, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v44 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v44 + 1;
      if (v44 != -1)
      {
        v45 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v45, (uint64_t)&v108, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v46 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v46 + 1;
      if (v46 != -1)
      {
        v47 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v47, (uint64_t)&v108, 1);
      }
      std::ostream::operator<<();
      v48 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v48 + 1;
      if (v48 == -1)
        goto LABEL_102;
LABEL_101:
      v103 = *(_QWORD **)(a1 + 24);
      v108 = *(_BYTE *)(a1 + 32);
      sub_2231813E8(v103, (uint64_t)&v108, 1);
LABEL_102:
      std::ostream::operator<<();
      v104 = *(_QWORD *)(a1 + 40);
      v105 = *(_BYTE *)(a1 + 34);
      *(_QWORD *)(a1 + 40) = v104 + 1;
      if (v104 != -1)
      {
        v106 = *(_QWORD **)(a1 + 24);
        v108 = *(_BYTE *)(a1 + 32);
        sub_2231813E8(v106, (uint64_t)&v108, 1);
      }
      v107 = *(_QWORD **)(a1 + 24);
      v108 = v105;
      result = (uint64_t)sub_2231813E8(v107, (uint64_t)&v108, 1);
      ++*(_QWORD *)(a1 + 40);
      return result;
    default:
      switch(v6)
      {
        case 'd':
          v9 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v8 = a2 + 2;
          v7 = v9;
          if (!v9)
            goto LABEL_105;
          v10 = v7(3, v8, 0, &unk_24EC68418, &unk_224697588);
          goto LABEL_50;
        case 'e':
          v51 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v50 = a2 + 2;
          v49 = v51;
          if (!v51)
            goto LABEL_105;
          v52 = v49(3, v50, 0, &unk_24EC68468, &unk_224697660);
          goto LABEL_77;
        case 'n':
          v55 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v54 = a2 + 2;
          v53 = v55;
          if (!v55)
            goto LABEL_105;
          v10 = v53(3, v54, 0, &unk_24EC684B8, &unk_224697738);
LABEL_50:
          if (!v10)
            goto LABEL_105;
          if (*(_QWORD *)(a1 + 40))
          {
            v56 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v56, (uint64_t)&v108, 1);
          }
          std::ostream::operator<<();
          v57 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v57 + 1;
          if (v57 != -1)
          {
            v58 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v58, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v59 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v59 + 1;
          if (v59 != -1)
          {
            v60 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v60, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v61 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v61 + 1;
          if (v61 != -1)
          {
            v62 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v62, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v63 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v63 + 1;
          if (v63 != -1)
          {
            v64 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v64, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v65 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v65 + 1;
          if (v65 != -1)
          {
            v66 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v66, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v67 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v67 + 1;
          if (v67 != -1)
          {
            v68 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v68, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v69 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v69 + 1;
          if (v69 != -1)
          {
            v70 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v70, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v71 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v71 + 1;
          if (v71 != -1)
          {
            v72 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v72, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v73 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v73 + 1;
          if (v73 != -1)
          {
            v74 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v74, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
          std::ostream::operator<<();
          v75 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v75 + 1;
          if (v75 != -1)
          {
            v76 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v76, (uint64_t)&v108, 1);
          }
          std::ostream::operator<<();
          v77 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v77 + 1;
          if (v77 == -1)
            goto LABEL_102;
          goto LABEL_101;
        case 'o':
          v80 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v79 = a2 + 2;
          v78 = v80;
          if (!v80)
            goto LABEL_105;
          v52 = v78(3, v79, 0, &unk_24EC68508, &unk_224697810);
LABEL_77:
          if (!v52)
            goto LABEL_105;
          if (*(_QWORD *)(a1 + 40))
          {
            v81 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v81, (uint64_t)&v108, 1);
          }
          std::ostream::operator<<();
          v82 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v82 + 1;
          if (v82 != -1)
          {
            v83 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v83, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v84 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v84 + 1;
          if (v84 != -1)
          {
            v85 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v85, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v86 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v86 + 1;
          if (v86 != -1)
          {
            v87 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v87, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v88 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v88 + 1;
          if (v88 != -1)
          {
            v89 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v89, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v90 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v90 + 1;
          if (v90 != -1)
          {
            v91 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v91, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v92 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v92 + 1;
          if (v92 != -1)
          {
            v93 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v93, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v94 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v94 + 1;
          if (v94 != -1)
          {
            v95 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v95, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v96 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v96 + 1;
          if (v96 != -1)
          {
            v97 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v97, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v98 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v98 + 1;
          if (v98 != -1)
          {
            v99 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v99, (uint64_t)&v108, 1);
          }
          *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
          std::ostream::operator<<();
          v100 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v100 + 1;
          if (v100 != -1)
          {
            v101 = *(_QWORD **)(a1 + 24);
            v108 = *(_BYTE *)(a1 + 32);
            sub_2231813E8(v101, (uint64_t)&v108, 1);
          }
          std::ostream::operator<<();
          v102 = *(_QWORD *)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v102 + 1;
          if (v102 != -1)
            goto LABEL_101;
          goto LABEL_102;
        default:
          return result;
      }
  }
}

char *sub_224075740(uint64_t a1, _QWORD *a2, int *a3)
{
  void (*v5)(uint64_t, int *, _QWORD *, _QWORD, _QWORD);
  int *v6;
  void (*v7)(uint64_t, int *, _QWORD *, _QWORD, _QWORD);
  char *result;
  int v9;
  _QWORD v10[5];

  v10[4] = *MEMORY[0x24BDAC8D0];
  sub_2244FF590(a2);
  v9 = *a3;
  v7 = (void (*)(uint64_t, int *, _QWORD *, _QWORD, _QWORD))*((_QWORD *)a3 + 1);
  v6 = a3 + 2;
  v5 = v7;
  v10[0] = 0;
  v10[1] = 0;
  if (v7)
    v5(1, v6, v10, 0, 0);
  result = sub_22407587C((uint64_t)a2, (uint64_t)&v9);
  if (v10[0])
    result = (char *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v10[0])(0, v10, 0, 0, 0);
  *(_QWORD *)(*(_QWORD *)(a2[7] - 8) + a2[3] + 10) = a2[4] - (*(_QWORD *)(a2[7] - 8) + a2[3]) - 18;
  a2[7] -= 8;
  return result;
}

void sub_224075834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_22316DC48(exception_object);
}

char *sub_22407587C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  int v6;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, _QWORD, void *, void *);
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, _QWORD, void *, void *);
  char *v33;
  char *v34;
  uint64_t (*v35)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, _QWORD, void *, void *);
  char *v42;
  char *v43;
  uint64_t (*v44)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t, _QWORD, void *, void *);
  char *v47;
  char *v48;
  uint64_t v49;
  int __src;
  uint64_t v51;

  __src = *(_DWORD *)a2;
  v4 = a1 + 24;
  result = sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v51, 4);
  v6 = *(_DWORD *)a2;
  switch(v6)
  {
    case 0:
      v13 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v12 = a2 + 8;
      v11 = v13;
      if (!v13)
        goto LABEL_29;
      v14 = v11(3, v12, 0, &unk_24EC682D8, &unk_224697234);
      goto LABEL_12;
    case 1:
      v17 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v16 = a2 + 8;
      v15 = v17;
      if (!v17)
        goto LABEL_29;
      v18 = v15(3, v16, 0, &unk_24EC68328, &unk_224697308);
      goto LABEL_16;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return result;
    case 10:
      v21 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v20 = a2 + 8;
      v19 = v21;
      if (!v21)
        goto LABEL_29;
      v14 = v19(3, v20, 0, &unk_24EC68378, &unk_2246973DC);
LABEL_12:
      v22 = (char *)v14;
      if (!v14)
        goto LABEL_29;
      __src = 2;
      sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v51, 4);
      sub_2244FF590((_QWORD *)a1);
      v23 = v22 + 8;
      sub_224501B60(v4, *(char **)(a1 + 32), v22, v22 + 8, 8);
      v24 = *(char **)(a1 + 32);
      v25 = v22 + 16;
      v26 = v4;
      v27 = v23;
      v28 = v25;
      v29 = 8;
      break;
    case 11:
      v32 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v31 = a2 + 8;
      v30 = v32;
      if (!v32)
        goto LABEL_29;
      v18 = v30(3, v31, 0, &unk_24EC683C8, &unk_2246974B0);
LABEL_16:
      v33 = (char *)v18;
      if (!v18)
LABEL_29:
        sub_224071EE4();
      __src = 2;
      sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v51, 4);
      sub_2244FF590((_QWORD *)a1);
      v34 = v33 + 16;
      sub_224501B60(v4, *(char **)(a1 + 32), v33, v33 + 16, 16);
      v24 = *(char **)(a1 + 32);
      v25 = v33 + 32;
      v26 = v4;
      v27 = v34;
      v28 = v25;
      v29 = 16;
      break;
    default:
      switch(v6)
      {
        case 'd':
          v9 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v8 = a2 + 8;
          v7 = v9;
          if (!v9)
            goto LABEL_29;
          v10 = v7(3, v8, 0, &unk_24EC68418, &unk_224697588);
          goto LABEL_22;
        case 'e':
          v37 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v36 = a2 + 8;
          v35 = v37;
          if (!v37)
            goto LABEL_29;
          v38 = v35(3, v36, 0, &unk_24EC68468, &unk_224697660);
          goto LABEL_26;
        case 'n':
          v41 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v40 = a2 + 8;
          v39 = v41;
          if (!v41)
            goto LABEL_29;
          v10 = v39(3, v40, 0, &unk_24EC684B8, &unk_224697738);
LABEL_22:
          v42 = (char *)v10;
          if (!v10)
            goto LABEL_29;
          __src = 2;
          sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v51, 4);
          sub_2244FF590((_QWORD *)a1);
          sub_224501B60(v4, *(char **)(a1 + 32), v42, v42 + 8, 8);
          v43 = v42 + 16;
          sub_224501B60(v4, *(char **)(a1 + 32), v42 + 8, v42 + 16, 8);
          v24 = *(char **)(a1 + 32);
          v25 = v42 + 36;
          v26 = v4;
          v27 = v43;
          v28 = v25;
          v29 = 20;
          break;
        case 'o':
          v46 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v45 = a2 + 8;
          v44 = v46;
          if (!v46)
            goto LABEL_29;
          v38 = v44(3, v45, 0, &unk_24EC68508, &unk_224697810);
LABEL_26:
          v47 = (char *)v38;
          if (!v38)
            goto LABEL_29;
          __src = 2;
          sub_224501B60(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v51, 4);
          sub_2244FF590((_QWORD *)a1);
          sub_224501B60(v4, *(char **)(a1 + 32), v47, v47 + 16, 16);
          v48 = v47 + 32;
          sub_224501B60(v4, *(char **)(a1 + 32), v47 + 16, v47 + 32, 16);
          v24 = *(char **)(a1 + 32);
          v25 = v47 + 72;
          v26 = v4;
          v27 = v48;
          v28 = v25;
          v29 = 40;
          break;
        default:
          return result;
      }
      break;
  }
  sub_224501B60(v26, v24, v27, v28, v29);
  result = sub_224501B60(v4, *(char **)(a1 + 32), v25, v25 + 8, 8);
  v49 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v49 + 10) = *(_QWORD *)(a1 + 32) - v49 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  return result;
}

void sub_224075CC0(int *a1, uint64_t a2, uint64_t a3)
{
  void (*v6)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD);
  int v9;
  _QWORD v10[5];

  v10[4] = *MEMORY[0x24BDAC8D0];
  v9 = 2;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v9);
  if (*a1 < 1)
  {
    v9 = *(_DWORD *)a3;
    v8 = *(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD))(a3 + 8);
    v7 = a3 + 8;
    v6 = v8;
    v10[0] = 0;
    v10[1] = 0;
    if (v8)
      v6(1, v7, v10, 0, 0);
    sub_224075F84(a2, (uint64_t)&v9);
    if (v10[0])
      ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v10[0])(0, v10, 0, 0, 0);
  }
  else
  {
    sub_224075E10(a1, a2, a3);
  }
}

void sub_224075DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224075E10(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  void (*v7)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD);
  int v10;
  _QWORD v11[5];

  v11[4] = *MEMORY[0x24BDAC8D0];
  v5 = *a1;
  if (*a1 == 2)
  {
    v10 = 2;
    (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v10);
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  v10 = *(_DWORD *)a3;
  v9 = *(void (**)(uint64_t, uint64_t, _QWORD *, _QWORD, _QWORD))(a3 + 8);
  v8 = a3 + 8;
  v7 = v9;
  v11[0] = 0;
  v11[1] = 0;
  if (v9)
    v7(1, v8, v11, 0, 0);
  sub_224075F84(a2, (uint64_t)&v10);
  if (v11[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v11[0])(0, v11, 0, 0, 0);
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
}

void sub_224075F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224075F84(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t (*v5)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t (*v20)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t (*v23)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t (*v30)(uint64_t, uint64_t, _QWORD, void *, void *);
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, _QWORD, void *, void *);
  int *v33;

  v33 = (int *)a2;
  sub_2240762B4((_BYTE *)a1, &v33);
  v4 = *(_DWORD *)a2;
  switch(v4)
  {
    case 0:
      v11 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v10 = a2 + 8;
      v9 = v11;
      if (v11)
      {
        v12 = v9(3, v10, 0, &unk_24EC682D8, &unk_224697234);
        if (v12)
          goto LABEL_9;
      }
      goto LABEL_27;
    case 1:
      v15 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v14 = a2 + 8;
      v13 = v15;
      if (v15)
      {
        v16 = v13(3, v14, 0, &unk_24EC68328, &unk_224697308);
        if (v16)
          goto LABEL_12;
      }
      goto LABEL_27;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v19 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v18 = a2 + 8;
      v17 = v19;
      if (!v19)
        goto LABEL_27;
      v12 = v17(3, v18, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v12)
        goto LABEL_27;
LABEL_9:
      v33 = *(int **)(a1 + 8);
      sub_223BB2530((int *)&v33, a1, v12);
      break;
    case 11:
      v22 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
      v21 = a2 + 8;
      v20 = v22;
      if (!v22 || (v16 = v20(3, v21, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_27:
        sub_224071EE4();
LABEL_12:
      v33 = *(int **)(a1 + 8);
      sub_2240763EC((int *)&v33, a1, v16);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v6 = a2 + 8;
          v5 = v7;
          if (v7)
          {
            v8 = v5(3, v6, 0, &unk_24EC68418, &unk_224697588);
            if (v8)
              goto LABEL_5;
          }
          goto LABEL_27;
        case 'e':
          v25 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v24 = a2 + 8;
          v23 = v25;
          if (v25)
          {
            v26 = v23(3, v24, 0, &unk_24EC68468, &unk_224697660);
            if (v26)
              goto LABEL_21;
          }
          goto LABEL_27;
        case 'n':
          v29 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v28 = a2 + 8;
          v27 = v29;
          if (!v29)
            goto LABEL_27;
          v8 = v27(3, v28, 0, &unk_24EC684B8, &unk_224697738);
          if (!v8)
            goto LABEL_27;
LABEL_5:
          v33 = *(int **)(a1 + 8);
          sub_2240765A8((int *)&v33, a1, v8);
          break;
        case 'o':
          v32 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, void *, void *))(a2 + 8);
          v31 = a2 + 8;
          v30 = v32;
          if (!v32)
            goto LABEL_27;
          v26 = v30(3, v31, 0, &unk_24EC68508, &unk_224697810);
          if (!v26)
            goto LABEL_27;
LABEL_21:
          v33 = *(int **)(a1 + 8);
          sub_224076874((int *)&v33, a1, v26);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_2240762B4(_BYTE *a1, int **a2)
{
  int *v3;
  void *__p[2];
  char v5;
  _DWORD v6[6];
  int v7;
  char v8;
  char *v9;

  if ((a1[12] & 2) != 0)
  {
    v3 = *a2;
    v7 = 0;
    sub_224071C40((uint64_t)&v9, (uint64_t)v6, v3);
    if (v7 == -1)
      sub_22316DD70();
    v9 = &v8;
    ((void (*)(void **__return_ptr, char **, _DWORD *))off_24EC66D10[v7])(__p, &v9, v6);
    if (v7 != -1)
      ((void (*)(char **, _DWORD *))off_24EC66CF8[v7])(&v9, v6);
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    if (v5 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6[0] = **a2;
    (*(void (**)(_BYTE *, _DWORD *))(*(_QWORD *)a1 + 104))(a1, v6);
  }
}

void sub_2240763A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240763C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240763D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2240763EC(int *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t result;
  int v8;
  int v9;

  v8 = 2;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v8);
  if (*a1 < 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 32);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 36);
  }
  else
  {
    if (*a1 == 2 && (v9 = 2, (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v9), *a1 < 1))
    {
      v6 = 0;
    }
    else
    {
      (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
      v6 = 1;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 32);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 36);
    if (v6)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  }
  return result;
}

uint64_t sub_2240765A8(int *a1, uint64_t a2, uint64_t a3)
{
  int v7;

  v7 = 2;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 >= 1)
    return sub_224076708(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 40);
}

uint64_t sub_224076708(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t result;
  int v8;

  v5 = *a1;
  if (*a1 == 2)
  {
    v8 = 2;
    (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v8);
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 36);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 40);
  if (v5 >= 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  return result;
}

uint64_t sub_224076874(int *a1, uint64_t a2, uint64_t a3)
{
  int v7;

  v7 = 2;
  (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v7);
  if (*a1 >= 1)
    return sub_2240769D4(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 56);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 72);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 76);
}

uint64_t sub_2240769D4(int *a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t result;
  int v8;

  v5 = *a1;
  if (*a1 == 2)
  {
    v8 = 2;
    (*(void (**)(uint64_t, int *))(*(_QWORD *)a2 + 104))(a2, &v8);
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 56);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 72);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 76);
  if (v5 >= 1)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  return result;
}

uint64_t sub_224076B40(uint64_t a1, unint64_t a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544628(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451CAD4(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_224076C3C((uint64_t)&v11, a1, a2);
  else
    sub_224076E38(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

_QWORD *sub_224076C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;
  _QWORD v12[2];
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  void (*v15)(uint64_t);
  std::__shared_weak_count *v16;
  int v17;
  _QWORD v18[5];

  v18[4] = *MEMORY[0x24BDAC8D0];
  sub_224159374(&v14);
  sub_22414F578((uint64_t)&v17, (uint64_t)&v14);
  v14 = &off_24EC6D000;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_224079780(a2, (unint64_t)&v17);
  sub_224150AD4(&v17, v12);
  sub_224151B5C((uint64_t)&v14, (uint64_t)v12);
  v12[0] = &off_24EC6D000;
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_DWORD *)a3 = (_DWORD)v14;
  result = sub_224079E90((_QWORD *)(a3 + 8), &v15);
  if (v15)
    result = (_QWORD *)((uint64_t (*)(_QWORD, void (**)(uint64_t), _QWORD, _QWORD, _QWORD))v15)(0, &v15, 0, 0, 0);
  if (v18[0])
    return (_QWORD *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v18[0])(0, v18, 0, 0, 0);
  return result;
}

void sub_224076DC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224076E38(uint64_t a1, unint64_t a2)
{
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v7;
  uint64_t (*v8)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v9;
  int v10;
  int v11;
  char *v12;
  unsigned int v13;
  uint64_t (*v14)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v15;
  uint64_t (*v16)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v17;
  int v18;
  int v19;
  char *v20;
  unsigned int v21;
  uint64_t (*v22)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v23;
  uint64_t (*v24)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v25;
  int v26;
  int v27;
  char *v28;
  unsigned int v29;
  uint64_t (*v30)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v31;
  uint64_t (*v32)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v33;
  int v34;
  int v35;
  char *v36;
  unsigned int v37;
  uint64_t (*v38)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v39;
  uint64_t (*v40)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v41;
  int v42;
  int v43;
  char *v44;
  unsigned int v45;
  uint64_t (*v46)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v47;
  uint64_t (*v48)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v49;
  int v50;
  int v51;
  char *v52;
  unsigned int v53;
  uint64_t (*v54)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v55;
  uint64_t (*v56)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v57;
  int v58;
  int v59;
  char *v60;
  unsigned int v61;
  uint64_t (*v62)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v63;
  uint64_t (*v64)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v65;
  int v66;
  int v67;
  char *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *exception;
  unint64_t v73;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "camera_type";
  *(_QWORD *)(a1 + 96) = 11;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v73 = a2;
  sub_224077548((uint64_t *)a1, (_DWORD **)&v73);
  sub_224152F70((void (**)(int))a2);
  v5 = *(_DWORD *)a2;
  switch(v5)
  {
    case 0:
      v16 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v15 = a2 + 8;
      v14 = v16;
      if (!v16)
        goto LABEL_95;
      v17 = (float *)v14(3, v15, 0, &unk_24EC682D8, &unk_224697234);
      if (!v17)
        goto LABEL_95;
      v18 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v18)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      v20 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v20, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v21 = 2;
      else
        v21 = v73;
      sub_223BBB938(a1, v17, v21);
      break;
    case 1:
      v24 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v23 = a2 + 8;
      v22 = v24;
      if (!v24)
        goto LABEL_95;
      v25 = v22(3, v23, 0, &unk_24EC68328, &unk_224697308);
      if (!v25)
        goto LABEL_95;
      v26 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v27 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v27)
        *(_BYTE *)(a1 + 104) = 1;
      v28 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v28, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v29 = 2;
      else
        v29 = v73;
      sub_224077738(a1, v25, v29);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v32 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v31 = a2 + 8;
      v30 = v32;
      if (!v32)
        goto LABEL_95;
      v33 = (float *)v30(3, v31, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v33)
        goto LABEL_95;
      v34 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v34)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v35 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v35)
        *(_BYTE *)(a1 + 104) = 1;
      v36 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v36, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v37 = 2;
      else
        v37 = v73;
      sub_224077B70(a1, v33, v37);
      break;
    case 11:
      v40 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v39 = a2 + 8;
      v38 = v40;
      if (!v40 || (v41 = v38(3, v39, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_95:
        sub_224071EE4();
      v42 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v42)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v43 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v43)
        *(_BYTE *)(a1 + 104) = 1;
      v44 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v44, &v73);
      if (HIDWORD(v73))
      {
LABEL_96:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      if (v73 >= 2)
        v45 = 2;
      else
        v45 = v73;
      sub_224077F74(a1, v41, v45);
      break;
    default:
      switch(v5)
      {
        case 'd':
          v8 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v7 = a2 + 8;
          v6 = v8;
          if (!v8)
            goto LABEL_95;
          v9 = (float *)v6(3, v7, 0, &unk_24EC68418, &unk_224697588);
          if (!v9)
            goto LABEL_95;
          v10 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v10)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v11 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v11)
            *(_BYTE *)(a1 + 104) = 1;
          v12 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v12, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v13 = 2;
          else
            v13 = v73;
          sub_2240783AC(a1, v9, v13);
          break;
        case 'e':
          v48 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v47 = a2 + 8;
          v46 = v48;
          if (!v48)
            goto LABEL_95;
          v49 = (double *)v46(3, v47, 0, &unk_24EC68468, &unk_224697660);
          if (!v49)
            goto LABEL_95;
          v50 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v50)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v51 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v51)
            *(_BYTE *)(a1 + 104) = 1;
          v52 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v52, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v53 = 2;
          else
            v53 = v73;
          sub_224078858(a1, v49, v53);
          break;
        case 'n':
          v56 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v55 = a2 + 8;
          v54 = v56;
          if (!v56)
            goto LABEL_95;
          v57 = (float *)v54(3, v55, 0, &unk_24EC684B8, &unk_224697738);
          if (!v57)
            goto LABEL_95;
          v58 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v58)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v59 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v59)
            *(_BYTE *)(a1 + 104) = 1;
          v60 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v60, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v61 = 2;
          else
            v61 = v73;
          sub_224078D74(a1, v57, v61);
          break;
        case 'o':
          v64 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v63 = a2 + 8;
          v62 = v64;
          if (!v64)
            goto LABEL_95;
          v65 = (double *)v62(3, v63, 0, &unk_24EC68508, &unk_224697810);
          if (!v65)
            goto LABEL_95;
          v66 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v66)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v67 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v67)
            *(_BYTE *)(a1 + 104) = 1;
          v68 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v68, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v69 = 2;
          else
            v69 = v73;
          sub_224079220(a1, v65, v69);
          break;
        default:
          return;
      }
      break;
  }
  v70 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v70 - 8);
  v71 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v71 - 8);
  *(_QWORD *)(a1 + 48) = v70 - 8;
  *(_QWORD *)(a1 + 72) = v71 - 8;
}

void sub_224077548(uint64_t *a1, _DWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245448E0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451CFD4(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_224153714((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_2240776AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_224077738(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  char *v10;
  _QWORD v11[2];

  if (a3 < 2)
  {
    sub_22407785C((uint64_t)v11, a1, (_QWORD *)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v6, (double *)a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v8, (double *)(a2 + 16));
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v11[0] = 2;
    v11[1] = a2 + 32;
    v10 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v10, (uint64_t)v11);
  }
}

void sub_22407785C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  std::__shared_weak_count *v41;
  _QWORD v42[2];
  __int128 v43;

  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD60;
  v43 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v43;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v41 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC35EB0;
  v40 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v8, (double *)&v37);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v10, (double *)&v38);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v42[0] = 2;
  v42[1] = &v39;
  v12 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v12, (uint64_t)v42);
  v13 = v37;
  v14 = v38;
  v15 = 1.0 / *(double *)&v37;
  v16 = v39;
  v17 = v40;
  *((_OWORD *)v40 + 1) = v37;
  *((_OWORD *)v17 + 2) = v14;
  *((double *)v17 + 6) = v15;
  *((double *)v17 + 7) = 1.0 / *((double *)&v13 + 1);
  *((double *)v17 + 8) = -(*(double *)&v14 * v15);
  *((double *)v17 + 9) = -(*((double *)&v14 + 1) * (1.0 / *((double *)&v13 + 1)));
  *((_QWORD *)v17 + 10) = v13;
  *((_QWORD *)v17 + 12) = 0;
  *((_QWORD *)v17 + 13) = 0;
  *((_QWORD *)v17 + 11) = 0;
  *((_QWORD *)v17 + 14) = *((_QWORD *)&v13 + 1);
  *((_QWORD *)v17 + 15) = 0;
  *((_OWORD *)v17 + 8) = v14;
  *((_QWORD *)v17 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v17 + 19) = v16;
  v18 = v40;
  v19 = v40 + 16;
  v20 = *((_QWORD *)v40 + 2);
  v21 = *((_QWORD *)v40 + 3);
  v22 = v40 + 32;
  v23 = *((_QWORD *)v40 + 4);
  v24 = *((_QWORD *)v40 + 5);
  v25 = *((_QWORD *)v40 + 19);
  v26 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  *(_QWORD *)v26 = &off_24EC6CEA0;
  *((_QWORD *)v26 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v26 + 40) = *v19;
  *(_OWORD *)(v26 + 56) = *v22;
  v27 = *((_OWORD *)v18 + 3);
  *(_OWORD *)(v26 + 88) = *((_OWORD *)v18 + 4);
  *(_OWORD *)(v26 + 72) = v27;
  v28 = *((_OWORD *)v18 + 6);
  v29 = *((_OWORD *)v18 + 7);
  v30 = *((_OWORD *)v18 + 8);
  *((_QWORD *)v26 + 21) = *((_QWORD *)v18 + 18);
  *(_OWORD *)(v26 + 152) = v30;
  *(_OWORD *)(v26 + 136) = v29;
  *(_OWORD *)(v26 + 120) = v28;
  *(_OWORD *)(v26 + 104) = *((_OWORD *)v18 + 5);
  *((_QWORD *)v26 + 22) = v25;
  *((_QWORD *)v26 + 3) = &off_24EC35EB0;
  *a3 = v20;
  a3[1] = v21;
  a3[2] = v23;
  a3[3] = v24;
  a3[4] = v25;
  a3[5] = v26 + 24;
  v31 = (std::__shared_weak_count *)a3[6];
  a3[6] = v26;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = v41;
  if (v41)
  {
    v35 = (unint64_t *)&v41->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_224077B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224077B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224077B70(uint64_t a1, float *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  char *v10;
  _QWORD v11[2];

  if (a3 < 2)
  {
    sub_224077C94((uint64_t)v11, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v11[0] = 2;
    v11[1] = a2 + 4;
    v10 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v10, (uint64_t)v11);
  }
}

void sub_224077C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  float32x2_t v13;
  float32x2_t *v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v22;
  float32x2_t v23;
  int32x2_t v24;
  int8x16_t v25;
  int8x16_t *v26;
  uint64_t v27;
  char *v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  int8x16_t v38;
  float32x2_t v39;
  float32x2_t v40;
  float32x2_t v41;
  int8x16_t *v42;
  std::__shared_weak_count *v43;
  _QWORD v44[2];

  v39 = 0;
  v40 = 0;
  v41 = 0;
  v5 = (char *)operator new(0x78uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD10;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC20868;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 56) = v6;
  *(int32x4_t *)(v5 + 72) = v6;
  *(int32x4_t *)(v5 + 88) = v6;
  *((_DWORD *)v5 + 26) = 2143289344;
  *((_QWORD *)v5 + 14) = 0;
  v43 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC37688;
  v42 = (int8x16_t *)(v5 + 24);
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v8, (float *)&v39);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v10, (float *)&v40);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v44[0] = 2;
  v44[1] = &v41;
  v12 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v12, (uint64_t)v44);
  v13 = v41;
  v14 = (float32x2_t *)v42;
  v15 = v39;
  v16 = v40;
  __asm { FMOV            V2.2S, #1.0 }
  v22 = vdiv_f32(_D2, v39);
  v23 = vmul_f32(v22, vneg_f32(v40));
  v24 = vzip1_s32((int32x2_t)v39, (int32x2_t)v40);
  v25.i64[0] = v24.u32[0];
  v25.i64[1] = v24.u32[1];
  v42[1] = vorrq_s8((int8x16_t)vshll_n_s32(vzip2_s32((int32x2_t)v39, (int32x2_t)v40), 0x20uLL), v25);
  v14[4] = v22;
  v14[5] = v23;
  v14[6].i32[0] = v15.i32[0];
  v14[7] = 0;
  v14[6].i32[1] = 0;
  v14[8].i32[0] = v15.i32[1];
  v14[8].i32[1] = 0;
  v14[9] = v16;
  v14[10].i32[0] = 1065353216;
  v14[11] = v13;
  v26 = v42;
  v38 = v42[1];
  v27 = v42[5].i64[1];
  v28 = (char *)operator new(0x78uLL);
  *((_QWORD *)v28 + 1) = 0;
  *((_QWORD *)v28 + 2) = 0;
  *(_QWORD *)v28 = &off_24EC6CE50;
  v29 = v26[1];
  *((_QWORD *)v28 + 4) = &off_24EC20868;
  *(int8x16_t *)(v28 + 40) = v29;
  *(int8x16_t *)(v28 + 56) = v26[2];
  v30 = v26[3];
  v31 = v26[4];
  *((_DWORD *)v28 + 26) = v26[5].i32[0];
  *(int8x16_t *)(v28 + 88) = v31;
  *(int8x16_t *)(v28 + 72) = v30;
  *((_QWORD *)v28 + 3) = &off_24EC37688;
  *((_QWORD *)v28 + 14) = v27;
  *(int8x16_t *)a3 = v38;
  *(_QWORD *)(a3 + 16) = v27;
  *(_QWORD *)(a3 + 24) = v28 + 24;
  v32 = *(std::__shared_weak_count **)(a3 + 32);
  *(_QWORD *)(a3 + 32) = v28;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v43;
  if (v43)
  {
    v36 = (unint64_t *)&v43->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_224077F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224077F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224077F74(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  char *v10;
  _QWORD v11[2];

  if (a3 < 2)
  {
    sub_224078098((uint64_t)v11, a1, (_QWORD *)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v6, (double *)a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v8, (double *)(a2 + 16));
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v11[0] = 2;
    v11[1] = a2 + 32;
    v10 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v10, (uint64_t)v11);
  }
}

void sub_224078098(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  std::__shared_weak_count *v41;
  _QWORD v42[2];
  __int128 v43;

  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CDB0;
  v43 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v43;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v41 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C9A0;
  v40 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v8, (double *)&v37);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v10, (double *)&v38);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v42[0] = 2;
  v42[1] = &v39;
  v12 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v12, (uint64_t)v42);
  v13 = v37;
  v14 = v38;
  v15 = 1.0 / *(double *)&v37;
  v16 = v39;
  v17 = v40;
  *((_OWORD *)v40 + 1) = v37;
  *((_OWORD *)v17 + 2) = v14;
  *((double *)v17 + 6) = v15;
  *((double *)v17 + 7) = 1.0 / *((double *)&v13 + 1);
  *((double *)v17 + 8) = -(*(double *)&v14 * v15);
  *((double *)v17 + 9) = -(*((double *)&v14 + 1) * (1.0 / *((double *)&v13 + 1)));
  *((_QWORD *)v17 + 10) = v13;
  *((_QWORD *)v17 + 12) = 0;
  *((_QWORD *)v17 + 13) = 0;
  *((_QWORD *)v17 + 11) = 0;
  *((_QWORD *)v17 + 14) = *((_QWORD *)&v13 + 1);
  *((_QWORD *)v17 + 15) = 0;
  *((_OWORD *)v17 + 8) = v14;
  *((_QWORD *)v17 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v17 + 19) = v16;
  v18 = v40;
  v19 = v40 + 16;
  v20 = *((_QWORD *)v40 + 2);
  v21 = *((_QWORD *)v40 + 3);
  v22 = v40 + 32;
  v23 = *((_QWORD *)v40 + 4);
  v24 = *((_QWORD *)v40 + 5);
  v25 = *((_QWORD *)v40 + 19);
  v26 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  *(_QWORD *)v26 = &off_24EC6CEF0;
  *((_QWORD *)v26 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v26 + 40) = *v19;
  *(_OWORD *)(v26 + 56) = *v22;
  v27 = *((_OWORD *)v18 + 3);
  *(_OWORD *)(v26 + 88) = *((_OWORD *)v18 + 4);
  *(_OWORD *)(v26 + 72) = v27;
  v28 = *((_OWORD *)v18 + 6);
  v29 = *((_OWORD *)v18 + 7);
  v30 = *((_OWORD *)v18 + 8);
  *((_QWORD *)v26 + 21) = *((_QWORD *)v18 + 18);
  *(_OWORD *)(v26 + 152) = v30;
  *(_OWORD *)(v26 + 136) = v29;
  *(_OWORD *)(v26 + 120) = v28;
  *(_OWORD *)(v26 + 104) = *((_OWORD *)v18 + 5);
  *((_QWORD *)v26 + 22) = v25;
  *((_QWORD *)v26 + 3) = &off_24EC6C9A0;
  *a3 = v20;
  a3[1] = v21;
  a3[2] = v23;
  a3[3] = v24;
  a3[4] = v25;
  a3[5] = v26 + 24;
  v31 = (std::__shared_weak_count *)a3[6];
  a3[6] = v26;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = v41;
  if (v41)
  {
    v35 = (unint64_t *)&v41->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_224078384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224078398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240783AC(uint64_t a1, float *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_224078510((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v12, (uint64_t)v13);
  }
}

void sub_224078510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  float v33[8];
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v32 = 0u;
  memset(v33, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6C9F8;
  v37 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v37;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C620;
  v34 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v8, (float *)&v32);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v10, (float *)&v32 + 2);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v12, v33);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v36 = 2;
  *((_QWORD *)&v36 + 1) = &v33[5];
  v14 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v14, (uint64_t)&v36);
  v15 = sub_22415767C((uint64_t)&v32);
  v31 = *(_OWORD *)(v15 + 16);
  v36 = *(_OWORD *)(v15 + 32);
  LODWORD(v37) = *(_DWORD *)(v15 + 48);
  v16 = *(_QWORD *)(v15 + 120);
  v17 = (char *)operator new(0x98uLL);
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = &off_24EC6CB38;
  v18 = *(_QWORD *)(v15 + 52);
  v19 = *(_WORD *)(v15 + 112);
  v20 = *(_OWORD *)(v15 + 16);
  *((_QWORD *)v17 + 4) = &off_24EC6C678;
  *(_OWORD *)(v17 + 40) = v20;
  v21 = *(_OWORD *)(v15 + 32);
  *((_DWORD *)v17 + 18) = *(_DWORD *)(v15 + 48);
  *(_OWORD *)(v17 + 56) = v21;
  *(_QWORD *)(v17 + 76) = v18;
  *(_OWORD *)(v17 + 84) = *(_OWORD *)(v15 + 60);
  v22 = *(_OWORD *)(v15 + 76);
  v23 = *(_OWORD *)(v15 + 92);
  *((_DWORD *)v17 + 33) = *(_DWORD *)(v15 + 108);
  *(_OWORD *)(v17 + 116) = v23;
  *(_OWORD *)(v17 + 100) = v22;
  *((_WORD *)v17 + 68) = v19;
  *((_QWORD *)v17 + 18) = v16;
  *((_QWORD *)v17 + 3) = &off_24EC6C620;
  v24 = v36;
  *(_OWORD *)a3 = v31;
  *(_OWORD *)(a3 + 16) = v24;
  *(_DWORD *)(a3 + 32) = v37;
  *(_QWORD *)(a3 + 36) = v16;
  v25 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v17 + 24;
  *(_QWORD *)(a3 + 56) = v17;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_224078830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224078844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224078858(uint64_t a1, double *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_2240789BC((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v12, (uint64_t)v13);
  }
}

void sub_2240789BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  __int128 v41;
  char *v42;
  std::__shared_weak_count *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v41 = 0u;
  v39 = 0u;
  memset(v40, 0, sizeof(v40));
  v38 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA98;
  v48 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v47;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v43 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C7E0;
  v42 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v8, (double *)&v38);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v10, (double *)&v39);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v12, (double *)v40);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v44 = 2;
  *((_QWORD *)&v44 + 1) = (char *)&v41 + 8;
  v14 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v14, (uint64_t)&v44);
  v15 = sub_2241577A4((uint64_t)&v38);
  v16 = *(_QWORD *)(v15 + 32);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  v19 = *(_QWORD *)(v15 + 40);
  v20 = *(_OWORD *)(v15 + 64);
  v44 = *(_OWORD *)(v15 + 48);
  v45 = v20;
  *(_QWORD *)&v46 = *(_QWORD *)(v15 + 80);
  v21 = *(_QWORD *)(v15 + 216);
  v22 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CBD8;
  v23 = *(_WORD *)(v15 + 208);
  *((_QWORD *)v22 + 4) = &off_24EC6C838;
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v15 + 32);
  v24 = *(_OWORD *)(v15 + 48);
  v25 = *(_OWORD *)(v15 + 64);
  *((_QWORD *)v22 + 13) = *(_QWORD *)(v15 + 80);
  *(_OWORD *)(v22 + 88) = v25;
  *(_OWORD *)(v22 + 72) = v24;
  v26 = *(_QWORD *)(v15 + 88);
  *((_DWORD *)v22 + 30) = *(_DWORD *)(v15 + 96);
  *((_QWORD *)v22 + 14) = v26;
  v27 = *(_OWORD *)(v15 + 120);
  *((_OWORD *)v22 + 8) = *(_OWORD *)(v15 + 104);
  *((_OWORD *)v22 + 9) = v27;
  v28 = *(_OWORD *)(v15 + 152);
  v29 = *(_OWORD *)(v15 + 168);
  v30 = *(_OWORD *)(v15 + 184);
  *((_QWORD *)v22 + 28) = *(_QWORD *)(v15 + 200);
  *((_OWORD *)v22 + 12) = v29;
  *((_OWORD *)v22 + 13) = v30;
  *((_OWORD *)v22 + 11) = v28;
  *((_OWORD *)v22 + 10) = *(_OWORD *)(v15 + 136);
  *((_WORD *)v22 + 116) = v23;
  *((_QWORD *)v22 + 30) = v21;
  *((_QWORD *)v22 + 3) = &off_24EC6C7E0;
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v19;
  v31 = v45;
  *(_OWORD *)(a3 + 32) = v44;
  *(_OWORD *)(a3 + 48) = v31;
  *(_QWORD *)(a3 + 64) = v46;
  *(_QWORD *)(a3 + 72) = v21;
  v32 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v22 + 24;
  *(_QWORD *)(a3 + 88) = v22;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v43;
  if (v43)
  {
    v36 = (unint64_t *)&v43->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_224078D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224078D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224078D74(uint64_t a1, float *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_224078ED8((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545EA4(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v12, (uint64_t)v13);
  }
}

void sub_224078ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  float v33[8];
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v32 = 0u;
  memset(v33, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA48;
  v37 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v37;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C730;
  v34 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v8, (float *)&v32);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v10, (float *)&v32 + 2);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545EA4(v12, v33);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v36 = 2;
  *((_QWORD *)&v36 + 1) = &v33[5];
  v14 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v14, (uint64_t)&v36);
  v15 = sub_22415767C((uint64_t)&v32);
  v31 = *(_OWORD *)(v15 + 16);
  v36 = *(_OWORD *)(v15 + 32);
  LODWORD(v37) = *(_DWORD *)(v15 + 48);
  v16 = *(_QWORD *)(v15 + 120);
  v17 = (char *)operator new(0x98uLL);
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = &off_24EC6CB88;
  v18 = *(_QWORD *)(v15 + 52);
  v19 = *(_WORD *)(v15 + 112);
  v20 = *(_OWORD *)(v15 + 16);
  *((_QWORD *)v17 + 4) = &off_24EC6C678;
  *(_OWORD *)(v17 + 40) = v20;
  v21 = *(_OWORD *)(v15 + 32);
  *((_DWORD *)v17 + 18) = *(_DWORD *)(v15 + 48);
  *(_OWORD *)(v17 + 56) = v21;
  *(_QWORD *)(v17 + 76) = v18;
  *(_OWORD *)(v17 + 84) = *(_OWORD *)(v15 + 60);
  v22 = *(_OWORD *)(v15 + 76);
  v23 = *(_OWORD *)(v15 + 92);
  *((_DWORD *)v17 + 33) = *(_DWORD *)(v15 + 108);
  *(_OWORD *)(v17 + 116) = v23;
  *(_OWORD *)(v17 + 100) = v22;
  *((_WORD *)v17 + 68) = v19;
  *((_QWORD *)v17 + 18) = v16;
  *((_QWORD *)v17 + 3) = &off_24EC6C730;
  v24 = v36;
  *(_OWORD *)a3 = v31;
  *(_OWORD *)(a3 + 16) = v24;
  *(_DWORD *)(a3 + 32) = v37;
  *(_QWORD *)(a3 + 36) = v16;
  v25 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v17 + 24;
  *(_QWORD *)(a3 + 56) = v17;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_2240791F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407920C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224079220(uint64_t a1, double *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_224079384((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545FAC(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545A98(v12, (uint64_t)v13);
  }
}

void sub_224079384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  __int128 v41;
  char *v42;
  std::__shared_weak_count *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v41 = 0u;
  v39 = 0u;
  memset(v40, 0, sizeof(v40));
  v38 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CAE8;
  v48 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v47;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v43 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C8F0;
  v42 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v8, (double *)&v38);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v10, (double *)&v39);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545FAC(v12, (double *)v40);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v44 = 2;
  *((_QWORD *)&v44 + 1) = (char *)&v41 + 8;
  v14 = (char *)sub_2245448E0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545A98(v14, (uint64_t)&v44);
  v15 = sub_2241577A4((uint64_t)&v38);
  v16 = *(_QWORD *)(v15 + 32);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  v19 = *(_QWORD *)(v15 + 40);
  v20 = *(_OWORD *)(v15 + 64);
  v44 = *(_OWORD *)(v15 + 48);
  v45 = v20;
  *(_QWORD *)&v46 = *(_QWORD *)(v15 + 80);
  v21 = *(_QWORD *)(v15 + 216);
  v22 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CC28;
  v23 = *(_WORD *)(v15 + 208);
  *((_QWORD *)v22 + 4) = &off_24EC6C838;
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v15 + 32);
  v24 = *(_OWORD *)(v15 + 48);
  v25 = *(_OWORD *)(v15 + 64);
  *((_QWORD *)v22 + 13) = *(_QWORD *)(v15 + 80);
  *(_OWORD *)(v22 + 88) = v25;
  *(_OWORD *)(v22 + 72) = v24;
  v26 = *(_QWORD *)(v15 + 88);
  *((_DWORD *)v22 + 30) = *(_DWORD *)(v15 + 96);
  *((_QWORD *)v22 + 14) = v26;
  v27 = *(_OWORD *)(v15 + 120);
  *((_OWORD *)v22 + 8) = *(_OWORD *)(v15 + 104);
  *((_OWORD *)v22 + 9) = v27;
  v28 = *(_OWORD *)(v15 + 152);
  v29 = *(_OWORD *)(v15 + 168);
  v30 = *(_OWORD *)(v15 + 184);
  *((_QWORD *)v22 + 28) = *(_QWORD *)(v15 + 200);
  *((_OWORD *)v22 + 12) = v29;
  *((_OWORD *)v22 + 13) = v30;
  *((_OWORD *)v22 + 11) = v28;
  *((_OWORD *)v22 + 10) = *(_OWORD *)(v15 + 136);
  *((_WORD *)v22 + 116) = v23;
  *((_QWORD *)v22 + 30) = v21;
  *((_QWORD *)v22 + 3) = &off_24EC6C8F0;
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v19;
  v31 = v45;
  *(_OWORD *)(a3 + 32) = v44;
  *(_OWORD *)(a3 + 48) = v31;
  *(_QWORD *)(a3 + 64) = v46;
  *(_QWORD *)(a3 + 72) = v21;
  v32 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v22 + 24;
  *(_QWORD *)(a3 + 88) = v22;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v43;
  if (v43)
  {
    v36 = (unint64_t *)&v43->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_224079714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224079728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_22407973C(uint64_t a1)
{
  void (*v2)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD);

  v2 = *(void (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(a1 + 8);
  if (v2)
    v2(0, a1 + 8, 0, 0, 0);
  return a1;
}

void sub_224079780(uint64_t a1, unint64_t a2)
{
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v7;
  uint64_t (*v8)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v9;
  int v10;
  int v11;
  char *v12;
  unsigned int v13;
  uint64_t (*v14)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v15;
  uint64_t (*v16)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v17;
  int v18;
  int v19;
  char *v20;
  unsigned int v21;
  uint64_t (*v22)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v23;
  uint64_t (*v24)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v25;
  int v26;
  int v27;
  char *v28;
  unsigned int v29;
  uint64_t (*v30)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v31;
  uint64_t (*v32)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v33;
  int v34;
  int v35;
  char *v36;
  unsigned int v37;
  uint64_t (*v38)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v39;
  uint64_t (*v40)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v41;
  int v42;
  int v43;
  char *v44;
  unsigned int v45;
  uint64_t (*v46)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v47;
  uint64_t (*v48)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v49;
  int v50;
  int v51;
  char *v52;
  unsigned int v53;
  uint64_t (*v54)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v55;
  uint64_t (*v56)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v57;
  int v58;
  int v59;
  char *v60;
  unsigned int v61;
  uint64_t (*v62)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v63;
  uint64_t (*v64)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v65;
  int v66;
  int v67;
  char *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *exception;
  unint64_t v73;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "camera_type";
  *(_QWORD *)(a1 + 96) = 11;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v73 = a2;
  sub_224077548((uint64_t *)a1, (_DWORD **)&v73);
  sub_224151490((void (**)(int))a2);
  v5 = *(_DWORD *)a2;
  switch(v5)
  {
    case 0:
      v16 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v15 = a2 + 8;
      v14 = v16;
      if (!v16)
        goto LABEL_95;
      v17 = (float *)v14(3, v15, 0, &unk_24EC682D8, &unk_224697234);
      if (!v17)
        goto LABEL_95;
      v18 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v18)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      v20 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v20, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v21 = 2;
      else
        v21 = v73;
      sub_223BBB938(a1, v17, v21);
      break;
    case 1:
      v24 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v23 = a2 + 8;
      v22 = v24;
      if (!v24)
        goto LABEL_95;
      v25 = v22(3, v23, 0, &unk_24EC68328, &unk_224697308);
      if (!v25)
        goto LABEL_95;
      v26 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v27 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v27)
        *(_BYTE *)(a1 + 104) = 1;
      v28 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v28, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v29 = 2;
      else
        v29 = v73;
      sub_224077738(a1, v25, v29);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v32 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v31 = a2 + 8;
      v30 = v32;
      if (!v32)
        goto LABEL_95;
      v33 = (float *)v30(3, v31, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v33)
        goto LABEL_95;
      v34 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v34)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v35 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v35)
        *(_BYTE *)(a1 + 104) = 1;
      v36 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v36, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v37 = 2;
      else
        v37 = v73;
      sub_224077B70(a1, v33, v37);
      break;
    case 11:
      v40 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v39 = a2 + 8;
      v38 = v40;
      if (!v40 || (v41 = v38(3, v39, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_95:
        sub_224071EE4();
      v42 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v42)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544628(a1);
      v43 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v43)
        *(_BYTE *)(a1 + 104) = 1;
      v44 = (char *)sub_2245448E0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451CAD4(v44, &v73);
      if (HIDWORD(v73))
      {
LABEL_96:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      if (v73 >= 2)
        v45 = 2;
      else
        v45 = v73;
      sub_224077F74(a1, v41, v45);
      break;
    default:
      switch(v5)
      {
        case 'd':
          v8 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v7 = a2 + 8;
          v6 = v8;
          if (!v8)
            goto LABEL_95;
          v9 = (float *)v6(3, v7, 0, &unk_24EC68418, &unk_224697588);
          if (!v9)
            goto LABEL_95;
          v10 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v10)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v11 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v11)
            *(_BYTE *)(a1 + 104) = 1;
          v12 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v12, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v13 = 2;
          else
            v13 = v73;
          sub_2240783AC(a1, v9, v13);
          break;
        case 'e':
          v48 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v47 = a2 + 8;
          v46 = v48;
          if (!v48)
            goto LABEL_95;
          v49 = (double *)v46(3, v47, 0, &unk_24EC68468, &unk_224697660);
          if (!v49)
            goto LABEL_95;
          v50 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v50)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v51 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v51)
            *(_BYTE *)(a1 + 104) = 1;
          v52 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v52, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v53 = 2;
          else
            v53 = v73;
          sub_224078858(a1, v49, v53);
          break;
        case 'n':
          v56 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v55 = a2 + 8;
          v54 = v56;
          if (!v56)
            goto LABEL_95;
          v57 = (float *)v54(3, v55, 0, &unk_24EC684B8, &unk_224697738);
          if (!v57)
            goto LABEL_95;
          v58 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v58)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v59 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v59)
            *(_BYTE *)(a1 + 104) = 1;
          v60 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v60, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v61 = 2;
          else
            v61 = v73;
          sub_224078D74(a1, v57, v61);
          break;
        case 'o':
          v64 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v63 = a2 + 8;
          v62 = v64;
          if (!v64)
            goto LABEL_95;
          v65 = (double *)v62(3, v63, 0, &unk_24EC68508, &unk_224697810);
          if (!v65)
            goto LABEL_95;
          v66 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v66)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544628(a1);
          v67 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v67)
            *(_BYTE *)(a1 + 104) = 1;
          v68 = (char *)sub_2245448E0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451CAD4(v68, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v69 = 2;
          else
            v69 = v73;
          sub_224079220(a1, v65, v69);
          break;
        default:
          return;
      }
      break;
  }
  v70 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v70 - 8);
  v71 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v71 - 8);
  *(_QWORD *)(a1 + 48) = v70 - 8;
  *(_QWORD *)(a1 + 72) = v71 - 8;
}

_QWORD *sub_224079E90(_QWORD *a1, void (**a2)(uint64_t))
{
  _QWORD v4[9];

  v4[8] = *MEMORY[0x24BDAC8D0];
  v4[0] = 0;
  v4[1] = 0;
  if (*a2)
    (*a2)(2);
  if (v4 != a1 && *a1 != (unsigned __int128)0)
    ((void (*)(uint64_t, _QWORD *, _QWORD *, _QWORD, _QWORD))*a1)(2, a1, v4, 0, 0);
  if (v4[0])
    ((void (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v4[0])(0, v4, 0, 0, 0);
  return a1;
}

void sub_224079FE8(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_22316DC48(a1);
  _Unwind_Resume(a1);
}

_QWORD *sub_22407A008(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;
  char v8;

  v7 = 2;
  sub_224554038(a1[6], &v7);
  if (v7 <= 1)
  {
    sub_22407A0E0((uint64_t)&v8, a1, (uint64_t)a2);
    return a1;
  }
  else
  {
    sub_2231B1308(a1 + 2);
    sub_22407A2DC(a1, a2);
    v4 = a1[4];
    v5 = *(_QWORD *)(v4 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v4 - 8);
    if (v5)
      (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v5);
    a1[4] -= 16;
    return a1;
  }
}

_QWORD *sub_22407A0E0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;
  _QWORD v12[2];
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  void (*v15)(uint64_t);
  std::__shared_weak_count *v16;
  int v17;
  _QWORD v18[5];

  v18[4] = *MEMORY[0x24BDAC8D0];
  sub_224159374(&v14);
  sub_22414F578((uint64_t)&v17, (uint64_t)&v14);
  v14 = &off_24EC6D000;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_22407C46C(a2, &v17);
  sub_224150AD4(&v17, v12);
  sub_224151B5C((uint64_t)&v14, (uint64_t)v12);
  v12[0] = &off_24EC6D000;
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_DWORD *)a3 = (_DWORD)v14;
  result = sub_224079E90((_QWORD *)(a3 + 8), &v15);
  if (v15)
    result = (_QWORD *)((uint64_t (*)(_QWORD, void (**)(uint64_t), _QWORD, _QWORD, _QWORD))v15)(0, &v15, 0, 0, 0);
  if (v18[0])
    return (_QWORD *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v18[0])(0, v18, 0, 0, 0);
  return result;
}

void sub_22407A264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22407A2DC(_QWORD *a1, int *a2)
{
  int v4;
  uint64_t (*v5)(uint64_t, int *, _QWORD, void *, void *);
  int *v6;
  uint64_t (*v7)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v8;
  uint64_t (*v9)(uint64_t, int *, _QWORD, void *, void *);
  int *v10;
  uint64_t (*v11)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *, _QWORD, void *, void *);
  int *v14;
  uint64_t (*v15)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, int *, _QWORD, void *, void *);
  int *v18;
  uint64_t (*v19)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, int *, _QWORD, void *, void *);
  int *v22;
  uint64_t (*v23)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, int *, _QWORD, void *, void *);
  int *v26;
  uint64_t (*v27)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, int *, _QWORD, void *, void *);
  int *v30;
  uint64_t (*v31)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v32;
  uint64_t (*v33)(uint64_t, int *, _QWORD, void *, void *);
  int *v34;
  uint64_t (*v35)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v36;
  unsigned int v37;

  v37 = 0;
  sub_224554038(a1[6], &v37);
  *a2 = v37;
  sub_224152F70((void (**)(int))a2);
  v4 = *a2;
  switch(v4)
  {
    case 0:
      v11 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v10 = a2 + 2;
      v9 = v11;
      if (!v11)
        goto LABEL_28;
      v12 = v9(3, v10, 0, &unk_24EC682D8, &unk_224697234);
      if (!v12)
        goto LABEL_28;
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_2231B2FE4((uint64_t)&v37, (uint64_t)a1, v12, v37);
      break;
    case 1:
      v15 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v14 = a2 + 2;
      v13 = v15;
      if (!v15)
        goto LABEL_28;
      v16 = v13(3, v14, 0, &unk_24EC68328, &unk_224697308);
      if (!v16)
        goto LABEL_28;
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_22407A6C0((uint64_t)&v37, a1, v16, v37);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v19 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v18 = a2 + 2;
      v17 = v19;
      if (!v19)
        goto LABEL_28;
      v20 = v17(3, v18, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v20)
        goto LABEL_28;
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_22407AA90((uint64_t)&v37, a1, v20, v37);
      break;
    case 11:
      v23 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v22 = a2 + 2;
      v21 = v23;
      if (!v23 || (v24 = v21(3, v22, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_28:
        sub_224071EE4();
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_22407AE2C((uint64_t)&v37, a1, v24, v37);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v6 = a2 + 2;
          v5 = v7;
          if (!v7)
            goto LABEL_28;
          v8 = v5(3, v6, 0, &unk_24EC68418, &unk_224697588);
          if (!v8)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407B1FC((uint64_t)&v37, a1, v8, v37);
          break;
        case 'e':
          v27 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v26 = a2 + 2;
          v25 = v27;
          if (!v27)
            goto LABEL_28;
          v28 = v25(3, v26, 0, &unk_24EC68468, &unk_224697660);
          if (!v28)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407B660((uint64_t)&v37, a1, v28, v37);
          break;
        case 'n':
          v31 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v30 = a2 + 2;
          v29 = v31;
          if (!v31)
            goto LABEL_28;
          v32 = v29(3, v30, 0, &unk_24EC684B8, &unk_224697738);
          if (!v32)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407BB34((uint64_t)&v37, a1, v32, v37);
          break;
        case 'o':
          v35 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v34 = a2 + 2;
          v33 = v35;
          if (!v35)
            goto LABEL_28;
          v36 = v33(3, v34, 0, &unk_24EC68508, &unk_224697810);
          if (!v36)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407BF98((uint64_t)&v37, a1, v36, v37);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_22407A6C0(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (a4 < 2)
  {
    sub_22407A7BC((uint64_t)&v12, (uint64_t)a2, (_QWORD *)a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_224554604(v7, (double *)a3);
    sub_224554604(v7, (double *)(a3 + 8));
    v8 = a2[6];
    sub_224554604(v8, (double *)(a3 + 16));
    sub_224554604(v8, (double *)(a3 + 24));
    v9 = a2[6];
    sub_224554038(v9, (_DWORD *)(a3 + 32));
    sub_224554038(v9, (_DWORD *)(a3 + 36));
    v10 = a2[4];
    v11 = *(_QWORD *)(v10 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v10 - 8);
    if (v11)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v11);
    a2[4] -= 16;
  }
}

void sub_22407A7BC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  double v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  std::__shared_weak_count *v38;
  __int128 v39;

  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD60;
  v39 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v39;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v38 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC35EB0;
  v37 = v5 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_224554604(v7, (double *)&v34);
  sub_224554604(v7, (double *)&v34 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_224554604(v8, (double *)&v35);
  sub_224554604(v8, (double *)&v35 + 1);
  v9 = *(_QWORD *)(a2 + 48);
  sub_224554038(v9, &v36);
  sub_224554038(v9, (_DWORD *)&v36 + 1);
  v10 = v34;
  v11 = v35;
  v12 = 1.0 / *(double *)&v34;
  v13 = v36;
  v14 = v37;
  *((_OWORD *)v37 + 1) = v34;
  *((_OWORD *)v14 + 2) = v11;
  *((double *)v14 + 6) = v12;
  *((double *)v14 + 7) = 1.0 / *((double *)&v10 + 1);
  *((double *)v14 + 8) = -(*(double *)&v11 * v12);
  *((double *)v14 + 9) = -(*((double *)&v11 + 1) * (1.0 / *((double *)&v10 + 1)));
  *((_QWORD *)v14 + 10) = v10;
  *((_QWORD *)v14 + 12) = 0;
  *((_QWORD *)v14 + 13) = 0;
  *((_QWORD *)v14 + 11) = 0;
  *((_QWORD *)v14 + 14) = *((_QWORD *)&v10 + 1);
  *((_QWORD *)v14 + 15) = 0;
  *((_OWORD *)v14 + 8) = v11;
  *((_QWORD *)v14 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v14 + 19) = v13;
  v15 = v37;
  v16 = v37 + 16;
  v17 = *((_QWORD *)v37 + 2);
  v18 = *((_QWORD *)v37 + 3);
  v19 = v37 + 32;
  v20 = *((_QWORD *)v37 + 4);
  v21 = *((_QWORD *)v37 + 5);
  v22 = *((_QWORD *)v37 + 19);
  v23 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v23 + 1) = 0;
  *((_QWORD *)v23 + 2) = 0;
  *(_QWORD *)v23 = &off_24EC6CEA0;
  *((_QWORD *)v23 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v23 + 40) = *v16;
  *(_OWORD *)(v23 + 56) = *v19;
  v24 = *((_OWORD *)v15 + 3);
  *(_OWORD *)(v23 + 88) = *((_OWORD *)v15 + 4);
  *(_OWORD *)(v23 + 72) = v24;
  v25 = *((_OWORD *)v15 + 6);
  v26 = *((_OWORD *)v15 + 7);
  v27 = *((_OWORD *)v15 + 8);
  *((_QWORD *)v23 + 21) = *((_QWORD *)v15 + 18);
  *(_OWORD *)(v23 + 152) = v27;
  *(_OWORD *)(v23 + 136) = v26;
  *(_OWORD *)(v23 + 120) = v25;
  *(_OWORD *)(v23 + 104) = *((_OWORD *)v15 + 5);
  *((_QWORD *)v23 + 22) = v22;
  *((_QWORD *)v23 + 3) = &off_24EC35EB0;
  *a3 = v17;
  a3[1] = v18;
  a3[2] = v20;
  a3[3] = v21;
  a3[4] = v22;
  a3[5] = v23 + 24;
  v28 = (std::__shared_weak_count *)a3[6];
  a3[6] = v23;
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(p_shared_owners);
    while (__stlxr(v30 - 1, p_shared_owners));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v38;
  if (v38)
  {
    v32 = (unint64_t *)&v38->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_22407AA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407AA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407AA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407AA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407AA90(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (a4 < 2)
  {
    sub_22407AB8C((uint64_t)&v12, (uint64_t)a2, a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_2245544CC(v7, (float *)a3);
    sub_2245544CC(v7, (float *)(a3 + 4));
    v8 = a2[6];
    sub_2245544CC(v8, (float *)(a3 + 8));
    sub_2245544CC(v8, (float *)(a3 + 12));
    v9 = a2[6];
    sub_224554038(v9, (_DWORD *)(a3 + 16));
    sub_224554038(v9, (_DWORD *)(a3 + 20));
    v10 = a2[4];
    v11 = *(_QWORD *)(v10 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v10 - 8);
    if (v11)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v11);
    a2[4] -= 16;
  }
}

void sub_22407AB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  float32x2_t v10;
  float32x2_t *v11;
  float32x2_t v12;
  float32x2_t v13;
  float32x2_t v19;
  float32x2_t v20;
  int32x2_t v21;
  int8x16_t v22;
  int8x16_t *v23;
  uint64_t v24;
  char *v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  std::__shared_weak_count *v29;
  unint64_t *p_shared_owners;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  int8x16_t v35;
  float32x2_t v36;
  float32x2_t v37;
  float32x2_t v38;
  int8x16_t *v39;
  std::__shared_weak_count *v40;

  v36 = 0;
  v37 = 0;
  v38 = 0;
  v5 = (char *)operator new(0x78uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD10;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC20868;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 56) = v6;
  *(int32x4_t *)(v5 + 72) = v6;
  *(int32x4_t *)(v5 + 88) = v6;
  *((_DWORD *)v5 + 26) = 2143289344;
  *((_QWORD *)v5 + 14) = 0;
  v40 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC37688;
  v39 = (int8x16_t *)(v5 + 24);
  v7 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v7, (float *)&v36);
  sub_2245544CC(v7, (float *)&v36 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v8, (float *)&v37);
  sub_2245544CC(v8, (float *)&v37 + 1);
  v9 = *(_QWORD *)(a2 + 48);
  sub_224554038(v9, &v38);
  sub_224554038(v9, (_DWORD *)&v38 + 1);
  v10 = v38;
  v11 = (float32x2_t *)v39;
  v12 = v36;
  v13 = v37;
  __asm { FMOV            V2.2S, #1.0 }
  v19 = vdiv_f32(_D2, v36);
  v20 = vmul_f32(v19, vneg_f32(v37));
  v21 = vzip1_s32((int32x2_t)v36, (int32x2_t)v37);
  v22.i64[0] = v21.u32[0];
  v22.i64[1] = v21.u32[1];
  v39[1] = vorrq_s8((int8x16_t)vshll_n_s32(vzip2_s32((int32x2_t)v36, (int32x2_t)v37), 0x20uLL), v22);
  v11[4] = v19;
  v11[5] = v20;
  v11[6].i32[0] = v12.i32[0];
  v11[7] = 0;
  v11[6].i32[1] = 0;
  v11[8].i32[0] = v12.i32[1];
  v11[8].i32[1] = 0;
  v11[9] = v13;
  v11[10].i32[0] = 1065353216;
  v11[11] = v10;
  v23 = v39;
  v35 = v39[1];
  v24 = v39[5].i64[1];
  v25 = (char *)operator new(0x78uLL);
  *((_QWORD *)v25 + 1) = 0;
  *((_QWORD *)v25 + 2) = 0;
  *(_QWORD *)v25 = &off_24EC6CE50;
  v26 = v23[1];
  *((_QWORD *)v25 + 4) = &off_24EC20868;
  *(int8x16_t *)(v25 + 40) = v26;
  *(int8x16_t *)(v25 + 56) = v23[2];
  v27 = v23[3];
  v28 = v23[4];
  *((_DWORD *)v25 + 26) = v23[5].i32[0];
  *(int8x16_t *)(v25 + 88) = v28;
  *(int8x16_t *)(v25 + 72) = v27;
  *((_QWORD *)v25 + 3) = &off_24EC37688;
  *((_QWORD *)v25 + 14) = v24;
  *(int8x16_t *)a3 = v35;
  *(_QWORD *)(a3 + 16) = v24;
  *(_QWORD *)(a3 + 24) = v25 + 24;
  v29 = *(std::__shared_weak_count **)(a3 + 32);
  *(_QWORD *)(a3 + 32) = v25;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v31 = __ldaxr(p_shared_owners);
    while (__stlxr(v31 - 1, p_shared_owners));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = v40;
  if (v40)
  {
    v33 = (unint64_t *)&v40->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
}

void sub_22407ADDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407ADF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407AE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407AE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407AE2C(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (a4 < 2)
  {
    sub_22407AF28((uint64_t)&v12, (uint64_t)a2, (_QWORD *)a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_224554604(v7, (double *)a3);
    sub_224554604(v7, (double *)(a3 + 8));
    v8 = a2[6];
    sub_224554604(v8, (double *)(a3 + 16));
    sub_224554604(v8, (double *)(a3 + 24));
    v9 = a2[6];
    sub_224554038(v9, (_DWORD *)(a3 + 32));
    sub_224554038(v9, (_DWORD *)(a3 + 36));
    v10 = a2[4];
    v11 = *(_QWORD *)(v10 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v10 - 8);
    if (v11)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v11);
    a2[4] -= 16;
  }
}

void sub_22407AF28(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  double v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  std::__shared_weak_count *v38;
  __int128 v39;

  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CDB0;
  v39 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v39;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v38 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C9A0;
  v37 = v5 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_224554604(v7, (double *)&v34);
  sub_224554604(v7, (double *)&v34 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_224554604(v8, (double *)&v35);
  sub_224554604(v8, (double *)&v35 + 1);
  v9 = *(_QWORD *)(a2 + 48);
  sub_224554038(v9, &v36);
  sub_224554038(v9, (_DWORD *)&v36 + 1);
  v10 = v34;
  v11 = v35;
  v12 = 1.0 / *(double *)&v34;
  v13 = v36;
  v14 = v37;
  *((_OWORD *)v37 + 1) = v34;
  *((_OWORD *)v14 + 2) = v11;
  *((double *)v14 + 6) = v12;
  *((double *)v14 + 7) = 1.0 / *((double *)&v10 + 1);
  *((double *)v14 + 8) = -(*(double *)&v11 * v12);
  *((double *)v14 + 9) = -(*((double *)&v11 + 1) * (1.0 / *((double *)&v10 + 1)));
  *((_QWORD *)v14 + 10) = v10;
  *((_QWORD *)v14 + 12) = 0;
  *((_QWORD *)v14 + 13) = 0;
  *((_QWORD *)v14 + 11) = 0;
  *((_QWORD *)v14 + 14) = *((_QWORD *)&v10 + 1);
  *((_QWORD *)v14 + 15) = 0;
  *((_OWORD *)v14 + 8) = v11;
  *((_QWORD *)v14 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v14 + 19) = v13;
  v15 = v37;
  v16 = v37 + 16;
  v17 = *((_QWORD *)v37 + 2);
  v18 = *((_QWORD *)v37 + 3);
  v19 = v37 + 32;
  v20 = *((_QWORD *)v37 + 4);
  v21 = *((_QWORD *)v37 + 5);
  v22 = *((_QWORD *)v37 + 19);
  v23 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v23 + 1) = 0;
  *((_QWORD *)v23 + 2) = 0;
  *(_QWORD *)v23 = &off_24EC6CEF0;
  *((_QWORD *)v23 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v23 + 40) = *v16;
  *(_OWORD *)(v23 + 56) = *v19;
  v24 = *((_OWORD *)v15 + 3);
  *(_OWORD *)(v23 + 88) = *((_OWORD *)v15 + 4);
  *(_OWORD *)(v23 + 72) = v24;
  v25 = *((_OWORD *)v15 + 6);
  v26 = *((_OWORD *)v15 + 7);
  v27 = *((_OWORD *)v15 + 8);
  *((_QWORD *)v23 + 21) = *((_QWORD *)v15 + 18);
  *(_OWORD *)(v23 + 152) = v27;
  *(_OWORD *)(v23 + 136) = v26;
  *(_OWORD *)(v23 + 120) = v25;
  *(_OWORD *)(v23 + 104) = *((_OWORD *)v15 + 5);
  *((_QWORD *)v23 + 22) = v22;
  *((_QWORD *)v23 + 3) = &off_24EC6C9A0;
  *a3 = v17;
  a3[1] = v18;
  a3[2] = v20;
  a3[3] = v21;
  a3[4] = v22;
  a3[5] = v23 + 24;
  v28 = (std::__shared_weak_count *)a3[6];
  a3[6] = v23;
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(p_shared_owners);
    while (__stlxr(v30 - 1, p_shared_owners));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v38;
  if (v38)
  {
    v32 = (unint64_t *)&v38->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_22407B1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407B1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407B1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407B1E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407B1FC(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a4 < 2)
  {
    sub_22407B338((uint64_t)&v13, (uint64_t)a2, a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_2245544CC(v7, (float *)a3);
    sub_2245544CC(v7, (float *)(a3 + 4));
    v8 = a2[6];
    sub_2245544CC(v8, (float *)(a3 + 8));
    sub_2245544CC(v8, (float *)(a3 + 12));
    v9 = a2[6];
    sub_2245544CC(v9, (float *)(a3 + 16));
    sub_2245544CC(v9, (float *)(a3 + 20));
    sub_2245544CC(v9, (float *)(a3 + 24));
    sub_2245544CC(v9, (float *)(a3 + 28));
    sub_2245544CC(v9, (float *)(a3 + 32));
    v10 = a2[6];
    sub_224554038(v10, (_DWORD *)(a3 + 36));
    sub_224554038(v10, (_DWORD *)(a3 + 40));
    v11 = a2[4];
    v12 = *(_QWORD *)(v11 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v11 - 8);
    if (v12)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v12);
    a2[4] -= 16;
  }
}

void sub_22407B338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  float v29[8];
  char *v30;
  std::__shared_weak_count *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v28 = 0u;
  memset(v29, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6C9F8;
  v33 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v33;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v31 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C620;
  v30 = v5 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v7, (float *)&v28);
  sub_2245544CC(v7, (float *)&v28 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v8, (float *)&v28 + 2);
  sub_2245544CC(v8, (float *)((unint64_t)&v28 | 0xC));
  v9 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v9, v29);
  sub_2245544CC(v9, &v29[1]);
  sub_2245544CC(v9, &v29[2]);
  sub_2245544CC(v9, &v29[3]);
  sub_2245544CC(v9, &v29[4]);
  v10 = *(_QWORD *)(a2 + 48);
  sub_224554038(v10, &v29[5]);
  sub_224554038(v10, &v29[6]);
  v11 = sub_22415767C((uint64_t)&v28);
  v27 = *(_OWORD *)(v11 + 16);
  v32 = *(_OWORD *)(v11 + 32);
  LODWORD(v33) = *(_DWORD *)(v11 + 48);
  v12 = *(_QWORD *)(v11 + 120);
  v13 = (char *)operator new(0x98uLL);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = &off_24EC6CB38;
  v14 = *(_QWORD *)(v11 + 52);
  v15 = *(_WORD *)(v11 + 112);
  v16 = *(_OWORD *)(v11 + 16);
  *((_QWORD *)v13 + 4) = &off_24EC6C678;
  *(_OWORD *)(v13 + 40) = v16;
  v17 = *(_OWORD *)(v11 + 32);
  *((_DWORD *)v13 + 18) = *(_DWORD *)(v11 + 48);
  *(_OWORD *)(v13 + 56) = v17;
  *(_QWORD *)(v13 + 76) = v14;
  *(_OWORD *)(v13 + 84) = *(_OWORD *)(v11 + 60);
  v18 = *(_OWORD *)(v11 + 76);
  v19 = *(_OWORD *)(v11 + 92);
  *((_DWORD *)v13 + 33) = *(_DWORD *)(v11 + 108);
  *(_OWORD *)(v13 + 116) = v19;
  *(_OWORD *)(v13 + 100) = v18;
  *((_WORD *)v13 + 68) = v15;
  *((_QWORD *)v13 + 18) = v12;
  *((_QWORD *)v13 + 3) = &off_24EC6C620;
  v20 = v32;
  *(_OWORD *)a3 = v27;
  *(_OWORD *)(a3 + 16) = v20;
  *(_DWORD *)(a3 + 32) = v33;
  *(_QWORD *)(a3 + 36) = v12;
  v21 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v13 + 24;
  *(_QWORD *)(a3 + 56) = v13;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = v31;
  if (v31)
  {
    v25 = (unint64_t *)&v31->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22407B5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407B610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407B624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407B638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407B64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407B660(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a4 < 2)
  {
    sub_22407B79C((uint64_t)&v13, (uint64_t)a2, a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_224554604(v7, (double *)a3);
    sub_224554604(v7, (double *)(a3 + 8));
    v8 = a2[6];
    sub_224554604(v8, (double *)(a3 + 16));
    sub_224554604(v8, (double *)(a3 + 24));
    v9 = a2[6];
    sub_224554604(v9, (double *)(a3 + 32));
    sub_224554604(v9, (double *)(a3 + 40));
    sub_224554604(v9, (double *)(a3 + 48));
    sub_224554604(v9, (double *)(a3 + 56));
    sub_224554604(v9, (double *)(a3 + 64));
    v10 = a2[6];
    sub_224554038(v10, (_DWORD *)(a3 + 72));
    sub_224554038(v10, (_DWORD *)(a3 + 76));
    v11 = a2[4];
    v12 = *(_QWORD *)(v11 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v11 - 8);
    if (v12)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v12);
    a2[4] -= 16;
  }
}

void sub_22407B79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char *v39;
  std::__shared_weak_count *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v34 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA98;
  v45 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v44;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  *((_DWORD *)v5 + 30) = 10;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v40 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C7E0;
  v39 = v5 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_224554604(v7, (double *)&v34);
  sub_224554604(v7, (double *)&v34 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_224554604(v8, (double *)&v35);
  sub_224554604(v8, (double *)&v35 + 1);
  v9 = *(_QWORD *)(a2 + 48);
  sub_224554604(v9, (double *)&v36);
  sub_224554604(v9, (double *)&v36 + 1);
  sub_224554604(v9, (double *)&v37);
  sub_224554604(v9, (double *)&v37 + 1);
  sub_224554604(v9, (double *)&v38);
  v10 = *(_QWORD *)(a2 + 48);
  sub_224554038(v10, (_DWORD *)&v38 + 2);
  sub_224554038(v10, (_DWORD *)&v38 + 3);
  v11 = sub_2241577A4((uint64_t)&v34);
  v12 = *(_QWORD *)(v11 + 32);
  v13 = *(_QWORD *)(v11 + 16);
  v14 = *(_QWORD *)(v11 + 24);
  v15 = *(_QWORD *)(v11 + 40);
  v16 = *(_OWORD *)(v11 + 64);
  v41 = *(_OWORD *)(v11 + 48);
  v42 = v16;
  *(_QWORD *)&v43 = *(_QWORD *)(v11 + 80);
  v17 = *(_QWORD *)(v11 + 216);
  v18 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = &off_24EC6CBD8;
  v19 = *(_WORD *)(v11 + 208);
  *((_QWORD *)v18 + 4) = &off_24EC6C838;
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v11 + 16);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v11 + 32);
  v20 = *(_OWORD *)(v11 + 48);
  v21 = *(_OWORD *)(v11 + 64);
  *((_QWORD *)v18 + 13) = *(_QWORD *)(v11 + 80);
  *(_OWORD *)(v18 + 88) = v21;
  *(_OWORD *)(v18 + 72) = v20;
  v22 = *(_QWORD *)(v11 + 88);
  *((_DWORD *)v18 + 30) = *(_DWORD *)(v11 + 96);
  *((_QWORD *)v18 + 14) = v22;
  v23 = *(_OWORD *)(v11 + 120);
  *((_OWORD *)v18 + 8) = *(_OWORD *)(v11 + 104);
  *((_OWORD *)v18 + 9) = v23;
  v24 = *(_OWORD *)(v11 + 152);
  v25 = *(_OWORD *)(v11 + 168);
  v26 = *(_OWORD *)(v11 + 184);
  *((_QWORD *)v18 + 28) = *(_QWORD *)(v11 + 200);
  *((_OWORD *)v18 + 12) = v25;
  *((_OWORD *)v18 + 13) = v26;
  *((_OWORD *)v18 + 11) = v24;
  *((_OWORD *)v18 + 10) = *(_OWORD *)(v11 + 136);
  *((_WORD *)v18 + 116) = v19;
  *((_QWORD *)v18 + 30) = v17;
  *((_QWORD *)v18 + 3) = &off_24EC6C7E0;
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v14;
  *(_QWORD *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v15;
  v27 = v42;
  *(_OWORD *)(a3 + 32) = v41;
  *(_OWORD *)(a3 + 48) = v27;
  *(_QWORD *)(a3 + 64) = v43;
  *(_QWORD *)(a3 + 72) = v17;
  v28 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v18 + 24;
  *(_QWORD *)(a3 + 88) = v18;
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(p_shared_owners);
    while (__stlxr(v30 - 1, p_shared_owners));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v40;
  if (v40)
  {
    v32 = (unint64_t *)&v40->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_22407BAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407BAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407BAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407BB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407BB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407BB34(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a4 < 2)
  {
    sub_22407BC70((uint64_t)&v13, (uint64_t)a2, a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_2245544CC(v7, (float *)a3);
    sub_2245544CC(v7, (float *)(a3 + 4));
    v8 = a2[6];
    sub_2245544CC(v8, (float *)(a3 + 8));
    sub_2245544CC(v8, (float *)(a3 + 12));
    v9 = a2[6];
    sub_2245544CC(v9, (float *)(a3 + 16));
    sub_2245544CC(v9, (float *)(a3 + 20));
    sub_2245544CC(v9, (float *)(a3 + 24));
    sub_2245544CC(v9, (float *)(a3 + 28));
    sub_2245544CC(v9, (float *)(a3 + 32));
    v10 = a2[6];
    sub_224554038(v10, (_DWORD *)(a3 + 36));
    sub_224554038(v10, (_DWORD *)(a3 + 40));
    v11 = a2[4];
    v12 = *(_QWORD *)(v11 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v11 - 8);
    if (v12)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v12);
    a2[4] -= 16;
  }
}

void sub_22407BC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  float v29[8];
  char *v30;
  std::__shared_weak_count *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v28 = 0u;
  memset(v29, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA48;
  v33 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v33;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v31 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C730;
  v30 = v5 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v7, (float *)&v28);
  sub_2245544CC(v7, (float *)&v28 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v8, (float *)&v28 + 2);
  sub_2245544CC(v8, (float *)((unint64_t)&v28 | 0xC));
  v9 = *(_QWORD *)(a2 + 48);
  sub_2245544CC(v9, v29);
  sub_2245544CC(v9, &v29[1]);
  sub_2245544CC(v9, &v29[2]);
  sub_2245544CC(v9, &v29[3]);
  sub_2245544CC(v9, &v29[4]);
  v10 = *(_QWORD *)(a2 + 48);
  sub_224554038(v10, &v29[5]);
  sub_224554038(v10, &v29[6]);
  v11 = sub_22415767C((uint64_t)&v28);
  v27 = *(_OWORD *)(v11 + 16);
  v32 = *(_OWORD *)(v11 + 32);
  LODWORD(v33) = *(_DWORD *)(v11 + 48);
  v12 = *(_QWORD *)(v11 + 120);
  v13 = (char *)operator new(0x98uLL);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = &off_24EC6CB88;
  v14 = *(_QWORD *)(v11 + 52);
  v15 = *(_WORD *)(v11 + 112);
  v16 = *(_OWORD *)(v11 + 16);
  *((_QWORD *)v13 + 4) = &off_24EC6C678;
  *(_OWORD *)(v13 + 40) = v16;
  v17 = *(_OWORD *)(v11 + 32);
  *((_DWORD *)v13 + 18) = *(_DWORD *)(v11 + 48);
  *(_OWORD *)(v13 + 56) = v17;
  *(_QWORD *)(v13 + 76) = v14;
  *(_OWORD *)(v13 + 84) = *(_OWORD *)(v11 + 60);
  v18 = *(_OWORD *)(v11 + 76);
  v19 = *(_OWORD *)(v11 + 92);
  *((_DWORD *)v13 + 33) = *(_DWORD *)(v11 + 108);
  *(_OWORD *)(v13 + 116) = v19;
  *(_OWORD *)(v13 + 100) = v18;
  *((_WORD *)v13 + 68) = v15;
  *((_QWORD *)v13 + 18) = v12;
  *((_QWORD *)v13 + 3) = &off_24EC6C730;
  v20 = v32;
  *(_OWORD *)a3 = v27;
  *(_OWORD *)(a3 + 16) = v20;
  *(_DWORD *)(a3 + 32) = v33;
  *(_QWORD *)(a3 + 36) = v12;
  v21 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v13 + 24;
  *(_QWORD *)(a3 + 56) = v13;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = v31;
  if (v31)
  {
    v25 = (unint64_t *)&v31->__shared_owners_;
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
}

void sub_22407BF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407BF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407BF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407BF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407BF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407BF98(uint64_t a1, _QWORD *a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a4 < 2)
  {
    sub_22407C0D4((uint64_t)&v13, (uint64_t)a2, a3);
  }
  else
  {
    v6 = a2 + 2;
    sub_2231B1308(a2 + 2);
    v7 = a2[6];
    sub_224554604(v7, (double *)a3);
    sub_224554604(v7, (double *)(a3 + 8));
    v8 = a2[6];
    sub_224554604(v8, (double *)(a3 + 16));
    sub_224554604(v8, (double *)(a3 + 24));
    v9 = a2[6];
    sub_224554604(v9, (double *)(a3 + 32));
    sub_224554604(v9, (double *)(a3 + 40));
    sub_224554604(v9, (double *)(a3 + 48));
    sub_224554604(v9, (double *)(a3 + 56));
    sub_224554604(v9, (double *)(a3 + 64));
    v10 = a2[6];
    sub_224554038(v10, (_DWORD *)(a3 + 72));
    sub_224554038(v10, (_DWORD *)(a3 + 76));
    v11 = a2[4];
    v12 = *(_QWORD *)(v11 - 16) - (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2) + *(_QWORD *)(v11 - 8);
    if (v12)
      (*(void (**)(_QWORD *, uint64_t))(*v6 + 40))(a2 + 2, v12);
    a2[4] -= 16;
  }
}

void sub_22407C0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char *v39;
  std::__shared_weak_count *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v34 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CAE8;
  v45 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v44;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  *((_DWORD *)v5 + 30) = 10;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v40 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C8F0;
  v39 = v5 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_224554604(v7, (double *)&v34);
  sub_224554604(v7, (double *)&v34 + 1);
  v8 = *(_QWORD *)(a2 + 48);
  sub_224554604(v8, (double *)&v35);
  sub_224554604(v8, (double *)&v35 + 1);
  v9 = *(_QWORD *)(a2 + 48);
  sub_224554604(v9, (double *)&v36);
  sub_224554604(v9, (double *)&v36 + 1);
  sub_224554604(v9, (double *)&v37);
  sub_224554604(v9, (double *)&v37 + 1);
  sub_224554604(v9, (double *)&v38);
  v10 = *(_QWORD *)(a2 + 48);
  sub_224554038(v10, (_DWORD *)&v38 + 2);
  sub_224554038(v10, (_DWORD *)&v38 + 3);
  v11 = sub_2241577A4((uint64_t)&v34);
  v12 = *(_QWORD *)(v11 + 32);
  v13 = *(_QWORD *)(v11 + 16);
  v14 = *(_QWORD *)(v11 + 24);
  v15 = *(_QWORD *)(v11 + 40);
  v16 = *(_OWORD *)(v11 + 64);
  v41 = *(_OWORD *)(v11 + 48);
  v42 = v16;
  *(_QWORD *)&v43 = *(_QWORD *)(v11 + 80);
  v17 = *(_QWORD *)(v11 + 216);
  v18 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *(_QWORD *)v18 = &off_24EC6CC28;
  v19 = *(_WORD *)(v11 + 208);
  *((_QWORD *)v18 + 4) = &off_24EC6C838;
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v11 + 16);
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(v11 + 32);
  v20 = *(_OWORD *)(v11 + 48);
  v21 = *(_OWORD *)(v11 + 64);
  *((_QWORD *)v18 + 13) = *(_QWORD *)(v11 + 80);
  *(_OWORD *)(v18 + 88) = v21;
  *(_OWORD *)(v18 + 72) = v20;
  v22 = *(_QWORD *)(v11 + 88);
  *((_DWORD *)v18 + 30) = *(_DWORD *)(v11 + 96);
  *((_QWORD *)v18 + 14) = v22;
  v23 = *(_OWORD *)(v11 + 120);
  *((_OWORD *)v18 + 8) = *(_OWORD *)(v11 + 104);
  *((_OWORD *)v18 + 9) = v23;
  v24 = *(_OWORD *)(v11 + 152);
  v25 = *(_OWORD *)(v11 + 168);
  v26 = *(_OWORD *)(v11 + 184);
  *((_QWORD *)v18 + 28) = *(_QWORD *)(v11 + 200);
  *((_OWORD *)v18 + 12) = v25;
  *((_OWORD *)v18 + 13) = v26;
  *((_OWORD *)v18 + 11) = v24;
  *((_OWORD *)v18 + 10) = *(_OWORD *)(v11 + 136);
  *((_WORD *)v18 + 116) = v19;
  *((_QWORD *)v18 + 30) = v17;
  *((_QWORD *)v18 + 3) = &off_24EC6C8F0;
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v14;
  *(_QWORD *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v15;
  v27 = v42;
  *(_OWORD *)(a3 + 32) = v41;
  *(_OWORD *)(a3 + 48) = v27;
  *(_QWORD *)(a3 + 64) = v43;
  *(_QWORD *)(a3 + 72) = v17;
  v28 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v18 + 24;
  *(_QWORD *)(a3 + 88) = v18;
  if (v28)
  {
    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
    do
      v30 = __ldaxr(p_shared_owners);
    while (__stlxr(v30 - 1, p_shared_owners));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v40;
  if (v40)
  {
    v32 = (unint64_t *)&v40->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_22407C408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407C41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407C430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407C444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407C458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407C46C(_QWORD *a1, int *a2)
{
  int v4;
  uint64_t (*v5)(uint64_t, int *, _QWORD, void *, void *);
  int *v6;
  uint64_t (*v7)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v8;
  uint64_t (*v9)(uint64_t, int *, _QWORD, void *, void *);
  int *v10;
  uint64_t (*v11)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, int *, _QWORD, void *, void *);
  int *v14;
  uint64_t (*v15)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, int *, _QWORD, void *, void *);
  int *v18;
  uint64_t (*v19)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, int *, _QWORD, void *, void *);
  int *v22;
  uint64_t (*v23)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, int *, _QWORD, void *, void *);
  int *v26;
  uint64_t (*v27)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, int *, _QWORD, void *, void *);
  int *v30;
  uint64_t (*v31)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v32;
  uint64_t (*v33)(uint64_t, int *, _QWORD, void *, void *);
  int *v34;
  uint64_t (*v35)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v36;
  unsigned int v37;

  v37 = 0;
  sub_224554038(a1[6], &v37);
  *a2 = v37;
  sub_224151490((void (**)(int))a2);
  v4 = *a2;
  switch(v4)
  {
    case 0:
      v11 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v10 = a2 + 2;
      v9 = v11;
      if (!v11)
        goto LABEL_28;
      v12 = v9(3, v10, 0, &unk_24EC682D8, &unk_224697234);
      if (!v12)
        goto LABEL_28;
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_2231B2FE4((uint64_t)&v37, (uint64_t)a1, v12, v37);
      break;
    case 1:
      v15 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v14 = a2 + 2;
      v13 = v15;
      if (!v15)
        goto LABEL_28;
      v16 = v13(3, v14, 0, &unk_24EC68328, &unk_224697308);
      if (!v16)
        goto LABEL_28;
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_22407A6C0((uint64_t)&v37, a1, v16, v37);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v19 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v18 = a2 + 2;
      v17 = v19;
      if (!v19)
        goto LABEL_28;
      v20 = v17(3, v18, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v20)
        goto LABEL_28;
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_22407AA90((uint64_t)&v37, a1, v20, v37);
      break;
    case 11:
      v23 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v22 = a2 + 2;
      v21 = v23;
      if (!v23 || (v24 = v21(3, v22, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_28:
        sub_224071EE4();
      v37 = 2;
      sub_224554038(a1[6], &v37);
      sub_22407AE2C((uint64_t)&v37, a1, v24, v37);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v6 = a2 + 2;
          v5 = v7;
          if (!v7)
            goto LABEL_28;
          v8 = v5(3, v6, 0, &unk_24EC68418, &unk_224697588);
          if (!v8)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407B1FC((uint64_t)&v37, a1, v8, v37);
          break;
        case 'e':
          v27 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v26 = a2 + 2;
          v25 = v27;
          if (!v27)
            goto LABEL_28;
          v28 = v25(3, v26, 0, &unk_24EC68468, &unk_224697660);
          if (!v28)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407B660((uint64_t)&v37, a1, v28, v37);
          break;
        case 'n':
          v31 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v30 = a2 + 2;
          v29 = v31;
          if (!v31)
            goto LABEL_28;
          v32 = v29(3, v30, 0, &unk_24EC684B8, &unk_224697738);
          if (!v32)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407BB34((uint64_t)&v37, a1, v32, v37);
          break;
        case 'o':
          v35 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v34 = a2 + 2;
          v33 = v35;
          if (!v35)
            goto LABEL_28;
          v36 = v33(3, v34, 0, &unk_24EC68508, &unk_224697810);
          if (!v36)
            goto LABEL_28;
          v37 = 2;
          sub_224554038(a1[6], &v37);
          sub_22407BF98((uint64_t)&v37, a1, v36, v37);
          break;
        default:
          return;
      }
      break;
  }
}

uint64_t sub_22407C850(uint64_t a1, unint64_t a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544138(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451C444(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_22407C94C((uint64_t)&v11, a1, a2);
  else
    sub_22407CB48(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

_QWORD *sub_22407C94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;
  _QWORD v12[2];
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  void (*v15)(uint64_t);
  std::__shared_weak_count *v16;
  int v17;
  _QWORD v18[5];

  v18[4] = *MEMORY[0x24BDAC8D0];
  sub_224159374(&v14);
  sub_22414F578((uint64_t)&v17, (uint64_t)&v14);
  v14 = &off_24EC6D000;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_22407F44C(a2, (unint64_t)&v17);
  sub_224150AD4(&v17, v12);
  sub_224151B5C((uint64_t)&v14, (uint64_t)v12);
  v12[0] = &off_24EC6D000;
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_DWORD *)a3 = (_DWORD)v14;
  result = sub_224079E90((_QWORD *)(a3 + 8), &v15);
  if (v15)
    result = (_QWORD *)((uint64_t (*)(_QWORD, void (**)(uint64_t), _QWORD, _QWORD, _QWORD))v15)(0, &v15, 0, 0, 0);
  if (v18[0])
    return (_QWORD *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v18[0])(0, v18, 0, 0, 0);
  return result;
}

void sub_22407CAD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22407CB48(uint64_t a1, unint64_t a2)
{
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v7;
  uint64_t (*v8)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v9;
  int v10;
  int v11;
  char *v12;
  unsigned int v13;
  uint64_t (*v14)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v15;
  uint64_t (*v16)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v17;
  int v18;
  int v19;
  char *v20;
  unsigned int v21;
  uint64_t (*v22)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v23;
  uint64_t (*v24)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v25;
  int v26;
  int v27;
  char *v28;
  unsigned int v29;
  uint64_t (*v30)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v31;
  uint64_t (*v32)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v33;
  int v34;
  int v35;
  char *v36;
  unsigned int v37;
  uint64_t (*v38)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v39;
  uint64_t (*v40)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v41;
  int v42;
  int v43;
  char *v44;
  unsigned int v45;
  uint64_t (*v46)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v47;
  uint64_t (*v48)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v49;
  int v50;
  int v51;
  char *v52;
  unsigned int v53;
  uint64_t (*v54)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v55;
  uint64_t (*v56)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v57;
  int v58;
  int v59;
  char *v60;
  unsigned int v61;
  uint64_t (*v62)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v63;
  uint64_t (*v64)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v65;
  int v66;
  int v67;
  char *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *exception;
  unint64_t v73;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "camera_type";
  *(_QWORD *)(a1 + 96) = 11;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v73 = a2;
  sub_22407D258((uint64_t *)a1, (_DWORD **)&v73);
  sub_224152F70((void (**)(int))a2);
  v5 = *(_DWORD *)a2;
  switch(v5)
  {
    case 0:
      v16 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v15 = a2 + 8;
      v14 = v16;
      if (!v16)
        goto LABEL_95;
      v17 = (float *)v14(3, v15, 0, &unk_24EC682D8, &unk_224697234);
      if (!v17)
        goto LABEL_95;
      v18 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v18)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      v20 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v20, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v21 = 2;
      else
        v21 = v73;
      sub_223BC3810(a1, v17, v21);
      break;
    case 1:
      v24 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v23 = a2 + 8;
      v22 = v24;
      if (!v24)
        goto LABEL_95;
      v25 = v22(3, v23, 0, &unk_24EC68328, &unk_224697308);
      if (!v25)
        goto LABEL_95;
      v26 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v27 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v27)
        *(_BYTE *)(a1 + 104) = 1;
      v28 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v28, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v29 = 2;
      else
        v29 = v73;
      sub_22407D448(a1, v25, v29);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v32 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v31 = a2 + 8;
      v30 = v32;
      if (!v32)
        goto LABEL_95;
      v33 = (float *)v30(3, v31, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v33)
        goto LABEL_95;
      v34 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v34)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v35 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v35)
        *(_BYTE *)(a1 + 104) = 1;
      v36 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v36, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v37 = 2;
      else
        v37 = v73;
      sub_22407D880(a1, v33, v37);
      break;
    case 11:
      v40 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v39 = a2 + 8;
      v38 = v40;
      if (!v40 || (v41 = v38(3, v39, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_95:
        sub_224071EE4();
      v42 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v42)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v43 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v43)
        *(_BYTE *)(a1 + 104) = 1;
      v44 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v44, &v73);
      if (HIDWORD(v73))
      {
LABEL_96:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      if (v73 >= 2)
        v45 = 2;
      else
        v45 = v73;
      sub_22407DC84(a1, v41, v45);
      break;
    default:
      switch(v5)
      {
        case 'd':
          v8 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v7 = a2 + 8;
          v6 = v8;
          if (!v8)
            goto LABEL_95;
          v9 = (float *)v6(3, v7, 0, &unk_24EC68418, &unk_224697588);
          if (!v9)
            goto LABEL_95;
          v10 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v10)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v11 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v11)
            *(_BYTE *)(a1 + 104) = 1;
          v12 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v12, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v13 = 2;
          else
            v13 = v73;
          sub_22407E0BC(a1, v9, v13);
          break;
        case 'e':
          v48 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v47 = a2 + 8;
          v46 = v48;
          if (!v48)
            goto LABEL_95;
          v49 = (double *)v46(3, v47, 0, &unk_24EC68468, &unk_224697660);
          if (!v49)
            goto LABEL_95;
          v50 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v50)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v51 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v51)
            *(_BYTE *)(a1 + 104) = 1;
          v52 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v52, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v53 = 2;
          else
            v53 = v73;
          sub_22407E568(a1, v49, v53);
          break;
        case 'n':
          v56 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v55 = a2 + 8;
          v54 = v56;
          if (!v56)
            goto LABEL_95;
          v57 = (float *)v54(3, v55, 0, &unk_24EC684B8, &unk_224697738);
          if (!v57)
            goto LABEL_95;
          v58 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v58)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v59 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v59)
            *(_BYTE *)(a1 + 104) = 1;
          v60 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v60, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v61 = 2;
          else
            v61 = v73;
          sub_22407EA84(a1, v57, v61);
          break;
        case 'o':
          v64 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v63 = a2 + 8;
          v62 = v64;
          if (!v64)
            goto LABEL_95;
          v65 = (double *)v62(3, v63, 0, &unk_24EC68508, &unk_224697810);
          if (!v65)
            goto LABEL_95;
          v66 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v66)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v67 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v67)
            *(_BYTE *)(a1 + 104) = 1;
          v68 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v68, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v69 = 2;
          else
            v69 = v73;
          sub_22407EF30(a1, v65, v69);
          break;
        default:
          return;
      }
      break;
  }
  v70 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v70 - 8);
  v71 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v71 - 8);
  *(_QWORD *)(a1 + 48) = v70 - 8;
  *(_QWORD *)(a1 + 72) = v71 - 8;
}

void sub_22407D258(uint64_t *a1, _DWORD **a2)
{
  void **v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2245443F0(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_22451C83C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = operator new();
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_22456E918(v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_224153714((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)(v8 + *(_QWORD *)(v12 - 24)) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v8 + 16) = v13;
  if (*(char *)(v8 + 111) < 0)
    operator delete(*(void **)(v8 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x227684BE0](v8 + 128);
  MEMORY[0x227684CE8](v8, 0x10B2C40EED050F3);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_22407D3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_22456E764((uint64_t *)&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_22407D448(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  char *v10;
  _QWORD v11[2];

  if (a3 < 2)
  {
    sub_22407D56C((uint64_t)v11, a1, (_QWORD *)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v6, (double *)a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v8, (double *)(a2 + 16));
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v11[0] = 2;
    v11[1] = a2 + 32;
    v10 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v10, (uint64_t)v11);
  }
}

void sub_22407D56C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  std::__shared_weak_count *v41;
  _QWORD v42[2];
  __int128 v43;

  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD60;
  v43 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v43;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v41 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC35EB0;
  v40 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v8, (double *)&v37);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v10, (double *)&v38);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v42[0] = 2;
  v42[1] = &v39;
  v12 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v12, (uint64_t)v42);
  v13 = v37;
  v14 = v38;
  v15 = 1.0 / *(double *)&v37;
  v16 = v39;
  v17 = v40;
  *((_OWORD *)v40 + 1) = v37;
  *((_OWORD *)v17 + 2) = v14;
  *((double *)v17 + 6) = v15;
  *((double *)v17 + 7) = 1.0 / *((double *)&v13 + 1);
  *((double *)v17 + 8) = -(*(double *)&v14 * v15);
  *((double *)v17 + 9) = -(*((double *)&v14 + 1) * (1.0 / *((double *)&v13 + 1)));
  *((_QWORD *)v17 + 10) = v13;
  *((_QWORD *)v17 + 12) = 0;
  *((_QWORD *)v17 + 13) = 0;
  *((_QWORD *)v17 + 11) = 0;
  *((_QWORD *)v17 + 14) = *((_QWORD *)&v13 + 1);
  *((_QWORD *)v17 + 15) = 0;
  *((_OWORD *)v17 + 8) = v14;
  *((_QWORD *)v17 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v17 + 19) = v16;
  v18 = v40;
  v19 = v40 + 16;
  v20 = *((_QWORD *)v40 + 2);
  v21 = *((_QWORD *)v40 + 3);
  v22 = v40 + 32;
  v23 = *((_QWORD *)v40 + 4);
  v24 = *((_QWORD *)v40 + 5);
  v25 = *((_QWORD *)v40 + 19);
  v26 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  *(_QWORD *)v26 = &off_24EC6CEA0;
  *((_QWORD *)v26 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v26 + 40) = *v19;
  *(_OWORD *)(v26 + 56) = *v22;
  v27 = *((_OWORD *)v18 + 3);
  *(_OWORD *)(v26 + 88) = *((_OWORD *)v18 + 4);
  *(_OWORD *)(v26 + 72) = v27;
  v28 = *((_OWORD *)v18 + 6);
  v29 = *((_OWORD *)v18 + 7);
  v30 = *((_OWORD *)v18 + 8);
  *((_QWORD *)v26 + 21) = *((_QWORD *)v18 + 18);
  *(_OWORD *)(v26 + 152) = v30;
  *(_OWORD *)(v26 + 136) = v29;
  *(_OWORD *)(v26 + 120) = v28;
  *(_OWORD *)(v26 + 104) = *((_OWORD *)v18 + 5);
  *((_QWORD *)v26 + 22) = v25;
  *((_QWORD *)v26 + 3) = &off_24EC35EB0;
  *a3 = v20;
  a3[1] = v21;
  a3[2] = v23;
  a3[3] = v24;
  a3[4] = v25;
  a3[5] = v26 + 24;
  v31 = (std::__shared_weak_count *)a3[6];
  a3[6] = v26;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = v41;
  if (v41)
  {
    v35 = (unint64_t *)&v41->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_22407D858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407D86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407D880(uint64_t a1, float *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  char *v10;
  _QWORD v11[2];

  if (a3 < 2)
  {
    sub_22407D9A4((uint64_t)v11, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v11[0] = 2;
    v11[1] = a2 + 4;
    v10 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v10, (uint64_t)v11);
  }
}

void sub_22407D9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  float32x2_t v13;
  float32x2_t *v14;
  float32x2_t v15;
  float32x2_t v16;
  float32x2_t v22;
  float32x2_t v23;
  int32x2_t v24;
  int8x16_t v25;
  int8x16_t *v26;
  uint64_t v27;
  char *v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  int8x16_t v38;
  float32x2_t v39;
  float32x2_t v40;
  float32x2_t v41;
  int8x16_t *v42;
  std::__shared_weak_count *v43;
  _QWORD v44[2];

  v39 = 0;
  v40 = 0;
  v41 = 0;
  v5 = (char *)operator new(0x78uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD10;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC20868;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 56) = v6;
  *(int32x4_t *)(v5 + 72) = v6;
  *(int32x4_t *)(v5 + 88) = v6;
  *((_DWORD *)v5 + 26) = 2143289344;
  *((_QWORD *)v5 + 14) = 0;
  v43 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC37688;
  v42 = (int8x16_t *)(v5 + 24);
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v8, (float *)&v39);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v10, (float *)&v40);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v44[0] = 2;
  v44[1] = &v41;
  v12 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v12, (uint64_t)v44);
  v13 = v41;
  v14 = (float32x2_t *)v42;
  v15 = v39;
  v16 = v40;
  __asm { FMOV            V2.2S, #1.0 }
  v22 = vdiv_f32(_D2, v39);
  v23 = vmul_f32(v22, vneg_f32(v40));
  v24 = vzip1_s32((int32x2_t)v39, (int32x2_t)v40);
  v25.i64[0] = v24.u32[0];
  v25.i64[1] = v24.u32[1];
  v42[1] = vorrq_s8((int8x16_t)vshll_n_s32(vzip2_s32((int32x2_t)v39, (int32x2_t)v40), 0x20uLL), v25);
  v14[4] = v22;
  v14[5] = v23;
  v14[6].i32[0] = v15.i32[0];
  v14[7] = 0;
  v14[6].i32[1] = 0;
  v14[8].i32[0] = v15.i32[1];
  v14[8].i32[1] = 0;
  v14[9] = v16;
  v14[10].i32[0] = 1065353216;
  v14[11] = v13;
  v26 = v42;
  v38 = v42[1];
  v27 = v42[5].i64[1];
  v28 = (char *)operator new(0x78uLL);
  *((_QWORD *)v28 + 1) = 0;
  *((_QWORD *)v28 + 2) = 0;
  *(_QWORD *)v28 = &off_24EC6CE50;
  v29 = v26[1];
  *((_QWORD *)v28 + 4) = &off_24EC20868;
  *(int8x16_t *)(v28 + 40) = v29;
  *(int8x16_t *)(v28 + 56) = v26[2];
  v30 = v26[3];
  v31 = v26[4];
  *((_DWORD *)v28 + 26) = v26[5].i32[0];
  *(int8x16_t *)(v28 + 88) = v31;
  *(int8x16_t *)(v28 + 72) = v30;
  *((_QWORD *)v28 + 3) = &off_24EC37688;
  *((_QWORD *)v28 + 14) = v27;
  *(int8x16_t *)a3 = v38;
  *(_QWORD *)(a3 + 16) = v27;
  *(_QWORD *)(a3 + 24) = v28 + 24;
  v32 = *(std::__shared_weak_count **)(a3 + 32);
  *(_QWORD *)(a3 + 32) = v28;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v43;
  if (v43)
  {
    v36 = (unint64_t *)&v43->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_22407DC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407DC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407DC84(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  char *v10;
  _QWORD v11[2];

  if (a3 < 2)
  {
    sub_22407DDA8((uint64_t)v11, a1, (_QWORD *)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v6, (double *)a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v8, (double *)(a2 + 16));
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v11[0] = 2;
    v11[1] = a2 + 32;
    v10 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v10, (uint64_t)v11);
  }
}

void sub_22407DDA8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  double v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  std::__shared_weak_count *v41;
  _QWORD v42[2];
  __int128 v43;

  v39 = 0;
  v37 = 0u;
  v38 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CDB0;
  v43 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v43;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v41 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C9A0;
  v40 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v8, (double *)&v37);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v10, (double *)&v38);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v42[0] = 2;
  v42[1] = &v39;
  v12 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v12, (uint64_t)v42);
  v13 = v37;
  v14 = v38;
  v15 = 1.0 / *(double *)&v37;
  v16 = v39;
  v17 = v40;
  *((_OWORD *)v40 + 1) = v37;
  *((_OWORD *)v17 + 2) = v14;
  *((double *)v17 + 6) = v15;
  *((double *)v17 + 7) = 1.0 / *((double *)&v13 + 1);
  *((double *)v17 + 8) = -(*(double *)&v14 * v15);
  *((double *)v17 + 9) = -(*((double *)&v14 + 1) * (1.0 / *((double *)&v13 + 1)));
  *((_QWORD *)v17 + 10) = v13;
  *((_QWORD *)v17 + 12) = 0;
  *((_QWORD *)v17 + 13) = 0;
  *((_QWORD *)v17 + 11) = 0;
  *((_QWORD *)v17 + 14) = *((_QWORD *)&v13 + 1);
  *((_QWORD *)v17 + 15) = 0;
  *((_OWORD *)v17 + 8) = v14;
  *((_QWORD *)v17 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v17 + 19) = v16;
  v18 = v40;
  v19 = v40 + 16;
  v20 = *((_QWORD *)v40 + 2);
  v21 = *((_QWORD *)v40 + 3);
  v22 = v40 + 32;
  v23 = *((_QWORD *)v40 + 4);
  v24 = *((_QWORD *)v40 + 5);
  v25 = *((_QWORD *)v40 + 19);
  v26 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  *(_QWORD *)v26 = &off_24EC6CEF0;
  *((_QWORD *)v26 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v26 + 40) = *v19;
  *(_OWORD *)(v26 + 56) = *v22;
  v27 = *((_OWORD *)v18 + 3);
  *(_OWORD *)(v26 + 88) = *((_OWORD *)v18 + 4);
  *(_OWORD *)(v26 + 72) = v27;
  v28 = *((_OWORD *)v18 + 6);
  v29 = *((_OWORD *)v18 + 7);
  v30 = *((_OWORD *)v18 + 8);
  *((_QWORD *)v26 + 21) = *((_QWORD *)v18 + 18);
  *(_OWORD *)(v26 + 152) = v30;
  *(_OWORD *)(v26 + 136) = v29;
  *(_OWORD *)(v26 + 120) = v28;
  *(_OWORD *)(v26 + 104) = *((_OWORD *)v18 + 5);
  *((_QWORD *)v26 + 22) = v25;
  *((_QWORD *)v26 + 3) = &off_24EC6C9A0;
  *a3 = v20;
  a3[1] = v21;
  a3[2] = v23;
  a3[3] = v24;
  a3[4] = v25;
  a3[5] = v26 + 24;
  v31 = (std::__shared_weak_count *)a3[6];
  a3[6] = v26;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v33 = __ldaxr(p_shared_owners);
    while (__stlxr(v33 - 1, p_shared_owners));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = v41;
  if (v41)
  {
    v35 = (unint64_t *)&v41->__shared_owners_;
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_22407E094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407E0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407E0BC(uint64_t a1, float *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_22407E220((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v12, (uint64_t)v13);
  }
}

void sub_22407E220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  float v33[8];
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v32 = 0u;
  memset(v33, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6C9F8;
  v37 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v37;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C620;
  v34 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v8, (float *)&v32);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v10, (float *)&v32 + 2);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v12, v33);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v36 = 2;
  *((_QWORD *)&v36 + 1) = &v33[5];
  v14 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v14, (uint64_t)&v36);
  v15 = sub_22415767C((uint64_t)&v32);
  v31 = *(_OWORD *)(v15 + 16);
  v36 = *(_OWORD *)(v15 + 32);
  LODWORD(v37) = *(_DWORD *)(v15 + 48);
  v16 = *(_QWORD *)(v15 + 120);
  v17 = (char *)operator new(0x98uLL);
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = &off_24EC6CB38;
  v18 = *(_QWORD *)(v15 + 52);
  v19 = *(_WORD *)(v15 + 112);
  v20 = *(_OWORD *)(v15 + 16);
  *((_QWORD *)v17 + 4) = &off_24EC6C678;
  *(_OWORD *)(v17 + 40) = v20;
  v21 = *(_OWORD *)(v15 + 32);
  *((_DWORD *)v17 + 18) = *(_DWORD *)(v15 + 48);
  *(_OWORD *)(v17 + 56) = v21;
  *(_QWORD *)(v17 + 76) = v18;
  *(_OWORD *)(v17 + 84) = *(_OWORD *)(v15 + 60);
  v22 = *(_OWORD *)(v15 + 76);
  v23 = *(_OWORD *)(v15 + 92);
  *((_DWORD *)v17 + 33) = *(_DWORD *)(v15 + 108);
  *(_OWORD *)(v17 + 116) = v23;
  *(_OWORD *)(v17 + 100) = v22;
  *((_WORD *)v17 + 68) = v19;
  *((_QWORD *)v17 + 18) = v16;
  *((_QWORD *)v17 + 3) = &off_24EC6C620;
  v24 = v36;
  *(_OWORD *)a3 = v31;
  *(_OWORD *)(a3 + 16) = v24;
  *(_DWORD *)(a3 + 32) = v37;
  *(_QWORD *)(a3 + 36) = v16;
  v25 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v17 + 24;
  *(_QWORD *)(a3 + 56) = v17;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_22407E540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407E554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407E568(uint64_t a1, double *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_22407E6CC((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v12, (uint64_t)v13);
  }
}

void sub_22407E6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  __int128 v41;
  char *v42;
  std::__shared_weak_count *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v41 = 0u;
  v39 = 0u;
  memset(v40, 0, sizeof(v40));
  v38 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA98;
  v48 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v47;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v43 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C7E0;
  v42 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v8, (double *)&v38);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v10, (double *)&v39);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v12, (double *)v40);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v44 = 2;
  *((_QWORD *)&v44 + 1) = (char *)&v41 + 8;
  v14 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v14, (uint64_t)&v44);
  v15 = sub_2241577A4((uint64_t)&v38);
  v16 = *(_QWORD *)(v15 + 32);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  v19 = *(_QWORD *)(v15 + 40);
  v20 = *(_OWORD *)(v15 + 64);
  v44 = *(_OWORD *)(v15 + 48);
  v45 = v20;
  *(_QWORD *)&v46 = *(_QWORD *)(v15 + 80);
  v21 = *(_QWORD *)(v15 + 216);
  v22 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CBD8;
  v23 = *(_WORD *)(v15 + 208);
  *((_QWORD *)v22 + 4) = &off_24EC6C838;
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v15 + 32);
  v24 = *(_OWORD *)(v15 + 48);
  v25 = *(_OWORD *)(v15 + 64);
  *((_QWORD *)v22 + 13) = *(_QWORD *)(v15 + 80);
  *(_OWORD *)(v22 + 88) = v25;
  *(_OWORD *)(v22 + 72) = v24;
  v26 = *(_QWORD *)(v15 + 88);
  *((_DWORD *)v22 + 30) = *(_DWORD *)(v15 + 96);
  *((_QWORD *)v22 + 14) = v26;
  v27 = *(_OWORD *)(v15 + 120);
  *((_OWORD *)v22 + 8) = *(_OWORD *)(v15 + 104);
  *((_OWORD *)v22 + 9) = v27;
  v28 = *(_OWORD *)(v15 + 152);
  v29 = *(_OWORD *)(v15 + 168);
  v30 = *(_OWORD *)(v15 + 184);
  *((_QWORD *)v22 + 28) = *(_QWORD *)(v15 + 200);
  *((_OWORD *)v22 + 12) = v29;
  *((_OWORD *)v22 + 13) = v30;
  *((_OWORD *)v22 + 11) = v28;
  *((_OWORD *)v22 + 10) = *(_OWORD *)(v15 + 136);
  *((_WORD *)v22 + 116) = v23;
  *((_QWORD *)v22 + 30) = v21;
  *((_QWORD *)v22 + 3) = &off_24EC6C7E0;
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v19;
  v31 = v45;
  *(_OWORD *)(a3 + 32) = v44;
  *(_OWORD *)(a3 + 48) = v31;
  *(_QWORD *)(a3 + 64) = v46;
  *(_QWORD *)(a3 + 72) = v21;
  v32 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v22 + 24;
  *(_QWORD *)(a3 + 88) = v22;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v43;
  if (v43)
  {
    v36 = (unint64_t *)&v43->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_22407EA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407EA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407EA84(uint64_t a1, float *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_22407EBE8((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545240(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v12, (uint64_t)v13);
  }
}

void sub_22407EBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  float v33[8];
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v32 = 0u;
  memset(v33, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA48;
  v37 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v37;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C730;
  v34 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v8, (float *)&v32);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v10, (float *)&v32 + 2);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545240(v12, v33);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v36 = 2;
  *((_QWORD *)&v36 + 1) = &v33[5];
  v14 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v14, (uint64_t)&v36);
  v15 = sub_22415767C((uint64_t)&v32);
  v31 = *(_OWORD *)(v15 + 16);
  v36 = *(_OWORD *)(v15 + 32);
  LODWORD(v37) = *(_DWORD *)(v15 + 48);
  v16 = *(_QWORD *)(v15 + 120);
  v17 = (char *)operator new(0x98uLL);
  *((_QWORD *)v17 + 1) = 0;
  *((_QWORD *)v17 + 2) = 0;
  *(_QWORD *)v17 = &off_24EC6CB88;
  v18 = *(_QWORD *)(v15 + 52);
  v19 = *(_WORD *)(v15 + 112);
  v20 = *(_OWORD *)(v15 + 16);
  *((_QWORD *)v17 + 4) = &off_24EC6C678;
  *(_OWORD *)(v17 + 40) = v20;
  v21 = *(_OWORD *)(v15 + 32);
  *((_DWORD *)v17 + 18) = *(_DWORD *)(v15 + 48);
  *(_OWORD *)(v17 + 56) = v21;
  *(_QWORD *)(v17 + 76) = v18;
  *(_OWORD *)(v17 + 84) = *(_OWORD *)(v15 + 60);
  v22 = *(_OWORD *)(v15 + 76);
  v23 = *(_OWORD *)(v15 + 92);
  *((_DWORD *)v17 + 33) = *(_DWORD *)(v15 + 108);
  *(_OWORD *)(v17 + 116) = v23;
  *(_OWORD *)(v17 + 100) = v22;
  *((_WORD *)v17 + 68) = v19;
  *((_QWORD *)v17 + 18) = v16;
  *((_QWORD *)v17 + 3) = &off_24EC6C730;
  v24 = v36;
  *(_OWORD *)a3 = v31;
  *(_OWORD *)(a3 + 16) = v24;
  *(_DWORD *)(a3 + 32) = v37;
  *(_QWORD *)(a3 + 36) = v16;
  v25 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v17 + 24;
  *(_QWORD *)(a3 + 56) = v17;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_22407EF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407EF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22407EF30(uint64_t a1, double *a2, unsigned int a3)
{
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char *v12;
  _QWORD v13[2];

  if (a3 < 2)
  {
    sub_22407F094((uint64_t)v13, a1, (uint64_t)a2);
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "focal_length";
    *(_QWORD *)(a1 + 96) = 12;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v6, a2);
    v7 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "principal_point";
    *(_QWORD *)(a1 + 96) = 15;
    if (!v7)
      *(_BYTE *)(a1 + 104) = 1;
    v8 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v8, a2 + 2);
    v9 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "distortion_coeff";
    *(_QWORD *)(a1 + 96) = 16;
    if (!v9)
      *(_BYTE *)(a1 + 104) = 1;
    v10 = sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224545370(v10, a2 + 4);
    v11 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "image_size";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v11)
      *(_BYTE *)(a1 + 104) = 1;
    v13[0] = 2;
    v13[1] = a2 + 9;
    v12 = (char *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_224544E0C(v12, (uint64_t)v13);
  }
}

void sub_22407F094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[2];
  __int128 v41;
  char *v42;
  std::__shared_weak_count *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v41 = 0u;
  v39 = 0u;
  memset(v40, 0, sizeof(v40));
  v38 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CAE8;
  v48 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v47;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v43 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C8F0;
  v42 = v5 + 24;
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "focal_length";
  *(_QWORD *)(a2 + 96) = 12;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v8 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v8, (double *)&v38);
  v9 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "principal_point";
  *(_QWORD *)(a2 + 96) = 15;
  if (!v9)
    *(_BYTE *)(a2 + 104) = 1;
  v10 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v10, (double *)&v39);
  v11 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "distortion_coeff";
  *(_QWORD *)(a2 + 96) = 16;
  if (!v11)
    *(_BYTE *)(a2 + 104) = 1;
  v12 = sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224545370(v12, (double *)v40);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "image_size";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v13)
    *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)&v44 = 2;
  *((_QWORD *)&v44 + 1) = (char *)&v41 + 8;
  v14 = (char *)sub_2245443F0((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  sub_224544E0C(v14, (uint64_t)&v44);
  v15 = sub_2241577A4((uint64_t)&v38);
  v16 = *(_QWORD *)(v15 + 32);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = *(_QWORD *)(v15 + 24);
  v19 = *(_QWORD *)(v15 + 40);
  v20 = *(_OWORD *)(v15 + 64);
  v44 = *(_OWORD *)(v15 + 48);
  v45 = v20;
  *(_QWORD *)&v46 = *(_QWORD *)(v15 + 80);
  v21 = *(_QWORD *)(v15 + 216);
  v22 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CC28;
  v23 = *(_WORD *)(v15 + 208);
  *((_QWORD *)v22 + 4) = &off_24EC6C838;
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v15 + 32);
  v24 = *(_OWORD *)(v15 + 48);
  v25 = *(_OWORD *)(v15 + 64);
  *((_QWORD *)v22 + 13) = *(_QWORD *)(v15 + 80);
  *(_OWORD *)(v22 + 88) = v25;
  *(_OWORD *)(v22 + 72) = v24;
  v26 = *(_QWORD *)(v15 + 88);
  *((_DWORD *)v22 + 30) = *(_DWORD *)(v15 + 96);
  *((_QWORD *)v22 + 14) = v26;
  v27 = *(_OWORD *)(v15 + 120);
  *((_OWORD *)v22 + 8) = *(_OWORD *)(v15 + 104);
  *((_OWORD *)v22 + 9) = v27;
  v28 = *(_OWORD *)(v15 + 152);
  v29 = *(_OWORD *)(v15 + 168);
  v30 = *(_OWORD *)(v15 + 184);
  *((_QWORD *)v22 + 28) = *(_QWORD *)(v15 + 200);
  *((_OWORD *)v22 + 12) = v29;
  *((_OWORD *)v22 + 13) = v30;
  *((_OWORD *)v22 + 11) = v28;
  *((_OWORD *)v22 + 10) = *(_OWORD *)(v15 + 136);
  *((_WORD *)v22 + 116) = v23;
  *((_QWORD *)v22 + 30) = v21;
  *((_QWORD *)v22 + 3) = &off_24EC6C8F0;
  *(_QWORD *)a3 = v17;
  *(_QWORD *)(a3 + 8) = v18;
  *(_QWORD *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v19;
  v31 = v45;
  *(_OWORD *)(a3 + 32) = v44;
  *(_OWORD *)(a3 + 48) = v31;
  *(_QWORD *)(a3 + 64) = v46;
  *(_QWORD *)(a3 + 72) = v21;
  v32 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v22 + 24;
  *(_QWORD *)(a3 + 88) = v22;
  if (v32)
  {
    p_shared_owners = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(p_shared_owners);
    while (__stlxr(v34 - 1, p_shared_owners));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  v35 = v43;
  if (v43)
  {
    v36 = (unint64_t *)&v43->__shared_owners_;
    do
      v37 = __ldaxr(v36);
    while (__stlxr(v37 - 1, v36));
    if (!v37)
    {
      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
      std::__shared_weak_count::__release_weak(v35);
    }
  }
}

void sub_22407F424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407F438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22407F44C(uint64_t a1, unint64_t a2)
{
  int v4;
  int v5;
  uint64_t (*v6)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v7;
  uint64_t (*v8)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v9;
  int v10;
  int v11;
  char *v12;
  unsigned int v13;
  uint64_t (*v14)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v15;
  uint64_t (*v16)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v17;
  int v18;
  int v19;
  char *v20;
  unsigned int v21;
  uint64_t (*v22)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v23;
  uint64_t (*v24)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v25;
  int v26;
  int v27;
  char *v28;
  unsigned int v29;
  uint64_t (*v30)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v31;
  uint64_t (*v32)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v33;
  int v34;
  int v35;
  char *v36;
  unsigned int v37;
  uint64_t (*v38)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v39;
  uint64_t (*v40)(uint64_t, unint64_t, _QWORD, void *, void *);
  uint64_t v41;
  int v42;
  int v43;
  char *v44;
  unsigned int v45;
  uint64_t (*v46)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v47;
  uint64_t (*v48)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v49;
  int v50;
  int v51;
  char *v52;
  unsigned int v53;
  uint64_t (*v54)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v55;
  uint64_t (*v56)(uint64_t, unint64_t, _QWORD, void *, void *);
  float *v57;
  int v58;
  int v59;
  char *v60;
  unsigned int v61;
  uint64_t (*v62)(uint64_t, unint64_t, _QWORD, void *, void *);
  unint64_t v63;
  uint64_t (*v64)(uint64_t, unint64_t, _QWORD, void *, void *);
  double *v65;
  int v66;
  int v67;
  char *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *exception;
  unint64_t v73;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "camera_type";
  *(_QWORD *)(a1 + 96) = 11;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v73 = a2;
  sub_22407D258((uint64_t *)a1, (_DWORD **)&v73);
  sub_224151490((void (**)(int))a2);
  v5 = *(_DWORD *)a2;
  switch(v5)
  {
    case 0:
      v16 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v15 = a2 + 8;
      v14 = v16;
      if (!v16)
        goto LABEL_95;
      v17 = (float *)v14(3, v15, 0, &unk_24EC682D8, &unk_224697234);
      if (!v17)
        goto LABEL_95;
      v18 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v18)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      v20 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v20, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v21 = 2;
      else
        v21 = v73;
      sub_223BC3810(a1, v17, v21);
      break;
    case 1:
      v24 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v23 = a2 + 8;
      v22 = v24;
      if (!v24)
        goto LABEL_95;
      v25 = v22(3, v23, 0, &unk_24EC68328, &unk_224697308);
      if (!v25)
        goto LABEL_95;
      v26 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v26)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v27 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v27)
        *(_BYTE *)(a1 + 104) = 1;
      v28 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v28, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v29 = 2;
      else
        v29 = v73;
      sub_22407D448(a1, v25, v29);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v32 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v31 = a2 + 8;
      v30 = v32;
      if (!v32)
        goto LABEL_95;
      v33 = (float *)v30(3, v31, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v33)
        goto LABEL_95;
      v34 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v34)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v35 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v35)
        *(_BYTE *)(a1 + 104) = 1;
      v36 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v36, &v73);
      if (HIDWORD(v73))
        goto LABEL_96;
      if (v73 >= 2)
        v37 = 2;
      else
        v37 = v73;
      sub_22407D880(a1, v33, v37);
      break;
    case 11:
      v40 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
      v39 = a2 + 8;
      v38 = v40;
      if (!v40 || (v41 = v38(3, v39, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_95:
        sub_224071EE4();
      v42 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "camera";
      *(_QWORD *)(a1 + 96) = 6;
      if (!v42)
        *(_BYTE *)(a1 + 104) = 1;
      sub_224544138(a1);
      v43 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "version";
      *(_QWORD *)(a1 + 96) = 7;
      if (!v43)
        *(_BYTE *)(a1 + 104) = 1;
      v44 = (char *)sub_2245443F0((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      v73 = 0;
      sub_22451C444(v44, &v73);
      if (HIDWORD(v73))
      {
LABEL_96:
        exception = __cxa_allocate_exception(8uLL);
        *exception = &off_24EC7AC38;
        __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
      }
      if (v73 >= 2)
        v45 = 2;
      else
        v45 = v73;
      sub_22407DC84(a1, v41, v45);
      break;
    default:
      switch(v5)
      {
        case 'd':
          v8 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v7 = a2 + 8;
          v6 = v8;
          if (!v8)
            goto LABEL_95;
          v9 = (float *)v6(3, v7, 0, &unk_24EC68418, &unk_224697588);
          if (!v9)
            goto LABEL_95;
          v10 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v10)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v11 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v11)
            *(_BYTE *)(a1 + 104) = 1;
          v12 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v12, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v13 = 2;
          else
            v13 = v73;
          sub_22407E0BC(a1, v9, v13);
          break;
        case 'e':
          v48 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v47 = a2 + 8;
          v46 = v48;
          if (!v48)
            goto LABEL_95;
          v49 = (double *)v46(3, v47, 0, &unk_24EC68468, &unk_224697660);
          if (!v49)
            goto LABEL_95;
          v50 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v50)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v51 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v51)
            *(_BYTE *)(a1 + 104) = 1;
          v52 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v52, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v53 = 2;
          else
            v53 = v73;
          sub_22407E568(a1, v49, v53);
          break;
        case 'n':
          v56 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v55 = a2 + 8;
          v54 = v56;
          if (!v56)
            goto LABEL_95;
          v57 = (float *)v54(3, v55, 0, &unk_24EC684B8, &unk_224697738);
          if (!v57)
            goto LABEL_95;
          v58 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v58)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v59 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v59)
            *(_BYTE *)(a1 + 104) = 1;
          v60 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v60, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v61 = 2;
          else
            v61 = v73;
          sub_22407EA84(a1, v57, v61);
          break;
        case 'o':
          v64 = *(uint64_t (**)(uint64_t, unint64_t, _QWORD, void *, void *))(a2 + 8);
          v63 = a2 + 8;
          v62 = v64;
          if (!v64)
            goto LABEL_95;
          v65 = (double *)v62(3, v63, 0, &unk_24EC68508, &unk_224697810);
          if (!v65)
            goto LABEL_95;
          v66 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "camera";
          *(_QWORD *)(a1 + 96) = 6;
          if (!v66)
            *(_BYTE *)(a1 + 104) = 1;
          sub_224544138(a1);
          v67 = *(unsigned __int8 *)(a1 + 104);
          *(_QWORD *)(a1 + 88) = "version";
          *(_QWORD *)(a1 + 96) = 7;
          if (!v67)
            *(_BYTE *)(a1 + 104) = 1;
          v68 = (char *)sub_2245443F0((uint64_t *)a1);
          ++*(_QWORD *)(a1 + 112);
          v73 = 0;
          sub_22451C444(v68, &v73);
          if (HIDWORD(v73))
            goto LABEL_96;
          if (v73 >= 2)
            v69 = 2;
          else
            v69 = v73;
          sub_22407EF30(a1, v65, v69);
          break;
        default:
          return;
      }
      break;
  }
  v70 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v70 - 8);
  v71 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v71 - 8);
  *(_QWORD *)(a1 + 48) = v70 - 8;
  *(_QWORD *)(a1 + 72) = v71 - 8;
}

_QWORD *sub_22407FB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;
  _QWORD v12[2];
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  void (*v15)(uint64_t);
  std::__shared_weak_count *v16;
  int v17;
  _QWORD v18[5];

  v18[4] = *MEMORY[0x24BDAC8D0];
  sub_224159374(&v14);
  sub_22414F578((uint64_t)&v17, (uint64_t)&v14);
  v14 = &off_24EC6D000;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_2240820B4(a2, &v17);
  sub_224150AD4(&v17, v12);
  sub_224151B5C((uint64_t)&v14, (uint64_t)v12);
  v12[0] = &off_24EC6D000;
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_DWORD *)a3 = (_DWORD)v14;
  result = sub_224079E90((_QWORD *)(a3 + 8), &v15);
  if (v15)
    result = (_QWORD *)((uint64_t (*)(_QWORD, void (**)(uint64_t), _QWORD, _QWORD, _QWORD))v15)(0, &v15, 0, 0, 0);
  if (v18[0])
    return (_QWORD *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v18[0])(0, v18, 0, 0, 0);
  return result;
}

void sub_22407FCE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_22407FD58(uint64_t a1, int *a2)
{
  int v4;
  uint64_t (*v5)(uint64_t, int *, _QWORD, void *, void *);
  int *v6;
  uint64_t (*v7)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v8;
  uint64_t (*v9)(uint64_t, int *, _QWORD, void *, void *);
  int *v10;
  uint64_t (*v11)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v12;
  uint64_t (*v13)(uint64_t, int *, _QWORD, void *, void *);
  int *v14;
  uint64_t (*v15)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, int *, _QWORD, void *, void *);
  int *v18;
  uint64_t (*v19)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v20;
  uint64_t (*v21)(uint64_t, int *, _QWORD, void *, void *);
  int *v22;
  uint64_t (*v23)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, int *, _QWORD, void *, void *);
  int *v26;
  uint64_t (*v27)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, int *, _QWORD, void *, void *);
  int *v30;
  uint64_t (*v31)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v32;
  uint64_t (*v33)(uint64_t, int *, _QWORD, void *, void *);
  int *v34;
  uint64_t (*v35)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v36;
  unsigned int v37;

  v37 = 0;
  sub_2245508F0(a1, &v37);
  *a2 = v37;
  sub_224152F70((void (**)(int))a2);
  v4 = *a2;
  switch(v4)
  {
    case 0:
      v11 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v10 = a2 + 2;
      v9 = v11;
      if (!v11)
        goto LABEL_28;
      v12 = (_DWORD *)v9(3, v10, 0, &unk_24EC682D8, &unk_224697234);
      if (!v12)
        goto LABEL_28;
      sub_223BCC564((uint64_t)&v37, a1, v12);
      break;
    case 1:
      v15 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v14 = a2 + 2;
      v13 = v15;
      if (!v15)
        goto LABEL_28;
      v16 = v13(3, v14, 0, &unk_24EC68328, &unk_224697308);
      if (!v16)
        goto LABEL_28;
      sub_2240800C8((uint64_t)&v37, a1, v16);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v19 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v18 = a2 + 2;
      v17 = v19;
      if (!v19)
        goto LABEL_28;
      v20 = (_DWORD *)v17(3, v18, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v20)
        goto LABEL_28;
      sub_2240804F8((uint64_t)&v37, a1, v20);
      break;
    case 11:
      v23 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v22 = a2 + 2;
      v21 = v23;
      if (!v23 || (v24 = v21(3, v22, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_28:
        sub_224071EE4();
      sub_2240808F4((uint64_t)&v37, a1, v24);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v6 = a2 + 2;
          v5 = v7;
          if (!v7)
            goto LABEL_28;
          v8 = (_DWORD *)v5(3, v6, 0, &unk_24EC68418, &unk_224697588);
          if (!v8)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_224080D24((uint64_t)&v37, a1, v8, v37);
          break;
        case 'e':
          v27 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v26 = a2 + 2;
          v25 = v27;
          if (!v27)
            goto LABEL_28;
          v28 = v25(3, v26, 0, &unk_24EC68468, &unk_224697660);
          if (!v28)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_2240811D0((uint64_t)&v37, a1, v28, v37);
          break;
        case 'n':
          v31 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v30 = a2 + 2;
          v29 = v31;
          if (!v31)
            goto LABEL_28;
          v32 = (_DWORD *)v29(3, v30, 0, &unk_24EC684B8, &unk_224697738);
          if (!v32)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_2240816EC((uint64_t)&v37, a1, v32, v37);
          break;
        case 'o':
          v35 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v34 = a2 + 2;
          v33 = v35;
          if (!v35)
            goto LABEL_28;
          v36 = v33(3, v34, 0, &unk_24EC68508, &unk_224697810);
          if (!v36)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_224081B98((uint64_t)&v37, a1, v36, v37);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_2240800C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  unsigned int v6;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  LODWORD(__p[0]) = 2;
  sub_2245508F0(a2, __p);
  v5 = __p[0];
  if (LODWORD(__p[0]) >= 2)
    v6 = 2;
  else
    v6 = __p[0];
  if (v6 < 2)
  {
    sub_224080230((uint64_t)__p, a2, (_QWORD *)a3);
    if (v5 < 2)
      return;
  }
  else
  {
    sub_2245514BC(a2, (_QWORD *)a3);
    sub_2245514BC(a2, (_QWORD *)(a3 + 8));
    sub_2245514BC(a2, (_QWORD *)(a3 + 16));
    sub_2245514BC(a2, (_QWORD *)(a3 + 24));
    sub_2245508F0(a2, (_DWORD *)(a3 + 32));
    sub_2245508F0(a2, (_DWORD *)(a3 + 36));
    if (v5 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_21:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_24;
          goto LABEL_10;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_21;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_24:
        operator delete(__p[0]);
LABEL_10:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224080230(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;

  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD60;
  v36 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v36;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC35EB0;
  v34 = v5 + 24;
  sub_2245514BC(a2, &v31);
  sub_2245514BC(a2, (_QWORD *)&v31 + 1);
  sub_2245514BC(a2, &v32);
  sub_2245514BC(a2, (_QWORD *)&v32 + 1);
  sub_2245508F0(a2, &v33);
  sub_2245508F0(a2, (_DWORD *)&v33 + 1);
  v7 = v31;
  v8 = v32;
  v9 = 1.0 / *(double *)&v31;
  v10 = v33;
  v11 = v34;
  *((_OWORD *)v34 + 1) = v31;
  *((_OWORD *)v11 + 2) = v8;
  *((double *)v11 + 6) = v9;
  *((double *)v11 + 7) = 1.0 / *((double *)&v7 + 1);
  *((double *)v11 + 8) = -(*(double *)&v8 * v9);
  *((double *)v11 + 9) = -(*((double *)&v8 + 1) * (1.0 / *((double *)&v7 + 1)));
  *((_QWORD *)v11 + 10) = v7;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 11) = 0;
  *((_QWORD *)v11 + 14) = *((_QWORD *)&v7 + 1);
  *((_QWORD *)v11 + 15) = 0;
  *((_OWORD *)v11 + 8) = v8;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 19) = v10;
  v12 = v34;
  v13 = v34 + 16;
  v14 = *((_QWORD *)v34 + 2);
  v15 = *((_QWORD *)v34 + 3);
  v16 = v34 + 32;
  v17 = *((_QWORD *)v34 + 4);
  v18 = *((_QWORD *)v34 + 5);
  v19 = *((_QWORD *)v34 + 19);
  v20 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = &off_24EC6CEA0;
  *((_QWORD *)v20 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v20 + 40) = *v13;
  *(_OWORD *)(v20 + 56) = *v16;
  v21 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v20 + 88) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v20 + 72) = v21;
  v22 = *((_OWORD *)v12 + 6);
  v23 = *((_OWORD *)v12 + 7);
  v24 = *((_OWORD *)v12 + 8);
  *((_QWORD *)v20 + 21) = *((_QWORD *)v12 + 18);
  *(_OWORD *)(v20 + 152) = v24;
  *(_OWORD *)(v20 + 136) = v23;
  *(_OWORD *)(v20 + 120) = v22;
  *(_OWORD *)(v20 + 104) = *((_OWORD *)v12 + 5);
  *((_QWORD *)v20 + 22) = v19;
  *((_QWORD *)v20 + 3) = &off_24EC35EB0;
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20 + 24;
  v25 = (std::__shared_weak_count *)a3[6];
  a3[6] = v20;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_2240804A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240804BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240804D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240804E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240804F8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  unsigned int v5;
  unsigned int v6;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  LODWORD(__p[0]) = 2;
  sub_2245508F0(a2, __p);
  v5 = __p[0];
  if (LODWORD(__p[0]) >= 2)
    v6 = 2;
  else
    v6 = __p[0];
  if (v6 < 2)
  {
    sub_224080660((uint64_t)__p, a2, (uint64_t)a3);
    if (v5 < 2)
      return;
  }
  else
  {
    sub_224551268(a2, a3);
    sub_224551268(a2, a3 + 1);
    sub_224551268(a2, a3 + 2);
    sub_224551268(a2, a3 + 3);
    sub_2245508F0(a2, a3 + 4);
    sub_2245508F0(a2, a3 + 5);
    if (v5 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_21:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_24;
          goto LABEL_10;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_21;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_24:
        operator delete(__p[0]);
LABEL_10:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224080660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t *v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v16;
  float32x2_t v17;
  int32x2_t v18;
  int8x16_t v19;
  int8x16_t *v20;
  uint64_t v21;
  char *v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int8x16_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  int8x16_t *v36;
  std::__shared_weak_count *v37;

  v33 = 0;
  v34 = 0;
  v35 = 0;
  v5 = (char *)operator new(0x78uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD10;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC20868;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 56) = v6;
  *(int32x4_t *)(v5 + 72) = v6;
  *(int32x4_t *)(v5 + 88) = v6;
  *((_DWORD *)v5 + 26) = 2143289344;
  *((_QWORD *)v5 + 14) = 0;
  v37 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC37688;
  v36 = (int8x16_t *)(v5 + 24);
  sub_224551268(a2, &v33);
  sub_224551268(a2, (_DWORD *)&v33 + 1);
  sub_224551268(a2, &v34);
  sub_224551268(a2, (_DWORD *)&v34 + 1);
  sub_2245508F0(a2, &v35);
  sub_2245508F0(a2, (_DWORD *)&v35 + 1);
  v7 = v35;
  v8 = (float32x2_t *)v36;
  v9 = v33;
  v10 = v34;
  __asm { FMOV            V2.2S, #1.0 }
  v16 = vdiv_f32(_D2, v33);
  v17 = vmul_f32(v16, vneg_f32(v34));
  v18 = vzip1_s32((int32x2_t)v33, (int32x2_t)v34);
  v19.i64[0] = v18.u32[0];
  v19.i64[1] = v18.u32[1];
  v36[1] = vorrq_s8((int8x16_t)vshll_n_s32(vzip2_s32((int32x2_t)v33, (int32x2_t)v34), 0x20uLL), v19);
  v8[4] = v16;
  v8[5] = v17;
  v8[6].i32[0] = v9.i32[0];
  v8[7] = 0;
  v8[6].i32[1] = 0;
  v8[8].i32[0] = v9.i32[1];
  v8[8].i32[1] = 0;
  v8[9] = v10;
  v8[10].i32[0] = 1065353216;
  v8[11] = v7;
  v20 = v36;
  v32 = v36[1];
  v21 = v36[5].i64[1];
  v22 = (char *)operator new(0x78uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CE50;
  v23 = v20[1];
  *((_QWORD *)v22 + 4) = &off_24EC20868;
  *(int8x16_t *)(v22 + 40) = v23;
  *(int8x16_t *)(v22 + 56) = v20[2];
  v24 = v20[3];
  v25 = v20[4];
  *((_DWORD *)v22 + 26) = v20[5].i32[0];
  *(int8x16_t *)(v22 + 88) = v25;
  *(int8x16_t *)(v22 + 72) = v24;
  *((_QWORD *)v22 + 3) = &off_24EC37688;
  *((_QWORD *)v22 + 14) = v21;
  *(int8x16_t *)a3 = v32;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v22 + 24;
  v26 = *(std::__shared_weak_count **)(a3 + 32);
  *(_QWORD *)(a3 + 32) = v22;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v29 = v37;
  if (v37)
  {
    v30 = (unint64_t *)&v37->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_2240808A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240808B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240808CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240808E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240808F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  unsigned int v6;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  LODWORD(__p[0]) = 2;
  sub_2245508F0(a2, __p);
  v5 = __p[0];
  if (LODWORD(__p[0]) >= 2)
    v6 = 2;
  else
    v6 = __p[0];
  if (v6 < 2)
  {
    sub_224080A5C((uint64_t)__p, a2, (_QWORD *)a3);
    if (v5 < 2)
      return;
  }
  else
  {
    sub_2245514BC(a2, (_QWORD *)a3);
    sub_2245514BC(a2, (_QWORD *)(a3 + 8));
    sub_2245514BC(a2, (_QWORD *)(a3 + 16));
    sub_2245514BC(a2, (_QWORD *)(a3 + 24));
    sub_2245508F0(a2, (_DWORD *)(a3 + 32));
    sub_2245508F0(a2, (_DWORD *)(a3 + 36));
    if (v5 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_21:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_24;
          goto LABEL_10;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_21;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_24:
        operator delete(__p[0]);
LABEL_10:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224080A5C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;

  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CDB0;
  v36 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v36;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C9A0;
  v34 = v5 + 24;
  sub_2245514BC(a2, &v31);
  sub_2245514BC(a2, (_QWORD *)&v31 + 1);
  sub_2245514BC(a2, &v32);
  sub_2245514BC(a2, (_QWORD *)&v32 + 1);
  sub_2245508F0(a2, &v33);
  sub_2245508F0(a2, (_DWORD *)&v33 + 1);
  v7 = v31;
  v8 = v32;
  v9 = 1.0 / *(double *)&v31;
  v10 = v33;
  v11 = v34;
  *((_OWORD *)v34 + 1) = v31;
  *((_OWORD *)v11 + 2) = v8;
  *((double *)v11 + 6) = v9;
  *((double *)v11 + 7) = 1.0 / *((double *)&v7 + 1);
  *((double *)v11 + 8) = -(*(double *)&v8 * v9);
  *((double *)v11 + 9) = -(*((double *)&v8 + 1) * (1.0 / *((double *)&v7 + 1)));
  *((_QWORD *)v11 + 10) = v7;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 11) = 0;
  *((_QWORD *)v11 + 14) = *((_QWORD *)&v7 + 1);
  *((_QWORD *)v11 + 15) = 0;
  *((_OWORD *)v11 + 8) = v8;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 19) = v10;
  v12 = v34;
  v13 = v34 + 16;
  v14 = *((_QWORD *)v34 + 2);
  v15 = *((_QWORD *)v34 + 3);
  v16 = v34 + 32;
  v17 = *((_QWORD *)v34 + 4);
  v18 = *((_QWORD *)v34 + 5);
  v19 = *((_QWORD *)v34 + 19);
  v20 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = &off_24EC6CEF0;
  *((_QWORD *)v20 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v20 + 40) = *v13;
  *(_OWORD *)(v20 + 56) = *v16;
  v21 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v20 + 88) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v20 + 72) = v21;
  v22 = *((_OWORD *)v12 + 6);
  v23 = *((_OWORD *)v12 + 7);
  v24 = *((_OWORD *)v12 + 8);
  *((_QWORD *)v20 + 21) = *((_QWORD *)v12 + 18);
  *(_OWORD *)(v20 + 152) = v24;
  *(_OWORD *)(v20 + 136) = v23;
  *(_OWORD *)(v20 + 120) = v22;
  *(_OWORD *)(v20 + 104) = *((_OWORD *)v12 + 5);
  *((_QWORD *)v20 + 22) = v19;
  *((_QWORD *)v20 + 3) = &off_24EC6C9A0;
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20 + 24;
  v25 = (std::__shared_weak_count *)a3[6];
  a3[6] = v20;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_224080CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224080CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224080CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224080D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224080D24(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned int a4)
{
  unsigned int v4;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  v4 = a4;
  if (a4 >= 2)
    a4 = 2;
  if (a4 < 2)
  {
    sub_224080EB8((uint64_t)__p, a2, (uint64_t)a3);
    if (v4 < 2)
      return;
  }
  else
  {
    sub_224551268(a2, a3);
    sub_224551268(a2, a3 + 1);
    sub_224551268(a2, a3 + 2);
    sub_224551268(a2, a3 + 3);
    sub_224551268(a2, a3 + 4);
    sub_224551268(a2, a3 + 5);
    sub_224551268(a2, a3 + 6);
    sub_224551268(a2, a3 + 7);
    sub_224551268(a2, a3 + 8);
    sub_2245508F0(a2, a3 + 9);
    sub_2245508F0(a2, a3 + 10);
    if (v4 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_20:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_23;
          goto LABEL_9;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_20;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_23:
        operator delete(__p[0]);
LABEL_9:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224080EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  _DWORD v25[8];
  char *v26;
  std::__shared_weak_count *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v24 = 0u;
  memset(v25, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6C9F8;
  v29 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v29;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v27 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C620;
  v26 = v5 + 24;
  sub_224551268(a2, &v24);
  sub_224551268(a2, (_DWORD *)&v24 + 1);
  sub_224551268(a2, (_DWORD *)&v24 + 2);
  sub_224551268(a2, (_DWORD *)((unint64_t)&v24 | 0xC));
  sub_224551268(a2, v25);
  sub_224551268(a2, &v25[1]);
  sub_224551268(a2, &v25[2]);
  sub_224551268(a2, &v25[3]);
  sub_224551268(a2, &v25[4]);
  sub_2245508F0(a2, &v25[5]);
  sub_2245508F0(a2, &v25[6]);
  v7 = sub_22415767C((uint64_t)&v24);
  v23 = *(_OWORD *)(v7 + 16);
  v28 = *(_OWORD *)(v7 + 32);
  LODWORD(v29) = *(_DWORD *)(v7 + 48);
  v8 = *(_QWORD *)(v7 + 120);
  v9 = (char *)operator new(0x98uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC6CB38;
  v10 = *(_QWORD *)(v7 + 52);
  v11 = *(_WORD *)(v7 + 112);
  v12 = *(_OWORD *)(v7 + 16);
  *((_QWORD *)v9 + 4) = &off_24EC6C678;
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(v7 + 32);
  *((_DWORD *)v9 + 18) = *(_DWORD *)(v7 + 48);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 76) = v10;
  *(_OWORD *)(v9 + 84) = *(_OWORD *)(v7 + 60);
  v14 = *(_OWORD *)(v7 + 76);
  v15 = *(_OWORD *)(v7 + 92);
  *((_DWORD *)v9 + 33) = *(_DWORD *)(v7 + 108);
  *(_OWORD *)(v9 + 116) = v15;
  *(_OWORD *)(v9 + 100) = v14;
  *((_WORD *)v9 + 68) = v11;
  *((_QWORD *)v9 + 18) = v8;
  *((_QWORD *)v9 + 3) = &off_24EC6C620;
  v16 = v28;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v16;
  *(_DWORD *)(a3 + 32) = v29;
  *(_QWORD *)(a3 + 36) = v8;
  v17 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v9 + 24;
  *(_QWORD *)(a3 + 56) = v9;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v27;
  if (v27)
  {
    v21 = (unint64_t *)&v27->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
}

void sub_22408116C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240811A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240811BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240811D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  v4 = a4;
  if (a4 >= 2)
    a4 = 2;
  if (a4 < 2)
  {
    sub_224081364((uint64_t)__p, a2, a3);
    if (v4 < 2)
      return;
  }
  else
  {
    sub_2245514BC(a2, (_QWORD *)a3);
    sub_2245514BC(a2, (_QWORD *)(a3 + 8));
    sub_2245514BC(a2, (_QWORD *)(a3 + 16));
    sub_2245514BC(a2, (_QWORD *)(a3 + 24));
    sub_2245514BC(a2, (_QWORD *)(a3 + 32));
    sub_2245514BC(a2, (_QWORD *)(a3 + 40));
    sub_2245514BC(a2, (_QWORD *)(a3 + 48));
    sub_2245514BC(a2, (_QWORD *)(a3 + 56));
    sub_2245514BC(a2, (_QWORD *)(a3 + 64));
    sub_2245508F0(a2, (_DWORD *)(a3 + 72));
    sub_2245508F0(a2, (_DWORD *)(a3 + 76));
    if (v4 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_20:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_23;
          goto LABEL_9;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_20;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_23:
        operator delete(__p[0]);
LABEL_9:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224081364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  std::__shared_weak_count *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v30 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA98;
  v41 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v40;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v36 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C7E0;
  v35 = v5 + 24;
  sub_2245514BC(a2, &v30);
  sub_2245514BC(a2, (_QWORD *)&v30 + 1);
  sub_2245514BC(a2, &v31);
  sub_2245514BC(a2, (_QWORD *)&v31 + 1);
  sub_2245514BC(a2, &v32);
  sub_2245514BC(a2, (_QWORD *)&v32 + 1);
  sub_2245514BC(a2, &v33);
  sub_2245514BC(a2, (_QWORD *)&v33 + 1);
  sub_2245514BC(a2, &v34);
  sub_2245508F0(a2, (_DWORD *)&v34 + 2);
  sub_2245508F0(a2, (_DWORD *)&v34 + 3);
  v7 = sub_2241577A4((uint64_t)&v30);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(_OWORD *)(v7 + 64);
  v37 = *(_OWORD *)(v7 + 48);
  v38 = v12;
  *(_QWORD *)&v39 = *(_QWORD *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 216);
  v14 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC6CBD8;
  v15 = *(_WORD *)(v7 + 208);
  *((_QWORD *)v14 + 4) = &off_24EC6C838;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v7 + 32);
  v16 = *(_OWORD *)(v7 + 48);
  v17 = *(_OWORD *)(v7 + 64);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v14 + 88) = v17;
  *(_OWORD *)(v14 + 72) = v16;
  v18 = *(_QWORD *)(v7 + 88);
  *((_DWORD *)v14 + 30) = *(_DWORD *)(v7 + 96);
  *((_QWORD *)v14 + 14) = v18;
  v19 = *(_OWORD *)(v7 + 120);
  *((_OWORD *)v14 + 8) = *(_OWORD *)(v7 + 104);
  *((_OWORD *)v14 + 9) = v19;
  v20 = *(_OWORD *)(v7 + 152);
  v21 = *(_OWORD *)(v7 + 168);
  v22 = *(_OWORD *)(v7 + 184);
  *((_QWORD *)v14 + 28) = *(_QWORD *)(v7 + 200);
  *((_OWORD *)v14 + 12) = v21;
  *((_OWORD *)v14 + 13) = v22;
  *((_OWORD *)v14 + 11) = v20;
  *((_OWORD *)v14 + 10) = *(_OWORD *)(v7 + 136);
  *((_WORD *)v14 + 116) = v15;
  *((_QWORD *)v14 + 30) = v13;
  *((_QWORD *)v14 + 3) = &off_24EC6C7E0;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v11;
  v23 = v38;
  *(_OWORD *)(a3 + 32) = v37;
  *(_OWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 64) = v39;
  *(_QWORD *)(a3 + 72) = v13;
  v24 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v14 + 24;
  *(_QWORD *)(a3 + 88) = v14;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = v36;
  if (v36)
  {
    v28 = (unint64_t *)&v36->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_224081688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408169C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240816B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240816C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240816D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240816EC(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned int a4)
{
  unsigned int v4;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  v4 = a4;
  if (a4 >= 2)
    a4 = 2;
  if (a4 < 2)
  {
    sub_224081880((uint64_t)__p, a2, (uint64_t)a3);
    if (v4 < 2)
      return;
  }
  else
  {
    sub_224551268(a2, a3);
    sub_224551268(a2, a3 + 1);
    sub_224551268(a2, a3 + 2);
    sub_224551268(a2, a3 + 3);
    sub_224551268(a2, a3 + 4);
    sub_224551268(a2, a3 + 5);
    sub_224551268(a2, a3 + 6);
    sub_224551268(a2, a3 + 7);
    sub_224551268(a2, a3 + 8);
    sub_2245508F0(a2, a3 + 9);
    sub_2245508F0(a2, a3 + 10);
    if (v4 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_20:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_23;
          goto LABEL_9;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_20;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_23:
        operator delete(__p[0]);
LABEL_9:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224081880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  _DWORD v25[8];
  char *v26;
  std::__shared_weak_count *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v24 = 0u;
  memset(v25, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA48;
  v29 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v29;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v27 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C730;
  v26 = v5 + 24;
  sub_224551268(a2, &v24);
  sub_224551268(a2, (_DWORD *)&v24 + 1);
  sub_224551268(a2, (_DWORD *)&v24 + 2);
  sub_224551268(a2, (_DWORD *)((unint64_t)&v24 | 0xC));
  sub_224551268(a2, v25);
  sub_224551268(a2, &v25[1]);
  sub_224551268(a2, &v25[2]);
  sub_224551268(a2, &v25[3]);
  sub_224551268(a2, &v25[4]);
  sub_2245508F0(a2, &v25[5]);
  sub_2245508F0(a2, &v25[6]);
  v7 = sub_22415767C((uint64_t)&v24);
  v23 = *(_OWORD *)(v7 + 16);
  v28 = *(_OWORD *)(v7 + 32);
  LODWORD(v29) = *(_DWORD *)(v7 + 48);
  v8 = *(_QWORD *)(v7 + 120);
  v9 = (char *)operator new(0x98uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC6CB88;
  v10 = *(_QWORD *)(v7 + 52);
  v11 = *(_WORD *)(v7 + 112);
  v12 = *(_OWORD *)(v7 + 16);
  *((_QWORD *)v9 + 4) = &off_24EC6C678;
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(v7 + 32);
  *((_DWORD *)v9 + 18) = *(_DWORD *)(v7 + 48);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 76) = v10;
  *(_OWORD *)(v9 + 84) = *(_OWORD *)(v7 + 60);
  v14 = *(_OWORD *)(v7 + 76);
  v15 = *(_OWORD *)(v7 + 92);
  *((_DWORD *)v9 + 33) = *(_DWORD *)(v7 + 108);
  *(_OWORD *)(v9 + 116) = v15;
  *(_OWORD *)(v9 + 100) = v14;
  *((_WORD *)v9 + 68) = v11;
  *((_QWORD *)v9 + 18) = v8;
  *((_QWORD *)v9 + 3) = &off_24EC6C730;
  v16 = v28;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v16;
  *(_DWORD *)(a3 + 32) = v29;
  *(_QWORD *)(a3 + 36) = v8;
  v17 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v9 + 24;
  *(_QWORD *)(a3 + 56) = v9;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v27;
  if (v27)
  {
    v21 = (unint64_t *)&v27->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
}

void sub_224081B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224081B98(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4;
  char v7;
  char v8;
  void *__p[2];
  char v10;

  v4 = a4;
  if (a4 >= 2)
    a4 = 2;
  if (a4 < 2)
  {
    sub_224081D2C((uint64_t)__p, a2, a3);
    if (v4 < 2)
      return;
  }
  else
  {
    sub_2245514BC(a2, (_QWORD *)a3);
    sub_2245514BC(a2, (_QWORD *)(a3 + 8));
    sub_2245514BC(a2, (_QWORD *)(a3 + 16));
    sub_2245514BC(a2, (_QWORD *)(a3 + 24));
    sub_2245514BC(a2, (_QWORD *)(a3 + 32));
    sub_2245514BC(a2, (_QWORD *)(a3 + 40));
    sub_2245514BC(a2, (_QWORD *)(a3 + 48));
    sub_2245514BC(a2, (_QWORD *)(a3 + 56));
    sub_2245514BC(a2, (_QWORD *)(a3 + 64));
    sub_2245508F0(a2, (_DWORD *)(a3 + 72));
    sub_2245508F0(a2, (_DWORD *)(a3 + 76));
    if (v4 < 2)
      return;
  }
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)__p);
      if (v10 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_20:
          v8 = 0;
          if (v10 < 0)
            goto LABEL_23;
          goto LABEL_9;
        }
      }
      else if (v10 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_20;
      }
      v8 = 1;
      if (v10 < 0)
LABEL_23:
        operator delete(__p[0]);
LABEL_9:
      if (*(_BYTE *)(a2 + 131))
        v7 = 0;
      else
        v7 = v8;
    }
    while ((v7 & 1) != 0);
  }
}

void sub_224081D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  std::__shared_weak_count *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v30 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CAE8;
  v41 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v40;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v36 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C8F0;
  v35 = v5 + 24;
  sub_2245514BC(a2, &v30);
  sub_2245514BC(a2, (_QWORD *)&v30 + 1);
  sub_2245514BC(a2, &v31);
  sub_2245514BC(a2, (_QWORD *)&v31 + 1);
  sub_2245514BC(a2, &v32);
  sub_2245514BC(a2, (_QWORD *)&v32 + 1);
  sub_2245514BC(a2, &v33);
  sub_2245514BC(a2, (_QWORD *)&v33 + 1);
  sub_2245514BC(a2, &v34);
  sub_2245508F0(a2, (_DWORD *)&v34 + 2);
  sub_2245508F0(a2, (_DWORD *)&v34 + 3);
  v7 = sub_2241577A4((uint64_t)&v30);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(_OWORD *)(v7 + 64);
  v37 = *(_OWORD *)(v7 + 48);
  v38 = v12;
  *(_QWORD *)&v39 = *(_QWORD *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 216);
  v14 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC6CC28;
  v15 = *(_WORD *)(v7 + 208);
  *((_QWORD *)v14 + 4) = &off_24EC6C838;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v7 + 32);
  v16 = *(_OWORD *)(v7 + 48);
  v17 = *(_OWORD *)(v7 + 64);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v14 + 88) = v17;
  *(_OWORD *)(v14 + 72) = v16;
  v18 = *(_QWORD *)(v7 + 88);
  *((_DWORD *)v14 + 30) = *(_DWORD *)(v7 + 96);
  *((_QWORD *)v14 + 14) = v18;
  v19 = *(_OWORD *)(v7 + 120);
  *((_OWORD *)v14 + 8) = *(_OWORD *)(v7 + 104);
  *((_OWORD *)v14 + 9) = v19;
  v20 = *(_OWORD *)(v7 + 152);
  v21 = *(_OWORD *)(v7 + 168);
  v22 = *(_OWORD *)(v7 + 184);
  *((_QWORD *)v14 + 28) = *(_QWORD *)(v7 + 200);
  *((_OWORD *)v14 + 12) = v21;
  *((_OWORD *)v14 + 13) = v22;
  *((_OWORD *)v14 + 11) = v20;
  *((_OWORD *)v14 + 10) = *(_OWORD *)(v7 + 136);
  *((_WORD *)v14 + 116) = v15;
  *((_QWORD *)v14 + 30) = v13;
  *((_QWORD *)v14 + 3) = &off_24EC6C8F0;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v11;
  v23 = v38;
  *(_OWORD *)(a3 + 32) = v37;
  *(_OWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 64) = v39;
  *(_QWORD *)(a3 + 72) = v13;
  v24 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v14 + 24;
  *(_QWORD *)(a3 + 88) = v14;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = v36;
  if (v36)
  {
    v28 = (unint64_t *)&v36->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_224082050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224082064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224082078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408208C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240820A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240820B4(uint64_t a1, int *a2)
{
  int v4;
  uint64_t (*v5)(uint64_t, int *, _QWORD, void *, void *);
  int *v6;
  uint64_t (*v7)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v8;
  uint64_t (*v9)(uint64_t, int *, _QWORD, void *, void *);
  int *v10;
  uint64_t (*v11)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v12;
  uint64_t (*v13)(uint64_t, int *, _QWORD, void *, void *);
  int *v14;
  uint64_t (*v15)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v16;
  uint64_t (*v17)(uint64_t, int *, _QWORD, void *, void *);
  int *v18;
  uint64_t (*v19)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v20;
  uint64_t (*v21)(uint64_t, int *, _QWORD, void *, void *);
  int *v22;
  uint64_t (*v23)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v24;
  uint64_t (*v25)(uint64_t, int *, _QWORD, void *, void *);
  int *v26;
  uint64_t (*v27)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, int *, _QWORD, void *, void *);
  int *v30;
  uint64_t (*v31)(uint64_t, int *, _QWORD, void *, void *);
  _DWORD *v32;
  uint64_t (*v33)(uint64_t, int *, _QWORD, void *, void *);
  int *v34;
  uint64_t (*v35)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v36;
  unsigned int v37;

  v37 = 0;
  sub_2245508F0(a1, &v37);
  *a2 = v37;
  sub_224151490((void (**)(int))a2);
  v4 = *a2;
  switch(v4)
  {
    case 0:
      v11 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v10 = a2 + 2;
      v9 = v11;
      if (!v11)
        goto LABEL_28;
      v12 = (_DWORD *)v9(3, v10, 0, &unk_24EC682D8, &unk_224697234);
      if (!v12)
        goto LABEL_28;
      sub_223BCC564((uint64_t)&v37, a1, v12);
      break;
    case 1:
      v15 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v14 = a2 + 2;
      v13 = v15;
      if (!v15)
        goto LABEL_28;
      v16 = v13(3, v14, 0, &unk_24EC68328, &unk_224697308);
      if (!v16)
        goto LABEL_28;
      sub_2240800C8((uint64_t)&v37, a1, v16);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v19 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v18 = a2 + 2;
      v17 = v19;
      if (!v19)
        goto LABEL_28;
      v20 = (_DWORD *)v17(3, v18, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v20)
        goto LABEL_28;
      sub_2240804F8((uint64_t)&v37, a1, v20);
      break;
    case 11:
      v23 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v22 = a2 + 2;
      v21 = v23;
      if (!v23 || (v24 = v21(3, v22, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_28:
        sub_224071EE4();
      sub_2240808F4((uint64_t)&v37, a1, v24);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v6 = a2 + 2;
          v5 = v7;
          if (!v7)
            goto LABEL_28;
          v8 = (_DWORD *)v5(3, v6, 0, &unk_24EC68418, &unk_224697588);
          if (!v8)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_224080D24((uint64_t)&v37, a1, v8, v37);
          break;
        case 'e':
          v27 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v26 = a2 + 2;
          v25 = v27;
          if (!v27)
            goto LABEL_28;
          v28 = v25(3, v26, 0, &unk_24EC68468, &unk_224697660);
          if (!v28)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_2240811D0((uint64_t)&v37, a1, v28, v37);
          break;
        case 'n':
          v31 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v30 = a2 + 2;
          v29 = v31;
          if (!v31)
            goto LABEL_28;
          v32 = (_DWORD *)v29(3, v30, 0, &unk_24EC684B8, &unk_224697738);
          if (!v32)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_2240816EC((uint64_t)&v37, a1, v32, v37);
          break;
        case 'o':
          v35 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v34 = a2 + 2;
          v33 = v35;
          if (!v35)
            goto LABEL_28;
          v36 = v33(3, v34, 0, &unk_24EC68508, &unk_224697810);
          if (!v36)
            goto LABEL_28;
          v37 = 2;
          sub_2245508F0(a1, &v37);
          sub_224081B98((uint64_t)&v37, a1, v36, v37);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_224082424(uint64_t a1, _QWORD *a2, int *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_224082518((uint64_t)&v13, a2, (uint64_t)a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224082714(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224082504(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224082518(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;
  _QWORD v12[2];
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  void (*v15)(uint64_t);
  std::__shared_weak_count *v16;
  int v17;
  _QWORD v18[5];

  v18[4] = *MEMORY[0x24BDAC8D0];
  sub_224159374(&v14);
  sub_22414F578((uint64_t)&v17, (uint64_t)&v14);
  v14 = &off_24EC6D000;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_224085664(a2, &v17);
  sub_224150AD4(&v17, v12);
  sub_224151B5C((uint64_t)&v14, (uint64_t)v12);
  v12[0] = &off_24EC6D000;
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_DWORD *)a3 = (_DWORD)v14;
  result = sub_224079E90((_QWORD *)(a3 + 8), &v15);
  if (v15)
    result = (_QWORD *)((uint64_t (*)(_QWORD, void (**)(uint64_t), _QWORD, _QWORD, _QWORD))v15)(0, &v15, 0, 0, 0);
  if (v18[0])
    return (_QWORD *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v18[0])(0, v18, 0, 0, 0);
  return result;
}

void sub_22408269C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224082714(_QWORD *a1, int *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  int v8;
  int v9;
  uint64_t (*v10)(uint64_t, int *, _QWORD, void *, void *);
  int *v11;
  uint64_t (*v12)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v13;
  uint64_t (*v14)(uint64_t, int *, _QWORD, void *, void *);
  int *v15;
  uint64_t (*v16)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, int *, _QWORD, void *, void *);
  int *v19;
  uint64_t (*v20)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v21;
  uint64_t (*v22)(uint64_t, int *, _QWORD, void *, void *);
  int *v23;
  uint64_t (*v24)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v25;
  uint64_t (*v26)(uint64_t, int *, _QWORD, void *, void *);
  int *v27;
  uint64_t (*v28)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v29;
  uint64_t (*v30)(uint64_t, int *, _QWORD, void *, void *);
  int *v31;
  uint64_t (*v32)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v33;
  uint64_t (*v34)(uint64_t, int *, _QWORD, void *, void *);
  int *v35;
  uint64_t (*v36)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v37;
  uint64_t (*v38)(uint64_t, int *, _QWORD, void *, void *);
  int *v39;
  uint64_t (*v40)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v41;
  std::logic_error *exception;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_DWORD *)(a1[3] + v2);
  a1[6] = v2 + 4;
  *a2 = v8;
  sub_224152F70((void (**)(int))a2);
  v9 = *a2;
  switch(v9)
  {
    case 0:
      v16 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v15 = a2 + 2;
      v14 = v16;
      if (!v16)
        goto LABEL_31;
      v17 = (_QWORD *)v14(3, v15, 0, &unk_24EC682D8, &unk_224697234);
      if (!v17)
        goto LABEL_31;
      sub_223BD5AE8((uint64_t)&v43, a1, v17);
      break;
    case 1:
      v20 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v19 = a2 + 2;
      v18 = v20;
      if (!v20)
        goto LABEL_31;
      v21 = (_QWORD *)v18(3, v19, 0, &unk_24EC68328, &unk_224697308);
      if (!v21)
        goto LABEL_31;
      sub_224082A6C((uint64_t)&v44, a1, v21);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v24 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v23 = a2 + 2;
      v22 = v24;
      if (!v24)
        goto LABEL_31;
      v25 = (_QWORD *)v22(3, v23, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v25)
        goto LABEL_31;
      sub_224083030((uint64_t)&v45, a1, v25);
      break;
    case 11:
      v28 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v27 = a2 + 2;
      v26 = v28;
      if (!v28 || (v29 = (_QWORD *)v26(3, v27, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_31:
        sub_224071EE4();
      sub_2240835C0((uint64_t)&v46, a1, v29);
      break;
    default:
      switch(v9)
      {
        case 'd':
          v12 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v11 = a2 + 2;
          v10 = v12;
          if (!v12)
            goto LABEL_31;
          v13 = v10(3, v11, 0, &unk_24EC68418, &unk_224697588);
          if (!v13)
            goto LABEL_31;
          sub_224083B84((uint64_t)&v47, a1, v13);
          break;
        case 'e':
          v32 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v31 = a2 + 2;
          v30 = v32;
          if (!v32)
            goto LABEL_31;
          v33 = v30(3, v31, 0, &unk_24EC68468, &unk_224697660);
          if (!v33)
            goto LABEL_31;
          sub_224084204((uint64_t)&v48, a1, v33);
          break;
        case 'n':
          v36 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v35 = a2 + 2;
          v34 = v36;
          if (!v36)
            goto LABEL_31;
          v37 = v34(3, v35, 0, &unk_24EC684B8, &unk_224697738);
          if (!v37)
            goto LABEL_31;
          sub_2240848F4((uint64_t)&v49, a1, v37);
          break;
        case 'o':
          v40 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v39 = a2 + 2;
          v38 = v40;
          if (!v40)
            goto LABEL_31;
          v41 = v38(3, v39, 0, &unk_24EC68508, &unk_224697810);
          if (!v41)
            goto LABEL_31;
          sub_224084F74((uint64_t)&v50, a1, v41);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_224082A58(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224082A6C(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_224082B60((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224082DC0(a2, (uint64_t)a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224082B4C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224082B60(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;

  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD60;
  v36 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v36;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC35EB0;
  v34 = v5 + 24;
  sub_224082EF8(a2, (uint64_t)&v31);
  v7 = v31;
  v8 = v32;
  v9 = 1.0 / *(double *)&v31;
  v10 = v33;
  v11 = v34;
  *((_OWORD *)v34 + 1) = v31;
  *((_OWORD *)v11 + 2) = v8;
  *((double *)v11 + 6) = v9;
  *((double *)v11 + 7) = 1.0 / *((double *)&v7 + 1);
  *((double *)v11 + 8) = -(*(double *)&v8 * v9);
  *((double *)v11 + 9) = -(*((double *)&v8 + 1) * (1.0 / *((double *)&v7 + 1)));
  *((_QWORD *)v11 + 10) = v7;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 11) = 0;
  *((_QWORD *)v11 + 14) = *((_QWORD *)&v7 + 1);
  *((_QWORD *)v11 + 15) = 0;
  *((_OWORD *)v11 + 8) = v8;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 19) = v10;
  v12 = v34;
  v13 = v34 + 16;
  v14 = *((_QWORD *)v34 + 2);
  v15 = *((_QWORD *)v34 + 3);
  v16 = v34 + 32;
  v17 = *((_QWORD *)v34 + 4);
  v18 = *((_QWORD *)v34 + 5);
  v19 = *((_QWORD *)v34 + 19);
  v20 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = &off_24EC6CEA0;
  *((_QWORD *)v20 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v20 + 40) = *v13;
  *(_OWORD *)(v20 + 56) = *v16;
  v21 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v20 + 88) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v20 + 72) = v21;
  v22 = *((_OWORD *)v12 + 6);
  v23 = *((_OWORD *)v12 + 7);
  v24 = *((_OWORD *)v12 + 8);
  *((_QWORD *)v20 + 21) = *((_QWORD *)v12 + 18);
  *(_OWORD *)(v20 + 152) = v24;
  *(_OWORD *)(v20 + 136) = v23;
  *(_OWORD *)(v20 + 120) = v22;
  *(_OWORD *)(v20 + 104) = *((_OWORD *)v12 + 5);
  *((_QWORD *)v20 + 22) = v19;
  *((_QWORD *)v20 + 3) = &off_24EC35EB0;
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20 + 24;
  v25 = (std::__shared_weak_count *)a3[6];
  a3[6] = v20;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_224082D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224082DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_224082DC0(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 7)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(result[3] + v10);
  result[6] += 8;
  return result;
}

void sub_224082EBC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224082ED0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224082EE4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224082EF8(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 7)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(result[3] + v10);
  result[6] += 8;
  return result;
}

void sub_224082FF4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083008(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22408301C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083030(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_224083124((uint64_t)&v13, a2, (uint64_t)a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224083350(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224083110(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083124(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t *v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v16;
  float32x2_t v17;
  int32x2_t v18;
  int8x16_t v19;
  int8x16_t *v20;
  uint64_t v21;
  char *v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int8x16_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  int8x16_t *v36;
  std::__shared_weak_count *v37;

  v33 = 0;
  v34 = 0;
  v35 = 0;
  v5 = (char *)operator new(0x78uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD10;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC20868;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 56) = v6;
  *(int32x4_t *)(v5 + 72) = v6;
  *(int32x4_t *)(v5 + 88) = v6;
  *((_DWORD *)v5 + 26) = 2143289344;
  *((_QWORD *)v5 + 14) = 0;
  v37 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC37688;
  v36 = (int8x16_t *)(v5 + 24);
  sub_224083488(a2, &v33);
  v7 = v35;
  v8 = (float32x2_t *)v36;
  v9 = v33;
  v10 = v34;
  __asm { FMOV            V2.2S, #1.0 }
  v16 = vdiv_f32(_D2, v33);
  v17 = vmul_f32(v16, vneg_f32(v34));
  v18 = vzip1_s32((int32x2_t)v33, (int32x2_t)v34);
  v19.i64[0] = v18.u32[0];
  v19.i64[1] = v18.u32[1];
  v36[1] = vorrq_s8((int8x16_t)vshll_n_s32(vzip2_s32((int32x2_t)v33, (int32x2_t)v34), 0x20uLL), v19);
  v8[4] = v16;
  v8[5] = v17;
  v8[6].i32[0] = v9.i32[0];
  v8[7] = 0;
  v8[6].i32[1] = 0;
  v8[8].i32[0] = v9.i32[1];
  v8[8].i32[1] = 0;
  v8[9] = v10;
  v8[10].i32[0] = 1065353216;
  v8[11] = v7;
  v20 = v36;
  v32 = v36[1];
  v21 = v36[5].i64[1];
  v22 = (char *)operator new(0x78uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CE50;
  v23 = v20[1];
  *((_QWORD *)v22 + 4) = &off_24EC20868;
  *(int8x16_t *)(v22 + 40) = v23;
  *(int8x16_t *)(v22 + 56) = v20[2];
  v24 = v20[3];
  v25 = v20[4];
  *((_DWORD *)v22 + 26) = v20[5].i32[0];
  *(int8x16_t *)(v22 + 88) = v25;
  *(int8x16_t *)(v22 + 72) = v24;
  *((_QWORD *)v22 + 3) = &off_24EC37688;
  *((_QWORD *)v22 + 14) = v21;
  *(int8x16_t *)a3 = v32;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v22 + 24;
  v26 = *(std::__shared_weak_count **)(a3 + 32);
  *(_QWORD *)(a3 + 32) = v22;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v29 = v37;
  if (v37)
  {
    v30 = (unint64_t *)&v37->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_224083328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408333C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_224083350(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_11;
  *a2 = *(_QWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 8;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 7)
    goto LABEL_11;
  a2[1] = *(_QWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 8;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 7)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[2] = *(_QWORD *)(result[3] + v10);
  result[6] += 8;
  return result;
}

void sub_22408344C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083460(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083474(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224083488(_QWORD *result, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_11;
  *a2 = *(_QWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 8;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 7)
    goto LABEL_11;
  a2[1] = *(_QWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 8;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 7)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  a2[2] = *(_QWORD *)(result[3] + v10);
  result[6] += 8;
  return result;
}

void sub_224083584(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083598(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240835AC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240835C0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_2240836B4((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224083914(a2, (uint64_t)a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_2240836A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240836B4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;

  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CDB0;
  v36 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v5 + 56) = v36;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C9A0;
  v34 = v5 + 24;
  sub_224083A4C(a2, (uint64_t)&v31);
  v7 = v31;
  v8 = v32;
  v9 = 1.0 / *(double *)&v31;
  v10 = v33;
  v11 = v34;
  *((_OWORD *)v34 + 1) = v31;
  *((_OWORD *)v11 + 2) = v8;
  *((double *)v11 + 6) = v9;
  *((double *)v11 + 7) = 1.0 / *((double *)&v7 + 1);
  *((double *)v11 + 8) = -(*(double *)&v8 * v9);
  *((double *)v11 + 9) = -(*((double *)&v8 + 1) * (1.0 / *((double *)&v7 + 1)));
  *((_QWORD *)v11 + 10) = v7;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 11) = 0;
  *((_QWORD *)v11 + 14) = *((_QWORD *)&v7 + 1);
  *((_QWORD *)v11 + 15) = 0;
  *((_OWORD *)v11 + 8) = v8;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 19) = v10;
  v12 = v34;
  v13 = v34 + 16;
  v14 = *((_QWORD *)v34 + 2);
  v15 = *((_QWORD *)v34 + 3);
  v16 = v34 + 32;
  v17 = *((_QWORD *)v34 + 4);
  v18 = *((_QWORD *)v34 + 5);
  v19 = *((_QWORD *)v34 + 19);
  v20 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = &off_24EC6CEF0;
  *((_QWORD *)v20 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v20 + 40) = *v13;
  *(_OWORD *)(v20 + 56) = *v16;
  v21 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v20 + 88) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v20 + 72) = v21;
  v22 = *((_OWORD *)v12 + 6);
  v23 = *((_OWORD *)v12 + 7);
  v24 = *((_OWORD *)v12 + 8);
  *((_QWORD *)v20 + 21) = *((_QWORD *)v12 + 18);
  *(_OWORD *)(v20 + 152) = v24;
  *(_OWORD *)(v20 + 136) = v23;
  *(_OWORD *)(v20 + 120) = v22;
  *(_OWORD *)(v20 + 104) = *((_OWORD *)v12 + 5);
  *((_QWORD *)v20 + 22) = v19;
  *((_QWORD *)v20 + 3) = &off_24EC6C9A0;
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20 + 24;
  v25 = (std::__shared_weak_count *)a3[6];
  a3[6] = v20;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_2240838EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224083900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_224083914(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 7)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(result[3] + v10);
  result[6] += 8;
  return result;
}

void sub_224083A10(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083A24(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083A38(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224083A4C(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_11;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 7)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(result[3] + v10);
  result[6] += 8;
  return result;
}

void sub_224083B48(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083B5C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083B70(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083B84(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_224083C78((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224083ECC(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224083C64(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224083C78(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  _OWORD v24[3];
  char *v25;
  std::__shared_weak_count *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  memset(v24, 0, 44);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6C9F8;
  v28 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v28;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v26 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C620;
  v25 = v5 + 24;
  sub_224084068(a2, (uint64_t)v24);
  v7 = sub_22415767C((uint64_t)v24);
  v23 = *(_OWORD *)(v7 + 16);
  v27 = *(_OWORD *)(v7 + 32);
  LODWORD(v28) = *(_DWORD *)(v7 + 48);
  v8 = *(_QWORD *)(v7 + 120);
  v9 = (char *)operator new(0x98uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC6CB38;
  v10 = *(_QWORD *)(v7 + 52);
  v11 = *(_WORD *)(v7 + 112);
  v12 = *(_OWORD *)(v7 + 16);
  *((_QWORD *)v9 + 4) = &off_24EC6C678;
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(v7 + 32);
  *((_DWORD *)v9 + 18) = *(_DWORD *)(v7 + 48);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 76) = v10;
  *(_OWORD *)(v9 + 84) = *(_OWORD *)(v7 + 60);
  v14 = *(_OWORD *)(v7 + 76);
  v15 = *(_OWORD *)(v7 + 92);
  *((_DWORD *)v9 + 33) = *(_DWORD *)(v7 + 108);
  *(_OWORD *)(v9 + 116) = v15;
  *(_OWORD *)(v9 + 100) = v14;
  *((_WORD *)v9 + 68) = v11;
  *((_QWORD *)v9 + 18) = v8;
  *((_QWORD *)v9 + 3) = &off_24EC6C620;
  v16 = v27;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v16;
  *(_DWORD *)(a3 + 32) = v28;
  *(_QWORD *)(a3 + 36) = v8;
  v17 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v9 + 24;
  *(_QWORD *)(a3 + 56) = v9;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v26;
  if (v26)
  {
    v21 = (unint64_t *)&v26->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
}

void sub_224083EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224083EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_224083ECC(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_14;
  *(_QWORD *)a2 = *(_QWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 8;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 8;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x13)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 16) = v13;
  v14 = result[7];
  v15 = result[6] + 20;
  result[6] = v15;
  v4 = v14 >= v15;
  v16 = v14 - v15;
  if (!v4)
    v16 = 0;
  if (v16 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(result[3] + v15);
  result[6] += 8;
  return result;
}

void sub_224084018(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22408402C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084040(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084054(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224084068(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_14;
  *(_QWORD *)a2 = *(_QWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 8;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 8;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x13)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 16) = v13;
  v14 = result[7];
  v15 = result[6] + 20;
  result[6] = v15;
  v4 = v14 >= v15;
  v16 = v14 - v15;
  if (!v4)
    v16 = 0;
  if (v16 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(result[3] + v15);
  result[6] += 8;
  return result;
}

void sub_2240841B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240841C8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240841DC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240841F0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084204(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_2240842F8((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_2240845BC(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_2240842E4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240842F8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  _OWORD v30[5];
  char *v31;
  std::__shared_weak_count *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  memset(v30, 0, sizeof(v30));
  v5 = (char *)operator new(0xF8uLL);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA98;
  v37 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v36;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v32 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C7E0;
  v31 = v5 + 24;
  sub_224084758(a2, (uint64_t)v30);
  v7 = sub_2241577A4((uint64_t)v30);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(_OWORD *)(v7 + 64);
  v33 = *(_OWORD *)(v7 + 48);
  v34 = v12;
  *(_QWORD *)&v35 = *(_QWORD *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 216);
  v14 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC6CBD8;
  v15 = *(_WORD *)(v7 + 208);
  *((_QWORD *)v14 + 4) = &off_24EC6C838;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v7 + 32);
  v16 = *(_OWORD *)(v7 + 48);
  v17 = *(_OWORD *)(v7 + 64);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v14 + 88) = v17;
  *(_OWORD *)(v14 + 72) = v16;
  v18 = *(_QWORD *)(v7 + 88);
  *((_DWORD *)v14 + 30) = *(_DWORD *)(v7 + 96);
  *((_QWORD *)v14 + 14) = v18;
  v19 = *(_OWORD *)(v7 + 120);
  *((_OWORD *)v14 + 8) = *(_OWORD *)(v7 + 104);
  *((_OWORD *)v14 + 9) = v19;
  v20 = *(_OWORD *)(v7 + 152);
  v21 = *(_OWORD *)(v7 + 168);
  v22 = *(_OWORD *)(v7 + 184);
  *((_QWORD *)v14 + 28) = *(_QWORD *)(v7 + 200);
  *((_OWORD *)v14 + 12) = v21;
  *((_OWORD *)v14 + 13) = v22;
  *((_OWORD *)v14 + 11) = v20;
  *((_OWORD *)v14 + 10) = *(_OWORD *)(v7 + 136);
  *((_WORD *)v14 + 116) = v15;
  *((_QWORD *)v14 + 30) = v13;
  *((_QWORD *)v14 + 3) = &off_24EC6C7E0;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v11;
  v23 = v34;
  *(_OWORD *)(a3 + 32) = v33;
  *(_OWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 64) = v35;
  *(_QWORD *)(a3 + 72) = v13;
  v24 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v14 + 24;
  *(_QWORD *)(a3 + 88) = v14;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = v32;
  if (v32)
  {
    v28 = (unint64_t *)&v32->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_224084594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_2240845A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240845BC(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x27)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  v14 = *(_OWORD *)(v12 + 16);
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(v12 + 32);
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  v15 = result[7];
  v16 = result[6] + 40;
  result[6] = v16;
  v4 = v15 >= v16;
  v17 = v15 - v16;
  if (!v4)
    v17 = 0;
  if (v17 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(result[3] + v16);
  result[6] += 8;
  return result;
}

void sub_224084708(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22408471C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084730(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084744(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224084758(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x27)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  v14 = *(_OWORD *)(v12 + 16);
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(v12 + 32);
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  v15 = result[7];
  v16 = result[6] + 40;
  result[6] = v16;
  v4 = v15 >= v16;
  v17 = v15 - v16;
  if (!v4)
    v17 = 0;
  if (v17 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(result[3] + v16);
  result[6] += 8;
  return result;
}

void sub_2240848A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240848B8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240848CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240848E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240848F4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_2240849E8((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224084C3C(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_2240849D4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240849E8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  _OWORD v24[3];
  char *v25;
  std::__shared_weak_count *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  memset(v24, 0, 44);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA48;
  v28 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v28;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v26 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C730;
  v25 = v5 + 24;
  sub_224084DD8(a2, (uint64_t)v24);
  v7 = sub_22415767C((uint64_t)v24);
  v23 = *(_OWORD *)(v7 + 16);
  v27 = *(_OWORD *)(v7 + 32);
  LODWORD(v28) = *(_DWORD *)(v7 + 48);
  v8 = *(_QWORD *)(v7 + 120);
  v9 = (char *)operator new(0x98uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC6CB88;
  v10 = *(_QWORD *)(v7 + 52);
  v11 = *(_WORD *)(v7 + 112);
  v12 = *(_OWORD *)(v7 + 16);
  *((_QWORD *)v9 + 4) = &off_24EC6C678;
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(v7 + 32);
  *((_DWORD *)v9 + 18) = *(_DWORD *)(v7 + 48);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 76) = v10;
  *(_OWORD *)(v9 + 84) = *(_OWORD *)(v7 + 60);
  v14 = *(_OWORD *)(v7 + 76);
  v15 = *(_OWORD *)(v7 + 92);
  *((_DWORD *)v9 + 33) = *(_DWORD *)(v7 + 108);
  *(_OWORD *)(v9 + 116) = v15;
  *(_OWORD *)(v9 + 100) = v14;
  *((_WORD *)v9 + 68) = v11;
  *((_QWORD *)v9 + 18) = v8;
  *((_QWORD *)v9 + 3) = &off_24EC6C730;
  v16 = v27;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v16;
  *(_DWORD *)(a3 + 32) = v28;
  *(_QWORD *)(a3 + 36) = v8;
  v17 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v9 + 24;
  *(_QWORD *)(a3 + 56) = v9;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v26;
  if (v26)
  {
    v21 = (unint64_t *)&v26->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
}

void sub_224084C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224084C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_224084C3C(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_14;
  *(_QWORD *)a2 = *(_QWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 8;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 8;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x13)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 16) = v13;
  v14 = result[7];
  v15 = result[6] + 20;
  result[6] = v15;
  v4 = v14 >= v15;
  v16 = v14 - v15;
  if (!v4)
    v16 = 0;
  if (v16 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(result[3] + v15);
  result[6] += 8;
  return result;
}

void sub_224084D88(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084D9C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084DB0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084DC4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_224084DD8(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
    goto LABEL_14;
  *(_QWORD *)a2 = *(_QWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 8;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 7)
    goto LABEL_14;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 8;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x13)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 16) = v13;
  v14 = result[7];
  v15 = result[6] + 20;
  result[6] = v15;
  v4 = v14 >= v15;
  v16 = v14 - v15;
  if (!v4)
    v16 = 0;
  if (v16 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 36) = *(_QWORD *)(result[3] + v15);
  result[6] += 8;
  return result;
}

void sub_224084F24(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084F38(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084F4C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084F60(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224084F74(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_224085068((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_22408532C(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224085054(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224085068(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  _OWORD v30[5];
  char *v31;
  std::__shared_weak_count *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  memset(v30, 0, sizeof(v30));
  v5 = (char *)operator new(0xF8uLL);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CAE8;
  v37 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v36;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_DWORD *)v5 + 30) = 10;
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v32 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C8F0;
  v31 = v5 + 24;
  sub_2240854C8(a2, (uint64_t)v30);
  v7 = sub_2241577A4((uint64_t)v30);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(_OWORD *)(v7 + 64);
  v33 = *(_OWORD *)(v7 + 48);
  v34 = v12;
  *(_QWORD *)&v35 = *(_QWORD *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 216);
  v14 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC6CC28;
  v15 = *(_WORD *)(v7 + 208);
  *((_QWORD *)v14 + 4) = &off_24EC6C838;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v7 + 32);
  v16 = *(_OWORD *)(v7 + 48);
  v17 = *(_OWORD *)(v7 + 64);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v14 + 88) = v17;
  *(_OWORD *)(v14 + 72) = v16;
  v18 = *(_QWORD *)(v7 + 88);
  *((_DWORD *)v14 + 30) = *(_DWORD *)(v7 + 96);
  *((_QWORD *)v14 + 14) = v18;
  v19 = *(_OWORD *)(v7 + 120);
  *((_OWORD *)v14 + 8) = *(_OWORD *)(v7 + 104);
  *((_OWORD *)v14 + 9) = v19;
  v20 = *(_OWORD *)(v7 + 152);
  v21 = *(_OWORD *)(v7 + 168);
  v22 = *(_OWORD *)(v7 + 184);
  *((_QWORD *)v14 + 28) = *(_QWORD *)(v7 + 200);
  *((_OWORD *)v14 + 12) = v21;
  *((_OWORD *)v14 + 13) = v22;
  *((_OWORD *)v14 + 11) = v20;
  *((_OWORD *)v14 + 10) = *(_OWORD *)(v7 + 136);
  *((_WORD *)v14 + 116) = v15;
  *((_QWORD *)v14 + 30) = v13;
  *((_QWORD *)v14 + 3) = &off_24EC6C8F0;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v11;
  v23 = v34;
  *(_OWORD *)(a3 + 32) = v33;
  *(_OWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 64) = v35;
  *(_QWORD *)(a3 + 72) = v13;
  v24 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v14 + 24;
  *(_QWORD *)(a3 + 88) = v14;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = v32;
  if (v32)
  {
    v28 = (unint64_t *)&v32->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_224085304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224085318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_22408532C(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x27)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  v14 = *(_OWORD *)(v12 + 16);
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(v12 + 32);
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  v15 = result[7];
  v16 = result[6] + 40;
  result[6] = v16;
  v4 = v15 >= v16;
  v17 = v15 - v16;
  if (!v4)
    v17 = 0;
  if (v17 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(result[3] + v16);
  result[6] += 8;
  return result;
}

void sub_224085478(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22408548C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240854A0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240854B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_2240854C8(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  std::logic_error *exception;

  v2 = result[6];
  v3 = result[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)a2 = *(_OWORD *)(result[3] + v2);
  v6 = result[7];
  v7 = result[6] + 16;
  result[6] = v7;
  v4 = v6 >= v7;
  v8 = v6 - v7;
  if (!v4)
    v8 = 0;
  if (v8 <= 0xF)
    goto LABEL_14;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(result[3] + v7);
  v9 = result[7];
  v10 = result[6] + 16;
  result[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 <= 0x27)
    goto LABEL_14;
  v12 = result[3] + v10;
  v13 = *(_OWORD *)v12;
  v14 = *(_OWORD *)(v12 + 16);
  *(_QWORD *)(a2 + 64) = *(_QWORD *)(v12 + 32);
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  v15 = result[7];
  v16 = result[6] + 40;
  result[6] = v16;
  v4 = v15 >= v16;
  v17 = v15 - v16;
  if (!v4)
    v17 = 0;
  if (v17 <= 7)
  {
LABEL_14:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(result[3] + v16);
  result[6] += 8;
  return result;
}

void sub_224085614(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224085628(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22408563C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224085650(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_224085664(_QWORD *a1, int *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  int v8;
  int v9;
  uint64_t (*v10)(uint64_t, int *, _QWORD, void *, void *);
  int *v11;
  uint64_t (*v12)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v13;
  uint64_t (*v14)(uint64_t, int *, _QWORD, void *, void *);
  int *v15;
  uint64_t (*v16)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, int *, _QWORD, void *, void *);
  int *v19;
  uint64_t (*v20)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v21;
  uint64_t (*v22)(uint64_t, int *, _QWORD, void *, void *);
  int *v23;
  uint64_t (*v24)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v25;
  uint64_t (*v26)(uint64_t, int *, _QWORD, void *, void *);
  int *v27;
  uint64_t (*v28)(uint64_t, int *, _QWORD, void *, void *);
  _QWORD *v29;
  uint64_t (*v30)(uint64_t, int *, _QWORD, void *, void *);
  int *v31;
  uint64_t (*v32)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v33;
  uint64_t (*v34)(uint64_t, int *, _QWORD, void *, void *);
  int *v35;
  uint64_t (*v36)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v37;
  uint64_t (*v38)(uint64_t, int *, _QWORD, void *, void *);
  int *v39;
  uint64_t (*v40)(uint64_t, int *, _QWORD, void *, void *);
  uint64_t v41;
  std::logic_error *exception;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_DWORD *)(a1[3] + v2);
  a1[6] = v2 + 4;
  *a2 = v8;
  sub_224151490((void (**)(int))a2);
  v9 = *a2;
  switch(v9)
  {
    case 0:
      v16 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v15 = a2 + 2;
      v14 = v16;
      if (!v16)
        goto LABEL_31;
      v17 = (_QWORD *)v14(3, v15, 0, &unk_24EC682D8, &unk_224697234);
      if (!v17)
        goto LABEL_31;
      sub_223BD5AE8((uint64_t)&v43, a1, v17);
      break;
    case 1:
      v20 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v19 = a2 + 2;
      v18 = v20;
      if (!v20)
        goto LABEL_31;
      v21 = (_QWORD *)v18(3, v19, 0, &unk_24EC68328, &unk_224697308);
      if (!v21)
        goto LABEL_31;
      sub_224082A6C((uint64_t)&v44, a1, v21);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v24 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v23 = a2 + 2;
      v22 = v24;
      if (!v24)
        goto LABEL_31;
      v25 = (_QWORD *)v22(3, v23, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v25)
        goto LABEL_31;
      sub_224083030((uint64_t)&v45, a1, v25);
      break;
    case 11:
      v28 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
      v27 = a2 + 2;
      v26 = v28;
      if (!v28 || (v29 = (_QWORD *)v26(3, v27, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
LABEL_31:
        sub_224071EE4();
      sub_2240835C0((uint64_t)&v46, a1, v29);
      break;
    default:
      switch(v9)
      {
        case 'd':
          v12 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v11 = a2 + 2;
          v10 = v12;
          if (!v12)
            goto LABEL_31;
          v13 = v10(3, v11, 0, &unk_24EC68418, &unk_224697588);
          if (!v13)
            goto LABEL_31;
          sub_224083B84((uint64_t)&v47, a1, v13);
          break;
        case 'e':
          v32 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v31 = a2 + 2;
          v30 = v32;
          if (!v32)
            goto LABEL_31;
          v33 = v30(3, v31, 0, &unk_24EC68468, &unk_224697660);
          if (!v33)
            goto LABEL_31;
          sub_224084204((uint64_t)&v48, a1, v33);
          break;
        case 'n':
          v36 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v35 = a2 + 2;
          v34 = v36;
          if (!v36)
            goto LABEL_31;
          v37 = v34(3, v35, 0, &unk_24EC684B8, &unk_224697738);
          if (!v37)
            goto LABEL_31;
          sub_2240848F4((uint64_t)&v49, a1, v37);
          break;
        case 'o':
          v40 = (uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))*((_QWORD *)a2 + 1);
          v39 = a2 + 2;
          v38 = v40;
          if (!v40)
            goto LABEL_31;
          v41 = v38(3, v39, 0, &unk_24EC68508, &unk_224697810);
          if (!v41)
            goto LABEL_31;
          sub_224084F74((uint64_t)&v50, a1, v41);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_2240859A8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2240859BC(int *a1, uint64_t a2, void (**a3)(int a1), unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;
  char v13;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_224085AE8();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_224086094(a2, a3);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  if (v9 <= 1)
    sub_224085E98((uint64_t)&v13, a2, (uint64_t)a3);
  else
    sub_224086094(a2, a3);
}

__int128 *sub_224085AE8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FF90);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FF90))
    return &xmmword_25578FF78;
  v2 = sub_224085BC4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_25578FF78, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25578FF88 = v2->__r_.__value_.__r.__words[2];
    xmmword_25578FF78 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FF78, &dword_22314D000);
  __cxa_guard_release(&qword_25578FF90);
  return &xmmword_25578FF78;
}

void sub_224085BAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FF90);
  _Unwind_Resume(a1);
}

std::string *sub_224085BC4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25578FFB0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25578FFB0))
    return &stru_25578FF98;
  sub_224085CB4((uint64_t)__p);
  sub_2232A0AA8((char *)__p, &stru_25578FF98);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25578FF98, &dword_22314D000);
  __cxa_guard_release(&qword_25578FFB0);
  return &stru_25578FF98;
}

void sub_224085C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25578FFB0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25578FFB0);
  _Unwind_Resume(a1);
}

void sub_224085CB4(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25578FFD0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25578FFD0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::CameraSample<>]", qword_25578FFB8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FFB8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FFD0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25578FFF0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25578FFF0))
  {
    v5 = sub_2231A38CC(qword_25578FFB8, "<", 0);
    sub_2231A37C8(qword_25578FFB8, 0, v5, qword_25578FFD8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25578FFD8, &dword_22314D000);
    __cxa_guard_release(&qword_25578FFF0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790010);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790010))
  {
    sub_224573040((uint64_t)qword_25578FFD8, (uint64_t)&xmmword_25578FFF8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25578FFF8, &dword_22314D000);
    __cxa_guard_release(&qword_255790010);
  }
  if (byte_25579000F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_25578FFF8, *((unint64_t *)&xmmword_25578FFF8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25578FFF8;
    *(_QWORD *)(a1 + 16) = unk_255790008;
  }
}

void sub_224085E50(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790010);
  _Unwind_Resume(a1);
}

void sub_224085E68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FFF0);
  _Unwind_Resume(a1);
}

void sub_224085E80(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25578FFD0);
  _Unwind_Resume(a1);
}

_QWORD *sub_224085E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD *result;
  _QWORD v12[2];
  std::__shared_weak_count *v13;
  uint64_t (**v14)();
  void (*v15)(uint64_t);
  std::__shared_weak_count *v16;
  void (*v17)(int);
  _QWORD v18[5];

  v18[4] = *MEMORY[0x24BDAC8D0];
  sub_224159374(&v14);
  sub_22414F578((uint64_t)&v17, (uint64_t)&v14);
  v14 = &off_24EC6D000;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_22408B1BC(a2, &v17);
  sub_224150AD4((int *)&v17, v12);
  sub_224151B5C((uint64_t)&v14, (uint64_t)v12);
  v12[0] = &off_24EC6D000;
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_DWORD *)a3 = (_DWORD)v14;
  result = sub_224079E90((_QWORD *)(a3 + 8), &v15);
  if (v15)
    result = (_QWORD *)((uint64_t (*)(_QWORD, void (**)(uint64_t), _QWORD, _QWORD, _QWORD))v15)(0, &v15, 0, 0, 0);
  if (v18[0])
    return (_QWORD *)((uint64_t (*)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))v18[0])(0, v18, 0, 0, 0);
  return result;
}

void sub_22408601C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224086094(uint64_t a1, void (**a2)(int a1))
{
  int v4;
  void (*v5)(int);
  int *v6;
  void (*v7)(int);
  uint64_t v8;
  uint64_t v9;
  int v10;
  void (*v11)(int);
  int *v12;
  void (*v13)(int);
  uint64_t v14;
  void (*v15)(int);
  int *v16;
  void (*v17)(int);
  _QWORD *v18;
  void (*v19)(int);
  int *v20;
  void (*v21)(int);
  uint64_t v22;
  void (*v23)(int);
  int *v24;
  void (*v25)(int);
  _QWORD *v26;
  void (*v27)(int);
  int *v28;
  void (*v29)(int);
  uint64_t v30;
  uint64_t v31;
  int v32;
  void (*v33)(int);
  int *v34;
  void (*v35)(int);
  uint64_t v36;
  uint64_t v37;
  int v38;
  void (*v39)(int);
  int *v40;
  void (*v41)(int);
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45[3];
  unsigned int v46;

  *(_QWORD *)v45 = a2;
  sub_224086520((_BYTE *)a1, (_DWORD **)v45);
  sub_224152F70(a2);
  v4 = *(_DWORD *)a2;
  switch(v4)
  {
    case 0:
      v13 = a2[1];
      v12 = (int *)(a2 + 1);
      v11 = v13;
      if (!v13)
        goto LABEL_36;
      v14 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v11)(3, v12, 0, &unk_24EC682D8, &unk_224697234);
      if (!v14)
        goto LABEL_36;
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_223BE040C(v45, a1, v14);
      break;
    case 1:
      v17 = a2[1];
      v16 = (int *)(a2 + 1);
      v15 = v17;
      if (!v17)
        goto LABEL_36;
      v18 = (_QWORD *)((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v15)(3, v16, 0, &unk_24EC68328, &unk_224697308);
      if (!v18)
        goto LABEL_36;
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_2240866D4(v45, a1, v18);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v21 = a2[1];
      v20 = (int *)(a2 + 1);
      v19 = v21;
      if (!v21)
        goto LABEL_36;
      v22 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v19)(3, v20, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v22)
        goto LABEL_36;
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_224087220(v45, a1, v22);
      break;
    case 11:
      v25 = a2[1];
      v24 = (int *)(a2 + 1);
      v23 = v25;
      if (!v25
        || (v26 = (_QWORD *)((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v23)(3, v24, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
      {
LABEL_36:
        sub_224071EE4();
      }
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_224087E30(v45, a1, v26);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = a2[1];
          v6 = (int *)(a2 + 1);
          v5 = v7;
          if (!v7)
            goto LABEL_36;
          v8 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v5)(3, v6, 0, &unk_24EC68418, &unk_224697588);
          if (!v8)
            goto LABEL_36;
          v9 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v10 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v9 + 104))(a1, &v46);
          if (v10 < 1)
            sub_224088EF4(a1, v8, v46);
          else
            sub_22408897C(v45, a1, v8, v46);
          break;
        case 'e':
          v29 = a2[1];
          v28 = (int *)(a2 + 1);
          v27 = v29;
          if (!v29)
            goto LABEL_36;
          v30 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v27)(3, v28, 0, &unk_24EC68468, &unk_224697660);
          if (!v30)
            goto LABEL_36;
          v31 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v32 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v31 + 104))(a1, &v46);
          if (v32 < 1)
            sub_2240898CC(a1, v30, v46);
          else
            sub_224089354(v45, a1, v30, v46);
          break;
        case 'n':
          v35 = a2[1];
          v34 = (int *)(a2 + 1);
          v33 = v35;
          if (!v35)
            goto LABEL_36;
          v36 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v33)(3, v34, 0, &unk_24EC684B8, &unk_224697738);
          if (!v36)
            goto LABEL_36;
          v37 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v38 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v37 + 104))(a1, &v46);
          if (v38 < 1)
            sub_22408A314(a1, v36, v46);
          else
            sub_224089D9C(v45, a1, v36, v46);
          break;
        case 'o':
          v41 = a2[1];
          v40 = (int *)(a2 + 1);
          v39 = v41;
          if (!v41)
            goto LABEL_36;
          v42 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v39)(3, v40, 0, &unk_24EC68508, &unk_224697810);
          if (!v42)
            goto LABEL_36;
          v43 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v44 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v43 + 104))(a1, &v46);
          if (v44 < 1)
            sub_22408ACEC(a1, v42, v46);
          else
            sub_22408A774(v45, a1, v42, v46);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_224086520(_BYTE *a1, _DWORD **a2)
{
  int v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  int v14;
  uint64_t v15;

  if ((a1[12] & 2) != 0)
  {
    __p[0] = 0;
    __p[1] = 0;
    v13 = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    v3 = SHIBYTE(v13);
    v4 = (char *)__p[0];
    v5 = operator new();
    v6 = v5;
    if (v3 >= 0)
      v7 = (char *)__p;
    else
      v7 = v4;
    sub_22456E918(v5, v7);
    v15 = v6;
    v14 = 0;
    sub_224153714((uint64_t *)v6, &v14);
    v8 = v14;
    v9 = MEMORY[0x24BEDB7F0];
    v10 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
    v11 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)(v6 + *(_QWORD *)(v10 - 24)) = *(_QWORD *)(v9 + 64);
    *(_QWORD *)(v6 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v6 + 16) = v11;
    if (*(char *)(v6 + 111) < 0)
      operator delete(*(void **)(v6 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v6 + 128);
    MEMORY[0x227684CE8](v6, 0x10B2C40EED050F3);
    **a2 = v8;
    if (SHIBYTE(v13) < 0)
      operator delete(__p[0]);
  }
  else
  {
    LODWORD(__p[0]) = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 104))(a1, __p);
    **a2 = __p[0];
  }
}

void sub_224086688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  sub_22456E764(&a17);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2240866D4(int *a1, uint64_t a2, _QWORD *a3)
{
  unsigned int v6;
  char v7;

  v6 = 2;
  (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v6);
  if (*a1 < 1)
  {
    if (v6 < 2)
    {
      sub_224086F50((uint64_t)&v7, a2, a3);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 1);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 2);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 3);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 104))(a2, a3 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 36);
    }
  }
  else
  {
    sub_2240867FC(a1, a2, a3, v6);
  }
}

void sub_2240867FC(int *a1, uint64_t a2, _QWORD *a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  unsigned int v11;
  __int128 *v12;
  unsigned int v13;
  char v14;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v13 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v13);
    if (v13 >= 3)
    {
      v11 = v13;
      v12 = sub_22408697C();
      sub_22455C3A8((std::string *)v12, v11, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 >= 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
    goto LABEL_13;
  }
LABEL_8:
  if (a4 >= 2)
    v10 = 2;
  else
    v10 = a4;
  if (v10 <= 1)
  {
    sub_224086F50((uint64_t)&v14, a2, a3);
    return;
  }
  v9 = 0;
LABEL_13:
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 1);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 2);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 3);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 104))(a2, a3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 36);
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_22408697C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790030);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790030))
    return &xmmword_255790018;
  v2 = sub_224086A58();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790018, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790028 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790018 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790018, &dword_22314D000);
  __cxa_guard_release(&qword_255790030);
  return &xmmword_255790018;
}

void sub_224086A40(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790030);
  _Unwind_Resume(a1);
}

std::string *sub_224086A58()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790050);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790050))
    return &stru_255790038;
  sub_224086D6C((uint64_t)__p);
  sub_224086B48((char *)__p, &stru_255790038);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790038, &dword_22314D000);
  __cxa_guard_release(&qword_255790050);
  return &stru_255790038;
}

void sub_224086B08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790050);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790050);
  _Unwind_Resume(a1);
}

void sub_224086B48(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *v15[2];
  uint64_t v16;
  __int128 v17;
  std::string::size_type v18;
  __int128 v19;
  std::string::size_type v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v15 = *(_OWORD *)"float64";
  v16 = 0x700000000000000;
  v4 = sub_223BE0C88();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&v17, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v18 = v4->__r_.__value_.__r.__words[2];
    v17 = v5;
  }
  v6 = sub_2232A0DB4();
  if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&v19, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
  }
  else
  {
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v20 = v6->__r_.__value_.__r.__words[2];
    v19 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)v15, 3uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v20) < 0)
  {
    operator delete((void *)v19);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        return;
LABEL_21:
      operator delete(v15[0]);
      return;
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_21;
}

void sub_224086CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48(&a10);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(a1);
LABEL_7:
      operator delete(a13);
      goto LABEL_8;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_224086D44()
{
  uint64_t v0;
  uint64_t v1;

  while (1)
  {
    if (*(char *)(v0 - 1) < 0)
      operator delete(*(void **)(v0 - 24));
    v0 -= 24;
    if (v0 == v1)
      JUMPOUT(0x224086D3CLL);
  }
}

void sub_224086D6C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790070);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790070))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::PinholeCameraSample<double, cv3d::kit::cam::PixelOrigin::Center>]", qword_255790058);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790058, &dword_22314D000);
    __cxa_guard_release(&qword_255790070);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790090);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790090))
  {
    v5 = sub_2231A38CC(qword_255790058, "<", 0);
    sub_2231A37C8(qword_255790058, 0, v5, qword_255790078);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790078, &dword_22314D000);
    __cxa_guard_release(&qword_255790090);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2557900B0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2557900B0))
  {
    sub_224573040((uint64_t)qword_255790078, (uint64_t)&xmmword_255790098);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790098, &dword_22314D000);
    __cxa_guard_release(&qword_2557900B0);
  }
  if (byte_2557900AF < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790098, *((unint64_t *)&xmmword_255790098 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790098;
    *(_QWORD *)(a1 + 16) = unk_2557900A8;
  }
}

void sub_224086F08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557900B0);
  _Unwind_Resume(a1);
}

void sub_224086F20(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790090);
  _Unwind_Resume(a1);
}

void sub_224086F38(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790070);
  _Unwind_Resume(a1);
}

void sub_224086F50(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;

  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD60;
  v36 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *(_OWORD *)(v5 + 56) = v36;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC35EB0;
  v34 = v5 + 24;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v31);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v31 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v32);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v32 + 8);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v33);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v33 + 4);
  v7 = v31;
  v8 = v32;
  v9 = 1.0 / *(double *)&v31;
  v10 = v33;
  v11 = v34;
  *((_OWORD *)v34 + 1) = v31;
  *((_OWORD *)v11 + 2) = v8;
  *((double *)v11 + 6) = v9;
  *((double *)v11 + 7) = 1.0 / *((double *)&v7 + 1);
  *((double *)v11 + 8) = -(*(double *)&v8 * v9);
  *((double *)v11 + 9) = -(*((double *)&v8 + 1) * (1.0 / *((double *)&v7 + 1)));
  *((_QWORD *)v11 + 10) = v7;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 11) = 0;
  *((_QWORD *)v11 + 14) = *((_QWORD *)&v7 + 1);
  *((_QWORD *)v11 + 15) = 0;
  *((_OWORD *)v11 + 8) = v8;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 19) = v10;
  v12 = v34;
  v13 = v34 + 16;
  v14 = *((_QWORD *)v34 + 2);
  v15 = *((_QWORD *)v34 + 3);
  v16 = v34 + 32;
  v17 = *((_QWORD *)v34 + 4);
  v18 = *((_QWORD *)v34 + 5);
  v19 = *((_QWORD *)v34 + 19);
  v20 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = &off_24EC6CEA0;
  *((_QWORD *)v20 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v20 + 40) = *v13;
  *(_OWORD *)(v20 + 56) = *v16;
  v21 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v20 + 88) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v20 + 72) = v21;
  v22 = *((_OWORD *)v12 + 6);
  v23 = *((_OWORD *)v12 + 7);
  v24 = *((_OWORD *)v12 + 8);
  *((_QWORD *)v20 + 21) = *((_QWORD *)v12 + 18);
  *(_OWORD *)(v20 + 152) = v24;
  *(_OWORD *)(v20 + 136) = v23;
  *(_OWORD *)(v20 + 120) = v22;
  *(_OWORD *)(v20 + 104) = *((_OWORD *)v12 + 5);
  *((_QWORD *)v20 + 22) = v19;
  *((_QWORD *)v20 + 3) = &off_24EC35EB0;
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20 + 24;
  v25 = (std::__shared_weak_count *)a3[6];
  a3[6] = v20;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_2240871F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408720C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224087220(int *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  char v7;

  v6 = 2;
  (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v6);
  if (*a1 < 1)
  {
    if (v6 < 2)
    {
      sub_224087B94((uint64_t)&v7, a2, a3);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 8);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 12);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 16);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 20);
    }
  }
  else
  {
    sub_224087348(a1, a2, a3, v6);
  }
}

void sub_224087348(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  unsigned int v11;
  __int128 *v12;
  unsigned int v13;
  char v14;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v13 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v13);
    if (v13 >= 3)
    {
      v11 = v13;
      v12 = sub_2240874C8();
      sub_22455C3A8((std::string *)v12, v11, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 >= 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
    goto LABEL_13;
  }
LABEL_8:
  if (a4 >= 2)
    v10 = 2;
  else
    v10 = a4;
  if (v10 <= 1)
  {
    sub_224087B94((uint64_t)&v14, a2, a3);
    return;
  }
  v9 = 0;
LABEL_13:
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 20);
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240874C8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557900D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557900D0))
    return &xmmword_2557900B8;
  v2 = sub_2240875A4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_2557900B8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2557900C8 = v2->__r_.__value_.__r.__words[2];
    xmmword_2557900B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557900B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557900D0);
  return &xmmword_2557900B8;
}

void sub_22408758C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557900D0);
  _Unwind_Resume(a1);
}

std::string *sub_2240875A4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557900F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557900F0))
    return &stru_2557900D8;
  sub_2240878B8((uint64_t)__p);
  sub_224087694((char *)__p, &stru_2557900D8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557900D8, &dword_22314D000);
  __cxa_guard_release(&qword_2557900F0);
  return &stru_2557900D8;
}

void sub_224087654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557900F0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557900F0);
  _Unwind_Resume(a1);
}

void sub_224087694(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *v15[2];
  uint64_t v16;
  __int128 v17;
  std::string::size_type v18;
  __int128 v19;
  std::string::size_type v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v15 = *(_OWORD *)"float32";
  v16 = 0x700000000000000;
  v4 = sub_224087A9C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&v17, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v18 = v4->__r_.__value_.__r.__words[2];
    v17 = v5;
  }
  v6 = sub_2232A0DB4();
  if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&v19, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
  }
  else
  {
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v20 = v6->__r_.__value_.__r.__words[2];
    v19 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)v15, 3uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v20) < 0)
  {
    operator delete((void *)v19);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        return;
LABEL_21:
      operator delete(v15[0]);
      return;
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_21;
}

void sub_224087830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48(&a10);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(a1);
LABEL_7:
      operator delete(a13);
      goto LABEL_8;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_224087890()
{
  uint64_t v0;
  uint64_t v1;

  while (1)
  {
    if (*(char *)(v0 - 1) < 0)
      operator delete(*(void **)(v0 - 24));
    v0 -= 24;
    if (v0 == v1)
      JUMPOUT(0x224087888);
  }
}

void sub_2240878B8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790130);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790130))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::PinholeCameraSample<float, cv3d::kit::cam::PixelOrigin::Corner>]", qword_255790118);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790118, &dword_22314D000);
    __cxa_guard_release(&qword_255790130);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790150);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790150))
  {
    v5 = sub_2231A38CC(qword_255790118, "<", 0);
    sub_2231A37C8(qword_255790118, 0, v5, qword_255790138);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790138, &dword_22314D000);
    __cxa_guard_release(&qword_255790150);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790170);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790170))
  {
    sub_224573040((uint64_t)qword_255790138, (uint64_t)&xmmword_255790158);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790158, &dword_22314D000);
    __cxa_guard_release(&qword_255790170);
  }
  if (byte_25579016F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790158, *((unint64_t *)&xmmword_255790158 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790158;
    *(_QWORD *)(a1 + 16) = unk_255790168;
  }
}

void sub_224087A54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790170);
  _Unwind_Resume(a1);
}

void sub_224087A6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790150);
  _Unwind_Resume(a1);
}

void sub_224087A84(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790130);
  _Unwind_Resume(a1);
}

std::string *sub_224087A9C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790110);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790110))
    return &stru_2557900F8;
  sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PixelOrigin::Corner]", __p);
  sub_22457326C((uint64_t)__p, &stru_2557900F8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557900F8, &dword_22314D000);
  __cxa_guard_release(&qword_255790110);
  return &stru_2557900F8;
}

void sub_224087B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790110);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790110);
  _Unwind_Resume(a1);
}

void sub_224087B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  float32x2_t v7;
  float32x2_t *v8;
  float32x2_t v9;
  float32x2_t v10;
  float32x2_t v16;
  float32x2_t v17;
  int32x2_t v18;
  int8x16_t v19;
  int8x16_t *v20;
  uint64_t v21;
  char *v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  std::__shared_weak_count *v26;
  unint64_t *p_shared_owners;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  int8x16_t v32;
  float32x2_t v33;
  float32x2_t v34;
  float32x2_t v35;
  int8x16_t *v36;
  std::__shared_weak_count *v37;

  v33 = 0;
  v34 = 0;
  v35 = 0;
  v5 = (char *)operator new(0x78uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CD10;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC20868;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 56) = v6;
  *(int32x4_t *)(v5 + 72) = v6;
  *(int32x4_t *)(v5 + 88) = v6;
  *((_DWORD *)v5 + 26) = 2143289344;
  *((_QWORD *)v5 + 14) = 0;
  v37 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC37688;
  v36 = (int8x16_t *)(v5 + 24);
  (*(void (**)(uint64_t, float32x2_t *))(*(_QWORD *)a2 + 128))(a2, &v33);
  (*(void (**)(uint64_t, __int32 *))(*(_QWORD *)a2 + 128))(a2, (__int32 *)&v33 + 1);
  (*(void (**)(uint64_t, float32x2_t *))(*(_QWORD *)a2 + 128))(a2, &v34);
  (*(void (**)(uint64_t, __int32 *))(*(_QWORD *)a2 + 128))(a2, (__int32 *)&v34 + 1);
  (*(void (**)(uint64_t, float32x2_t *))(*(_QWORD *)a2 + 104))(a2, &v35);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v35 + 4);
  v7 = v35;
  v8 = (float32x2_t *)v36;
  v9 = v33;
  v10 = v34;
  __asm { FMOV            V2.2S, #1.0 }
  v16 = vdiv_f32(_D2, v33);
  v17 = vmul_f32(v16, vneg_f32(v34));
  v18 = vzip1_s32((int32x2_t)v33, (int32x2_t)v34);
  v19.i64[0] = v18.u32[0];
  v19.i64[1] = v18.u32[1];
  v36[1] = vorrq_s8((int8x16_t)vshll_n_s32(vzip2_s32((int32x2_t)v33, (int32x2_t)v34), 0x20uLL), v19);
  v8[4] = v16;
  v8[5] = v17;
  v8[6].i32[0] = v9.i32[0];
  v8[7] = 0;
  v8[6].i32[1] = 0;
  v8[8].i32[0] = v9.i32[1];
  v8[8].i32[1] = 0;
  v8[9] = v10;
  v8[10].i32[0] = 1065353216;
  v8[11] = v7;
  v20 = v36;
  v32 = v36[1];
  v21 = v36[5].i64[1];
  v22 = (char *)operator new(0x78uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24EC6CE50;
  v23 = v20[1];
  *((_QWORD *)v22 + 4) = &off_24EC20868;
  *(int8x16_t *)(v22 + 40) = v23;
  *(int8x16_t *)(v22 + 56) = v20[2];
  v24 = v20[3];
  v25 = v20[4];
  *((_DWORD *)v22 + 26) = v20[5].i32[0];
  *(int8x16_t *)(v22 + 88) = v25;
  *(int8x16_t *)(v22 + 72) = v24;
  *((_QWORD *)v22 + 3) = &off_24EC37688;
  *((_QWORD *)v22 + 14) = v21;
  *(int8x16_t *)a3 = v32;
  *(_QWORD *)(a3 + 16) = v21;
  *(_QWORD *)(a3 + 24) = v22 + 24;
  v26 = *(std::__shared_weak_count **)(a3 + 32);
  *(_QWORD *)(a3 + 32) = v22;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldaxr(p_shared_owners);
    while (__stlxr(v28 - 1, p_shared_owners));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v29 = v37;
  if (v37)
  {
    v30 = (unint64_t *)&v37->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
}

void sub_224087E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224087E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_22365B530((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224087E30(int *a1, uint64_t a2, _QWORD *a3)
{
  unsigned int v6;
  char v7;

  v6 = 2;
  (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v6);
  if (*a1 < 1)
  {
    if (v6 < 2)
    {
      sub_2240886AC((uint64_t)&v7, a2, a3);
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 1);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 2);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 3);
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 104))(a2, a3 + 4);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 36);
    }
  }
  else
  {
    sub_224087F58(a1, a2, a3, v6);
  }
}

void sub_224087F58(int *a1, uint64_t a2, _QWORD *a3, unsigned int a4)
{
  int v7;
  int v9;
  unsigned int v10;
  unsigned int v11;
  __int128 *v12;
  unsigned int v13;
  char v14;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v13 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v13);
    if (v13 >= 3)
    {
      v11 = v13;
      v12 = sub_2240880D8();
      sub_22455C3A8((std::string *)v12, v11, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 >= 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    v9 = 1;
    goto LABEL_13;
  }
LABEL_8:
  if (a4 >= 2)
    v10 = 2;
  else
    v10 = a4;
  if (v10 <= 1)
  {
    sub_2240886AC((uint64_t)&v14, a2, a3);
    return;
  }
  v9 = 0;
LABEL_13:
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 1);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 2);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 136))(a2, a3 + 3);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a2 + 104))(a2, a3 + 4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, (uint64_t)a3 + 36);
  if (v9)
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_2240880D8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790190);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790190))
    return &xmmword_255790178;
  v2 = sub_2240881B4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790178, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790188 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790178 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790178, &dword_22314D000);
  __cxa_guard_release(&qword_255790190);
  return &xmmword_255790178;
}

void sub_22408819C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790190);
  _Unwind_Resume(a1);
}

std::string *sub_2240881B4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557901B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557901B0))
    return &stru_255790198;
  sub_2240884C8((uint64_t)__p);
  sub_2240882A4((char *)__p, &stru_255790198);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790198, &dword_22314D000);
  __cxa_guard_release(&qword_2557901B0);
  return &stru_255790198;
}

void sub_224088264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557901B0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557901B0);
  _Unwind_Resume(a1);
}

void sub_2240882A4(char *a1@<X0>, std::string *a2@<X8>)
{
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *v15[2];
  uint64_t v16;
  __int128 v17;
  std::string::size_type v18;
  __int128 v19;
  std::string::size_type v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_OWORD *)v15 = *(_OWORD *)"float64";
  v16 = 0x700000000000000;
  v4 = sub_224087A9C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&v17, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v18 = v4->__r_.__value_.__r.__words[2];
    v17 = v5;
  }
  v6 = sub_2232A0DB4();
  if (SHIBYTE(v6->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&v19, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
  }
  else
  {
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v20 = v6->__r_.__value_.__r.__words[2];
    v19 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)v15, 3uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if (SHIBYTE(v20) < 0)
  {
    operator delete((void *)v19);
    if ((SHIBYTE(v18) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        return;
LABEL_21:
      operator delete(v15[0]);
      return;
    }
  }
  else if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_21;
}

void sub_224088440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_22319BB48(&a10);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a18 & 0x80000000) == 0)
LABEL_8:
        _Unwind_Resume(a1);
LABEL_7:
      operator delete(a13);
      goto LABEL_8;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a18 & 0x80000000) == 0)
    goto LABEL_8;
  goto LABEL_7;
}

void sub_2240884A0()
{
  uint64_t v0;
  uint64_t v1;

  while (1)
  {
    if (*(char *)(v0 - 1) < 0)
      operator delete(*(void **)(v0 - 24));
    v0 -= 24;
    if (v0 == v1)
      JUMPOUT(0x224088498);
  }
}

void sub_2240884C8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557901D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557901D0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::PinholeCameraSample<double, cv3d::kit::cam::PixelOrigin::Corner>]", qword_2557901B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557901B8, &dword_22314D000);
    __cxa_guard_release(&qword_2557901D0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2557901F0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2557901F0))
  {
    v5 = sub_2231A38CC(qword_2557901B8, "<", 0);
    sub_2231A37C8(qword_2557901B8, 0, v5, qword_2557901D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557901D8, &dword_22314D000);
    __cxa_guard_release(&qword_2557901F0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790210);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790210))
  {
    sub_224573040((uint64_t)qword_2557901D8, (uint64_t)&xmmword_2557901F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557901F8, &dword_22314D000);
    __cxa_guard_release(&qword_255790210);
  }
  if (byte_25579020F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_2557901F8, *((unint64_t *)&xmmword_2557901F8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2557901F8;
    *(_QWORD *)(a1 + 16) = unk_255790208;
  }
}

void sub_224088664(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790210);
  _Unwind_Resume(a1);
}

void sub_22408867C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557901F0);
  _Unwind_Resume(a1);
}

void sub_224088694(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557901D0);
  _Unwind_Resume(a1);
}

void sub_2240886AC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  int64x2_t v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  std::__shared_weak_count *v35;
  __int128 v36;

  v33 = 0;
  v31 = 0u;
  v32 = 0u;
  v5 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CDB0;
  v36 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *(_OWORD *)(v5 + 56) = v36;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((_QWORD *)v5 + 4) = &off_24EC35EF0;
  *(int64x2_t *)(v5 + 72) = v6;
  *(int64x2_t *)(v5 + 88) = v6;
  *(int64x2_t *)(v5 + 104) = v6;
  *(int64x2_t *)(v5 + 120) = v6;
  *(int64x2_t *)(v5 + 136) = v6;
  *(int64x2_t *)(v5 + 152) = v6;
  *((_QWORD *)v5 + 21) = 0x7FF8000000000000;
  *((_QWORD *)v5 + 22) = 0;
  v35 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C9A0;
  v34 = v5 + 24;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v31);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v31 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v32);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v32 + 8);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v33);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v33 + 4);
  v7 = v31;
  v8 = v32;
  v9 = 1.0 / *(double *)&v31;
  v10 = v33;
  v11 = v34;
  *((_OWORD *)v34 + 1) = v31;
  *((_OWORD *)v11 + 2) = v8;
  *((double *)v11 + 6) = v9;
  *((double *)v11 + 7) = 1.0 / *((double *)&v7 + 1);
  *((double *)v11 + 8) = -(*(double *)&v8 * v9);
  *((double *)v11 + 9) = -(*((double *)&v8 + 1) * (1.0 / *((double *)&v7 + 1)));
  *((_QWORD *)v11 + 10) = v7;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  *((_QWORD *)v11 + 11) = 0;
  *((_QWORD *)v11 + 14) = *((_QWORD *)&v7 + 1);
  *((_QWORD *)v11 + 15) = 0;
  *((_OWORD *)v11 + 8) = v8;
  *((_QWORD *)v11 + 18) = 0x3FF0000000000000;
  *((_QWORD *)v11 + 19) = v10;
  v12 = v34;
  v13 = v34 + 16;
  v14 = *((_QWORD *)v34 + 2);
  v15 = *((_QWORD *)v34 + 3);
  v16 = v34 + 32;
  v17 = *((_QWORD *)v34 + 4);
  v18 = *((_QWORD *)v34 + 5);
  v19 = *((_QWORD *)v34 + 19);
  v20 = (char *)operator new(0xB8uLL);
  *((_QWORD *)v20 + 1) = 0;
  *((_QWORD *)v20 + 2) = 0;
  *(_QWORD *)v20 = &off_24EC6CEF0;
  *((_QWORD *)v20 + 4) = &off_24EC35EF0;
  *(_OWORD *)(v20 + 40) = *v13;
  *(_OWORD *)(v20 + 56) = *v16;
  v21 = *((_OWORD *)v12 + 3);
  *(_OWORD *)(v20 + 88) = *((_OWORD *)v12 + 4);
  *(_OWORD *)(v20 + 72) = v21;
  v22 = *((_OWORD *)v12 + 6);
  v23 = *((_OWORD *)v12 + 7);
  v24 = *((_OWORD *)v12 + 8);
  *((_QWORD *)v20 + 21) = *((_QWORD *)v12 + 18);
  *(_OWORD *)(v20 + 152) = v24;
  *(_OWORD *)(v20 + 136) = v23;
  *(_OWORD *)(v20 + 120) = v22;
  *(_OWORD *)(v20 + 104) = *((_OWORD *)v12 + 5);
  *((_QWORD *)v20 + 22) = v19;
  *((_QWORD *)v20 + 3) = &off_24EC6C9A0;
  *a3 = v14;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20 + 24;
  v25 = (std::__shared_weak_count *)a3[6];
  a3[6] = v20;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldaxr(p_shared_owners);
    while (__stlxr(v27 - 1, p_shared_owners));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_224088954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224088968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_224158980((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408897C(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_224088B44();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 20);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 28);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 36);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 40);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  sub_224088EF4(a2, a3, v9);
}

__int128 *sub_224088B44()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790230);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790230))
    return &xmmword_255790218;
  v2 = sub_224088C20();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790218, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790228 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790218 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790218, &dword_22314D000);
  __cxa_guard_release(&qword_255790230);
  return &xmmword_255790218;
}

void sub_224088C08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790230);
  _Unwind_Resume(a1);
}

std::string *sub_224088C20()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790250);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790250))
    return &stru_255790238;
  sub_224088D10((uint64_t)__p);
  sub_223BE0880((char *)__p, &stru_255790238);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790238, &dword_22314D000);
  __cxa_guard_release(&qword_255790250);
  return &stru_255790238;
}

void sub_224088CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790250);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790250);
  _Unwind_Resume(a1);
}

void sub_224088D10(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790270);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790270))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::HeikkilaCameraSample<float, cv3d::kit::cam::PixelOrigin::Center>]", qword_255790258);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790258, &dword_22314D000);
    __cxa_guard_release(&qword_255790270);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790290);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790290))
  {
    v5 = sub_2231A38CC(qword_255790258, "<", 0);
    sub_2231A37C8(qword_255790258, 0, v5, qword_255790278);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790278, &dword_22314D000);
    __cxa_guard_release(&qword_255790290);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2557902B0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2557902B0))
  {
    sub_224573040((uint64_t)qword_255790278, (uint64_t)&xmmword_255790298);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790298, &dword_22314D000);
    __cxa_guard_release(&qword_2557902B0);
  }
  if (byte_2557902AF < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790298, *((unint64_t *)&xmmword_255790298 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790298;
    *(_QWORD *)(a1 + 16) = unk_2557902A8;
  }
}

void sub_224088EAC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557902B0);
  _Unwind_Resume(a1);
}

void sub_224088EC4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790290);
  _Unwind_Resume(a1);
}

void sub_224088EDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790270);
  _Unwind_Resume(a1);
}

void sub_224088EF4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  char v5;

  if (a3 < 2)
  {
    sub_224089020((uint64_t)&v5, a1, a2);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 36);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 40);
  }
}

void sub_224089020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  _DWORD v25[8];
  char *v26;
  std::__shared_weak_count *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v24 = 0u;
  memset(v25, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6C9F8;
  v29 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v29;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v27 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C620;
  v26 = v5 + 24;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 128))(a2, &v24);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 128))(a2, (char *)&v24 + 4);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 128))(a2, (char *)&v24 + 8);
  (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a2 + 128))(a2, (unint64_t)&v24 | 0xC);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, v25);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[1]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[2]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[3]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[4]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 104))(a2, &v25[5]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 104))(a2, &v25[6]);
  v7 = sub_22415767C((uint64_t)&v24);
  v23 = *(_OWORD *)(v7 + 16);
  v28 = *(_OWORD *)(v7 + 32);
  LODWORD(v29) = *(_DWORD *)(v7 + 48);
  v8 = *(_QWORD *)(v7 + 120);
  v9 = (char *)operator new(0x98uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC6CB38;
  v10 = *(_QWORD *)(v7 + 52);
  v11 = *(_WORD *)(v7 + 112);
  v12 = *(_OWORD *)(v7 + 16);
  *((_QWORD *)v9 + 4) = &off_24EC6C678;
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(v7 + 32);
  *((_DWORD *)v9 + 18) = *(_DWORD *)(v7 + 48);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 76) = v10;
  *(_OWORD *)(v9 + 84) = *(_OWORD *)(v7 + 60);
  v14 = *(_OWORD *)(v7 + 76);
  v15 = *(_OWORD *)(v7 + 92);
  *((_DWORD *)v9 + 33) = *(_DWORD *)(v7 + 108);
  *(_OWORD *)(v9 + 116) = v15;
  *(_OWORD *)(v9 + 100) = v14;
  *((_WORD *)v9 + 68) = v11;
  *((_QWORD *)v9 + 18) = v8;
  *((_QWORD *)v9 + 3) = &off_24EC6C620;
  v16 = v28;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v16;
  *(_DWORD *)(a3 + 32) = v29;
  *(_QWORD *)(a3 + 36) = v8;
  v17 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v9 + 24;
  *(_QWORD *)(a3 + 56) = v9;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v27;
  if (v27)
  {
    v21 = (unint64_t *)&v27->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
}

void sub_22408932C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224089340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224089354(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_22408951C();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 40);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 48);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 56);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 64);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 72);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 76);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  sub_2240898CC(a2, a3, v9);
}

__int128 *sub_22408951C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557902D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557902D0))
    return &xmmword_2557902B8;
  v2 = sub_2240895F8();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_2557902B8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2557902C8 = v2->__r_.__value_.__r.__words[2];
    xmmword_2557902B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557902B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557902D0);
  return &xmmword_2557902B8;
}

void sub_2240895E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557902D0);
  _Unwind_Resume(a1);
}

std::string *sub_2240895F8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557902F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557902F0))
    return &stru_2557902D8;
  sub_2240896E8((uint64_t)__p);
  sub_224086B48((char *)__p, &stru_2557902D8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557902D8, &dword_22314D000);
  __cxa_guard_release(&qword_2557902F0);
  return &stru_2557902D8;
}

void sub_2240896A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557902F0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557902F0);
  _Unwind_Resume(a1);
}

void sub_2240896E8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790310);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790310))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::HeikkilaCameraSample<double, cv3d::kit::cam::PixelOrigin::Center>]", qword_2557902F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557902F8, &dword_22314D000);
    __cxa_guard_release(&qword_255790310);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790330);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790330))
  {
    v5 = sub_2231A38CC(qword_2557902F8, "<", 0);
    sub_2231A37C8(qword_2557902F8, 0, v5, qword_255790318);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790318, &dword_22314D000);
    __cxa_guard_release(&qword_255790330);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790350);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790350))
  {
    sub_224573040((uint64_t)qword_255790318, (uint64_t)&xmmword_255790338);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790338, &dword_22314D000);
    __cxa_guard_release(&qword_255790350);
  }
  if (byte_25579034F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790338, *((unint64_t *)&xmmword_255790338 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790338;
    *(_QWORD *)(a1 + 16) = unk_255790348;
  }
}

void sub_224089884(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790350);
  _Unwind_Resume(a1);
}

void sub_22408989C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790330);
  _Unwind_Resume(a1);
}

void sub_2240898B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790310);
  _Unwind_Resume(a1);
}

void sub_2240898CC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  char v5;

  if (a3 < 2)
  {
    sub_2240899F8((uint64_t)&v5, a1, a2);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 56);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 64);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 72);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 76);
  }
}

void sub_2240899F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  std::__shared_weak_count *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v30 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA98;
  v41 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v40;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  *((_DWORD *)v5 + 30) = 10;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v36 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C7E0;
  v35 = v5 + 24;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v30);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v30 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v31);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v31 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v32);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v32 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v33);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v33 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v34);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v34 + 8);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v34 + 12);
  v7 = sub_2241577A4((uint64_t)&v30);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(_OWORD *)(v7 + 64);
  v37 = *(_OWORD *)(v7 + 48);
  v38 = v12;
  *(_QWORD *)&v39 = *(_QWORD *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 216);
  v14 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC6CBD8;
  v15 = *(_WORD *)(v7 + 208);
  *((_QWORD *)v14 + 4) = &off_24EC6C838;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v7 + 32);
  v16 = *(_OWORD *)(v7 + 48);
  v17 = *(_OWORD *)(v7 + 64);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v14 + 88) = v17;
  *(_OWORD *)(v14 + 72) = v16;
  v18 = *(_QWORD *)(v7 + 88);
  *((_DWORD *)v14 + 30) = *(_DWORD *)(v7 + 96);
  *((_QWORD *)v14 + 14) = v18;
  v19 = *(_OWORD *)(v7 + 120);
  *((_OWORD *)v14 + 8) = *(_OWORD *)(v7 + 104);
  *((_OWORD *)v14 + 9) = v19;
  v20 = *(_OWORD *)(v7 + 152);
  v21 = *(_OWORD *)(v7 + 168);
  v22 = *(_OWORD *)(v7 + 184);
  *((_QWORD *)v14 + 28) = *(_QWORD *)(v7 + 200);
  *((_OWORD *)v14 + 12) = v21;
  *((_OWORD *)v14 + 13) = v22;
  *((_OWORD *)v14 + 11) = v20;
  *((_OWORD *)v14 + 10) = *(_OWORD *)(v7 + 136);
  *((_WORD *)v14 + 116) = v15;
  *((_QWORD *)v14 + 30) = v13;
  *((_QWORD *)v14 + 3) = &off_24EC6C7E0;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v11;
  v23 = v38;
  *(_OWORD *)(a3 + 32) = v37;
  *(_OWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 64) = v39;
  *(_QWORD *)(a3 + 72) = v13;
  v24 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v14 + 24;
  *(_QWORD *)(a3 + 88) = v14;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = v36;
  if (v36)
  {
    v28 = (unint64_t *)&v36->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_224089D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224089D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224089D9C(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_224089F64();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 20);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 28);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 128))(a2, a3 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 36);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 40);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  sub_22408A314(a2, a3, v9);
}

__int128 *sub_224089F64()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790370);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790370))
    return &xmmword_255790358;
  v2 = sub_22408A040();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790358, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790368 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790358 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790358, &dword_22314D000);
  __cxa_guard_release(&qword_255790370);
  return &xmmword_255790358;
}

void sub_22408A028(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790370);
  _Unwind_Resume(a1);
}

std::string *sub_22408A040()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790390);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790390))
    return &stru_255790378;
  sub_22408A130((uint64_t)__p);
  sub_224087694((char *)__p, &stru_255790378);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790378, &dword_22314D000);
  __cxa_guard_release(&qword_255790390);
  return &stru_255790378;
}

void sub_22408A0F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790390);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790390);
  _Unwind_Resume(a1);
}

void sub_22408A130(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557903B0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557903B0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::HeikkilaCameraSample<float, cv3d::kit::cam::PixelOrigin::Corner>]", qword_255790398);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790398, &dword_22314D000);
    __cxa_guard_release(&qword_2557903B0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_2557903D0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_2557903D0))
  {
    v5 = sub_2231A38CC(qword_255790398, "<", 0);
    sub_2231A37C8(qword_255790398, 0, v5, qword_2557903B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557903B8, &dword_22314D000);
    __cxa_guard_release(&qword_2557903D0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_2557903F0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_2557903F0))
  {
    sub_224573040((uint64_t)qword_2557903B8, (uint64_t)&xmmword_2557903D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557903D8, &dword_22314D000);
    __cxa_guard_release(&qword_2557903F0);
  }
  if (byte_2557903EF < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_2557903D8, *((unint64_t *)&xmmword_2557903D8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2557903D8;
    *(_QWORD *)(a1 + 16) = unk_2557903E8;
  }
}

void sub_22408A2CC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557903F0);
  _Unwind_Resume(a1);
}

void sub_22408A2E4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557903D0);
  _Unwind_Resume(a1);
}

void sub_22408A2FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557903B0);
  _Unwind_Resume(a1);
}

void sub_22408A314(uint64_t a1, uint64_t a2, unsigned int a3)
{
  char v5;

  if (a3 < 2)
  {
    sub_22408A440((uint64_t)&v5, a1, a2);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 4);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 36);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 40);
  }
}

void sub_22408A440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int32x4_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  _DWORD v25[8];
  char *v26;
  std::__shared_weak_count *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v24 = 0u;
  memset(v25, 0, 28);
  v5 = (char *)operator new(0x98uLL);
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CA48;
  v29 = 0u;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C678;
  *((_DWORD *)v5 + 18) = 0;
  *(_OWORD *)(v5 + 56) = v29;
  *(_QWORD *)(v5 + 76) = 0xA3727C5ACLL;
  v6 = vdupq_n_s32(0x7FC00000u);
  *(int32x4_t *)(v5 + 84) = v6;
  *(int32x4_t *)(v5 + 100) = v6;
  *(int32x4_t *)(v5 + 116) = v6;
  *((_DWORD *)v5 + 33) = 2143289344;
  *((_WORD *)v5 + 68) = 257;
  *((_QWORD *)v5 + 18) = 0;
  v27 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C730;
  v26 = v5 + 24;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 128))(a2, &v24);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 128))(a2, (char *)&v24 + 4);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 128))(a2, (char *)&v24 + 8);
  (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)a2 + 128))(a2, (unint64_t)&v24 | 0xC);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, v25);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[1]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[2]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[3]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 128))(a2, &v25[4]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 104))(a2, &v25[5]);
  (*(void (**)(uint64_t, _DWORD *))(*(_QWORD *)a2 + 104))(a2, &v25[6]);
  v7 = sub_22415767C((uint64_t)&v24);
  v23 = *(_OWORD *)(v7 + 16);
  v28 = *(_OWORD *)(v7 + 32);
  LODWORD(v29) = *(_DWORD *)(v7 + 48);
  v8 = *(_QWORD *)(v7 + 120);
  v9 = (char *)operator new(0x98uLL);
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *(_QWORD *)v9 = &off_24EC6CB88;
  v10 = *(_QWORD *)(v7 + 52);
  v11 = *(_WORD *)(v7 + 112);
  v12 = *(_OWORD *)(v7 + 16);
  *((_QWORD *)v9 + 4) = &off_24EC6C678;
  *(_OWORD *)(v9 + 40) = v12;
  v13 = *(_OWORD *)(v7 + 32);
  *((_DWORD *)v9 + 18) = *(_DWORD *)(v7 + 48);
  *(_OWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 76) = v10;
  *(_OWORD *)(v9 + 84) = *(_OWORD *)(v7 + 60);
  v14 = *(_OWORD *)(v7 + 76);
  v15 = *(_OWORD *)(v7 + 92);
  *((_DWORD *)v9 + 33) = *(_DWORD *)(v7 + 108);
  *(_OWORD *)(v9 + 116) = v15;
  *(_OWORD *)(v9 + 100) = v14;
  *((_WORD *)v9 + 68) = v11;
  *((_QWORD *)v9 + 18) = v8;
  *((_QWORD *)v9 + 3) = &off_24EC6C730;
  v16 = v28;
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v16;
  *(_DWORD *)(a3 + 32) = v29;
  *(_QWORD *)(a3 + 36) = v8;
  v17 = *(std::__shared_weak_count **)(a3 + 56);
  *(_QWORD *)(a3 + 48) = v9 + 24;
  *(_QWORD *)(a3 + 56) = v9;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = v27;
  if (v27)
  {
    v21 = (unint64_t *)&v27->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
}

void sub_22408A74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408A760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22415773C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408A774(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_22408A93C();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 40);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 48);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 56);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 136))(a2, a3 + 64);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 72);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 104))(a2, a3 + 76);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  sub_22408ACEC(a2, a3, v9);
}

__int128 *sub_22408A93C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790410);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790410))
    return &xmmword_2557903F8;
  v2 = sub_22408AA18();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_2557903F8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790408 = v2->__r_.__value_.__r.__words[2];
    xmmword_2557903F8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_2557903F8, &dword_22314D000);
  __cxa_guard_release(&qword_255790410);
  return &xmmword_2557903F8;
}

void sub_22408AA00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790410);
  _Unwind_Resume(a1);
}

std::string *sub_22408AA18()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790430);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790430))
    return &stru_255790418;
  sub_22408AB08((uint64_t)__p);
  sub_2240882A4((char *)__p, &stru_255790418);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790418, &dword_22314D000);
  __cxa_guard_release(&qword_255790430);
  return &stru_255790418;
}

void sub_22408AAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790430);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790430);
  _Unwind_Resume(a1);
}

void sub_22408AB08(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_255790450);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790450))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::camio::HeikkilaCameraSample<double, cv3d::kit::cam::PixelOrigin::Corner>]", qword_255790438);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790438, &dword_22314D000);
    __cxa_guard_release(&qword_255790450);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790470);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790470))
  {
    v5 = sub_2231A38CC(qword_255790438, "<", 0);
    sub_2231A37C8(qword_255790438, 0, v5, qword_255790458);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790458, &dword_22314D000);
    __cxa_guard_release(&qword_255790470);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790490);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790490))
  {
    sub_224573040((uint64_t)qword_255790458, (uint64_t)&xmmword_255790478);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790478, &dword_22314D000);
    __cxa_guard_release(&qword_255790490);
  }
  if (byte_25579048F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790478, *((unint64_t *)&xmmword_255790478 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790478;
    *(_QWORD *)(a1 + 16) = unk_255790488;
  }
}

void sub_22408ACA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790490);
  _Unwind_Resume(a1);
}

void sub_22408ACBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790470);
  _Unwind_Resume(a1);
}

void sub_22408ACD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790450);
  _Unwind_Resume(a1);
}

void sub_22408ACEC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  char v5;

  if (a3 < 2)
  {
    sub_22408AE18((uint64_t)&v5, a1, a2);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 56);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 64);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 72);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 104))(a1, a2 + 76);
  }
}

void sub_22408AE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  std::__shared_weak_count *v24;
  unint64_t *p_shared_owners;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  std::__shared_weak_count *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v30 = 0u;
  v5 = (char *)operator new(0xF8uLL);
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = 0;
  *(_QWORD *)v5 = &off_24EC6CAE8;
  v41 = 0;
  *((_QWORD *)v5 + 5) = 0;
  *((_QWORD *)v5 + 6) = 0;
  *((_QWORD *)v5 + 4) = &off_24EC6C838;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = v40;
  *((_QWORD *)v5 + 13) = 0;
  *((_QWORD *)v5 + 14) = 0x3EE4F8B588E368F1;
  *((_DWORD *)v5 + 30) = 10;
  v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *((int64x2_t *)v5 + 8) = v6;
  *((int64x2_t *)v5 + 9) = v6;
  *((int64x2_t *)v5 + 10) = v6;
  *((int64x2_t *)v5 + 11) = v6;
  *((int64x2_t *)v5 + 12) = v6;
  *((int64x2_t *)v5 + 13) = v6;
  *((_QWORD *)v5 + 28) = 0x7FF8000000000000;
  *((_WORD *)v5 + 116) = 257;
  *((_QWORD *)v5 + 30) = 0;
  v36 = (std::__shared_weak_count *)v5;
  *((_QWORD *)v5 + 3) = &off_24EC6C8F0;
  v35 = v5 + 24;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v30);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v30 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v31);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v31 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v32);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v32 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v33);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 136))(a2, (char *)&v33 + 8);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a2 + 136))(a2, &v34);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v34 + 8);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)a2 + 104))(a2, (char *)&v34 + 12);
  v7 = sub_2241577A4((uint64_t)&v30);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v7 + 24);
  v11 = *(_QWORD *)(v7 + 40);
  v12 = *(_OWORD *)(v7 + 64);
  v37 = *(_OWORD *)(v7 + 48);
  v38 = v12;
  *(_QWORD *)&v39 = *(_QWORD *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 216);
  v14 = (char *)operator new(0xF8uLL);
  *((_QWORD *)v14 + 1) = 0;
  *((_QWORD *)v14 + 2) = 0;
  *(_QWORD *)v14 = &off_24EC6CC28;
  v15 = *(_WORD *)(v7 + 208);
  *((_QWORD *)v14 + 4) = &off_24EC6C838;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(v14 + 56) = *(_OWORD *)(v7 + 32);
  v16 = *(_OWORD *)(v7 + 48);
  v17 = *(_OWORD *)(v7 + 64);
  *((_QWORD *)v14 + 13) = *(_QWORD *)(v7 + 80);
  *(_OWORD *)(v14 + 88) = v17;
  *(_OWORD *)(v14 + 72) = v16;
  v18 = *(_QWORD *)(v7 + 88);
  *((_DWORD *)v14 + 30) = *(_DWORD *)(v7 + 96);
  *((_QWORD *)v14 + 14) = v18;
  v19 = *(_OWORD *)(v7 + 120);
  *((_OWORD *)v14 + 8) = *(_OWORD *)(v7 + 104);
  *((_OWORD *)v14 + 9) = v19;
  v20 = *(_OWORD *)(v7 + 152);
  v21 = *(_OWORD *)(v7 + 168);
  v22 = *(_OWORD *)(v7 + 184);
  *((_QWORD *)v14 + 28) = *(_QWORD *)(v7 + 200);
  *((_OWORD *)v14 + 12) = v21;
  *((_OWORD *)v14 + 13) = v22;
  *((_OWORD *)v14 + 11) = v20;
  *((_OWORD *)v14 + 10) = *(_OWORD *)(v7 + 136);
  *((_WORD *)v14 + 116) = v15;
  *((_QWORD *)v14 + 30) = v13;
  *((_QWORD *)v14 + 3) = &off_24EC6C8F0;
  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v8;
  *(_QWORD *)(a3 + 24) = v11;
  v23 = v38;
  *(_OWORD *)(a3 + 32) = v37;
  *(_OWORD *)(a3 + 48) = v23;
  *(_QWORD *)(a3 + 64) = v39;
  *(_QWORD *)(a3 + 72) = v13;
  v24 = *(std::__shared_weak_count **)(a3 + 88);
  *(_QWORD *)(a3 + 80) = v14 + 24;
  *(_QWORD *)(a3 + 88) = v14;
  if (v24)
  {
    p_shared_owners = (unint64_t *)&v24->__shared_owners_;
    do
      v26 = __ldaxr(p_shared_owners);
    while (__stlxr(v26 - 1, p_shared_owners));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = v36;
  if (v36)
  {
    v28 = (unint64_t *)&v36->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_22408B194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408B1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_22415789C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408B1BC(uint64_t a1, void (**a2)(int a1))
{
  int v4;
  void (*v5)(int);
  int *v6;
  void (*v7)(int);
  uint64_t v8;
  uint64_t v9;
  int v10;
  void (*v11)(int);
  int *v12;
  void (*v13)(int);
  uint64_t v14;
  void (*v15)(int);
  int *v16;
  void (*v17)(int);
  _QWORD *v18;
  void (*v19)(int);
  int *v20;
  void (*v21)(int);
  uint64_t v22;
  void (*v23)(int);
  int *v24;
  void (*v25)(int);
  _QWORD *v26;
  void (*v27)(int);
  int *v28;
  void (*v29)(int);
  uint64_t v30;
  uint64_t v31;
  int v32;
  void (*v33)(int);
  int *v34;
  void (*v35)(int);
  uint64_t v36;
  uint64_t v37;
  int v38;
  void (*v39)(int);
  int *v40;
  void (*v41)(int);
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45[3];
  unsigned int v46;

  *(_QWORD *)v45 = a2;
  sub_224086520((_BYTE *)a1, (_DWORD **)v45);
  sub_224151490(a2);
  v4 = *(_DWORD *)a2;
  switch(v4)
  {
    case 0:
      v13 = a2[1];
      v12 = (int *)(a2 + 1);
      v11 = v13;
      if (!v13)
        goto LABEL_36;
      v14 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v11)(3, v12, 0, &unk_24EC682D8, &unk_224697234);
      if (!v14)
        goto LABEL_36;
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_223BE040C(v45, a1, v14);
      break;
    case 1:
      v17 = a2[1];
      v16 = (int *)(a2 + 1);
      v15 = v17;
      if (!v17)
        goto LABEL_36;
      v18 = (_QWORD *)((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v15)(3, v16, 0, &unk_24EC68328, &unk_224697308);
      if (!v18)
        goto LABEL_36;
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_2240866D4(v45, a1, v18);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return;
    case 10:
      v21 = a2[1];
      v20 = (int *)(a2 + 1);
      v19 = v21;
      if (!v21)
        goto LABEL_36;
      v22 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v19)(3, v20, 0, &unk_24EC68378, &unk_2246973DC);
      if (!v22)
        goto LABEL_36;
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_224087220(v45, a1, v22);
      break;
    case 11:
      v25 = a2[1];
      v24 = (int *)(a2 + 1);
      v23 = v25;
      if (!v25
        || (v26 = (_QWORD *)((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v23)(3, v24, 0, &unk_24EC683C8, &unk_2246974B0)) == 0)
      {
LABEL_36:
        sub_224071EE4();
      }
      *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
      sub_224087E30(v45, a1, v26);
      break;
    default:
      switch(v4)
      {
        case 'd':
          v7 = a2[1];
          v6 = (int *)(a2 + 1);
          v5 = v7;
          if (!v7)
            goto LABEL_36;
          v8 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v5)(3, v6, 0, &unk_24EC68418, &unk_224697588);
          if (!v8)
            goto LABEL_36;
          v9 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v10 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v9 + 104))(a1, &v46);
          if (v10 < 1)
            sub_224088EF4(a1, v8, v46);
          else
            sub_22408897C(v45, a1, v8, v46);
          break;
        case 'e':
          v29 = a2[1];
          v28 = (int *)(a2 + 1);
          v27 = v29;
          if (!v29)
            goto LABEL_36;
          v30 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v27)(3, v28, 0, &unk_24EC68468, &unk_224697660);
          if (!v30)
            goto LABEL_36;
          v31 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v32 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v31 + 104))(a1, &v46);
          if (v32 < 1)
            sub_2240898CC(a1, v30, v46);
          else
            sub_224089354(v45, a1, v30, v46);
          break;
        case 'n':
          v35 = a2[1];
          v34 = (int *)(a2 + 1);
          v33 = v35;
          if (!v35)
            goto LABEL_36;
          v36 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v33)(3, v34, 0, &unk_24EC684B8, &unk_224697738);
          if (!v36)
            goto LABEL_36;
          v37 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v38 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v37 + 104))(a1, &v46);
          if (v38 < 1)
            sub_22408A314(a1, v36, v46);
          else
            sub_224089D9C(v45, a1, v36, v46);
          break;
        case 'o':
          v41 = a2[1];
          v40 = (int *)(a2 + 1);
          v39 = v41;
          if (!v41)
            goto LABEL_36;
          v42 = ((uint64_t (*)(uint64_t, int *, _QWORD, void *, void *))v39)(3, v40, 0, &unk_24EC68508, &unk_224697810);
          if (!v42)
            goto LABEL_36;
          v43 = *(_QWORD *)a1;
          *(_QWORD *)v45 = *(_QWORD *)(a1 + 8);
          v44 = v45[0];
          v46 = 2;
          (*(void (**)(uint64_t, unsigned int *))(v43 + 104))(a1, &v46);
          if (v44 < 1)
            sub_22408ACEC(a1, v42, v46);
          else
            sub_22408A774(v45, a1, v42, v46);
          break;
        default:
          return;
      }
      break;
  }
}

void sub_22408B648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  int v16;

  sub_22454024C(a2);
  v14 = "version";
  v15 = 7;
  v16 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v16);
  v6 = v16;
  v7 = *(_QWORD *)(a3 + 8);
  v14 = *(const char **)a3;
  v15 = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_22408B790(a2, &v14, v6);
  v10 = (std::__shared_weak_count *)v15;
  if (v15)
  {
    v11 = (unint64_t *)(v15 + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(a2 + 56) = v13 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22408B74C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408B790(uint64_t a1, _QWORD *a2, unsigned int a3)
{
  int v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  int v9;
  void **v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  uint64_t **v20;
  uint64_t *v21;

  if (a3 > 2)
  {
    v11 = *a2;
    v12 = (unint64_t *)(*a2 + 88);
    v19 = *a2;
    v13 = atomic_load(v12);
    if (v13 != -1)
    {
      v21 = &v19;
      v20 = &v21;
      std::__call_once(v12, &v20, (void (__cdecl *)(void *))sub_2244E4EB8);
    }
    sub_224518820(&v17, v11 + 48);
    sub_223B95A78(a1, (uint64_t)&v17);
    v14 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }
  else
  {
    if (**(unsigned __int8 **)(a1 + 40) <= 1u)
    {
      v4 = *(unsigned __int8 *)(a1 + 88);
      *(_QWORD *)(a1 + 72) = "dictionary";
      *(_QWORD *)(a1 + 80) = 10;
      if (!v4)
        *(_BYTE *)(a1 + 88) = 1;
    }
    v5 = *a2;
    v6 = (unint64_t *)(*a2 + 80);
    v17 = *a2;
    v18 = (std::__shared_weak_count *)&v19;
    v19 = 0;
    v7 = atomic_load(v6);
    if (v7 != -1)
    {
      v21 = &v17;
      v20 = &v21;
      std::__call_once(v6, &v20, (void (__cdecl *)(void *))sub_2244E4B9C);
    }
    sub_22451BC6C((uint64_t)&v17, *(unsigned __int8 **)(v5 + 16));
    v8 = (unsigned __int8 *)sub_22453FEA0(a1);
    v9 = *v8;
    *v8 = v17;
    LOBYTE(v17) = v9;
    v10 = (void **)*((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v18;
    v18 = (std::__shared_weak_count *)v10;
    sub_22345337C((void ***)&v18, v9);
  }
}

void sub_22408B90C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408B920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v10;

  sub_22345337C((void ***)(v10 + 8), a10);
  _Unwind_Resume(a1);
}

void sub_22408B938(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  uint64_t **v17;
  uint64_t *v18;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v16 = v4;
  v7 = atomic_load((unint64_t *)(v4 + 88));
  if (v7 != -1)
  {
    v18 = &v16;
    v17 = &v18;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v17, (void (__cdecl *)(void *))sub_2244E4EB8);
  }
  sub_224518820(&v14, v4 + 48);
  sub_2231A5FE4(a1);
  v8 = v15;
  if (v15)
  {
    v9 = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v13)
  {
    v11 = (unint64_t *)&v13->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22408BA4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va1);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BA68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 **v14;
  uint64_t v15;
  int v16;

  sub_22453FAE0(a2);
  v14 = (unsigned __int8 **)"version";
  v15 = 7;
  v16 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v16);
  v6 = v16;
  v7 = *(_QWORD *)(a3 + 8);
  v14 = *(unsigned __int8 ***)a3;
  v15 = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_22408BBC4(a2, &v14, v6);
  v10 = (std::__shared_weak_count *)v15;
  if (v15)
  {
    v11 = (unint64_t *)(v15 + 8);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(a2 + 56) = v13 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22408BB80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a11)
  {
    p_shared_owners = (unint64_t *)&a11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408BBC4(uint64_t a1, unsigned __int8 ***a2, unsigned int a3)
{
  int v4;
  unsigned __int8 **v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  int v9;
  uint64_t v10;
  unsigned __int8 **v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unsigned __int8 **v17;
  std::__shared_weak_count *v18;
  unsigned __int8 **v19;
  unsigned __int8 ****v20;
  unsigned __int8 ***v21;

  if (a3 > 2)
  {
    v11 = *a2;
    v12 = (unint64_t *)(*a2 + 11);
    v19 = *a2;
    v13 = atomic_load(v12);
    if (v13 != -1)
    {
      v21 = &v19;
      v20 = &v21;
      std::__call_once(v12, &v20, (void (__cdecl *)(void *))sub_2244E4EB8);
    }
    sub_224518820(&v17, (uint64_t)(v11 + 6));
    sub_223B9E52C(a1, (uint64_t)&v17);
    v14 = v18;
    if (v18)
    {
      p_shared_owners = (unint64_t *)&v18->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
  }
  else
  {
    if (**(unsigned __int8 **)(a1 + 40) <= 1u)
    {
      v4 = *(unsigned __int8 *)(a1 + 88);
      *(_QWORD *)(a1 + 72) = "dictionary";
      *(_QWORD *)(a1 + 80) = 10;
      if (!v4)
        *(_BYTE *)(a1 + 88) = 1;
    }
    v5 = *a2;
    v6 = (unint64_t *)(*a2 + 9);
    v17 = *a2;
    v18 = (std::__shared_weak_count *)&v19;
    v19 = 0;
    v7 = atomic_load(v6);
    if (v7 != -1)
    {
      v21 = &v17;
      v20 = &v21;
      std::__call_once(v6, &v20, (void (__cdecl *)(void *))sub_2244E4880);
    }
    sub_223799EE8((uint64_t)&v17, *v5);
    v8 = (unsigned __int8 *)sub_22453F8B8(a1);
    v9 = *v8;
    *v8 = v17;
    LOBYTE(v17) = v9;
    v10 = *((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v18;
    v18 = (std::__shared_weak_count *)v10;
    sub_223454278((uint64_t *)&v18, v9);
  }
}

void sub_22408BD40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v10;

  sub_223454278((uint64_t *)(v10 + 8), a10);
  _Unwind_Resume(a1);
}

void sub_22408BD6C(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  uint64_t **v17;
  uint64_t *v18;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v16 = v4;
  v7 = atomic_load((unint64_t *)(v4 + 88));
  if (v7 != -1)
  {
    v18 = &v16;
    v17 = &v18;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v17, (void (__cdecl *)(void *))sub_2244E4EB8);
  }
  sub_224518820(&v14, v4 + 48);
  sub_223BA4B38(a1, (uint64_t)&v14);
  v8 = v15;
  if (v15)
  {
    v9 = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v13)
  {
    v11 = (unint64_t *)&v13->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22408BE80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va1);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BE9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BEB0(uint64_t a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  uint64_t **v17;
  uint64_t *v18;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v16 = v4;
  v7 = atomic_load((unint64_t *)(v4 + 88));
  if (v7 != -1)
  {
    v18 = &v16;
    v17 = &v18;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v17, (void (__cdecl *)(void *))sub_2244E4EB8);
  }
  sub_224518820(&v14, v4 + 48);
  sub_223BAAE7C(a1, (uint64_t)&v14);
  v8 = v15;
  if (v15)
  {
    v9 = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v13)
  {
    v11 = (unint64_t *)&v13->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22408BFC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va1);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BFE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408BFF4(_DWORD *a1, uint64_t *a2)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  uint64_t **v17;
  uint64_t *v18;

  v4 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v16 = v4;
  v7 = atomic_load((unint64_t *)(v4 + 88));
  if (v7 != -1)
  {
    v18 = &v16;
    v17 = &v18;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v17, (void (__cdecl *)(void *))sub_2244E4EB8);
  }
  sub_224518820(&v14, v4 + 48);
  sub_223BB1294(a1, (uint64_t)&v14);
  v8 = v15;
  if (v15)
  {
    v9 = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if (v13)
  {
    v11 = (unint64_t *)&v13->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
}

void sub_22408C108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_223167354((uint64_t)va1);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408C124(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223167354((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_22408C138(uint64_t a1, uint64_t *a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544628(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451CAD4(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_22408C234((uint64_t)&v11, a1, a2, v6);
  else
    sub_22408C338(a1, a2, 2u);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

void sub_22408C234(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned int a4)
{
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  sub_2244E3F48(&v17);
  sub_22408C6F4(a2, &v17, a4);
  v8 = v17;
  v7 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  v11 = (std::__shared_weak_count *)a3[1];
  *a3 = v8;
  a3[1] = (uint64_t)v7;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = v18;
  if (v18)
  {
    v15 = (unint64_t *)&v18->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_22408C324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408C338(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  int v5;
  _QWORD *v6;
  unsigned __int8 *v7;
  int v8;
  void **v9;
  uint64_t v10;
  _QWORD *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void ***v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  void ***v20;
  void **v21[2];
  __int128 v22;

  if (a3 > 2)
  {
    v21[0] = 0;
    v21[1] = 0;
    v20 = v21;
    sub_224530B6C(&v20, &v22);
    v19 = v22;
    sub_22323DF84((uint64_t)&v20, (char *)v21[0]);
    sub_223BBB798(a1, (uint64_t)&v19);
    sub_22408C5E0((uint64_t)a2, (uint64_t)&v19);
    v16 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v17 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "dictionary";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = (_QWORD *)operator new();
    *v6 = 0;
    v6[1] = 0;
    *(_QWORD *)&v22 = v6;
    v7 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_22451BC6C((uint64_t)&v20, v7);
    v8 = *(unsigned __int8 *)v6;
    *(_BYTE *)v6 = (_BYTE)v20;
    LOBYTE(v20) = v8;
    v9 = (void **)v6[1];
    v6[1] = v21[0];
    v21[0] = v9;
    sub_22345337C(v21, v8);
    v10 = operator new();
    sub_2244E334C(v10, (uint64_t *)&v22);
    v11 = (_QWORD *)operator new();
    *v11 = &off_24EC77120;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v10;
    v12 = (std::__shared_weak_count *)a2[1];
    *a2 = v10;
    a2[1] = (uint64_t)v11;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = (void ***)v22;
    *(_QWORD *)&v22 = 0;
    if (v15)
    {
      sub_22345337C(v15 + 1, *(unsigned __int8 *)v15);
      MEMORY[0x227684CE8](v15, 0x1022C40B06DCE69);
    }
  }
}

void sub_22408C550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408C568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t **v7;
  va_list va;

  va_start(va, a7);
  sub_2244E46C0(v7);
  MEMORY[0x227684CE8](v7, 0x10E2C40590DAB7CLL);
  sub_2245357D0((void ****)va);
  _Unwind_Resume(a1);
}

void sub_22408C5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_2245357D0((void ****)va);
  _Unwind_Resume(a1);
}

void sub_22408C5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408C5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_2245357D0((void ****)va);
  _Unwind_Resume(a1);
}

void sub_22408C5E0(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  __int128 v15;

  sub_22319ED0C(&v13, a2);
  sub_2244E40A8((uint64_t *)&v15, (uint64_t)&v13, 1);
  v3 = v15;
  v15 = 0uLL;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = v14;
  if (v14)
  {
    v11 = (unint64_t *)&v14->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_22408C6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408C6F4(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  int v5;
  _QWORD *v6;
  unsigned __int8 *v7;
  int v8;
  void **v9;
  uint64_t v10;
  _QWORD *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void ***v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  void ***v20;
  void **v21[2];
  __int128 v22;

  if (a3 > 2)
  {
    v21[0] = 0;
    v21[1] = 0;
    v20 = v21;
    sub_224530B6C(&v20, &v22);
    v19 = v22;
    sub_22323DF84((uint64_t)&v20, (char *)v21[0]);
    sub_223BBB798(a1, (uint64_t)&v19);
    sub_22408C99C((uint64_t)a2, (uint64_t)&v19);
    v16 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v17 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "dictionary";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = (_QWORD *)operator new();
    *v6 = 0;
    v6[1] = 0;
    *(_QWORD *)&v22 = v6;
    v7 = (unsigned __int8 *)sub_2245448E0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_22451BC6C((uint64_t)&v20, v7);
    v8 = *(unsigned __int8 *)v6;
    *(_BYTE *)v6 = (_BYTE)v20;
    LOBYTE(v20) = v8;
    v9 = (void **)v6[1];
    v6[1] = v21[0];
    v21[0] = v9;
    sub_22345337C(v21, v8);
    v10 = operator new();
    sub_2244E334C(v10, (uint64_t *)&v22);
    v11 = (_QWORD *)operator new();
    *v11 = &off_24EC77120;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v10;
    v12 = (std::__shared_weak_count *)a2[1];
    *a2 = v10;
    a2[1] = (uint64_t)v11;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = (void ***)v22;
    *(_QWORD *)&v22 = 0;
    if (v15)
    {
      sub_22345337C(v15 + 1, *(unsigned __int8 *)v15);
      MEMORY[0x227684CE8](v15, 0x1022C40B06DCE69);
    }
  }
}

void sub_22408C90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408C924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t **v7;
  va_list va;

  va_start(va, a7);
  sub_2244E46C0(v7);
  MEMORY[0x227684CE8](v7, 0x10E2C40590DAB7CLL);
  sub_2245357D0((void ****)va);
  _Unwind_Resume(a1);
}

void sub_22408C960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_2245357D0((void ****)va);
  _Unwind_Resume(a1);
}

void sub_22408C974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408C988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_2245357D0((void ****)va);
  _Unwind_Resume(a1);
}

void sub_22408C99C(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  __int128 v15;

  sub_22319ED0C(&v13, a2);
  sub_2244E40A8((uint64_t *)&v15, (uint64_t)&v13, 1);
  v3 = v15;
  v15 = 0uLL;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = v14;
  if (v14)
  {
    v11 = (unint64_t *)&v14->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_22408CA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_22408CAB0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;
  char v8;

  v7 = 2;
  sub_224554038(a1[6], &v7);
  if (v7 <= 1)
  {
    sub_22408CCA0((uint64_t)&v8, (uint64_t)a1, a2);
    return a1;
  }
  else
  {
    sub_2231B1308(a1 + 2);
    sub_22408CB88((uint64_t)a1, (uint64_t)a2);
    v4 = a1[4];
    v5 = *(_QWORD *)(v4 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v4 - 8);
    if (v5)
      (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v5);
    a1[4] -= 16;
    return a1;
  }
}

void sub_22408CB88(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_2231B6FE0(a1, (uint64_t)&v7);
  sub_22408C5E0(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408CC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408CC5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408CCA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2244E3F48(&v15);
  sub_22408CDA4(a2, (uint64_t)&v15);
  v6 = v15;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = (std::__shared_weak_count *)a3[1];
  *a3 = v6;
  a3[1] = (uint64_t)v5;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22408CD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408CDA4(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_2231B6FE0(a1, (uint64_t)&v7);
  sub_22408C99C(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408CE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408CE78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22408CEBC(uint64_t a1, uint64_t *a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544138(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451C444(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_22408CFB8((uint64_t)&v11, a1, a2, v6);
  else
    sub_22408D0BC(a1, a2, 2u);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

void sub_22408CFB8(uint64_t a1, uint64_t a2, uint64_t *a3, unsigned int a4)
{
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  sub_2244E3F48(&v17);
  sub_22408D364(a2, &v17, a4);
  v8 = v17;
  v7 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  v11 = (std::__shared_weak_count *)a3[1];
  *a3 = v8;
  a3[1] = (uint64_t)v7;
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = v18;
  if (v18)
  {
    v15 = (unint64_t *)&v18->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_22408D0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408D0BC(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  int v5;
  _QWORD *v6;
  unsigned __int8 *v7;
  int v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  char **v20;
  char *v21[2];
  __int128 v22;

  if (a3 > 2)
  {
    v21[0] = 0;
    v21[1] = 0;
    v20 = v21;
    sub_224530B6C(&v20, &v22);
    v19 = v22;
    sub_22323DF84((uint64_t)&v20, v21[0]);
    sub_223BC3670(a1, (uint64_t)&v19);
    sub_22408C5E0((uint64_t)a2, (uint64_t)&v19);
    v16 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v17 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "dictionary";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = (_QWORD *)operator new();
    *v6 = 0;
    v6[1] = 0;
    *(_QWORD *)&v22 = v6;
    v7 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_223799EE8((uint64_t)&v20, v7);
    v8 = *(unsigned __int8 *)v6;
    *(_BYTE *)v6 = (_BYTE)v20;
    LOBYTE(v20) = v8;
    v9 = (char *)v6[1];
    v6[1] = v21[0];
    v21[0] = v9;
    sub_223454278((uint64_t *)v21, v8);
    v10 = operator new();
    sub_2244E34D0(v10, (uint64_t *)&v22);
    v11 = (_QWORD *)operator new();
    *v11 = &off_24EC77120;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v10;
    v12 = (std::__shared_weak_count *)a2[1];
    *a2 = v10;
    a2[1] = (uint64_t)v11;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = (uint64_t *)v22;
    *(_QWORD *)&v22 = 0;
    if (v15)
    {
      sub_223454278(v15 + 1, *(unsigned __int8 *)v15);
      MEMORY[0x227684CE8](v15, 0x1022C40B06DCE69);
    }
  }
}

void sub_22408D2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408D2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t **v7;
  va_list va;

  va_start(va, a7);
  sub_2244E46C0(v7);
  MEMORY[0x227684CE8](v7, 0x10E2C40590DAB7CLL);
  sub_224535780((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_22408D328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_224535780((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_22408D33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408D350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_224535780((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_22408D364(uint64_t a1, uint64_t *a2, unsigned int a3)
{
  int v5;
  _QWORD *v6;
  unsigned __int8 *v7;
  int v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  char **v20;
  char *v21[2];
  __int128 v22;

  if (a3 > 2)
  {
    v21[0] = 0;
    v21[1] = 0;
    v20 = v21;
    sub_224530B6C(&v20, &v22);
    v19 = v22;
    sub_22323DF84((uint64_t)&v20, v21[0]);
    sub_223BC3670(a1, (uint64_t)&v19);
    sub_22408C99C((uint64_t)a2, (uint64_t)&v19);
    v16 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v17 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  else
  {
    v5 = *(unsigned __int8 *)(a1 + 104);
    *(_QWORD *)(a1 + 88) = "dictionary";
    *(_QWORD *)(a1 + 96) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 104) = 1;
    v6 = (_QWORD *)operator new();
    *v6 = 0;
    v6[1] = 0;
    *(_QWORD *)&v22 = v6;
    v7 = (unsigned __int8 *)sub_2245443F0((uint64_t *)a1);
    ++*(_QWORD *)(a1 + 112);
    sub_223799EE8((uint64_t)&v20, v7);
    v8 = *(unsigned __int8 *)v6;
    *(_BYTE *)v6 = (_BYTE)v20;
    LOBYTE(v20) = v8;
    v9 = (char *)v6[1];
    v6[1] = v21[0];
    v21[0] = v9;
    sub_223454278((uint64_t *)v21, v8);
    v10 = operator new();
    sub_2244E34D0(v10, (uint64_t *)&v22);
    v11 = (_QWORD *)operator new();
    *v11 = &off_24EC77120;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v10;
    v12 = (std::__shared_weak_count *)a2[1];
    *a2 = v10;
    a2[1] = (uint64_t)v11;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v15 = (uint64_t *)v22;
    *(_QWORD *)&v22 = 0;
    if (v15)
    {
      sub_223454278(v15 + 1, *(unsigned __int8 *)v15);
      MEMORY[0x227684CE8](v15, 0x1022C40B06DCE69);
    }
  }
}

void sub_22408D57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408D594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t **v7;
  va_list va;

  va_start(va, a7);
  sub_2244E46C0(v7);
  MEMORY[0x227684CE8](v7, 0x10E2C40590DAB7CLL);
  sub_224535780((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_22408D5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_224535780((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_22408D5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408D5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_224535780((uint64_t **)va);
  _Unwind_Resume(a1);
}

void sub_22408D60C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_223BC9B7C(a1, (uint64_t)&v7);
  sub_22408C5E0(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408D6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408D6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408D724(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2244E3F48(&v15);
  sub_22408D828(a2, (uint64_t)&v15);
  v6 = v15;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = (std::__shared_weak_count *)a3[1];
  *a3 = v6;
  a3[1] = (uint64_t)v5;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22408D814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408D828(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_223BC9B7C(a1, (uint64_t)&v7);
  sub_22408C99C(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408D8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408D8FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408D940(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_22408DB4C((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_22408DA34(a2, (uint64_t)a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_22408DA20(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22408DA34(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_223BD2AC0(a1, (uint64_t)&v7);
  sub_22408C5E0(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408DAF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408DB08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408DB4C(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2244E3F48(&v15);
  sub_22408DC50(a2, (uint64_t)&v15);
  v6 = v15;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = (std::__shared_weak_count *)a3[1];
  *a3 = v6;
  a3[1] = (uint64_t)v5;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22408DC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408DC50(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_223BD2AC0(a1, (uint64_t)&v7);
  sub_22408C99C(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408DD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408DD24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408DD68(int *a1, _QWORD *a2, uint64_t *a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;
  char v13;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(_QWORD *, unsigned int *))(*a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_22408DE94();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(_QWORD *))(*a2 + 16))(a2);
    sub_22408E244(a2, (uint64_t)a3);
    (*(void (**)(_QWORD *))(*a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  if (v9 <= 1)
    sub_22408E35C((uint64_t)&v13, a2, a3);
  else
    sub_22408E244(a2, (uint64_t)a3);
}

__int128 *sub_22408DE94()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557904B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557904B0))
    return &xmmword_255790498;
  v2 = sub_22408DF70();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790498, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_2557904A8 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790498 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790498, &dword_22314D000);
  __cxa_guard_release(&qword_2557904B0);
  return &xmmword_255790498;
}

void sub_22408DF58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557904B0);
  _Unwind_Resume(a1);
}

std::string *sub_22408DF70()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557904D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557904D0))
    return &stru_2557904B8;
  sub_22408E060((uint64_t)__p);
  sub_2232A0AA8((char *)__p, &stru_2557904B8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_2557904B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557904D0);
  return &stru_2557904B8;
}

void sub_22408E020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2557904D0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2557904D0);
  _Unwind_Resume(a1);
}

void sub_22408E060(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557904F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557904F0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::dictio::DictionarySample<>]", qword_2557904D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557904D8, &dword_22314D000);
    __cxa_guard_release(&qword_2557904F0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790510);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790510))
  {
    v5 = sub_2231A38CC(qword_2557904D8, "<", 0);
    sub_2231A37C8(qword_2557904D8, 0, v5, qword_2557904F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557904F8, &dword_22314D000);
    __cxa_guard_release(&qword_255790510);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790530);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790530))
  {
    sub_224573040((uint64_t)qword_2557904F8, (uint64_t)&xmmword_255790518);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790518, &dword_22314D000);
    __cxa_guard_release(&qword_255790530);
  }
  if (byte_25579052F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790518, *((unint64_t *)&xmmword_255790518 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790518;
    *(_QWORD *)(a1 + 16) = unk_255790528;
  }
}

void sub_22408E1FC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790530);
  _Unwind_Resume(a1);
}

void sub_22408E214(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790510);
  _Unwind_Resume(a1);
}

void sub_22408E22C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557904F0);
  _Unwind_Resume(a1);
}

void sub_22408E244(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_223BDCFF0(a1, (uint64_t)&v7);
  sub_22408C5E0(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408E300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408E318(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_22408E35C(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_2244E3F48(&v15);
  sub_22408E460(a2, (uint64_t)&v15);
  v6 = v15;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = (std::__shared_weak_count *)a3[1];
  *a3 = v6;
  a3[1] = (uint64_t)v5;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_22408E44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223167354((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22408E460(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_224530B6C(&v8, &v10);
  v7 = v10;
  sub_22323DF84((uint64_t)&v8, v9[0]);
  sub_223BDCFF0(a1, (uint64_t)&v7);
  sub_22408C99C(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_22408E51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_22323DF84((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_22408E534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_22408E578@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new();
  v5 = v4;
  *(_QWORD *)v4 = &off_24EC68AE8;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 48);
  *(_BYTE *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 88) = 0;
  if (*(_BYTE *)(a1 + 88))
  {
    *(_OWORD *)(v4 + 64) = *(_OWORD *)(a1 + 64);
    *(_QWORD *)(v4 + 80) = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_BYTE *)(v4 + 88) = 1;
  }
  *(_BYTE *)(v4 + 96) = 0;
  *(_BYTE *)(v4 + 120) = 0;
  if (*(_BYTE *)(a1 + 120))
  {
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(a1 + 96);
    *(_QWORD *)(v4 + 112) = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_BYTE *)(v4 + 120) = 1;
  }
  *(_BYTE *)(v4 + 160) = 0;
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a1 + 128);
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a1 + 144);
  *(_BYTE *)(v4 + 208) = 0;
  if (*(_BYTE *)(a1 + 208))
  {
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(a1 + 160);
    *(_QWORD *)(v4 + 176) = *(_QWORD *)(a1 + 176);
    *(_QWORD *)(a1 + 168) = 0;
    *(_QWORD *)(a1 + 176) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    v6 = (unsigned __int128 *)(a1 + 192);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    *(_OWORD *)(v4 + 192) = v7;
    *(_BYTE *)(v4 + 208) = 1;
  }
  *(_BYTE *)(v4 + 224) = 0;
  *(_BYTE *)(v4 + 248) = 0;
  if (*(_BYTE *)(a1 + 248))
  {
    *(_OWORD *)(v4 + 224) = *(_OWORD *)(a1 + 224);
    *(_QWORD *)(v4 + 240) = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_BYTE *)(v4 + 248) = 1;
  }
  *(_QWORD *)v4 = &off_24EC68A68;
  *a2 = &off_24EC6A3B8;
  a2[1] = v4;
  result = (_QWORD *)operator new();
  *result = &off_24EC6A4B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_22408E718(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_22408E734(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68AE8;
  sub_2231AD66C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22408E7AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68AE8;
  sub_2231AD66C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22408E824(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_22408E82C(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t i;
  uint64_t v11;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24EC6A3F8, (const struct __class_type_info *)&unk_24EC68AA8, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = a1[3];
      if (v5 != *(_QWORD *)(result + 24))
        return 0;
      v6 = (unsigned __int8 *)a1[4];
      v7 = *(unsigned __int8 **)(result + 32);
      v8 = &v6[v5];
      v9 = &v7[v5];
      if (v5)
      {
        for (i = v5 - 1; ; --i)
        {
          v11 = i;
          if (*v6 != *v7)
            break;
          ++v6;
          ++v7;
          if (!v11)
          {
            v7 = v9;
            v6 = v8;
            return v6 == v8 && v7 == v9;
          }
        }
        return 0;
      }
      return v6 == v8 && v7 == v9;
    }
  }
  return result;
}

void sub_22408E8F4(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_22408F9C8();
  sub_22408E9A8(a1);
  sub_2231AC984(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 48, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_22408E98C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_22408E9A8(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_255790690);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_255790690))
  {
    v4 = sub_22408F7CC();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_2231AD150((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_223197FA4(&xmmword_255790678, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_255790688 = *(_QWORD *)(v9 - 8);
      xmmword_255790678 = v7;
    }
    sub_22319BB48(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790678, &dword_22314D000);
    __cxa_guard_release(&qword_255790690);
  }
  return sub_22408FD88(&xmmword_255790678, (uint64_t)"{", a1 + 8, (uint64_t)"}");
}

void sub_22408EAB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_22319BB48(&a9);
  __cxa_guard_abort(&qword_255790690);
  _Unwind_Resume(a1);
}

void sub_22408EAD8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790690);
  _Unwind_Resume(a1);
}

void sub_22408EAF0(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 9;
}

void sub_22408EB1C(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_22413ADAC(lpsrc, 9, a2);
}

_QWORD *sub_22408EB54(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68AE8;
  sub_2231AD66C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_22408EBCC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = &off_24EC68AE8;
  sub_2231AD66C((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  JUMPOUT(0x227684CE8);
}

uint64_t sub_22408EC44(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_22408F268();
  return sub_22408ED98(v2, (uint64_t)"{", a1 + 8, (uint64_t)",", a1 + 48, (uint64_t)"}");
}

uint64_t sub_22408EC9C(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_22408EFC4((uint64_t)v5, (uint64_t)v2, a1 + 8);
  if (v3 == -1)
    sub_22316DD70();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66D10[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24EC66CF8[v3])(v5, v2);
  return result;
}

void sub_22408ED34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24EC66CF8[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_22408ED6C(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_22408ED98(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_2231ABB0C((uint64_t *)&v19, (uint64_t)&__dst);
  sub_22408EFC4((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  sub_2231AB90C((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v16])(&p_dst, &__dst);
  return result;
}

void sub_22408EF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EF74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408EFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_223195210(v5);
  v21[0] = v5;
  sub_224507988((_QWORD *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_22316DBC0();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x227684BE0](v14 + 128);
    MEMORY[0x227684CE8](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_22316DD70();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24EC66CE0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_22408F214(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x227684CE8](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_22408F238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22408F254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_22456E764((uint64_t *)va);
  _Unwind_Resume(a1);
}

__int128 *sub_22408F268()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790550);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790550))
    return &xmmword_255790538;
  v2 = sub_22408F344();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_223197FA4(&xmmword_255790538, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_255790548 = v2->__r_.__value_.__r.__words[2];
    xmmword_255790538 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790538, &dword_22314D000);
  __cxa_guard_release(&qword_255790550);
  return &xmmword_255790538;
}

void sub_22408F32C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790550);
  _Unwind_Resume(a1);
}

std::string *sub_22408F344()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790570);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790570))
    return &stru_255790558;
  sub_22408F5E8((uint64_t)__p);
  sub_22408F434((char *)__p, &stru_255790558);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790558, &dword_22314D000);
  __cxa_guard_release(&qword_255790570);
  return &stru_255790558;
}

void sub_22408F3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790570);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790570);
  _Unwind_Resume(a1);
}

void sub_22408F434(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_22408F7CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_223197FA4(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_2231AC788();
  if (*((char *)v6 + 23) < 0)
  {
    sub_223197FA4(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_22319BD1C(&__p, (uint64_t)__dst, 2uLL);
  sub_2245730F4(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_22408F598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_22319BB48((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_22408F5E8(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_2557905F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2557905F0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Blob>]", qword_2557905D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557905D8, &dword_22314D000);
    __cxa_guard_release(&qword_2557905F0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_255790610);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_255790610))
  {
    v5 = sub_2231A38CC(qword_2557905D8, "<", 0);
    sub_2231A37C8(qword_2557905D8, 0, v5, qword_2557905F8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557905F8, &dword_22314D000);
    __cxa_guard_release(&qword_255790610);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_255790630);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_255790630))
  {
    sub_224573040((uint64_t)qword_2557905F8, (uint64_t)&xmmword_255790618);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790618, &dword_22314D000);
    __cxa_guard_release(&qword_255790630);
  }
  if (byte_25579062F < 0)
  {
    sub_223197FA4((_BYTE *)a1, (void *)xmmword_255790618, *((unint64_t *)&xmmword_255790618 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_255790618;
    *(_QWORD *)(a1 + 16) = unk_255790628;
  }
}

void sub_22408F784(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790630);
  _Unwind_Resume(a1);
}

void sub_22408F79C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790610);
  _Unwind_Resume(a1);
}

void sub_22408F7B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557905F0);
  _Unwind_Resume(a1);
}

__int128 *sub_22408F7CC()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790590);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790590))
    return &xmmword_255790578;
  v2 = (char *)sub_22408F8A8();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_255790578, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_255790588 = *((_QWORD *)v2 + 2);
    xmmword_255790578 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790578, &dword_22314D000);
  __cxa_guard_release(&qword_255790590);
  return &xmmword_255790578;
}

void sub_22408F890(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_255790590);
  _Unwind_Resume(a1);
}

void *sub_22408F8A8()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2557905B0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557905B0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Blob]", qword_255790598);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_255790598, &dword_22314D000);
    __cxa_guard_release(&qword_2557905B0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2557905D0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2557905D0))
    return &unk_2557905B8;
  sub_224573040((uint64_t)qword_255790598, (uint64_t)&unk_2557905B8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_2557905B8, &dword_22314D000);
  __cxa_guard_release(&qword_2557905D0);
  return &unk_2557905B8;
}

void sub_22408F998(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557905D0);
  _Unwind_Resume(a1);
}

void sub_22408F9B0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557905B0);
  _Unwind_Resume(a1);
}

std::string *sub_22408F9C8()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_255790650);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_255790650))
  {
    sub_223174DE4(v9, "viz::PackageData");
    v2 = sub_22408F7CC();
    if (*((char *)v2 + 23) < 0)
    {
      sub_223197FA4(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_22408FC90();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_223197FA4(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_22319BD1C(v8, (uint64_t)__dst, 4uLL);
    sub_2245730F4((char *)v9, (uint64_t *)v8, &stru_255790638, v6, v7);
    sub_22319BB48(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790638, &dword_22314D000);
        __cxa_guard_release(&qword_255790650);
        return &stru_255790638;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_255790638;
}

void sub_22408FBAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_22319BB48(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_255790650);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_255790650);
  _Unwind_Resume(a1);
}

std::string *sub_22408FC90()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_255790670);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_255790670))
    return &stru_255790658;
  sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 9U]", __p);
  sub_22457326C((uint64_t)__p, &stru_255790658);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_255790658, &dword_22314D000);
  __cxa_guard_release(&qword_255790670);
  return &stru_255790658;
}

void sub_22408FD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_255790670);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_255790670);
  _Unwind_Resume(a1);
}

uint64_t sub_22408FD88(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_223197FA4(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_2231ABB0C((uint64_t *)&v14, (uint64_t)&__dst);
  sub_22408EFC4((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_22316DD70();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24EC66D70[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_22316DD70();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24EC66D10[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24EC66CF8[v11])(&p_dst, &__dst);
  return result;
}

void sub_22408FEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408FEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408FEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408FF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408FF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_22319B964((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_22408FF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  sub_22454024C(a2);
  v14 = "version";
  v15 = 7;
  LODWORD(v16) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v16);
  v6 = *(_QWORD *)(a3 + 8);
  v14 = *(const char **)a3;
  v15 = v6;
  v7 = *(std::__shared_weak_count **)(a3 + 16);
  v16 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v17 = *(_OWORD *)(a3 + 24);
  sub_224090088(a2, (uint64_t)&v14);
  v10 = v16;
  if (v16)
  {
    v11 = (unint64_t *)&v16->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(a2 + 56) = v13 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_224090044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_224090088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _BYTE *v6;
  _QWORD *v7;
  BOOL v8;
  BOOL v9;
  void **v10;
  unsigned __int8 *v11;
  int v12;
  void **v13;
  void **v14;
  size_t v15;
  int v16;
  size_t v17;
  void **v18;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "byte_size";
    v4 = a1 + 72;
    v6 = (_BYTE *)(a1 + 88);
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 9;
    v7 = (_QWORD *)(a1 + 80);
    if (!v5)
      *v6 = 1;
    goto LABEL_13;
  }
  v7 = (_QWORD *)(a1 + 80);
  v4 = a1 + 72;
  v6 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v8 = *(_QWORD *)(a1 + 80) == 7;
  else
    v8 = 0;
  if (!v8
    || (**(_DWORD **)v4 == *(_DWORD *)"version"
      ? (v9 = *(_DWORD *)(*(_QWORD *)v4 + 3) == *(_DWORD *)"sion")
      : (v9 = 0),
        !v9))
  {
LABEL_13:
    v10 = *(void ***)a2;
    LOBYTE(v17) = 6;
    v18 = v10;
    v11 = (unsigned __int8 *)sub_22453FEA0(a1);
    v12 = *v11;
    *v11 = 6;
    LOBYTE(v17) = v12;
    v13 = (void **)*((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v18;
    v18 = v13;
    sub_22345337C(&v18, v12);
  }
  v15 = *(_QWORD *)(a2 + 24);
  v14 = *(void ***)(a2 + 32);
  if (v15
    && !v14
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = v15;
  v18 = v14;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v16 = *v6;
    *(_QWORD *)v4 = "bytes";
    *v7 = 5;
    if (!v16)
      *v6 = 1;
  }
  sub_2245403C8(a1, &v17);
}

void sub_22409021C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_22345337C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_224090234(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  uint64_t *v13;
  uint64_t *v14[2];
  char v15;

  v4 = *(_QWORD *)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  v12 = *(_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v8 + 40))
  {
    v14[0] = (uint64_t *)(v8 + 16);
    sub_22455B1CC(v14, v4);
  }
  else
  {
    sub_22455B4D4();
  }
  if ((_QWORD)v12
    && !*((_QWORD *)&v12 + 1)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v9 + 40))
  {
    v13 = (uint64_t *)(v9 + 16);
    LODWORD(v14[0]) = v12;
    v14[1] = *((uint64_t **)&v12 + 1);
    sub_22455970C((uint64_t)&v15, &v13, (unsigned int *)v14);
  }
  else
  {
    if (v12 > 0xFF)
    {
      if (WORD1(v12))
      {
        LOBYTE(v14[0]) = -58;
        *(_DWORD *)((char *)v14 + 1) = bswap32(v12);
      }
      else
      {
        LOBYTE(v14[0]) = -59;
        *(_WORD *)((char *)v14 + 1) = bswap32(v12) >> 16;
      }
      std::ostream::write();
    }
    else
    {
      LOBYTE(v14[0]) = -60;
      BYTE1(v14[0]) = v12;
      std::ostream::write();
    }
    std::ostream::write();
  }
  if (v5)
  {
    v10 = (unint64_t *)&v5->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_224090404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223197300((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224090418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  sub_22453FAE0(a2);
  v14 = "version";
  v15 = 7;
  LODWORD(v16) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v16);
  v6 = *(_QWORD *)(a3 + 8);
  v14 = *(const char **)a3;
  v15 = v6;
  v7 = *(std::__shared_weak_count **)(a3 + 16);
  v16 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v17 = *(_OWORD *)(a3 + 24);
  sub_224090570(a2, (uint64_t *)&v14);
  v10 = v16;
  if (v16)
  {
    v11 = (unint64_t *)&v16->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(a2 + 56) = v13 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_22409052C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_224090570(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  _BYTE *v6;
  _QWORD *v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  int v16;
  size_t v17;
  uint64_t v18;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "byte_size";
    v4 = a1 + 72;
    v6 = (_BYTE *)(a1 + 88);
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 9;
    v7 = (_QWORD *)(a1 + 80);
    if (!v5)
      *v6 = 1;
    goto LABEL_13;
  }
  v7 = (_QWORD *)(a1 + 80);
  v4 = a1 + 72;
  v6 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v8 = *(_QWORD *)(a1 + 80) == 7;
  else
    v8 = 0;
  if (!v8
    || (**(_DWORD **)v4 == *(_DWORD *)"version"
      ? (v9 = *(_DWORD *)(*(_QWORD *)v4 + 3) == *(_DWORD *)"sion")
      : (v9 = 0),
        !v9))
  {
LABEL_13:
    v10 = *a2;
    LOBYTE(v17) = 6;
    v18 = v10;
    v11 = (unsigned __int8 *)sub_22453F8B8(a1);
    v12 = *v11;
    *v11 = 6;
    LOBYTE(v17) = v12;
    v13 = *((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v18;
    v18 = v13;
    sub_223454278(&v18, v12);
  }
  v15 = a2[3];
  v14 = a2[4];
  if (v15
    && !v14
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v17 = v15;
  v18 = v14;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v16 = *v6;
    *(_QWORD *)v4 = "bytes";
    *v7 = 5;
    if (!v16)
      *v6 = 1;
  }
  sub_22453FC5C(a1, &v17);
}

void sub_224090704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_223454278(v9, a9);
  _Unwind_Resume(a1);
}

void sub_22409071C(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v3 = *(std::__shared_weak_count **)(a2 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v9 = *(_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v10) = *(_BYTE *)(a1 + 32);
    sub_2231813E8(v6, (uint64_t)&v10, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  if ((_QWORD)v9
    && !*((_QWORD *)&v9 + 1)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v10 = v9;
  sub_22454FB5C(a1, (std::string::size_type *)&v10);
  if (v3)
  {
    v7 = (unint64_t *)&v3->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_224090850(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223197300((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_224090864(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t __src;
  uint64_t v12;
  std::__shared_weak_count *v13;
  __int128 v14;

  v3 = a2[1];
  __src = *a2;
  v12 = v3;
  v4 = (std::__shared_weak_count *)a2[2];
  v13 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v14 = *(_OWORD *)(a2 + 3);
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v12, 8);
  v7 = v14;
  if ((_QWORD)v14
    && !*((_QWORD *)&v14 + 1)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  sub_224501B60(a1 + 24, *(char **)(a1 + 32), *((char **)&v7 + 1), (char *)(*((_QWORD *)&v7 + 1) + v7), v7);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_22409098C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223197300((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2240909A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD v11[2];
  std::__shared_weak_count *v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 8);
  v11[0] = *(_QWORD *)a2;
  v11[1] = v3;
  v4 = *(std::__shared_weak_count **)(a2 + 16);
  v12 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v13 = *(_OWORD *)(a2 + 24);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a1 + 120))(a1, v11);
  v7 = v13;
  if ((_QWORD)v13
    && !*((_QWORD *)&v13 + 1)
    && sub_224573870("/Library/Caches/com.apple.xbs/Sources/Recon3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_22457406C))
  {
    abort();
  }
  v14 = v7;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a1 + 272))(a1, &v14);
  v8 = v12;
  if (v12)
  {
    v9 = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_224090ABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_223197300((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_224090AD0(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544628(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451CAD4(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_224090BCC((uint64_t)&v11, a1, a2);
  else
    sub_224090D38(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

void sub_224090BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_224506BA4((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_224090ED4(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224090D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223197300((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224090D1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224090D38(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_22451CAD4(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_22316E078();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2245449F8(v10, (uint64_t)v15);
  sub_224506BA4((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224090EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224090ED4(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_22451CAD4(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_22316E078();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2245448E0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2245449F8(v10, (uint64_t)v15);
  sub_224506BA4((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22409104C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_224091070(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;
  char v8;

  v7 = 2;
  sub_224554038(a1[6], &v7);
  if (v7 <= 1)
  {
    sub_224091148((uint64_t)&v8, (uint64_t)a1, a2);
    return a1;
  }
  else
  {
    sub_2231B1308(a1 + 2);
    sub_2240912B4((uint64_t)a1, a2);
    v4 = a1[4];
    v5 = *(_QWORD *)(v4 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v4 - 8);
    if (v5)
      (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v5);
    a1[4] -= 16;
    return a1;
  }
}

void sub_224091148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_224506BA4((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_224091434(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224091284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223197300((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224091298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240912B4(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::bad_cast *exception;
  std::bad_cast *v12;
  __int128 v13;
  void *__p;
  char *v15;
  char *v16;
  void *__src[2];
  __int128 v18;

  sub_2245543E8(*(_QWORD *)(a1 + 48), (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_22316E078();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v16 = &v5[v4];
    bzero(v5, v4);
    v15 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a1 + 48);
  LODWORD(__src[0]) = 0;
  __src[1] = 0;
  sub_224554E40(v7, (uint64_t)__src);
  if (v6 - v5 != LODWORD(__src[0]))
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v12 = std::bad_cast::bad_cast(exception);
    v12->__vftable = (std::bad_cast_vtbl *)&off_24EC79AF8;
    __cxa_throw(v12, (struct type_info *)&unk_24EC79710, (void (*)(void *))std::exception::~exception);
  }
  memcpy(v5, __src[1], v6 - v5);
  sub_224506BA4((uint64_t)__src, (uint64_t)&__p);
  v13 = v18;
  v8 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__src;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_OWORD *)(a2 + 24) = v13;
  if (__p)
  {
    v15 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224091410(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224091434(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::bad_cast *exception;
  std::bad_cast *v12;
  __int128 v13;
  void *__p;
  char *v15;
  char *v16;
  void *__src[2];
  __int128 v18;

  sub_2245543E8(*(_QWORD *)(a1 + 48), (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_22316E078();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v16 = &v5[v4];
    bzero(v5, v4);
    v15 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a1 + 48);
  LODWORD(__src[0]) = 0;
  __src[1] = 0;
  sub_224554E40(v7, (uint64_t)__src);
  if (v6 - v5 != LODWORD(__src[0]))
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v12 = std::bad_cast::bad_cast(exception);
    v12->__vftable = (std::bad_cast_vtbl *)&off_24EC79AF8;
    __cxa_throw(v12, (struct type_info *)&unk_24EC79710, (void (*)(void *))std::exception::~exception);
  }
  memcpy(v5, __src[1], v6 - v5);
  sub_224506BA4((uint64_t)__src, (uint64_t)&__p);
  v13 = v18;
  v8 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__src;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_OWORD *)(a2 + 24) = v13;
  if (__p)
  {
    v15 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224091590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2240915B4(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_224544138(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_22451C444(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24EC7AC38;
    __cxa_throw(exception, (struct type_info *)&unk_24EC7AC50, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_2240916B0((uint64_t)&v11, a1, a2);
  else
    sub_22409181C(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

void sub_2240916B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_224506BA4((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_2240919B8(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_2240917EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223197300((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224091800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_22409181C(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_22451C444(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_22316E078();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_224544508(v10, (uint64_t)v15);
  sub_224506BA4((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224091994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240919B8(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_22451C444(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_22316E078();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2245443F0((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_224544508(v10, (uint64_t)v15);
  sub_224506BA4((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224091B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224091B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_224506BA4((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_224091DEC(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224091C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223197300((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224091CA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224091CC0(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  sub_224550D98(a1, (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_22316E078();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  sub_2245525C0(a1, (uint64_t)v11);
  sub_224506BA4((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224091DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224091DEC(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  sub_224550D98(a1, (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_22316E078();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  sub_2245525C0(a1, (uint64_t)v11);
  sub_224506BA4((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224091EF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224091F18(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_22409200C((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_2244FFA6C(a2);
    sub_224092178(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_224091FF8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_22409200C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_224506BA4((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_224092394(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224092148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223197300((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_22409215C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224092178(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  size_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  size_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  std::logic_error *v16;
  std::logic_error *exception;
  __int128 v18;
  void *__p;
  char *v20;
  char *v21;
  _OWORD v22[2];

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  *(_QWORD *)a2 = v8;
  v9 = a1[6] + 8;
  a1[6] = v9;
  __p = 0;
  v20 = 0;
  v21 = 0;
  if (v8)
  {
    if ((v8 & 0x8000000000000000) != 0)
      sub_22316E078();
    v10 = (char *)operator new(v8);
    __p = v10;
    v21 = &v10[v8];
    bzero(v10, v8);
    v20 = &v10[v8];
    v11 = a1[7];
    v4 = v11 >= v9;
    v12 = v11 - v9;
    if (!v4)
      v12 = 0;
    if (v12 < v8)
    {
      v16 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v16, "Not enough data to read binary blob");
      v16->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
      __cxa_throw(v16, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
    }
  }
  else
  {
    v10 = 0;
    v8 = 0;
  }
  memcpy(v10, (const void *)(a1[3] + v9), v8);
  a1[6] = v8 + v9;
  sub_224506BA4((uint64_t)v22, (uint64_t)&__p);
  v18 = v22[1];
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v22[0];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  *(_OWORD *)(a2 + 24) = v18;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_22409234C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224092394(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  size_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  size_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  std::logic_error *v16;
  std::logic_error *exception;
  __int128 v18;
  void *__p;
  char *v20;
  char *v21;
  _OWORD v22[2];

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_223198268(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  *(_QWORD *)a2 = v8;
  v9 = a1[6] + 8;
  a1[6] = v9;
  __p = 0;
  v20 = 0;
  v21 = 0;
  if (v8)
  {
    if ((v8 & 0x8000000000000000) != 0)
      sub_22316E078();
    v10 = (char *)operator new(v8);
    __p = v10;
    v21 = &v10[v8];
    bzero(v10, v8);
    v20 = &v10[v8];
    v11 = a1[7];
    v4 = v11 >= v9;
    v12 = v11 - v9;
    if (!v4)
      v12 = 0;
    if (v12 < v8)
    {
      v16 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v16, "Not enough data to read binary blob");
      v16->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
      __cxa_throw(v16, (struct type_info *)off_24EC1E390, MEMORY[0x24BEDAB00]);
    }
  }
  else
  {
    v10 = 0;
    v8 = 0;
  }
  memcpy(v10, (const void *)(a1[3] + v9), v8);
  a1[6] = v8 + v9;
  sub_224506BA4((uint64_t)v22, (uint64_t)&__p);
  v18 = v22[1];
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v22[0];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  *(_OWORD *)(a2 + 24) = v18;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224092568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2240925B0(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;
  char v13;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_2240926DC();
      sub_22455C3A8((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_224092A44(a2, a3);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  if (v9 <= 1)
    sub_2240928D8((uint64_t)&v13, a2, a3);
  else
    sub_224092A44(a2, a3);
}

__int128 *sub_2240926DC()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_2557906B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_2557906B0))
    return &xmmword_255790698;
  v2 = (char *)sub_2240927B8();
  if (v2[23] < 0)
  {
    sub_223197FA4(&xmmword_255790698, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_2557906A8 = *((_QWORD *)v2 + 2);
    xmmword_255790698 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_255790698, &dword_22314D000);
  __cxa_guard_release(&qword_2557906B0);
  return &xmmword_255790698;
}

void sub_2240927A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557906B0);
  _Unwind_Resume(a1);
}

void *sub_2240927B8()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_2557906D0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_2557906D0))
  {
    sub_224572DCC("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::BlobSample]", qword_2557906B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_2557906B8, &dword_22314D000);
    __cxa_guard_release(&qword_2557906D0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_2557906F0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_2557906F0))
    return &unk_2557906D8;
  sub_224573040((uint64_t)qword_2557906B8, (uint64_t)&unk_2557906D8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_2557906D8, &dword_22314D000);
  __cxa_guard_release(&qword_2557906F0);
  return &unk_2557906D8;
}

void sub_2240928A8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557906F0);
  _Unwind_Resume(a1);
}

void sub_2240928C0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_2557906D0);
  _Unwind_Resume(a1);
}

void sub_2240928D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_224506BA4((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_224092B80(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_224092A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_223197300((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_224092A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224092A44(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_22316E078();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a1 + 272))(a1, v11);
  sub_224506BA4((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224092B5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_224092B80(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_22316E078();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a1 + 272))(a1, v11);
  sub_224506BA4((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_224092C98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_224092CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  _BOOL8 v11;
  _QWORD v13[5];
  uint64_t *v14;
  _QWORD v15[5];
  _QWORD *v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_223B8944C(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_223B89234(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    sub_223B8901C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_223B8944C(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_223B89234(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_22316DD70();
    sub_223B8901C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = &v23;
  if (!sub_224123BEC((uint64_t)&v17, v15, v13))
    goto LABEL_24;
  if (!*((_BYTE *)v16 + 24) || !*((_BYTE *)v14 + 24))
  {
    if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
      goto LABEL_22;
LABEL_24:
    v11 = 0;
    goto LABEL_25;
  }
  v8 = (unsigned __int8 *)*v16;
  v9 = (unsigned __int8 *)v16[1];
  v10 = (unsigned __int8 *)*v14;
  if (&v9[-*v16] != (unsigned __int8 *)(v14[1] - *v14))
    goto LABEL_24;
  if (v8 != v9)
  {
    while (sub_224122C08(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_24;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_24;
  v11 = sub_22454CAFC((unsigned __int8 *)(a1 + 208), (_BYTE *)(a2 + 208)) == 0;
LABEL_25:
  sub_2231AD66C((uint64_t)v18);
  sub_2231AD66C((uint64_t)v24);
  return v11;
}

void sub_224092EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a23);
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_224092ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_2231AD66C((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_224092EE8(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC605E8, 0);
  if (v4)
  {
    sub_2240932F4(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC1FC00, 0);
    if (v5)
    {
      sub_2240935F4(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC60670, 0);
      if (v6)
      {
        sub_224093874(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79080, (const struct __class_type_info *)&unk_24EC606B8, 0);
        if (v7)
        {
          sub_224093B74(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC776C0)
            sub_224093D8C(&v9, (uint64_t)a1);
          else
            sub_22409304C(&v8, a1);
        }
      }
    }
  }
}

void sub_22409304C(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BACE24((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_223BACE24((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BAC79C((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_223BAC79C((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_223BABEC8((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_223BABEC8((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_224034BF4(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_224034BF4(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_2240932F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8F208(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22454024C(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224542048(a2, &v18);
      sub_223B8D388(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22454024C(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224542048(a2, &v18);
    sub_223B8E898(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22454024C(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224542048(a2, &v18);
  sub_2240336F0(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_2240935F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_22455A7EC(&v20, 4u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v7 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B979A0(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_22455A7EC(&v20, 5u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v8 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B97884(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_22455A7EC(&v20, 6u);
    }
    else
    {
      sub_22455AA60((uint64_t)&v20, v6 + 8);
    }
    sub_224555278(*(_QWORD *)(a2 + 24));
    sub_223B970F8(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_224554D6C((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_22455A7EC(&v20, 2u);
  }
  else
  {
    sub_22455AA60((uint64_t)&v20, v14 + 8);
  }
  sub_224555278(*(_QWORD *)(a2 + 24));
  sub_224033FF4(a2, (char *)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_224554D6C((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_224093874(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B9970C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_22453FAE0(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_224540500(a2, &v18);
      sub_223B98294(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_22453FAE0(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_224540500(a2, &v18);
    sub_223B98FC8(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_22453FAE0(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_224540500(a2, &v18);
  sub_224034120(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_224093B74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA081C(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_22316DD70();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_2231813E8(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_223B9FBAC(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_2231813E8(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_223BA0278(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_2231813E8(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_224034A24(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_2231813E8(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_2231813E8(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_224093D8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA6918(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA67FC(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_22316DD70();
    __src = 6;
    sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_2244FF590((_QWORD *)a2);
    sub_223BA5FAC(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_224501B60(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_2244FF590((_QWORD *)a2);
  sub_224034B04(a2, v3 + 200);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_224093F44(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60740, 0);
  if (v4)
  {
    sub_2240945E8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC20CC0, 0);
    if (v5)
    {
      sub_224094A98(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC607C8, 0);
      if (v6)
      {
        sub_224094F24(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24EC79068, (const struct __class_type_info *)&unk_24EC60800, 0);
        if (v7)
        {
          sub_2240953D4(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24EC77900)
            sub_224095A30(&v9, a1);
          else
            sub_2240940A8(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_2240940A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  _BYTE *v29[27];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v29);
    sub_223B87C9C((uint64_t)&v30, (uint64_t *)v29);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)&v30);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v15 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v43;
LABEL_45:
    *((_QWORD *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v29);
  sub_223B87C9C((uint64_t)&v30, (uint64_t *)v29);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)&v30);
  if (v45)
  {
LABEL_38:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v23 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_2231AD66C((uint64_t)v29);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v29[0] = *(_BYTE **)(a2 + 8);
  v25 = (int)v29[0];
  LODWORD(v30) = 6;
  (*(void (**)(uint64_t, uint64_t *))(v24 + 104))(a2, &v30);
  if (v25 < 1)
  {
    if (v30 < 3)
      sub_223BD7864((uint64_t)&v30, a2, v4, v30);
    else
      sub_223BD7AD8(a2, v4, v30);
  }
  else
  {
    sub_223BD7174((int *)v29, a2, v4, v30);
  }
  v26 = *(_QWORD *)a2;
  v30 = *(_QWORD *)(a2 + 8);
  v27 = v30;
  LODWORD(v29[0]) = 2;
  (*(void (**)(uint64_t, _BYTE **))(v26 + 104))(a2, v29);
  if (v27 < 1)
  {
    if (LODWORD(v29[0]) < 2)
    {
      sub_223BDEADC((uint64_t)v29, (_BYTE *)a2, v3 + 200);
    }
    else
    {
      v29[0] = (_BYTE *)(v3 + 200);
      sub_223BDEF78((_BYTE *)a2, v29);
      sub_223BDEC60(*(unsigned __int8 *)(v3 + 200), a2, v3 + 200);
    }
  }
  else
  {
    sub_223BDE794((int *)&v30, (_BYTE *)a2, (_BYTE *)(v3 + 200), v29[0]);
  }
}

void sub_2240945A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240945E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BB4B40(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224034CD4((uint64_t)v27, a2, (_BYTE *)(v3 + 200));
}

void sub_224094A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224094A98(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v25);
    sub_223B87C9C((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v25);
  sub_223B87C9C((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_2231AD66C((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  sub_223BBD12C((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_224554038(a2[6], v25);
  sub_2231B8A34((uint64_t)v25, (uint64_t)a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_224094EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_224094F24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)v27);
    sub_223B87C9C((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)v27);
  sub_223B87C9C((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_2231AD66C((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_223BBD758(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_224035AAC((uint64_t)v27, a2, (_BYTE *)(v3 + 200));
}

void sub_22409538C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_22316DC48(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_2240953D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  void *__p;
  uint64_t v36;
  char v37;
  _BYTE v38[8];
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_223B89234(*a1 + 16, (uint64_t)&__p);
    sub_223B87C9C((uint64_t)v38, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_223BB47F0(v4, (uint64_t)v38);
        if (!v53)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v6))(&v34, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v39;
    *(_BYTE *)(v3 + 64) = 0;
    if (v42)
    {
      v8 = v41;
      *(_OWORD *)(v3 + 40) = v40;
      *(_QWORD *)(v3 + 56) = v8;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v44;
    v10 = v43;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v47)
    {
      v11 = v46;
      *(_OWORD *)(v3 + 96) = v45;
      *(_QWORD *)(v3 + 112) = v11;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v50)
    {
      v12 = v49;
      *(_OWORD *)(v3 + 128) = v48;
      *(_QWORD *)(v3 + 144) = v12;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v53;
    if (v53)
    {
      *(_OWORD *)(v3 + 160) = v51;
      *(_QWORD *)(v3 + 176) = v52;
      v51 = 0uLL;
      v52 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v51;
    if (!(_QWORD)v51)
      goto LABEL_46;
    v15 = *((_QWORD *)&v51 + 1);
    v16 = (void *)v51;
    if (*((_QWORD *)&v51 + 1) == (_QWORD)v51)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v51;
LABEL_45:
    *((_QWORD *)&v51 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_22316DD70();
  sub_223B8944C(*a1 + 16, (uint64_t)&__p);
  sub_223B87C9C((uint64_t)v38, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))*(&off_24EC66CC8 + v7))(&v34, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v39;
    *(_BYTE *)(v3 + 64) = 0;
    if (v42)
    {
      v17 = v41;
      *(_OWORD *)(v3 + 40) = v40;
      *(_QWORD *)(v3 + 56) = v17;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v44;
    v19 = v43;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v47)
    {
      v20 = v46;
      *(_OWORD *)(v3 + 96) = v45;
      *(_QWORD *)(v3 + 112) = v20;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v50)
    {
      v21 = v49;
      *(_OWORD *)(v3 + 128) = v48;
      *(_QWORD *)(v3 + 144) = v21;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v53;
    if (v53)
    {
      *(_OWORD *)(v3 + 160) = v51;
      *(_QWORD *)(v3 + 176) = v52;
      v51 = 0uLL;
      v52 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_223BB47F0(v4, (uint64_t)v38);
  if (v53)
  {
LABEL_38:
    v14 = v51;
    if (!(_QWORD)v51)
      goto LABEL_46;
    v23 = *((_QWORD *)&v51 + 1);
    v16 = (void *)v51;
    if (*((_QWORD *)&v51 + 1) == (_QWORD)v51)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v50 && SHIBYTE(v49) < 0)
    operator delete((void *)v48);
  if (v47 && SHIBYTE(v46) < 0)
    operator delete((void *)v45);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  sub_2231AD66C((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_22316DD70();
LABEL_56:
  LODWORD(__p) = 6;
  sub_2245508F0(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_223BC4F50((uint64_t)&__p, a2, v4, v25);
  else
    sub_223BC5140(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v37 < 0)
      {
        if (v36 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v31 = 0;
          if (v37 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v37 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v31 = 1;
      if (v37 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_2245508F0(a2, &__p);
  v26 = (_BYTE *)(v3 + 200);
  v27 = __p;
  if (__p >= 2)
    v28 = 2;
  else
    v28 = __p;
  if (v28 < 2)
  {
    sub_223BCADD8((uint64_t)&__p, a2, (uint64_t)v26);
  }
  else
  {
    LOBYTE(__p) = 0;
    sub_22454FFAC(a2, &__p);
    v29 = __p;
    *v26 = (_BYTE)__p;
    sub_223BCAF5C(v29, a2, (uint64_t)v26);
  }
  if (v27 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_2245523C0(a2, (uint64_t)&__p);
      if (v37 < 0)
      {
        if (v36 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v33 = 0;
          if (v37 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v37 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v33 = 1;
      if (v37 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v32 = 0;
      else
        v32 = v33;
    }
    while ((v32 & 1) != 0);
  }
}

